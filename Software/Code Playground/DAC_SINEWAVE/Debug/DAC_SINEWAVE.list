
DAC_SINEWAVE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007f64  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004f8  08008138  08008138  00018138  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008630  08008630  00020088  2**0
                  CONTENTS
  4 .ARM          00000008  08008630  08008630  00018630  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008638  08008638  00020088  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008638  08008638  00018638  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800863c  0800863c  0001863c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000088  20000000  08008640  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00003430  20000088  080086c8  00020088  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200034b8  080086c8  000234b8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020088  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001451b  00000000  00000000  000200b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000029e9  00000000  00000000  000345d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000f00  00000000  00000000  00036fc0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000dc8  00000000  00000000  00037ec0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000237bc  00000000  00000000  00038c88  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000cfbd  00000000  00000000  0005c444  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000d2abc  00000000  00000000  00069401  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0013bebd  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00004540  00000000  00000000  0013bf38  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000088 	.word	0x20000088
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800811c 	.word	0x0800811c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	2000008c 	.word	0x2000008c
 800020c:	0800811c 	.word	0x0800811c

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003fe:	f1a4 0401 	sub.w	r4, r4, #1
 8000402:	d1e9      	bne.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2uiz>:
 8000b98:	004a      	lsls	r2, r1, #1
 8000b9a:	d211      	bcs.n	8000bc0 <__aeabi_d2uiz+0x28>
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d211      	bcs.n	8000bc6 <__aeabi_d2uiz+0x2e>
 8000ba2:	d50d      	bpl.n	8000bc0 <__aeabi_d2uiz+0x28>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d40e      	bmi.n	8000bcc <__aeabi_d2uiz+0x34>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	fa23 f002 	lsr.w	r0, r3, r2
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bca:	d102      	bne.n	8000bd2 <__aeabi_d2uiz+0x3a>
 8000bcc:	f04f 30ff 	mov.w	r0, #4294967295
 8000bd0:	4770      	bx	lr
 8000bd2:	f04f 0000 	mov.w	r0, #0
 8000bd6:	4770      	bx	lr

08000bd8 <__aeabi_uldivmod>:
 8000bd8:	b953      	cbnz	r3, 8000bf0 <__aeabi_uldivmod+0x18>
 8000bda:	b94a      	cbnz	r2, 8000bf0 <__aeabi_uldivmod+0x18>
 8000bdc:	2900      	cmp	r1, #0
 8000bde:	bf08      	it	eq
 8000be0:	2800      	cmpeq	r0, #0
 8000be2:	bf1c      	itt	ne
 8000be4:	f04f 31ff 	movne.w	r1, #4294967295
 8000be8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bec:	f000 b972 	b.w	8000ed4 <__aeabi_idiv0>
 8000bf0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bf4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bf8:	f000 f806 	bl	8000c08 <__udivmoddi4>
 8000bfc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c00:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c04:	b004      	add	sp, #16
 8000c06:	4770      	bx	lr

08000c08 <__udivmoddi4>:
 8000c08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c0c:	9e08      	ldr	r6, [sp, #32]
 8000c0e:	4604      	mov	r4, r0
 8000c10:	4688      	mov	r8, r1
 8000c12:	2b00      	cmp	r3, #0
 8000c14:	d14b      	bne.n	8000cae <__udivmoddi4+0xa6>
 8000c16:	428a      	cmp	r2, r1
 8000c18:	4615      	mov	r5, r2
 8000c1a:	d967      	bls.n	8000cec <__udivmoddi4+0xe4>
 8000c1c:	fab2 f282 	clz	r2, r2
 8000c20:	b14a      	cbz	r2, 8000c36 <__udivmoddi4+0x2e>
 8000c22:	f1c2 0720 	rsb	r7, r2, #32
 8000c26:	fa01 f302 	lsl.w	r3, r1, r2
 8000c2a:	fa20 f707 	lsr.w	r7, r0, r7
 8000c2e:	4095      	lsls	r5, r2
 8000c30:	ea47 0803 	orr.w	r8, r7, r3
 8000c34:	4094      	lsls	r4, r2
 8000c36:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000c3a:	0c23      	lsrs	r3, r4, #16
 8000c3c:	fbb8 f7fe 	udiv	r7, r8, lr
 8000c40:	fa1f fc85 	uxth.w	ip, r5
 8000c44:	fb0e 8817 	mls	r8, lr, r7, r8
 8000c48:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000c4c:	fb07 f10c 	mul.w	r1, r7, ip
 8000c50:	4299      	cmp	r1, r3
 8000c52:	d909      	bls.n	8000c68 <__udivmoddi4+0x60>
 8000c54:	18eb      	adds	r3, r5, r3
 8000c56:	f107 30ff 	add.w	r0, r7, #4294967295
 8000c5a:	f080 811b 	bcs.w	8000e94 <__udivmoddi4+0x28c>
 8000c5e:	4299      	cmp	r1, r3
 8000c60:	f240 8118 	bls.w	8000e94 <__udivmoddi4+0x28c>
 8000c64:	3f02      	subs	r7, #2
 8000c66:	442b      	add	r3, r5
 8000c68:	1a5b      	subs	r3, r3, r1
 8000c6a:	b2a4      	uxth	r4, r4
 8000c6c:	fbb3 f0fe 	udiv	r0, r3, lr
 8000c70:	fb0e 3310 	mls	r3, lr, r0, r3
 8000c74:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c78:	fb00 fc0c 	mul.w	ip, r0, ip
 8000c7c:	45a4      	cmp	ip, r4
 8000c7e:	d909      	bls.n	8000c94 <__udivmoddi4+0x8c>
 8000c80:	192c      	adds	r4, r5, r4
 8000c82:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c86:	f080 8107 	bcs.w	8000e98 <__udivmoddi4+0x290>
 8000c8a:	45a4      	cmp	ip, r4
 8000c8c:	f240 8104 	bls.w	8000e98 <__udivmoddi4+0x290>
 8000c90:	3802      	subs	r0, #2
 8000c92:	442c      	add	r4, r5
 8000c94:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000c98:	eba4 040c 	sub.w	r4, r4, ip
 8000c9c:	2700      	movs	r7, #0
 8000c9e:	b11e      	cbz	r6, 8000ca8 <__udivmoddi4+0xa0>
 8000ca0:	40d4      	lsrs	r4, r2
 8000ca2:	2300      	movs	r3, #0
 8000ca4:	e9c6 4300 	strd	r4, r3, [r6]
 8000ca8:	4639      	mov	r1, r7
 8000caa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cae:	428b      	cmp	r3, r1
 8000cb0:	d909      	bls.n	8000cc6 <__udivmoddi4+0xbe>
 8000cb2:	2e00      	cmp	r6, #0
 8000cb4:	f000 80eb 	beq.w	8000e8e <__udivmoddi4+0x286>
 8000cb8:	2700      	movs	r7, #0
 8000cba:	e9c6 0100 	strd	r0, r1, [r6]
 8000cbe:	4638      	mov	r0, r7
 8000cc0:	4639      	mov	r1, r7
 8000cc2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cc6:	fab3 f783 	clz	r7, r3
 8000cca:	2f00      	cmp	r7, #0
 8000ccc:	d147      	bne.n	8000d5e <__udivmoddi4+0x156>
 8000cce:	428b      	cmp	r3, r1
 8000cd0:	d302      	bcc.n	8000cd8 <__udivmoddi4+0xd0>
 8000cd2:	4282      	cmp	r2, r0
 8000cd4:	f200 80fa 	bhi.w	8000ecc <__udivmoddi4+0x2c4>
 8000cd8:	1a84      	subs	r4, r0, r2
 8000cda:	eb61 0303 	sbc.w	r3, r1, r3
 8000cde:	2001      	movs	r0, #1
 8000ce0:	4698      	mov	r8, r3
 8000ce2:	2e00      	cmp	r6, #0
 8000ce4:	d0e0      	beq.n	8000ca8 <__udivmoddi4+0xa0>
 8000ce6:	e9c6 4800 	strd	r4, r8, [r6]
 8000cea:	e7dd      	b.n	8000ca8 <__udivmoddi4+0xa0>
 8000cec:	b902      	cbnz	r2, 8000cf0 <__udivmoddi4+0xe8>
 8000cee:	deff      	udf	#255	; 0xff
 8000cf0:	fab2 f282 	clz	r2, r2
 8000cf4:	2a00      	cmp	r2, #0
 8000cf6:	f040 808f 	bne.w	8000e18 <__udivmoddi4+0x210>
 8000cfa:	1b49      	subs	r1, r1, r5
 8000cfc:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000d00:	fa1f f885 	uxth.w	r8, r5
 8000d04:	2701      	movs	r7, #1
 8000d06:	fbb1 fcfe 	udiv	ip, r1, lr
 8000d0a:	0c23      	lsrs	r3, r4, #16
 8000d0c:	fb0e 111c 	mls	r1, lr, ip, r1
 8000d10:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d14:	fb08 f10c 	mul.w	r1, r8, ip
 8000d18:	4299      	cmp	r1, r3
 8000d1a:	d907      	bls.n	8000d2c <__udivmoddi4+0x124>
 8000d1c:	18eb      	adds	r3, r5, r3
 8000d1e:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000d22:	d202      	bcs.n	8000d2a <__udivmoddi4+0x122>
 8000d24:	4299      	cmp	r1, r3
 8000d26:	f200 80cd 	bhi.w	8000ec4 <__udivmoddi4+0x2bc>
 8000d2a:	4684      	mov	ip, r0
 8000d2c:	1a59      	subs	r1, r3, r1
 8000d2e:	b2a3      	uxth	r3, r4
 8000d30:	fbb1 f0fe 	udiv	r0, r1, lr
 8000d34:	fb0e 1410 	mls	r4, lr, r0, r1
 8000d38:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000d3c:	fb08 f800 	mul.w	r8, r8, r0
 8000d40:	45a0      	cmp	r8, r4
 8000d42:	d907      	bls.n	8000d54 <__udivmoddi4+0x14c>
 8000d44:	192c      	adds	r4, r5, r4
 8000d46:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d4a:	d202      	bcs.n	8000d52 <__udivmoddi4+0x14a>
 8000d4c:	45a0      	cmp	r8, r4
 8000d4e:	f200 80b6 	bhi.w	8000ebe <__udivmoddi4+0x2b6>
 8000d52:	4618      	mov	r0, r3
 8000d54:	eba4 0408 	sub.w	r4, r4, r8
 8000d58:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000d5c:	e79f      	b.n	8000c9e <__udivmoddi4+0x96>
 8000d5e:	f1c7 0c20 	rsb	ip, r7, #32
 8000d62:	40bb      	lsls	r3, r7
 8000d64:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000d68:	ea4e 0e03 	orr.w	lr, lr, r3
 8000d6c:	fa01 f407 	lsl.w	r4, r1, r7
 8000d70:	fa20 f50c 	lsr.w	r5, r0, ip
 8000d74:	fa21 f30c 	lsr.w	r3, r1, ip
 8000d78:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000d7c:	4325      	orrs	r5, r4
 8000d7e:	fbb3 f9f8 	udiv	r9, r3, r8
 8000d82:	0c2c      	lsrs	r4, r5, #16
 8000d84:	fb08 3319 	mls	r3, r8, r9, r3
 8000d88:	fa1f fa8e 	uxth.w	sl, lr
 8000d8c:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000d90:	fb09 f40a 	mul.w	r4, r9, sl
 8000d94:	429c      	cmp	r4, r3
 8000d96:	fa02 f207 	lsl.w	r2, r2, r7
 8000d9a:	fa00 f107 	lsl.w	r1, r0, r7
 8000d9e:	d90b      	bls.n	8000db8 <__udivmoddi4+0x1b0>
 8000da0:	eb1e 0303 	adds.w	r3, lr, r3
 8000da4:	f109 30ff 	add.w	r0, r9, #4294967295
 8000da8:	f080 8087 	bcs.w	8000eba <__udivmoddi4+0x2b2>
 8000dac:	429c      	cmp	r4, r3
 8000dae:	f240 8084 	bls.w	8000eba <__udivmoddi4+0x2b2>
 8000db2:	f1a9 0902 	sub.w	r9, r9, #2
 8000db6:	4473      	add	r3, lr
 8000db8:	1b1b      	subs	r3, r3, r4
 8000dba:	b2ad      	uxth	r5, r5
 8000dbc:	fbb3 f0f8 	udiv	r0, r3, r8
 8000dc0:	fb08 3310 	mls	r3, r8, r0, r3
 8000dc4:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000dc8:	fb00 fa0a 	mul.w	sl, r0, sl
 8000dcc:	45a2      	cmp	sl, r4
 8000dce:	d908      	bls.n	8000de2 <__udivmoddi4+0x1da>
 8000dd0:	eb1e 0404 	adds.w	r4, lr, r4
 8000dd4:	f100 33ff 	add.w	r3, r0, #4294967295
 8000dd8:	d26b      	bcs.n	8000eb2 <__udivmoddi4+0x2aa>
 8000dda:	45a2      	cmp	sl, r4
 8000ddc:	d969      	bls.n	8000eb2 <__udivmoddi4+0x2aa>
 8000dde:	3802      	subs	r0, #2
 8000de0:	4474      	add	r4, lr
 8000de2:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000de6:	fba0 8902 	umull	r8, r9, r0, r2
 8000dea:	eba4 040a 	sub.w	r4, r4, sl
 8000dee:	454c      	cmp	r4, r9
 8000df0:	46c2      	mov	sl, r8
 8000df2:	464b      	mov	r3, r9
 8000df4:	d354      	bcc.n	8000ea0 <__udivmoddi4+0x298>
 8000df6:	d051      	beq.n	8000e9c <__udivmoddi4+0x294>
 8000df8:	2e00      	cmp	r6, #0
 8000dfa:	d069      	beq.n	8000ed0 <__udivmoddi4+0x2c8>
 8000dfc:	ebb1 050a 	subs.w	r5, r1, sl
 8000e00:	eb64 0403 	sbc.w	r4, r4, r3
 8000e04:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000e08:	40fd      	lsrs	r5, r7
 8000e0a:	40fc      	lsrs	r4, r7
 8000e0c:	ea4c 0505 	orr.w	r5, ip, r5
 8000e10:	e9c6 5400 	strd	r5, r4, [r6]
 8000e14:	2700      	movs	r7, #0
 8000e16:	e747      	b.n	8000ca8 <__udivmoddi4+0xa0>
 8000e18:	f1c2 0320 	rsb	r3, r2, #32
 8000e1c:	fa20 f703 	lsr.w	r7, r0, r3
 8000e20:	4095      	lsls	r5, r2
 8000e22:	fa01 f002 	lsl.w	r0, r1, r2
 8000e26:	fa21 f303 	lsr.w	r3, r1, r3
 8000e2a:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000e2e:	4338      	orrs	r0, r7
 8000e30:	0c01      	lsrs	r1, r0, #16
 8000e32:	fbb3 f7fe 	udiv	r7, r3, lr
 8000e36:	fa1f f885 	uxth.w	r8, r5
 8000e3a:	fb0e 3317 	mls	r3, lr, r7, r3
 8000e3e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e42:	fb07 f308 	mul.w	r3, r7, r8
 8000e46:	428b      	cmp	r3, r1
 8000e48:	fa04 f402 	lsl.w	r4, r4, r2
 8000e4c:	d907      	bls.n	8000e5e <__udivmoddi4+0x256>
 8000e4e:	1869      	adds	r1, r5, r1
 8000e50:	f107 3cff 	add.w	ip, r7, #4294967295
 8000e54:	d22f      	bcs.n	8000eb6 <__udivmoddi4+0x2ae>
 8000e56:	428b      	cmp	r3, r1
 8000e58:	d92d      	bls.n	8000eb6 <__udivmoddi4+0x2ae>
 8000e5a:	3f02      	subs	r7, #2
 8000e5c:	4429      	add	r1, r5
 8000e5e:	1acb      	subs	r3, r1, r3
 8000e60:	b281      	uxth	r1, r0
 8000e62:	fbb3 f0fe 	udiv	r0, r3, lr
 8000e66:	fb0e 3310 	mls	r3, lr, r0, r3
 8000e6a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e6e:	fb00 f308 	mul.w	r3, r0, r8
 8000e72:	428b      	cmp	r3, r1
 8000e74:	d907      	bls.n	8000e86 <__udivmoddi4+0x27e>
 8000e76:	1869      	adds	r1, r5, r1
 8000e78:	f100 3cff 	add.w	ip, r0, #4294967295
 8000e7c:	d217      	bcs.n	8000eae <__udivmoddi4+0x2a6>
 8000e7e:	428b      	cmp	r3, r1
 8000e80:	d915      	bls.n	8000eae <__udivmoddi4+0x2a6>
 8000e82:	3802      	subs	r0, #2
 8000e84:	4429      	add	r1, r5
 8000e86:	1ac9      	subs	r1, r1, r3
 8000e88:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000e8c:	e73b      	b.n	8000d06 <__udivmoddi4+0xfe>
 8000e8e:	4637      	mov	r7, r6
 8000e90:	4630      	mov	r0, r6
 8000e92:	e709      	b.n	8000ca8 <__udivmoddi4+0xa0>
 8000e94:	4607      	mov	r7, r0
 8000e96:	e6e7      	b.n	8000c68 <__udivmoddi4+0x60>
 8000e98:	4618      	mov	r0, r3
 8000e9a:	e6fb      	b.n	8000c94 <__udivmoddi4+0x8c>
 8000e9c:	4541      	cmp	r1, r8
 8000e9e:	d2ab      	bcs.n	8000df8 <__udivmoddi4+0x1f0>
 8000ea0:	ebb8 0a02 	subs.w	sl, r8, r2
 8000ea4:	eb69 020e 	sbc.w	r2, r9, lr
 8000ea8:	3801      	subs	r0, #1
 8000eaa:	4613      	mov	r3, r2
 8000eac:	e7a4      	b.n	8000df8 <__udivmoddi4+0x1f0>
 8000eae:	4660      	mov	r0, ip
 8000eb0:	e7e9      	b.n	8000e86 <__udivmoddi4+0x27e>
 8000eb2:	4618      	mov	r0, r3
 8000eb4:	e795      	b.n	8000de2 <__udivmoddi4+0x1da>
 8000eb6:	4667      	mov	r7, ip
 8000eb8:	e7d1      	b.n	8000e5e <__udivmoddi4+0x256>
 8000eba:	4681      	mov	r9, r0
 8000ebc:	e77c      	b.n	8000db8 <__udivmoddi4+0x1b0>
 8000ebe:	3802      	subs	r0, #2
 8000ec0:	442c      	add	r4, r5
 8000ec2:	e747      	b.n	8000d54 <__udivmoddi4+0x14c>
 8000ec4:	f1ac 0c02 	sub.w	ip, ip, #2
 8000ec8:	442b      	add	r3, r5
 8000eca:	e72f      	b.n	8000d2c <__udivmoddi4+0x124>
 8000ecc:	4638      	mov	r0, r7
 8000ece:	e708      	b.n	8000ce2 <__udivmoddi4+0xda>
 8000ed0:	4637      	mov	r7, r6
 8000ed2:	e6e9      	b.n	8000ca8 <__udivmoddi4+0xa0>

08000ed4 <__aeabi_idiv0>:
 8000ed4:	4770      	bx	lr
 8000ed6:	bf00      	nop

08000ed8 <conv_HEX_to_BIN>:

//**************** KISS *************************************************************************************************************
bool KISS_FLAG[FLAG_SIZE] = { 0, 0, 0, 0, 0, 0, 1, 1 };

//Conversion functions
void conv_HEX_to_BIN(uint16_t hex_byte_in, bool *bin_byte_out, bool select_8_16){
 8000ed8:	b580      	push	{r7, lr}
 8000eda:	b086      	sub	sp, #24
 8000edc:	af00      	add	r7, sp, #0
 8000ede:	4603      	mov	r3, r0
 8000ee0:	6039      	str	r1, [r7, #0]
 8000ee2:	80fb      	strh	r3, [r7, #6]
 8000ee4:	4613      	mov	r3, r2
 8000ee6:	717b      	strb	r3, [r7, #5]
    int temp;

    sprintf(uartData, "\nSelector              = %d",select_8_16);
 8000ee8:	797b      	ldrb	r3, [r7, #5]
 8000eea:	461a      	mov	r2, r3
 8000eec:	4939      	ldr	r1, [pc, #228]	; (8000fd4 <conv_HEX_to_BIN+0xfc>)
 8000eee:	483a      	ldr	r0, [pc, #232]	; (8000fd8 <conv_HEX_to_BIN+0x100>)
 8000ef0:	f005 fcdc 	bl	80068ac <siprintf>
    debug_print_msg();
 8000ef4:	f000 fdce 	bl	8001a94 <debug_print_msg>

    sprintf(uartData, "\nByte value            = %d\nBinary value[LSB:MSB] =",hex_byte_in);
 8000ef8:	88fb      	ldrh	r3, [r7, #6]
 8000efa:	461a      	mov	r2, r3
 8000efc:	4937      	ldr	r1, [pc, #220]	; (8000fdc <conv_HEX_to_BIN+0x104>)
 8000efe:	4836      	ldr	r0, [pc, #216]	; (8000fd8 <conv_HEX_to_BIN+0x100>)
 8000f00:	f005 fcd4 	bl	80068ac <siprintf>
	debug_print_msg();
 8000f04:	f000 fdc6 	bl	8001a94 <debug_print_msg>

    if(select_8_16){
 8000f08:	797b      	ldrb	r3, [r7, #5]
 8000f0a:	2b00      	cmp	r3, #0
 8000f0c:	d01f      	beq.n	8000f4e <conv_HEX_to_BIN+0x76>
		for(int i = 0; i < 8; i++){
 8000f0e:	2300      	movs	r3, #0
 8000f10:	617b      	str	r3, [r7, #20]
 8000f12:	e018      	b.n	8000f46 <conv_HEX_to_BIN+0x6e>
			temp = hex_byte_in >> i;
 8000f14:	88fa      	ldrh	r2, [r7, #6]
 8000f16:	697b      	ldr	r3, [r7, #20]
 8000f18:	fa42 f303 	asr.w	r3, r2, r3
 8000f1c:	60fb      	str	r3, [r7, #12]
			temp = temp%2;
 8000f1e:	68fb      	ldr	r3, [r7, #12]
 8000f20:	2b00      	cmp	r3, #0
 8000f22:	f003 0301 	and.w	r3, r3, #1
 8000f26:	bfb8      	it	lt
 8000f28:	425b      	neglt	r3, r3
 8000f2a:	60fb      	str	r3, [r7, #12]

			//sprintf(uartData, " %d ",temp);
			//debug_print_msg();

			*(bin_byte_out+i) = temp;
 8000f2c:	697b      	ldr	r3, [r7, #20]
 8000f2e:	683a      	ldr	r2, [r7, #0]
 8000f30:	4413      	add	r3, r2
 8000f32:	68fa      	ldr	r2, [r7, #12]
 8000f34:	2a00      	cmp	r2, #0
 8000f36:	bf14      	ite	ne
 8000f38:	2201      	movne	r2, #1
 8000f3a:	2200      	moveq	r2, #0
 8000f3c:	b2d2      	uxtb	r2, r2
 8000f3e:	701a      	strb	r2, [r3, #0]
		for(int i = 0; i < 8; i++){
 8000f40:	697b      	ldr	r3, [r7, #20]
 8000f42:	3301      	adds	r3, #1
 8000f44:	617b      	str	r3, [r7, #20]
 8000f46:	697b      	ldr	r3, [r7, #20]
 8000f48:	2b07      	cmp	r3, #7
 8000f4a:	dde3      	ble.n	8000f14 <conv_HEX_to_BIN+0x3c>
		debug_print_msg();
    }

    //sprintf(uartData, "\n");
	//debug_print_msg();
}
 8000f4c:	e03e      	b.n	8000fcc <conv_HEX_to_BIN+0xf4>
	   sprintf(uartData, "\nByte value            = %x\nBinary value[LSB:MSB] =",hex_byte_in);
 8000f4e:	88fb      	ldrh	r3, [r7, #6]
 8000f50:	461a      	mov	r2, r3
 8000f52:	4923      	ldr	r1, [pc, #140]	; (8000fe0 <conv_HEX_to_BIN+0x108>)
 8000f54:	4820      	ldr	r0, [pc, #128]	; (8000fd8 <conv_HEX_to_BIN+0x100>)
 8000f56:	f005 fca9 	bl	80068ac <siprintf>
		debug_print_msg();
 8000f5a:	f000 fd9b 	bl	8001a94 <debug_print_msg>
		for(int i = 0; i < 16; i++){
 8000f5e:	2300      	movs	r3, #0
 8000f60:	613b      	str	r3, [r7, #16]
 8000f62:	e028      	b.n	8000fb6 <conv_HEX_to_BIN+0xde>
			temp = hex_byte_in >> i;
 8000f64:	88fa      	ldrh	r2, [r7, #6]
 8000f66:	693b      	ldr	r3, [r7, #16]
 8000f68:	fa42 f303 	asr.w	r3, r2, r3
 8000f6c:	60fb      	str	r3, [r7, #12]
			sprintf(uartData, " b=%d ",temp);
 8000f6e:	68fa      	ldr	r2, [r7, #12]
 8000f70:	491c      	ldr	r1, [pc, #112]	; (8000fe4 <conv_HEX_to_BIN+0x10c>)
 8000f72:	4819      	ldr	r0, [pc, #100]	; (8000fd8 <conv_HEX_to_BIN+0x100>)
 8000f74:	f005 fc9a 	bl	80068ac <siprintf>
			debug_print_msg();
 8000f78:	f000 fd8c 	bl	8001a94 <debug_print_msg>
			temp = temp%2;
 8000f7c:	68fb      	ldr	r3, [r7, #12]
 8000f7e:	2b00      	cmp	r3, #0
 8000f80:	f003 0301 	and.w	r3, r3, #1
 8000f84:	bfb8      	it	lt
 8000f86:	425b      	neglt	r3, r3
 8000f88:	60fb      	str	r3, [r7, #12]
			sprintf(uartData, " a=%d ",temp);
 8000f8a:	68fa      	ldr	r2, [r7, #12]
 8000f8c:	4916      	ldr	r1, [pc, #88]	; (8000fe8 <conv_HEX_to_BIN+0x110>)
 8000f8e:	4812      	ldr	r0, [pc, #72]	; (8000fd8 <conv_HEX_to_BIN+0x100>)
 8000f90:	f005 fc8c 	bl	80068ac <siprintf>
			debug_print_msg();
 8000f94:	f000 fd7e 	bl	8001a94 <debug_print_msg>
			*(bin_byte_out + 16 - 1 - i) = temp; //MSB is at lowest index
 8000f98:	693b      	ldr	r3, [r7, #16]
 8000f9a:	f1c3 030f 	rsb	r3, r3, #15
 8000f9e:	683a      	ldr	r2, [r7, #0]
 8000fa0:	4413      	add	r3, r2
 8000fa2:	68fa      	ldr	r2, [r7, #12]
 8000fa4:	2a00      	cmp	r2, #0
 8000fa6:	bf14      	ite	ne
 8000fa8:	2201      	movne	r2, #1
 8000faa:	2200      	moveq	r2, #0
 8000fac:	b2d2      	uxtb	r2, r2
 8000fae:	701a      	strb	r2, [r3, #0]
		for(int i = 0; i < 16; i++){
 8000fb0:	693b      	ldr	r3, [r7, #16]
 8000fb2:	3301      	adds	r3, #1
 8000fb4:	613b      	str	r3, [r7, #16]
 8000fb6:	693b      	ldr	r3, [r7, #16]
 8000fb8:	2b0f      	cmp	r3, #15
 8000fba:	ddd3      	ble.n	8000f64 <conv_HEX_to_BIN+0x8c>
		sprintf(uartData, "\n ");
 8000fbc:	4b06      	ldr	r3, [pc, #24]	; (8000fd8 <conv_HEX_to_BIN+0x100>)
 8000fbe:	4a0b      	ldr	r2, [pc, #44]	; (8000fec <conv_HEX_to_BIN+0x114>)
 8000fc0:	8811      	ldrh	r1, [r2, #0]
 8000fc2:	7892      	ldrb	r2, [r2, #2]
 8000fc4:	8019      	strh	r1, [r3, #0]
 8000fc6:	709a      	strb	r2, [r3, #2]
		debug_print_msg();
 8000fc8:	f000 fd64 	bl	8001a94 <debug_print_msg>
}
 8000fcc:	bf00      	nop
 8000fce:	3718      	adds	r7, #24
 8000fd0:	46bd      	mov	sp, r7
 8000fd2:	bd80      	pop	{r7, pc}
 8000fd4:	08008138 	.word	0x08008138
 8000fd8:	20001ce8 	.word	0x20001ce8
 8000fdc:	08008154 	.word	0x08008154
 8000fe0:	08008188 	.word	0x08008188
 8000fe4:	080081bc 	.word	0x080081bc
 8000fe8:	080081c4 	.word	0x080081c4
 8000fec:	080081cc 	.word	0x080081cc

08000ff0 <conv_BIN_to_HEX>:
uint16_t conv_BIN_to_HEX(bool *bin_byte_in,bool select_8_16){
 8000ff0:	b5b0      	push	{r4, r5, r7, lr}
 8000ff2:	b086      	sub	sp, #24
 8000ff4:	af00      	add	r7, sp, #0
 8000ff6:	6078      	str	r0, [r7, #4]
 8000ff8:	460b      	mov	r3, r1
 8000ffa:	70fb      	strb	r3, [r7, #3]
	uint16_t acc = 0;
 8000ffc:	2300      	movs	r3, #0
 8000ffe:	82fb      	strh	r3, [r7, #22]
	int bits = (select_8_16) ? 8 : 16;
 8001000:	78fb      	ldrb	r3, [r7, #3]
 8001002:	2b00      	cmp	r3, #0
 8001004:	d001      	beq.n	800100a <conv_BIN_to_HEX+0x1a>
 8001006:	2308      	movs	r3, #8
 8001008:	e000      	b.n	800100c <conv_BIN_to_HEX+0x1c>
 800100a:	2310      	movs	r3, #16
 800100c:	60fb      	str	r3, [r7, #12]
	for(int i = 0; i < bits; i++){
 800100e:	2300      	movs	r3, #0
 8001010:	613b      	str	r3, [r7, #16]
 8001012:	e02c      	b.n	800106e <conv_BIN_to_HEX+0x7e>
		acc += ( *(bin_byte_in+i) )? pow(2,i) : 0;
 8001014:	693b      	ldr	r3, [r7, #16]
 8001016:	687a      	ldr	r2, [r7, #4]
 8001018:	4413      	add	r3, r2
 800101a:	781b      	ldrb	r3, [r3, #0]
 800101c:	2b00      	cmp	r3, #0
 800101e:	d00d      	beq.n	800103c <conv_BIN_to_HEX+0x4c>
 8001020:	6938      	ldr	r0, [r7, #16]
 8001022:	f7ff fa9f 	bl	8000564 <__aeabi_i2d>
 8001026:	4603      	mov	r3, r0
 8001028:	460c      	mov	r4, r1
 800102a:	ec44 3b11 	vmov	d1, r3, r4
 800102e:	ed9f 0b14 	vldr	d0, [pc, #80]	; 8001080 <conv_BIN_to_HEX+0x90>
 8001032:	f006 f81d 	bl	8007070 <pow>
 8001036:	ec55 4b10 	vmov	r4, r5, d0
 800103a:	e003      	b.n	8001044 <conv_BIN_to_HEX+0x54>
 800103c:	f04f 0400 	mov.w	r4, #0
 8001040:	f04f 0500 	mov.w	r5, #0
 8001044:	8afb      	ldrh	r3, [r7, #22]
 8001046:	4618      	mov	r0, r3
 8001048:	f7ff fa8c 	bl	8000564 <__aeabi_i2d>
 800104c:	4602      	mov	r2, r0
 800104e:	460b      	mov	r3, r1
 8001050:	4620      	mov	r0, r4
 8001052:	4629      	mov	r1, r5
 8001054:	f7ff f93a 	bl	80002cc <__adddf3>
 8001058:	4603      	mov	r3, r0
 800105a:	460c      	mov	r4, r1
 800105c:	4618      	mov	r0, r3
 800105e:	4621      	mov	r1, r4
 8001060:	f7ff fd9a 	bl	8000b98 <__aeabi_d2uiz>
 8001064:	4603      	mov	r3, r0
 8001066:	82fb      	strh	r3, [r7, #22]
	for(int i = 0; i < bits; i++){
 8001068:	693b      	ldr	r3, [r7, #16]
 800106a:	3301      	adds	r3, #1
 800106c:	613b      	str	r3, [r7, #16]
 800106e:	693a      	ldr	r2, [r7, #16]
 8001070:	68fb      	ldr	r3, [r7, #12]
 8001072:	429a      	cmp	r2, r3
 8001074:	dbce      	blt.n	8001014 <conv_BIN_to_HEX+0x24>
	}
	return acc;
 8001076:	8afb      	ldrh	r3, [r7, #22]
}
 8001078:	4618      	mov	r0, r3
 800107a:	3718      	adds	r7, #24
 800107c:	46bd      	mov	sp, r7
 800107e:	bdb0      	pop	{r4, r5, r7, pc}
 8001080:	00000000 	.word	0x00000000
 8001084:	40000000 	.word	0x40000000

08001088 <clear_AX25>:
		debug_print_msg();
		output_AX25();
	}
}

void clear_AX25(){
 8001088:	b5b0      	push	{r4, r5, r7, lr}
 800108a:	b082      	sub	sp, #8
 800108c:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 800108e:	4b11      	ldr	r3, [pc, #68]	; (80010d4 <clear_AX25+0x4c>)
 8001090:	607b      	str	r3, [r7, #4]
	sprintf(uartData, "Clearing AX.25 packet info\n");
 8001092:	4a11      	ldr	r2, [pc, #68]	; (80010d8 <clear_AX25+0x50>)
 8001094:	4b11      	ldr	r3, [pc, #68]	; (80010dc <clear_AX25+0x54>)
 8001096:	4615      	mov	r5, r2
 8001098:	461c      	mov	r4, r3
 800109a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800109c:	6028      	str	r0, [r5, #0]
 800109e:	6069      	str	r1, [r5, #4]
 80010a0:	60aa      	str	r2, [r5, #8]
 80010a2:	60eb      	str	r3, [r5, #12]
 80010a4:	cc07      	ldmia	r4!, {r0, r1, r2}
 80010a6:	6128      	str	r0, [r5, #16]
 80010a8:	6169      	str	r1, [r5, #20]
 80010aa:	61aa      	str	r2, [r5, #24]
	debug_print_msg();
 80010ac:	f000 fcf2 	bl	8001a94 <debug_print_msg>

	memcpy(local_packet->AX25_PACKET,0,AX25_PACKET_MAX);
 80010b0:	687b      	ldr	r3, [r7, #4]
 80010b2:	f640 225f 	movw	r2, #2655	; 0xa5f
 80010b6:	2100      	movs	r1, #0
 80010b8:	4618      	mov	r0, r3
 80010ba:	f005 fbcb 	bl	8006854 <memcpy>
	local_packet->got_packet = false;
 80010be:	687b      	ldr	r3, [r7, #4]
 80010c0:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80010c4:	3309      	adds	r3, #9
 80010c6:	2200      	movs	r2, #0
 80010c8:	701a      	strb	r2, [r3, #0]
}
 80010ca:	bf00      	nop
 80010cc:	3708      	adds	r7, #8
 80010ce:	46bd      	mov	sp, r7
 80010d0:	bdb0      	pop	{r4, r5, r7, pc}
 80010d2:	bf00      	nop
 80010d4:	200000e4 	.word	0x200000e4
 80010d8:	20001ce8 	.word	0x20001ce8
 80010dc:	080082e4 	.word	0x080082e4

080010e0 <output_HEX>:

void output_HEX() {
 80010e0:	b580      	push	{r7, lr}
 80010e2:	b082      	sub	sp, #8
 80010e4:	af00      	add	r7, sp, #0
	struct UART_INPUT* local_UART_packet = &UART_packet;
 80010e6:	4b18      	ldr	r3, [pc, #96]	; (8001148 <output_HEX+0x68>)
 80010e8:	603b      	str	r3, [r7, #0]

	sprintf(uartData, "\n");
 80010ea:	4a18      	ldr	r2, [pc, #96]	; (800114c <output_HEX+0x6c>)
 80010ec:	4b18      	ldr	r3, [pc, #96]	; (8001150 <output_HEX+0x70>)
 80010ee:	881b      	ldrh	r3, [r3, #0]
 80010f0:	8013      	strh	r3, [r2, #0]
	debug_print_msg();
 80010f2:	f000 fccf 	bl	8001a94 <debug_print_msg>

	for(int i = 0;i<local_UART_packet->received_byte_cnt;i++){
 80010f6:	2300      	movs	r3, #0
 80010f8:	607b      	str	r3, [r7, #4]
 80010fa:	e016      	b.n	800112a <output_HEX+0x4a>
		sprintf(uartData, "%x",local_UART_packet->HEX_KISS_PACKET[i]);
 80010fc:	683a      	ldr	r2, [r7, #0]
 80010fe:	687b      	ldr	r3, [r7, #4]
 8001100:	4413      	add	r3, r2
 8001102:	330e      	adds	r3, #14
 8001104:	781b      	ldrb	r3, [r3, #0]
 8001106:	461a      	mov	r2, r3
 8001108:	4912      	ldr	r1, [pc, #72]	; (8001154 <output_HEX+0x74>)
 800110a:	4810      	ldr	r0, [pc, #64]	; (800114c <output_HEX+0x6c>)
 800110c:	f005 fbce 	bl	80068ac <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001110:	480e      	ldr	r0, [pc, #56]	; (800114c <output_HEX+0x6c>)
 8001112:	f7ff f87d 	bl	8000210 <strlen>
 8001116:	4603      	mov	r3, r0
 8001118:	b29a      	uxth	r2, r3
 800111a:	230a      	movs	r3, #10
 800111c:	490b      	ldr	r1, [pc, #44]	; (800114c <output_HEX+0x6c>)
 800111e:	480e      	ldr	r0, [pc, #56]	; (8001158 <output_HEX+0x78>)
 8001120:	f004 fc83 	bl	8005a2a <HAL_UART_Transmit>
	for(int i = 0;i<local_UART_packet->received_byte_cnt;i++){
 8001124:	687b      	ldr	r3, [r7, #4]
 8001126:	3301      	adds	r3, #1
 8001128:	607b      	str	r3, [r7, #4]
 800112a:	683b      	ldr	r3, [r7, #0]
 800112c:	685b      	ldr	r3, [r3, #4]
 800112e:	687a      	ldr	r2, [r7, #4]
 8001130:	429a      	cmp	r2, r3
 8001132:	dbe3      	blt.n	80010fc <output_HEX+0x1c>
	}

	sprintf(uartData, "\n");
 8001134:	4a05      	ldr	r2, [pc, #20]	; (800114c <output_HEX+0x6c>)
 8001136:	4b06      	ldr	r3, [pc, #24]	; (8001150 <output_HEX+0x70>)
 8001138:	881b      	ldrh	r3, [r3, #0]
 800113a:	8013      	strh	r3, [r2, #0]
	debug_print_msg();
 800113c:	f000 fcaa 	bl	8001a94 <debug_print_msg>
}
 8001140:	bf00      	nop
 8001142:	3708      	adds	r7, #8
 8001144:	46bd      	mov	sp, r7
 8001146:	bd80      	pop	{r7, pc}
 8001148:	20001450 	.word	0x20001450
 800114c:	20001ce8 	.word	0x20001ce8
 8001150:	08008300 	.word	0x08008300
 8001154:	08008304 	.word	0x08008304
 8001158:	200029e4 	.word	0x200029e4

0800115c <receiving_AX25>:

//AX.25 to KISS data flow
//****************************************************************************************************************
bool receiving_AX25(){
 800115c:	b5b0      	push	{r4, r5, r7, lr}
 800115e:	b082      	sub	sp, #8
 8001160:	af00      	add	r7, sp, #0
	sprintf(uartData, "\nreceiving_AX25() start\n");
 8001162:	4a13      	ldr	r2, [pc, #76]	; (80011b0 <receiving_AX25+0x54>)
 8001164:	4b13      	ldr	r3, [pc, #76]	; (80011b4 <receiving_AX25+0x58>)
 8001166:	4615      	mov	r5, r2
 8001168:	461c      	mov	r4, r3
 800116a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800116c:	6028      	str	r0, [r5, #0]
 800116e:	6069      	str	r1, [r5, #4]
 8001170:	60aa      	str	r2, [r5, #8]
 8001172:	60eb      	str	r3, [r5, #12]
 8001174:	cc03      	ldmia	r4!, {r0, r1}
 8001176:	6128      	str	r0, [r5, #16]
 8001178:	6169      	str	r1, [r5, #20]
 800117a:	7823      	ldrb	r3, [r4, #0]
 800117c:	762b      	strb	r3, [r5, #24]
	debug_print_msg();
 800117e:	f000 fc89 	bl	8001a94 <debug_print_msg>
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001182:	4b0d      	ldr	r3, [pc, #52]	; (80011b8 <receiving_AX25+0x5c>)
 8001184:	607b      	str	r3, [r7, #4]

	//Validate packet
	bool AX25_IsValid = AX25_Packet_Validate();
 8001186:	f000 f869 	bl	800125c <AX25_Packet_Validate>
 800118a:	4603      	mov	r3, r0
 800118c:	70fb      	strb	r3, [r7, #3]

//		sprintf(uartData, "AX.25 frame valid check returned: %d\n",AX25_IsValid);
//		debug_print_msg();

	if(AX25_IsValid){
 800118e:	78fb      	ldrb	r3, [r7, #3]
 8001190:	2b00      	cmp	r3, #0
 8001192:	d007      	beq.n	80011a4 <receiving_AX25+0x48>
		//Put data into KISS format and buffer
		AX25_TO_KISS();
 8001194:	f000 f992 	bl	80014bc <AX25_TO_KISS>

		//Put data into HEX buffer
		KISS_TO_HEX();
 8001198:	f000 f9d0 	bl	800153c <KISS_TO_HEX>

		//Transmit KISS Packet that has been generated
		output_HEX();
 800119c:	f7ff ffa0 	bl	80010e0 <output_HEX>

		//Clear AX.25 buffer
		clear_AX25();
 80011a0:	f7ff ff72 	bl	8001088 <clear_AX25>
//		clear_KISS();
//		clear_HEX();
	}
}
 80011a4:	bf00      	nop
 80011a6:	4618      	mov	r0, r3
 80011a8:	3708      	adds	r7, #8
 80011aa:	46bd      	mov	sp, r7
 80011ac:	bdb0      	pop	{r4, r5, r7, pc}
 80011ae:	bf00      	nop
 80011b0:	20001ce8 	.word	0x20001ce8
 80011b4:	08008308 	.word	0x08008308
 80011b8:	200000e4 	.word	0x200000e4

080011bc <slide_bits>:

void slide_bits(bool* array,int bits_left){
 80011bc:	b580      	push	{r7, lr}
 80011be:	b082      	sub	sp, #8
 80011c0:	af00      	add	r7, sp, #0
 80011c2:	6078      	str	r0, [r7, #4]
 80011c4:	6039      	str	r1, [r7, #0]
	memmove(array,array+1,bits_left*bool_size);
 80011c6:	687b      	ldr	r3, [r7, #4]
 80011c8:	3301      	adds	r3, #1
 80011ca:	683a      	ldr	r2, [r7, #0]
 80011cc:	4619      	mov	r1, r3
 80011ce:	6878      	ldr	r0, [r7, #4]
 80011d0:	f005 fb4b 	bl	800686a <memmove>
}
 80011d4:	bf00      	nop
 80011d6:	3708      	adds	r7, #8
 80011d8:	46bd      	mov	sp, r7
 80011da:	bd80      	pop	{r7, pc}

080011dc <remove_bit_stuffing>:

void remove_bit_stuffing(){
 80011dc:	b580      	push	{r7, lr}
 80011de:	b084      	sub	sp, #16
 80011e0:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 80011e2:	4b1c      	ldr	r3, [pc, #112]	; (8001254 <remove_bit_stuffing+0x78>)
 80011e4:	607b      	str	r3, [r7, #4]
//	sprintf(uartData, "Removing bit stuffed zeros\n");
//	debug_print_msg();

	int ones_count = 0;
 80011e6:	2300      	movs	r3, #0
 80011e8:	60fb      	str	r3, [r7, #12]
	bool curr;
	for(int i = 0;i < rxBit_count;i++){
 80011ea:	2300      	movs	r3, #0
 80011ec:	60bb      	str	r3, [r7, #8]
 80011ee:	e028      	b.n	8001242 <remove_bit_stuffing+0x66>
		curr = local_packet->AX25_PACKET[i]; //iterate through all data received before seperating into subfields
 80011f0:	687a      	ldr	r2, [r7, #4]
 80011f2:	68bb      	ldr	r3, [r7, #8]
 80011f4:	4413      	add	r3, r2
 80011f6:	781b      	ldrb	r3, [r3, #0]
 80011f8:	70fb      	strb	r3, [r7, #3]
		if(curr){ //current bit is a 1
 80011fa:	78fb      	ldrb	r3, [r7, #3]
 80011fc:	2b00      	cmp	r3, #0
 80011fe:	d006      	beq.n	800120e <remove_bit_stuffing+0x32>
			ones_count++;
 8001200:	68fb      	ldr	r3, [r7, #12]
 8001202:	3301      	adds	r3, #1
 8001204:	60fb      	str	r3, [r7, #12]
			if(ones_count > 5){
 8001206:	68fb      	ldr	r3, [r7, #12]
 8001208:	2b05      	cmp	r3, #5
 800120a:	dd17      	ble.n	800123c <remove_bit_stuffing+0x60>
//				sprintf(uartData, "ERROR: SHOULD HAVE BEEN A ZERO AFTER FIFTH CONTIGIOUS ONE!\n");
//				debug_print_msg();
				return;
 800120c:	e01e      	b.n	800124c <remove_bit_stuffing+0x70>
			}
		}
		else{
			if(ones_count >= 5){
 800120e:	68fb      	ldr	r3, [r7, #12]
 8001210:	2b04      	cmp	r3, #4
 8001212:	dd11      	ble.n	8001238 <remove_bit_stuffing+0x5c>
				slide_bits(&local_packet->AX25_PACKET[i],rxBit_count-i);
 8001214:	687a      	ldr	r2, [r7, #4]
 8001216:	68bb      	ldr	r3, [r7, #8]
 8001218:	18d0      	adds	r0, r2, r3
 800121a:	4b0f      	ldr	r3, [pc, #60]	; (8001258 <remove_bit_stuffing+0x7c>)
 800121c:	681a      	ldr	r2, [r3, #0]
 800121e:	68bb      	ldr	r3, [r7, #8]
 8001220:	1ad3      	subs	r3, r2, r3
 8001222:	4619      	mov	r1, r3
 8001224:	f7ff ffca 	bl	80011bc <slide_bits>
				i--;
 8001228:	68bb      	ldr	r3, [r7, #8]
 800122a:	3b01      	subs	r3, #1
 800122c:	60bb      	str	r3, [r7, #8]
				rxBit_count--;
 800122e:	4b0a      	ldr	r3, [pc, #40]	; (8001258 <remove_bit_stuffing+0x7c>)
 8001230:	681b      	ldr	r3, [r3, #0]
 8001232:	3b01      	subs	r3, #1
 8001234:	4a08      	ldr	r2, [pc, #32]	; (8001258 <remove_bit_stuffing+0x7c>)
 8001236:	6013      	str	r3, [r2, #0]
//				sprintf(uartData, "REMOVED BIT STUFFED ZERO!\n");
//				debug_print_msg();
			}
			ones_count = 0;
 8001238:	2300      	movs	r3, #0
 800123a:	60fb      	str	r3, [r7, #12]
	for(int i = 0;i < rxBit_count;i++){
 800123c:	68bb      	ldr	r3, [r7, #8]
 800123e:	3301      	adds	r3, #1
 8001240:	60bb      	str	r3, [r7, #8]
 8001242:	4b05      	ldr	r3, [pc, #20]	; (8001258 <remove_bit_stuffing+0x7c>)
 8001244:	681b      	ldr	r3, [r3, #0]
 8001246:	68ba      	ldr	r2, [r7, #8]
 8001248:	429a      	cmp	r2, r3
 800124a:	dbd1      	blt.n	80011f0 <remove_bit_stuffing+0x14>
		}
	}
	//transmit kiss
}
 800124c:	3710      	adds	r7, #16
 800124e:	46bd      	mov	sp, r7
 8001250:	bd80      	pop	{r7, pc}
 8001252:	bf00      	nop
 8001254:	200000e4 	.word	0x200000e4
 8001258:	200000a4 	.word	0x200000a4

0800125c <AX25_Packet_Validate>:

bool AX25_Packet_Validate(){
 800125c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800125e:	b085      	sub	sp, #20
 8001260:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001262:	4b2d      	ldr	r3, [pc, #180]	; (8001318 <AX25_Packet_Validate+0xbc>)
 8001264:	60fb      	str	r3, [r7, #12]
	int fcs_val = 0;
 8001266:	2300      	movs	r3, #0
 8001268:	60bb      	str	r3, [r7, #8]

	sprintf(uartData,"Received packet bit count: %d\n",local_packet->byte_cnt*8);
 800126a:	68fb      	ldr	r3, [r7, #12]
 800126c:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001270:	330c      	adds	r3, #12
 8001272:	681b      	ldr	r3, [r3, #0]
 8001274:	00db      	lsls	r3, r3, #3
 8001276:	461a      	mov	r2, r3
 8001278:	4928      	ldr	r1, [pc, #160]	; (800131c <AX25_Packet_Validate+0xc0>)
 800127a:	4829      	ldr	r0, [pc, #164]	; (8001320 <AX25_Packet_Validate+0xc4>)
 800127c:	f005 fb16 	bl	80068ac <siprintf>
	debug_print_msg();
 8001280:	f000 fc08 	bl	8001a94 <debug_print_msg>

	if(rxBit_count < 120){ //invalid if packet is less than 136 bits - 2*8 bits (per flag)
 8001284:	4b27      	ldr	r3, [pc, #156]	; (8001324 <AX25_Packet_Validate+0xc8>)
 8001286:	681b      	ldr	r3, [r3, #0]
 8001288:	2b77      	cmp	r3, #119	; 0x77
 800128a:	dc15      	bgt.n	80012b8 <AX25_Packet_Validate+0x5c>
		sprintf(uartData,"Trash Packet, not enough bits\n");
 800128c:	4a24      	ldr	r2, [pc, #144]	; (8001320 <AX25_Packet_Validate+0xc4>)
 800128e:	4b26      	ldr	r3, [pc, #152]	; (8001328 <AX25_Packet_Validate+0xcc>)
 8001290:	4615      	mov	r5, r2
 8001292:	461c      	mov	r4, r3
 8001294:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001296:	6028      	str	r0, [r5, #0]
 8001298:	6069      	str	r1, [r5, #4]
 800129a:	60aa      	str	r2, [r5, #8]
 800129c:	60eb      	str	r3, [r5, #12]
 800129e:	cc07      	ldmia	r4!, {r0, r1, r2}
 80012a0:	6128      	str	r0, [r5, #16]
 80012a2:	6169      	str	r1, [r5, #20]
 80012a4:	61aa      	str	r2, [r5, #24]
 80012a6:	8823      	ldrh	r3, [r4, #0]
 80012a8:	78a2      	ldrb	r2, [r4, #2]
 80012aa:	83ab      	strh	r3, [r5, #28]
 80012ac:	4613      	mov	r3, r2
 80012ae:	77ab      	strb	r3, [r5, #30]
		debug_print_msg();
 80012b0:	f000 fbf0 	bl	8001a94 <debug_print_msg>
		return false;
 80012b4:	2300      	movs	r3, #0
 80012b6:	e02b      	b.n	8001310 <AX25_Packet_Validate+0xb4>
	}
	else if((rxBit_count)%8 != 0){ //invalid if packet is not octect aligned (divisible by 8)
 80012b8:	4b1a      	ldr	r3, [pc, #104]	; (8001324 <AX25_Packet_Validate+0xc8>)
 80012ba:	681b      	ldr	r3, [r3, #0]
 80012bc:	f003 0307 	and.w	r3, r3, #7
 80012c0:	2b00      	cmp	r3, #0
 80012c2:	d019      	beq.n	80012f8 <AX25_Packet_Validate+0x9c>
		sprintf(uartData,"Trash Packet, not octet aligned\n");
 80012c4:	4b16      	ldr	r3, [pc, #88]	; (8001320 <AX25_Packet_Validate+0xc4>)
 80012c6:	4a19      	ldr	r2, [pc, #100]	; (800132c <AX25_Packet_Validate+0xd0>)
 80012c8:	4614      	mov	r4, r2
 80012ca:	469c      	mov	ip, r3
 80012cc:	f104 0e20 	add.w	lr, r4, #32
 80012d0:	4665      	mov	r5, ip
 80012d2:	4626      	mov	r6, r4
 80012d4:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80012d6:	6028      	str	r0, [r5, #0]
 80012d8:	6069      	str	r1, [r5, #4]
 80012da:	60aa      	str	r2, [r5, #8]
 80012dc:	60eb      	str	r3, [r5, #12]
 80012de:	3410      	adds	r4, #16
 80012e0:	f10c 0c10 	add.w	ip, ip, #16
 80012e4:	4574      	cmp	r4, lr
 80012e6:	d1f3      	bne.n	80012d0 <AX25_Packet_Validate+0x74>
 80012e8:	4663      	mov	r3, ip
 80012ea:	4622      	mov	r2, r4
 80012ec:	7812      	ldrb	r2, [r2, #0]
 80012ee:	701a      	strb	r2, [r3, #0]
		debug_print_msg();
 80012f0:	f000 fbd0 	bl	8001a94 <debug_print_msg>
		return false;
 80012f4:	2300      	movs	r3, #0
 80012f6:	e00b      	b.n	8001310 <AX25_Packet_Validate+0xb4>
	}

	//SHOULD BE VALID PACKET, JUST NEED TO C0MPARE CALCULATED CRC TO RECIEVED FCS
	else{
		//Set packet pointers for AX25 to KISS operation
		uint16_t local_info_len = rxBit_count-INFO_offset_woFlag;
 80012f8:	4b0a      	ldr	r3, [pc, #40]	; (8001324 <AX25_Packet_Validate+0xc8>)
 80012fa:	681b      	ldr	r3, [r3, #0]
 80012fc:	b29b      	uxth	r3, r3
 80012fe:	3b90      	subs	r3, #144	; 0x90
 8001300:	80fb      	strh	r3, [r7, #6]
		set_packet_pointer_AX25(local_info_len);
 8001302:	88fb      	ldrh	r3, [r7, #6]
 8001304:	4618      	mov	r0, r3
 8001306:	f000 f813 	bl	8001330 <set_packet_pointer_AX25>
//		print_AX25();

		return crc_check();
 800130a:	f000 fab1 	bl	8001870 <crc_check>
 800130e:	4603      	mov	r3, r0
	}
}
 8001310:	4618      	mov	r0, r3
 8001312:	3714      	adds	r7, #20
 8001314:	46bd      	mov	sp, r7
 8001316:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001318:	200000e4 	.word	0x200000e4
 800131c:	08008324 	.word	0x08008324
 8001320:	20001ce8 	.word	0x20001ce8
 8001324:	200000a4 	.word	0x200000a4
 8001328:	08008344 	.word	0x08008344
 800132c:	08008364 	.word	0x08008364

08001330 <set_packet_pointer_AX25>:


void set_packet_pointer_AX25(int info_len_in){
 8001330:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001332:	b087      	sub	sp, #28
 8001334:	af00      	add	r7, sp, #0
 8001336:	6078      	str	r0, [r7, #4]
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001338:	4b58      	ldr	r3, [pc, #352]	; (800149c <set_packet_pointer_AX25+0x16c>)
 800133a:	617b      	str	r3, [r7, #20]
	int not_info = FCS_len;
 800133c:	2310      	movs	r3, #16
 800133e:	613b      	str	r3, [r7, #16]
	local_packet->Info_Len = info_len_in;
 8001340:	697b      	ldr	r3, [r7, #20]
 8001342:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001346:	687a      	ldr	r2, [r7, #4]
 8001348:	601a      	str	r2, [r3, #0]

	sprintf(uartData, "Setting packet pointer to AX25:\n");
 800134a:	4b55      	ldr	r3, [pc, #340]	; (80014a0 <set_packet_pointer_AX25+0x170>)
 800134c:	4a55      	ldr	r2, [pc, #340]	; (80014a4 <set_packet_pointer_AX25+0x174>)
 800134e:	4614      	mov	r4, r2
 8001350:	469c      	mov	ip, r3
 8001352:	f104 0e20 	add.w	lr, r4, #32
 8001356:	4665      	mov	r5, ip
 8001358:	4626      	mov	r6, r4
 800135a:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800135c:	6028      	str	r0, [r5, #0]
 800135e:	6069      	str	r1, [r5, #4]
 8001360:	60aa      	str	r2, [r5, #8]
 8001362:	60eb      	str	r3, [r5, #12]
 8001364:	3410      	adds	r4, #16
 8001366:	f10c 0c10 	add.w	ip, ip, #16
 800136a:	4574      	cmp	r4, lr
 800136c:	d1f3      	bne.n	8001356 <set_packet_pointer_AX25+0x26>
 800136e:	4663      	mov	r3, ip
 8001370:	4622      	mov	r2, r4
 8001372:	7812      	ldrb	r2, [r2, #0]
 8001374:	701a      	strb	r2, [r3, #0]
	debug_print_msg();
 8001376:	f000 fb8d 	bl	8001a94 <debug_print_msg>
	bool *curr_mem = &local_packet->AX25_PACKET;
 800137a:	697b      	ldr	r3, [r7, #20]
 800137c:	60fb      	str	r3, [r7, #12]

	sprintf(uartData, "Setting pointer for address\n");
 800137e:	4a48      	ldr	r2, [pc, #288]	; (80014a0 <set_packet_pointer_AX25+0x170>)
 8001380:	4b49      	ldr	r3, [pc, #292]	; (80014a8 <set_packet_pointer_AX25+0x178>)
 8001382:	4615      	mov	r5, r2
 8001384:	461c      	mov	r4, r3
 8001386:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001388:	6028      	str	r0, [r5, #0]
 800138a:	6069      	str	r1, [r5, #4]
 800138c:	60aa      	str	r2, [r5, #8]
 800138e:	60eb      	str	r3, [r5, #12]
 8001390:	cc07      	ldmia	r4!, {r0, r1, r2}
 8001392:	6128      	str	r0, [r5, #16]
 8001394:	6169      	str	r1, [r5, #20]
 8001396:	61aa      	str	r2, [r5, #24]
 8001398:	7823      	ldrb	r3, [r4, #0]
 800139a:	772b      	strb	r3, [r5, #28]
	debug_print_msg();
 800139c:	f000 fb7a 	bl	8001a94 <debug_print_msg>
	local_packet->address = curr_mem;
 80013a0:	697b      	ldr	r3, [r7, #20]
 80013a2:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80013a6:	3310      	adds	r3, #16
 80013a8:	68fa      	ldr	r2, [r7, #12]
 80013aa:	601a      	str	r2, [r3, #0]
	curr_mem += address_len;
 80013ac:	68fb      	ldr	r3, [r7, #12]
 80013ae:	3370      	adds	r3, #112	; 0x70
 80013b0:	60fb      	str	r3, [r7, #12]
	not_info += address_len;
 80013b2:	693b      	ldr	r3, [r7, #16]
 80013b4:	3370      	adds	r3, #112	; 0x70
 80013b6:	613b      	str	r3, [r7, #16]

	sprintf(uartData, "Setting pointer for control\n");
 80013b8:	4a39      	ldr	r2, [pc, #228]	; (80014a0 <set_packet_pointer_AX25+0x170>)
 80013ba:	4b3c      	ldr	r3, [pc, #240]	; (80014ac <set_packet_pointer_AX25+0x17c>)
 80013bc:	4615      	mov	r5, r2
 80013be:	461c      	mov	r4, r3
 80013c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80013c2:	6028      	str	r0, [r5, #0]
 80013c4:	6069      	str	r1, [r5, #4]
 80013c6:	60aa      	str	r2, [r5, #8]
 80013c8:	60eb      	str	r3, [r5, #12]
 80013ca:	cc07      	ldmia	r4!, {r0, r1, r2}
 80013cc:	6128      	str	r0, [r5, #16]
 80013ce:	6169      	str	r1, [r5, #20]
 80013d0:	61aa      	str	r2, [r5, #24]
 80013d2:	7823      	ldrb	r3, [r4, #0]
 80013d4:	772b      	strb	r3, [r5, #28]
	debug_print_msg();
 80013d6:	f000 fb5d 	bl	8001a94 <debug_print_msg>
	local_packet->control = curr_mem;
 80013da:	697b      	ldr	r3, [r7, #20]
 80013dc:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80013e0:	3314      	adds	r3, #20
 80013e2:	68fa      	ldr	r2, [r7, #12]
 80013e4:	601a      	str	r2, [r3, #0]
	curr_mem += control_len;
 80013e6:	68fb      	ldr	r3, [r7, #12]
 80013e8:	3308      	adds	r3, #8
 80013ea:	60fb      	str	r3, [r7, #12]
	not_info += control_len;
 80013ec:	693b      	ldr	r3, [r7, #16]
 80013ee:	3308      	adds	r3, #8
 80013f0:	613b      	str	r3, [r7, #16]

	sprintf(uartData, "Setting pointer for PID\n");
 80013f2:	4a2b      	ldr	r2, [pc, #172]	; (80014a0 <set_packet_pointer_AX25+0x170>)
 80013f4:	4b2e      	ldr	r3, [pc, #184]	; (80014b0 <set_packet_pointer_AX25+0x180>)
 80013f6:	4615      	mov	r5, r2
 80013f8:	461c      	mov	r4, r3
 80013fa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80013fc:	6028      	str	r0, [r5, #0]
 80013fe:	6069      	str	r1, [r5, #4]
 8001400:	60aa      	str	r2, [r5, #8]
 8001402:	60eb      	str	r3, [r5, #12]
 8001404:	cc03      	ldmia	r4!, {r0, r1}
 8001406:	6128      	str	r0, [r5, #16]
 8001408:	6169      	str	r1, [r5, #20]
 800140a:	7823      	ldrb	r3, [r4, #0]
 800140c:	762b      	strb	r3, [r5, #24]
	debug_print_msg();
 800140e:	f000 fb41 	bl	8001a94 <debug_print_msg>
	local_packet->PID = curr_mem;
 8001412:	697b      	ldr	r3, [r7, #20]
 8001414:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001418:	3318      	adds	r3, #24
 800141a:	68fa      	ldr	r2, [r7, #12]
 800141c:	601a      	str	r2, [r3, #0]
	curr_mem += PID_len;
 800141e:	68fb      	ldr	r3, [r7, #12]
 8001420:	3308      	adds	r3, #8
 8001422:	60fb      	str	r3, [r7, #12]
	not_info += PID_len;
 8001424:	693b      	ldr	r3, [r7, #16]
 8001426:	3308      	adds	r3, #8
 8001428:	613b      	str	r3, [r7, #16]

	sprintf(uartData, "Setting pointer for Info\n");
 800142a:	4a1d      	ldr	r2, [pc, #116]	; (80014a0 <set_packet_pointer_AX25+0x170>)
 800142c:	4b21      	ldr	r3, [pc, #132]	; (80014b4 <set_packet_pointer_AX25+0x184>)
 800142e:	4615      	mov	r5, r2
 8001430:	461c      	mov	r4, r3
 8001432:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001434:	6028      	str	r0, [r5, #0]
 8001436:	6069      	str	r1, [r5, #4]
 8001438:	60aa      	str	r2, [r5, #8]
 800143a:	60eb      	str	r3, [r5, #12]
 800143c:	cc03      	ldmia	r4!, {r0, r1}
 800143e:	6128      	str	r0, [r5, #16]
 8001440:	6169      	str	r1, [r5, #20]
 8001442:	8823      	ldrh	r3, [r4, #0]
 8001444:	832b      	strh	r3, [r5, #24]
	debug_print_msg();
 8001446:	f000 fb25 	bl	8001a94 <debug_print_msg>
	local_packet->Info = curr_mem;
 800144a:	697b      	ldr	r3, [r7, #20]
 800144c:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001450:	331c      	adds	r3, #28
 8001452:	68fa      	ldr	r2, [r7, #12]
 8001454:	601a      	str	r2, [r3, #0]
	curr_mem += local_packet->Info_Len;
 8001456:	697b      	ldr	r3, [r7, #20]
 8001458:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 800145c:	681b      	ldr	r3, [r3, #0]
 800145e:	461a      	mov	r2, r3
 8001460:	68fb      	ldr	r3, [r7, #12]
 8001462:	4413      	add	r3, r2
 8001464:	60fb      	str	r3, [r7, #12]

	sprintf(uartData, "Setting pointer for FCS\n");
 8001466:	4a0e      	ldr	r2, [pc, #56]	; (80014a0 <set_packet_pointer_AX25+0x170>)
 8001468:	4b13      	ldr	r3, [pc, #76]	; (80014b8 <set_packet_pointer_AX25+0x188>)
 800146a:	4615      	mov	r5, r2
 800146c:	461c      	mov	r4, r3
 800146e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001470:	6028      	str	r0, [r5, #0]
 8001472:	6069      	str	r1, [r5, #4]
 8001474:	60aa      	str	r2, [r5, #8]
 8001476:	60eb      	str	r3, [r5, #12]
 8001478:	cc03      	ldmia	r4!, {r0, r1}
 800147a:	6128      	str	r0, [r5, #16]
 800147c:	6169      	str	r1, [r5, #20]
 800147e:	7823      	ldrb	r3, [r4, #0]
 8001480:	762b      	strb	r3, [r5, #24]
	debug_print_msg();
 8001482:	f000 fb07 	bl	8001a94 <debug_print_msg>
	local_packet->FCS = curr_mem;
 8001486:	697b      	ldr	r3, [r7, #20]
 8001488:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 800148c:	3304      	adds	r3, #4
 800148e:	68fa      	ldr	r2, [r7, #12]
 8001490:	601a      	str	r2, [r3, #0]
}
 8001492:	bf00      	nop
 8001494:	371c      	adds	r7, #28
 8001496:	46bd      	mov	sp, r7
 8001498:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800149a:	bf00      	nop
 800149c:	200000e4 	.word	0x200000e4
 80014a0:	20001ce8 	.word	0x20001ce8
 80014a4:	08008388 	.word	0x08008388
 80014a8:	080083ac 	.word	0x080083ac
 80014ac:	080083cc 	.word	0x080083cc
 80014b0:	080083ec 	.word	0x080083ec
 80014b4:	08008408 	.word	0x08008408
 80014b8:	08008424 	.word	0x08008424

080014bc <AX25_TO_KISS>:

void AX25_TO_KISS(){
 80014bc:	b580      	push	{r7, lr}
 80014be:	b082      	sub	sp, #8
 80014c0:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 80014c2:	4b1c      	ldr	r3, [pc, #112]	; (8001534 <AX25_TO_KISS+0x78>)
 80014c4:	607b      	str	r3, [r7, #4]
	bool *curr_mem = local_packet->KISS_PACKET;
 80014c6:	687b      	ldr	r3, [r7, #4]
 80014c8:	f603 235f 	addw	r3, r3, #2655	; 0xa5f
 80014cc:	603b      	str	r3, [r7, #0]

	//Put a flag into KISS
	memcpy(curr_mem,KISS_FLAG,FLAG_SIZE);
 80014ce:	683b      	ldr	r3, [r7, #0]
 80014d0:	4919      	ldr	r1, [pc, #100]	; (8001538 <AX25_TO_KISS+0x7c>)
 80014d2:	461a      	mov	r2, r3
 80014d4:	460b      	mov	r3, r1
 80014d6:	cb03      	ldmia	r3!, {r0, r1}
 80014d8:	6010      	str	r0, [r2, #0]
 80014da:	6051      	str	r1, [r2, #4]
	curr_mem += FLAG_SIZE;
 80014dc:	683b      	ldr	r3, [r7, #0]
 80014de:	3308      	adds	r3, #8
 80014e0:	603b      	str	r3, [r7, #0]

	//Set port info
	memset(curr_mem,0,8);
 80014e2:	2208      	movs	r2, #8
 80014e4:	2100      	movs	r1, #0
 80014e6:	6838      	ldr	r0, [r7, #0]
 80014e8:	f005 f9d8 	bl	800689c <memset>
	curr_mem += 8;
 80014ec:	683b      	ldr	r3, [r7, #0]
 80014ee:	3308      	adds	r3, #8
 80014f0:	603b      	str	r3, [r7, #0]

	//Put AX25 packet into KISS w/o the FCS, HAVE AN ADDED 8 due to port info
	memcpy(curr_mem,local_packet->AX25_PACKET,(local_packet->byte_cnt*8)-FCS_len);
 80014f2:	6879      	ldr	r1, [r7, #4]
 80014f4:	687b      	ldr	r3, [r7, #4]
 80014f6:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80014fa:	330c      	adds	r3, #12
 80014fc:	681b      	ldr	r3, [r3, #0]
 80014fe:	3b02      	subs	r3, #2
 8001500:	00db      	lsls	r3, r3, #3
 8001502:	461a      	mov	r2, r3
 8001504:	6838      	ldr	r0, [r7, #0]
 8001506:	f005 f9a5 	bl	8006854 <memcpy>
	curr_mem += (local_packet->byte_cnt*8)-FCS_len;
 800150a:	687b      	ldr	r3, [r7, #4]
 800150c:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001510:	330c      	adds	r3, #12
 8001512:	681b      	ldr	r3, [r3, #0]
 8001514:	00db      	lsls	r3, r3, #3
 8001516:	3b10      	subs	r3, #16
 8001518:	683a      	ldr	r2, [r7, #0]
 800151a:	4413      	add	r3, r2
 800151c:	603b      	str	r3, [r7, #0]

	//Put a flag into KISS
	memcpy(curr_mem,KISS_FLAG,FLAG_SIZE);
 800151e:	683b      	ldr	r3, [r7, #0]
 8001520:	4905      	ldr	r1, [pc, #20]	; (8001538 <AX25_TO_KISS+0x7c>)
 8001522:	461a      	mov	r2, r3
 8001524:	460b      	mov	r3, r1
 8001526:	cb03      	ldmia	r3!, {r0, r1}
 8001528:	6010      	str	r0, [r2, #0]
 800152a:	6051      	str	r1, [r2, #4]
}
 800152c:	bf00      	nop
 800152e:	3708      	adds	r7, #8
 8001530:	46bd      	mov	sp, r7
 8001532:	bd80      	pop	{r7, pc}
 8001534:	200000e4 	.word	0x200000e4
 8001538:	20000000 	.word	0x20000000

0800153c <KISS_TO_HEX>:
	}
	*stuff = bit_stuff_count;
	return ones_count;
}

void KISS_TO_HEX(){
 800153c:	b5b0      	push	{r4, r5, r7, lr}
 800153e:	b086      	sub	sp, #24
 8001540:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001542:	4b2b      	ldr	r3, [pc, #172]	; (80015f0 <KISS_TO_HEX+0xb4>)
 8001544:	613b      	str	r3, [r7, #16]
	struct UART_INPUT* local_UART_packet = &UART_packet;
 8001546:	4b2b      	ldr	r3, [pc, #172]	; (80015f4 <KISS_TO_HEX+0xb8>)
 8001548:	60fb      	str	r3, [r7, #12]

	local_UART_packet->received_byte_cnt = local_packet->byte_cnt+1;
 800154a:	693b      	ldr	r3, [r7, #16]
 800154c:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001550:	330c      	adds	r3, #12
 8001552:	681b      	ldr	r3, [r3, #0]
 8001554:	1c5a      	adds	r2, r3, #1
 8001556:	68fb      	ldr	r3, [r7, #12]
 8001558:	605a      	str	r2, [r3, #4]
	bool *curr_mem = local_packet->KISS_PACKET;
 800155a:	693b      	ldr	r3, [r7, #16]
 800155c:	f603 235f 	addw	r3, r3, #2655	; 0xa5f
 8001560:	60bb      	str	r3, [r7, #8]
	uint8_t curr_val;

	sprintf(uartData, "Filling HEX buffer:\n");
 8001562:	4a25      	ldr	r2, [pc, #148]	; (80015f8 <KISS_TO_HEX+0xbc>)
 8001564:	4b25      	ldr	r3, [pc, #148]	; (80015fc <KISS_TO_HEX+0xc0>)
 8001566:	4615      	mov	r5, r2
 8001568:	461c      	mov	r4, r3
 800156a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800156c:	6028      	str	r0, [r5, #0]
 800156e:	6069      	str	r1, [r5, #4]
 8001570:	60aa      	str	r2, [r5, #8]
 8001572:	60eb      	str	r3, [r5, #12]
 8001574:	6820      	ldr	r0, [r4, #0]
 8001576:	6128      	str	r0, [r5, #16]
 8001578:	7923      	ldrb	r3, [r4, #4]
 800157a:	752b      	strb	r3, [r5, #20]
	debug_print_msg();
 800157c:	f000 fa8a 	bl	8001a94 <debug_print_msg>

    for(int i = 0; i < local_UART_packet->received_byte_cnt; i++){
 8001580:	2300      	movs	r3, #0
 8001582:	617b      	str	r3, [r7, #20]
 8001584:	e01b      	b.n	80015be <KISS_TO_HEX+0x82>
    	curr_val = conv_BIN_to_HEX(curr_mem+(i*8),1);
 8001586:	697b      	ldr	r3, [r7, #20]
 8001588:	00db      	lsls	r3, r3, #3
 800158a:	461a      	mov	r2, r3
 800158c:	68bb      	ldr	r3, [r7, #8]
 800158e:	4413      	add	r3, r2
 8001590:	2101      	movs	r1, #1
 8001592:	4618      	mov	r0, r3
 8001594:	f7ff fd2c 	bl	8000ff0 <conv_BIN_to_HEX>
 8001598:	4603      	mov	r3, r0
 800159a:	71fb      	strb	r3, [r7, #7]

        sprintf(uartData, "HEX[%d] = %x\n",i,curr_val);
 800159c:	79fb      	ldrb	r3, [r7, #7]
 800159e:	697a      	ldr	r2, [r7, #20]
 80015a0:	4917      	ldr	r1, [pc, #92]	; (8001600 <KISS_TO_HEX+0xc4>)
 80015a2:	4815      	ldr	r0, [pc, #84]	; (80015f8 <KISS_TO_HEX+0xbc>)
 80015a4:	f005 f982 	bl	80068ac <siprintf>
    	debug_print_msg();
 80015a8:	f000 fa74 	bl	8001a94 <debug_print_msg>

        local_UART_packet->HEX_KISS_PACKET[i] = curr_val;
 80015ac:	68fa      	ldr	r2, [r7, #12]
 80015ae:	697b      	ldr	r3, [r7, #20]
 80015b0:	4413      	add	r3, r2
 80015b2:	330e      	adds	r3, #14
 80015b4:	79fa      	ldrb	r2, [r7, #7]
 80015b6:	701a      	strb	r2, [r3, #0]
    for(int i = 0; i < local_UART_packet->received_byte_cnt; i++){
 80015b8:	697b      	ldr	r3, [r7, #20]
 80015ba:	3301      	adds	r3, #1
 80015bc:	617b      	str	r3, [r7, #20]
 80015be:	68fb      	ldr	r3, [r7, #12]
 80015c0:	685b      	ldr	r3, [r3, #4]
 80015c2:	697a      	ldr	r2, [r7, #20]
 80015c4:	429a      	cmp	r2, r3
 80015c6:	dbde      	blt.n	8001586 <KISS_TO_HEX+0x4a>
    }

	sprintf(uartData, "HEX buffer filled\n");
 80015c8:	4a0b      	ldr	r2, [pc, #44]	; (80015f8 <KISS_TO_HEX+0xbc>)
 80015ca:	4b0e      	ldr	r3, [pc, #56]	; (8001604 <KISS_TO_HEX+0xc8>)
 80015cc:	4615      	mov	r5, r2
 80015ce:	461c      	mov	r4, r3
 80015d0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80015d2:	6028      	str	r0, [r5, #0]
 80015d4:	6069      	str	r1, [r5, #4]
 80015d6:	60aa      	str	r2, [r5, #8]
 80015d8:	60eb      	str	r3, [r5, #12]
 80015da:	8823      	ldrh	r3, [r4, #0]
 80015dc:	78a2      	ldrb	r2, [r4, #2]
 80015de:	822b      	strh	r3, [r5, #16]
 80015e0:	4613      	mov	r3, r2
 80015e2:	74ab      	strb	r3, [r5, #18]
	debug_print_msg();
 80015e4:	f000 fa56 	bl	8001a94 <debug_print_msg>
}
 80015e8:	bf00      	nop
 80015ea:	3718      	adds	r7, #24
 80015ec:	46bd      	mov	sp, r7
 80015ee:	bdb0      	pop	{r4, r5, r7, pc}
 80015f0:	200000e4 	.word	0x200000e4
 80015f4:	20001450 	.word	0x20001450
 80015f8:	20001ce8 	.word	0x20001ce8
 80015fc:	080084f8 	.word	0x080084f8
 8001600:	08008510 	.word	0x08008510
 8001604:	08008520 	.word	0x08008520

08001608 <crc_calc>:
//END OF KISS to AX.25 data flow

//---------------------- FCS Generation -----------------------------------------------------------------------------------------------

//CRC Calculations
void crc_calc(int in_bit, int * crc_ptr_in, int * crc_count_ptr_in){
 8001608:	b580      	push	{r7, lr}
 800160a:	b08a      	sub	sp, #40	; 0x28
 800160c:	af00      	add	r7, sp, #0
 800160e:	60f8      	str	r0, [r7, #12]
 8001610:	60b9      	str	r1, [r7, #8]
 8001612:	607a      	str	r2, [r7, #4]
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001614:	4b31      	ldr	r3, [pc, #196]	; (80016dc <crc_calc+0xd4>)
 8001616:	627b      	str	r3, [r7, #36]	; 0x24
	int max_bits = rxBit_count-FCS_len;
 8001618:	4b31      	ldr	r3, [pc, #196]	; (80016e0 <crc_calc+0xd8>)
 800161a:	681b      	ldr	r3, [r3, #0]
 800161c:	3b10      	subs	r3, #16
 800161e:	623b      	str	r3, [r7, #32]
	int out_bit;
	int roll_bit = *crc_ptr_in & 0x0001;
 8001620:	68bb      	ldr	r3, [r7, #8]
 8001622:	681b      	ldr	r3, [r3, #0]
 8001624:	f003 0301 	and.w	r3, r3, #1
 8001628:	61fb      	str	r3, [r7, #28]
    int poly = 0x8408;             			//reverse order of 0x1021
 800162a:	f248 4308 	movw	r3, #33800	; 0x8408
 800162e:	61bb      	str	r3, [r7, #24]

    out_bit = in_bit ^ roll_bit; 		//xor lsb of current crc with input bit
 8001630:	68fa      	ldr	r2, [r7, #12]
 8001632:	69fb      	ldr	r3, [r7, #28]
 8001634:	4053      	eors	r3, r2
 8001636:	617b      	str	r3, [r7, #20]
	*crc_ptr_in >>= 1;               	//right shift by 1
 8001638:	68bb      	ldr	r3, [r7, #8]
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	105a      	asrs	r2, r3, #1
 800163e:	68bb      	ldr	r3, [r7, #8]
 8001640:	601a      	str	r2, [r3, #0]
	poly = (out_bit == 1) ? 0x8408 : 0x0000;
 8001642:	697b      	ldr	r3, [r7, #20]
 8001644:	2b01      	cmp	r3, #1
 8001646:	d102      	bne.n	800164e <crc_calc+0x46>
 8001648:	f248 4308 	movw	r3, #33800	; 0x8408
 800164c:	e000      	b.n	8001650 <crc_calc+0x48>
 800164e:	2300      	movs	r3, #0
 8001650:	61bb      	str	r3, [r7, #24]
	*crc_ptr_in ^= poly;
 8001652:	68bb      	ldr	r3, [r7, #8]
 8001654:	681a      	ldr	r2, [r3, #0]
 8001656:	69bb      	ldr	r3, [r7, #24]
 8001658:	405a      	eors	r2, r3
 800165a:	68bb      	ldr	r3, [r7, #8]
 800165c:	601a      	str	r2, [r3, #0]
	*crc_count_ptr_in+=1;//Increment count
 800165e:	687b      	ldr	r3, [r7, #4]
 8001660:	681b      	ldr	r3, [r3, #0]
 8001662:	1c5a      	adds	r2, r3, #1
 8001664:	687b      	ldr	r3, [r7, #4]
 8001666:	601a      	str	r2, [r3, #0]

    //End condition
	if(*crc_count_ptr_in >= max_bits){
 8001668:	687b      	ldr	r3, [r7, #4]
 800166a:	681b      	ldr	r3, [r3, #0]
 800166c:	6a3a      	ldr	r2, [r7, #32]
 800166e:	429a      	cmp	r2, r3
 8001670:	dc30      	bgt.n	80016d4 <crc_calc+0xcc>
    	*crc_ptr_in ^= 0xFFFF;//Complete CRC by XOR with all ones (one's complement)
 8001672:	68bb      	ldr	r3, [r7, #8]
 8001674:	681b      	ldr	r3, [r3, #0]
 8001676:	f483 437f 	eor.w	r3, r3, #65280	; 0xff00
 800167a:	f083 03ff 	eor.w	r3, r3, #255	; 0xff
 800167e:	68ba      	ldr	r2, [r7, #8]
 8001680:	6013      	str	r3, [r2, #0]
  	    sprintf(uartData, "Convert CRC to FCS (hex) = %x\n",local_packet->crc);
 8001682:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001684:	f503 5399 	add.w	r3, r3, #4896	; 0x1320
 8001688:	3308      	adds	r3, #8
 800168a:	881b      	ldrh	r3, [r3, #0]
 800168c:	461a      	mov	r2, r3
 800168e:	4915      	ldr	r1, [pc, #84]	; (80016e4 <crc_calc+0xdc>)
 8001690:	4815      	ldr	r0, [pc, #84]	; (80016e8 <crc_calc+0xe0>)
 8001692:	f005 f90b 	bl	80068ac <siprintf>
    	debug_print_msg();
 8001696:	f000 f9fd 	bl	8001a94 <debug_print_msg>
    	if(local_packet->check_crc == false){
 800169a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800169c:	f503 5399 	add.w	r3, r3, #4896	; 0x1320
 80016a0:	3310      	adds	r3, #16
 80016a2:	781b      	ldrb	r3, [r3, #0]
 80016a4:	f083 0301 	eor.w	r3, r3, #1
 80016a8:	b2db      	uxtb	r3, r3
 80016aa:	2b00      	cmp	r3, #0
 80016ac:	d012      	beq.n	80016d4 <crc_calc+0xcc>
    		//REMEBER TO CHECK THIS CRC conversion FOR ACCURACY LATER
    		conv_HEX_to_BIN(*crc_ptr_in,local_packet->FCS,false);
 80016ae:	68bb      	ldr	r3, [r7, #8]
 80016b0:	681b      	ldr	r3, [r3, #0]
 80016b2:	b298      	uxth	r0, r3
 80016b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016b6:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80016ba:	3304      	adds	r3, #4
 80016bc:	681b      	ldr	r3, [r3, #0]
 80016be:	2200      	movs	r2, #0
 80016c0:	4619      	mov	r1, r3
 80016c2:	f7ff fc09 	bl	8000ed8 <conv_HEX_to_BIN>
    		local_packet->crc = 0xFFFF;
 80016c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016c8:	f503 5399 	add.w	r3, r3, #4896	; 0x1320
 80016cc:	3308      	adds	r3, #8
 80016ce:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016d2:	801a      	strh	r2, [r3, #0]
    	}
    }
}
 80016d4:	bf00      	nop
 80016d6:	3728      	adds	r7, #40	; 0x28
 80016d8:	46bd      	mov	sp, r7
 80016da:	bd80      	pop	{r7, pc}
 80016dc:	200000e4 	.word	0x200000e4
 80016e0:	200000a4 	.word	0x200000a4
 80016e4:	08008534 	.word	0x08008534
 80016e8:	20001ce8 	.word	0x20001ce8

080016ec <crc_generate>:

void crc_generate(){
 80016ec:	b5b0      	push	{r4, r5, r7, lr}
 80016ee:	b088      	sub	sp, #32
 80016f0:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 80016f2:	4b59      	ldr	r3, [pc, #356]	; (8001858 <crc_generate+0x16c>)
 80016f4:	60fb      	str	r3, [r7, #12]
	uint16_t * crc_ptr = &(local_packet->crc);
 80016f6:	68fb      	ldr	r3, [r7, #12]
 80016f8:	f503 5399 	add.w	r3, r3, #4896	; 0x1320
 80016fc:	3308      	adds	r3, #8
 80016fe:	60bb      	str	r3, [r7, #8]
	int * crc_count_ptr = &(local_packet->crc_count);
 8001700:	68fb      	ldr	r3, [r7, #12]
 8001702:	f503 5399 	add.w	r3, r3, #4896	; 0x1320
 8001706:	330c      	adds	r3, #12
 8001708:	607b      	str	r3, [r7, #4]
	bool *curr_mem;

	*crc_ptr = 0xFFFF;
 800170a:	68bb      	ldr	r3, [r7, #8]
 800170c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001710:	801a      	strh	r2, [r3, #0]
	*crc_count_ptr = 0;
 8001712:	687b      	ldr	r3, [r7, #4]
 8001714:	2200      	movs	r2, #0
 8001716:	601a      	str	r2, [r3, #0]

	//Generate CRC from packet pointers of current packet type

	//have to be inserted in reverse order
	sprintf(uartData, "Performing CRC generation\n");
 8001718:	4a50      	ldr	r2, [pc, #320]	; (800185c <crc_generate+0x170>)
 800171a:	4b51      	ldr	r3, [pc, #324]	; (8001860 <crc_generate+0x174>)
 800171c:	4615      	mov	r5, r2
 800171e:	461c      	mov	r4, r3
 8001720:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001722:	6028      	str	r0, [r5, #0]
 8001724:	6069      	str	r1, [r5, #4]
 8001726:	60aa      	str	r2, [r5, #8]
 8001728:	60eb      	str	r3, [r5, #12]
 800172a:	cc03      	ldmia	r4!, {r0, r1}
 800172c:	6128      	str	r0, [r5, #16]
 800172e:	6169      	str	r1, [r5, #20]
 8001730:	8823      	ldrh	r3, [r4, #0]
 8001732:	78a2      	ldrb	r2, [r4, #2]
 8001734:	832b      	strh	r3, [r5, #24]
 8001736:	4613      	mov	r3, r2
 8001738:	76ab      	strb	r3, [r5, #26]
	debug_print_msg();
 800173a:	f000 f9ab 	bl	8001a94 <debug_print_msg>

	//Calculate CRC for address
	curr_mem = (local_packet->address);//start at MS Byte(LSB)
 800173e:	68fb      	ldr	r3, [r7, #12]
 8001740:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001744:	3310      	adds	r3, #16
 8001746:	681b      	ldr	r3, [r3, #0]
 8001748:	603b      	str	r3, [r7, #0]
	for(int i = 0;i<address_len;i++){
 800174a:	2300      	movs	r3, #0
 800174c:	61fb      	str	r3, [r7, #28]
 800174e:	e00f      	b.n	8001770 <crc_generate+0x84>
		crc_calc((int)local_packet->address[i],crc_ptr,crc_count_ptr);
 8001750:	68fb      	ldr	r3, [r7, #12]
 8001752:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001756:	3310      	adds	r3, #16
 8001758:	681a      	ldr	r2, [r3, #0]
 800175a:	69fb      	ldr	r3, [r7, #28]
 800175c:	4413      	add	r3, r2
 800175e:	781b      	ldrb	r3, [r3, #0]
 8001760:	687a      	ldr	r2, [r7, #4]
 8001762:	68b9      	ldr	r1, [r7, #8]
 8001764:	4618      	mov	r0, r3
 8001766:	f7ff ff4f 	bl	8001608 <crc_calc>
	for(int i = 0;i<address_len;i++){
 800176a:	69fb      	ldr	r3, [r7, #28]
 800176c:	3301      	adds	r3, #1
 800176e:	61fb      	str	r3, [r7, #28]
 8001770:	69fb      	ldr	r3, [r7, #28]
 8001772:	2b6f      	cmp	r3, #111	; 0x6f
 8001774:	ddec      	ble.n	8001750 <crc_generate+0x64>
	}

	//Calculate CRC for control
	curr_mem = local_packet->control;
 8001776:	68fb      	ldr	r3, [r7, #12]
 8001778:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 800177c:	3314      	adds	r3, #20
 800177e:	681b      	ldr	r3, [r3, #0]
 8001780:	603b      	str	r3, [r7, #0]
	for(int i = 0; i < control_len; i++){
 8001782:	2300      	movs	r3, #0
 8001784:	61bb      	str	r3, [r7, #24]
 8001786:	e00f      	b.n	80017a8 <crc_generate+0xbc>
		//Call crc_calc per bit
		crc_calc((int)local_packet->control[i],crc_ptr,crc_count_ptr);
 8001788:	68fb      	ldr	r3, [r7, #12]
 800178a:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 800178e:	3314      	adds	r3, #20
 8001790:	681a      	ldr	r2, [r3, #0]
 8001792:	69bb      	ldr	r3, [r7, #24]
 8001794:	4413      	add	r3, r2
 8001796:	781b      	ldrb	r3, [r3, #0]
 8001798:	687a      	ldr	r2, [r7, #4]
 800179a:	68b9      	ldr	r1, [r7, #8]
 800179c:	4618      	mov	r0, r3
 800179e:	f7ff ff33 	bl	8001608 <crc_calc>
	for(int i = 0; i < control_len; i++){
 80017a2:	69bb      	ldr	r3, [r7, #24]
 80017a4:	3301      	adds	r3, #1
 80017a6:	61bb      	str	r3, [r7, #24]
 80017a8:	69bb      	ldr	r3, [r7, #24]
 80017aa:	2b07      	cmp	r3, #7
 80017ac:	ddec      	ble.n	8001788 <crc_generate+0x9c>
	}

//	//Calculate CRC for PID (if packet is of type i-frame)
	curr_mem = local_packet->PID;
 80017ae:	68fb      	ldr	r3, [r7, #12]
 80017b0:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80017b4:	3318      	adds	r3, #24
 80017b6:	681b      	ldr	r3, [r3, #0]
 80017b8:	603b      	str	r3, [r7, #0]
	for(int i = 0; i < PID_len; i++){
 80017ba:	2300      	movs	r3, #0
 80017bc:	617b      	str	r3, [r7, #20]
 80017be:	e00f      	b.n	80017e0 <crc_generate+0xf4>
		//Call crc_calc per bit
		crc_calc((int)local_packet->PID[i],crc_ptr,crc_count_ptr);
 80017c0:	68fb      	ldr	r3, [r7, #12]
 80017c2:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80017c6:	3318      	adds	r3, #24
 80017c8:	681a      	ldr	r2, [r3, #0]
 80017ca:	697b      	ldr	r3, [r7, #20]
 80017cc:	4413      	add	r3, r2
 80017ce:	781b      	ldrb	r3, [r3, #0]
 80017d0:	687a      	ldr	r2, [r7, #4]
 80017d2:	68b9      	ldr	r1, [r7, #8]
 80017d4:	4618      	mov	r0, r3
 80017d6:	f7ff ff17 	bl	8001608 <crc_calc>
	for(int i = 0; i < PID_len; i++){
 80017da:	697b      	ldr	r3, [r7, #20]
 80017dc:	3301      	adds	r3, #1
 80017de:	617b      	str	r3, [r7, #20]
 80017e0:	697b      	ldr	r3, [r7, #20]
 80017e2:	2b07      	cmp	r3, #7
 80017e4:	ddec      	ble.n	80017c0 <crc_generate+0xd4>
	}

	//Calculate CRC for Info field
	curr_mem = (local_packet->Info);
 80017e6:	68fb      	ldr	r3, [r7, #12]
 80017e8:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80017ec:	331c      	adds	r3, #28
 80017ee:	681b      	ldr	r3, [r3, #0]
 80017f0:	603b      	str	r3, [r7, #0]
	for(int i = 0;i<local_packet->Info_Len;i++){
 80017f2:	2300      	movs	r3, #0
 80017f4:	613b      	str	r3, [r7, #16]
 80017f6:	e00f      	b.n	8001818 <crc_generate+0x12c>
		crc_calc((int)local_packet->Info[i],crc_ptr,crc_count_ptr);
 80017f8:	68fb      	ldr	r3, [r7, #12]
 80017fa:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80017fe:	331c      	adds	r3, #28
 8001800:	681a      	ldr	r2, [r3, #0]
 8001802:	693b      	ldr	r3, [r7, #16]
 8001804:	4413      	add	r3, r2
 8001806:	781b      	ldrb	r3, [r3, #0]
 8001808:	687a      	ldr	r2, [r7, #4]
 800180a:	68b9      	ldr	r1, [r7, #8]
 800180c:	4618      	mov	r0, r3
 800180e:	f7ff fefb 	bl	8001608 <crc_calc>
	for(int i = 0;i<local_packet->Info_Len;i++){
 8001812:	693b      	ldr	r3, [r7, #16]
 8001814:	3301      	adds	r3, #1
 8001816:	613b      	str	r3, [r7, #16]
 8001818:	68fb      	ldr	r3, [r7, #12]
 800181a:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 800181e:	681b      	ldr	r3, [r3, #0]
 8001820:	693a      	ldr	r2, [r7, #16]
 8001822:	429a      	cmp	r2, r3
 8001824:	dbe8      	blt.n	80017f8 <crc_generate+0x10c>
	}

	sprintf(uartData, "rx_bitcnt = %d\n", rxBit_count);
 8001826:	4b0f      	ldr	r3, [pc, #60]	; (8001864 <crc_generate+0x178>)
 8001828:	681b      	ldr	r3, [r3, #0]
 800182a:	461a      	mov	r2, r3
 800182c:	490e      	ldr	r1, [pc, #56]	; (8001868 <crc_generate+0x17c>)
 800182e:	480b      	ldr	r0, [pc, #44]	; (800185c <crc_generate+0x170>)
 8001830:	f005 f83c 	bl	80068ac <siprintf>
	debug_print_msg();
 8001834:	f000 f92e 	bl	8001a94 <debug_print_msg>

	sprintf(uartData, "bitcnt_ptr = %d\n", *crc_count_ptr);
 8001838:	687b      	ldr	r3, [r7, #4]
 800183a:	681b      	ldr	r3, [r3, #0]
 800183c:	461a      	mov	r2, r3
 800183e:	490b      	ldr	r1, [pc, #44]	; (800186c <crc_generate+0x180>)
 8001840:	4806      	ldr	r0, [pc, #24]	; (800185c <crc_generate+0x170>)
 8001842:	f005 f833 	bl	80068ac <siprintf>
	debug_print_msg();
 8001846:	f000 f925 	bl	8001a94 <debug_print_msg>
	*crc_count_ptr = 0;
 800184a:	687b      	ldr	r3, [r7, #4]
 800184c:	2200      	movs	r2, #0
 800184e:	601a      	str	r2, [r3, #0]
}
 8001850:	bf00      	nop
 8001852:	3720      	adds	r7, #32
 8001854:	46bd      	mov	sp, r7
 8001856:	bdb0      	pop	{r4, r5, r7, pc}
 8001858:	200000e4 	.word	0x200000e4
 800185c:	20001ce8 	.word	0x20001ce8
 8001860:	08008554 	.word	0x08008554
 8001864:	200000a4 	.word	0x200000a4
 8001868:	08008570 	.word	0x08008570
 800186c:	08008580 	.word	0x08008580

08001870 <crc_check>:

bool crc_check(){
 8001870:	b580      	push	{r7, lr}
 8001872:	b082      	sub	sp, #8
 8001874:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001876:	4b14      	ldr	r3, [pc, #80]	; (80018c8 <crc_check+0x58>)
 8001878:	607b      	str	r3, [r7, #4]
	local_packet->check_crc = true;
 800187a:	687b      	ldr	r3, [r7, #4]
 800187c:	f503 5399 	add.w	r3, r3, #4896	; 0x1320
 8001880:	3310      	adds	r3, #16
 8001882:	2201      	movs	r2, #1
 8001884:	701a      	strb	r2, [r3, #0]
	uint16_t fcs_val = 0;
 8001886:	2300      	movs	r3, #0
 8001888:	807b      	strh	r3, [r7, #2]
	bool valid_crc = false;
 800188a:	2300      	movs	r3, #0
 800188c:	707b      	strb	r3, [r7, #1]

	fcs_val = conv_BIN_to_HEX(local_packet->FCS,0);
 800188e:	687b      	ldr	r3, [r7, #4]
 8001890:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001894:	3304      	adds	r3, #4
 8001896:	681b      	ldr	r3, [r3, #0]
 8001898:	2100      	movs	r1, #0
 800189a:	4618      	mov	r0, r3
 800189c:	f7ff fba8 	bl	8000ff0 <conv_BIN_to_HEX>
 80018a0:	4603      	mov	r3, r0
 80018a2:	807b      	strh	r3, [r7, #2]

	//generate crc
	crc_generate();
 80018a4:	f7ff ff22 	bl	80016ec <crc_generate>

	//compare crc
	valid_crc = (local_packet->crc==fcs_val) ? true : false;
 80018a8:	687b      	ldr	r3, [r7, #4]
 80018aa:	f503 5399 	add.w	r3, r3, #4896	; 0x1320
 80018ae:	3308      	adds	r3, #8
 80018b0:	881b      	ldrh	r3, [r3, #0]
 80018b2:	887a      	ldrh	r2, [r7, #2]
 80018b4:	429a      	cmp	r2, r3
 80018b6:	bf0c      	ite	eq
 80018b8:	2301      	moveq	r3, #1
 80018ba:	2300      	movne	r3, #0
 80018bc:	707b      	strb	r3, [r7, #1]
	return valid_crc;
 80018be:	787b      	ldrb	r3, [r7, #1]
}
 80018c0:	4618      	mov	r0, r3
 80018c2:	3708      	adds	r7, #8
 80018c4:	46bd      	mov	sp, r7
 80018c6:	bd80      	pop	{r7, pc}
 80018c8:	200000e4 	.word	0x200000e4

080018cc <initProgram>:
//****************************************************************************************************************
bool mode;
bool midbit = false;
bool changeMode = false;

void initProgram(bool modeStart) {
 80018cc:	b580      	push	{r7, lr}
 80018ce:	b082      	sub	sp, #8
 80018d0:	af00      	add	r7, sp, #0
 80018d2:	4603      	mov	r3, r0
 80018d4:	71fb      	strb	r3, [r7, #7]

	//Set hardware properly
	mode = modeStart;
 80018d6:	4a06      	ldr	r2, [pc, #24]	; (80018f0 <initProgram+0x24>)
 80018d8:	79fb      	ldrb	r3, [r7, #7]
 80018da:	7013      	strb	r3, [r2, #0]
	toggleMode();
 80018dc:	f000 f80a 	bl	80018f4 <toggleMode>
	toggleMode();
 80018e0:	f000 f808 	bl	80018f4 <toggleMode>

	init_UART();
 80018e4:	f000 fab4 	bl	8001e50 <init_UART>
}
 80018e8:	bf00      	nop
 80018ea:	3708      	adds	r7, #8
 80018ec:	46bd      	mov	sp, r7
 80018ee:	bd80      	pop	{r7, pc}
 80018f0:	2000298c 	.word	0x2000298c

080018f4 <toggleMode>:

void toggleMode() {
 80018f4:	b580      	push	{r7, lr}
 80018f6:	af00      	add	r7, sp, #0

	//Toggle mode
	mode = !mode;
 80018f8:	4b2e      	ldr	r3, [pc, #184]	; (80019b4 <toggleMode+0xc0>)
 80018fa:	781b      	ldrb	r3, [r3, #0]
 80018fc:	2b00      	cmp	r3, #0
 80018fe:	bf14      	ite	ne
 8001900:	2301      	movne	r3, #1
 8001902:	2300      	moveq	r3, #0
 8001904:	b2db      	uxtb	r3, r3
 8001906:	f083 0301 	eor.w	r3, r3, #1
 800190a:	b2db      	uxtb	r3, r3
 800190c:	f003 0301 	and.w	r3, r3, #1
 8001910:	b2da      	uxtb	r2, r3
 8001912:	4b28      	ldr	r3, [pc, #160]	; (80019b4 <toggleMode+0xc0>)
 8001914:	701a      	strb	r2, [r3, #0]
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, mode);
 8001916:	4b27      	ldr	r3, [pc, #156]	; (80019b4 <toggleMode+0xc0>)
 8001918:	781b      	ldrb	r3, [r3, #0]
 800191a:	461a      	mov	r2, r3
 800191c:	2120      	movs	r1, #32
 800191e:	4826      	ldr	r0, [pc, #152]	; (80019b8 <toggleMode+0xc4>)
 8001920:	f002 f834 	bl	800398c <HAL_GPIO_WritePin>

	//Stop DAC
	HAL_DAC_Stop_DMA(&hdac, DAC_CHANNEL_1);
 8001924:	2100      	movs	r1, #0
 8001926:	4825      	ldr	r0, [pc, #148]	; (80019bc <toggleMode+0xc8>)
 8001928:	f001 fa95 	bl	8002e56 <HAL_DAC_Stop_DMA>
	midbit = false;
 800192c:	4b24      	ldr	r3, [pc, #144]	; (80019c0 <toggleMode+0xcc>)
 800192e:	2200      	movs	r2, #0
 8001930:	701a      	strb	r2, [r3, #0]

	//Stop Timers the Correct Way
	HAL_TIM_OC_Stop_IT(&htim2, TIM_CHANNEL_1);
 8001932:	2100      	movs	r1, #0
 8001934:	4823      	ldr	r0, [pc, #140]	; (80019c4 <toggleMode+0xd0>)
 8001936:	f002 fea5 	bl	8004684 <HAL_TIM_OC_Stop_IT>
	HAL_TIM_Base_Stop(&htim3);
 800193a:	4823      	ldr	r0, [pc, #140]	; (80019c8 <toggleMode+0xd4>)
 800193c:	f002 fdbd 	bl	80044ba <HAL_TIM_Base_Stop>
	HAL_TIM_IC_Stop_IT(&htim5, TIM_CHANNEL_1);
 8001940:	2100      	movs	r1, #0
 8001942:	4822      	ldr	r0, [pc, #136]	; (80019cc <toggleMode+0xd8>)
 8001944:	f002 ffd6 	bl	80048f4 <HAL_TIM_IC_Stop_IT>

	//Zero Timers
	htim2.Instance->CNT = 0;
 8001948:	4b1e      	ldr	r3, [pc, #120]	; (80019c4 <toggleMode+0xd0>)
 800194a:	681b      	ldr	r3, [r3, #0]
 800194c:	2200      	movs	r2, #0
 800194e:	625a      	str	r2, [r3, #36]	; 0x24
	htim3.Instance->CNT = 0;
 8001950:	4b1d      	ldr	r3, [pc, #116]	; (80019c8 <toggleMode+0xd4>)
 8001952:	681b      	ldr	r3, [r3, #0]
 8001954:	2200      	movs	r2, #0
 8001956:	625a      	str	r2, [r3, #36]	; 0x24
	htim5.Instance->CNT = 0;
 8001958:	4b1c      	ldr	r3, [pc, #112]	; (80019cc <toggleMode+0xd8>)
 800195a:	681b      	ldr	r3, [r3, #0]
 800195c:	2200      	movs	r2, #0
 800195e:	625a      	str	r2, [r3, #36]	; 0x24

	//Transmission Mode
	if (mode) {
 8001960:	4b14      	ldr	r3, [pc, #80]	; (80019b4 <toggleMode+0xc0>)
 8001962:	781b      	ldrb	r3, [r3, #0]
 8001964:	2b00      	cmp	r3, #0
 8001966:	d00d      	beq.n	8001984 <toggleMode+0x90>

		//Set Timer Auto Reload Settings
		htim2.Instance->ARR = TIM2_AUTORELOAD_TX_LOW;
 8001968:	4b16      	ldr	r3, [pc, #88]	; (80019c4 <toggleMode+0xd0>)
 800196a:	681b      	ldr	r3, [r3, #0]
 800196c:	226c      	movs	r2, #108	; 0x6c
 800196e:	62da      	str	r2, [r3, #44]	; 0x2c
		htim3.Instance->ARR = TIM3_AUTORELOAD_TX;
 8001970:	4b15      	ldr	r3, [pc, #84]	; (80019c8 <toggleMode+0xd4>)
 8001972:	681b      	ldr	r3, [r3, #0]
 8001974:	f44f 724f 	mov.w	r2, #828	; 0x33c
 8001978:	62da      	str	r2, [r3, #44]	; 0x2c
		htim5.Instance->ARR = TIM5_AUTORELOAD_TX;
 800197a:	4b14      	ldr	r3, [pc, #80]	; (80019cc <toggleMode+0xd8>)
 800197c:	681b      	ldr	r3, [r3, #0]
 800197e:	2200      	movs	r2, #0
 8001980:	62da      	str	r2, [r3, #44]	; 0x2c

//		//Start Timers the Correct Way
		HAL_TIM_OC_Start_IT(&htim2, TIM_CHANNEL_1);
		HAL_TIM_IC_Start_IT(&htim5, TIM_CHANNEL_1);
	}
}
 8001982:	e014      	b.n	80019ae <toggleMode+0xba>
		htim2.Instance->ARR = TIM2_AUTORELOAD_TX_LOW;
 8001984:	4b0f      	ldr	r3, [pc, #60]	; (80019c4 <toggleMode+0xd0>)
 8001986:	681b      	ldr	r3, [r3, #0]
 8001988:	226c      	movs	r2, #108	; 0x6c
 800198a:	62da      	str	r2, [r3, #44]	; 0x2c
		htim3.Instance->ARR = TIM3_AUTORELOAD_TX;
 800198c:	4b0e      	ldr	r3, [pc, #56]	; (80019c8 <toggleMode+0xd4>)
 800198e:	681b      	ldr	r3, [r3, #0]
 8001990:	f44f 724f 	mov.w	r2, #828	; 0x33c
 8001994:	62da      	str	r2, [r3, #44]	; 0x2c
		htim5.Instance->ARR = TIM5_AUTORELOAD_TX;
 8001996:	4b0d      	ldr	r3, [pc, #52]	; (80019cc <toggleMode+0xd8>)
 8001998:	681b      	ldr	r3, [r3, #0]
 800199a:	2200      	movs	r2, #0
 800199c:	62da      	str	r2, [r3, #44]	; 0x2c
		HAL_TIM_OC_Start_IT(&htim2, TIM_CHANNEL_1);
 800199e:	2100      	movs	r1, #0
 80019a0:	4808      	ldr	r0, [pc, #32]	; (80019c4 <toggleMode+0xd0>)
 80019a2:	f002 fdeb 	bl	800457c <HAL_TIM_OC_Start_IT>
		HAL_TIM_IC_Start_IT(&htim5, TIM_CHANNEL_1);
 80019a6:	2100      	movs	r1, #0
 80019a8:	4808      	ldr	r0, [pc, #32]	; (80019cc <toggleMode+0xd8>)
 80019aa:	f002 ff3b 	bl	8004824 <HAL_TIM_IC_Start_IT>
}
 80019ae:	bf00      	nop
 80019b0:	bd80      	pop	{r7, pc}
 80019b2:	bf00      	nop
 80019b4:	2000298c 	.word	0x2000298c
 80019b8:	40020000 	.word	0x40020000
 80019bc:	20002990 	.word	0x20002990
 80019c0:	200000a8 	.word	0x200000a8
 80019c4:	200029a4 	.word	0x200029a4
 80019c8:	200028ec 	.word	0x200028ec
 80019cc:	200028ac 	.word	0x200028ac

080019d0 <loadBitBuffer>:
 * 11001110
 * 11001110
 */

bool bufffull = false;
int loadBitBuffer(bool bit_val) {
 80019d0:	b480      	push	{r7}
 80019d2:	b083      	sub	sp, #12
 80019d4:	af00      	add	r7, sp, #0
 80019d6:	4603      	mov	r3, r0
 80019d8:	71fb      	strb	r3, [r7, #7]
	if(canWrite){
 80019da:	4b18      	ldr	r3, [pc, #96]	; (8001a3c <loadBitBuffer+0x6c>)
 80019dc:	781b      	ldrb	r3, [r3, #0]
 80019de:	2b00      	cmp	r3, #0
 80019e0:	d01e      	beq.n	8001a20 <loadBitBuffer+0x50>
		bitBuffer[bitSaveCount] = bit_val;
 80019e2:	4b17      	ldr	r3, [pc, #92]	; (8001a40 <loadBitBuffer+0x70>)
 80019e4:	881b      	ldrh	r3, [r3, #0]
 80019e6:	4619      	mov	r1, r3
 80019e8:	4a16      	ldr	r2, [pc, #88]	; (8001a44 <loadBitBuffer+0x74>)
 80019ea:	79fb      	ldrb	r3, [r7, #7]
 80019ec:	5453      	strb	r3, [r2, r1]
		bitSaveCount++;
 80019ee:	4b14      	ldr	r3, [pc, #80]	; (8001a40 <loadBitBuffer+0x70>)
 80019f0:	881b      	ldrh	r3, [r3, #0]
 80019f2:	3301      	adds	r3, #1
 80019f4:	b29a      	uxth	r2, r3
 80019f6:	4b12      	ldr	r3, [pc, #72]	; (8001a40 <loadBitBuffer+0x70>)
 80019f8:	801a      	strh	r2, [r3, #0]
		if (bitSaveCount >= RX_BUFFERSIZE) {
 80019fa:	4b11      	ldr	r3, [pc, #68]	; (8001a40 <loadBitBuffer+0x70>)
 80019fc:	881b      	ldrh	r3, [r3, #0]
 80019fe:	f640 225e 	movw	r2, #2654	; 0xa5e
 8001a02:	4293      	cmp	r3, r2
 8001a04:	d902      	bls.n	8001a0c <loadBitBuffer+0x3c>
			canWrite = false;
 8001a06:	4b0d      	ldr	r3, [pc, #52]	; (8001a3c <loadBitBuffer+0x6c>)
 8001a08:	2200      	movs	r2, #0
 8001a0a:	701a      	strb	r2, [r3, #0]
		}

		//Buffer is full
		if(bitSaveCount == bitReadCount){
 8001a0c:	4b0c      	ldr	r3, [pc, #48]	; (8001a40 <loadBitBuffer+0x70>)
 8001a0e:	881a      	ldrh	r2, [r3, #0]
 8001a10:	4b0d      	ldr	r3, [pc, #52]	; (8001a48 <loadBitBuffer+0x78>)
 8001a12:	881b      	ldrh	r3, [r3, #0]
 8001a14:	429a      	cmp	r2, r3
 8001a16:	d106      	bne.n	8001a26 <loadBitBuffer+0x56>
			canWrite = false;
 8001a18:	4b08      	ldr	r3, [pc, #32]	; (8001a3c <loadBitBuffer+0x6c>)
 8001a1a:	2200      	movs	r2, #0
 8001a1c:	701a      	strb	r2, [r3, #0]
 8001a1e:	e002      	b.n	8001a26 <loadBitBuffer+0x56>
		}
	} else {
		bufffull = true;
 8001a20:	4b0a      	ldr	r3, [pc, #40]	; (8001a4c <loadBitBuffer+0x7c>)
 8001a22:	2201      	movs	r2, #1
 8001a24:	701a      	strb	r2, [r3, #0]
	}
	canRead = true;
 8001a26:	4b0a      	ldr	r3, [pc, #40]	; (8001a50 <loadBitBuffer+0x80>)
 8001a28:	2201      	movs	r2, #1
 8001a2a:	701a      	strb	r2, [r3, #0]
	return bitSaveCount;
 8001a2c:	4b04      	ldr	r3, [pc, #16]	; (8001a40 <loadBitBuffer+0x70>)
 8001a2e:	881b      	ldrh	r3, [r3, #0]
}
 8001a30:	4618      	mov	r0, r3
 8001a32:	370c      	adds	r7, #12
 8001a34:	46bd      	mov	sp, r7
 8001a36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a3a:	4770      	bx	lr
 8001a3c:	20000010 	.word	0x20000010
 8001a40:	200000ac 	.word	0x200000ac
 8001a44:	20002a24 	.word	0x20002a24
 8001a48:	200000ae 	.word	0x200000ae
 8001a4c:	200000aa 	.word	0x200000aa
 8001a50:	200000ab 	.word	0x200000ab

08001a54 <resetBitBuffer>:
	}
	bufffull = false;
	canWrite = true;
	return returnVal;
}
void resetBitBuffer(){
 8001a54:	b480      	push	{r7}
 8001a56:	af00      	add	r7, sp, #0
	bitReadCount = 0;
 8001a58:	4b09      	ldr	r3, [pc, #36]	; (8001a80 <resetBitBuffer+0x2c>)
 8001a5a:	2200      	movs	r2, #0
 8001a5c:	801a      	strh	r2, [r3, #0]
	bitSaveCount = 0;
 8001a5e:	4b09      	ldr	r3, [pc, #36]	; (8001a84 <resetBitBuffer+0x30>)
 8001a60:	2200      	movs	r2, #0
 8001a62:	801a      	strh	r2, [r3, #0]

	canRead  = false;
 8001a64:	4b08      	ldr	r3, [pc, #32]	; (8001a88 <resetBitBuffer+0x34>)
 8001a66:	2200      	movs	r2, #0
 8001a68:	701a      	strb	r2, [r3, #0]
	canWrite = true;
 8001a6a:	4b08      	ldr	r3, [pc, #32]	; (8001a8c <resetBitBuffer+0x38>)
 8001a6c:	2201      	movs	r2, #1
 8001a6e:	701a      	strb	r2, [r3, #0]

	bufffull = false;
 8001a70:	4b07      	ldr	r3, [pc, #28]	; (8001a90 <resetBitBuffer+0x3c>)
 8001a72:	2200      	movs	r2, #0
 8001a74:	701a      	strb	r2, [r3, #0]
}
 8001a76:	bf00      	nop
 8001a78:	46bd      	mov	sp, r7
 8001a7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a7e:	4770      	bx	lr
 8001a80:	200000ae 	.word	0x200000ae
 8001a84:	200000ac 	.word	0x200000ac
 8001a88:	200000ab 	.word	0x200000ab
 8001a8c:	20000010 	.word	0x20000010
 8001a90:	200000aa 	.word	0x200000aa

08001a94 <debug_print_msg>:
 *  Created on: Nov 1, 2020
 *      Author: monke
 */
#include "debug.h"

void debug_print_msg(){
 8001a94:	b580      	push	{r7, lr}
 8001a96:	af00      	add	r7, sp, #0
	if(debug_printing){
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001a98:	4805      	ldr	r0, [pc, #20]	; (8001ab0 <debug_print_msg+0x1c>)
 8001a9a:	f7fe fbb9 	bl	8000210 <strlen>
 8001a9e:	4603      	mov	r3, r0
 8001aa0:	b29a      	uxth	r2, r3
 8001aa2:	230a      	movs	r3, #10
 8001aa4:	4902      	ldr	r1, [pc, #8]	; (8001ab0 <debug_print_msg+0x1c>)
 8001aa6:	4803      	ldr	r0, [pc, #12]	; (8001ab4 <debug_print_msg+0x20>)
 8001aa8:	f003 ffbf 	bl	8005a2a <HAL_UART_Transmit>
	}
}
 8001aac:	bf00      	nop
 8001aae:	bd80      	pop	{r7, pc}
 8001ab0:	20001ce8 	.word	0x20001ce8
 8001ab4:	200029e4 	.word	0x200029e4

08001ab8 <Tim2_OC_Callback>:
int byteArray[8];
bool got_flag_start = false;
bool got_flag_end = false;

//Timer 2 Output Compare Callback
void Tim2_OC_Callback(){
 8001ab8:	b580      	push	{r7, lr}
 8001aba:	b086      	sub	sp, #24
 8001abc:	af00      	add	r7, sp, #0
	static int save_cnt;
	static int flag_cnt;
	bool isFlag = false;
 8001abe:	2300      	movs	r3, #0
 8001ac0:	75fb      	strb	r3, [r7, #23]

	freq_pin_state_last = hold_state;
 8001ac2:	4b7b      	ldr	r3, [pc, #492]	; (8001cb0 <Tim2_OC_Callback+0x1f8>)
 8001ac4:	781a      	ldrb	r2, [r3, #0]
 8001ac6:	4b7b      	ldr	r3, [pc, #492]	; (8001cb4 <Tim2_OC_Callback+0x1fc>)
 8001ac8:	701a      	strb	r2, [r3, #0]

	//Check if this is valid data
	if(clk_sync){
 8001aca:	4b7b      	ldr	r3, [pc, #492]	; (8001cb8 <Tim2_OC_Callback+0x200>)
 8001acc:	781b      	ldrb	r3, [r3, #0]
 8001ace:	2b00      	cmp	r3, #0
 8001ad0:	f000 80ca 	beq.w	8001c68 <Tim2_OC_Callback+0x1b0>
		NRZI = (freq_pin_state_curr==freq_pin_state_last) ? 1 : 0;
 8001ad4:	4b79      	ldr	r3, [pc, #484]	; (8001cbc <Tim2_OC_Callback+0x204>)
 8001ad6:	781a      	ldrb	r2, [r3, #0]
 8001ad8:	4b76      	ldr	r3, [pc, #472]	; (8001cb4 <Tim2_OC_Callback+0x1fc>)
 8001ada:	781b      	ldrb	r3, [r3, #0]
 8001adc:	429a      	cmp	r2, r3
 8001ade:	bf0c      	ite	eq
 8001ae0:	2301      	moveq	r3, #1
 8001ae2:	2300      	movne	r3, #0
 8001ae4:	b2da      	uxtb	r2, r3
 8001ae6:	4b76      	ldr	r3, [pc, #472]	; (8001cc0 <Tim2_OC_Callback+0x208>)
 8001ae8:	701a      	strb	r2, [r3, #0]

		HAL_GPIO_WritePin(GPIOA,D0_Pin,NRZI);
 8001aea:	4b75      	ldr	r3, [pc, #468]	; (8001cc0 <Tim2_OC_Callback+0x208>)
 8001aec:	781b      	ldrb	r3, [r3, #0]
 8001aee:	461a      	mov	r2, r3
 8001af0:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001af4:	4873      	ldr	r0, [pc, #460]	; (8001cc4 <Tim2_OC_Callback+0x20c>)
 8001af6:	f001 ff49 	bl	800398c <HAL_GPIO_WritePin>

		//Shift byte array for next comparison
//		memmove(&byteArray[1],&byteArray[0],7*sizeof(int));
		for(int i = 7;i>0;i--){
 8001afa:	2307      	movs	r3, #7
 8001afc:	613b      	str	r3, [r7, #16]
 8001afe:	e00b      	b.n	8001b18 <Tim2_OC_Callback+0x60>
			byteArray[i] = byteArray[i-1];
 8001b00:	693b      	ldr	r3, [r7, #16]
 8001b02:	3b01      	subs	r3, #1
 8001b04:	4a70      	ldr	r2, [pc, #448]	; (8001cc8 <Tim2_OC_Callback+0x210>)
 8001b06:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8001b0a:	496f      	ldr	r1, [pc, #444]	; (8001cc8 <Tim2_OC_Callback+0x210>)
 8001b0c:	693b      	ldr	r3, [r7, #16]
 8001b0e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		for(int i = 7;i>0;i--){
 8001b12:	693b      	ldr	r3, [r7, #16]
 8001b14:	3b01      	subs	r3, #1
 8001b16:	613b      	str	r3, [r7, #16]
 8001b18:	693b      	ldr	r3, [r7, #16]
 8001b1a:	2b00      	cmp	r3, #0
 8001b1c:	dcf0      	bgt.n	8001b00 <Tim2_OC_Callback+0x48>
		}

		byteArray[0] = NRZI;
 8001b1e:	4b68      	ldr	r3, [pc, #416]	; (8001cc0 <Tim2_OC_Callback+0x208>)
 8001b20:	781b      	ldrb	r3, [r3, #0]
 8001b22:	461a      	mov	r2, r3
 8001b24:	4b68      	ldr	r3, [pc, #416]	; (8001cc8 <Tim2_OC_Callback+0x210>)
 8001b26:	601a      	str	r2, [r3, #0]
		//11111100
		//01111110


		//Check if this is the flag
		for (int i = 0; i < 8; i++) {
 8001b28:	2300      	movs	r3, #0
 8001b2a:	60fb      	str	r3, [r7, #12]
 8001b2c:	e014      	b.n	8001b58 <Tim2_OC_Callback+0xa0>
			if(byteArray[i] != AX25TBYTE[i]){
 8001b2e:	4a66      	ldr	r2, [pc, #408]	; (8001cc8 <Tim2_OC_Callback+0x210>)
 8001b30:	68fb      	ldr	r3, [r7, #12]
 8001b32:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001b36:	4965      	ldr	r1, [pc, #404]	; (8001ccc <Tim2_OC_Callback+0x214>)
 8001b38:	68fa      	ldr	r2, [r7, #12]
 8001b3a:	440a      	add	r2, r1
 8001b3c:	7812      	ldrb	r2, [r2, #0]
 8001b3e:	4293      	cmp	r3, r2
 8001b40:	d002      	beq.n	8001b48 <Tim2_OC_Callback+0x90>
				isFlag = false;
 8001b42:	2300      	movs	r3, #0
 8001b44:	75fb      	strb	r3, [r7, #23]
				break;
 8001b46:	e00a      	b.n	8001b5e <Tim2_OC_Callback+0xa6>
			}
			//Got to end of byte array
			if(i==7){
 8001b48:	68fb      	ldr	r3, [r7, #12]
 8001b4a:	2b07      	cmp	r3, #7
 8001b4c:	d101      	bne.n	8001b52 <Tim2_OC_Callback+0x9a>
				isFlag = true;
 8001b4e:	2301      	movs	r3, #1
 8001b50:	75fb      	strb	r3, [r7, #23]
		for (int i = 0; i < 8; i++) {
 8001b52:	68fb      	ldr	r3, [r7, #12]
 8001b54:	3301      	adds	r3, #1
 8001b56:	60fb      	str	r3, [r7, #12]
 8001b58:	68fb      	ldr	r3, [r7, #12]
 8001b5a:	2b07      	cmp	r3, #7
 8001b5c:	dde7      	ble.n	8001b2e <Tim2_OC_Callback+0x76>
			}
		}
		//If this is not a flag, copy the values into the buffer pointer
		if(isFlag){
 8001b5e:	7dfb      	ldrb	r3, [r7, #23]
 8001b60:	2b00      	cmp	r3, #0
 8001b62:	d023      	beq.n	8001bac <Tim2_OC_Callback+0xf4>
			flag_cnt++;
 8001b64:	4b5a      	ldr	r3, [pc, #360]	; (8001cd0 <Tim2_OC_Callback+0x218>)
 8001b66:	681b      	ldr	r3, [r3, #0]
 8001b68:	3301      	adds	r3, #1
 8001b6a:	4a59      	ldr	r2, [pc, #356]	; (8001cd0 <Tim2_OC_Callback+0x218>)
 8001b6c:	6013      	str	r3, [r2, #0]

			//If we have a start flag, this is an end flag
			if(got_flag_start){
 8001b6e:	4b59      	ldr	r3, [pc, #356]	; (8001cd4 <Tim2_OC_Callback+0x21c>)
 8001b70:	781b      	ldrb	r3, [r3, #0]
 8001b72:	2b00      	cmp	r3, #0
 8001b74:	d006      	beq.n	8001b84 <Tim2_OC_Callback+0xcc>
				got_flag_start = false;
 8001b76:	4b57      	ldr	r3, [pc, #348]	; (8001cd4 <Tim2_OC_Callback+0x21c>)
 8001b78:	2200      	movs	r2, #0
 8001b7a:	701a      	strb	r2, [r3, #0]
				got_flag_end = true;
 8001b7c:	4b56      	ldr	r3, [pc, #344]	; (8001cd8 <Tim2_OC_Callback+0x220>)
 8001b7e:	2201      	movs	r2, #1
 8001b80:	701a      	strb	r2, [r3, #0]
 8001b82:	e010      	b.n	8001ba6 <Tim2_OC_Callback+0xee>
			}

			//Not sure how many appending flags????????
			else if(flag_cnt>=FLAG_END_COUNT){
 8001b84:	4b52      	ldr	r3, [pc, #328]	; (8001cd0 <Tim2_OC_Callback+0x218>)
 8001b86:	681b      	ldr	r3, [r3, #0]
 8001b88:	2b01      	cmp	r3, #1
 8001b8a:	dd0c      	ble.n	8001ba6 <Tim2_OC_Callback+0xee>
				//If no start flag has occurred
				if(!got_flag_start){
 8001b8c:	4b51      	ldr	r3, [pc, #324]	; (8001cd4 <Tim2_OC_Callback+0x21c>)
 8001b8e:	781b      	ldrb	r3, [r3, #0]
 8001b90:	f083 0301 	eor.w	r3, r3, #1
 8001b94:	b2db      	uxtb	r3, r3
 8001b96:	2b00      	cmp	r3, #0
 8001b98:	d002      	beq.n	8001ba0 <Tim2_OC_Callback+0xe8>
					got_flag_start = true;
 8001b9a:	4b4e      	ldr	r3, [pc, #312]	; (8001cd4 <Tim2_OC_Callback+0x21c>)
 8001b9c:	2201      	movs	r2, #1
 8001b9e:	701a      	strb	r2, [r3, #0]
				}

				//Reset flag count
				flag_cnt = 0;
 8001ba0:	4b4b      	ldr	r3, [pc, #300]	; (8001cd0 <Tim2_OC_Callback+0x218>)
 8001ba2:	2200      	movs	r2, #0
 8001ba4:	601a      	str	r2, [r3, #0]
			}

			//Reset flag var
			isFlag = false;
 8001ba6:	2300      	movs	r3, #0
 8001ba8:	75fb      	strb	r3, [r7, #23]
 8001baa:	e011      	b.n	8001bd0 <Tim2_OC_Callback+0x118>
		}

		else if(got_flag_start){
 8001bac:	4b49      	ldr	r3, [pc, #292]	; (8001cd4 <Tim2_OC_Callback+0x21c>)
 8001bae:	781b      	ldrb	r3, [r3, #0]
 8001bb0:	2b00      	cmp	r3, #0
 8001bb2:	d00d      	beq.n	8001bd0 <Tim2_OC_Callback+0x118>
			HAL_GPIO_TogglePin(GPIOB,D2_Pin);
 8001bb4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001bb8:	4848      	ldr	r0, [pc, #288]	; (8001cdc <Tim2_OC_Callback+0x224>)
 8001bba:	f001 ff00 	bl	80039be <HAL_GPIO_TogglePin>
			//Load the processed bit into the buffer
			save_cnt = loadBitBuffer(NRZI)+1;
 8001bbe:	4b40      	ldr	r3, [pc, #256]	; (8001cc0 <Tim2_OC_Callback+0x208>)
 8001bc0:	781b      	ldrb	r3, [r3, #0]
 8001bc2:	4618      	mov	r0, r3
 8001bc4:	f7ff ff04 	bl	80019d0 <loadBitBuffer>
 8001bc8:	4603      	mov	r3, r0
 8001bca:	3301      	adds	r3, #1
 8001bcc:	4a44      	ldr	r2, [pc, #272]	; (8001ce0 <Tim2_OC_Callback+0x228>)
 8001bce:	6013      	str	r3, [r2, #0]
		}

		//Found ending flag, now need to process bit buffer
		if(got_flag_end){
 8001bd0:	4b41      	ldr	r3, [pc, #260]	; (8001cd8 <Tim2_OC_Callback+0x220>)
 8001bd2:	781b      	ldrb	r3, [r3, #0]
 8001bd4:	2b00      	cmp	r3, #0
 8001bd6:	d039      	beq.n	8001c4c <Tim2_OC_Callback+0x194>
			got_flag_end = false;
 8001bd8:	4b3f      	ldr	r3, [pc, #252]	; (8001cd8 <Tim2_OC_Callback+0x220>)
 8001bda:	2200      	movs	r2, #0
 8001bdc:	701a      	strb	r2, [r3, #0]
			HAL_GPIO_TogglePin(GPIOB,D3_Pin);
 8001bde:	2110      	movs	r1, #16
 8001be0:	483e      	ldr	r0, [pc, #248]	; (8001cdc <Tim2_OC_Callback+0x224>)
 8001be2:	f001 feec 	bl	80039be <HAL_GPIO_TogglePin>

			//Disable Interrupts for data processing
			HAL_TIM_OC_Stop_IT(&htim2, TIM_CHANNEL_1);
 8001be6:	2100      	movs	r1, #0
 8001be8:	483e      	ldr	r0, [pc, #248]	; (8001ce4 <Tim2_OC_Callback+0x22c>)
 8001bea:	f002 fd4b 	bl	8004684 <HAL_TIM_OC_Stop_IT>
			HAL_TIM_IC_Stop_IT(&htim5, TIM_CHANNEL_1);
 8001bee:	2100      	movs	r1, #0
 8001bf0:	483d      	ldr	r0, [pc, #244]	; (8001ce8 <Tim2_OC_Callback+0x230>)
 8001bf2:	f002 fe7f 	bl	80048f4 <HAL_TIM_IC_Stop_IT>

			//Buffer will be filled with ending flags, dont want this in ax.25 buffer
			save_cnt -= FLAG_SIZE;
 8001bf6:	4b3a      	ldr	r3, [pc, #232]	; (8001ce0 <Tim2_OC_Callback+0x228>)
 8001bf8:	681b      	ldr	r3, [r3, #0]
 8001bfa:	3b08      	subs	r3, #8
 8001bfc:	4a38      	ldr	r2, [pc, #224]	; (8001ce0 <Tim2_OC_Callback+0x228>)
 8001bfe:	6013      	str	r3, [r2, #0]
			rxBit_count = save_cnt;
 8001c00:	4b37      	ldr	r3, [pc, #220]	; (8001ce0 <Tim2_OC_Callback+0x228>)
 8001c02:	681b      	ldr	r3, [r3, #0]
 8001c04:	4a39      	ldr	r2, [pc, #228]	; (8001cec <Tim2_OC_Callback+0x234>)
 8001c06:	6013      	str	r3, [r2, #0]

//			sprintf(uartData, "byte_cnt = %d\n",global_packet.byte_cnt);
//			debug_print_msg();

			memcpy(global_packet.AX25_PACKET,bitBuffer,save_cnt);
 8001c08:	4b35      	ldr	r3, [pc, #212]	; (8001ce0 <Tim2_OC_Callback+0x228>)
 8001c0a:	681b      	ldr	r3, [r3, #0]
 8001c0c:	461a      	mov	r2, r3
 8001c0e:	4938      	ldr	r1, [pc, #224]	; (8001cf0 <Tim2_OC_Callback+0x238>)
 8001c10:	4838      	ldr	r0, [pc, #224]	; (8001cf4 <Tim2_OC_Callback+0x23c>)
 8001c12:	f004 fe1f 	bl	8006854 <memcpy>

//			compareBoolBuffers(bitBuffer,global_packet.AX25_PACKET,rxBit_count);

			remove_bit_stuffing();
 8001c16:	f7ff fae1 	bl	80011dc <remove_bit_stuffing>
			global_packet.byte_cnt = rxBit_count/8;
 8001c1a:	4b34      	ldr	r3, [pc, #208]	; (8001cec <Tim2_OC_Callback+0x234>)
 8001c1c:	681b      	ldr	r3, [r3, #0]
 8001c1e:	2b00      	cmp	r3, #0
 8001c20:	da00      	bge.n	8001c24 <Tim2_OC_Callback+0x16c>
 8001c22:	3307      	adds	r3, #7
 8001c24:	10db      	asrs	r3, r3, #3
 8001c26:	461a      	mov	r2, r3
 8001c28:	4b32      	ldr	r3, [pc, #200]	; (8001cf4 <Tim2_OC_Callback+0x23c>)
 8001c2a:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001c2e:	330c      	adds	r3, #12
 8001c30:	601a      	str	r2, [r3, #0]

			//Receive data
			receiving_AX25();
 8001c32:	f7ff fa93 	bl	800115c <receiving_AX25>

			save_cnt = 0;
 8001c36:	4b2a      	ldr	r3, [pc, #168]	; (8001ce0 <Tim2_OC_Callback+0x228>)
 8001c38:	2200      	movs	r2, #0
 8001c3a:	601a      	str	r2, [r3, #0]

			//Enable Interrupts since data processing is complete
			HAL_TIM_OC_Start_IT(&htim2, TIM_CHANNEL_1);
 8001c3c:	2100      	movs	r1, #0
 8001c3e:	4829      	ldr	r0, [pc, #164]	; (8001ce4 <Tim2_OC_Callback+0x22c>)
 8001c40:	f002 fc9c 	bl	800457c <HAL_TIM_OC_Start_IT>
			HAL_TIM_IC_Start_IT(&htim5, TIM_CHANNEL_1);
 8001c44:	2100      	movs	r1, #0
 8001c46:	4828      	ldr	r0, [pc, #160]	; (8001ce8 <Tim2_OC_Callback+0x230>)
 8001c48:	f002 fdec 	bl	8004824 <HAL_TIM_IC_Start_IT>
		}

		//Prepare OC for next sample
		uint32_t this_capture = __HAL_TIM_GET_COMPARE(&htim2, TIM_CHANNEL_1);
 8001c4c:	4b25      	ldr	r3, [pc, #148]	; (8001ce4 <Tim2_OC_Callback+0x22c>)
 8001c4e:	681b      	ldr	r3, [r3, #0]
 8001c50:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001c52:	60bb      	str	r3, [r7, #8]
		uint32_t next_sampl = this_capture + bit_sample_period;
 8001c54:	68bb      	ldr	r3, [r7, #8]
 8001c56:	f503 4302 	add.w	r3, r3, #33280	; 0x8200
 8001c5a:	3335      	adds	r3, #53	; 0x35
 8001c5c:	607b      	str	r3, [r7, #4]
		__HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1,next_sampl); // if we have not received a transition to the input capture module, we want to refresh the output compare module with the last known bit period
 8001c5e:	4b21      	ldr	r3, [pc, #132]	; (8001ce4 <Tim2_OC_Callback+0x22c>)
 8001c60:	681b      	ldr	r3, [r3, #0]
 8001c62:	687a      	ldr	r2, [r7, #4]
 8001c64:	635a      	str	r2, [r3, #52]	; 0x34
 8001c66:	e00d      	b.n	8001c84 <Tim2_OC_Callback+0x1cc>
	}

	//Clock not syncd
	else
	{
		HAL_GPIO_TogglePin(GPIOA,D1_Pin);
 8001c68:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001c6c:	4815      	ldr	r0, [pc, #84]	; (8001cc4 <Tim2_OC_Callback+0x20c>)
 8001c6e:	f001 fea6 	bl	80039be <HAL_GPIO_TogglePin>
		got_flag_start = false;
 8001c72:	4b18      	ldr	r3, [pc, #96]	; (8001cd4 <Tim2_OC_Callback+0x21c>)
 8001c74:	2200      	movs	r2, #0
 8001c76:	701a      	strb	r2, [r3, #0]
		got_flag_end = false;
 8001c78:	4b17      	ldr	r3, [pc, #92]	; (8001cd8 <Tim2_OC_Callback+0x220>)
 8001c7a:	2200      	movs	r2, #0
 8001c7c:	701a      	strb	r2, [r3, #0]
		flag_cnt = 0;
 8001c7e:	4b14      	ldr	r3, [pc, #80]	; (8001cd0 <Tim2_OC_Callback+0x218>)
 8001c80:	2200      	movs	r2, #0
 8001c82:	601a      	str	r2, [r3, #0]
	}

	//Inc number of bits since last clock sync
	captured_bits_count++;
 8001c84:	4b1c      	ldr	r3, [pc, #112]	; (8001cf8 <Tim2_OC_Callback+0x240>)
 8001c86:	781b      	ldrb	r3, [r3, #0]
 8001c88:	3301      	adds	r3, #1
 8001c8a:	b2da      	uxtb	r2, r3
 8001c8c:	4b1a      	ldr	r3, [pc, #104]	; (8001cf8 <Tim2_OC_Callback+0x240>)
 8001c8e:	701a      	strb	r2, [r3, #0]
	if(captured_bits_count >= samp_per_bit * no_clk_max_cnt){
 8001c90:	4b19      	ldr	r3, [pc, #100]	; (8001cf8 <Tim2_OC_Callback+0x240>)
 8001c92:	781b      	ldrb	r3, [r3, #0]
 8001c94:	2b3f      	cmp	r3, #63	; 0x3f
 8001c96:	d902      	bls.n	8001c9e <Tim2_OC_Callback+0x1e6>
		clk_sync = false;	//Clock is no longer sync
 8001c98:	4b07      	ldr	r3, [pc, #28]	; (8001cb8 <Tim2_OC_Callback+0x200>)
 8001c9a:	2200      	movs	r2, #0
 8001c9c:	701a      	strb	r2, [r3, #0]
	}
	hold_state = freq_pin_state_curr;
 8001c9e:	4b07      	ldr	r3, [pc, #28]	; (8001cbc <Tim2_OC_Callback+0x204>)
 8001ca0:	781a      	ldrb	r2, [r3, #0]
 8001ca2:	4b03      	ldr	r3, [pc, #12]	; (8001cb0 <Tim2_OC_Callback+0x1f8>)
 8001ca4:	701a      	strb	r2, [r3, #0]

	return;
 8001ca6:	bf00      	nop
}
 8001ca8:	3718      	adds	r7, #24
 8001caa:	46bd      	mov	sp, r7
 8001cac:	bd80      	pop	{r7, pc}
 8001cae:	bf00      	nop
 8001cb0:	20003484 	.word	0x20003484
 8001cb4:	200000c3 	.word	0x200000c3
 8001cb8:	200000b1 	.word	0x200000b1
 8001cbc:	200000c2 	.word	0x200000c2
 8001cc0:	2000348c 	.word	0x2000348c
 8001cc4:	40020000 	.word	0x40020000
 8001cc8:	20003490 	.word	0x20003490
 8001ccc:	20000008 	.word	0x20000008
 8001cd0:	200000c8 	.word	0x200000c8
 8001cd4:	200000c4 	.word	0x200000c4
 8001cd8:	200000c5 	.word	0x200000c5
 8001cdc:	40020400 	.word	0x40020400
 8001ce0:	200000cc 	.word	0x200000cc
 8001ce4:	200029a4 	.word	0x200029a4
 8001ce8:	200028ac 	.word	0x200028ac
 8001cec:	200000a4 	.word	0x200000a4
 8001cf0:	20002a24 	.word	0x20002a24
 8001cf4:	200000e4 	.word	0x200000e4
 8001cf8:	200000b0 	.word	0x200000b0

08001cfc <Tim3_IT_Callback>:
void Tim3_IT_Callback() {
 8001cfc:	b480      	push	{r7}
 8001cfe:	af00      	add	r7, sp, #0
	if (mode) {
 8001d00:	4b05      	ldr	r3, [pc, #20]	; (8001d18 <Tim3_IT_Callback+0x1c>)
 8001d02:	781b      	ldrb	r3, [r3, #0]
 8001d04:	2b00      	cmp	r3, #0
 8001d06:	d002      	beq.n	8001d0e <Tim3_IT_Callback+0x12>
		midbit = false;
 8001d08:	4b04      	ldr	r3, [pc, #16]	; (8001d1c <Tim3_IT_Callback+0x20>)
 8001d0a:	2200      	movs	r2, #0
 8001d0c:	701a      	strb	r2, [r3, #0]
	}
	//Timer 3 does nothing in RX
	else {}
}
 8001d0e:	bf00      	nop
 8001d10:	46bd      	mov	sp, r7
 8001d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d16:	4770      	bx	lr
 8001d18:	2000298c 	.word	0x2000298c
 8001d1c:	200000a8 	.word	0x200000a8

08001d20 <Tim5_IC_Callback>:
//Timer 5 Input Capture Callback
void Tim5_IC_Callback(){
 8001d20:	b580      	push	{r7, lr}
 8001d22:	b082      	sub	sp, #8
 8001d24:	af00      	add	r7, sp, #0
	uint32_t this_capture = 0;		// simply stores either the rising or falling capture, based on which state we are in (avoids duplicate code)
 8001d26:	2300      	movs	r3, #0
 8001d28:	607b      	str	r3, [r7, #4]

	//Grap pin state for OC timer
	freq_pin_state_curr = signal_edge;
 8001d2a:	4b3e      	ldr	r3, [pc, #248]	; (8001e24 <Tim5_IC_Callback+0x104>)
 8001d2c:	781a      	ldrb	r2, [r3, #0]
 8001d2e:	4b3e      	ldr	r3, [pc, #248]	; (8001e28 <Tim5_IC_Callback+0x108>)
 8001d30:	701a      	strb	r2, [r3, #0]

	//Rising Edge
	if (signal_edge)
 8001d32:	4b3c      	ldr	r3, [pc, #240]	; (8001e24 <Tim5_IC_Callback+0x104>)
 8001d34:	781b      	ldrb	r3, [r3, #0]
 8001d36:	2b00      	cmp	r3, #0
 8001d38:	d01f      	beq.n	8001d7a <Tim5_IC_Callback+0x5a>
	{
		rising_capture = HAL_TIM_ReadCapturedValue(&htim5, TIM_CHANNEL_1); //Time-stamp interrupt
 8001d3a:	2100      	movs	r1, #0
 8001d3c:	483b      	ldr	r0, [pc, #236]	; (8001e2c <Tim5_IC_Callback+0x10c>)
 8001d3e:	f003 f905 	bl	8004f4c <HAL_TIM_ReadCapturedValue>
 8001d42:	4602      	mov	r2, r0
 8001d44:	4b3a      	ldr	r3, [pc, #232]	; (8001e30 <Tim5_IC_Callback+0x110>)
 8001d46:	601a      	str	r2, [r3, #0]
		signal_edge = FALLING_EDGE;		// look for falling edge on next capture
 8001d48:	4b36      	ldr	r3, [pc, #216]	; (8001e24 <Tim5_IC_Callback+0x104>)
 8001d4a:	2200      	movs	r2, #0
 8001d4c:	701a      	strb	r2, [r3, #0]
		rise_captured = true;
 8001d4e:	4b39      	ldr	r3, [pc, #228]	; (8001e34 <Tim5_IC_Callback+0x114>)
 8001d50:	2201      	movs	r2, #1
 8001d52:	701a      	strb	r2, [r3, #0]

		if (rise_captured && fall_captured)
 8001d54:	4b37      	ldr	r3, [pc, #220]	; (8001e34 <Tim5_IC_Callback+0x114>)
 8001d56:	781b      	ldrb	r3, [r3, #0]
 8001d58:	2b00      	cmp	r3, #0
 8001d5a:	d02d      	beq.n	8001db8 <Tim5_IC_Callback+0x98>
 8001d5c:	4b36      	ldr	r3, [pc, #216]	; (8001e38 <Tim5_IC_Callback+0x118>)
 8001d5e:	781b      	ldrb	r3, [r3, #0]
 8001d60:	2b00      	cmp	r3, #0
 8001d62:	d029      	beq.n	8001db8 <Tim5_IC_Callback+0x98>
		{
			capture_difference = rising_capture - falling_capture;		// calculate difference
 8001d64:	4b32      	ldr	r3, [pc, #200]	; (8001e30 <Tim5_IC_Callback+0x110>)
 8001d66:	681a      	ldr	r2, [r3, #0]
 8001d68:	4b34      	ldr	r3, [pc, #208]	; (8001e3c <Tim5_IC_Callback+0x11c>)
 8001d6a:	681b      	ldr	r3, [r3, #0]
 8001d6c:	1ad3      	subs	r3, r2, r3
 8001d6e:	4a34      	ldr	r2, [pc, #208]	; (8001e40 <Tim5_IC_Callback+0x120>)
 8001d70:	6013      	str	r3, [r2, #0]
			this_capture = rising_capture;		// set current sample to rising edge
 8001d72:	4b2f      	ldr	r3, [pc, #188]	; (8001e30 <Tim5_IC_Callback+0x110>)
 8001d74:	681b      	ldr	r3, [r3, #0]
 8001d76:	607b      	str	r3, [r7, #4]
 8001d78:	e01e      	b.n	8001db8 <Tim5_IC_Callback+0x98>
	}

	//Falling edge
	else
	{
		falling_capture = HAL_TIM_ReadCapturedValue(&htim5, TIM_CHANNEL_1);		//Time-stamp interrupt
 8001d7a:	2100      	movs	r1, #0
 8001d7c:	482b      	ldr	r0, [pc, #172]	; (8001e2c <Tim5_IC_Callback+0x10c>)
 8001d7e:	f003 f8e5 	bl	8004f4c <HAL_TIM_ReadCapturedValue>
 8001d82:	4602      	mov	r2, r0
 8001d84:	4b2d      	ldr	r3, [pc, #180]	; (8001e3c <Tim5_IC_Callback+0x11c>)
 8001d86:	601a      	str	r2, [r3, #0]
		fall_captured = true;
 8001d88:	4b2b      	ldr	r3, [pc, #172]	; (8001e38 <Tim5_IC_Callback+0x118>)
 8001d8a:	2201      	movs	r2, #1
 8001d8c:	701a      	strb	r2, [r3, #0]
		signal_edge = RISING_EDGE;		// look for rising edge on next capture
 8001d8e:	4b25      	ldr	r3, [pc, #148]	; (8001e24 <Tim5_IC_Callback+0x104>)
 8001d90:	2201      	movs	r2, #1
 8001d92:	701a      	strb	r2, [r3, #0]

		if (rise_captured && fall_captured)
 8001d94:	4b27      	ldr	r3, [pc, #156]	; (8001e34 <Tim5_IC_Callback+0x114>)
 8001d96:	781b      	ldrb	r3, [r3, #0]
 8001d98:	2b00      	cmp	r3, #0
 8001d9a:	d00d      	beq.n	8001db8 <Tim5_IC_Callback+0x98>
 8001d9c:	4b26      	ldr	r3, [pc, #152]	; (8001e38 <Tim5_IC_Callback+0x118>)
 8001d9e:	781b      	ldrb	r3, [r3, #0]
 8001da0:	2b00      	cmp	r3, #0
 8001da2:	d009      	beq.n	8001db8 <Tim5_IC_Callback+0x98>
		{
			capture_difference = falling_capture - rising_capture;		// calculate difference
 8001da4:	4b25      	ldr	r3, [pc, #148]	; (8001e3c <Tim5_IC_Callback+0x11c>)
 8001da6:	681a      	ldr	r2, [r3, #0]
 8001da8:	4b21      	ldr	r3, [pc, #132]	; (8001e30 <Tim5_IC_Callback+0x110>)
 8001daa:	681b      	ldr	r3, [r3, #0]
 8001dac:	1ad3      	subs	r3, r2, r3
 8001dae:	4a24      	ldr	r2, [pc, #144]	; (8001e40 <Tim5_IC_Callback+0x120>)
 8001db0:	6013      	str	r3, [r2, #0]
			this_capture = falling_capture;
 8001db2:	4b22      	ldr	r3, [pc, #136]	; (8001e3c <Tim5_IC_Callback+0x11c>)
 8001db4:	681b      	ldr	r3, [r3, #0]
 8001db6:	607b      	str	r3, [r7, #4]
		}
	}

	//Have now captured the transition period
	//Can use this to align sampling clock
	if (rise_captured && fall_captured)
 8001db8:	4b1e      	ldr	r3, [pc, #120]	; (8001e34 <Tim5_IC_Callback+0x114>)
 8001dba:	781b      	ldrb	r3, [r3, #0]
 8001dbc:	2b00      	cmp	r3, #0
 8001dbe:	d02d      	beq.n	8001e1c <Tim5_IC_Callback+0xfc>
 8001dc0:	4b1d      	ldr	r3, [pc, #116]	; (8001e38 <Tim5_IC_Callback+0x118>)
 8001dc2:	781b      	ldrb	r3, [r3, #0]
 8001dc4:	2b00      	cmp	r3, #0
 8001dc6:	d029      	beq.n	8001e1c <Tim5_IC_Callback+0xfc>
	{
		//Check if the transition was a valid transition period to use
		if(SYMBOL_PERIOD-SYMBOL_MARGIN < capture_difference && capture_difference < SYMBOL_PERIOD+SYMBOL_MARGIN){
 8001dc8:	4b1d      	ldr	r3, [pc, #116]	; (8001e40 <Tim5_IC_Callback+0x120>)
 8001dca:	681b      	ldr	r3, [r3, #0]
 8001dcc:	f247 5230 	movw	r2, #30000	; 0x7530
 8001dd0:	4293      	cmp	r3, r2
 8001dd2:	d923      	bls.n	8001e1c <Tim5_IC_Callback+0xfc>
 8001dd4:	4b1a      	ldr	r3, [pc, #104]	; (8001e40 <Tim5_IC_Callback+0x120>)
 8001dd6:	681b      	ldr	r3, [r3, #0]
 8001dd8:	f648 7239 	movw	r2, #36665	; 0x8f39
 8001ddc:	4293      	cmp	r3, r2
 8001dde:	d81d      	bhi.n	8001e1c <Tim5_IC_Callback+0xfc>

			//Predict clock
			uint32_t next_sampl;

			//If clk was not sync, start sample one period later
			if(!clk_sync){
 8001de0:	4b18      	ldr	r3, [pc, #96]	; (8001e44 <Tim5_IC_Callback+0x124>)
 8001de2:	781b      	ldrb	r3, [r3, #0]
 8001de4:	f083 0301 	eor.w	r3, r3, #1
 8001de8:	b2db      	uxtb	r3, r3
 8001dea:	2b00      	cmp	r3, #0
 8001dec:	d007      	beq.n	8001dfe <Tim5_IC_Callback+0xde>
				resetBitBuffer();
 8001dee:	f7ff fe31 	bl	8001a54 <resetBitBuffer>
				next_sampl = this_capture + SYMBOL_PERIOD;
 8001df2:	687b      	ldr	r3, [r7, #4]
 8001df4:	f503 4302 	add.w	r3, r3, #33280	; 0x8200
 8001df8:	3335      	adds	r3, #53	; 0x35
 8001dfa:	603b      	str	r3, [r7, #0]
 8001dfc:	e004      	b.n	8001e08 <Tim5_IC_Callback+0xe8>
			}
			//If clk was sync, sample at normal interval
			else {
				next_sampl = this_capture + bit_sample_period;
 8001dfe:	687b      	ldr	r3, [r7, #4]
 8001e00:	f503 4302 	add.w	r3, r3, #33280	; 0x8200
 8001e04:	3335      	adds	r3, #53	; 0x35
 8001e06:	603b      	str	r3, [r7, #0]
			}
			//Prepare OC timer int
			__HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1, next_sampl);
 8001e08:	4b0f      	ldr	r3, [pc, #60]	; (8001e48 <Tim5_IC_Callback+0x128>)
 8001e0a:	681b      	ldr	r3, [r3, #0]
 8001e0c:	683a      	ldr	r2, [r7, #0]
 8001e0e:	635a      	str	r2, [r3, #52]	; 0x34
			//Reset roll-over value
			captured_bits_count = 0;
 8001e10:	4b0e      	ldr	r3, [pc, #56]	; (8001e4c <Tim5_IC_Callback+0x12c>)
 8001e12:	2200      	movs	r2, #0
 8001e14:	701a      	strb	r2, [r3, #0]

			//Have now synced with clock
			clk_sync = true;
 8001e16:	4b0b      	ldr	r3, [pc, #44]	; (8001e44 <Tim5_IC_Callback+0x124>)
 8001e18:	2201      	movs	r2, #1
 8001e1a:	701a      	strb	r2, [r3, #0]
		}
	}
}
 8001e1c:	bf00      	nop
 8001e1e:	3708      	adds	r7, #8
 8001e20:	46bd      	mov	sp, r7
 8001e22:	bd80      	pop	{r7, pc}
 8001e24:	20000011 	.word	0x20000011
 8001e28:	200000c2 	.word	0x200000c2
 8001e2c:	200028ac 	.word	0x200028ac
 8001e30:	200000b4 	.word	0x200000b4
 8001e34:	200000c0 	.word	0x200000c0
 8001e38:	200000c1 	.word	0x200000c1
 8001e3c:	200000b8 	.word	0x200000b8
 8001e40:	200000bc 	.word	0x200000bc
 8001e44:	200000b1 	.word	0x200000b1
 8001e48:	200029a4 	.word	0x200029a4
 8001e4c:	200000b0 	.word	0x200000b0

08001e50 <init_UART>:

void init_UART(){
 8001e50:	b580      	push	{r7, lr}
 8001e52:	af00      	add	r7, sp, #0
	HAL_UART_Receive_IT(&huart2, &(UART_packet.input), UART_RX_IT_CNT);
 8001e54:	2201      	movs	r2, #1
 8001e56:	4909      	ldr	r1, [pc, #36]	; (8001e7c <init_UART+0x2c>)
 8001e58:	4809      	ldr	r0, [pc, #36]	; (8001e80 <init_UART+0x30>)
 8001e5a:	f003 fe7f 	bl	8005b5c <HAL_UART_Receive_IT>
	UART_packet.flags = 0;
 8001e5e:	4b09      	ldr	r3, [pc, #36]	; (8001e84 <init_UART+0x34>)
 8001e60:	2200      	movs	r2, #0
 8001e62:	609a      	str	r2, [r3, #8]
	UART_packet.got_packet = false;
 8001e64:	4b07      	ldr	r3, [pc, #28]	; (8001e84 <init_UART+0x34>)
 8001e66:	2200      	movs	r2, #0
 8001e68:	735a      	strb	r2, [r3, #13]
	UART_packet.rx_cnt = 0;
 8001e6a:	4b06      	ldr	r3, [pc, #24]	; (8001e84 <init_UART+0x34>)
 8001e6c:	2200      	movs	r2, #0
 8001e6e:	601a      	str	r2, [r3, #0]
	UART_packet.received_byte_cnt = 0;
 8001e70:	4b04      	ldr	r3, [pc, #16]	; (8001e84 <init_UART+0x34>)
 8001e72:	2200      	movs	r2, #0
 8001e74:	605a      	str	r2, [r3, #4]
}
 8001e76:	bf00      	nop
 8001e78:	bd80      	pop	{r7, pc}
 8001e7a:	bf00      	nop
 8001e7c:	2000145c 	.word	0x2000145c
 8001e80:	200029e4 	.word	0x200029e4
 8001e84:	20001450 	.word	0x20001450

08001e88 <UART2_Exception_Callback>:
void UART2_Exception_Callback(){
 8001e88:	b580      	push	{r7, lr}
 8001e8a:	af00      	add	r7, sp, #0
	HAL_UART_Receive_IT(&huart2, &(UART_packet.input), UART_RX_IT_CNT);//Reset
 8001e8c:	2201      	movs	r2, #1
 8001e8e:	491d      	ldr	r1, [pc, #116]	; (8001f04 <UART2_Exception_Callback+0x7c>)
 8001e90:	481d      	ldr	r0, [pc, #116]	; (8001f08 <UART2_Exception_Callback+0x80>)
 8001e92:	f003 fe63 	bl	8005b5c <HAL_UART_Receive_IT>
	UART_packet.got_packet = false;
 8001e96:	4b1d      	ldr	r3, [pc, #116]	; (8001f0c <UART2_Exception_Callback+0x84>)
 8001e98:	2200      	movs	r2, #0
 8001e9a:	735a      	strb	r2, [r3, #13]

	  if(UART_packet.input==0xc0){
 8001e9c:	4b1b      	ldr	r3, [pc, #108]	; (8001f0c <UART2_Exception_Callback+0x84>)
 8001e9e:	7b1b      	ldrb	r3, [r3, #12]
 8001ea0:	2bc0      	cmp	r3, #192	; 0xc0
 8001ea2:	d104      	bne.n	8001eae <UART2_Exception_Callback+0x26>
		  UART_packet.flags++;
 8001ea4:	4b19      	ldr	r3, [pc, #100]	; (8001f0c <UART2_Exception_Callback+0x84>)
 8001ea6:	689b      	ldr	r3, [r3, #8]
 8001ea8:	3301      	adds	r3, #1
 8001eaa:	4a18      	ldr	r2, [pc, #96]	; (8001f0c <UART2_Exception_Callback+0x84>)
 8001eac:	6093      	str	r3, [r2, #8]
	  }

	  *(UART_packet.HEX_KISS_PACKET+UART_packet.rx_cnt) = UART_packet.input;
 8001eae:	4b17      	ldr	r3, [pc, #92]	; (8001f0c <UART2_Exception_Callback+0x84>)
 8001eb0:	681b      	ldr	r3, [r3, #0]
 8001eb2:	461a      	mov	r2, r3
 8001eb4:	4b16      	ldr	r3, [pc, #88]	; (8001f10 <UART2_Exception_Callback+0x88>)
 8001eb6:	4413      	add	r3, r2
 8001eb8:	4a14      	ldr	r2, [pc, #80]	; (8001f0c <UART2_Exception_Callback+0x84>)
 8001eba:	7b12      	ldrb	r2, [r2, #12]
 8001ebc:	701a      	strb	r2, [r3, #0]
	  UART_packet.rx_cnt++;
 8001ebe:	4b13      	ldr	r3, [pc, #76]	; (8001f0c <UART2_Exception_Callback+0x84>)
 8001ec0:	681b      	ldr	r3, [r3, #0]
 8001ec2:	3301      	adds	r3, #1
 8001ec4:	4a11      	ldr	r2, [pc, #68]	; (8001f0c <UART2_Exception_Callback+0x84>)
 8001ec6:	6013      	str	r3, [r2, #0]

	  if(UART_packet.flags>=2){
 8001ec8:	4b10      	ldr	r3, [pc, #64]	; (8001f0c <UART2_Exception_Callback+0x84>)
 8001eca:	689b      	ldr	r3, [r3, #8]
 8001ecc:	2b01      	cmp	r3, #1
 8001ece:	dd16      	ble.n	8001efe <UART2_Exception_Callback+0x76>
		  if(!mode){
 8001ed0:	4b10      	ldr	r3, [pc, #64]	; (8001f14 <UART2_Exception_Callback+0x8c>)
 8001ed2:	781b      	ldrb	r3, [r3, #0]
 8001ed4:	f083 0301 	eor.w	r3, r3, #1
 8001ed8:	b2db      	uxtb	r3, r3
 8001eda:	2b00      	cmp	r3, #0
 8001edc:	d002      	beq.n	8001ee4 <UART2_Exception_Callback+0x5c>
			  changeMode = true;
 8001ede:	4b0e      	ldr	r3, [pc, #56]	; (8001f18 <UART2_Exception_Callback+0x90>)
 8001ee0:	2201      	movs	r2, #1
 8001ee2:	701a      	strb	r2, [r3, #0]
		  }
		  UART_packet.flags = 0;
 8001ee4:	4b09      	ldr	r3, [pc, #36]	; (8001f0c <UART2_Exception_Callback+0x84>)
 8001ee6:	2200      	movs	r2, #0
 8001ee8:	609a      	str	r2, [r3, #8]
		  UART_packet.got_packet = true;
 8001eea:	4b08      	ldr	r3, [pc, #32]	; (8001f0c <UART2_Exception_Callback+0x84>)
 8001eec:	2201      	movs	r2, #1
 8001eee:	735a      	strb	r2, [r3, #13]
		  UART_packet.received_byte_cnt = UART_packet.rx_cnt;
 8001ef0:	4b06      	ldr	r3, [pc, #24]	; (8001f0c <UART2_Exception_Callback+0x84>)
 8001ef2:	681b      	ldr	r3, [r3, #0]
 8001ef4:	4a05      	ldr	r2, [pc, #20]	; (8001f0c <UART2_Exception_Callback+0x84>)
 8001ef6:	6053      	str	r3, [r2, #4]
		  UART_packet.rx_cnt=0;
 8001ef8:	4b04      	ldr	r3, [pc, #16]	; (8001f0c <UART2_Exception_Callback+0x84>)
 8001efa:	2200      	movs	r2, #0
 8001efc:	601a      	str	r2, [r3, #0]

	  }
}
 8001efe:	bf00      	nop
 8001f00:	bd80      	pop	{r7, pc}
 8001f02:	bf00      	nop
 8001f04:	2000145c 	.word	0x2000145c
 8001f08:	200029e4 	.word	0x200029e4
 8001f0c:	20001450 	.word	0x20001450
 8001f10:	2000145e 	.word	0x2000145e
 8001f14:	2000298c 	.word	0x2000298c
 8001f18:	200000a9 	.word	0x200000a9

08001f1c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001f1c:	b580      	push	{r7, lr}
 8001f1e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001f20:	f000 fdf4 	bl	8002b0c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001f24:	f000 f814 	bl	8001f50 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001f28:	f000 fa2e 	bl	8002388 <MX_GPIO_Init>
  MX_DMA_Init();
 8001f2c:	f000 fa0c 	bl	8002348 <MX_DMA_Init>
  MX_DAC_Init();
 8001f30:	f000 f87a 	bl	8002028 <MX_DAC_Init>
  MX_TIM2_Init();
 8001f34:	f000 f8a2 	bl	800207c <MX_TIM2_Init>
  MX_TIM3_Init();
 8001f38:	f000 f916 	bl	8002168 <MX_TIM3_Init>
  MX_USART2_UART_Init();
 8001f3c:	f000 f9d2 	bl	80022e4 <MX_USART2_UART_Init>
  MX_TIM5_Init();
 8001f40:	f000 f960 	bl	8002204 <MX_TIM5_Init>
  /* USER CODE BEGIN 2 */

	uart_gpio_init();
 8001f44:	f000 fb22 	bl	800258c <uart_gpio_init>
	initProgram(false);
 8001f48:	2000      	movs	r0, #0
 8001f4a:	f7ff fcbf 	bl	80018cc <initProgram>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1) {
 8001f4e:	e7fe      	b.n	8001f4e <main+0x32>

08001f50 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001f50:	b580      	push	{r7, lr}
 8001f52:	b094      	sub	sp, #80	; 0x50
 8001f54:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001f56:	f107 031c 	add.w	r3, r7, #28
 8001f5a:	2234      	movs	r2, #52	; 0x34
 8001f5c:	2100      	movs	r1, #0
 8001f5e:	4618      	mov	r0, r3
 8001f60:	f004 fc9c 	bl	800689c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001f64:	f107 0308 	add.w	r3, r7, #8
 8001f68:	2200      	movs	r2, #0
 8001f6a:	601a      	str	r2, [r3, #0]
 8001f6c:	605a      	str	r2, [r3, #4]
 8001f6e:	609a      	str	r2, [r3, #8]
 8001f70:	60da      	str	r2, [r3, #12]
 8001f72:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001f74:	2300      	movs	r3, #0
 8001f76:	607b      	str	r3, [r7, #4]
 8001f78:	4b29      	ldr	r3, [pc, #164]	; (8002020 <SystemClock_Config+0xd0>)
 8001f7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f7c:	4a28      	ldr	r2, [pc, #160]	; (8002020 <SystemClock_Config+0xd0>)
 8001f7e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001f82:	6413      	str	r3, [r2, #64]	; 0x40
 8001f84:	4b26      	ldr	r3, [pc, #152]	; (8002020 <SystemClock_Config+0xd0>)
 8001f86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f88:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001f8c:	607b      	str	r3, [r7, #4]
 8001f8e:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001f90:	2300      	movs	r3, #0
 8001f92:	603b      	str	r3, [r7, #0]
 8001f94:	4b23      	ldr	r3, [pc, #140]	; (8002024 <SystemClock_Config+0xd4>)
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8001f9c:	4a21      	ldr	r2, [pc, #132]	; (8002024 <SystemClock_Config+0xd4>)
 8001f9e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001fa2:	6013      	str	r3, [r2, #0]
 8001fa4:	4b1f      	ldr	r3, [pc, #124]	; (8002024 <SystemClock_Config+0xd4>)
 8001fa6:	681b      	ldr	r3, [r3, #0]
 8001fa8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001fac:	603b      	str	r3, [r7, #0]
 8001fae:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001fb0:	2302      	movs	r3, #2
 8001fb2:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001fb4:	2301      	movs	r3, #1
 8001fb6:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001fb8:	2310      	movs	r3, #16
 8001fba:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001fbc:	2302      	movs	r3, #2
 8001fbe:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001fc0:	2300      	movs	r3, #0
 8001fc2:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001fc4:	2308      	movs	r3, #8
 8001fc6:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 80;
 8001fc8:	2350      	movs	r3, #80	; 0x50
 8001fca:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001fcc:	2302      	movs	r3, #2
 8001fce:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8001fd0:	2302      	movs	r3, #2
 8001fd2:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8001fd4:	2302      	movs	r3, #2
 8001fd6:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001fd8:	f107 031c 	add.w	r3, r7, #28
 8001fdc:	4618      	mov	r0, r3
 8001fde:	f001 ffe7 	bl	8003fb0 <HAL_RCC_OscConfig>
 8001fe2:	4603      	mov	r3, r0
 8001fe4:	2b00      	cmp	r3, #0
 8001fe6:	d001      	beq.n	8001fec <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8001fe8:	f000 faf8 	bl	80025dc <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001fec:	230f      	movs	r3, #15
 8001fee:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001ff0:	2302      	movs	r3, #2
 8001ff2:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001ff4:	2300      	movs	r3, #0
 8001ff6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001ff8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001ffc:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001ffe:	2300      	movs	r3, #0
 8002000:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8002002:	f107 0308 	add.w	r3, r7, #8
 8002006:	2102      	movs	r1, #2
 8002008:	4618      	mov	r0, r3
 800200a:	f001 fd17 	bl	8003a3c <HAL_RCC_ClockConfig>
 800200e:	4603      	mov	r3, r0
 8002010:	2b00      	cmp	r3, #0
 8002012:	d001      	beq.n	8002018 <SystemClock_Config+0xc8>
  {
    Error_Handler();
 8002014:	f000 fae2 	bl	80025dc <Error_Handler>
  }
}
 8002018:	bf00      	nop
 800201a:	3750      	adds	r7, #80	; 0x50
 800201c:	46bd      	mov	sp, r7
 800201e:	bd80      	pop	{r7, pc}
 8002020:	40023800 	.word	0x40023800
 8002024:	40007000 	.word	0x40007000

08002028 <MX_DAC_Init>:
  * @brief DAC Initialization Function
  * @param None
  * @retval None
  */
static void MX_DAC_Init(void)
{
 8002028:	b580      	push	{r7, lr}
 800202a:	b082      	sub	sp, #8
 800202c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN DAC_Init 0 */

  /* USER CODE END DAC_Init 0 */

  DAC_ChannelConfTypeDef sConfig = {0};
 800202e:	463b      	mov	r3, r7
 8002030:	2200      	movs	r2, #0
 8002032:	601a      	str	r2, [r3, #0]
 8002034:	605a      	str	r2, [r3, #4]
  /* USER CODE BEGIN DAC_Init 1 */

  /* USER CODE END DAC_Init 1 */
  /** DAC Initialization
  */
  hdac.Instance = DAC;
 8002036:	4b0f      	ldr	r3, [pc, #60]	; (8002074 <MX_DAC_Init+0x4c>)
 8002038:	4a0f      	ldr	r2, [pc, #60]	; (8002078 <MX_DAC_Init+0x50>)
 800203a:	601a      	str	r2, [r3, #0]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 800203c:	480d      	ldr	r0, [pc, #52]	; (8002074 <MX_DAC_Init+0x4c>)
 800203e:	f000 fee8 	bl	8002e12 <HAL_DAC_Init>
 8002042:	4603      	mov	r3, r0
 8002044:	2b00      	cmp	r3, #0
 8002046:	d001      	beq.n	800204c <MX_DAC_Init+0x24>
  {
    Error_Handler();
 8002048:	f000 fac8 	bl	80025dc <Error_Handler>
  }
  /** DAC channel OUT1 config
  */
  sConfig.DAC_Trigger = DAC_TRIGGER_T2_TRGO;
 800204c:	2324      	movs	r3, #36	; 0x24
 800204e:	603b      	str	r3, [r7, #0]
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 8002050:	2300      	movs	r3, #0
 8002052:	607b      	str	r3, [r7, #4]
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 8002054:	463b      	mov	r3, r7
 8002056:	2200      	movs	r2, #0
 8002058:	4619      	mov	r1, r3
 800205a:	4806      	ldr	r0, [pc, #24]	; (8002074 <MX_DAC_Init+0x4c>)
 800205c:	f000 ff3c 	bl	8002ed8 <HAL_DAC_ConfigChannel>
 8002060:	4603      	mov	r3, r0
 8002062:	2b00      	cmp	r3, #0
 8002064:	d001      	beq.n	800206a <MX_DAC_Init+0x42>
  {
    Error_Handler();
 8002066:	f000 fab9 	bl	80025dc <Error_Handler>
  }
  /* USER CODE BEGIN DAC_Init 2 */

  /* USER CODE END DAC_Init 2 */

}
 800206a:	bf00      	nop
 800206c:	3708      	adds	r7, #8
 800206e:	46bd      	mov	sp, r7
 8002070:	bd80      	pop	{r7, pc}
 8002072:	bf00      	nop
 8002074:	20002990 	.word	0x20002990
 8002078:	40007400 	.word	0x40007400

0800207c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 800207c:	b580      	push	{r7, lr}
 800207e:	b08e      	sub	sp, #56	; 0x38
 8002080:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002082:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002086:	2200      	movs	r2, #0
 8002088:	601a      	str	r2, [r3, #0]
 800208a:	605a      	str	r2, [r3, #4]
 800208c:	609a      	str	r2, [r3, #8]
 800208e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002090:	f107 0320 	add.w	r3, r7, #32
 8002094:	2200      	movs	r2, #0
 8002096:	601a      	str	r2, [r3, #0]
 8002098:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800209a:	1d3b      	adds	r3, r7, #4
 800209c:	2200      	movs	r2, #0
 800209e:	601a      	str	r2, [r3, #0]
 80020a0:	605a      	str	r2, [r3, #4]
 80020a2:	609a      	str	r2, [r3, #8]
 80020a4:	60da      	str	r2, [r3, #12]
 80020a6:	611a      	str	r2, [r3, #16]
 80020a8:	615a      	str	r2, [r3, #20]
 80020aa:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80020ac:	4b2d      	ldr	r3, [pc, #180]	; (8002164 <MX_TIM2_Init+0xe8>)
 80020ae:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80020b2:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 2-1;
 80020b4:	4b2b      	ldr	r3, [pc, #172]	; (8002164 <MX_TIM2_Init+0xe8>)
 80020b6:	2201      	movs	r2, #1
 80020b8:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020ba:	4b2a      	ldr	r3, [pc, #168]	; (8002164 <MX_TIM2_Init+0xe8>)
 80020bc:	2200      	movs	r2, #0
 80020be:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 80020c0:	4b28      	ldr	r3, [pc, #160]	; (8002164 <MX_TIM2_Init+0xe8>)
 80020c2:	f04f 32ff 	mov.w	r2, #4294967295
 80020c6:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80020c8:	4b26      	ldr	r3, [pc, #152]	; (8002164 <MX_TIM2_Init+0xe8>)
 80020ca:	2200      	movs	r2, #0
 80020cc:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80020ce:	4b25      	ldr	r3, [pc, #148]	; (8002164 <MX_TIM2_Init+0xe8>)
 80020d0:	2280      	movs	r2, #128	; 0x80
 80020d2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80020d4:	4823      	ldr	r0, [pc, #140]	; (8002164 <MX_TIM2_Init+0xe8>)
 80020d6:	f002 f9c5 	bl	8004464 <HAL_TIM_Base_Init>
 80020da:	4603      	mov	r3, r0
 80020dc:	2b00      	cmp	r3, #0
 80020de:	d001      	beq.n	80020e4 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 80020e0:	f000 fa7c 	bl	80025dc <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80020e4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80020e8:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80020ea:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80020ee:	4619      	mov	r1, r3
 80020f0:	481c      	ldr	r0, [pc, #112]	; (8002164 <MX_TIM2_Init+0xe8>)
 80020f2:	f002 fe73 	bl	8004ddc <HAL_TIM_ConfigClockSource>
 80020f6:	4603      	mov	r3, r0
 80020f8:	2b00      	cmp	r3, #0
 80020fa:	d001      	beq.n	8002100 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 80020fc:	f000 fa6e 	bl	80025dc <Error_Handler>
  }
  if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 8002100:	4818      	ldr	r0, [pc, #96]	; (8002164 <MX_TIM2_Init+0xe8>)
 8002102:	f002 fa05 	bl	8004510 <HAL_TIM_OC_Init>
 8002106:	4603      	mov	r3, r0
 8002108:	2b00      	cmp	r3, #0
 800210a:	d001      	beq.n	8002110 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 800210c:	f000 fa66 	bl	80025dc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002110:	2300      	movs	r3, #0
 8002112:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002114:	2300      	movs	r3, #0
 8002116:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002118:	f107 0320 	add.w	r3, r7, #32
 800211c:	4619      	mov	r1, r3
 800211e:	4811      	ldr	r0, [pc, #68]	; (8002164 <MX_TIM2_Init+0xe8>)
 8002120:	f003 fba6 	bl	8005870 <HAL_TIMEx_MasterConfigSynchronization>
 8002124:	4603      	mov	r3, r0
 8002126:	2b00      	cmp	r3, #0
 8002128:	d001      	beq.n	800212e <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 800212a:	f000 fa57 	bl	80025dc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_TIMING;
 800212e:	2300      	movs	r3, #0
 8002130:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8002132:	2300      	movs	r3, #0
 8002134:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002136:	2300      	movs	r3, #0
 8002138:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800213a:	2300      	movs	r3, #0
 800213c:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800213e:	1d3b      	adds	r3, r7, #4
 8002140:	2200      	movs	r2, #0
 8002142:	4619      	mov	r1, r3
 8002144:	4807      	ldr	r0, [pc, #28]	; (8002164 <MX_TIM2_Init+0xe8>)
 8002146:	f002 fd4d 	bl	8004be4 <HAL_TIM_OC_ConfigChannel>
 800214a:	4603      	mov	r3, r0
 800214c:	2b00      	cmp	r3, #0
 800214e:	d001      	beq.n	8002154 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 8002150:	f000 fa44 	bl	80025dc <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8002154:	4803      	ldr	r0, [pc, #12]	; (8002164 <MX_TIM2_Init+0xe8>)
 8002156:	f000 fb73 	bl	8002840 <HAL_TIM_MspPostInit>

}
 800215a:	bf00      	nop
 800215c:	3738      	adds	r7, #56	; 0x38
 800215e:	46bd      	mov	sp, r7
 8002160:	bd80      	pop	{r7, pc}
 8002162:	bf00      	nop
 8002164:	200029a4 	.word	0x200029a4

08002168 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8002168:	b580      	push	{r7, lr}
 800216a:	b086      	sub	sp, #24
 800216c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800216e:	f107 0308 	add.w	r3, r7, #8
 8002172:	2200      	movs	r2, #0
 8002174:	601a      	str	r2, [r3, #0]
 8002176:	605a      	str	r2, [r3, #4]
 8002178:	609a      	str	r2, [r3, #8]
 800217a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800217c:	463b      	mov	r3, r7
 800217e:	2200      	movs	r2, #0
 8002180:	601a      	str	r2, [r3, #0]
 8002182:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8002184:	4b1d      	ldr	r3, [pc, #116]	; (80021fc <MX_TIM3_Init+0x94>)
 8002186:	4a1e      	ldr	r2, [pc, #120]	; (8002200 <MX_TIM3_Init+0x98>)
 8002188:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 80-1;
 800218a:	4b1c      	ldr	r3, [pc, #112]	; (80021fc <MX_TIM3_Init+0x94>)
 800218c:	224f      	movs	r2, #79	; 0x4f
 800218e:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002190:	4b1a      	ldr	r3, [pc, #104]	; (80021fc <MX_TIM3_Init+0x94>)
 8002192:	2200      	movs	r2, #0
 8002194:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 828;
 8002196:	4b19      	ldr	r3, [pc, #100]	; (80021fc <MX_TIM3_Init+0x94>)
 8002198:	f44f 724f 	mov.w	r2, #828	; 0x33c
 800219c:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800219e:	4b17      	ldr	r3, [pc, #92]	; (80021fc <MX_TIM3_Init+0x94>)
 80021a0:	2200      	movs	r2, #0
 80021a2:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80021a4:	4b15      	ldr	r3, [pc, #84]	; (80021fc <MX_TIM3_Init+0x94>)
 80021a6:	2280      	movs	r2, #128	; 0x80
 80021a8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80021aa:	4814      	ldr	r0, [pc, #80]	; (80021fc <MX_TIM3_Init+0x94>)
 80021ac:	f002 f95a 	bl	8004464 <HAL_TIM_Base_Init>
 80021b0:	4603      	mov	r3, r0
 80021b2:	2b00      	cmp	r3, #0
 80021b4:	d001      	beq.n	80021ba <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 80021b6:	f000 fa11 	bl	80025dc <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80021ba:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80021be:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80021c0:	f107 0308 	add.w	r3, r7, #8
 80021c4:	4619      	mov	r1, r3
 80021c6:	480d      	ldr	r0, [pc, #52]	; (80021fc <MX_TIM3_Init+0x94>)
 80021c8:	f002 fe08 	bl	8004ddc <HAL_TIM_ConfigClockSource>
 80021cc:	4603      	mov	r3, r0
 80021ce:	2b00      	cmp	r3, #0
 80021d0:	d001      	beq.n	80021d6 <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 80021d2:	f000 fa03 	bl	80025dc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80021d6:	2300      	movs	r3, #0
 80021d8:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80021da:	2300      	movs	r3, #0
 80021dc:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80021de:	463b      	mov	r3, r7
 80021e0:	4619      	mov	r1, r3
 80021e2:	4806      	ldr	r0, [pc, #24]	; (80021fc <MX_TIM3_Init+0x94>)
 80021e4:	f003 fb44 	bl	8005870 <HAL_TIMEx_MasterConfigSynchronization>
 80021e8:	4603      	mov	r3, r0
 80021ea:	2b00      	cmp	r3, #0
 80021ec:	d001      	beq.n	80021f2 <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 80021ee:	f000 f9f5 	bl	80025dc <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80021f2:	bf00      	nop
 80021f4:	3718      	adds	r7, #24
 80021f6:	46bd      	mov	sp, r7
 80021f8:	bd80      	pop	{r7, pc}
 80021fa:	bf00      	nop
 80021fc:	200028ec 	.word	0x200028ec
 8002200:	40000400 	.word	0x40000400

08002204 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 8002204:	b580      	push	{r7, lr}
 8002206:	b08a      	sub	sp, #40	; 0x28
 8002208:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800220a:	f107 0318 	add.w	r3, r7, #24
 800220e:	2200      	movs	r2, #0
 8002210:	601a      	str	r2, [r3, #0]
 8002212:	605a      	str	r2, [r3, #4]
 8002214:	609a      	str	r2, [r3, #8]
 8002216:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002218:	f107 0310 	add.w	r3, r7, #16
 800221c:	2200      	movs	r2, #0
 800221e:	601a      	str	r2, [r3, #0]
 8002220:	605a      	str	r2, [r3, #4]
  TIM_IC_InitTypeDef sConfigIC = {0};
 8002222:	463b      	mov	r3, r7
 8002224:	2200      	movs	r2, #0
 8002226:	601a      	str	r2, [r3, #0]
 8002228:	605a      	str	r2, [r3, #4]
 800222a:	609a      	str	r2, [r3, #8]
 800222c:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 800222e:	4b2b      	ldr	r3, [pc, #172]	; (80022dc <MX_TIM5_Init+0xd8>)
 8002230:	4a2b      	ldr	r2, [pc, #172]	; (80022e0 <MX_TIM5_Init+0xdc>)
 8002232:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 2-1;
 8002234:	4b29      	ldr	r3, [pc, #164]	; (80022dc <MX_TIM5_Init+0xd8>)
 8002236:	2201      	movs	r2, #1
 8002238:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 800223a:	4b28      	ldr	r3, [pc, #160]	; (80022dc <MX_TIM5_Init+0xd8>)
 800223c:	2200      	movs	r2, #0
 800223e:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 8002240:	4b26      	ldr	r3, [pc, #152]	; (80022dc <MX_TIM5_Init+0xd8>)
 8002242:	f04f 32ff 	mov.w	r2, #4294967295
 8002246:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002248:	4b24      	ldr	r3, [pc, #144]	; (80022dc <MX_TIM5_Init+0xd8>)
 800224a:	2200      	movs	r2, #0
 800224c:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800224e:	4b23      	ldr	r3, [pc, #140]	; (80022dc <MX_TIM5_Init+0xd8>)
 8002250:	2280      	movs	r2, #128	; 0x80
 8002252:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8002254:	4821      	ldr	r0, [pc, #132]	; (80022dc <MX_TIM5_Init+0xd8>)
 8002256:	f002 f905 	bl	8004464 <HAL_TIM_Base_Init>
 800225a:	4603      	mov	r3, r0
 800225c:	2b00      	cmp	r3, #0
 800225e:	d001      	beq.n	8002264 <MX_TIM5_Init+0x60>
  {
    Error_Handler();
 8002260:	f000 f9bc 	bl	80025dc <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002264:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002268:	61bb      	str	r3, [r7, #24]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 800226a:	f107 0318 	add.w	r3, r7, #24
 800226e:	4619      	mov	r1, r3
 8002270:	481a      	ldr	r0, [pc, #104]	; (80022dc <MX_TIM5_Init+0xd8>)
 8002272:	f002 fdb3 	bl	8004ddc <HAL_TIM_ConfigClockSource>
 8002276:	4603      	mov	r3, r0
 8002278:	2b00      	cmp	r3, #0
 800227a:	d001      	beq.n	8002280 <MX_TIM5_Init+0x7c>
  {
    Error_Handler();
 800227c:	f000 f9ae 	bl	80025dc <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim5) != HAL_OK)
 8002280:	4816      	ldr	r0, [pc, #88]	; (80022dc <MX_TIM5_Init+0xd8>)
 8002282:	f002 fa99 	bl	80047b8 <HAL_TIM_IC_Init>
 8002286:	4603      	mov	r3, r0
 8002288:	2b00      	cmp	r3, #0
 800228a:	d001      	beq.n	8002290 <MX_TIM5_Init+0x8c>
  {
    Error_Handler();
 800228c:	f000 f9a6 	bl	80025dc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002290:	2300      	movs	r3, #0
 8002292:	613b      	str	r3, [r7, #16]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002294:	2300      	movs	r3, #0
 8002296:	617b      	str	r3, [r7, #20]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8002298:	f107 0310 	add.w	r3, r7, #16
 800229c:	4619      	mov	r1, r3
 800229e:	480f      	ldr	r0, [pc, #60]	; (80022dc <MX_TIM5_Init+0xd8>)
 80022a0:	f003 fae6 	bl	8005870 <HAL_TIMEx_MasterConfigSynchronization>
 80022a4:	4603      	mov	r3, r0
 80022a6:	2b00      	cmp	r3, #0
 80022a8:	d001      	beq.n	80022ae <MX_TIM5_Init+0xaa>
  {
    Error_Handler();
 80022aa:	f000 f997 	bl	80025dc <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_BOTHEDGE;
 80022ae:	230a      	movs	r3, #10
 80022b0:	603b      	str	r3, [r7, #0]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 80022b2:	2301      	movs	r3, #1
 80022b4:	607b      	str	r3, [r7, #4]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 80022b6:	2300      	movs	r3, #0
 80022b8:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICFilter = 0;
 80022ba:	2300      	movs	r3, #0
 80022bc:	60fb      	str	r3, [r7, #12]
  if (HAL_TIM_IC_ConfigChannel(&htim5, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 80022be:	463b      	mov	r3, r7
 80022c0:	2200      	movs	r2, #0
 80022c2:	4619      	mov	r1, r3
 80022c4:	4805      	ldr	r0, [pc, #20]	; (80022dc <MX_TIM5_Init+0xd8>)
 80022c6:	f002 fced 	bl	8004ca4 <HAL_TIM_IC_ConfigChannel>
 80022ca:	4603      	mov	r3, r0
 80022cc:	2b00      	cmp	r3, #0
 80022ce:	d001      	beq.n	80022d4 <MX_TIM5_Init+0xd0>
  {
    Error_Handler();
 80022d0:	f000 f984 	bl	80025dc <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 80022d4:	bf00      	nop
 80022d6:	3728      	adds	r7, #40	; 0x28
 80022d8:	46bd      	mov	sp, r7
 80022da:	bd80      	pop	{r7, pc}
 80022dc:	200028ac 	.word	0x200028ac
 80022e0:	40000c00 	.word	0x40000c00

080022e4 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80022e4:	b580      	push	{r7, lr}
 80022e6:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80022e8:	4b15      	ldr	r3, [pc, #84]	; (8002340 <MX_USART2_UART_Init+0x5c>)
 80022ea:	4a16      	ldr	r2, [pc, #88]	; (8002344 <MX_USART2_UART_Init+0x60>)
 80022ec:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80022ee:	4b14      	ldr	r3, [pc, #80]	; (8002340 <MX_USART2_UART_Init+0x5c>)
 80022f0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80022f4:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80022f6:	4b12      	ldr	r3, [pc, #72]	; (8002340 <MX_USART2_UART_Init+0x5c>)
 80022f8:	2200      	movs	r2, #0
 80022fa:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80022fc:	4b10      	ldr	r3, [pc, #64]	; (8002340 <MX_USART2_UART_Init+0x5c>)
 80022fe:	2200      	movs	r2, #0
 8002300:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8002302:	4b0f      	ldr	r3, [pc, #60]	; (8002340 <MX_USART2_UART_Init+0x5c>)
 8002304:	2200      	movs	r2, #0
 8002306:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002308:	4b0d      	ldr	r3, [pc, #52]	; (8002340 <MX_USART2_UART_Init+0x5c>)
 800230a:	220c      	movs	r2, #12
 800230c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800230e:	4b0c      	ldr	r3, [pc, #48]	; (8002340 <MX_USART2_UART_Init+0x5c>)
 8002310:	2200      	movs	r2, #0
 8002312:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002314:	4b0a      	ldr	r3, [pc, #40]	; (8002340 <MX_USART2_UART_Init+0x5c>)
 8002316:	2200      	movs	r2, #0
 8002318:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800231a:	4809      	ldr	r0, [pc, #36]	; (8002340 <MX_USART2_UART_Init+0x5c>)
 800231c:	f003 fb38 	bl	8005990 <HAL_UART_Init>
 8002320:	4603      	mov	r3, r0
 8002322:	2b00      	cmp	r3, #0
 8002324:	d001      	beq.n	800232a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8002326:	f000 f959 	bl	80025dc <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */
  HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800232a:	2200      	movs	r2, #0
 800232c:	2100      	movs	r1, #0
 800232e:	2026      	movs	r0, #38	; 0x26
 8002330:	f000 fd39 	bl	8002da6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002334:	2026      	movs	r0, #38	; 0x26
 8002336:	f000 fd52 	bl	8002dde <HAL_NVIC_EnableIRQ>
  /* USER CODE END USART2_Init 2 */

}
 800233a:	bf00      	nop
 800233c:	bd80      	pop	{r7, pc}
 800233e:	bf00      	nop
 8002340:	200029e4 	.word	0x200029e4
 8002344:	40004400 	.word	0x40004400

08002348 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8002348:	b580      	push	{r7, lr}
 800234a:	b082      	sub	sp, #8
 800234c:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 800234e:	2300      	movs	r3, #0
 8002350:	607b      	str	r3, [r7, #4]
 8002352:	4b0c      	ldr	r3, [pc, #48]	; (8002384 <MX_DMA_Init+0x3c>)
 8002354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002356:	4a0b      	ldr	r2, [pc, #44]	; (8002384 <MX_DMA_Init+0x3c>)
 8002358:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800235c:	6313      	str	r3, [r2, #48]	; 0x30
 800235e:	4b09      	ldr	r3, [pc, #36]	; (8002384 <MX_DMA_Init+0x3c>)
 8002360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002362:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002366:	607b      	str	r3, [r7, #4]
 8002368:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 800236a:	2200      	movs	r2, #0
 800236c:	2100      	movs	r1, #0
 800236e:	2010      	movs	r0, #16
 8002370:	f000 fd19 	bl	8002da6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 8002374:	2010      	movs	r0, #16
 8002376:	f000 fd32 	bl	8002dde <HAL_NVIC_EnableIRQ>

}
 800237a:	bf00      	nop
 800237c:	3708      	adds	r7, #8
 800237e:	46bd      	mov	sp, r7
 8002380:	bd80      	pop	{r7, pc}
 8002382:	bf00      	nop
 8002384:	40023800 	.word	0x40023800

08002388 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002388:	b580      	push	{r7, lr}
 800238a:	b08a      	sub	sp, #40	; 0x28
 800238c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800238e:	f107 0314 	add.w	r3, r7, #20
 8002392:	2200      	movs	r2, #0
 8002394:	601a      	str	r2, [r3, #0]
 8002396:	605a      	str	r2, [r3, #4]
 8002398:	609a      	str	r2, [r3, #8]
 800239a:	60da      	str	r2, [r3, #12]
 800239c:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800239e:	2300      	movs	r3, #0
 80023a0:	613b      	str	r3, [r7, #16]
 80023a2:	4b46      	ldr	r3, [pc, #280]	; (80024bc <MX_GPIO_Init+0x134>)
 80023a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023a6:	4a45      	ldr	r2, [pc, #276]	; (80024bc <MX_GPIO_Init+0x134>)
 80023a8:	f043 0304 	orr.w	r3, r3, #4
 80023ac:	6313      	str	r3, [r2, #48]	; 0x30
 80023ae:	4b43      	ldr	r3, [pc, #268]	; (80024bc <MX_GPIO_Init+0x134>)
 80023b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023b2:	f003 0304 	and.w	r3, r3, #4
 80023b6:	613b      	str	r3, [r7, #16]
 80023b8:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80023ba:	2300      	movs	r3, #0
 80023bc:	60fb      	str	r3, [r7, #12]
 80023be:	4b3f      	ldr	r3, [pc, #252]	; (80024bc <MX_GPIO_Init+0x134>)
 80023c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023c2:	4a3e      	ldr	r2, [pc, #248]	; (80024bc <MX_GPIO_Init+0x134>)
 80023c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80023c8:	6313      	str	r3, [r2, #48]	; 0x30
 80023ca:	4b3c      	ldr	r3, [pc, #240]	; (80024bc <MX_GPIO_Init+0x134>)
 80023cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023ce:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80023d2:	60fb      	str	r3, [r7, #12]
 80023d4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80023d6:	2300      	movs	r3, #0
 80023d8:	60bb      	str	r3, [r7, #8]
 80023da:	4b38      	ldr	r3, [pc, #224]	; (80024bc <MX_GPIO_Init+0x134>)
 80023dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023de:	4a37      	ldr	r2, [pc, #220]	; (80024bc <MX_GPIO_Init+0x134>)
 80023e0:	f043 0301 	orr.w	r3, r3, #1
 80023e4:	6313      	str	r3, [r2, #48]	; 0x30
 80023e6:	4b35      	ldr	r3, [pc, #212]	; (80024bc <MX_GPIO_Init+0x134>)
 80023e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023ea:	f003 0301 	and.w	r3, r3, #1
 80023ee:	60bb      	str	r3, [r7, #8]
 80023f0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80023f2:	2300      	movs	r3, #0
 80023f4:	607b      	str	r3, [r7, #4]
 80023f6:	4b31      	ldr	r3, [pc, #196]	; (80024bc <MX_GPIO_Init+0x134>)
 80023f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023fa:	4a30      	ldr	r2, [pc, #192]	; (80024bc <MX_GPIO_Init+0x134>)
 80023fc:	f043 0302 	orr.w	r3, r3, #2
 8002400:	6313      	str	r3, [r2, #48]	; 0x30
 8002402:	4b2e      	ldr	r3, [pc, #184]	; (80024bc <MX_GPIO_Init+0x134>)
 8002404:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002406:	f003 0302 	and.w	r3, r3, #2
 800240a:	607b      	str	r3, [r7, #4]
 800240c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|D1_Pin|D0_Pin, GPIO_PIN_RESET);
 800240e:	2200      	movs	r2, #0
 8002410:	f44f 7148 	mov.w	r1, #800	; 0x320
 8002414:	482a      	ldr	r0, [pc, #168]	; (80024c0 <MX_GPIO_Init+0x138>)
 8002416:	f001 fab9 	bl	800398c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(PTT_GPIO_Port, PTT_Pin, GPIO_PIN_RESET);
 800241a:	2200      	movs	r2, #0
 800241c:	2110      	movs	r1, #16
 800241e:	4829      	ldr	r0, [pc, #164]	; (80024c4 <MX_GPIO_Init+0x13c>)
 8002420:	f001 fab4 	bl	800398c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, D2_Pin|D3_Pin, GPIO_PIN_RESET);
 8002424:	2200      	movs	r2, #0
 8002426:	f44f 6182 	mov.w	r1, #1040	; 0x410
 800242a:	4827      	ldr	r0, [pc, #156]	; (80024c8 <MX_GPIO_Init+0x140>)
 800242c:	f001 faae 	bl	800398c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8002430:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002434:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8002436:	4b25      	ldr	r3, [pc, #148]	; (80024cc <MX_GPIO_Init+0x144>)
 8002438:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800243a:	2300      	movs	r3, #0
 800243c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 800243e:	f107 0314 	add.w	r3, r7, #20
 8002442:	4619      	mov	r1, r3
 8002444:	481f      	ldr	r0, [pc, #124]	; (80024c4 <MX_GPIO_Init+0x13c>)
 8002446:	f001 f90f 	bl	8003668 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin D1_Pin D0_Pin */
  GPIO_InitStruct.Pin = LD2_Pin|D1_Pin|D0_Pin;
 800244a:	f44f 7348 	mov.w	r3, #800	; 0x320
 800244e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002450:	2301      	movs	r3, #1
 8002452:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002454:	2300      	movs	r3, #0
 8002456:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002458:	2300      	movs	r3, #0
 800245a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800245c:	f107 0314 	add.w	r3, r7, #20
 8002460:	4619      	mov	r1, r3
 8002462:	4817      	ldr	r0, [pc, #92]	; (80024c0 <MX_GPIO_Init+0x138>)
 8002464:	f001 f900 	bl	8003668 <HAL_GPIO_Init>

  /*Configure GPIO pin : PTT_Pin */
  GPIO_InitStruct.Pin = PTT_Pin;
 8002468:	2310      	movs	r3, #16
 800246a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800246c:	2301      	movs	r3, #1
 800246e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002470:	2300      	movs	r3, #0
 8002472:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002474:	2300      	movs	r3, #0
 8002476:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(PTT_GPIO_Port, &GPIO_InitStruct);
 8002478:	f107 0314 	add.w	r3, r7, #20
 800247c:	4619      	mov	r1, r3
 800247e:	4811      	ldr	r0, [pc, #68]	; (80024c4 <MX_GPIO_Init+0x13c>)
 8002480:	f001 f8f2 	bl	8003668 <HAL_GPIO_Init>

  /*Configure GPIO pins : D2_Pin D3_Pin */
  GPIO_InitStruct.Pin = D2_Pin|D3_Pin;
 8002484:	f44f 6382 	mov.w	r3, #1040	; 0x410
 8002488:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800248a:	2301      	movs	r3, #1
 800248c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800248e:	2300      	movs	r3, #0
 8002490:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002492:	2300      	movs	r3, #0
 8002494:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002496:	f107 0314 	add.w	r3, r7, #20
 800249a:	4619      	mov	r1, r3
 800249c:	480a      	ldr	r0, [pc, #40]	; (80024c8 <MX_GPIO_Init+0x140>)
 800249e:	f001 f8e3 	bl	8003668 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 80024a2:	2200      	movs	r2, #0
 80024a4:	2100      	movs	r1, #0
 80024a6:	2028      	movs	r0, #40	; 0x28
 80024a8:	f000 fc7d 	bl	8002da6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 80024ac:	2028      	movs	r0, #40	; 0x28
 80024ae:	f000 fc96 	bl	8002dde <HAL_NVIC_EnableIRQ>

}
 80024b2:	bf00      	nop
 80024b4:	3728      	adds	r7, #40	; 0x28
 80024b6:	46bd      	mov	sp, r7
 80024b8:	bd80      	pop	{r7, pc}
 80024ba:	bf00      	nop
 80024bc:	40023800 	.word	0x40023800
 80024c0:	40020000 	.word	0x40020000
 80024c4:	40020800 	.word	0x40020800
 80024c8:	40020400 	.word	0x40020400
 80024cc:	10210000 	.word	0x10210000

080024d0 <HAL_TIM_OC_DelayElapsedCallback>:

/* USER CODE BEGIN 4 */

OC_count = 0;
void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 80024d0:	b580      	push	{r7, lr}
 80024d2:	b082      	sub	sp, #8
 80024d4:	af00      	add	r7, sp, #0
 80024d6:	6078      	str	r0, [r7, #4]
	if (htim->Instance == TIM2 && htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)
 80024d8:	687b      	ldr	r3, [r7, #4]
 80024da:	681b      	ldr	r3, [r3, #0]
 80024dc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80024e0:	d10b      	bne.n	80024fa <HAL_TIM_OC_DelayElapsedCallback+0x2a>
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	7f1b      	ldrb	r3, [r3, #28]
 80024e6:	2b01      	cmp	r3, #1
 80024e8:	d107      	bne.n	80024fa <HAL_TIM_OC_DelayElapsedCallback+0x2a>
	{
		OC_count++;
 80024ea:	4b06      	ldr	r3, [pc, #24]	; (8002504 <HAL_TIM_OC_DelayElapsedCallback+0x34>)
 80024ec:	681b      	ldr	r3, [r3, #0]
 80024ee:	3301      	adds	r3, #1
 80024f0:	4a04      	ldr	r2, [pc, #16]	; (8002504 <HAL_TIM_OC_DelayElapsedCallback+0x34>)
 80024f2:	6013      	str	r3, [r2, #0]
		Tim2_OC_Callback();
 80024f4:	f7ff fae0 	bl	8001ab8 <Tim2_OC_Callback>
	}
	return;
 80024f8:	bf00      	nop
 80024fa:	bf00      	nop
}
 80024fc:	3708      	adds	r7, #8
 80024fe:	46bd      	mov	sp, r7
 8002500:	bd80      	pop	{r7, pc}
 8002502:	bf00      	nop
 8002504:	200000d0 	.word	0x200000d0

08002508 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 8002508:	b580      	push	{r7, lr}
 800250a:	b082      	sub	sp, #8
 800250c:	af00      	add	r7, sp, #0
 800250e:	6078      	str	r0, [r7, #4]
	if (htim == &htim3)
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	4a05      	ldr	r2, [pc, #20]	; (8002528 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8002514:	4293      	cmp	r3, r2
 8002516:	d102      	bne.n	800251e <HAL_TIM_PeriodElapsedCallback+0x16>
		Tim3_IT_Callback();
 8002518:	f7ff fbf0 	bl	8001cfc <Tim3_IT_Callback>
	else
		__NOP();

	return;
 800251c:	e001      	b.n	8002522 <HAL_TIM_PeriodElapsedCallback+0x1a>
		__NOP();
 800251e:	bf00      	nop
	return;
 8002520:	bf00      	nop
}
 8002522:	3708      	adds	r7, #8
 8002524:	46bd      	mov	sp, r7
 8002526:	bd80      	pop	{r7, pc}
 8002528:	200028ec 	.word	0x200028ec

0800252c <HAL_TIM_IC_CaptureCallback>:

int IC_count =0;
void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 800252c:	b580      	push	{r7, lr}
 800252e:	b082      	sub	sp, #8
 8002530:	af00      	add	r7, sp, #0
 8002532:	6078      	str	r0, [r7, #4]
	//Make sure this is the right timer and channel
	if (htim->Instance == TIM5 && htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	4a09      	ldr	r2, [pc, #36]	; (8002560 <HAL_TIM_IC_CaptureCallback+0x34>)
 800253a:	4293      	cmp	r3, r2
 800253c:	d10b      	bne.n	8002556 <HAL_TIM_IC_CaptureCallback+0x2a>
 800253e:	687b      	ldr	r3, [r7, #4]
 8002540:	7f1b      	ldrb	r3, [r3, #28]
 8002542:	2b01      	cmp	r3, #1
 8002544:	d107      	bne.n	8002556 <HAL_TIM_IC_CaptureCallback+0x2a>
	{
		IC_count++;
 8002546:	4b07      	ldr	r3, [pc, #28]	; (8002564 <HAL_TIM_IC_CaptureCallback+0x38>)
 8002548:	681b      	ldr	r3, [r3, #0]
 800254a:	3301      	adds	r3, #1
 800254c:	4a05      	ldr	r2, [pc, #20]	; (8002564 <HAL_TIM_IC_CaptureCallback+0x38>)
 800254e:	6013      	str	r3, [r2, #0]
		Tim5_IC_Callback();
 8002550:	f7ff fbe6 	bl	8001d20 <Tim5_IC_Callback>
	}

	return;
 8002554:	bf00      	nop
 8002556:	bf00      	nop
}
 8002558:	3708      	adds	r7, #8
 800255a:	46bd      	mov	sp, r7
 800255c:	bd80      	pop	{r7, pc}
 800255e:	bf00      	nop
 8002560:	40000c00 	.word	0x40000c00
 8002564:	200000d4 	.word	0x200000d4

08002568 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8002568:	b580      	push	{r7, lr}
 800256a:	b082      	sub	sp, #8
 800256c:	af00      	add	r7, sp, #0
 800256e:	6078      	str	r0, [r7, #4]
  if (huart->Instance == USART2)
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	681b      	ldr	r3, [r3, #0]
 8002574:	4a04      	ldr	r2, [pc, #16]	; (8002588 <HAL_UART_RxCpltCallback+0x20>)
 8002576:	4293      	cmp	r3, r2
 8002578:	d101      	bne.n	800257e <HAL_UART_RxCpltCallback+0x16>
  {
	  UART2_Exception_Callback();
 800257a:	f7ff fc85 	bl	8001e88 <UART2_Exception_Callback>
  }
}
 800257e:	bf00      	nop
 8002580:	3708      	adds	r7, #8
 8002582:	46bd      	mov	sp, r7
 8002584:	bd80      	pop	{r7, pc}
 8002586:	bf00      	nop
 8002588:	40004400 	.word	0x40004400

0800258c <uart_gpio_init>:

void uart_gpio_init()
{
 800258c:	b580      	push	{r7, lr}
 800258e:	b086      	sub	sp, #24
 8002590:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct;

  __GPIOA_CLK_ENABLE();
 8002592:	2300      	movs	r3, #0
 8002594:	603b      	str	r3, [r7, #0]
 8002596:	4b0f      	ldr	r3, [pc, #60]	; (80025d4 <uart_gpio_init+0x48>)
 8002598:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800259a:	4a0e      	ldr	r2, [pc, #56]	; (80025d4 <uart_gpio_init+0x48>)
 800259c:	f043 0301 	orr.w	r3, r3, #1
 80025a0:	6313      	str	r3, [r2, #48]	; 0x30
 80025a2:	4b0c      	ldr	r3, [pc, #48]	; (80025d4 <uart_gpio_init+0x48>)
 80025a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80025a6:	f003 0301 	and.w	r3, r3, #1
 80025aa:	603b      	str	r3, [r7, #0]
 80025ac:	683b      	ldr	r3, [r7, #0]

  /**USART2 GPIO Configuration
  PA2     ------> USART2_TX
  PA3     ------> USART2_RX
  */
  GPIO_InitStruct.Pin = GPIO_PIN_2 | GPIO_PIN_3;
 80025ae:	230c      	movs	r3, #12
 80025b0:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025b2:	2302      	movs	r3, #2
 80025b4:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80025b6:	2301      	movs	r3, #1
 80025b8:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
 80025ba:	2300      	movs	r3, #0
 80025bc:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80025be:	2307      	movs	r3, #7
 80025c0:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025c2:	1d3b      	adds	r3, r7, #4
 80025c4:	4619      	mov	r1, r3
 80025c6:	4804      	ldr	r0, [pc, #16]	; (80025d8 <uart_gpio_init+0x4c>)
 80025c8:	f001 f84e 	bl	8003668 <HAL_GPIO_Init>
}
 80025cc:	bf00      	nop
 80025ce:	3718      	adds	r7, #24
 80025d0:	46bd      	mov	sp, r7
 80025d2:	bd80      	pop	{r7, pc}
 80025d4:	40023800 	.word	0x40023800
 80025d8:	40020000 	.word	0x40020000

080025dc <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80025dc:	b480      	push	{r7}
 80025de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80025e0:	bf00      	nop
 80025e2:	46bd      	mov	sp, r7
 80025e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025e8:	4770      	bx	lr
	...

080025ec <HAL_MspInit>:
 80025ec:	b580      	push	{r7, lr}
 80025ee:	b082      	sub	sp, #8
 80025f0:	af00      	add	r7, sp, #0
 80025f2:	2300      	movs	r3, #0
 80025f4:	607b      	str	r3, [r7, #4]
 80025f6:	4b10      	ldr	r3, [pc, #64]	; (8002638 <HAL_MspInit+0x4c>)
 80025f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80025fa:	4a0f      	ldr	r2, [pc, #60]	; (8002638 <HAL_MspInit+0x4c>)
 80025fc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002600:	6453      	str	r3, [r2, #68]	; 0x44
 8002602:	4b0d      	ldr	r3, [pc, #52]	; (8002638 <HAL_MspInit+0x4c>)
 8002604:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002606:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800260a:	607b      	str	r3, [r7, #4]
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	2300      	movs	r3, #0
 8002610:	603b      	str	r3, [r7, #0]
 8002612:	4b09      	ldr	r3, [pc, #36]	; (8002638 <HAL_MspInit+0x4c>)
 8002614:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002616:	4a08      	ldr	r2, [pc, #32]	; (8002638 <HAL_MspInit+0x4c>)
 8002618:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800261c:	6413      	str	r3, [r2, #64]	; 0x40
 800261e:	4b06      	ldr	r3, [pc, #24]	; (8002638 <HAL_MspInit+0x4c>)
 8002620:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002622:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002626:	603b      	str	r3, [r7, #0]
 8002628:	683b      	ldr	r3, [r7, #0]
 800262a:	2007      	movs	r0, #7
 800262c:	f000 fbb0 	bl	8002d90 <HAL_NVIC_SetPriorityGrouping>
 8002630:	bf00      	nop
 8002632:	3708      	adds	r7, #8
 8002634:	46bd      	mov	sp, r7
 8002636:	bd80      	pop	{r7, pc}
 8002638:	40023800 	.word	0x40023800

0800263c <HAL_DAC_MspInit>:
 800263c:	b580      	push	{r7, lr}
 800263e:	b08a      	sub	sp, #40	; 0x28
 8002640:	af00      	add	r7, sp, #0
 8002642:	6078      	str	r0, [r7, #4]
 8002644:	f107 0314 	add.w	r3, r7, #20
 8002648:	2200      	movs	r2, #0
 800264a:	601a      	str	r2, [r3, #0]
 800264c:	605a      	str	r2, [r3, #4]
 800264e:	609a      	str	r2, [r3, #8]
 8002650:	60da      	str	r2, [r3, #12]
 8002652:	611a      	str	r2, [r3, #16]
 8002654:	687b      	ldr	r3, [r7, #4]
 8002656:	681b      	ldr	r3, [r3, #0]
 8002658:	4a2f      	ldr	r2, [pc, #188]	; (8002718 <HAL_DAC_MspInit+0xdc>)
 800265a:	4293      	cmp	r3, r2
 800265c:	d158      	bne.n	8002710 <HAL_DAC_MspInit+0xd4>
 800265e:	2300      	movs	r3, #0
 8002660:	613b      	str	r3, [r7, #16]
 8002662:	4b2e      	ldr	r3, [pc, #184]	; (800271c <HAL_DAC_MspInit+0xe0>)
 8002664:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002666:	4a2d      	ldr	r2, [pc, #180]	; (800271c <HAL_DAC_MspInit+0xe0>)
 8002668:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800266c:	6413      	str	r3, [r2, #64]	; 0x40
 800266e:	4b2b      	ldr	r3, [pc, #172]	; (800271c <HAL_DAC_MspInit+0xe0>)
 8002670:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002672:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8002676:	613b      	str	r3, [r7, #16]
 8002678:	693b      	ldr	r3, [r7, #16]
 800267a:	2300      	movs	r3, #0
 800267c:	60fb      	str	r3, [r7, #12]
 800267e:	4b27      	ldr	r3, [pc, #156]	; (800271c <HAL_DAC_MspInit+0xe0>)
 8002680:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002682:	4a26      	ldr	r2, [pc, #152]	; (800271c <HAL_DAC_MspInit+0xe0>)
 8002684:	f043 0301 	orr.w	r3, r3, #1
 8002688:	6313      	str	r3, [r2, #48]	; 0x30
 800268a:	4b24      	ldr	r3, [pc, #144]	; (800271c <HAL_DAC_MspInit+0xe0>)
 800268c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800268e:	f003 0301 	and.w	r3, r3, #1
 8002692:	60fb      	str	r3, [r7, #12]
 8002694:	68fb      	ldr	r3, [r7, #12]
 8002696:	2310      	movs	r3, #16
 8002698:	617b      	str	r3, [r7, #20]
 800269a:	2303      	movs	r3, #3
 800269c:	61bb      	str	r3, [r7, #24]
 800269e:	2300      	movs	r3, #0
 80026a0:	61fb      	str	r3, [r7, #28]
 80026a2:	f107 0314 	add.w	r3, r7, #20
 80026a6:	4619      	mov	r1, r3
 80026a8:	481d      	ldr	r0, [pc, #116]	; (8002720 <HAL_DAC_MspInit+0xe4>)
 80026aa:	f000 ffdd 	bl	8003668 <HAL_GPIO_Init>
 80026ae:	4b1d      	ldr	r3, [pc, #116]	; (8002724 <HAL_DAC_MspInit+0xe8>)
 80026b0:	4a1d      	ldr	r2, [pc, #116]	; (8002728 <HAL_DAC_MspInit+0xec>)
 80026b2:	601a      	str	r2, [r3, #0]
 80026b4:	4b1b      	ldr	r3, [pc, #108]	; (8002724 <HAL_DAC_MspInit+0xe8>)
 80026b6:	f04f 6260 	mov.w	r2, #234881024	; 0xe000000
 80026ba:	605a      	str	r2, [r3, #4]
 80026bc:	4b19      	ldr	r3, [pc, #100]	; (8002724 <HAL_DAC_MspInit+0xe8>)
 80026be:	2240      	movs	r2, #64	; 0x40
 80026c0:	609a      	str	r2, [r3, #8]
 80026c2:	4b18      	ldr	r3, [pc, #96]	; (8002724 <HAL_DAC_MspInit+0xe8>)
 80026c4:	2200      	movs	r2, #0
 80026c6:	60da      	str	r2, [r3, #12]
 80026c8:	4b16      	ldr	r3, [pc, #88]	; (8002724 <HAL_DAC_MspInit+0xe8>)
 80026ca:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80026ce:	611a      	str	r2, [r3, #16]
 80026d0:	4b14      	ldr	r3, [pc, #80]	; (8002724 <HAL_DAC_MspInit+0xe8>)
 80026d2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80026d6:	615a      	str	r2, [r3, #20]
 80026d8:	4b12      	ldr	r3, [pc, #72]	; (8002724 <HAL_DAC_MspInit+0xe8>)
 80026da:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80026de:	619a      	str	r2, [r3, #24]
 80026e0:	4b10      	ldr	r3, [pc, #64]	; (8002724 <HAL_DAC_MspInit+0xe8>)
 80026e2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80026e6:	61da      	str	r2, [r3, #28]
 80026e8:	4b0e      	ldr	r3, [pc, #56]	; (8002724 <HAL_DAC_MspInit+0xe8>)
 80026ea:	2200      	movs	r2, #0
 80026ec:	621a      	str	r2, [r3, #32]
 80026ee:	4b0d      	ldr	r3, [pc, #52]	; (8002724 <HAL_DAC_MspInit+0xe8>)
 80026f0:	2200      	movs	r2, #0
 80026f2:	625a      	str	r2, [r3, #36]	; 0x24
 80026f4:	480b      	ldr	r0, [pc, #44]	; (8002724 <HAL_DAC_MspInit+0xe8>)
 80026f6:	f000 fc3d 	bl	8002f74 <HAL_DMA_Init>
 80026fa:	4603      	mov	r3, r0
 80026fc:	2b00      	cmp	r3, #0
 80026fe:	d001      	beq.n	8002704 <HAL_DAC_MspInit+0xc8>
 8002700:	f7ff ff6c 	bl	80025dc <Error_Handler>
 8002704:	687b      	ldr	r3, [r7, #4]
 8002706:	4a07      	ldr	r2, [pc, #28]	; (8002724 <HAL_DAC_MspInit+0xe8>)
 8002708:	609a      	str	r2, [r3, #8]
 800270a:	4a06      	ldr	r2, [pc, #24]	; (8002724 <HAL_DAC_MspInit+0xe8>)
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	6393      	str	r3, [r2, #56]	; 0x38
 8002710:	bf00      	nop
 8002712:	3728      	adds	r7, #40	; 0x28
 8002714:	46bd      	mov	sp, r7
 8002716:	bd80      	pop	{r7, pc}
 8002718:	40007400 	.word	0x40007400
 800271c:	40023800 	.word	0x40023800
 8002720:	40020000 	.word	0x40020000
 8002724:	2000292c 	.word	0x2000292c
 8002728:	40026088 	.word	0x40026088

0800272c <HAL_TIM_Base_MspInit>:
 800272c:	b580      	push	{r7, lr}
 800272e:	b08c      	sub	sp, #48	; 0x30
 8002730:	af00      	add	r7, sp, #0
 8002732:	6078      	str	r0, [r7, #4]
 8002734:	f107 031c 	add.w	r3, r7, #28
 8002738:	2200      	movs	r2, #0
 800273a:	601a      	str	r2, [r3, #0]
 800273c:	605a      	str	r2, [r3, #4]
 800273e:	609a      	str	r2, [r3, #8]
 8002740:	60da      	str	r2, [r3, #12]
 8002742:	611a      	str	r2, [r3, #16]
 8002744:	687b      	ldr	r3, [r7, #4]
 8002746:	681b      	ldr	r3, [r3, #0]
 8002748:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800274c:	d116      	bne.n	800277c <HAL_TIM_Base_MspInit+0x50>
 800274e:	2300      	movs	r3, #0
 8002750:	61bb      	str	r3, [r7, #24]
 8002752:	4b37      	ldr	r3, [pc, #220]	; (8002830 <HAL_TIM_Base_MspInit+0x104>)
 8002754:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002756:	4a36      	ldr	r2, [pc, #216]	; (8002830 <HAL_TIM_Base_MspInit+0x104>)
 8002758:	f043 0301 	orr.w	r3, r3, #1
 800275c:	6413      	str	r3, [r2, #64]	; 0x40
 800275e:	4b34      	ldr	r3, [pc, #208]	; (8002830 <HAL_TIM_Base_MspInit+0x104>)
 8002760:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002762:	f003 0301 	and.w	r3, r3, #1
 8002766:	61bb      	str	r3, [r7, #24]
 8002768:	69bb      	ldr	r3, [r7, #24]
 800276a:	2200      	movs	r2, #0
 800276c:	2100      	movs	r1, #0
 800276e:	201c      	movs	r0, #28
 8002770:	f000 fb19 	bl	8002da6 <HAL_NVIC_SetPriority>
 8002774:	201c      	movs	r0, #28
 8002776:	f000 fb32 	bl	8002dde <HAL_NVIC_EnableIRQ>
 800277a:	e054      	b.n	8002826 <HAL_TIM_Base_MspInit+0xfa>
 800277c:	687b      	ldr	r3, [r7, #4]
 800277e:	681b      	ldr	r3, [r3, #0]
 8002780:	4a2c      	ldr	r2, [pc, #176]	; (8002834 <HAL_TIM_Base_MspInit+0x108>)
 8002782:	4293      	cmp	r3, r2
 8002784:	d116      	bne.n	80027b4 <HAL_TIM_Base_MspInit+0x88>
 8002786:	2300      	movs	r3, #0
 8002788:	617b      	str	r3, [r7, #20]
 800278a:	4b29      	ldr	r3, [pc, #164]	; (8002830 <HAL_TIM_Base_MspInit+0x104>)
 800278c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800278e:	4a28      	ldr	r2, [pc, #160]	; (8002830 <HAL_TIM_Base_MspInit+0x104>)
 8002790:	f043 0302 	orr.w	r3, r3, #2
 8002794:	6413      	str	r3, [r2, #64]	; 0x40
 8002796:	4b26      	ldr	r3, [pc, #152]	; (8002830 <HAL_TIM_Base_MspInit+0x104>)
 8002798:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800279a:	f003 0302 	and.w	r3, r3, #2
 800279e:	617b      	str	r3, [r7, #20]
 80027a0:	697b      	ldr	r3, [r7, #20]
 80027a2:	2200      	movs	r2, #0
 80027a4:	2100      	movs	r1, #0
 80027a6:	201d      	movs	r0, #29
 80027a8:	f000 fafd 	bl	8002da6 <HAL_NVIC_SetPriority>
 80027ac:	201d      	movs	r0, #29
 80027ae:	f000 fb16 	bl	8002dde <HAL_NVIC_EnableIRQ>
 80027b2:	e038      	b.n	8002826 <HAL_TIM_Base_MspInit+0xfa>
 80027b4:	687b      	ldr	r3, [r7, #4]
 80027b6:	681b      	ldr	r3, [r3, #0]
 80027b8:	4a1f      	ldr	r2, [pc, #124]	; (8002838 <HAL_TIM_Base_MspInit+0x10c>)
 80027ba:	4293      	cmp	r3, r2
 80027bc:	d133      	bne.n	8002826 <HAL_TIM_Base_MspInit+0xfa>
 80027be:	2300      	movs	r3, #0
 80027c0:	613b      	str	r3, [r7, #16]
 80027c2:	4b1b      	ldr	r3, [pc, #108]	; (8002830 <HAL_TIM_Base_MspInit+0x104>)
 80027c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80027c6:	4a1a      	ldr	r2, [pc, #104]	; (8002830 <HAL_TIM_Base_MspInit+0x104>)
 80027c8:	f043 0308 	orr.w	r3, r3, #8
 80027cc:	6413      	str	r3, [r2, #64]	; 0x40
 80027ce:	4b18      	ldr	r3, [pc, #96]	; (8002830 <HAL_TIM_Base_MspInit+0x104>)
 80027d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80027d2:	f003 0308 	and.w	r3, r3, #8
 80027d6:	613b      	str	r3, [r7, #16]
 80027d8:	693b      	ldr	r3, [r7, #16]
 80027da:	2300      	movs	r3, #0
 80027dc:	60fb      	str	r3, [r7, #12]
 80027de:	4b14      	ldr	r3, [pc, #80]	; (8002830 <HAL_TIM_Base_MspInit+0x104>)
 80027e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027e2:	4a13      	ldr	r2, [pc, #76]	; (8002830 <HAL_TIM_Base_MspInit+0x104>)
 80027e4:	f043 0301 	orr.w	r3, r3, #1
 80027e8:	6313      	str	r3, [r2, #48]	; 0x30
 80027ea:	4b11      	ldr	r3, [pc, #68]	; (8002830 <HAL_TIM_Base_MspInit+0x104>)
 80027ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027ee:	f003 0301 	and.w	r3, r3, #1
 80027f2:	60fb      	str	r3, [r7, #12]
 80027f4:	68fb      	ldr	r3, [r7, #12]
 80027f6:	2301      	movs	r3, #1
 80027f8:	61fb      	str	r3, [r7, #28]
 80027fa:	2302      	movs	r3, #2
 80027fc:	623b      	str	r3, [r7, #32]
 80027fe:	2300      	movs	r3, #0
 8002800:	627b      	str	r3, [r7, #36]	; 0x24
 8002802:	2300      	movs	r3, #0
 8002804:	62bb      	str	r3, [r7, #40]	; 0x28
 8002806:	2302      	movs	r3, #2
 8002808:	62fb      	str	r3, [r7, #44]	; 0x2c
 800280a:	f107 031c 	add.w	r3, r7, #28
 800280e:	4619      	mov	r1, r3
 8002810:	480a      	ldr	r0, [pc, #40]	; (800283c <HAL_TIM_Base_MspInit+0x110>)
 8002812:	f000 ff29 	bl	8003668 <HAL_GPIO_Init>
 8002816:	2200      	movs	r2, #0
 8002818:	2100      	movs	r1, #0
 800281a:	2032      	movs	r0, #50	; 0x32
 800281c:	f000 fac3 	bl	8002da6 <HAL_NVIC_SetPriority>
 8002820:	2032      	movs	r0, #50	; 0x32
 8002822:	f000 fadc 	bl	8002dde <HAL_NVIC_EnableIRQ>
 8002826:	bf00      	nop
 8002828:	3730      	adds	r7, #48	; 0x30
 800282a:	46bd      	mov	sp, r7
 800282c:	bd80      	pop	{r7, pc}
 800282e:	bf00      	nop
 8002830:	40023800 	.word	0x40023800
 8002834:	40000400 	.word	0x40000400
 8002838:	40000c00 	.word	0x40000c00
 800283c:	40020000 	.word	0x40020000

08002840 <HAL_TIM_MspPostInit>:
 8002840:	b580      	push	{r7, lr}
 8002842:	b088      	sub	sp, #32
 8002844:	af00      	add	r7, sp, #0
 8002846:	6078      	str	r0, [r7, #4]
 8002848:	f107 030c 	add.w	r3, r7, #12
 800284c:	2200      	movs	r2, #0
 800284e:	601a      	str	r2, [r3, #0]
 8002850:	605a      	str	r2, [r3, #4]
 8002852:	609a      	str	r2, [r3, #8]
 8002854:	60da      	str	r2, [r3, #12]
 8002856:	611a      	str	r2, [r3, #16]
 8002858:	687b      	ldr	r3, [r7, #4]
 800285a:	681b      	ldr	r3, [r3, #0]
 800285c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002860:	d11e      	bne.n	80028a0 <HAL_TIM_MspPostInit+0x60>
 8002862:	2300      	movs	r3, #0
 8002864:	60bb      	str	r3, [r7, #8]
 8002866:	4b10      	ldr	r3, [pc, #64]	; (80028a8 <HAL_TIM_MspPostInit+0x68>)
 8002868:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800286a:	4a0f      	ldr	r2, [pc, #60]	; (80028a8 <HAL_TIM_MspPostInit+0x68>)
 800286c:	f043 0301 	orr.w	r3, r3, #1
 8002870:	6313      	str	r3, [r2, #48]	; 0x30
 8002872:	4b0d      	ldr	r3, [pc, #52]	; (80028a8 <HAL_TIM_MspPostInit+0x68>)
 8002874:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002876:	f003 0301 	and.w	r3, r3, #1
 800287a:	60bb      	str	r3, [r7, #8]
 800287c:	68bb      	ldr	r3, [r7, #8]
 800287e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002882:	60fb      	str	r3, [r7, #12]
 8002884:	2302      	movs	r3, #2
 8002886:	613b      	str	r3, [r7, #16]
 8002888:	2300      	movs	r3, #0
 800288a:	617b      	str	r3, [r7, #20]
 800288c:	2300      	movs	r3, #0
 800288e:	61bb      	str	r3, [r7, #24]
 8002890:	2301      	movs	r3, #1
 8002892:	61fb      	str	r3, [r7, #28]
 8002894:	f107 030c 	add.w	r3, r7, #12
 8002898:	4619      	mov	r1, r3
 800289a:	4804      	ldr	r0, [pc, #16]	; (80028ac <HAL_TIM_MspPostInit+0x6c>)
 800289c:	f000 fee4 	bl	8003668 <HAL_GPIO_Init>
 80028a0:	bf00      	nop
 80028a2:	3720      	adds	r7, #32
 80028a4:	46bd      	mov	sp, r7
 80028a6:	bd80      	pop	{r7, pc}
 80028a8:	40023800 	.word	0x40023800
 80028ac:	40020000 	.word	0x40020000

080028b0 <HAL_UART_MspInit>:
 80028b0:	b580      	push	{r7, lr}
 80028b2:	b08a      	sub	sp, #40	; 0x28
 80028b4:	af00      	add	r7, sp, #0
 80028b6:	6078      	str	r0, [r7, #4]
 80028b8:	f107 0314 	add.w	r3, r7, #20
 80028bc:	2200      	movs	r2, #0
 80028be:	601a      	str	r2, [r3, #0]
 80028c0:	605a      	str	r2, [r3, #4]
 80028c2:	609a      	str	r2, [r3, #8]
 80028c4:	60da      	str	r2, [r3, #12]
 80028c6:	611a      	str	r2, [r3, #16]
 80028c8:	687b      	ldr	r3, [r7, #4]
 80028ca:	681b      	ldr	r3, [r3, #0]
 80028cc:	4a1d      	ldr	r2, [pc, #116]	; (8002944 <HAL_UART_MspInit+0x94>)
 80028ce:	4293      	cmp	r3, r2
 80028d0:	d133      	bne.n	800293a <HAL_UART_MspInit+0x8a>
 80028d2:	2300      	movs	r3, #0
 80028d4:	613b      	str	r3, [r7, #16]
 80028d6:	4b1c      	ldr	r3, [pc, #112]	; (8002948 <HAL_UART_MspInit+0x98>)
 80028d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028da:	4a1b      	ldr	r2, [pc, #108]	; (8002948 <HAL_UART_MspInit+0x98>)
 80028dc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80028e0:	6413      	str	r3, [r2, #64]	; 0x40
 80028e2:	4b19      	ldr	r3, [pc, #100]	; (8002948 <HAL_UART_MspInit+0x98>)
 80028e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028e6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80028ea:	613b      	str	r3, [r7, #16]
 80028ec:	693b      	ldr	r3, [r7, #16]
 80028ee:	2300      	movs	r3, #0
 80028f0:	60fb      	str	r3, [r7, #12]
 80028f2:	4b15      	ldr	r3, [pc, #84]	; (8002948 <HAL_UART_MspInit+0x98>)
 80028f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028f6:	4a14      	ldr	r2, [pc, #80]	; (8002948 <HAL_UART_MspInit+0x98>)
 80028f8:	f043 0301 	orr.w	r3, r3, #1
 80028fc:	6313      	str	r3, [r2, #48]	; 0x30
 80028fe:	4b12      	ldr	r3, [pc, #72]	; (8002948 <HAL_UART_MspInit+0x98>)
 8002900:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002902:	f003 0301 	and.w	r3, r3, #1
 8002906:	60fb      	str	r3, [r7, #12]
 8002908:	68fb      	ldr	r3, [r7, #12]
 800290a:	230c      	movs	r3, #12
 800290c:	617b      	str	r3, [r7, #20]
 800290e:	2302      	movs	r3, #2
 8002910:	61bb      	str	r3, [r7, #24]
 8002912:	2300      	movs	r3, #0
 8002914:	61fb      	str	r3, [r7, #28]
 8002916:	2303      	movs	r3, #3
 8002918:	623b      	str	r3, [r7, #32]
 800291a:	2307      	movs	r3, #7
 800291c:	627b      	str	r3, [r7, #36]	; 0x24
 800291e:	f107 0314 	add.w	r3, r7, #20
 8002922:	4619      	mov	r1, r3
 8002924:	4809      	ldr	r0, [pc, #36]	; (800294c <HAL_UART_MspInit+0x9c>)
 8002926:	f000 fe9f 	bl	8003668 <HAL_GPIO_Init>
 800292a:	2200      	movs	r2, #0
 800292c:	2100      	movs	r1, #0
 800292e:	2026      	movs	r0, #38	; 0x26
 8002930:	f000 fa39 	bl	8002da6 <HAL_NVIC_SetPriority>
 8002934:	2026      	movs	r0, #38	; 0x26
 8002936:	f000 fa52 	bl	8002dde <HAL_NVIC_EnableIRQ>
 800293a:	bf00      	nop
 800293c:	3728      	adds	r7, #40	; 0x28
 800293e:	46bd      	mov	sp, r7
 8002940:	bd80      	pop	{r7, pc}
 8002942:	bf00      	nop
 8002944:	40004400 	.word	0x40004400
 8002948:	40023800 	.word	0x40023800
 800294c:	40020000 	.word	0x40020000

08002950 <NMI_Handler>:
 8002950:	b480      	push	{r7}
 8002952:	af00      	add	r7, sp, #0
 8002954:	bf00      	nop
 8002956:	46bd      	mov	sp, r7
 8002958:	f85d 7b04 	ldr.w	r7, [sp], #4
 800295c:	4770      	bx	lr

0800295e <HardFault_Handler>:
 800295e:	b480      	push	{r7}
 8002960:	af00      	add	r7, sp, #0
 8002962:	e7fe      	b.n	8002962 <HardFault_Handler+0x4>

08002964 <MemManage_Handler>:
 8002964:	b480      	push	{r7}
 8002966:	af00      	add	r7, sp, #0
 8002968:	e7fe      	b.n	8002968 <MemManage_Handler+0x4>

0800296a <BusFault_Handler>:
 800296a:	b480      	push	{r7}
 800296c:	af00      	add	r7, sp, #0
 800296e:	e7fe      	b.n	800296e <BusFault_Handler+0x4>

08002970 <UsageFault_Handler>:
 8002970:	b480      	push	{r7}
 8002972:	af00      	add	r7, sp, #0
 8002974:	e7fe      	b.n	8002974 <UsageFault_Handler+0x4>

08002976 <SVC_Handler>:
 8002976:	b480      	push	{r7}
 8002978:	af00      	add	r7, sp, #0
 800297a:	bf00      	nop
 800297c:	46bd      	mov	sp, r7
 800297e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002982:	4770      	bx	lr

08002984 <DebugMon_Handler>:
 8002984:	b480      	push	{r7}
 8002986:	af00      	add	r7, sp, #0
 8002988:	bf00      	nop
 800298a:	46bd      	mov	sp, r7
 800298c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002990:	4770      	bx	lr

08002992 <PendSV_Handler>:
 8002992:	b480      	push	{r7}
 8002994:	af00      	add	r7, sp, #0
 8002996:	bf00      	nop
 8002998:	46bd      	mov	sp, r7
 800299a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800299e:	4770      	bx	lr

080029a0 <SysTick_Handler>:
 80029a0:	b580      	push	{r7, lr}
 80029a2:	af00      	add	r7, sp, #0
 80029a4:	f000 f904 	bl	8002bb0 <HAL_IncTick>
 80029a8:	bf00      	nop
 80029aa:	bd80      	pop	{r7, pc}

080029ac <DMA1_Stream5_IRQHandler>:
 80029ac:	b580      	push	{r7, lr}
 80029ae:	af00      	add	r7, sp, #0
 80029b0:	4802      	ldr	r0, [pc, #8]	; (80029bc <DMA1_Stream5_IRQHandler+0x10>)
 80029b2:	f000 fc1f 	bl	80031f4 <HAL_DMA_IRQHandler>
 80029b6:	bf00      	nop
 80029b8:	bd80      	pop	{r7, pc}
 80029ba:	bf00      	nop
 80029bc:	2000292c 	.word	0x2000292c

080029c0 <TIM2_IRQHandler>:
 80029c0:	b580      	push	{r7, lr}
 80029c2:	af00      	add	r7, sp, #0
 80029c4:	4802      	ldr	r0, [pc, #8]	; (80029d0 <TIM2_IRQHandler+0x10>)
 80029c6:	f002 f805 	bl	80049d4 <HAL_TIM_IRQHandler>
 80029ca:	bf00      	nop
 80029cc:	bd80      	pop	{r7, pc}
 80029ce:	bf00      	nop
 80029d0:	200029a4 	.word	0x200029a4

080029d4 <TIM3_IRQHandler>:
 80029d4:	b580      	push	{r7, lr}
 80029d6:	af00      	add	r7, sp, #0
 80029d8:	4802      	ldr	r0, [pc, #8]	; (80029e4 <TIM3_IRQHandler+0x10>)
 80029da:	f001 fffb 	bl	80049d4 <HAL_TIM_IRQHandler>
 80029de:	bf00      	nop
 80029e0:	bd80      	pop	{r7, pc}
 80029e2:	bf00      	nop
 80029e4:	200028ec 	.word	0x200028ec

080029e8 <USART2_IRQHandler>:
 80029e8:	b580      	push	{r7, lr}
 80029ea:	af00      	add	r7, sp, #0
 80029ec:	4802      	ldr	r0, [pc, #8]	; (80029f8 <USART2_IRQHandler+0x10>)
 80029ee:	f003 f90b 	bl	8005c08 <HAL_UART_IRQHandler>
 80029f2:	bf00      	nop
 80029f4:	bd80      	pop	{r7, pc}
 80029f6:	bf00      	nop
 80029f8:	200029e4 	.word	0x200029e4

080029fc <EXTI15_10_IRQHandler>:
 80029fc:	b580      	push	{r7, lr}
 80029fe:	af00      	add	r7, sp, #0
 8002a00:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8002a04:	f000 fff6 	bl	80039f4 <HAL_GPIO_EXTI_IRQHandler>
 8002a08:	bf00      	nop
 8002a0a:	bd80      	pop	{r7, pc}

08002a0c <TIM5_IRQHandler>:
 8002a0c:	b580      	push	{r7, lr}
 8002a0e:	af00      	add	r7, sp, #0
 8002a10:	4802      	ldr	r0, [pc, #8]	; (8002a1c <TIM5_IRQHandler+0x10>)
 8002a12:	f001 ffdf 	bl	80049d4 <HAL_TIM_IRQHandler>
 8002a16:	bf00      	nop
 8002a18:	bd80      	pop	{r7, pc}
 8002a1a:	bf00      	nop
 8002a1c:	200028ac 	.word	0x200028ac

08002a20 <_sbrk>:
 8002a20:	b580      	push	{r7, lr}
 8002a22:	b086      	sub	sp, #24
 8002a24:	af00      	add	r7, sp, #0
 8002a26:	6078      	str	r0, [r7, #4]
 8002a28:	4a14      	ldr	r2, [pc, #80]	; (8002a7c <_sbrk+0x5c>)
 8002a2a:	4b15      	ldr	r3, [pc, #84]	; (8002a80 <_sbrk+0x60>)
 8002a2c:	1ad3      	subs	r3, r2, r3
 8002a2e:	617b      	str	r3, [r7, #20]
 8002a30:	697b      	ldr	r3, [r7, #20]
 8002a32:	613b      	str	r3, [r7, #16]
 8002a34:	4b13      	ldr	r3, [pc, #76]	; (8002a84 <_sbrk+0x64>)
 8002a36:	681b      	ldr	r3, [r3, #0]
 8002a38:	2b00      	cmp	r3, #0
 8002a3a:	d102      	bne.n	8002a42 <_sbrk+0x22>
 8002a3c:	4b11      	ldr	r3, [pc, #68]	; (8002a84 <_sbrk+0x64>)
 8002a3e:	4a12      	ldr	r2, [pc, #72]	; (8002a88 <_sbrk+0x68>)
 8002a40:	601a      	str	r2, [r3, #0]
 8002a42:	4b10      	ldr	r3, [pc, #64]	; (8002a84 <_sbrk+0x64>)
 8002a44:	681a      	ldr	r2, [r3, #0]
 8002a46:	687b      	ldr	r3, [r7, #4]
 8002a48:	4413      	add	r3, r2
 8002a4a:	693a      	ldr	r2, [r7, #16]
 8002a4c:	429a      	cmp	r2, r3
 8002a4e:	d207      	bcs.n	8002a60 <_sbrk+0x40>
 8002a50:	f003 fed6 	bl	8006800 <__errno>
 8002a54:	4602      	mov	r2, r0
 8002a56:	230c      	movs	r3, #12
 8002a58:	6013      	str	r3, [r2, #0]
 8002a5a:	f04f 33ff 	mov.w	r3, #4294967295
 8002a5e:	e009      	b.n	8002a74 <_sbrk+0x54>
 8002a60:	4b08      	ldr	r3, [pc, #32]	; (8002a84 <_sbrk+0x64>)
 8002a62:	681b      	ldr	r3, [r3, #0]
 8002a64:	60fb      	str	r3, [r7, #12]
 8002a66:	4b07      	ldr	r3, [pc, #28]	; (8002a84 <_sbrk+0x64>)
 8002a68:	681a      	ldr	r2, [r3, #0]
 8002a6a:	687b      	ldr	r3, [r7, #4]
 8002a6c:	4413      	add	r3, r2
 8002a6e:	4a05      	ldr	r2, [pc, #20]	; (8002a84 <_sbrk+0x64>)
 8002a70:	6013      	str	r3, [r2, #0]
 8002a72:	68fb      	ldr	r3, [r7, #12]
 8002a74:	4618      	mov	r0, r3
 8002a76:	3718      	adds	r7, #24
 8002a78:	46bd      	mov	sp, r7
 8002a7a:	bd80      	pop	{r7, pc}
 8002a7c:	20020000 	.word	0x20020000
 8002a80:	00000400 	.word	0x00000400
 8002a84:	200000d8 	.word	0x200000d8
 8002a88:	200034b8 	.word	0x200034b8

08002a8c <SystemInit>:
 8002a8c:	b480      	push	{r7}
 8002a8e:	af00      	add	r7, sp, #0
 8002a90:	4b08      	ldr	r3, [pc, #32]	; (8002ab4 <SystemInit+0x28>)
 8002a92:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002a96:	4a07      	ldr	r2, [pc, #28]	; (8002ab4 <SystemInit+0x28>)
 8002a98:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002a9c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002aa0:	4b04      	ldr	r3, [pc, #16]	; (8002ab4 <SystemInit+0x28>)
 8002aa2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8002aa6:	609a      	str	r2, [r3, #8]
 8002aa8:	bf00      	nop
 8002aaa:	46bd      	mov	sp, r7
 8002aac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ab0:	4770      	bx	lr
 8002ab2:	bf00      	nop
 8002ab4:	e000ed00 	.word	0xe000ed00

08002ab8 <Reset_Handler>:
 8002ab8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002af0 <LoopFillZerobss+0x14>
 8002abc:	2100      	movs	r1, #0
 8002abe:	e003      	b.n	8002ac8 <LoopCopyDataInit>

08002ac0 <CopyDataInit>:
 8002ac0:	4b0c      	ldr	r3, [pc, #48]	; (8002af4 <LoopFillZerobss+0x18>)
 8002ac2:	585b      	ldr	r3, [r3, r1]
 8002ac4:	5043      	str	r3, [r0, r1]
 8002ac6:	3104      	adds	r1, #4

08002ac8 <LoopCopyDataInit>:
 8002ac8:	480b      	ldr	r0, [pc, #44]	; (8002af8 <LoopFillZerobss+0x1c>)
 8002aca:	4b0c      	ldr	r3, [pc, #48]	; (8002afc <LoopFillZerobss+0x20>)
 8002acc:	1842      	adds	r2, r0, r1
 8002ace:	429a      	cmp	r2, r3
 8002ad0:	d3f6      	bcc.n	8002ac0 <CopyDataInit>
 8002ad2:	4a0b      	ldr	r2, [pc, #44]	; (8002b00 <LoopFillZerobss+0x24>)
 8002ad4:	e002      	b.n	8002adc <LoopFillZerobss>

08002ad6 <FillZerobss>:
 8002ad6:	2300      	movs	r3, #0
 8002ad8:	f842 3b04 	str.w	r3, [r2], #4

08002adc <LoopFillZerobss>:
 8002adc:	4b09      	ldr	r3, [pc, #36]	; (8002b04 <LoopFillZerobss+0x28>)
 8002ade:	429a      	cmp	r2, r3
 8002ae0:	d3f9      	bcc.n	8002ad6 <FillZerobss>
 8002ae2:	f7ff ffd3 	bl	8002a8c <SystemInit>
 8002ae6:	f003 fe91 	bl	800680c <__libc_init_array>
 8002aea:	f7ff fa17 	bl	8001f1c <main>
 8002aee:	4770      	bx	lr
 8002af0:	20020000 	.word	0x20020000
 8002af4:	08008640 	.word	0x08008640
 8002af8:	20000000 	.word	0x20000000
 8002afc:	20000088 	.word	0x20000088
 8002b00:	20000088 	.word	0x20000088
 8002b04:	200034b8 	.word	0x200034b8

08002b08 <ADC_IRQHandler>:
 8002b08:	e7fe      	b.n	8002b08 <ADC_IRQHandler>
	...

08002b0c <HAL_Init>:
 8002b0c:	b580      	push	{r7, lr}
 8002b0e:	af00      	add	r7, sp, #0
 8002b10:	4b0e      	ldr	r3, [pc, #56]	; (8002b4c <HAL_Init+0x40>)
 8002b12:	681b      	ldr	r3, [r3, #0]
 8002b14:	4a0d      	ldr	r2, [pc, #52]	; (8002b4c <HAL_Init+0x40>)
 8002b16:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002b1a:	6013      	str	r3, [r2, #0]
 8002b1c:	4b0b      	ldr	r3, [pc, #44]	; (8002b4c <HAL_Init+0x40>)
 8002b1e:	681b      	ldr	r3, [r3, #0]
 8002b20:	4a0a      	ldr	r2, [pc, #40]	; (8002b4c <HAL_Init+0x40>)
 8002b22:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002b26:	6013      	str	r3, [r2, #0]
 8002b28:	4b08      	ldr	r3, [pc, #32]	; (8002b4c <HAL_Init+0x40>)
 8002b2a:	681b      	ldr	r3, [r3, #0]
 8002b2c:	4a07      	ldr	r2, [pc, #28]	; (8002b4c <HAL_Init+0x40>)
 8002b2e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002b32:	6013      	str	r3, [r2, #0]
 8002b34:	2003      	movs	r0, #3
 8002b36:	f000 f92b 	bl	8002d90 <HAL_NVIC_SetPriorityGrouping>
 8002b3a:	2000      	movs	r0, #0
 8002b3c:	f000 f808 	bl	8002b50 <HAL_InitTick>
 8002b40:	f7ff fd54 	bl	80025ec <HAL_MspInit>
 8002b44:	2300      	movs	r3, #0
 8002b46:	4618      	mov	r0, r3
 8002b48:	bd80      	pop	{r7, pc}
 8002b4a:	bf00      	nop
 8002b4c:	40023c00 	.word	0x40023c00

08002b50 <HAL_InitTick>:
 8002b50:	b580      	push	{r7, lr}
 8002b52:	b082      	sub	sp, #8
 8002b54:	af00      	add	r7, sp, #0
 8002b56:	6078      	str	r0, [r7, #4]
 8002b58:	4b12      	ldr	r3, [pc, #72]	; (8002ba4 <HAL_InitTick+0x54>)
 8002b5a:	681a      	ldr	r2, [r3, #0]
 8002b5c:	4b12      	ldr	r3, [pc, #72]	; (8002ba8 <HAL_InitTick+0x58>)
 8002b5e:	781b      	ldrb	r3, [r3, #0]
 8002b60:	4619      	mov	r1, r3
 8002b62:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002b66:	fbb3 f3f1 	udiv	r3, r3, r1
 8002b6a:	fbb2 f3f3 	udiv	r3, r2, r3
 8002b6e:	4618      	mov	r0, r3
 8002b70:	f000 f943 	bl	8002dfa <HAL_SYSTICK_Config>
 8002b74:	4603      	mov	r3, r0
 8002b76:	2b00      	cmp	r3, #0
 8002b78:	d001      	beq.n	8002b7e <HAL_InitTick+0x2e>
 8002b7a:	2301      	movs	r3, #1
 8002b7c:	e00e      	b.n	8002b9c <HAL_InitTick+0x4c>
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	2b0f      	cmp	r3, #15
 8002b82:	d80a      	bhi.n	8002b9a <HAL_InitTick+0x4a>
 8002b84:	2200      	movs	r2, #0
 8002b86:	6879      	ldr	r1, [r7, #4]
 8002b88:	f04f 30ff 	mov.w	r0, #4294967295
 8002b8c:	f000 f90b 	bl	8002da6 <HAL_NVIC_SetPriority>
 8002b90:	4a06      	ldr	r2, [pc, #24]	; (8002bac <HAL_InitTick+0x5c>)
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	6013      	str	r3, [r2, #0]
 8002b96:	2300      	movs	r3, #0
 8002b98:	e000      	b.n	8002b9c <HAL_InitTick+0x4c>
 8002b9a:	2301      	movs	r3, #1
 8002b9c:	4618      	mov	r0, r3
 8002b9e:	3708      	adds	r7, #8
 8002ba0:	46bd      	mov	sp, r7
 8002ba2:	bd80      	pop	{r7, pc}
 8002ba4:	20000014 	.word	0x20000014
 8002ba8:	2000001c 	.word	0x2000001c
 8002bac:	20000018 	.word	0x20000018

08002bb0 <HAL_IncTick>:
 8002bb0:	b480      	push	{r7}
 8002bb2:	af00      	add	r7, sp, #0
 8002bb4:	4b06      	ldr	r3, [pc, #24]	; (8002bd0 <HAL_IncTick+0x20>)
 8002bb6:	781b      	ldrb	r3, [r3, #0]
 8002bb8:	461a      	mov	r2, r3
 8002bba:	4b06      	ldr	r3, [pc, #24]	; (8002bd4 <HAL_IncTick+0x24>)
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	4413      	add	r3, r2
 8002bc0:	4a04      	ldr	r2, [pc, #16]	; (8002bd4 <HAL_IncTick+0x24>)
 8002bc2:	6013      	str	r3, [r2, #0]
 8002bc4:	bf00      	nop
 8002bc6:	46bd      	mov	sp, r7
 8002bc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bcc:	4770      	bx	lr
 8002bce:	bf00      	nop
 8002bd0:	2000001c 	.word	0x2000001c
 8002bd4:	200034b0 	.word	0x200034b0

08002bd8 <HAL_GetTick>:
 8002bd8:	b480      	push	{r7}
 8002bda:	af00      	add	r7, sp, #0
 8002bdc:	4b03      	ldr	r3, [pc, #12]	; (8002bec <HAL_GetTick+0x14>)
 8002bde:	681b      	ldr	r3, [r3, #0]
 8002be0:	4618      	mov	r0, r3
 8002be2:	46bd      	mov	sp, r7
 8002be4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002be8:	4770      	bx	lr
 8002bea:	bf00      	nop
 8002bec:	200034b0 	.word	0x200034b0

08002bf0 <__NVIC_SetPriorityGrouping>:
 8002bf0:	b480      	push	{r7}
 8002bf2:	b085      	sub	sp, #20
 8002bf4:	af00      	add	r7, sp, #0
 8002bf6:	6078      	str	r0, [r7, #4]
 8002bf8:	687b      	ldr	r3, [r7, #4]
 8002bfa:	f003 0307 	and.w	r3, r3, #7
 8002bfe:	60fb      	str	r3, [r7, #12]
 8002c00:	4b0c      	ldr	r3, [pc, #48]	; (8002c34 <__NVIC_SetPriorityGrouping+0x44>)
 8002c02:	68db      	ldr	r3, [r3, #12]
 8002c04:	60bb      	str	r3, [r7, #8]
 8002c06:	68ba      	ldr	r2, [r7, #8]
 8002c08:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002c0c:	4013      	ands	r3, r2
 8002c0e:	60bb      	str	r3, [r7, #8]
 8002c10:	68fb      	ldr	r3, [r7, #12]
 8002c12:	021a      	lsls	r2, r3, #8
 8002c14:	68bb      	ldr	r3, [r7, #8]
 8002c16:	4313      	orrs	r3, r2
 8002c18:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002c1c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002c20:	60bb      	str	r3, [r7, #8]
 8002c22:	4a04      	ldr	r2, [pc, #16]	; (8002c34 <__NVIC_SetPriorityGrouping+0x44>)
 8002c24:	68bb      	ldr	r3, [r7, #8]
 8002c26:	60d3      	str	r3, [r2, #12]
 8002c28:	bf00      	nop
 8002c2a:	3714      	adds	r7, #20
 8002c2c:	46bd      	mov	sp, r7
 8002c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c32:	4770      	bx	lr
 8002c34:	e000ed00 	.word	0xe000ed00

08002c38 <__NVIC_GetPriorityGrouping>:
 8002c38:	b480      	push	{r7}
 8002c3a:	af00      	add	r7, sp, #0
 8002c3c:	4b04      	ldr	r3, [pc, #16]	; (8002c50 <__NVIC_GetPriorityGrouping+0x18>)
 8002c3e:	68db      	ldr	r3, [r3, #12]
 8002c40:	0a1b      	lsrs	r3, r3, #8
 8002c42:	f003 0307 	and.w	r3, r3, #7
 8002c46:	4618      	mov	r0, r3
 8002c48:	46bd      	mov	sp, r7
 8002c4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c4e:	4770      	bx	lr
 8002c50:	e000ed00 	.word	0xe000ed00

08002c54 <__NVIC_EnableIRQ>:
 8002c54:	b480      	push	{r7}
 8002c56:	b083      	sub	sp, #12
 8002c58:	af00      	add	r7, sp, #0
 8002c5a:	4603      	mov	r3, r0
 8002c5c:	71fb      	strb	r3, [r7, #7]
 8002c5e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c62:	2b00      	cmp	r3, #0
 8002c64:	db0b      	blt.n	8002c7e <__NVIC_EnableIRQ+0x2a>
 8002c66:	79fb      	ldrb	r3, [r7, #7]
 8002c68:	f003 021f 	and.w	r2, r3, #31
 8002c6c:	4907      	ldr	r1, [pc, #28]	; (8002c8c <__NVIC_EnableIRQ+0x38>)
 8002c6e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c72:	095b      	lsrs	r3, r3, #5
 8002c74:	2001      	movs	r0, #1
 8002c76:	fa00 f202 	lsl.w	r2, r0, r2
 8002c7a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002c7e:	bf00      	nop
 8002c80:	370c      	adds	r7, #12
 8002c82:	46bd      	mov	sp, r7
 8002c84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c88:	4770      	bx	lr
 8002c8a:	bf00      	nop
 8002c8c:	e000e100 	.word	0xe000e100

08002c90 <__NVIC_SetPriority>:
 8002c90:	b480      	push	{r7}
 8002c92:	b083      	sub	sp, #12
 8002c94:	af00      	add	r7, sp, #0
 8002c96:	4603      	mov	r3, r0
 8002c98:	6039      	str	r1, [r7, #0]
 8002c9a:	71fb      	strb	r3, [r7, #7]
 8002c9c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ca0:	2b00      	cmp	r3, #0
 8002ca2:	db0a      	blt.n	8002cba <__NVIC_SetPriority+0x2a>
 8002ca4:	683b      	ldr	r3, [r7, #0]
 8002ca6:	b2da      	uxtb	r2, r3
 8002ca8:	490c      	ldr	r1, [pc, #48]	; (8002cdc <__NVIC_SetPriority+0x4c>)
 8002caa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002cae:	0112      	lsls	r2, r2, #4
 8002cb0:	b2d2      	uxtb	r2, r2
 8002cb2:	440b      	add	r3, r1
 8002cb4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002cb8:	e00a      	b.n	8002cd0 <__NVIC_SetPriority+0x40>
 8002cba:	683b      	ldr	r3, [r7, #0]
 8002cbc:	b2da      	uxtb	r2, r3
 8002cbe:	4908      	ldr	r1, [pc, #32]	; (8002ce0 <__NVIC_SetPriority+0x50>)
 8002cc0:	79fb      	ldrb	r3, [r7, #7]
 8002cc2:	f003 030f 	and.w	r3, r3, #15
 8002cc6:	3b04      	subs	r3, #4
 8002cc8:	0112      	lsls	r2, r2, #4
 8002cca:	b2d2      	uxtb	r2, r2
 8002ccc:	440b      	add	r3, r1
 8002cce:	761a      	strb	r2, [r3, #24]
 8002cd0:	bf00      	nop
 8002cd2:	370c      	adds	r7, #12
 8002cd4:	46bd      	mov	sp, r7
 8002cd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cda:	4770      	bx	lr
 8002cdc:	e000e100 	.word	0xe000e100
 8002ce0:	e000ed00 	.word	0xe000ed00

08002ce4 <NVIC_EncodePriority>:
 8002ce4:	b480      	push	{r7}
 8002ce6:	b089      	sub	sp, #36	; 0x24
 8002ce8:	af00      	add	r7, sp, #0
 8002cea:	60f8      	str	r0, [r7, #12]
 8002cec:	60b9      	str	r1, [r7, #8]
 8002cee:	607a      	str	r2, [r7, #4]
 8002cf0:	68fb      	ldr	r3, [r7, #12]
 8002cf2:	f003 0307 	and.w	r3, r3, #7
 8002cf6:	61fb      	str	r3, [r7, #28]
 8002cf8:	69fb      	ldr	r3, [r7, #28]
 8002cfa:	f1c3 0307 	rsb	r3, r3, #7
 8002cfe:	2b04      	cmp	r3, #4
 8002d00:	bf28      	it	cs
 8002d02:	2304      	movcs	r3, #4
 8002d04:	61bb      	str	r3, [r7, #24]
 8002d06:	69fb      	ldr	r3, [r7, #28]
 8002d08:	3304      	adds	r3, #4
 8002d0a:	2b06      	cmp	r3, #6
 8002d0c:	d902      	bls.n	8002d14 <NVIC_EncodePriority+0x30>
 8002d0e:	69fb      	ldr	r3, [r7, #28]
 8002d10:	3b03      	subs	r3, #3
 8002d12:	e000      	b.n	8002d16 <NVIC_EncodePriority+0x32>
 8002d14:	2300      	movs	r3, #0
 8002d16:	617b      	str	r3, [r7, #20]
 8002d18:	f04f 32ff 	mov.w	r2, #4294967295
 8002d1c:	69bb      	ldr	r3, [r7, #24]
 8002d1e:	fa02 f303 	lsl.w	r3, r2, r3
 8002d22:	43da      	mvns	r2, r3
 8002d24:	68bb      	ldr	r3, [r7, #8]
 8002d26:	401a      	ands	r2, r3
 8002d28:	697b      	ldr	r3, [r7, #20]
 8002d2a:	409a      	lsls	r2, r3
 8002d2c:	f04f 31ff 	mov.w	r1, #4294967295
 8002d30:	697b      	ldr	r3, [r7, #20]
 8002d32:	fa01 f303 	lsl.w	r3, r1, r3
 8002d36:	43d9      	mvns	r1, r3
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	400b      	ands	r3, r1
 8002d3c:	4313      	orrs	r3, r2
 8002d3e:	4618      	mov	r0, r3
 8002d40:	3724      	adds	r7, #36	; 0x24
 8002d42:	46bd      	mov	sp, r7
 8002d44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d48:	4770      	bx	lr
	...

08002d4c <SysTick_Config>:
 8002d4c:	b580      	push	{r7, lr}
 8002d4e:	b082      	sub	sp, #8
 8002d50:	af00      	add	r7, sp, #0
 8002d52:	6078      	str	r0, [r7, #4]
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	3b01      	subs	r3, #1
 8002d58:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8002d5c:	d301      	bcc.n	8002d62 <SysTick_Config+0x16>
 8002d5e:	2301      	movs	r3, #1
 8002d60:	e00f      	b.n	8002d82 <SysTick_Config+0x36>
 8002d62:	4a0a      	ldr	r2, [pc, #40]	; (8002d8c <SysTick_Config+0x40>)
 8002d64:	687b      	ldr	r3, [r7, #4]
 8002d66:	3b01      	subs	r3, #1
 8002d68:	6053      	str	r3, [r2, #4]
 8002d6a:	210f      	movs	r1, #15
 8002d6c:	f04f 30ff 	mov.w	r0, #4294967295
 8002d70:	f7ff ff8e 	bl	8002c90 <__NVIC_SetPriority>
 8002d74:	4b05      	ldr	r3, [pc, #20]	; (8002d8c <SysTick_Config+0x40>)
 8002d76:	2200      	movs	r2, #0
 8002d78:	609a      	str	r2, [r3, #8]
 8002d7a:	4b04      	ldr	r3, [pc, #16]	; (8002d8c <SysTick_Config+0x40>)
 8002d7c:	2207      	movs	r2, #7
 8002d7e:	601a      	str	r2, [r3, #0]
 8002d80:	2300      	movs	r3, #0
 8002d82:	4618      	mov	r0, r3
 8002d84:	3708      	adds	r7, #8
 8002d86:	46bd      	mov	sp, r7
 8002d88:	bd80      	pop	{r7, pc}
 8002d8a:	bf00      	nop
 8002d8c:	e000e010 	.word	0xe000e010

08002d90 <HAL_NVIC_SetPriorityGrouping>:
 8002d90:	b580      	push	{r7, lr}
 8002d92:	b082      	sub	sp, #8
 8002d94:	af00      	add	r7, sp, #0
 8002d96:	6078      	str	r0, [r7, #4]
 8002d98:	6878      	ldr	r0, [r7, #4]
 8002d9a:	f7ff ff29 	bl	8002bf0 <__NVIC_SetPriorityGrouping>
 8002d9e:	bf00      	nop
 8002da0:	3708      	adds	r7, #8
 8002da2:	46bd      	mov	sp, r7
 8002da4:	bd80      	pop	{r7, pc}

08002da6 <HAL_NVIC_SetPriority>:
 8002da6:	b580      	push	{r7, lr}
 8002da8:	b086      	sub	sp, #24
 8002daa:	af00      	add	r7, sp, #0
 8002dac:	4603      	mov	r3, r0
 8002dae:	60b9      	str	r1, [r7, #8]
 8002db0:	607a      	str	r2, [r7, #4]
 8002db2:	73fb      	strb	r3, [r7, #15]
 8002db4:	2300      	movs	r3, #0
 8002db6:	617b      	str	r3, [r7, #20]
 8002db8:	f7ff ff3e 	bl	8002c38 <__NVIC_GetPriorityGrouping>
 8002dbc:	6178      	str	r0, [r7, #20]
 8002dbe:	687a      	ldr	r2, [r7, #4]
 8002dc0:	68b9      	ldr	r1, [r7, #8]
 8002dc2:	6978      	ldr	r0, [r7, #20]
 8002dc4:	f7ff ff8e 	bl	8002ce4 <NVIC_EncodePriority>
 8002dc8:	4602      	mov	r2, r0
 8002dca:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002dce:	4611      	mov	r1, r2
 8002dd0:	4618      	mov	r0, r3
 8002dd2:	f7ff ff5d 	bl	8002c90 <__NVIC_SetPriority>
 8002dd6:	bf00      	nop
 8002dd8:	3718      	adds	r7, #24
 8002dda:	46bd      	mov	sp, r7
 8002ddc:	bd80      	pop	{r7, pc}

08002dde <HAL_NVIC_EnableIRQ>:
 8002dde:	b580      	push	{r7, lr}
 8002de0:	b082      	sub	sp, #8
 8002de2:	af00      	add	r7, sp, #0
 8002de4:	4603      	mov	r3, r0
 8002de6:	71fb      	strb	r3, [r7, #7]
 8002de8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002dec:	4618      	mov	r0, r3
 8002dee:	f7ff ff31 	bl	8002c54 <__NVIC_EnableIRQ>
 8002df2:	bf00      	nop
 8002df4:	3708      	adds	r7, #8
 8002df6:	46bd      	mov	sp, r7
 8002df8:	bd80      	pop	{r7, pc}

08002dfa <HAL_SYSTICK_Config>:
 8002dfa:	b580      	push	{r7, lr}
 8002dfc:	b082      	sub	sp, #8
 8002dfe:	af00      	add	r7, sp, #0
 8002e00:	6078      	str	r0, [r7, #4]
 8002e02:	6878      	ldr	r0, [r7, #4]
 8002e04:	f7ff ffa2 	bl	8002d4c <SysTick_Config>
 8002e08:	4603      	mov	r3, r0
 8002e0a:	4618      	mov	r0, r3
 8002e0c:	3708      	adds	r7, #8
 8002e0e:	46bd      	mov	sp, r7
 8002e10:	bd80      	pop	{r7, pc}

08002e12 <HAL_DAC_Init>:
 8002e12:	b580      	push	{r7, lr}
 8002e14:	b082      	sub	sp, #8
 8002e16:	af00      	add	r7, sp, #0
 8002e18:	6078      	str	r0, [r7, #4]
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	2b00      	cmp	r3, #0
 8002e1e:	d101      	bne.n	8002e24 <HAL_DAC_Init+0x12>
 8002e20:	2301      	movs	r3, #1
 8002e22:	e014      	b.n	8002e4e <HAL_DAC_Init+0x3c>
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	791b      	ldrb	r3, [r3, #4]
 8002e28:	b2db      	uxtb	r3, r3
 8002e2a:	2b00      	cmp	r3, #0
 8002e2c:	d105      	bne.n	8002e3a <HAL_DAC_Init+0x28>
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	2200      	movs	r2, #0
 8002e32:	715a      	strb	r2, [r3, #5]
 8002e34:	6878      	ldr	r0, [r7, #4]
 8002e36:	f7ff fc01 	bl	800263c <HAL_DAC_MspInit>
 8002e3a:	687b      	ldr	r3, [r7, #4]
 8002e3c:	2202      	movs	r2, #2
 8002e3e:	711a      	strb	r2, [r3, #4]
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	2200      	movs	r2, #0
 8002e44:	611a      	str	r2, [r3, #16]
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	2201      	movs	r2, #1
 8002e4a:	711a      	strb	r2, [r3, #4]
 8002e4c:	2300      	movs	r3, #0
 8002e4e:	4618      	mov	r0, r3
 8002e50:	3708      	adds	r7, #8
 8002e52:	46bd      	mov	sp, r7
 8002e54:	bd80      	pop	{r7, pc}

08002e56 <HAL_DAC_Stop_DMA>:
 8002e56:	b580      	push	{r7, lr}
 8002e58:	b084      	sub	sp, #16
 8002e5a:	af00      	add	r7, sp, #0
 8002e5c:	6078      	str	r0, [r7, #4]
 8002e5e:	6039      	str	r1, [r7, #0]
 8002e60:	2300      	movs	r3, #0
 8002e62:	73fb      	strb	r3, [r7, #15]
 8002e64:	687b      	ldr	r3, [r7, #4]
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	6819      	ldr	r1, [r3, #0]
 8002e6a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002e6e:	683b      	ldr	r3, [r7, #0]
 8002e70:	fa02 f303 	lsl.w	r3, r2, r3
 8002e74:	43da      	mvns	r2, r3
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	681b      	ldr	r3, [r3, #0]
 8002e7a:	400a      	ands	r2, r1
 8002e7c:	601a      	str	r2, [r3, #0]
 8002e7e:	687b      	ldr	r3, [r7, #4]
 8002e80:	681b      	ldr	r3, [r3, #0]
 8002e82:	6819      	ldr	r1, [r3, #0]
 8002e84:	2201      	movs	r2, #1
 8002e86:	683b      	ldr	r3, [r7, #0]
 8002e88:	fa02 f303 	lsl.w	r3, r2, r3
 8002e8c:	43da      	mvns	r2, r3
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	681b      	ldr	r3, [r3, #0]
 8002e92:	400a      	ands	r2, r1
 8002e94:	601a      	str	r2, [r3, #0]
 8002e96:	683b      	ldr	r3, [r7, #0]
 8002e98:	2b00      	cmp	r3, #0
 8002e9a:	d107      	bne.n	8002eac <HAL_DAC_Stop_DMA+0x56>
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	689b      	ldr	r3, [r3, #8]
 8002ea0:	4618      	mov	r0, r3
 8002ea2:	f000 f915 	bl	80030d0 <HAL_DMA_Abort>
 8002ea6:	4603      	mov	r3, r0
 8002ea8:	73fb      	strb	r3, [r7, #15]
 8002eaa:	e006      	b.n	8002eba <HAL_DAC_Stop_DMA+0x64>
 8002eac:	687b      	ldr	r3, [r7, #4]
 8002eae:	68db      	ldr	r3, [r3, #12]
 8002eb0:	4618      	mov	r0, r3
 8002eb2:	f000 f90d 	bl	80030d0 <HAL_DMA_Abort>
 8002eb6:	4603      	mov	r3, r0
 8002eb8:	73fb      	strb	r3, [r7, #15]
 8002eba:	7bfb      	ldrb	r3, [r7, #15]
 8002ebc:	2b00      	cmp	r3, #0
 8002ebe:	d003      	beq.n	8002ec8 <HAL_DAC_Stop_DMA+0x72>
 8002ec0:	687b      	ldr	r3, [r7, #4]
 8002ec2:	2204      	movs	r2, #4
 8002ec4:	711a      	strb	r2, [r3, #4]
 8002ec6:	e002      	b.n	8002ece <HAL_DAC_Stop_DMA+0x78>
 8002ec8:	687b      	ldr	r3, [r7, #4]
 8002eca:	2201      	movs	r2, #1
 8002ecc:	711a      	strb	r2, [r3, #4]
 8002ece:	7bfb      	ldrb	r3, [r7, #15]
 8002ed0:	4618      	mov	r0, r3
 8002ed2:	3710      	adds	r7, #16
 8002ed4:	46bd      	mov	sp, r7
 8002ed6:	bd80      	pop	{r7, pc}

08002ed8 <HAL_DAC_ConfigChannel>:
 8002ed8:	b480      	push	{r7}
 8002eda:	b087      	sub	sp, #28
 8002edc:	af00      	add	r7, sp, #0
 8002ede:	60f8      	str	r0, [r7, #12]
 8002ee0:	60b9      	str	r1, [r7, #8]
 8002ee2:	607a      	str	r2, [r7, #4]
 8002ee4:	2300      	movs	r3, #0
 8002ee6:	617b      	str	r3, [r7, #20]
 8002ee8:	2300      	movs	r3, #0
 8002eea:	613b      	str	r3, [r7, #16]
 8002eec:	68fb      	ldr	r3, [r7, #12]
 8002eee:	795b      	ldrb	r3, [r3, #5]
 8002ef0:	2b01      	cmp	r3, #1
 8002ef2:	d101      	bne.n	8002ef8 <HAL_DAC_ConfigChannel+0x20>
 8002ef4:	2302      	movs	r3, #2
 8002ef6:	e036      	b.n	8002f66 <HAL_DAC_ConfigChannel+0x8e>
 8002ef8:	68fb      	ldr	r3, [r7, #12]
 8002efa:	2201      	movs	r2, #1
 8002efc:	715a      	strb	r2, [r3, #5]
 8002efe:	68fb      	ldr	r3, [r7, #12]
 8002f00:	2202      	movs	r2, #2
 8002f02:	711a      	strb	r2, [r3, #4]
 8002f04:	68fb      	ldr	r3, [r7, #12]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	681b      	ldr	r3, [r3, #0]
 8002f0a:	617b      	str	r3, [r7, #20]
 8002f0c:	f640 72fe 	movw	r2, #4094	; 0xffe
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	fa02 f303 	lsl.w	r3, r2, r3
 8002f16:	43db      	mvns	r3, r3
 8002f18:	697a      	ldr	r2, [r7, #20]
 8002f1a:	4013      	ands	r3, r2
 8002f1c:	617b      	str	r3, [r7, #20]
 8002f1e:	68bb      	ldr	r3, [r7, #8]
 8002f20:	681a      	ldr	r2, [r3, #0]
 8002f22:	68bb      	ldr	r3, [r7, #8]
 8002f24:	685b      	ldr	r3, [r3, #4]
 8002f26:	4313      	orrs	r3, r2
 8002f28:	613b      	str	r3, [r7, #16]
 8002f2a:	693a      	ldr	r2, [r7, #16]
 8002f2c:	687b      	ldr	r3, [r7, #4]
 8002f2e:	fa02 f303 	lsl.w	r3, r2, r3
 8002f32:	697a      	ldr	r2, [r7, #20]
 8002f34:	4313      	orrs	r3, r2
 8002f36:	617b      	str	r3, [r7, #20]
 8002f38:	68fb      	ldr	r3, [r7, #12]
 8002f3a:	681b      	ldr	r3, [r3, #0]
 8002f3c:	697a      	ldr	r2, [r7, #20]
 8002f3e:	601a      	str	r2, [r3, #0]
 8002f40:	68fb      	ldr	r3, [r7, #12]
 8002f42:	681b      	ldr	r3, [r3, #0]
 8002f44:	6819      	ldr	r1, [r3, #0]
 8002f46:	22c0      	movs	r2, #192	; 0xc0
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	fa02 f303 	lsl.w	r3, r2, r3
 8002f4e:	43da      	mvns	r2, r3
 8002f50:	68fb      	ldr	r3, [r7, #12]
 8002f52:	681b      	ldr	r3, [r3, #0]
 8002f54:	400a      	ands	r2, r1
 8002f56:	601a      	str	r2, [r3, #0]
 8002f58:	68fb      	ldr	r3, [r7, #12]
 8002f5a:	2201      	movs	r2, #1
 8002f5c:	711a      	strb	r2, [r3, #4]
 8002f5e:	68fb      	ldr	r3, [r7, #12]
 8002f60:	2200      	movs	r2, #0
 8002f62:	715a      	strb	r2, [r3, #5]
 8002f64:	2300      	movs	r3, #0
 8002f66:	4618      	mov	r0, r3
 8002f68:	371c      	adds	r7, #28
 8002f6a:	46bd      	mov	sp, r7
 8002f6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f70:	4770      	bx	lr
	...

08002f74 <HAL_DMA_Init>:
 8002f74:	b580      	push	{r7, lr}
 8002f76:	b086      	sub	sp, #24
 8002f78:	af00      	add	r7, sp, #0
 8002f7a:	6078      	str	r0, [r7, #4]
 8002f7c:	2300      	movs	r3, #0
 8002f7e:	617b      	str	r3, [r7, #20]
 8002f80:	f7ff fe2a 	bl	8002bd8 <HAL_GetTick>
 8002f84:	6138      	str	r0, [r7, #16]
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	2b00      	cmp	r3, #0
 8002f8a:	d101      	bne.n	8002f90 <HAL_DMA_Init+0x1c>
 8002f8c:	2301      	movs	r3, #1
 8002f8e:	e099      	b.n	80030c4 <HAL_DMA_Init+0x150>
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	2200      	movs	r2, #0
 8002f94:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	2202      	movs	r2, #2
 8002f9c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	681b      	ldr	r3, [r3, #0]
 8002fa4:	681a      	ldr	r2, [r3, #0]
 8002fa6:	687b      	ldr	r3, [r7, #4]
 8002fa8:	681b      	ldr	r3, [r3, #0]
 8002faa:	f022 0201 	bic.w	r2, r2, #1
 8002fae:	601a      	str	r2, [r3, #0]
 8002fb0:	e00f      	b.n	8002fd2 <HAL_DMA_Init+0x5e>
 8002fb2:	f7ff fe11 	bl	8002bd8 <HAL_GetTick>
 8002fb6:	4602      	mov	r2, r0
 8002fb8:	693b      	ldr	r3, [r7, #16]
 8002fba:	1ad3      	subs	r3, r2, r3
 8002fbc:	2b05      	cmp	r3, #5
 8002fbe:	d908      	bls.n	8002fd2 <HAL_DMA_Init+0x5e>
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	2220      	movs	r2, #32
 8002fc4:	655a      	str	r2, [r3, #84]	; 0x54
 8002fc6:	687b      	ldr	r3, [r7, #4]
 8002fc8:	2203      	movs	r2, #3
 8002fca:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002fce:	2303      	movs	r3, #3
 8002fd0:	e078      	b.n	80030c4 <HAL_DMA_Init+0x150>
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	681b      	ldr	r3, [r3, #0]
 8002fd6:	681b      	ldr	r3, [r3, #0]
 8002fd8:	f003 0301 	and.w	r3, r3, #1
 8002fdc:	2b00      	cmp	r3, #0
 8002fde:	d1e8      	bne.n	8002fb2 <HAL_DMA_Init+0x3e>
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	681b      	ldr	r3, [r3, #0]
 8002fe4:	681b      	ldr	r3, [r3, #0]
 8002fe6:	617b      	str	r3, [r7, #20]
 8002fe8:	697a      	ldr	r2, [r7, #20]
 8002fea:	4b38      	ldr	r3, [pc, #224]	; (80030cc <HAL_DMA_Init+0x158>)
 8002fec:	4013      	ands	r3, r2
 8002fee:	617b      	str	r3, [r7, #20]
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	685a      	ldr	r2, [r3, #4]
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	689b      	ldr	r3, [r3, #8]
 8002ff8:	431a      	orrs	r2, r3
 8002ffa:	687b      	ldr	r3, [r7, #4]
 8002ffc:	68db      	ldr	r3, [r3, #12]
 8002ffe:	431a      	orrs	r2, r3
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	691b      	ldr	r3, [r3, #16]
 8003004:	431a      	orrs	r2, r3
 8003006:	687b      	ldr	r3, [r7, #4]
 8003008:	695b      	ldr	r3, [r3, #20]
 800300a:	431a      	orrs	r2, r3
 800300c:	687b      	ldr	r3, [r7, #4]
 800300e:	699b      	ldr	r3, [r3, #24]
 8003010:	431a      	orrs	r2, r3
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	69db      	ldr	r3, [r3, #28]
 8003016:	431a      	orrs	r2, r3
 8003018:	687b      	ldr	r3, [r7, #4]
 800301a:	6a1b      	ldr	r3, [r3, #32]
 800301c:	4313      	orrs	r3, r2
 800301e:	697a      	ldr	r2, [r7, #20]
 8003020:	4313      	orrs	r3, r2
 8003022:	617b      	str	r3, [r7, #20]
 8003024:	687b      	ldr	r3, [r7, #4]
 8003026:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003028:	2b04      	cmp	r3, #4
 800302a:	d107      	bne.n	800303c <HAL_DMA_Init+0xc8>
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003034:	4313      	orrs	r3, r2
 8003036:	697a      	ldr	r2, [r7, #20]
 8003038:	4313      	orrs	r3, r2
 800303a:	617b      	str	r3, [r7, #20]
 800303c:	687b      	ldr	r3, [r7, #4]
 800303e:	681b      	ldr	r3, [r3, #0]
 8003040:	697a      	ldr	r2, [r7, #20]
 8003042:	601a      	str	r2, [r3, #0]
 8003044:	687b      	ldr	r3, [r7, #4]
 8003046:	681b      	ldr	r3, [r3, #0]
 8003048:	695b      	ldr	r3, [r3, #20]
 800304a:	617b      	str	r3, [r7, #20]
 800304c:	697b      	ldr	r3, [r7, #20]
 800304e:	f023 0307 	bic.w	r3, r3, #7
 8003052:	617b      	str	r3, [r7, #20]
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003058:	697a      	ldr	r2, [r7, #20]
 800305a:	4313      	orrs	r3, r2
 800305c:	617b      	str	r3, [r7, #20]
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003062:	2b04      	cmp	r3, #4
 8003064:	d117      	bne.n	8003096 <HAL_DMA_Init+0x122>
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800306a:	697a      	ldr	r2, [r7, #20]
 800306c:	4313      	orrs	r3, r2
 800306e:	617b      	str	r3, [r7, #20]
 8003070:	687b      	ldr	r3, [r7, #4]
 8003072:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003074:	2b00      	cmp	r3, #0
 8003076:	d00e      	beq.n	8003096 <HAL_DMA_Init+0x122>
 8003078:	6878      	ldr	r0, [r7, #4]
 800307a:	f000 fa7b 	bl	8003574 <DMA_CheckFifoParam>
 800307e:	4603      	mov	r3, r0
 8003080:	2b00      	cmp	r3, #0
 8003082:	d008      	beq.n	8003096 <HAL_DMA_Init+0x122>
 8003084:	687b      	ldr	r3, [r7, #4]
 8003086:	2240      	movs	r2, #64	; 0x40
 8003088:	655a      	str	r2, [r3, #84]	; 0x54
 800308a:	687b      	ldr	r3, [r7, #4]
 800308c:	2201      	movs	r2, #1
 800308e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003092:	2301      	movs	r3, #1
 8003094:	e016      	b.n	80030c4 <HAL_DMA_Init+0x150>
 8003096:	687b      	ldr	r3, [r7, #4]
 8003098:	681b      	ldr	r3, [r3, #0]
 800309a:	697a      	ldr	r2, [r7, #20]
 800309c:	615a      	str	r2, [r3, #20]
 800309e:	6878      	ldr	r0, [r7, #4]
 80030a0:	f000 fa32 	bl	8003508 <DMA_CalcBaseAndBitshift>
 80030a4:	4603      	mov	r3, r0
 80030a6:	60fb      	str	r3, [r7, #12]
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80030ac:	223f      	movs	r2, #63	; 0x3f
 80030ae:	409a      	lsls	r2, r3
 80030b0:	68fb      	ldr	r3, [r7, #12]
 80030b2:	609a      	str	r2, [r3, #8]
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	2200      	movs	r2, #0
 80030b8:	655a      	str	r2, [r3, #84]	; 0x54
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	2201      	movs	r2, #1
 80030be:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80030c2:	2300      	movs	r3, #0
 80030c4:	4618      	mov	r0, r3
 80030c6:	3718      	adds	r7, #24
 80030c8:	46bd      	mov	sp, r7
 80030ca:	bd80      	pop	{r7, pc}
 80030cc:	f010803f 	.word	0xf010803f

080030d0 <HAL_DMA_Abort>:
 80030d0:	b580      	push	{r7, lr}
 80030d2:	b084      	sub	sp, #16
 80030d4:	af00      	add	r7, sp, #0
 80030d6:	6078      	str	r0, [r7, #4]
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80030dc:	60fb      	str	r3, [r7, #12]
 80030de:	f7ff fd7b 	bl	8002bd8 <HAL_GetTick>
 80030e2:	60b8      	str	r0, [r7, #8]
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80030ea:	b2db      	uxtb	r3, r3
 80030ec:	2b02      	cmp	r3, #2
 80030ee:	d008      	beq.n	8003102 <HAL_DMA_Abort+0x32>
 80030f0:	687b      	ldr	r3, [r7, #4]
 80030f2:	2280      	movs	r2, #128	; 0x80
 80030f4:	655a      	str	r2, [r3, #84]	; 0x54
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	2200      	movs	r2, #0
 80030fa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80030fe:	2301      	movs	r3, #1
 8003100:	e052      	b.n	80031a8 <HAL_DMA_Abort+0xd8>
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	681a      	ldr	r2, [r3, #0]
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	f022 0216 	bic.w	r2, r2, #22
 8003110:	601a      	str	r2, [r3, #0]
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	681b      	ldr	r3, [r3, #0]
 8003116:	695a      	ldr	r2, [r3, #20]
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	681b      	ldr	r3, [r3, #0]
 800311c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003120:	615a      	str	r2, [r3, #20]
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003126:	2b00      	cmp	r3, #0
 8003128:	d103      	bne.n	8003132 <HAL_DMA_Abort+0x62>
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800312e:	2b00      	cmp	r3, #0
 8003130:	d007      	beq.n	8003142 <HAL_DMA_Abort+0x72>
 8003132:	687b      	ldr	r3, [r7, #4]
 8003134:	681b      	ldr	r3, [r3, #0]
 8003136:	681a      	ldr	r2, [r3, #0]
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	f022 0208 	bic.w	r2, r2, #8
 8003140:	601a      	str	r2, [r3, #0]
 8003142:	687b      	ldr	r3, [r7, #4]
 8003144:	681b      	ldr	r3, [r3, #0]
 8003146:	681a      	ldr	r2, [r3, #0]
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	f022 0201 	bic.w	r2, r2, #1
 8003150:	601a      	str	r2, [r3, #0]
 8003152:	e013      	b.n	800317c <HAL_DMA_Abort+0xac>
 8003154:	f7ff fd40 	bl	8002bd8 <HAL_GetTick>
 8003158:	4602      	mov	r2, r0
 800315a:	68bb      	ldr	r3, [r7, #8]
 800315c:	1ad3      	subs	r3, r2, r3
 800315e:	2b05      	cmp	r3, #5
 8003160:	d90c      	bls.n	800317c <HAL_DMA_Abort+0xac>
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	2220      	movs	r2, #32
 8003166:	655a      	str	r2, [r3, #84]	; 0x54
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	2200      	movs	r2, #0
 800316c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	2203      	movs	r2, #3
 8003174:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003178:	2303      	movs	r3, #3
 800317a:	e015      	b.n	80031a8 <HAL_DMA_Abort+0xd8>
 800317c:	687b      	ldr	r3, [r7, #4]
 800317e:	681b      	ldr	r3, [r3, #0]
 8003180:	681b      	ldr	r3, [r3, #0]
 8003182:	f003 0301 	and.w	r3, r3, #1
 8003186:	2b00      	cmp	r3, #0
 8003188:	d1e4      	bne.n	8003154 <HAL_DMA_Abort+0x84>
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800318e:	223f      	movs	r2, #63	; 0x3f
 8003190:	409a      	lsls	r2, r3
 8003192:	68fb      	ldr	r3, [r7, #12]
 8003194:	609a      	str	r2, [r3, #8]
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	2200      	movs	r2, #0
 800319a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	2201      	movs	r2, #1
 80031a2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80031a6:	2300      	movs	r3, #0
 80031a8:	4618      	mov	r0, r3
 80031aa:	3710      	adds	r7, #16
 80031ac:	46bd      	mov	sp, r7
 80031ae:	bd80      	pop	{r7, pc}

080031b0 <HAL_DMA_Abort_IT>:
 80031b0:	b480      	push	{r7}
 80031b2:	b083      	sub	sp, #12
 80031b4:	af00      	add	r7, sp, #0
 80031b6:	6078      	str	r0, [r7, #4]
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80031be:	b2db      	uxtb	r3, r3
 80031c0:	2b02      	cmp	r3, #2
 80031c2:	d004      	beq.n	80031ce <HAL_DMA_Abort_IT+0x1e>
 80031c4:	687b      	ldr	r3, [r7, #4]
 80031c6:	2280      	movs	r2, #128	; 0x80
 80031c8:	655a      	str	r2, [r3, #84]	; 0x54
 80031ca:	2301      	movs	r3, #1
 80031cc:	e00c      	b.n	80031e8 <HAL_DMA_Abort_IT+0x38>
 80031ce:	687b      	ldr	r3, [r7, #4]
 80031d0:	2205      	movs	r2, #5
 80031d2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	681a      	ldr	r2, [r3, #0]
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	681b      	ldr	r3, [r3, #0]
 80031e0:	f022 0201 	bic.w	r2, r2, #1
 80031e4:	601a      	str	r2, [r3, #0]
 80031e6:	2300      	movs	r3, #0
 80031e8:	4618      	mov	r0, r3
 80031ea:	370c      	adds	r7, #12
 80031ec:	46bd      	mov	sp, r7
 80031ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031f2:	4770      	bx	lr

080031f4 <HAL_DMA_IRQHandler>:
 80031f4:	b580      	push	{r7, lr}
 80031f6:	b086      	sub	sp, #24
 80031f8:	af00      	add	r7, sp, #0
 80031fa:	6078      	str	r0, [r7, #4]
 80031fc:	2300      	movs	r3, #0
 80031fe:	60bb      	str	r3, [r7, #8]
 8003200:	4b92      	ldr	r3, [pc, #584]	; (800344c <HAL_DMA_IRQHandler+0x258>)
 8003202:	681b      	ldr	r3, [r3, #0]
 8003204:	4a92      	ldr	r2, [pc, #584]	; (8003450 <HAL_DMA_IRQHandler+0x25c>)
 8003206:	fba2 2303 	umull	r2, r3, r2, r3
 800320a:	0a9b      	lsrs	r3, r3, #10
 800320c:	617b      	str	r3, [r7, #20]
 800320e:	687b      	ldr	r3, [r7, #4]
 8003210:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003212:	613b      	str	r3, [r7, #16]
 8003214:	693b      	ldr	r3, [r7, #16]
 8003216:	681b      	ldr	r3, [r3, #0]
 8003218:	60fb      	str	r3, [r7, #12]
 800321a:	687b      	ldr	r3, [r7, #4]
 800321c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800321e:	2208      	movs	r2, #8
 8003220:	409a      	lsls	r2, r3
 8003222:	68fb      	ldr	r3, [r7, #12]
 8003224:	4013      	ands	r3, r2
 8003226:	2b00      	cmp	r3, #0
 8003228:	d01a      	beq.n	8003260 <HAL_DMA_IRQHandler+0x6c>
 800322a:	687b      	ldr	r3, [r7, #4]
 800322c:	681b      	ldr	r3, [r3, #0]
 800322e:	681b      	ldr	r3, [r3, #0]
 8003230:	f003 0304 	and.w	r3, r3, #4
 8003234:	2b00      	cmp	r3, #0
 8003236:	d013      	beq.n	8003260 <HAL_DMA_IRQHandler+0x6c>
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	681a      	ldr	r2, [r3, #0]
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	681b      	ldr	r3, [r3, #0]
 8003242:	f022 0204 	bic.w	r2, r2, #4
 8003246:	601a      	str	r2, [r3, #0]
 8003248:	687b      	ldr	r3, [r7, #4]
 800324a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800324c:	2208      	movs	r2, #8
 800324e:	409a      	lsls	r2, r3
 8003250:	693b      	ldr	r3, [r7, #16]
 8003252:	609a      	str	r2, [r3, #8]
 8003254:	687b      	ldr	r3, [r7, #4]
 8003256:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003258:	f043 0201 	orr.w	r2, r3, #1
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	655a      	str	r2, [r3, #84]	; 0x54
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003264:	2201      	movs	r2, #1
 8003266:	409a      	lsls	r2, r3
 8003268:	68fb      	ldr	r3, [r7, #12]
 800326a:	4013      	ands	r3, r2
 800326c:	2b00      	cmp	r3, #0
 800326e:	d012      	beq.n	8003296 <HAL_DMA_IRQHandler+0xa2>
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	681b      	ldr	r3, [r3, #0]
 8003274:	695b      	ldr	r3, [r3, #20]
 8003276:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800327a:	2b00      	cmp	r3, #0
 800327c:	d00b      	beq.n	8003296 <HAL_DMA_IRQHandler+0xa2>
 800327e:	687b      	ldr	r3, [r7, #4]
 8003280:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003282:	2201      	movs	r2, #1
 8003284:	409a      	lsls	r2, r3
 8003286:	693b      	ldr	r3, [r7, #16]
 8003288:	609a      	str	r2, [r3, #8]
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800328e:	f043 0202 	orr.w	r2, r3, #2
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	655a      	str	r2, [r3, #84]	; 0x54
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800329a:	2204      	movs	r2, #4
 800329c:	409a      	lsls	r2, r3
 800329e:	68fb      	ldr	r3, [r7, #12]
 80032a0:	4013      	ands	r3, r2
 80032a2:	2b00      	cmp	r3, #0
 80032a4:	d012      	beq.n	80032cc <HAL_DMA_IRQHandler+0xd8>
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	681b      	ldr	r3, [r3, #0]
 80032aa:	681b      	ldr	r3, [r3, #0]
 80032ac:	f003 0302 	and.w	r3, r3, #2
 80032b0:	2b00      	cmp	r3, #0
 80032b2:	d00b      	beq.n	80032cc <HAL_DMA_IRQHandler+0xd8>
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80032b8:	2204      	movs	r2, #4
 80032ba:	409a      	lsls	r2, r3
 80032bc:	693b      	ldr	r3, [r7, #16]
 80032be:	609a      	str	r2, [r3, #8]
 80032c0:	687b      	ldr	r3, [r7, #4]
 80032c2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80032c4:	f043 0204 	orr.w	r2, r3, #4
 80032c8:	687b      	ldr	r3, [r7, #4]
 80032ca:	655a      	str	r2, [r3, #84]	; 0x54
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80032d0:	2210      	movs	r2, #16
 80032d2:	409a      	lsls	r2, r3
 80032d4:	68fb      	ldr	r3, [r7, #12]
 80032d6:	4013      	ands	r3, r2
 80032d8:	2b00      	cmp	r3, #0
 80032da:	d043      	beq.n	8003364 <HAL_DMA_IRQHandler+0x170>
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	681b      	ldr	r3, [r3, #0]
 80032e0:	681b      	ldr	r3, [r3, #0]
 80032e2:	f003 0308 	and.w	r3, r3, #8
 80032e6:	2b00      	cmp	r3, #0
 80032e8:	d03c      	beq.n	8003364 <HAL_DMA_IRQHandler+0x170>
 80032ea:	687b      	ldr	r3, [r7, #4]
 80032ec:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80032ee:	2210      	movs	r2, #16
 80032f0:	409a      	lsls	r2, r3
 80032f2:	693b      	ldr	r3, [r7, #16]
 80032f4:	609a      	str	r2, [r3, #8]
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	681b      	ldr	r3, [r3, #0]
 80032fa:	681b      	ldr	r3, [r3, #0]
 80032fc:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003300:	2b00      	cmp	r3, #0
 8003302:	d018      	beq.n	8003336 <HAL_DMA_IRQHandler+0x142>
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	681b      	ldr	r3, [r3, #0]
 8003308:	681b      	ldr	r3, [r3, #0]
 800330a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800330e:	2b00      	cmp	r3, #0
 8003310:	d108      	bne.n	8003324 <HAL_DMA_IRQHandler+0x130>
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003316:	2b00      	cmp	r3, #0
 8003318:	d024      	beq.n	8003364 <HAL_DMA_IRQHandler+0x170>
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800331e:	6878      	ldr	r0, [r7, #4]
 8003320:	4798      	blx	r3
 8003322:	e01f      	b.n	8003364 <HAL_DMA_IRQHandler+0x170>
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003328:	2b00      	cmp	r3, #0
 800332a:	d01b      	beq.n	8003364 <HAL_DMA_IRQHandler+0x170>
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003330:	6878      	ldr	r0, [r7, #4]
 8003332:	4798      	blx	r3
 8003334:	e016      	b.n	8003364 <HAL_DMA_IRQHandler+0x170>
 8003336:	687b      	ldr	r3, [r7, #4]
 8003338:	681b      	ldr	r3, [r3, #0]
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003340:	2b00      	cmp	r3, #0
 8003342:	d107      	bne.n	8003354 <HAL_DMA_IRQHandler+0x160>
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	681b      	ldr	r3, [r3, #0]
 8003348:	681a      	ldr	r2, [r3, #0]
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	681b      	ldr	r3, [r3, #0]
 800334e:	f022 0208 	bic.w	r2, r2, #8
 8003352:	601a      	str	r2, [r3, #0]
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003358:	2b00      	cmp	r3, #0
 800335a:	d003      	beq.n	8003364 <HAL_DMA_IRQHandler+0x170>
 800335c:	687b      	ldr	r3, [r7, #4]
 800335e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003360:	6878      	ldr	r0, [r7, #4]
 8003362:	4798      	blx	r3
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003368:	2220      	movs	r2, #32
 800336a:	409a      	lsls	r2, r3
 800336c:	68fb      	ldr	r3, [r7, #12]
 800336e:	4013      	ands	r3, r2
 8003370:	2b00      	cmp	r3, #0
 8003372:	f000 808e 	beq.w	8003492 <HAL_DMA_IRQHandler+0x29e>
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	681b      	ldr	r3, [r3, #0]
 800337a:	681b      	ldr	r3, [r3, #0]
 800337c:	f003 0310 	and.w	r3, r3, #16
 8003380:	2b00      	cmp	r3, #0
 8003382:	f000 8086 	beq.w	8003492 <HAL_DMA_IRQHandler+0x29e>
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800338a:	2220      	movs	r2, #32
 800338c:	409a      	lsls	r2, r3
 800338e:	693b      	ldr	r3, [r7, #16]
 8003390:	609a      	str	r2, [r3, #8]
 8003392:	687b      	ldr	r3, [r7, #4]
 8003394:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003398:	b2db      	uxtb	r3, r3
 800339a:	2b05      	cmp	r3, #5
 800339c:	d136      	bne.n	800340c <HAL_DMA_IRQHandler+0x218>
 800339e:	687b      	ldr	r3, [r7, #4]
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	681a      	ldr	r2, [r3, #0]
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	681b      	ldr	r3, [r3, #0]
 80033a8:	f022 0216 	bic.w	r2, r2, #22
 80033ac:	601a      	str	r2, [r3, #0]
 80033ae:	687b      	ldr	r3, [r7, #4]
 80033b0:	681b      	ldr	r3, [r3, #0]
 80033b2:	695a      	ldr	r2, [r3, #20]
 80033b4:	687b      	ldr	r3, [r7, #4]
 80033b6:	681b      	ldr	r3, [r3, #0]
 80033b8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80033bc:	615a      	str	r2, [r3, #20]
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80033c2:	2b00      	cmp	r3, #0
 80033c4:	d103      	bne.n	80033ce <HAL_DMA_IRQHandler+0x1da>
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80033ca:	2b00      	cmp	r3, #0
 80033cc:	d007      	beq.n	80033de <HAL_DMA_IRQHandler+0x1ea>
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	681b      	ldr	r3, [r3, #0]
 80033d2:	681a      	ldr	r2, [r3, #0]
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	681b      	ldr	r3, [r3, #0]
 80033d8:	f022 0208 	bic.w	r2, r2, #8
 80033dc:	601a      	str	r2, [r3, #0]
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80033e2:	223f      	movs	r2, #63	; 0x3f
 80033e4:	409a      	lsls	r2, r3
 80033e6:	693b      	ldr	r3, [r7, #16]
 80033e8:	609a      	str	r2, [r3, #8]
 80033ea:	687b      	ldr	r3, [r7, #4]
 80033ec:	2200      	movs	r2, #0
 80033ee:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80033f2:	687b      	ldr	r3, [r7, #4]
 80033f4:	2201      	movs	r2, #1
 80033f6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80033fa:	687b      	ldr	r3, [r7, #4]
 80033fc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80033fe:	2b00      	cmp	r3, #0
 8003400:	d07d      	beq.n	80034fe <HAL_DMA_IRQHandler+0x30a>
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003406:	6878      	ldr	r0, [r7, #4]
 8003408:	4798      	blx	r3
 800340a:	e078      	b.n	80034fe <HAL_DMA_IRQHandler+0x30a>
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	681b      	ldr	r3, [r3, #0]
 8003410:	681b      	ldr	r3, [r3, #0]
 8003412:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003416:	2b00      	cmp	r3, #0
 8003418:	d01c      	beq.n	8003454 <HAL_DMA_IRQHandler+0x260>
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	681b      	ldr	r3, [r3, #0]
 800341e:	681b      	ldr	r3, [r3, #0]
 8003420:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003424:	2b00      	cmp	r3, #0
 8003426:	d108      	bne.n	800343a <HAL_DMA_IRQHandler+0x246>
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800342c:	2b00      	cmp	r3, #0
 800342e:	d030      	beq.n	8003492 <HAL_DMA_IRQHandler+0x29e>
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003434:	6878      	ldr	r0, [r7, #4]
 8003436:	4798      	blx	r3
 8003438:	e02b      	b.n	8003492 <HAL_DMA_IRQHandler+0x29e>
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800343e:	2b00      	cmp	r3, #0
 8003440:	d027      	beq.n	8003492 <HAL_DMA_IRQHandler+0x29e>
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003446:	6878      	ldr	r0, [r7, #4]
 8003448:	4798      	blx	r3
 800344a:	e022      	b.n	8003492 <HAL_DMA_IRQHandler+0x29e>
 800344c:	20000014 	.word	0x20000014
 8003450:	1b4e81b5 	.word	0x1b4e81b5
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	681b      	ldr	r3, [r3, #0]
 8003458:	681b      	ldr	r3, [r3, #0]
 800345a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800345e:	2b00      	cmp	r3, #0
 8003460:	d10f      	bne.n	8003482 <HAL_DMA_IRQHandler+0x28e>
 8003462:	687b      	ldr	r3, [r7, #4]
 8003464:	681b      	ldr	r3, [r3, #0]
 8003466:	681a      	ldr	r2, [r3, #0]
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	681b      	ldr	r3, [r3, #0]
 800346c:	f022 0210 	bic.w	r2, r2, #16
 8003470:	601a      	str	r2, [r3, #0]
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	2200      	movs	r2, #0
 8003476:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800347a:	687b      	ldr	r3, [r7, #4]
 800347c:	2201      	movs	r2, #1
 800347e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003486:	2b00      	cmp	r3, #0
 8003488:	d003      	beq.n	8003492 <HAL_DMA_IRQHandler+0x29e>
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800348e:	6878      	ldr	r0, [r7, #4]
 8003490:	4798      	blx	r3
 8003492:	687b      	ldr	r3, [r7, #4]
 8003494:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003496:	2b00      	cmp	r3, #0
 8003498:	d032      	beq.n	8003500 <HAL_DMA_IRQHandler+0x30c>
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800349e:	f003 0301 	and.w	r3, r3, #1
 80034a2:	2b00      	cmp	r3, #0
 80034a4:	d022      	beq.n	80034ec <HAL_DMA_IRQHandler+0x2f8>
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	2205      	movs	r2, #5
 80034aa:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	681b      	ldr	r3, [r3, #0]
 80034b2:	681a      	ldr	r2, [r3, #0]
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	681b      	ldr	r3, [r3, #0]
 80034b8:	f022 0201 	bic.w	r2, r2, #1
 80034bc:	601a      	str	r2, [r3, #0]
 80034be:	68bb      	ldr	r3, [r7, #8]
 80034c0:	3301      	adds	r3, #1
 80034c2:	60bb      	str	r3, [r7, #8]
 80034c4:	697a      	ldr	r2, [r7, #20]
 80034c6:	429a      	cmp	r2, r3
 80034c8:	d307      	bcc.n	80034da <HAL_DMA_IRQHandler+0x2e6>
 80034ca:	687b      	ldr	r3, [r7, #4]
 80034cc:	681b      	ldr	r3, [r3, #0]
 80034ce:	681b      	ldr	r3, [r3, #0]
 80034d0:	f003 0301 	and.w	r3, r3, #1
 80034d4:	2b00      	cmp	r3, #0
 80034d6:	d1f2      	bne.n	80034be <HAL_DMA_IRQHandler+0x2ca>
 80034d8:	e000      	b.n	80034dc <HAL_DMA_IRQHandler+0x2e8>
 80034da:	bf00      	nop
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	2200      	movs	r2, #0
 80034e0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	2201      	movs	r2, #1
 80034e8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80034ec:	687b      	ldr	r3, [r7, #4]
 80034ee:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80034f0:	2b00      	cmp	r3, #0
 80034f2:	d005      	beq.n	8003500 <HAL_DMA_IRQHandler+0x30c>
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80034f8:	6878      	ldr	r0, [r7, #4]
 80034fa:	4798      	blx	r3
 80034fc:	e000      	b.n	8003500 <HAL_DMA_IRQHandler+0x30c>
 80034fe:	bf00      	nop
 8003500:	3718      	adds	r7, #24
 8003502:	46bd      	mov	sp, r7
 8003504:	bd80      	pop	{r7, pc}
 8003506:	bf00      	nop

08003508 <DMA_CalcBaseAndBitshift>:
 8003508:	b480      	push	{r7}
 800350a:	b085      	sub	sp, #20
 800350c:	af00      	add	r7, sp, #0
 800350e:	6078      	str	r0, [r7, #4]
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	681b      	ldr	r3, [r3, #0]
 8003514:	b2db      	uxtb	r3, r3
 8003516:	3b10      	subs	r3, #16
 8003518:	4a14      	ldr	r2, [pc, #80]	; (800356c <DMA_CalcBaseAndBitshift+0x64>)
 800351a:	fba2 2303 	umull	r2, r3, r2, r3
 800351e:	091b      	lsrs	r3, r3, #4
 8003520:	60fb      	str	r3, [r7, #12]
 8003522:	4a13      	ldr	r2, [pc, #76]	; (8003570 <DMA_CalcBaseAndBitshift+0x68>)
 8003524:	68fb      	ldr	r3, [r7, #12]
 8003526:	4413      	add	r3, r2
 8003528:	781b      	ldrb	r3, [r3, #0]
 800352a:	461a      	mov	r2, r3
 800352c:	687b      	ldr	r3, [r7, #4]
 800352e:	65da      	str	r2, [r3, #92]	; 0x5c
 8003530:	68fb      	ldr	r3, [r7, #12]
 8003532:	2b03      	cmp	r3, #3
 8003534:	d909      	bls.n	800354a <DMA_CalcBaseAndBitshift+0x42>
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	681b      	ldr	r3, [r3, #0]
 800353a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 800353e:	f023 0303 	bic.w	r3, r3, #3
 8003542:	1d1a      	adds	r2, r3, #4
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	659a      	str	r2, [r3, #88]	; 0x58
 8003548:	e007      	b.n	800355a <DMA_CalcBaseAndBitshift+0x52>
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	681b      	ldr	r3, [r3, #0]
 800354e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8003552:	f023 0303 	bic.w	r3, r3, #3
 8003556:	687a      	ldr	r2, [r7, #4]
 8003558:	6593      	str	r3, [r2, #88]	; 0x58
 800355a:	687b      	ldr	r3, [r7, #4]
 800355c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800355e:	4618      	mov	r0, r3
 8003560:	3714      	adds	r7, #20
 8003562:	46bd      	mov	sp, r7
 8003564:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003568:	4770      	bx	lr
 800356a:	bf00      	nop
 800356c:	aaaaaaab 	.word	0xaaaaaaab
 8003570:	080085ac 	.word	0x080085ac

08003574 <DMA_CheckFifoParam>:
 8003574:	b480      	push	{r7}
 8003576:	b085      	sub	sp, #20
 8003578:	af00      	add	r7, sp, #0
 800357a:	6078      	str	r0, [r7, #4]
 800357c:	2300      	movs	r3, #0
 800357e:	73fb      	strb	r3, [r7, #15]
 8003580:	687b      	ldr	r3, [r7, #4]
 8003582:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003584:	60bb      	str	r3, [r7, #8]
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	699b      	ldr	r3, [r3, #24]
 800358a:	2b00      	cmp	r3, #0
 800358c:	d11f      	bne.n	80035ce <DMA_CheckFifoParam+0x5a>
 800358e:	68bb      	ldr	r3, [r7, #8]
 8003590:	2b03      	cmp	r3, #3
 8003592:	d855      	bhi.n	8003640 <DMA_CheckFifoParam+0xcc>
 8003594:	a201      	add	r2, pc, #4	; (adr r2, 800359c <DMA_CheckFifoParam+0x28>)
 8003596:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800359a:	bf00      	nop
 800359c:	080035ad 	.word	0x080035ad
 80035a0:	080035bf 	.word	0x080035bf
 80035a4:	080035ad 	.word	0x080035ad
 80035a8:	08003641 	.word	0x08003641
 80035ac:	687b      	ldr	r3, [r7, #4]
 80035ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80035b0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80035b4:	2b00      	cmp	r3, #0
 80035b6:	d045      	beq.n	8003644 <DMA_CheckFifoParam+0xd0>
 80035b8:	2301      	movs	r3, #1
 80035ba:	73fb      	strb	r3, [r7, #15]
 80035bc:	e042      	b.n	8003644 <DMA_CheckFifoParam+0xd0>
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80035c2:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80035c6:	d13f      	bne.n	8003648 <DMA_CheckFifoParam+0xd4>
 80035c8:	2301      	movs	r3, #1
 80035ca:	73fb      	strb	r3, [r7, #15]
 80035cc:	e03c      	b.n	8003648 <DMA_CheckFifoParam+0xd4>
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	699b      	ldr	r3, [r3, #24]
 80035d2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80035d6:	d121      	bne.n	800361c <DMA_CheckFifoParam+0xa8>
 80035d8:	68bb      	ldr	r3, [r7, #8]
 80035da:	2b03      	cmp	r3, #3
 80035dc:	d836      	bhi.n	800364c <DMA_CheckFifoParam+0xd8>
 80035de:	a201      	add	r2, pc, #4	; (adr r2, 80035e4 <DMA_CheckFifoParam+0x70>)
 80035e0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80035e4:	080035f5 	.word	0x080035f5
 80035e8:	080035fb 	.word	0x080035fb
 80035ec:	080035f5 	.word	0x080035f5
 80035f0:	0800360d 	.word	0x0800360d
 80035f4:	2301      	movs	r3, #1
 80035f6:	73fb      	strb	r3, [r7, #15]
 80035f8:	e02f      	b.n	800365a <DMA_CheckFifoParam+0xe6>
 80035fa:	687b      	ldr	r3, [r7, #4]
 80035fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80035fe:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003602:	2b00      	cmp	r3, #0
 8003604:	d024      	beq.n	8003650 <DMA_CheckFifoParam+0xdc>
 8003606:	2301      	movs	r3, #1
 8003608:	73fb      	strb	r3, [r7, #15]
 800360a:	e021      	b.n	8003650 <DMA_CheckFifoParam+0xdc>
 800360c:	687b      	ldr	r3, [r7, #4]
 800360e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003610:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8003614:	d11e      	bne.n	8003654 <DMA_CheckFifoParam+0xe0>
 8003616:	2301      	movs	r3, #1
 8003618:	73fb      	strb	r3, [r7, #15]
 800361a:	e01b      	b.n	8003654 <DMA_CheckFifoParam+0xe0>
 800361c:	68bb      	ldr	r3, [r7, #8]
 800361e:	2b02      	cmp	r3, #2
 8003620:	d902      	bls.n	8003628 <DMA_CheckFifoParam+0xb4>
 8003622:	2b03      	cmp	r3, #3
 8003624:	d003      	beq.n	800362e <DMA_CheckFifoParam+0xba>
 8003626:	e018      	b.n	800365a <DMA_CheckFifoParam+0xe6>
 8003628:	2301      	movs	r3, #1
 800362a:	73fb      	strb	r3, [r7, #15]
 800362c:	e015      	b.n	800365a <DMA_CheckFifoParam+0xe6>
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003632:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003636:	2b00      	cmp	r3, #0
 8003638:	d00e      	beq.n	8003658 <DMA_CheckFifoParam+0xe4>
 800363a:	2301      	movs	r3, #1
 800363c:	73fb      	strb	r3, [r7, #15]
 800363e:	e00b      	b.n	8003658 <DMA_CheckFifoParam+0xe4>
 8003640:	bf00      	nop
 8003642:	e00a      	b.n	800365a <DMA_CheckFifoParam+0xe6>
 8003644:	bf00      	nop
 8003646:	e008      	b.n	800365a <DMA_CheckFifoParam+0xe6>
 8003648:	bf00      	nop
 800364a:	e006      	b.n	800365a <DMA_CheckFifoParam+0xe6>
 800364c:	bf00      	nop
 800364e:	e004      	b.n	800365a <DMA_CheckFifoParam+0xe6>
 8003650:	bf00      	nop
 8003652:	e002      	b.n	800365a <DMA_CheckFifoParam+0xe6>
 8003654:	bf00      	nop
 8003656:	e000      	b.n	800365a <DMA_CheckFifoParam+0xe6>
 8003658:	bf00      	nop
 800365a:	7bfb      	ldrb	r3, [r7, #15]
 800365c:	4618      	mov	r0, r3
 800365e:	3714      	adds	r7, #20
 8003660:	46bd      	mov	sp, r7
 8003662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003666:	4770      	bx	lr

08003668 <HAL_GPIO_Init>:
 8003668:	b480      	push	{r7}
 800366a:	b089      	sub	sp, #36	; 0x24
 800366c:	af00      	add	r7, sp, #0
 800366e:	6078      	str	r0, [r7, #4]
 8003670:	6039      	str	r1, [r7, #0]
 8003672:	2300      	movs	r3, #0
 8003674:	617b      	str	r3, [r7, #20]
 8003676:	2300      	movs	r3, #0
 8003678:	613b      	str	r3, [r7, #16]
 800367a:	2300      	movs	r3, #0
 800367c:	61bb      	str	r3, [r7, #24]
 800367e:	2300      	movs	r3, #0
 8003680:	61fb      	str	r3, [r7, #28]
 8003682:	e165      	b.n	8003950 <HAL_GPIO_Init+0x2e8>
 8003684:	2201      	movs	r2, #1
 8003686:	69fb      	ldr	r3, [r7, #28]
 8003688:	fa02 f303 	lsl.w	r3, r2, r3
 800368c:	617b      	str	r3, [r7, #20]
 800368e:	683b      	ldr	r3, [r7, #0]
 8003690:	681b      	ldr	r3, [r3, #0]
 8003692:	697a      	ldr	r2, [r7, #20]
 8003694:	4013      	ands	r3, r2
 8003696:	613b      	str	r3, [r7, #16]
 8003698:	693a      	ldr	r2, [r7, #16]
 800369a:	697b      	ldr	r3, [r7, #20]
 800369c:	429a      	cmp	r2, r3
 800369e:	f040 8154 	bne.w	800394a <HAL_GPIO_Init+0x2e2>
 80036a2:	683b      	ldr	r3, [r7, #0]
 80036a4:	685b      	ldr	r3, [r3, #4]
 80036a6:	2b01      	cmp	r3, #1
 80036a8:	d00b      	beq.n	80036c2 <HAL_GPIO_Init+0x5a>
 80036aa:	683b      	ldr	r3, [r7, #0]
 80036ac:	685b      	ldr	r3, [r3, #4]
 80036ae:	2b02      	cmp	r3, #2
 80036b0:	d007      	beq.n	80036c2 <HAL_GPIO_Init+0x5a>
 80036b2:	683b      	ldr	r3, [r7, #0]
 80036b4:	685b      	ldr	r3, [r3, #4]
 80036b6:	2b11      	cmp	r3, #17
 80036b8:	d003      	beq.n	80036c2 <HAL_GPIO_Init+0x5a>
 80036ba:	683b      	ldr	r3, [r7, #0]
 80036bc:	685b      	ldr	r3, [r3, #4]
 80036be:	2b12      	cmp	r3, #18
 80036c0:	d130      	bne.n	8003724 <HAL_GPIO_Init+0xbc>
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	689b      	ldr	r3, [r3, #8]
 80036c6:	61bb      	str	r3, [r7, #24]
 80036c8:	69fb      	ldr	r3, [r7, #28]
 80036ca:	005b      	lsls	r3, r3, #1
 80036cc:	2203      	movs	r2, #3
 80036ce:	fa02 f303 	lsl.w	r3, r2, r3
 80036d2:	43db      	mvns	r3, r3
 80036d4:	69ba      	ldr	r2, [r7, #24]
 80036d6:	4013      	ands	r3, r2
 80036d8:	61bb      	str	r3, [r7, #24]
 80036da:	683b      	ldr	r3, [r7, #0]
 80036dc:	68da      	ldr	r2, [r3, #12]
 80036de:	69fb      	ldr	r3, [r7, #28]
 80036e0:	005b      	lsls	r3, r3, #1
 80036e2:	fa02 f303 	lsl.w	r3, r2, r3
 80036e6:	69ba      	ldr	r2, [r7, #24]
 80036e8:	4313      	orrs	r3, r2
 80036ea:	61bb      	str	r3, [r7, #24]
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	69ba      	ldr	r2, [r7, #24]
 80036f0:	609a      	str	r2, [r3, #8]
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	685b      	ldr	r3, [r3, #4]
 80036f6:	61bb      	str	r3, [r7, #24]
 80036f8:	2201      	movs	r2, #1
 80036fa:	69fb      	ldr	r3, [r7, #28]
 80036fc:	fa02 f303 	lsl.w	r3, r2, r3
 8003700:	43db      	mvns	r3, r3
 8003702:	69ba      	ldr	r2, [r7, #24]
 8003704:	4013      	ands	r3, r2
 8003706:	61bb      	str	r3, [r7, #24]
 8003708:	683b      	ldr	r3, [r7, #0]
 800370a:	685b      	ldr	r3, [r3, #4]
 800370c:	091b      	lsrs	r3, r3, #4
 800370e:	f003 0201 	and.w	r2, r3, #1
 8003712:	69fb      	ldr	r3, [r7, #28]
 8003714:	fa02 f303 	lsl.w	r3, r2, r3
 8003718:	69ba      	ldr	r2, [r7, #24]
 800371a:	4313      	orrs	r3, r2
 800371c:	61bb      	str	r3, [r7, #24]
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	69ba      	ldr	r2, [r7, #24]
 8003722:	605a      	str	r2, [r3, #4]
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	68db      	ldr	r3, [r3, #12]
 8003728:	61bb      	str	r3, [r7, #24]
 800372a:	69fb      	ldr	r3, [r7, #28]
 800372c:	005b      	lsls	r3, r3, #1
 800372e:	2203      	movs	r2, #3
 8003730:	fa02 f303 	lsl.w	r3, r2, r3
 8003734:	43db      	mvns	r3, r3
 8003736:	69ba      	ldr	r2, [r7, #24]
 8003738:	4013      	ands	r3, r2
 800373a:	61bb      	str	r3, [r7, #24]
 800373c:	683b      	ldr	r3, [r7, #0]
 800373e:	689a      	ldr	r2, [r3, #8]
 8003740:	69fb      	ldr	r3, [r7, #28]
 8003742:	005b      	lsls	r3, r3, #1
 8003744:	fa02 f303 	lsl.w	r3, r2, r3
 8003748:	69ba      	ldr	r2, [r7, #24]
 800374a:	4313      	orrs	r3, r2
 800374c:	61bb      	str	r3, [r7, #24]
 800374e:	687b      	ldr	r3, [r7, #4]
 8003750:	69ba      	ldr	r2, [r7, #24]
 8003752:	60da      	str	r2, [r3, #12]
 8003754:	683b      	ldr	r3, [r7, #0]
 8003756:	685b      	ldr	r3, [r3, #4]
 8003758:	2b02      	cmp	r3, #2
 800375a:	d003      	beq.n	8003764 <HAL_GPIO_Init+0xfc>
 800375c:	683b      	ldr	r3, [r7, #0]
 800375e:	685b      	ldr	r3, [r3, #4]
 8003760:	2b12      	cmp	r3, #18
 8003762:	d123      	bne.n	80037ac <HAL_GPIO_Init+0x144>
 8003764:	69fb      	ldr	r3, [r7, #28]
 8003766:	08da      	lsrs	r2, r3, #3
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	3208      	adds	r2, #8
 800376c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003770:	61bb      	str	r3, [r7, #24]
 8003772:	69fb      	ldr	r3, [r7, #28]
 8003774:	f003 0307 	and.w	r3, r3, #7
 8003778:	009b      	lsls	r3, r3, #2
 800377a:	220f      	movs	r2, #15
 800377c:	fa02 f303 	lsl.w	r3, r2, r3
 8003780:	43db      	mvns	r3, r3
 8003782:	69ba      	ldr	r2, [r7, #24]
 8003784:	4013      	ands	r3, r2
 8003786:	61bb      	str	r3, [r7, #24]
 8003788:	683b      	ldr	r3, [r7, #0]
 800378a:	691a      	ldr	r2, [r3, #16]
 800378c:	69fb      	ldr	r3, [r7, #28]
 800378e:	f003 0307 	and.w	r3, r3, #7
 8003792:	009b      	lsls	r3, r3, #2
 8003794:	fa02 f303 	lsl.w	r3, r2, r3
 8003798:	69ba      	ldr	r2, [r7, #24]
 800379a:	4313      	orrs	r3, r2
 800379c:	61bb      	str	r3, [r7, #24]
 800379e:	69fb      	ldr	r3, [r7, #28]
 80037a0:	08da      	lsrs	r2, r3, #3
 80037a2:	687b      	ldr	r3, [r7, #4]
 80037a4:	3208      	adds	r2, #8
 80037a6:	69b9      	ldr	r1, [r7, #24]
 80037a8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80037ac:	687b      	ldr	r3, [r7, #4]
 80037ae:	681b      	ldr	r3, [r3, #0]
 80037b0:	61bb      	str	r3, [r7, #24]
 80037b2:	69fb      	ldr	r3, [r7, #28]
 80037b4:	005b      	lsls	r3, r3, #1
 80037b6:	2203      	movs	r2, #3
 80037b8:	fa02 f303 	lsl.w	r3, r2, r3
 80037bc:	43db      	mvns	r3, r3
 80037be:	69ba      	ldr	r2, [r7, #24]
 80037c0:	4013      	ands	r3, r2
 80037c2:	61bb      	str	r3, [r7, #24]
 80037c4:	683b      	ldr	r3, [r7, #0]
 80037c6:	685b      	ldr	r3, [r3, #4]
 80037c8:	f003 0203 	and.w	r2, r3, #3
 80037cc:	69fb      	ldr	r3, [r7, #28]
 80037ce:	005b      	lsls	r3, r3, #1
 80037d0:	fa02 f303 	lsl.w	r3, r2, r3
 80037d4:	69ba      	ldr	r2, [r7, #24]
 80037d6:	4313      	orrs	r3, r2
 80037d8:	61bb      	str	r3, [r7, #24]
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	69ba      	ldr	r2, [r7, #24]
 80037de:	601a      	str	r2, [r3, #0]
 80037e0:	683b      	ldr	r3, [r7, #0]
 80037e2:	685b      	ldr	r3, [r3, #4]
 80037e4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80037e8:	2b00      	cmp	r3, #0
 80037ea:	f000 80ae 	beq.w	800394a <HAL_GPIO_Init+0x2e2>
 80037ee:	2300      	movs	r3, #0
 80037f0:	60fb      	str	r3, [r7, #12]
 80037f2:	4b5c      	ldr	r3, [pc, #368]	; (8003964 <HAL_GPIO_Init+0x2fc>)
 80037f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80037f6:	4a5b      	ldr	r2, [pc, #364]	; (8003964 <HAL_GPIO_Init+0x2fc>)
 80037f8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80037fc:	6453      	str	r3, [r2, #68]	; 0x44
 80037fe:	4b59      	ldr	r3, [pc, #356]	; (8003964 <HAL_GPIO_Init+0x2fc>)
 8003800:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003802:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003806:	60fb      	str	r3, [r7, #12]
 8003808:	68fb      	ldr	r3, [r7, #12]
 800380a:	4a57      	ldr	r2, [pc, #348]	; (8003968 <HAL_GPIO_Init+0x300>)
 800380c:	69fb      	ldr	r3, [r7, #28]
 800380e:	089b      	lsrs	r3, r3, #2
 8003810:	3302      	adds	r3, #2
 8003812:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003816:	61bb      	str	r3, [r7, #24]
 8003818:	69fb      	ldr	r3, [r7, #28]
 800381a:	f003 0303 	and.w	r3, r3, #3
 800381e:	009b      	lsls	r3, r3, #2
 8003820:	220f      	movs	r2, #15
 8003822:	fa02 f303 	lsl.w	r3, r2, r3
 8003826:	43db      	mvns	r3, r3
 8003828:	69ba      	ldr	r2, [r7, #24]
 800382a:	4013      	ands	r3, r2
 800382c:	61bb      	str	r3, [r7, #24]
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	4a4e      	ldr	r2, [pc, #312]	; (800396c <HAL_GPIO_Init+0x304>)
 8003832:	4293      	cmp	r3, r2
 8003834:	d025      	beq.n	8003882 <HAL_GPIO_Init+0x21a>
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	4a4d      	ldr	r2, [pc, #308]	; (8003970 <HAL_GPIO_Init+0x308>)
 800383a:	4293      	cmp	r3, r2
 800383c:	d01f      	beq.n	800387e <HAL_GPIO_Init+0x216>
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	4a4c      	ldr	r2, [pc, #304]	; (8003974 <HAL_GPIO_Init+0x30c>)
 8003842:	4293      	cmp	r3, r2
 8003844:	d019      	beq.n	800387a <HAL_GPIO_Init+0x212>
 8003846:	687b      	ldr	r3, [r7, #4]
 8003848:	4a4b      	ldr	r2, [pc, #300]	; (8003978 <HAL_GPIO_Init+0x310>)
 800384a:	4293      	cmp	r3, r2
 800384c:	d013      	beq.n	8003876 <HAL_GPIO_Init+0x20e>
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	4a4a      	ldr	r2, [pc, #296]	; (800397c <HAL_GPIO_Init+0x314>)
 8003852:	4293      	cmp	r3, r2
 8003854:	d00d      	beq.n	8003872 <HAL_GPIO_Init+0x20a>
 8003856:	687b      	ldr	r3, [r7, #4]
 8003858:	4a49      	ldr	r2, [pc, #292]	; (8003980 <HAL_GPIO_Init+0x318>)
 800385a:	4293      	cmp	r3, r2
 800385c:	d007      	beq.n	800386e <HAL_GPIO_Init+0x206>
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	4a48      	ldr	r2, [pc, #288]	; (8003984 <HAL_GPIO_Init+0x31c>)
 8003862:	4293      	cmp	r3, r2
 8003864:	d101      	bne.n	800386a <HAL_GPIO_Init+0x202>
 8003866:	2306      	movs	r3, #6
 8003868:	e00c      	b.n	8003884 <HAL_GPIO_Init+0x21c>
 800386a:	2307      	movs	r3, #7
 800386c:	e00a      	b.n	8003884 <HAL_GPIO_Init+0x21c>
 800386e:	2305      	movs	r3, #5
 8003870:	e008      	b.n	8003884 <HAL_GPIO_Init+0x21c>
 8003872:	2304      	movs	r3, #4
 8003874:	e006      	b.n	8003884 <HAL_GPIO_Init+0x21c>
 8003876:	2303      	movs	r3, #3
 8003878:	e004      	b.n	8003884 <HAL_GPIO_Init+0x21c>
 800387a:	2302      	movs	r3, #2
 800387c:	e002      	b.n	8003884 <HAL_GPIO_Init+0x21c>
 800387e:	2301      	movs	r3, #1
 8003880:	e000      	b.n	8003884 <HAL_GPIO_Init+0x21c>
 8003882:	2300      	movs	r3, #0
 8003884:	69fa      	ldr	r2, [r7, #28]
 8003886:	f002 0203 	and.w	r2, r2, #3
 800388a:	0092      	lsls	r2, r2, #2
 800388c:	4093      	lsls	r3, r2
 800388e:	69ba      	ldr	r2, [r7, #24]
 8003890:	4313      	orrs	r3, r2
 8003892:	61bb      	str	r3, [r7, #24]
 8003894:	4934      	ldr	r1, [pc, #208]	; (8003968 <HAL_GPIO_Init+0x300>)
 8003896:	69fb      	ldr	r3, [r7, #28]
 8003898:	089b      	lsrs	r3, r3, #2
 800389a:	3302      	adds	r3, #2
 800389c:	69ba      	ldr	r2, [r7, #24]
 800389e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80038a2:	4b39      	ldr	r3, [pc, #228]	; (8003988 <HAL_GPIO_Init+0x320>)
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	61bb      	str	r3, [r7, #24]
 80038a8:	693b      	ldr	r3, [r7, #16]
 80038aa:	43db      	mvns	r3, r3
 80038ac:	69ba      	ldr	r2, [r7, #24]
 80038ae:	4013      	ands	r3, r2
 80038b0:	61bb      	str	r3, [r7, #24]
 80038b2:	683b      	ldr	r3, [r7, #0]
 80038b4:	685b      	ldr	r3, [r3, #4]
 80038b6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80038ba:	2b00      	cmp	r3, #0
 80038bc:	d003      	beq.n	80038c6 <HAL_GPIO_Init+0x25e>
 80038be:	69ba      	ldr	r2, [r7, #24]
 80038c0:	693b      	ldr	r3, [r7, #16]
 80038c2:	4313      	orrs	r3, r2
 80038c4:	61bb      	str	r3, [r7, #24]
 80038c6:	4a30      	ldr	r2, [pc, #192]	; (8003988 <HAL_GPIO_Init+0x320>)
 80038c8:	69bb      	ldr	r3, [r7, #24]
 80038ca:	6013      	str	r3, [r2, #0]
 80038cc:	4b2e      	ldr	r3, [pc, #184]	; (8003988 <HAL_GPIO_Init+0x320>)
 80038ce:	685b      	ldr	r3, [r3, #4]
 80038d0:	61bb      	str	r3, [r7, #24]
 80038d2:	693b      	ldr	r3, [r7, #16]
 80038d4:	43db      	mvns	r3, r3
 80038d6:	69ba      	ldr	r2, [r7, #24]
 80038d8:	4013      	ands	r3, r2
 80038da:	61bb      	str	r3, [r7, #24]
 80038dc:	683b      	ldr	r3, [r7, #0]
 80038de:	685b      	ldr	r3, [r3, #4]
 80038e0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80038e4:	2b00      	cmp	r3, #0
 80038e6:	d003      	beq.n	80038f0 <HAL_GPIO_Init+0x288>
 80038e8:	69ba      	ldr	r2, [r7, #24]
 80038ea:	693b      	ldr	r3, [r7, #16]
 80038ec:	4313      	orrs	r3, r2
 80038ee:	61bb      	str	r3, [r7, #24]
 80038f0:	4a25      	ldr	r2, [pc, #148]	; (8003988 <HAL_GPIO_Init+0x320>)
 80038f2:	69bb      	ldr	r3, [r7, #24]
 80038f4:	6053      	str	r3, [r2, #4]
 80038f6:	4b24      	ldr	r3, [pc, #144]	; (8003988 <HAL_GPIO_Init+0x320>)
 80038f8:	689b      	ldr	r3, [r3, #8]
 80038fa:	61bb      	str	r3, [r7, #24]
 80038fc:	693b      	ldr	r3, [r7, #16]
 80038fe:	43db      	mvns	r3, r3
 8003900:	69ba      	ldr	r2, [r7, #24]
 8003902:	4013      	ands	r3, r2
 8003904:	61bb      	str	r3, [r7, #24]
 8003906:	683b      	ldr	r3, [r7, #0]
 8003908:	685b      	ldr	r3, [r3, #4]
 800390a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800390e:	2b00      	cmp	r3, #0
 8003910:	d003      	beq.n	800391a <HAL_GPIO_Init+0x2b2>
 8003912:	69ba      	ldr	r2, [r7, #24]
 8003914:	693b      	ldr	r3, [r7, #16]
 8003916:	4313      	orrs	r3, r2
 8003918:	61bb      	str	r3, [r7, #24]
 800391a:	4a1b      	ldr	r2, [pc, #108]	; (8003988 <HAL_GPIO_Init+0x320>)
 800391c:	69bb      	ldr	r3, [r7, #24]
 800391e:	6093      	str	r3, [r2, #8]
 8003920:	4b19      	ldr	r3, [pc, #100]	; (8003988 <HAL_GPIO_Init+0x320>)
 8003922:	68db      	ldr	r3, [r3, #12]
 8003924:	61bb      	str	r3, [r7, #24]
 8003926:	693b      	ldr	r3, [r7, #16]
 8003928:	43db      	mvns	r3, r3
 800392a:	69ba      	ldr	r2, [r7, #24]
 800392c:	4013      	ands	r3, r2
 800392e:	61bb      	str	r3, [r7, #24]
 8003930:	683b      	ldr	r3, [r7, #0]
 8003932:	685b      	ldr	r3, [r3, #4]
 8003934:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003938:	2b00      	cmp	r3, #0
 800393a:	d003      	beq.n	8003944 <HAL_GPIO_Init+0x2dc>
 800393c:	69ba      	ldr	r2, [r7, #24]
 800393e:	693b      	ldr	r3, [r7, #16]
 8003940:	4313      	orrs	r3, r2
 8003942:	61bb      	str	r3, [r7, #24]
 8003944:	4a10      	ldr	r2, [pc, #64]	; (8003988 <HAL_GPIO_Init+0x320>)
 8003946:	69bb      	ldr	r3, [r7, #24]
 8003948:	60d3      	str	r3, [r2, #12]
 800394a:	69fb      	ldr	r3, [r7, #28]
 800394c:	3301      	adds	r3, #1
 800394e:	61fb      	str	r3, [r7, #28]
 8003950:	69fb      	ldr	r3, [r7, #28]
 8003952:	2b0f      	cmp	r3, #15
 8003954:	f67f ae96 	bls.w	8003684 <HAL_GPIO_Init+0x1c>
 8003958:	bf00      	nop
 800395a:	3724      	adds	r7, #36	; 0x24
 800395c:	46bd      	mov	sp, r7
 800395e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003962:	4770      	bx	lr
 8003964:	40023800 	.word	0x40023800
 8003968:	40013800 	.word	0x40013800
 800396c:	40020000 	.word	0x40020000
 8003970:	40020400 	.word	0x40020400
 8003974:	40020800 	.word	0x40020800
 8003978:	40020c00 	.word	0x40020c00
 800397c:	40021000 	.word	0x40021000
 8003980:	40021400 	.word	0x40021400
 8003984:	40021800 	.word	0x40021800
 8003988:	40013c00 	.word	0x40013c00

0800398c <HAL_GPIO_WritePin>:
 800398c:	b480      	push	{r7}
 800398e:	b083      	sub	sp, #12
 8003990:	af00      	add	r7, sp, #0
 8003992:	6078      	str	r0, [r7, #4]
 8003994:	460b      	mov	r3, r1
 8003996:	807b      	strh	r3, [r7, #2]
 8003998:	4613      	mov	r3, r2
 800399a:	707b      	strb	r3, [r7, #1]
 800399c:	787b      	ldrb	r3, [r7, #1]
 800399e:	2b00      	cmp	r3, #0
 80039a0:	d003      	beq.n	80039aa <HAL_GPIO_WritePin+0x1e>
 80039a2:	887a      	ldrh	r2, [r7, #2]
 80039a4:	687b      	ldr	r3, [r7, #4]
 80039a6:	619a      	str	r2, [r3, #24]
 80039a8:	e003      	b.n	80039b2 <HAL_GPIO_WritePin+0x26>
 80039aa:	887b      	ldrh	r3, [r7, #2]
 80039ac:	041a      	lsls	r2, r3, #16
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	619a      	str	r2, [r3, #24]
 80039b2:	bf00      	nop
 80039b4:	370c      	adds	r7, #12
 80039b6:	46bd      	mov	sp, r7
 80039b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039bc:	4770      	bx	lr

080039be <HAL_GPIO_TogglePin>:
 80039be:	b480      	push	{r7}
 80039c0:	b083      	sub	sp, #12
 80039c2:	af00      	add	r7, sp, #0
 80039c4:	6078      	str	r0, [r7, #4]
 80039c6:	460b      	mov	r3, r1
 80039c8:	807b      	strh	r3, [r7, #2]
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	695a      	ldr	r2, [r3, #20]
 80039ce:	887b      	ldrh	r3, [r7, #2]
 80039d0:	401a      	ands	r2, r3
 80039d2:	887b      	ldrh	r3, [r7, #2]
 80039d4:	429a      	cmp	r2, r3
 80039d6:	d104      	bne.n	80039e2 <HAL_GPIO_TogglePin+0x24>
 80039d8:	887b      	ldrh	r3, [r7, #2]
 80039da:	041a      	lsls	r2, r3, #16
 80039dc:	687b      	ldr	r3, [r7, #4]
 80039de:	619a      	str	r2, [r3, #24]
 80039e0:	e002      	b.n	80039e8 <HAL_GPIO_TogglePin+0x2a>
 80039e2:	887a      	ldrh	r2, [r7, #2]
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	619a      	str	r2, [r3, #24]
 80039e8:	bf00      	nop
 80039ea:	370c      	adds	r7, #12
 80039ec:	46bd      	mov	sp, r7
 80039ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039f2:	4770      	bx	lr

080039f4 <HAL_GPIO_EXTI_IRQHandler>:
 80039f4:	b580      	push	{r7, lr}
 80039f6:	b082      	sub	sp, #8
 80039f8:	af00      	add	r7, sp, #0
 80039fa:	4603      	mov	r3, r0
 80039fc:	80fb      	strh	r3, [r7, #6]
 80039fe:	4b08      	ldr	r3, [pc, #32]	; (8003a20 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003a00:	695a      	ldr	r2, [r3, #20]
 8003a02:	88fb      	ldrh	r3, [r7, #6]
 8003a04:	4013      	ands	r3, r2
 8003a06:	2b00      	cmp	r3, #0
 8003a08:	d006      	beq.n	8003a18 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8003a0a:	4a05      	ldr	r2, [pc, #20]	; (8003a20 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003a0c:	88fb      	ldrh	r3, [r7, #6]
 8003a0e:	6153      	str	r3, [r2, #20]
 8003a10:	88fb      	ldrh	r3, [r7, #6]
 8003a12:	4618      	mov	r0, r3
 8003a14:	f000 f806 	bl	8003a24 <HAL_GPIO_EXTI_Callback>
 8003a18:	bf00      	nop
 8003a1a:	3708      	adds	r7, #8
 8003a1c:	46bd      	mov	sp, r7
 8003a1e:	bd80      	pop	{r7, pc}
 8003a20:	40013c00 	.word	0x40013c00

08003a24 <HAL_GPIO_EXTI_Callback>:
 8003a24:	b480      	push	{r7}
 8003a26:	b083      	sub	sp, #12
 8003a28:	af00      	add	r7, sp, #0
 8003a2a:	4603      	mov	r3, r0
 8003a2c:	80fb      	strh	r3, [r7, #6]
 8003a2e:	bf00      	nop
 8003a30:	370c      	adds	r7, #12
 8003a32:	46bd      	mov	sp, r7
 8003a34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a38:	4770      	bx	lr
	...

08003a3c <HAL_RCC_ClockConfig>:
 8003a3c:	b580      	push	{r7, lr}
 8003a3e:	b084      	sub	sp, #16
 8003a40:	af00      	add	r7, sp, #0
 8003a42:	6078      	str	r0, [r7, #4]
 8003a44:	6039      	str	r1, [r7, #0]
 8003a46:	687b      	ldr	r3, [r7, #4]
 8003a48:	2b00      	cmp	r3, #0
 8003a4a:	d101      	bne.n	8003a50 <HAL_RCC_ClockConfig+0x14>
 8003a4c:	2301      	movs	r3, #1
 8003a4e:	e0cc      	b.n	8003bea <HAL_RCC_ClockConfig+0x1ae>
 8003a50:	4b68      	ldr	r3, [pc, #416]	; (8003bf4 <HAL_RCC_ClockConfig+0x1b8>)
 8003a52:	681b      	ldr	r3, [r3, #0]
 8003a54:	f003 030f 	and.w	r3, r3, #15
 8003a58:	683a      	ldr	r2, [r7, #0]
 8003a5a:	429a      	cmp	r2, r3
 8003a5c:	d90c      	bls.n	8003a78 <HAL_RCC_ClockConfig+0x3c>
 8003a5e:	4b65      	ldr	r3, [pc, #404]	; (8003bf4 <HAL_RCC_ClockConfig+0x1b8>)
 8003a60:	683a      	ldr	r2, [r7, #0]
 8003a62:	b2d2      	uxtb	r2, r2
 8003a64:	701a      	strb	r2, [r3, #0]
 8003a66:	4b63      	ldr	r3, [pc, #396]	; (8003bf4 <HAL_RCC_ClockConfig+0x1b8>)
 8003a68:	681b      	ldr	r3, [r3, #0]
 8003a6a:	f003 030f 	and.w	r3, r3, #15
 8003a6e:	683a      	ldr	r2, [r7, #0]
 8003a70:	429a      	cmp	r2, r3
 8003a72:	d001      	beq.n	8003a78 <HAL_RCC_ClockConfig+0x3c>
 8003a74:	2301      	movs	r3, #1
 8003a76:	e0b8      	b.n	8003bea <HAL_RCC_ClockConfig+0x1ae>
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	681b      	ldr	r3, [r3, #0]
 8003a7c:	f003 0302 	and.w	r3, r3, #2
 8003a80:	2b00      	cmp	r3, #0
 8003a82:	d020      	beq.n	8003ac6 <HAL_RCC_ClockConfig+0x8a>
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	681b      	ldr	r3, [r3, #0]
 8003a88:	f003 0304 	and.w	r3, r3, #4
 8003a8c:	2b00      	cmp	r3, #0
 8003a8e:	d005      	beq.n	8003a9c <HAL_RCC_ClockConfig+0x60>
 8003a90:	4b59      	ldr	r3, [pc, #356]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003a92:	689b      	ldr	r3, [r3, #8]
 8003a94:	4a58      	ldr	r2, [pc, #352]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003a96:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8003a9a:	6093      	str	r3, [r2, #8]
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	f003 0308 	and.w	r3, r3, #8
 8003aa4:	2b00      	cmp	r3, #0
 8003aa6:	d005      	beq.n	8003ab4 <HAL_RCC_ClockConfig+0x78>
 8003aa8:	4b53      	ldr	r3, [pc, #332]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003aaa:	689b      	ldr	r3, [r3, #8]
 8003aac:	4a52      	ldr	r2, [pc, #328]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003aae:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8003ab2:	6093      	str	r3, [r2, #8]
 8003ab4:	4b50      	ldr	r3, [pc, #320]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003ab6:	689b      	ldr	r3, [r3, #8]
 8003ab8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003abc:	687b      	ldr	r3, [r7, #4]
 8003abe:	689b      	ldr	r3, [r3, #8]
 8003ac0:	494d      	ldr	r1, [pc, #308]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003ac2:	4313      	orrs	r3, r2
 8003ac4:	608b      	str	r3, [r1, #8]
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	681b      	ldr	r3, [r3, #0]
 8003aca:	f003 0301 	and.w	r3, r3, #1
 8003ace:	2b00      	cmp	r3, #0
 8003ad0:	d044      	beq.n	8003b5c <HAL_RCC_ClockConfig+0x120>
 8003ad2:	687b      	ldr	r3, [r7, #4]
 8003ad4:	685b      	ldr	r3, [r3, #4]
 8003ad6:	2b01      	cmp	r3, #1
 8003ad8:	d107      	bne.n	8003aea <HAL_RCC_ClockConfig+0xae>
 8003ada:	4b47      	ldr	r3, [pc, #284]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003adc:	681b      	ldr	r3, [r3, #0]
 8003ade:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003ae2:	2b00      	cmp	r3, #0
 8003ae4:	d119      	bne.n	8003b1a <HAL_RCC_ClockConfig+0xde>
 8003ae6:	2301      	movs	r3, #1
 8003ae8:	e07f      	b.n	8003bea <HAL_RCC_ClockConfig+0x1ae>
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	685b      	ldr	r3, [r3, #4]
 8003aee:	2b02      	cmp	r3, #2
 8003af0:	d003      	beq.n	8003afa <HAL_RCC_ClockConfig+0xbe>
 8003af2:	687b      	ldr	r3, [r7, #4]
 8003af4:	685b      	ldr	r3, [r3, #4]
 8003af6:	2b03      	cmp	r3, #3
 8003af8:	d107      	bne.n	8003b0a <HAL_RCC_ClockConfig+0xce>
 8003afa:	4b3f      	ldr	r3, [pc, #252]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003b02:	2b00      	cmp	r3, #0
 8003b04:	d109      	bne.n	8003b1a <HAL_RCC_ClockConfig+0xde>
 8003b06:	2301      	movs	r3, #1
 8003b08:	e06f      	b.n	8003bea <HAL_RCC_ClockConfig+0x1ae>
 8003b0a:	4b3b      	ldr	r3, [pc, #236]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003b0c:	681b      	ldr	r3, [r3, #0]
 8003b0e:	f003 0302 	and.w	r3, r3, #2
 8003b12:	2b00      	cmp	r3, #0
 8003b14:	d101      	bne.n	8003b1a <HAL_RCC_ClockConfig+0xde>
 8003b16:	2301      	movs	r3, #1
 8003b18:	e067      	b.n	8003bea <HAL_RCC_ClockConfig+0x1ae>
 8003b1a:	4b37      	ldr	r3, [pc, #220]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003b1c:	689b      	ldr	r3, [r3, #8]
 8003b1e:	f023 0203 	bic.w	r2, r3, #3
 8003b22:	687b      	ldr	r3, [r7, #4]
 8003b24:	685b      	ldr	r3, [r3, #4]
 8003b26:	4934      	ldr	r1, [pc, #208]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003b28:	4313      	orrs	r3, r2
 8003b2a:	608b      	str	r3, [r1, #8]
 8003b2c:	f7ff f854 	bl	8002bd8 <HAL_GetTick>
 8003b30:	60f8      	str	r0, [r7, #12]
 8003b32:	e00a      	b.n	8003b4a <HAL_RCC_ClockConfig+0x10e>
 8003b34:	f7ff f850 	bl	8002bd8 <HAL_GetTick>
 8003b38:	4602      	mov	r2, r0
 8003b3a:	68fb      	ldr	r3, [r7, #12]
 8003b3c:	1ad3      	subs	r3, r2, r3
 8003b3e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003b42:	4293      	cmp	r3, r2
 8003b44:	d901      	bls.n	8003b4a <HAL_RCC_ClockConfig+0x10e>
 8003b46:	2303      	movs	r3, #3
 8003b48:	e04f      	b.n	8003bea <HAL_RCC_ClockConfig+0x1ae>
 8003b4a:	4b2b      	ldr	r3, [pc, #172]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003b4c:	689b      	ldr	r3, [r3, #8]
 8003b4e:	f003 020c 	and.w	r2, r3, #12
 8003b52:	687b      	ldr	r3, [r7, #4]
 8003b54:	685b      	ldr	r3, [r3, #4]
 8003b56:	009b      	lsls	r3, r3, #2
 8003b58:	429a      	cmp	r2, r3
 8003b5a:	d1eb      	bne.n	8003b34 <HAL_RCC_ClockConfig+0xf8>
 8003b5c:	4b25      	ldr	r3, [pc, #148]	; (8003bf4 <HAL_RCC_ClockConfig+0x1b8>)
 8003b5e:	681b      	ldr	r3, [r3, #0]
 8003b60:	f003 030f 	and.w	r3, r3, #15
 8003b64:	683a      	ldr	r2, [r7, #0]
 8003b66:	429a      	cmp	r2, r3
 8003b68:	d20c      	bcs.n	8003b84 <HAL_RCC_ClockConfig+0x148>
 8003b6a:	4b22      	ldr	r3, [pc, #136]	; (8003bf4 <HAL_RCC_ClockConfig+0x1b8>)
 8003b6c:	683a      	ldr	r2, [r7, #0]
 8003b6e:	b2d2      	uxtb	r2, r2
 8003b70:	701a      	strb	r2, [r3, #0]
 8003b72:	4b20      	ldr	r3, [pc, #128]	; (8003bf4 <HAL_RCC_ClockConfig+0x1b8>)
 8003b74:	681b      	ldr	r3, [r3, #0]
 8003b76:	f003 030f 	and.w	r3, r3, #15
 8003b7a:	683a      	ldr	r2, [r7, #0]
 8003b7c:	429a      	cmp	r2, r3
 8003b7e:	d001      	beq.n	8003b84 <HAL_RCC_ClockConfig+0x148>
 8003b80:	2301      	movs	r3, #1
 8003b82:	e032      	b.n	8003bea <HAL_RCC_ClockConfig+0x1ae>
 8003b84:	687b      	ldr	r3, [r7, #4]
 8003b86:	681b      	ldr	r3, [r3, #0]
 8003b88:	f003 0304 	and.w	r3, r3, #4
 8003b8c:	2b00      	cmp	r3, #0
 8003b8e:	d008      	beq.n	8003ba2 <HAL_RCC_ClockConfig+0x166>
 8003b90:	4b19      	ldr	r3, [pc, #100]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003b92:	689b      	ldr	r3, [r3, #8]
 8003b94:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	68db      	ldr	r3, [r3, #12]
 8003b9c:	4916      	ldr	r1, [pc, #88]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003b9e:	4313      	orrs	r3, r2
 8003ba0:	608b      	str	r3, [r1, #8]
 8003ba2:	687b      	ldr	r3, [r7, #4]
 8003ba4:	681b      	ldr	r3, [r3, #0]
 8003ba6:	f003 0308 	and.w	r3, r3, #8
 8003baa:	2b00      	cmp	r3, #0
 8003bac:	d009      	beq.n	8003bc2 <HAL_RCC_ClockConfig+0x186>
 8003bae:	4b12      	ldr	r3, [pc, #72]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003bb0:	689b      	ldr	r3, [r3, #8]
 8003bb2:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	691b      	ldr	r3, [r3, #16]
 8003bba:	00db      	lsls	r3, r3, #3
 8003bbc:	490e      	ldr	r1, [pc, #56]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003bbe:	4313      	orrs	r3, r2
 8003bc0:	608b      	str	r3, [r1, #8]
 8003bc2:	f000 f855 	bl	8003c70 <HAL_RCC_GetSysClockFreq>
 8003bc6:	4601      	mov	r1, r0
 8003bc8:	4b0b      	ldr	r3, [pc, #44]	; (8003bf8 <HAL_RCC_ClockConfig+0x1bc>)
 8003bca:	689b      	ldr	r3, [r3, #8]
 8003bcc:	091b      	lsrs	r3, r3, #4
 8003bce:	f003 030f 	and.w	r3, r3, #15
 8003bd2:	4a0a      	ldr	r2, [pc, #40]	; (8003bfc <HAL_RCC_ClockConfig+0x1c0>)
 8003bd4:	5cd3      	ldrb	r3, [r2, r3]
 8003bd6:	fa21 f303 	lsr.w	r3, r1, r3
 8003bda:	4a09      	ldr	r2, [pc, #36]	; (8003c00 <HAL_RCC_ClockConfig+0x1c4>)
 8003bdc:	6013      	str	r3, [r2, #0]
 8003bde:	4b09      	ldr	r3, [pc, #36]	; (8003c04 <HAL_RCC_ClockConfig+0x1c8>)
 8003be0:	681b      	ldr	r3, [r3, #0]
 8003be2:	4618      	mov	r0, r3
 8003be4:	f7fe ffb4 	bl	8002b50 <HAL_InitTick>
 8003be8:	2300      	movs	r3, #0
 8003bea:	4618      	mov	r0, r3
 8003bec:	3710      	adds	r7, #16
 8003bee:	46bd      	mov	sp, r7
 8003bf0:	bd80      	pop	{r7, pc}
 8003bf2:	bf00      	nop
 8003bf4:	40023c00 	.word	0x40023c00
 8003bf8:	40023800 	.word	0x40023800
 8003bfc:	08008594 	.word	0x08008594
 8003c00:	20000014 	.word	0x20000014
 8003c04:	20000018 	.word	0x20000018

08003c08 <HAL_RCC_GetHCLKFreq>:
 8003c08:	b480      	push	{r7}
 8003c0a:	af00      	add	r7, sp, #0
 8003c0c:	4b03      	ldr	r3, [pc, #12]	; (8003c1c <HAL_RCC_GetHCLKFreq+0x14>)
 8003c0e:	681b      	ldr	r3, [r3, #0]
 8003c10:	4618      	mov	r0, r3
 8003c12:	46bd      	mov	sp, r7
 8003c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c18:	4770      	bx	lr
 8003c1a:	bf00      	nop
 8003c1c:	20000014 	.word	0x20000014

08003c20 <HAL_RCC_GetPCLK1Freq>:
 8003c20:	b580      	push	{r7, lr}
 8003c22:	af00      	add	r7, sp, #0
 8003c24:	f7ff fff0 	bl	8003c08 <HAL_RCC_GetHCLKFreq>
 8003c28:	4601      	mov	r1, r0
 8003c2a:	4b05      	ldr	r3, [pc, #20]	; (8003c40 <HAL_RCC_GetPCLK1Freq+0x20>)
 8003c2c:	689b      	ldr	r3, [r3, #8]
 8003c2e:	0a9b      	lsrs	r3, r3, #10
 8003c30:	f003 0307 	and.w	r3, r3, #7
 8003c34:	4a03      	ldr	r2, [pc, #12]	; (8003c44 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003c36:	5cd3      	ldrb	r3, [r2, r3]
 8003c38:	fa21 f303 	lsr.w	r3, r1, r3
 8003c3c:	4618      	mov	r0, r3
 8003c3e:	bd80      	pop	{r7, pc}
 8003c40:	40023800 	.word	0x40023800
 8003c44:	080085a4 	.word	0x080085a4

08003c48 <HAL_RCC_GetPCLK2Freq>:
 8003c48:	b580      	push	{r7, lr}
 8003c4a:	af00      	add	r7, sp, #0
 8003c4c:	f7ff ffdc 	bl	8003c08 <HAL_RCC_GetHCLKFreq>
 8003c50:	4601      	mov	r1, r0
 8003c52:	4b05      	ldr	r3, [pc, #20]	; (8003c68 <HAL_RCC_GetPCLK2Freq+0x20>)
 8003c54:	689b      	ldr	r3, [r3, #8]
 8003c56:	0b5b      	lsrs	r3, r3, #13
 8003c58:	f003 0307 	and.w	r3, r3, #7
 8003c5c:	4a03      	ldr	r2, [pc, #12]	; (8003c6c <HAL_RCC_GetPCLK2Freq+0x24>)
 8003c5e:	5cd3      	ldrb	r3, [r2, r3]
 8003c60:	fa21 f303 	lsr.w	r3, r1, r3
 8003c64:	4618      	mov	r0, r3
 8003c66:	bd80      	pop	{r7, pc}
 8003c68:	40023800 	.word	0x40023800
 8003c6c:	080085a4 	.word	0x080085a4

08003c70 <HAL_RCC_GetSysClockFreq>:
 8003c70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003c72:	b087      	sub	sp, #28
 8003c74:	af00      	add	r7, sp, #0
 8003c76:	2300      	movs	r3, #0
 8003c78:	60fb      	str	r3, [r7, #12]
 8003c7a:	2300      	movs	r3, #0
 8003c7c:	617b      	str	r3, [r7, #20]
 8003c7e:	2300      	movs	r3, #0
 8003c80:	60bb      	str	r3, [r7, #8]
 8003c82:	2300      	movs	r3, #0
 8003c84:	607b      	str	r3, [r7, #4]
 8003c86:	2300      	movs	r3, #0
 8003c88:	613b      	str	r3, [r7, #16]
 8003c8a:	4bc6      	ldr	r3, [pc, #792]	; (8003fa4 <HAL_RCC_GetSysClockFreq+0x334>)
 8003c8c:	689b      	ldr	r3, [r3, #8]
 8003c8e:	f003 030c 	and.w	r3, r3, #12
 8003c92:	2b0c      	cmp	r3, #12
 8003c94:	f200 817e 	bhi.w	8003f94 <HAL_RCC_GetSysClockFreq+0x324>
 8003c98:	a201      	add	r2, pc, #4	; (adr r2, 8003ca0 <HAL_RCC_GetSysClockFreq+0x30>)
 8003c9a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003c9e:	bf00      	nop
 8003ca0:	08003cd5 	.word	0x08003cd5
 8003ca4:	08003f95 	.word	0x08003f95
 8003ca8:	08003f95 	.word	0x08003f95
 8003cac:	08003f95 	.word	0x08003f95
 8003cb0:	08003cdb 	.word	0x08003cdb
 8003cb4:	08003f95 	.word	0x08003f95
 8003cb8:	08003f95 	.word	0x08003f95
 8003cbc:	08003f95 	.word	0x08003f95
 8003cc0:	08003ce1 	.word	0x08003ce1
 8003cc4:	08003f95 	.word	0x08003f95
 8003cc8:	08003f95 	.word	0x08003f95
 8003ccc:	08003f95 	.word	0x08003f95
 8003cd0:	08003e3d 	.word	0x08003e3d
 8003cd4:	4bb4      	ldr	r3, [pc, #720]	; (8003fa8 <HAL_RCC_GetSysClockFreq+0x338>)
 8003cd6:	613b      	str	r3, [r7, #16]
 8003cd8:	e15f      	b.n	8003f9a <HAL_RCC_GetSysClockFreq+0x32a>
 8003cda:	4bb4      	ldr	r3, [pc, #720]	; (8003fac <HAL_RCC_GetSysClockFreq+0x33c>)
 8003cdc:	613b      	str	r3, [r7, #16]
 8003cde:	e15c      	b.n	8003f9a <HAL_RCC_GetSysClockFreq+0x32a>
 8003ce0:	4bb0      	ldr	r3, [pc, #704]	; (8003fa4 <HAL_RCC_GetSysClockFreq+0x334>)
 8003ce2:	685b      	ldr	r3, [r3, #4]
 8003ce4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003ce8:	60fb      	str	r3, [r7, #12]
 8003cea:	4bae      	ldr	r3, [pc, #696]	; (8003fa4 <HAL_RCC_GetSysClockFreq+0x334>)
 8003cec:	685b      	ldr	r3, [r3, #4]
 8003cee:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003cf2:	2b00      	cmp	r3, #0
 8003cf4:	d04a      	beq.n	8003d8c <HAL_RCC_GetSysClockFreq+0x11c>
 8003cf6:	4bab      	ldr	r3, [pc, #684]	; (8003fa4 <HAL_RCC_GetSysClockFreq+0x334>)
 8003cf8:	685b      	ldr	r3, [r3, #4]
 8003cfa:	099b      	lsrs	r3, r3, #6
 8003cfc:	f04f 0400 	mov.w	r4, #0
 8003d00:	f240 11ff 	movw	r1, #511	; 0x1ff
 8003d04:	f04f 0200 	mov.w	r2, #0
 8003d08:	ea03 0501 	and.w	r5, r3, r1
 8003d0c:	ea04 0602 	and.w	r6, r4, r2
 8003d10:	4629      	mov	r1, r5
 8003d12:	4632      	mov	r2, r6
 8003d14:	f04f 0300 	mov.w	r3, #0
 8003d18:	f04f 0400 	mov.w	r4, #0
 8003d1c:	0154      	lsls	r4, r2, #5
 8003d1e:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8003d22:	014b      	lsls	r3, r1, #5
 8003d24:	4619      	mov	r1, r3
 8003d26:	4622      	mov	r2, r4
 8003d28:	1b49      	subs	r1, r1, r5
 8003d2a:	eb62 0206 	sbc.w	r2, r2, r6
 8003d2e:	f04f 0300 	mov.w	r3, #0
 8003d32:	f04f 0400 	mov.w	r4, #0
 8003d36:	0194      	lsls	r4, r2, #6
 8003d38:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8003d3c:	018b      	lsls	r3, r1, #6
 8003d3e:	1a5b      	subs	r3, r3, r1
 8003d40:	eb64 0402 	sbc.w	r4, r4, r2
 8003d44:	f04f 0100 	mov.w	r1, #0
 8003d48:	f04f 0200 	mov.w	r2, #0
 8003d4c:	00e2      	lsls	r2, r4, #3
 8003d4e:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8003d52:	00d9      	lsls	r1, r3, #3
 8003d54:	460b      	mov	r3, r1
 8003d56:	4614      	mov	r4, r2
 8003d58:	195b      	adds	r3, r3, r5
 8003d5a:	eb44 0406 	adc.w	r4, r4, r6
 8003d5e:	f04f 0100 	mov.w	r1, #0
 8003d62:	f04f 0200 	mov.w	r2, #0
 8003d66:	0262      	lsls	r2, r4, #9
 8003d68:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
 8003d6c:	0259      	lsls	r1, r3, #9
 8003d6e:	460b      	mov	r3, r1
 8003d70:	4614      	mov	r4, r2
 8003d72:	4618      	mov	r0, r3
 8003d74:	4621      	mov	r1, r4
 8003d76:	68fb      	ldr	r3, [r7, #12]
 8003d78:	f04f 0400 	mov.w	r4, #0
 8003d7c:	461a      	mov	r2, r3
 8003d7e:	4623      	mov	r3, r4
 8003d80:	f7fc ff2a 	bl	8000bd8 <__aeabi_uldivmod>
 8003d84:	4603      	mov	r3, r0
 8003d86:	460c      	mov	r4, r1
 8003d88:	617b      	str	r3, [r7, #20]
 8003d8a:	e049      	b.n	8003e20 <HAL_RCC_GetSysClockFreq+0x1b0>
 8003d8c:	4b85      	ldr	r3, [pc, #532]	; (8003fa4 <HAL_RCC_GetSysClockFreq+0x334>)
 8003d8e:	685b      	ldr	r3, [r3, #4]
 8003d90:	099b      	lsrs	r3, r3, #6
 8003d92:	f04f 0400 	mov.w	r4, #0
 8003d96:	f240 11ff 	movw	r1, #511	; 0x1ff
 8003d9a:	f04f 0200 	mov.w	r2, #0
 8003d9e:	ea03 0501 	and.w	r5, r3, r1
 8003da2:	ea04 0602 	and.w	r6, r4, r2
 8003da6:	4629      	mov	r1, r5
 8003da8:	4632      	mov	r2, r6
 8003daa:	f04f 0300 	mov.w	r3, #0
 8003dae:	f04f 0400 	mov.w	r4, #0
 8003db2:	0154      	lsls	r4, r2, #5
 8003db4:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8003db8:	014b      	lsls	r3, r1, #5
 8003dba:	4619      	mov	r1, r3
 8003dbc:	4622      	mov	r2, r4
 8003dbe:	1b49      	subs	r1, r1, r5
 8003dc0:	eb62 0206 	sbc.w	r2, r2, r6
 8003dc4:	f04f 0300 	mov.w	r3, #0
 8003dc8:	f04f 0400 	mov.w	r4, #0
 8003dcc:	0194      	lsls	r4, r2, #6
 8003dce:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8003dd2:	018b      	lsls	r3, r1, #6
 8003dd4:	1a5b      	subs	r3, r3, r1
 8003dd6:	eb64 0402 	sbc.w	r4, r4, r2
 8003dda:	f04f 0100 	mov.w	r1, #0
 8003dde:	f04f 0200 	mov.w	r2, #0
 8003de2:	00e2      	lsls	r2, r4, #3
 8003de4:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8003de8:	00d9      	lsls	r1, r3, #3
 8003dea:	460b      	mov	r3, r1
 8003dec:	4614      	mov	r4, r2
 8003dee:	195b      	adds	r3, r3, r5
 8003df0:	eb44 0406 	adc.w	r4, r4, r6
 8003df4:	f04f 0100 	mov.w	r1, #0
 8003df8:	f04f 0200 	mov.w	r2, #0
 8003dfc:	02a2      	lsls	r2, r4, #10
 8003dfe:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 8003e02:	0299      	lsls	r1, r3, #10
 8003e04:	460b      	mov	r3, r1
 8003e06:	4614      	mov	r4, r2
 8003e08:	4618      	mov	r0, r3
 8003e0a:	4621      	mov	r1, r4
 8003e0c:	68fb      	ldr	r3, [r7, #12]
 8003e0e:	f04f 0400 	mov.w	r4, #0
 8003e12:	461a      	mov	r2, r3
 8003e14:	4623      	mov	r3, r4
 8003e16:	f7fc fedf 	bl	8000bd8 <__aeabi_uldivmod>
 8003e1a:	4603      	mov	r3, r0
 8003e1c:	460c      	mov	r4, r1
 8003e1e:	617b      	str	r3, [r7, #20]
 8003e20:	4b60      	ldr	r3, [pc, #384]	; (8003fa4 <HAL_RCC_GetSysClockFreq+0x334>)
 8003e22:	685b      	ldr	r3, [r3, #4]
 8003e24:	0c1b      	lsrs	r3, r3, #16
 8003e26:	f003 0303 	and.w	r3, r3, #3
 8003e2a:	3301      	adds	r3, #1
 8003e2c:	005b      	lsls	r3, r3, #1
 8003e2e:	60bb      	str	r3, [r7, #8]
 8003e30:	697a      	ldr	r2, [r7, #20]
 8003e32:	68bb      	ldr	r3, [r7, #8]
 8003e34:	fbb2 f3f3 	udiv	r3, r2, r3
 8003e38:	613b      	str	r3, [r7, #16]
 8003e3a:	e0ae      	b.n	8003f9a <HAL_RCC_GetSysClockFreq+0x32a>
 8003e3c:	4b59      	ldr	r3, [pc, #356]	; (8003fa4 <HAL_RCC_GetSysClockFreq+0x334>)
 8003e3e:	685b      	ldr	r3, [r3, #4]
 8003e40:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003e44:	60fb      	str	r3, [r7, #12]
 8003e46:	4b57      	ldr	r3, [pc, #348]	; (8003fa4 <HAL_RCC_GetSysClockFreq+0x334>)
 8003e48:	685b      	ldr	r3, [r3, #4]
 8003e4a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003e4e:	2b00      	cmp	r3, #0
 8003e50:	d04a      	beq.n	8003ee8 <HAL_RCC_GetSysClockFreq+0x278>
 8003e52:	4b54      	ldr	r3, [pc, #336]	; (8003fa4 <HAL_RCC_GetSysClockFreq+0x334>)
 8003e54:	685b      	ldr	r3, [r3, #4]
 8003e56:	099b      	lsrs	r3, r3, #6
 8003e58:	f04f 0400 	mov.w	r4, #0
 8003e5c:	f240 11ff 	movw	r1, #511	; 0x1ff
 8003e60:	f04f 0200 	mov.w	r2, #0
 8003e64:	ea03 0501 	and.w	r5, r3, r1
 8003e68:	ea04 0602 	and.w	r6, r4, r2
 8003e6c:	4629      	mov	r1, r5
 8003e6e:	4632      	mov	r2, r6
 8003e70:	f04f 0300 	mov.w	r3, #0
 8003e74:	f04f 0400 	mov.w	r4, #0
 8003e78:	0154      	lsls	r4, r2, #5
 8003e7a:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8003e7e:	014b      	lsls	r3, r1, #5
 8003e80:	4619      	mov	r1, r3
 8003e82:	4622      	mov	r2, r4
 8003e84:	1b49      	subs	r1, r1, r5
 8003e86:	eb62 0206 	sbc.w	r2, r2, r6
 8003e8a:	f04f 0300 	mov.w	r3, #0
 8003e8e:	f04f 0400 	mov.w	r4, #0
 8003e92:	0194      	lsls	r4, r2, #6
 8003e94:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8003e98:	018b      	lsls	r3, r1, #6
 8003e9a:	1a5b      	subs	r3, r3, r1
 8003e9c:	eb64 0402 	sbc.w	r4, r4, r2
 8003ea0:	f04f 0100 	mov.w	r1, #0
 8003ea4:	f04f 0200 	mov.w	r2, #0
 8003ea8:	00e2      	lsls	r2, r4, #3
 8003eaa:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8003eae:	00d9      	lsls	r1, r3, #3
 8003eb0:	460b      	mov	r3, r1
 8003eb2:	4614      	mov	r4, r2
 8003eb4:	195b      	adds	r3, r3, r5
 8003eb6:	eb44 0406 	adc.w	r4, r4, r6
 8003eba:	f04f 0100 	mov.w	r1, #0
 8003ebe:	f04f 0200 	mov.w	r2, #0
 8003ec2:	0262      	lsls	r2, r4, #9
 8003ec4:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
 8003ec8:	0259      	lsls	r1, r3, #9
 8003eca:	460b      	mov	r3, r1
 8003ecc:	4614      	mov	r4, r2
 8003ece:	4618      	mov	r0, r3
 8003ed0:	4621      	mov	r1, r4
 8003ed2:	68fb      	ldr	r3, [r7, #12]
 8003ed4:	f04f 0400 	mov.w	r4, #0
 8003ed8:	461a      	mov	r2, r3
 8003eda:	4623      	mov	r3, r4
 8003edc:	f7fc fe7c 	bl	8000bd8 <__aeabi_uldivmod>
 8003ee0:	4603      	mov	r3, r0
 8003ee2:	460c      	mov	r4, r1
 8003ee4:	617b      	str	r3, [r7, #20]
 8003ee6:	e049      	b.n	8003f7c <HAL_RCC_GetSysClockFreq+0x30c>
 8003ee8:	4b2e      	ldr	r3, [pc, #184]	; (8003fa4 <HAL_RCC_GetSysClockFreq+0x334>)
 8003eea:	685b      	ldr	r3, [r3, #4]
 8003eec:	099b      	lsrs	r3, r3, #6
 8003eee:	f04f 0400 	mov.w	r4, #0
 8003ef2:	f240 11ff 	movw	r1, #511	; 0x1ff
 8003ef6:	f04f 0200 	mov.w	r2, #0
 8003efa:	ea03 0501 	and.w	r5, r3, r1
 8003efe:	ea04 0602 	and.w	r6, r4, r2
 8003f02:	4629      	mov	r1, r5
 8003f04:	4632      	mov	r2, r6
 8003f06:	f04f 0300 	mov.w	r3, #0
 8003f0a:	f04f 0400 	mov.w	r4, #0
 8003f0e:	0154      	lsls	r4, r2, #5
 8003f10:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8003f14:	014b      	lsls	r3, r1, #5
 8003f16:	4619      	mov	r1, r3
 8003f18:	4622      	mov	r2, r4
 8003f1a:	1b49      	subs	r1, r1, r5
 8003f1c:	eb62 0206 	sbc.w	r2, r2, r6
 8003f20:	f04f 0300 	mov.w	r3, #0
 8003f24:	f04f 0400 	mov.w	r4, #0
 8003f28:	0194      	lsls	r4, r2, #6
 8003f2a:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8003f2e:	018b      	lsls	r3, r1, #6
 8003f30:	1a5b      	subs	r3, r3, r1
 8003f32:	eb64 0402 	sbc.w	r4, r4, r2
 8003f36:	f04f 0100 	mov.w	r1, #0
 8003f3a:	f04f 0200 	mov.w	r2, #0
 8003f3e:	00e2      	lsls	r2, r4, #3
 8003f40:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8003f44:	00d9      	lsls	r1, r3, #3
 8003f46:	460b      	mov	r3, r1
 8003f48:	4614      	mov	r4, r2
 8003f4a:	195b      	adds	r3, r3, r5
 8003f4c:	eb44 0406 	adc.w	r4, r4, r6
 8003f50:	f04f 0100 	mov.w	r1, #0
 8003f54:	f04f 0200 	mov.w	r2, #0
 8003f58:	02a2      	lsls	r2, r4, #10
 8003f5a:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 8003f5e:	0299      	lsls	r1, r3, #10
 8003f60:	460b      	mov	r3, r1
 8003f62:	4614      	mov	r4, r2
 8003f64:	4618      	mov	r0, r3
 8003f66:	4621      	mov	r1, r4
 8003f68:	68fb      	ldr	r3, [r7, #12]
 8003f6a:	f04f 0400 	mov.w	r4, #0
 8003f6e:	461a      	mov	r2, r3
 8003f70:	4623      	mov	r3, r4
 8003f72:	f7fc fe31 	bl	8000bd8 <__aeabi_uldivmod>
 8003f76:	4603      	mov	r3, r0
 8003f78:	460c      	mov	r4, r1
 8003f7a:	617b      	str	r3, [r7, #20]
 8003f7c:	4b09      	ldr	r3, [pc, #36]	; (8003fa4 <HAL_RCC_GetSysClockFreq+0x334>)
 8003f7e:	685b      	ldr	r3, [r3, #4]
 8003f80:	0f1b      	lsrs	r3, r3, #28
 8003f82:	f003 0307 	and.w	r3, r3, #7
 8003f86:	607b      	str	r3, [r7, #4]
 8003f88:	697a      	ldr	r2, [r7, #20]
 8003f8a:	687b      	ldr	r3, [r7, #4]
 8003f8c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003f90:	613b      	str	r3, [r7, #16]
 8003f92:	e002      	b.n	8003f9a <HAL_RCC_GetSysClockFreq+0x32a>
 8003f94:	4b04      	ldr	r3, [pc, #16]	; (8003fa8 <HAL_RCC_GetSysClockFreq+0x338>)
 8003f96:	613b      	str	r3, [r7, #16]
 8003f98:	bf00      	nop
 8003f9a:	693b      	ldr	r3, [r7, #16]
 8003f9c:	4618      	mov	r0, r3
 8003f9e:	371c      	adds	r7, #28
 8003fa0:	46bd      	mov	sp, r7
 8003fa2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003fa4:	40023800 	.word	0x40023800
 8003fa8:	00f42400 	.word	0x00f42400
 8003fac:	007a1200 	.word	0x007a1200

08003fb0 <HAL_RCC_OscConfig>:
 8003fb0:	b580      	push	{r7, lr}
 8003fb2:	b086      	sub	sp, #24
 8003fb4:	af00      	add	r7, sp, #0
 8003fb6:	6078      	str	r0, [r7, #4]
 8003fb8:	2300      	movs	r3, #0
 8003fba:	613b      	str	r3, [r7, #16]
 8003fbc:	687b      	ldr	r3, [r7, #4]
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	f003 0301 	and.w	r3, r3, #1
 8003fc4:	2b00      	cmp	r3, #0
 8003fc6:	f000 8083 	beq.w	80040d0 <HAL_RCC_OscConfig+0x120>
 8003fca:	4b95      	ldr	r3, [pc, #596]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8003fcc:	689b      	ldr	r3, [r3, #8]
 8003fce:	f003 030c 	and.w	r3, r3, #12
 8003fd2:	2b04      	cmp	r3, #4
 8003fd4:	d019      	beq.n	800400a <HAL_RCC_OscConfig+0x5a>
 8003fd6:	4b92      	ldr	r3, [pc, #584]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8003fd8:	689b      	ldr	r3, [r3, #8]
 8003fda:	f003 030c 	and.w	r3, r3, #12
 8003fde:	2b08      	cmp	r3, #8
 8003fe0:	d106      	bne.n	8003ff0 <HAL_RCC_OscConfig+0x40>
 8003fe2:	4b8f      	ldr	r3, [pc, #572]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8003fe4:	685b      	ldr	r3, [r3, #4]
 8003fe6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003fea:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8003fee:	d00c      	beq.n	800400a <HAL_RCC_OscConfig+0x5a>
 8003ff0:	4b8b      	ldr	r3, [pc, #556]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8003ff2:	689b      	ldr	r3, [r3, #8]
 8003ff4:	f003 030c 	and.w	r3, r3, #12
 8003ff8:	2b0c      	cmp	r3, #12
 8003ffa:	d112      	bne.n	8004022 <HAL_RCC_OscConfig+0x72>
 8003ffc:	4b88      	ldr	r3, [pc, #544]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8003ffe:	685b      	ldr	r3, [r3, #4]
 8004000:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004004:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004008:	d10b      	bne.n	8004022 <HAL_RCC_OscConfig+0x72>
 800400a:	4b85      	ldr	r3, [pc, #532]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 800400c:	681b      	ldr	r3, [r3, #0]
 800400e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004012:	2b00      	cmp	r3, #0
 8004014:	d05b      	beq.n	80040ce <HAL_RCC_OscConfig+0x11e>
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	685b      	ldr	r3, [r3, #4]
 800401a:	2b00      	cmp	r3, #0
 800401c:	d157      	bne.n	80040ce <HAL_RCC_OscConfig+0x11e>
 800401e:	2301      	movs	r3, #1
 8004020:	e216      	b.n	8004450 <HAL_RCC_OscConfig+0x4a0>
 8004022:	687b      	ldr	r3, [r7, #4]
 8004024:	685b      	ldr	r3, [r3, #4]
 8004026:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800402a:	d106      	bne.n	800403a <HAL_RCC_OscConfig+0x8a>
 800402c:	4b7c      	ldr	r3, [pc, #496]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 800402e:	681b      	ldr	r3, [r3, #0]
 8004030:	4a7b      	ldr	r2, [pc, #492]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8004032:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004036:	6013      	str	r3, [r2, #0]
 8004038:	e01d      	b.n	8004076 <HAL_RCC_OscConfig+0xc6>
 800403a:	687b      	ldr	r3, [r7, #4]
 800403c:	685b      	ldr	r3, [r3, #4]
 800403e:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004042:	d10c      	bne.n	800405e <HAL_RCC_OscConfig+0xae>
 8004044:	4b76      	ldr	r3, [pc, #472]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	4a75      	ldr	r2, [pc, #468]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 800404a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800404e:	6013      	str	r3, [r2, #0]
 8004050:	4b73      	ldr	r3, [pc, #460]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8004052:	681b      	ldr	r3, [r3, #0]
 8004054:	4a72      	ldr	r2, [pc, #456]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8004056:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800405a:	6013      	str	r3, [r2, #0]
 800405c:	e00b      	b.n	8004076 <HAL_RCC_OscConfig+0xc6>
 800405e:	4b70      	ldr	r3, [pc, #448]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8004060:	681b      	ldr	r3, [r3, #0]
 8004062:	4a6f      	ldr	r2, [pc, #444]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8004064:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004068:	6013      	str	r3, [r2, #0]
 800406a:	4b6d      	ldr	r3, [pc, #436]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 800406c:	681b      	ldr	r3, [r3, #0]
 800406e:	4a6c      	ldr	r2, [pc, #432]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8004070:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004074:	6013      	str	r3, [r2, #0]
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	685b      	ldr	r3, [r3, #4]
 800407a:	2b00      	cmp	r3, #0
 800407c:	d013      	beq.n	80040a6 <HAL_RCC_OscConfig+0xf6>
 800407e:	f7fe fdab 	bl	8002bd8 <HAL_GetTick>
 8004082:	6138      	str	r0, [r7, #16]
 8004084:	e008      	b.n	8004098 <HAL_RCC_OscConfig+0xe8>
 8004086:	f7fe fda7 	bl	8002bd8 <HAL_GetTick>
 800408a:	4602      	mov	r2, r0
 800408c:	693b      	ldr	r3, [r7, #16]
 800408e:	1ad3      	subs	r3, r2, r3
 8004090:	2b64      	cmp	r3, #100	; 0x64
 8004092:	d901      	bls.n	8004098 <HAL_RCC_OscConfig+0xe8>
 8004094:	2303      	movs	r3, #3
 8004096:	e1db      	b.n	8004450 <HAL_RCC_OscConfig+0x4a0>
 8004098:	4b61      	ldr	r3, [pc, #388]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 800409a:	681b      	ldr	r3, [r3, #0]
 800409c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80040a0:	2b00      	cmp	r3, #0
 80040a2:	d0f0      	beq.n	8004086 <HAL_RCC_OscConfig+0xd6>
 80040a4:	e014      	b.n	80040d0 <HAL_RCC_OscConfig+0x120>
 80040a6:	f7fe fd97 	bl	8002bd8 <HAL_GetTick>
 80040aa:	6138      	str	r0, [r7, #16]
 80040ac:	e008      	b.n	80040c0 <HAL_RCC_OscConfig+0x110>
 80040ae:	f7fe fd93 	bl	8002bd8 <HAL_GetTick>
 80040b2:	4602      	mov	r2, r0
 80040b4:	693b      	ldr	r3, [r7, #16]
 80040b6:	1ad3      	subs	r3, r2, r3
 80040b8:	2b64      	cmp	r3, #100	; 0x64
 80040ba:	d901      	bls.n	80040c0 <HAL_RCC_OscConfig+0x110>
 80040bc:	2303      	movs	r3, #3
 80040be:	e1c7      	b.n	8004450 <HAL_RCC_OscConfig+0x4a0>
 80040c0:	4b57      	ldr	r3, [pc, #348]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 80040c2:	681b      	ldr	r3, [r3, #0]
 80040c4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80040c8:	2b00      	cmp	r3, #0
 80040ca:	d1f0      	bne.n	80040ae <HAL_RCC_OscConfig+0xfe>
 80040cc:	e000      	b.n	80040d0 <HAL_RCC_OscConfig+0x120>
 80040ce:	bf00      	nop
 80040d0:	687b      	ldr	r3, [r7, #4]
 80040d2:	681b      	ldr	r3, [r3, #0]
 80040d4:	f003 0302 	and.w	r3, r3, #2
 80040d8:	2b00      	cmp	r3, #0
 80040da:	d06f      	beq.n	80041bc <HAL_RCC_OscConfig+0x20c>
 80040dc:	4b50      	ldr	r3, [pc, #320]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 80040de:	689b      	ldr	r3, [r3, #8]
 80040e0:	f003 030c 	and.w	r3, r3, #12
 80040e4:	2b00      	cmp	r3, #0
 80040e6:	d017      	beq.n	8004118 <HAL_RCC_OscConfig+0x168>
 80040e8:	4b4d      	ldr	r3, [pc, #308]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 80040ea:	689b      	ldr	r3, [r3, #8]
 80040ec:	f003 030c 	and.w	r3, r3, #12
 80040f0:	2b08      	cmp	r3, #8
 80040f2:	d105      	bne.n	8004100 <HAL_RCC_OscConfig+0x150>
 80040f4:	4b4a      	ldr	r3, [pc, #296]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 80040f6:	685b      	ldr	r3, [r3, #4]
 80040f8:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80040fc:	2b00      	cmp	r3, #0
 80040fe:	d00b      	beq.n	8004118 <HAL_RCC_OscConfig+0x168>
 8004100:	4b47      	ldr	r3, [pc, #284]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8004102:	689b      	ldr	r3, [r3, #8]
 8004104:	f003 030c 	and.w	r3, r3, #12
 8004108:	2b0c      	cmp	r3, #12
 800410a:	d11c      	bne.n	8004146 <HAL_RCC_OscConfig+0x196>
 800410c:	4b44      	ldr	r3, [pc, #272]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 800410e:	685b      	ldr	r3, [r3, #4]
 8004110:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004114:	2b00      	cmp	r3, #0
 8004116:	d116      	bne.n	8004146 <HAL_RCC_OscConfig+0x196>
 8004118:	4b41      	ldr	r3, [pc, #260]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 800411a:	681b      	ldr	r3, [r3, #0]
 800411c:	f003 0302 	and.w	r3, r3, #2
 8004120:	2b00      	cmp	r3, #0
 8004122:	d005      	beq.n	8004130 <HAL_RCC_OscConfig+0x180>
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	68db      	ldr	r3, [r3, #12]
 8004128:	2b01      	cmp	r3, #1
 800412a:	d001      	beq.n	8004130 <HAL_RCC_OscConfig+0x180>
 800412c:	2301      	movs	r3, #1
 800412e:	e18f      	b.n	8004450 <HAL_RCC_OscConfig+0x4a0>
 8004130:	4b3b      	ldr	r3, [pc, #236]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8004132:	681b      	ldr	r3, [r3, #0]
 8004134:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	691b      	ldr	r3, [r3, #16]
 800413c:	00db      	lsls	r3, r3, #3
 800413e:	4938      	ldr	r1, [pc, #224]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8004140:	4313      	orrs	r3, r2
 8004142:	600b      	str	r3, [r1, #0]
 8004144:	e03a      	b.n	80041bc <HAL_RCC_OscConfig+0x20c>
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	68db      	ldr	r3, [r3, #12]
 800414a:	2b00      	cmp	r3, #0
 800414c:	d020      	beq.n	8004190 <HAL_RCC_OscConfig+0x1e0>
 800414e:	4b35      	ldr	r3, [pc, #212]	; (8004224 <HAL_RCC_OscConfig+0x274>)
 8004150:	2201      	movs	r2, #1
 8004152:	601a      	str	r2, [r3, #0]
 8004154:	f7fe fd40 	bl	8002bd8 <HAL_GetTick>
 8004158:	6138      	str	r0, [r7, #16]
 800415a:	e008      	b.n	800416e <HAL_RCC_OscConfig+0x1be>
 800415c:	f7fe fd3c 	bl	8002bd8 <HAL_GetTick>
 8004160:	4602      	mov	r2, r0
 8004162:	693b      	ldr	r3, [r7, #16]
 8004164:	1ad3      	subs	r3, r2, r3
 8004166:	2b02      	cmp	r3, #2
 8004168:	d901      	bls.n	800416e <HAL_RCC_OscConfig+0x1be>
 800416a:	2303      	movs	r3, #3
 800416c:	e170      	b.n	8004450 <HAL_RCC_OscConfig+0x4a0>
 800416e:	4b2c      	ldr	r3, [pc, #176]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 8004170:	681b      	ldr	r3, [r3, #0]
 8004172:	f003 0302 	and.w	r3, r3, #2
 8004176:	2b00      	cmp	r3, #0
 8004178:	d0f0      	beq.n	800415c <HAL_RCC_OscConfig+0x1ac>
 800417a:	4b29      	ldr	r3, [pc, #164]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 800417c:	681b      	ldr	r3, [r3, #0]
 800417e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004182:	687b      	ldr	r3, [r7, #4]
 8004184:	691b      	ldr	r3, [r3, #16]
 8004186:	00db      	lsls	r3, r3, #3
 8004188:	4925      	ldr	r1, [pc, #148]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 800418a:	4313      	orrs	r3, r2
 800418c:	600b      	str	r3, [r1, #0]
 800418e:	e015      	b.n	80041bc <HAL_RCC_OscConfig+0x20c>
 8004190:	4b24      	ldr	r3, [pc, #144]	; (8004224 <HAL_RCC_OscConfig+0x274>)
 8004192:	2200      	movs	r2, #0
 8004194:	601a      	str	r2, [r3, #0]
 8004196:	f7fe fd1f 	bl	8002bd8 <HAL_GetTick>
 800419a:	6138      	str	r0, [r7, #16]
 800419c:	e008      	b.n	80041b0 <HAL_RCC_OscConfig+0x200>
 800419e:	f7fe fd1b 	bl	8002bd8 <HAL_GetTick>
 80041a2:	4602      	mov	r2, r0
 80041a4:	693b      	ldr	r3, [r7, #16]
 80041a6:	1ad3      	subs	r3, r2, r3
 80041a8:	2b02      	cmp	r3, #2
 80041aa:	d901      	bls.n	80041b0 <HAL_RCC_OscConfig+0x200>
 80041ac:	2303      	movs	r3, #3
 80041ae:	e14f      	b.n	8004450 <HAL_RCC_OscConfig+0x4a0>
 80041b0:	4b1b      	ldr	r3, [pc, #108]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 80041b2:	681b      	ldr	r3, [r3, #0]
 80041b4:	f003 0302 	and.w	r3, r3, #2
 80041b8:	2b00      	cmp	r3, #0
 80041ba:	d1f0      	bne.n	800419e <HAL_RCC_OscConfig+0x1ee>
 80041bc:	687b      	ldr	r3, [r7, #4]
 80041be:	681b      	ldr	r3, [r3, #0]
 80041c0:	f003 0308 	and.w	r3, r3, #8
 80041c4:	2b00      	cmp	r3, #0
 80041c6:	d037      	beq.n	8004238 <HAL_RCC_OscConfig+0x288>
 80041c8:	687b      	ldr	r3, [r7, #4]
 80041ca:	695b      	ldr	r3, [r3, #20]
 80041cc:	2b00      	cmp	r3, #0
 80041ce:	d016      	beq.n	80041fe <HAL_RCC_OscConfig+0x24e>
 80041d0:	4b15      	ldr	r3, [pc, #84]	; (8004228 <HAL_RCC_OscConfig+0x278>)
 80041d2:	2201      	movs	r2, #1
 80041d4:	601a      	str	r2, [r3, #0]
 80041d6:	f7fe fcff 	bl	8002bd8 <HAL_GetTick>
 80041da:	6138      	str	r0, [r7, #16]
 80041dc:	e008      	b.n	80041f0 <HAL_RCC_OscConfig+0x240>
 80041de:	f7fe fcfb 	bl	8002bd8 <HAL_GetTick>
 80041e2:	4602      	mov	r2, r0
 80041e4:	693b      	ldr	r3, [r7, #16]
 80041e6:	1ad3      	subs	r3, r2, r3
 80041e8:	2b02      	cmp	r3, #2
 80041ea:	d901      	bls.n	80041f0 <HAL_RCC_OscConfig+0x240>
 80041ec:	2303      	movs	r3, #3
 80041ee:	e12f      	b.n	8004450 <HAL_RCC_OscConfig+0x4a0>
 80041f0:	4b0b      	ldr	r3, [pc, #44]	; (8004220 <HAL_RCC_OscConfig+0x270>)
 80041f2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80041f4:	f003 0302 	and.w	r3, r3, #2
 80041f8:	2b00      	cmp	r3, #0
 80041fa:	d0f0      	beq.n	80041de <HAL_RCC_OscConfig+0x22e>
 80041fc:	e01c      	b.n	8004238 <HAL_RCC_OscConfig+0x288>
 80041fe:	4b0a      	ldr	r3, [pc, #40]	; (8004228 <HAL_RCC_OscConfig+0x278>)
 8004200:	2200      	movs	r2, #0
 8004202:	601a      	str	r2, [r3, #0]
 8004204:	f7fe fce8 	bl	8002bd8 <HAL_GetTick>
 8004208:	6138      	str	r0, [r7, #16]
 800420a:	e00f      	b.n	800422c <HAL_RCC_OscConfig+0x27c>
 800420c:	f7fe fce4 	bl	8002bd8 <HAL_GetTick>
 8004210:	4602      	mov	r2, r0
 8004212:	693b      	ldr	r3, [r7, #16]
 8004214:	1ad3      	subs	r3, r2, r3
 8004216:	2b02      	cmp	r3, #2
 8004218:	d908      	bls.n	800422c <HAL_RCC_OscConfig+0x27c>
 800421a:	2303      	movs	r3, #3
 800421c:	e118      	b.n	8004450 <HAL_RCC_OscConfig+0x4a0>
 800421e:	bf00      	nop
 8004220:	40023800 	.word	0x40023800
 8004224:	42470000 	.word	0x42470000
 8004228:	42470e80 	.word	0x42470e80
 800422c:	4b8a      	ldr	r3, [pc, #552]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 800422e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004230:	f003 0302 	and.w	r3, r3, #2
 8004234:	2b00      	cmp	r3, #0
 8004236:	d1e9      	bne.n	800420c <HAL_RCC_OscConfig+0x25c>
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	681b      	ldr	r3, [r3, #0]
 800423c:	f003 0304 	and.w	r3, r3, #4
 8004240:	2b00      	cmp	r3, #0
 8004242:	f000 8097 	beq.w	8004374 <HAL_RCC_OscConfig+0x3c4>
 8004246:	2300      	movs	r3, #0
 8004248:	75fb      	strb	r3, [r7, #23]
 800424a:	4b83      	ldr	r3, [pc, #524]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 800424c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800424e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004252:	2b00      	cmp	r3, #0
 8004254:	d10f      	bne.n	8004276 <HAL_RCC_OscConfig+0x2c6>
 8004256:	2300      	movs	r3, #0
 8004258:	60fb      	str	r3, [r7, #12]
 800425a:	4b7f      	ldr	r3, [pc, #508]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 800425c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800425e:	4a7e      	ldr	r2, [pc, #504]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 8004260:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004264:	6413      	str	r3, [r2, #64]	; 0x40
 8004266:	4b7c      	ldr	r3, [pc, #496]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 8004268:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800426a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800426e:	60fb      	str	r3, [r7, #12]
 8004270:	68fb      	ldr	r3, [r7, #12]
 8004272:	2301      	movs	r3, #1
 8004274:	75fb      	strb	r3, [r7, #23]
 8004276:	4b79      	ldr	r3, [pc, #484]	; (800445c <HAL_RCC_OscConfig+0x4ac>)
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800427e:	2b00      	cmp	r3, #0
 8004280:	d118      	bne.n	80042b4 <HAL_RCC_OscConfig+0x304>
 8004282:	4b76      	ldr	r3, [pc, #472]	; (800445c <HAL_RCC_OscConfig+0x4ac>)
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	4a75      	ldr	r2, [pc, #468]	; (800445c <HAL_RCC_OscConfig+0x4ac>)
 8004288:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800428c:	6013      	str	r3, [r2, #0]
 800428e:	f7fe fca3 	bl	8002bd8 <HAL_GetTick>
 8004292:	6138      	str	r0, [r7, #16]
 8004294:	e008      	b.n	80042a8 <HAL_RCC_OscConfig+0x2f8>
 8004296:	f7fe fc9f 	bl	8002bd8 <HAL_GetTick>
 800429a:	4602      	mov	r2, r0
 800429c:	693b      	ldr	r3, [r7, #16]
 800429e:	1ad3      	subs	r3, r2, r3
 80042a0:	2b02      	cmp	r3, #2
 80042a2:	d901      	bls.n	80042a8 <HAL_RCC_OscConfig+0x2f8>
 80042a4:	2303      	movs	r3, #3
 80042a6:	e0d3      	b.n	8004450 <HAL_RCC_OscConfig+0x4a0>
 80042a8:	4b6c      	ldr	r3, [pc, #432]	; (800445c <HAL_RCC_OscConfig+0x4ac>)
 80042aa:	681b      	ldr	r3, [r3, #0]
 80042ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80042b0:	2b00      	cmp	r3, #0
 80042b2:	d0f0      	beq.n	8004296 <HAL_RCC_OscConfig+0x2e6>
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	689b      	ldr	r3, [r3, #8]
 80042b8:	2b01      	cmp	r3, #1
 80042ba:	d106      	bne.n	80042ca <HAL_RCC_OscConfig+0x31a>
 80042bc:	4b66      	ldr	r3, [pc, #408]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 80042be:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80042c0:	4a65      	ldr	r2, [pc, #404]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 80042c2:	f043 0301 	orr.w	r3, r3, #1
 80042c6:	6713      	str	r3, [r2, #112]	; 0x70
 80042c8:	e01c      	b.n	8004304 <HAL_RCC_OscConfig+0x354>
 80042ca:	687b      	ldr	r3, [r7, #4]
 80042cc:	689b      	ldr	r3, [r3, #8]
 80042ce:	2b05      	cmp	r3, #5
 80042d0:	d10c      	bne.n	80042ec <HAL_RCC_OscConfig+0x33c>
 80042d2:	4b61      	ldr	r3, [pc, #388]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 80042d4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80042d6:	4a60      	ldr	r2, [pc, #384]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 80042d8:	f043 0304 	orr.w	r3, r3, #4
 80042dc:	6713      	str	r3, [r2, #112]	; 0x70
 80042de:	4b5e      	ldr	r3, [pc, #376]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 80042e0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80042e2:	4a5d      	ldr	r2, [pc, #372]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 80042e4:	f043 0301 	orr.w	r3, r3, #1
 80042e8:	6713      	str	r3, [r2, #112]	; 0x70
 80042ea:	e00b      	b.n	8004304 <HAL_RCC_OscConfig+0x354>
 80042ec:	4b5a      	ldr	r3, [pc, #360]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 80042ee:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80042f0:	4a59      	ldr	r2, [pc, #356]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 80042f2:	f023 0301 	bic.w	r3, r3, #1
 80042f6:	6713      	str	r3, [r2, #112]	; 0x70
 80042f8:	4b57      	ldr	r3, [pc, #348]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 80042fa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80042fc:	4a56      	ldr	r2, [pc, #344]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 80042fe:	f023 0304 	bic.w	r3, r3, #4
 8004302:	6713      	str	r3, [r2, #112]	; 0x70
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	689b      	ldr	r3, [r3, #8]
 8004308:	2b00      	cmp	r3, #0
 800430a:	d015      	beq.n	8004338 <HAL_RCC_OscConfig+0x388>
 800430c:	f7fe fc64 	bl	8002bd8 <HAL_GetTick>
 8004310:	6138      	str	r0, [r7, #16]
 8004312:	e00a      	b.n	800432a <HAL_RCC_OscConfig+0x37a>
 8004314:	f7fe fc60 	bl	8002bd8 <HAL_GetTick>
 8004318:	4602      	mov	r2, r0
 800431a:	693b      	ldr	r3, [r7, #16]
 800431c:	1ad3      	subs	r3, r2, r3
 800431e:	f241 3288 	movw	r2, #5000	; 0x1388
 8004322:	4293      	cmp	r3, r2
 8004324:	d901      	bls.n	800432a <HAL_RCC_OscConfig+0x37a>
 8004326:	2303      	movs	r3, #3
 8004328:	e092      	b.n	8004450 <HAL_RCC_OscConfig+0x4a0>
 800432a:	4b4b      	ldr	r3, [pc, #300]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 800432c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800432e:	f003 0302 	and.w	r3, r3, #2
 8004332:	2b00      	cmp	r3, #0
 8004334:	d0ee      	beq.n	8004314 <HAL_RCC_OscConfig+0x364>
 8004336:	e014      	b.n	8004362 <HAL_RCC_OscConfig+0x3b2>
 8004338:	f7fe fc4e 	bl	8002bd8 <HAL_GetTick>
 800433c:	6138      	str	r0, [r7, #16]
 800433e:	e00a      	b.n	8004356 <HAL_RCC_OscConfig+0x3a6>
 8004340:	f7fe fc4a 	bl	8002bd8 <HAL_GetTick>
 8004344:	4602      	mov	r2, r0
 8004346:	693b      	ldr	r3, [r7, #16]
 8004348:	1ad3      	subs	r3, r2, r3
 800434a:	f241 3288 	movw	r2, #5000	; 0x1388
 800434e:	4293      	cmp	r3, r2
 8004350:	d901      	bls.n	8004356 <HAL_RCC_OscConfig+0x3a6>
 8004352:	2303      	movs	r3, #3
 8004354:	e07c      	b.n	8004450 <HAL_RCC_OscConfig+0x4a0>
 8004356:	4b40      	ldr	r3, [pc, #256]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 8004358:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800435a:	f003 0302 	and.w	r3, r3, #2
 800435e:	2b00      	cmp	r3, #0
 8004360:	d1ee      	bne.n	8004340 <HAL_RCC_OscConfig+0x390>
 8004362:	7dfb      	ldrb	r3, [r7, #23]
 8004364:	2b01      	cmp	r3, #1
 8004366:	d105      	bne.n	8004374 <HAL_RCC_OscConfig+0x3c4>
 8004368:	4b3b      	ldr	r3, [pc, #236]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 800436a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800436c:	4a3a      	ldr	r2, [pc, #232]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 800436e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004372:	6413      	str	r3, [r2, #64]	; 0x40
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	699b      	ldr	r3, [r3, #24]
 8004378:	2b00      	cmp	r3, #0
 800437a:	d068      	beq.n	800444e <HAL_RCC_OscConfig+0x49e>
 800437c:	4b36      	ldr	r3, [pc, #216]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 800437e:	689b      	ldr	r3, [r3, #8]
 8004380:	f003 030c 	and.w	r3, r3, #12
 8004384:	2b08      	cmp	r3, #8
 8004386:	d060      	beq.n	800444a <HAL_RCC_OscConfig+0x49a>
 8004388:	687b      	ldr	r3, [r7, #4]
 800438a:	699b      	ldr	r3, [r3, #24]
 800438c:	2b02      	cmp	r3, #2
 800438e:	d145      	bne.n	800441c <HAL_RCC_OscConfig+0x46c>
 8004390:	4b33      	ldr	r3, [pc, #204]	; (8004460 <HAL_RCC_OscConfig+0x4b0>)
 8004392:	2200      	movs	r2, #0
 8004394:	601a      	str	r2, [r3, #0]
 8004396:	f7fe fc1f 	bl	8002bd8 <HAL_GetTick>
 800439a:	6138      	str	r0, [r7, #16]
 800439c:	e008      	b.n	80043b0 <HAL_RCC_OscConfig+0x400>
 800439e:	f7fe fc1b 	bl	8002bd8 <HAL_GetTick>
 80043a2:	4602      	mov	r2, r0
 80043a4:	693b      	ldr	r3, [r7, #16]
 80043a6:	1ad3      	subs	r3, r2, r3
 80043a8:	2b02      	cmp	r3, #2
 80043aa:	d901      	bls.n	80043b0 <HAL_RCC_OscConfig+0x400>
 80043ac:	2303      	movs	r3, #3
 80043ae:	e04f      	b.n	8004450 <HAL_RCC_OscConfig+0x4a0>
 80043b0:	4b29      	ldr	r3, [pc, #164]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 80043b2:	681b      	ldr	r3, [r3, #0]
 80043b4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80043b8:	2b00      	cmp	r3, #0
 80043ba:	d1f0      	bne.n	800439e <HAL_RCC_OscConfig+0x3ee>
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	69da      	ldr	r2, [r3, #28]
 80043c0:	687b      	ldr	r3, [r7, #4]
 80043c2:	6a1b      	ldr	r3, [r3, #32]
 80043c4:	431a      	orrs	r2, r3
 80043c6:	687b      	ldr	r3, [r7, #4]
 80043c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043ca:	019b      	lsls	r3, r3, #6
 80043cc:	431a      	orrs	r2, r3
 80043ce:	687b      	ldr	r3, [r7, #4]
 80043d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80043d2:	085b      	lsrs	r3, r3, #1
 80043d4:	3b01      	subs	r3, #1
 80043d6:	041b      	lsls	r3, r3, #16
 80043d8:	431a      	orrs	r2, r3
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80043de:	061b      	lsls	r3, r3, #24
 80043e0:	431a      	orrs	r2, r3
 80043e2:	687b      	ldr	r3, [r7, #4]
 80043e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80043e6:	071b      	lsls	r3, r3, #28
 80043e8:	491b      	ldr	r1, [pc, #108]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 80043ea:	4313      	orrs	r3, r2
 80043ec:	604b      	str	r3, [r1, #4]
 80043ee:	4b1c      	ldr	r3, [pc, #112]	; (8004460 <HAL_RCC_OscConfig+0x4b0>)
 80043f0:	2201      	movs	r2, #1
 80043f2:	601a      	str	r2, [r3, #0]
 80043f4:	f7fe fbf0 	bl	8002bd8 <HAL_GetTick>
 80043f8:	6138      	str	r0, [r7, #16]
 80043fa:	e008      	b.n	800440e <HAL_RCC_OscConfig+0x45e>
 80043fc:	f7fe fbec 	bl	8002bd8 <HAL_GetTick>
 8004400:	4602      	mov	r2, r0
 8004402:	693b      	ldr	r3, [r7, #16]
 8004404:	1ad3      	subs	r3, r2, r3
 8004406:	2b02      	cmp	r3, #2
 8004408:	d901      	bls.n	800440e <HAL_RCC_OscConfig+0x45e>
 800440a:	2303      	movs	r3, #3
 800440c:	e020      	b.n	8004450 <HAL_RCC_OscConfig+0x4a0>
 800440e:	4b12      	ldr	r3, [pc, #72]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 8004410:	681b      	ldr	r3, [r3, #0]
 8004412:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004416:	2b00      	cmp	r3, #0
 8004418:	d0f0      	beq.n	80043fc <HAL_RCC_OscConfig+0x44c>
 800441a:	e018      	b.n	800444e <HAL_RCC_OscConfig+0x49e>
 800441c:	4b10      	ldr	r3, [pc, #64]	; (8004460 <HAL_RCC_OscConfig+0x4b0>)
 800441e:	2200      	movs	r2, #0
 8004420:	601a      	str	r2, [r3, #0]
 8004422:	f7fe fbd9 	bl	8002bd8 <HAL_GetTick>
 8004426:	6138      	str	r0, [r7, #16]
 8004428:	e008      	b.n	800443c <HAL_RCC_OscConfig+0x48c>
 800442a:	f7fe fbd5 	bl	8002bd8 <HAL_GetTick>
 800442e:	4602      	mov	r2, r0
 8004430:	693b      	ldr	r3, [r7, #16]
 8004432:	1ad3      	subs	r3, r2, r3
 8004434:	2b02      	cmp	r3, #2
 8004436:	d901      	bls.n	800443c <HAL_RCC_OscConfig+0x48c>
 8004438:	2303      	movs	r3, #3
 800443a:	e009      	b.n	8004450 <HAL_RCC_OscConfig+0x4a0>
 800443c:	4b06      	ldr	r3, [pc, #24]	; (8004458 <HAL_RCC_OscConfig+0x4a8>)
 800443e:	681b      	ldr	r3, [r3, #0]
 8004440:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004444:	2b00      	cmp	r3, #0
 8004446:	d1f0      	bne.n	800442a <HAL_RCC_OscConfig+0x47a>
 8004448:	e001      	b.n	800444e <HAL_RCC_OscConfig+0x49e>
 800444a:	2301      	movs	r3, #1
 800444c:	e000      	b.n	8004450 <HAL_RCC_OscConfig+0x4a0>
 800444e:	2300      	movs	r3, #0
 8004450:	4618      	mov	r0, r3
 8004452:	3718      	adds	r7, #24
 8004454:	46bd      	mov	sp, r7
 8004456:	bd80      	pop	{r7, pc}
 8004458:	40023800 	.word	0x40023800
 800445c:	40007000 	.word	0x40007000
 8004460:	42470060 	.word	0x42470060

08004464 <HAL_TIM_Base_Init>:
 8004464:	b580      	push	{r7, lr}
 8004466:	b082      	sub	sp, #8
 8004468:	af00      	add	r7, sp, #0
 800446a:	6078      	str	r0, [r7, #4]
 800446c:	687b      	ldr	r3, [r7, #4]
 800446e:	2b00      	cmp	r3, #0
 8004470:	d101      	bne.n	8004476 <HAL_TIM_Base_Init+0x12>
 8004472:	2301      	movs	r3, #1
 8004474:	e01d      	b.n	80044b2 <HAL_TIM_Base_Init+0x4e>
 8004476:	687b      	ldr	r3, [r7, #4]
 8004478:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800447c:	b2db      	uxtb	r3, r3
 800447e:	2b00      	cmp	r3, #0
 8004480:	d106      	bne.n	8004490 <HAL_TIM_Base_Init+0x2c>
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	2200      	movs	r2, #0
 8004486:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800448a:	6878      	ldr	r0, [r7, #4]
 800448c:	f7fe f94e 	bl	800272c <HAL_TIM_Base_MspInit>
 8004490:	687b      	ldr	r3, [r7, #4]
 8004492:	2202      	movs	r2, #2
 8004494:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004498:	687b      	ldr	r3, [r7, #4]
 800449a:	681a      	ldr	r2, [r3, #0]
 800449c:	687b      	ldr	r3, [r7, #4]
 800449e:	3304      	adds	r3, #4
 80044a0:	4619      	mov	r1, r3
 80044a2:	4610      	mov	r0, r2
 80044a4:	f000 fdaa 	bl	8004ffc <TIM_Base_SetConfig>
 80044a8:	687b      	ldr	r3, [r7, #4]
 80044aa:	2201      	movs	r2, #1
 80044ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80044b0:	2300      	movs	r3, #0
 80044b2:	4618      	mov	r0, r3
 80044b4:	3708      	adds	r7, #8
 80044b6:	46bd      	mov	sp, r7
 80044b8:	bd80      	pop	{r7, pc}

080044ba <HAL_TIM_Base_Stop>:
 80044ba:	b480      	push	{r7}
 80044bc:	b083      	sub	sp, #12
 80044be:	af00      	add	r7, sp, #0
 80044c0:	6078      	str	r0, [r7, #4]
 80044c2:	687b      	ldr	r3, [r7, #4]
 80044c4:	2202      	movs	r2, #2
 80044c6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80044ca:	687b      	ldr	r3, [r7, #4]
 80044cc:	681b      	ldr	r3, [r3, #0]
 80044ce:	6a1a      	ldr	r2, [r3, #32]
 80044d0:	f241 1311 	movw	r3, #4369	; 0x1111
 80044d4:	4013      	ands	r3, r2
 80044d6:	2b00      	cmp	r3, #0
 80044d8:	d10f      	bne.n	80044fa <HAL_TIM_Base_Stop+0x40>
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	6a1a      	ldr	r2, [r3, #32]
 80044e0:	f240 4344 	movw	r3, #1092	; 0x444
 80044e4:	4013      	ands	r3, r2
 80044e6:	2b00      	cmp	r3, #0
 80044e8:	d107      	bne.n	80044fa <HAL_TIM_Base_Stop+0x40>
 80044ea:	687b      	ldr	r3, [r7, #4]
 80044ec:	681b      	ldr	r3, [r3, #0]
 80044ee:	681a      	ldr	r2, [r3, #0]
 80044f0:	687b      	ldr	r3, [r7, #4]
 80044f2:	681b      	ldr	r3, [r3, #0]
 80044f4:	f022 0201 	bic.w	r2, r2, #1
 80044f8:	601a      	str	r2, [r3, #0]
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	2201      	movs	r2, #1
 80044fe:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004502:	2300      	movs	r3, #0
 8004504:	4618      	mov	r0, r3
 8004506:	370c      	adds	r7, #12
 8004508:	46bd      	mov	sp, r7
 800450a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800450e:	4770      	bx	lr

08004510 <HAL_TIM_OC_Init>:
 8004510:	b580      	push	{r7, lr}
 8004512:	b082      	sub	sp, #8
 8004514:	af00      	add	r7, sp, #0
 8004516:	6078      	str	r0, [r7, #4]
 8004518:	687b      	ldr	r3, [r7, #4]
 800451a:	2b00      	cmp	r3, #0
 800451c:	d101      	bne.n	8004522 <HAL_TIM_OC_Init+0x12>
 800451e:	2301      	movs	r3, #1
 8004520:	e01d      	b.n	800455e <HAL_TIM_OC_Init+0x4e>
 8004522:	687b      	ldr	r3, [r7, #4]
 8004524:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004528:	b2db      	uxtb	r3, r3
 800452a:	2b00      	cmp	r3, #0
 800452c:	d106      	bne.n	800453c <HAL_TIM_OC_Init+0x2c>
 800452e:	687b      	ldr	r3, [r7, #4]
 8004530:	2200      	movs	r2, #0
 8004532:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004536:	6878      	ldr	r0, [r7, #4]
 8004538:	f000 f815 	bl	8004566 <HAL_TIM_OC_MspInit>
 800453c:	687b      	ldr	r3, [r7, #4]
 800453e:	2202      	movs	r2, #2
 8004540:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	681a      	ldr	r2, [r3, #0]
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	3304      	adds	r3, #4
 800454c:	4619      	mov	r1, r3
 800454e:	4610      	mov	r0, r2
 8004550:	f000 fd54 	bl	8004ffc <TIM_Base_SetConfig>
 8004554:	687b      	ldr	r3, [r7, #4]
 8004556:	2201      	movs	r2, #1
 8004558:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800455c:	2300      	movs	r3, #0
 800455e:	4618      	mov	r0, r3
 8004560:	3708      	adds	r7, #8
 8004562:	46bd      	mov	sp, r7
 8004564:	bd80      	pop	{r7, pc}

08004566 <HAL_TIM_OC_MspInit>:
 8004566:	b480      	push	{r7}
 8004568:	b083      	sub	sp, #12
 800456a:	af00      	add	r7, sp, #0
 800456c:	6078      	str	r0, [r7, #4]
 800456e:	bf00      	nop
 8004570:	370c      	adds	r7, #12
 8004572:	46bd      	mov	sp, r7
 8004574:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004578:	4770      	bx	lr
	...

0800457c <HAL_TIM_OC_Start_IT>:
 800457c:	b580      	push	{r7, lr}
 800457e:	b084      	sub	sp, #16
 8004580:	af00      	add	r7, sp, #0
 8004582:	6078      	str	r0, [r7, #4]
 8004584:	6039      	str	r1, [r7, #0]
 8004586:	683b      	ldr	r3, [r7, #0]
 8004588:	2b0c      	cmp	r3, #12
 800458a:	d841      	bhi.n	8004610 <HAL_TIM_OC_Start_IT+0x94>
 800458c:	a201      	add	r2, pc, #4	; (adr r2, 8004594 <HAL_TIM_OC_Start_IT+0x18>)
 800458e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004592:	bf00      	nop
 8004594:	080045c9 	.word	0x080045c9
 8004598:	08004611 	.word	0x08004611
 800459c:	08004611 	.word	0x08004611
 80045a0:	08004611 	.word	0x08004611
 80045a4:	080045db 	.word	0x080045db
 80045a8:	08004611 	.word	0x08004611
 80045ac:	08004611 	.word	0x08004611
 80045b0:	08004611 	.word	0x08004611
 80045b4:	080045ed 	.word	0x080045ed
 80045b8:	08004611 	.word	0x08004611
 80045bc:	08004611 	.word	0x08004611
 80045c0:	08004611 	.word	0x08004611
 80045c4:	080045ff 	.word	0x080045ff
 80045c8:	687b      	ldr	r3, [r7, #4]
 80045ca:	681b      	ldr	r3, [r3, #0]
 80045cc:	68da      	ldr	r2, [r3, #12]
 80045ce:	687b      	ldr	r3, [r7, #4]
 80045d0:	681b      	ldr	r3, [r3, #0]
 80045d2:	f042 0202 	orr.w	r2, r2, #2
 80045d6:	60da      	str	r2, [r3, #12]
 80045d8:	e01b      	b.n	8004612 <HAL_TIM_OC_Start_IT+0x96>
 80045da:	687b      	ldr	r3, [r7, #4]
 80045dc:	681b      	ldr	r3, [r3, #0]
 80045de:	68da      	ldr	r2, [r3, #12]
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	681b      	ldr	r3, [r3, #0]
 80045e4:	f042 0204 	orr.w	r2, r2, #4
 80045e8:	60da      	str	r2, [r3, #12]
 80045ea:	e012      	b.n	8004612 <HAL_TIM_OC_Start_IT+0x96>
 80045ec:	687b      	ldr	r3, [r7, #4]
 80045ee:	681b      	ldr	r3, [r3, #0]
 80045f0:	68da      	ldr	r2, [r3, #12]
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	681b      	ldr	r3, [r3, #0]
 80045f6:	f042 0208 	orr.w	r2, r2, #8
 80045fa:	60da      	str	r2, [r3, #12]
 80045fc:	e009      	b.n	8004612 <HAL_TIM_OC_Start_IT+0x96>
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	681b      	ldr	r3, [r3, #0]
 8004602:	68da      	ldr	r2, [r3, #12]
 8004604:	687b      	ldr	r3, [r7, #4]
 8004606:	681b      	ldr	r3, [r3, #0]
 8004608:	f042 0210 	orr.w	r2, r2, #16
 800460c:	60da      	str	r2, [r3, #12]
 800460e:	e000      	b.n	8004612 <HAL_TIM_OC_Start_IT+0x96>
 8004610:	bf00      	nop
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	681b      	ldr	r3, [r3, #0]
 8004616:	2201      	movs	r2, #1
 8004618:	6839      	ldr	r1, [r7, #0]
 800461a:	4618      	mov	r0, r3
 800461c:	f001 f902 	bl	8005824 <TIM_CCxChannelCmd>
 8004620:	687b      	ldr	r3, [r7, #4]
 8004622:	681b      	ldr	r3, [r3, #0]
 8004624:	4a15      	ldr	r2, [pc, #84]	; (800467c <HAL_TIM_OC_Start_IT+0x100>)
 8004626:	4293      	cmp	r3, r2
 8004628:	d004      	beq.n	8004634 <HAL_TIM_OC_Start_IT+0xb8>
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	681b      	ldr	r3, [r3, #0]
 800462e:	4a14      	ldr	r2, [pc, #80]	; (8004680 <HAL_TIM_OC_Start_IT+0x104>)
 8004630:	4293      	cmp	r3, r2
 8004632:	d101      	bne.n	8004638 <HAL_TIM_OC_Start_IT+0xbc>
 8004634:	2301      	movs	r3, #1
 8004636:	e000      	b.n	800463a <HAL_TIM_OC_Start_IT+0xbe>
 8004638:	2300      	movs	r3, #0
 800463a:	2b00      	cmp	r3, #0
 800463c:	d007      	beq.n	800464e <HAL_TIM_OC_Start_IT+0xd2>
 800463e:	687b      	ldr	r3, [r7, #4]
 8004640:	681b      	ldr	r3, [r3, #0]
 8004642:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004644:	687b      	ldr	r3, [r7, #4]
 8004646:	681b      	ldr	r3, [r3, #0]
 8004648:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800464c:	645a      	str	r2, [r3, #68]	; 0x44
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	681b      	ldr	r3, [r3, #0]
 8004652:	689b      	ldr	r3, [r3, #8]
 8004654:	f003 0307 	and.w	r3, r3, #7
 8004658:	60fb      	str	r3, [r7, #12]
 800465a:	68fb      	ldr	r3, [r7, #12]
 800465c:	2b06      	cmp	r3, #6
 800465e:	d007      	beq.n	8004670 <HAL_TIM_OC_Start_IT+0xf4>
 8004660:	687b      	ldr	r3, [r7, #4]
 8004662:	681b      	ldr	r3, [r3, #0]
 8004664:	681a      	ldr	r2, [r3, #0]
 8004666:	687b      	ldr	r3, [r7, #4]
 8004668:	681b      	ldr	r3, [r3, #0]
 800466a:	f042 0201 	orr.w	r2, r2, #1
 800466e:	601a      	str	r2, [r3, #0]
 8004670:	2300      	movs	r3, #0
 8004672:	4618      	mov	r0, r3
 8004674:	3710      	adds	r7, #16
 8004676:	46bd      	mov	sp, r7
 8004678:	bd80      	pop	{r7, pc}
 800467a:	bf00      	nop
 800467c:	40010000 	.word	0x40010000
 8004680:	40010400 	.word	0x40010400

08004684 <HAL_TIM_OC_Stop_IT>:
 8004684:	b580      	push	{r7, lr}
 8004686:	b082      	sub	sp, #8
 8004688:	af00      	add	r7, sp, #0
 800468a:	6078      	str	r0, [r7, #4]
 800468c:	6039      	str	r1, [r7, #0]
 800468e:	683b      	ldr	r3, [r7, #0]
 8004690:	2b0c      	cmp	r3, #12
 8004692:	d841      	bhi.n	8004718 <HAL_TIM_OC_Stop_IT+0x94>
 8004694:	a201      	add	r2, pc, #4	; (adr r2, 800469c <HAL_TIM_OC_Stop_IT+0x18>)
 8004696:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800469a:	bf00      	nop
 800469c:	080046d1 	.word	0x080046d1
 80046a0:	08004719 	.word	0x08004719
 80046a4:	08004719 	.word	0x08004719
 80046a8:	08004719 	.word	0x08004719
 80046ac:	080046e3 	.word	0x080046e3
 80046b0:	08004719 	.word	0x08004719
 80046b4:	08004719 	.word	0x08004719
 80046b8:	08004719 	.word	0x08004719
 80046bc:	080046f5 	.word	0x080046f5
 80046c0:	08004719 	.word	0x08004719
 80046c4:	08004719 	.word	0x08004719
 80046c8:	08004719 	.word	0x08004719
 80046cc:	08004707 	.word	0x08004707
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	681b      	ldr	r3, [r3, #0]
 80046d4:	68da      	ldr	r2, [r3, #12]
 80046d6:	687b      	ldr	r3, [r7, #4]
 80046d8:	681b      	ldr	r3, [r3, #0]
 80046da:	f022 0202 	bic.w	r2, r2, #2
 80046de:	60da      	str	r2, [r3, #12]
 80046e0:	e01b      	b.n	800471a <HAL_TIM_OC_Stop_IT+0x96>
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	681b      	ldr	r3, [r3, #0]
 80046e6:	68da      	ldr	r2, [r3, #12]
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	681b      	ldr	r3, [r3, #0]
 80046ec:	f022 0204 	bic.w	r2, r2, #4
 80046f0:	60da      	str	r2, [r3, #12]
 80046f2:	e012      	b.n	800471a <HAL_TIM_OC_Stop_IT+0x96>
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	681b      	ldr	r3, [r3, #0]
 80046f8:	68da      	ldr	r2, [r3, #12]
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	681b      	ldr	r3, [r3, #0]
 80046fe:	f022 0208 	bic.w	r2, r2, #8
 8004702:	60da      	str	r2, [r3, #12]
 8004704:	e009      	b.n	800471a <HAL_TIM_OC_Stop_IT+0x96>
 8004706:	687b      	ldr	r3, [r7, #4]
 8004708:	681b      	ldr	r3, [r3, #0]
 800470a:	68da      	ldr	r2, [r3, #12]
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	681b      	ldr	r3, [r3, #0]
 8004710:	f022 0210 	bic.w	r2, r2, #16
 8004714:	60da      	str	r2, [r3, #12]
 8004716:	e000      	b.n	800471a <HAL_TIM_OC_Stop_IT+0x96>
 8004718:	bf00      	nop
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	681b      	ldr	r3, [r3, #0]
 800471e:	2200      	movs	r2, #0
 8004720:	6839      	ldr	r1, [r7, #0]
 8004722:	4618      	mov	r0, r3
 8004724:	f001 f87e 	bl	8005824 <TIM_CCxChannelCmd>
 8004728:	687b      	ldr	r3, [r7, #4]
 800472a:	681b      	ldr	r3, [r3, #0]
 800472c:	4a20      	ldr	r2, [pc, #128]	; (80047b0 <HAL_TIM_OC_Stop_IT+0x12c>)
 800472e:	4293      	cmp	r3, r2
 8004730:	d004      	beq.n	800473c <HAL_TIM_OC_Stop_IT+0xb8>
 8004732:	687b      	ldr	r3, [r7, #4]
 8004734:	681b      	ldr	r3, [r3, #0]
 8004736:	4a1f      	ldr	r2, [pc, #124]	; (80047b4 <HAL_TIM_OC_Stop_IT+0x130>)
 8004738:	4293      	cmp	r3, r2
 800473a:	d101      	bne.n	8004740 <HAL_TIM_OC_Stop_IT+0xbc>
 800473c:	2301      	movs	r3, #1
 800473e:	e000      	b.n	8004742 <HAL_TIM_OC_Stop_IT+0xbe>
 8004740:	2300      	movs	r3, #0
 8004742:	2b00      	cmp	r3, #0
 8004744:	d017      	beq.n	8004776 <HAL_TIM_OC_Stop_IT+0xf2>
 8004746:	687b      	ldr	r3, [r7, #4]
 8004748:	681b      	ldr	r3, [r3, #0]
 800474a:	6a1a      	ldr	r2, [r3, #32]
 800474c:	f241 1311 	movw	r3, #4369	; 0x1111
 8004750:	4013      	ands	r3, r2
 8004752:	2b00      	cmp	r3, #0
 8004754:	d10f      	bne.n	8004776 <HAL_TIM_OC_Stop_IT+0xf2>
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	681b      	ldr	r3, [r3, #0]
 800475a:	6a1a      	ldr	r2, [r3, #32]
 800475c:	f240 4344 	movw	r3, #1092	; 0x444
 8004760:	4013      	ands	r3, r2
 8004762:	2b00      	cmp	r3, #0
 8004764:	d107      	bne.n	8004776 <HAL_TIM_OC_Stop_IT+0xf2>
 8004766:	687b      	ldr	r3, [r7, #4]
 8004768:	681b      	ldr	r3, [r3, #0]
 800476a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	681b      	ldr	r3, [r3, #0]
 8004770:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004774:	645a      	str	r2, [r3, #68]	; 0x44
 8004776:	687b      	ldr	r3, [r7, #4]
 8004778:	681b      	ldr	r3, [r3, #0]
 800477a:	6a1a      	ldr	r2, [r3, #32]
 800477c:	f241 1311 	movw	r3, #4369	; 0x1111
 8004780:	4013      	ands	r3, r2
 8004782:	2b00      	cmp	r3, #0
 8004784:	d10f      	bne.n	80047a6 <HAL_TIM_OC_Stop_IT+0x122>
 8004786:	687b      	ldr	r3, [r7, #4]
 8004788:	681b      	ldr	r3, [r3, #0]
 800478a:	6a1a      	ldr	r2, [r3, #32]
 800478c:	f240 4344 	movw	r3, #1092	; 0x444
 8004790:	4013      	ands	r3, r2
 8004792:	2b00      	cmp	r3, #0
 8004794:	d107      	bne.n	80047a6 <HAL_TIM_OC_Stop_IT+0x122>
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	681b      	ldr	r3, [r3, #0]
 800479a:	681a      	ldr	r2, [r3, #0]
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	681b      	ldr	r3, [r3, #0]
 80047a0:	f022 0201 	bic.w	r2, r2, #1
 80047a4:	601a      	str	r2, [r3, #0]
 80047a6:	2300      	movs	r3, #0
 80047a8:	4618      	mov	r0, r3
 80047aa:	3708      	adds	r7, #8
 80047ac:	46bd      	mov	sp, r7
 80047ae:	bd80      	pop	{r7, pc}
 80047b0:	40010000 	.word	0x40010000
 80047b4:	40010400 	.word	0x40010400

080047b8 <HAL_TIM_IC_Init>:
 80047b8:	b580      	push	{r7, lr}
 80047ba:	b082      	sub	sp, #8
 80047bc:	af00      	add	r7, sp, #0
 80047be:	6078      	str	r0, [r7, #4]
 80047c0:	687b      	ldr	r3, [r7, #4]
 80047c2:	2b00      	cmp	r3, #0
 80047c4:	d101      	bne.n	80047ca <HAL_TIM_IC_Init+0x12>
 80047c6:	2301      	movs	r3, #1
 80047c8:	e01d      	b.n	8004806 <HAL_TIM_IC_Init+0x4e>
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80047d0:	b2db      	uxtb	r3, r3
 80047d2:	2b00      	cmp	r3, #0
 80047d4:	d106      	bne.n	80047e4 <HAL_TIM_IC_Init+0x2c>
 80047d6:	687b      	ldr	r3, [r7, #4]
 80047d8:	2200      	movs	r2, #0
 80047da:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80047de:	6878      	ldr	r0, [r7, #4]
 80047e0:	f000 f815 	bl	800480e <HAL_TIM_IC_MspInit>
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	2202      	movs	r2, #2
 80047e8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80047ec:	687b      	ldr	r3, [r7, #4]
 80047ee:	681a      	ldr	r2, [r3, #0]
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	3304      	adds	r3, #4
 80047f4:	4619      	mov	r1, r3
 80047f6:	4610      	mov	r0, r2
 80047f8:	f000 fc00 	bl	8004ffc <TIM_Base_SetConfig>
 80047fc:	687b      	ldr	r3, [r7, #4]
 80047fe:	2201      	movs	r2, #1
 8004800:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004804:	2300      	movs	r3, #0
 8004806:	4618      	mov	r0, r3
 8004808:	3708      	adds	r7, #8
 800480a:	46bd      	mov	sp, r7
 800480c:	bd80      	pop	{r7, pc}

0800480e <HAL_TIM_IC_MspInit>:
 800480e:	b480      	push	{r7}
 8004810:	b083      	sub	sp, #12
 8004812:	af00      	add	r7, sp, #0
 8004814:	6078      	str	r0, [r7, #4]
 8004816:	bf00      	nop
 8004818:	370c      	adds	r7, #12
 800481a:	46bd      	mov	sp, r7
 800481c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004820:	4770      	bx	lr
	...

08004824 <HAL_TIM_IC_Start_IT>:
 8004824:	b580      	push	{r7, lr}
 8004826:	b084      	sub	sp, #16
 8004828:	af00      	add	r7, sp, #0
 800482a:	6078      	str	r0, [r7, #4]
 800482c:	6039      	str	r1, [r7, #0]
 800482e:	683b      	ldr	r3, [r7, #0]
 8004830:	2b0c      	cmp	r3, #12
 8004832:	d841      	bhi.n	80048b8 <HAL_TIM_IC_Start_IT+0x94>
 8004834:	a201      	add	r2, pc, #4	; (adr r2, 800483c <HAL_TIM_IC_Start_IT+0x18>)
 8004836:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800483a:	bf00      	nop
 800483c:	08004871 	.word	0x08004871
 8004840:	080048b9 	.word	0x080048b9
 8004844:	080048b9 	.word	0x080048b9
 8004848:	080048b9 	.word	0x080048b9
 800484c:	08004883 	.word	0x08004883
 8004850:	080048b9 	.word	0x080048b9
 8004854:	080048b9 	.word	0x080048b9
 8004858:	080048b9 	.word	0x080048b9
 800485c:	08004895 	.word	0x08004895
 8004860:	080048b9 	.word	0x080048b9
 8004864:	080048b9 	.word	0x080048b9
 8004868:	080048b9 	.word	0x080048b9
 800486c:	080048a7 	.word	0x080048a7
 8004870:	687b      	ldr	r3, [r7, #4]
 8004872:	681b      	ldr	r3, [r3, #0]
 8004874:	68da      	ldr	r2, [r3, #12]
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	681b      	ldr	r3, [r3, #0]
 800487a:	f042 0202 	orr.w	r2, r2, #2
 800487e:	60da      	str	r2, [r3, #12]
 8004880:	e01b      	b.n	80048ba <HAL_TIM_IC_Start_IT+0x96>
 8004882:	687b      	ldr	r3, [r7, #4]
 8004884:	681b      	ldr	r3, [r3, #0]
 8004886:	68da      	ldr	r2, [r3, #12]
 8004888:	687b      	ldr	r3, [r7, #4]
 800488a:	681b      	ldr	r3, [r3, #0]
 800488c:	f042 0204 	orr.w	r2, r2, #4
 8004890:	60da      	str	r2, [r3, #12]
 8004892:	e012      	b.n	80048ba <HAL_TIM_IC_Start_IT+0x96>
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	681b      	ldr	r3, [r3, #0]
 8004898:	68da      	ldr	r2, [r3, #12]
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	f042 0208 	orr.w	r2, r2, #8
 80048a2:	60da      	str	r2, [r3, #12]
 80048a4:	e009      	b.n	80048ba <HAL_TIM_IC_Start_IT+0x96>
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	681b      	ldr	r3, [r3, #0]
 80048aa:	68da      	ldr	r2, [r3, #12]
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	681b      	ldr	r3, [r3, #0]
 80048b0:	f042 0210 	orr.w	r2, r2, #16
 80048b4:	60da      	str	r2, [r3, #12]
 80048b6:	e000      	b.n	80048ba <HAL_TIM_IC_Start_IT+0x96>
 80048b8:	bf00      	nop
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	681b      	ldr	r3, [r3, #0]
 80048be:	2201      	movs	r2, #1
 80048c0:	6839      	ldr	r1, [r7, #0]
 80048c2:	4618      	mov	r0, r3
 80048c4:	f000 ffae 	bl	8005824 <TIM_CCxChannelCmd>
 80048c8:	687b      	ldr	r3, [r7, #4]
 80048ca:	681b      	ldr	r3, [r3, #0]
 80048cc:	689b      	ldr	r3, [r3, #8]
 80048ce:	f003 0307 	and.w	r3, r3, #7
 80048d2:	60fb      	str	r3, [r7, #12]
 80048d4:	68fb      	ldr	r3, [r7, #12]
 80048d6:	2b06      	cmp	r3, #6
 80048d8:	d007      	beq.n	80048ea <HAL_TIM_IC_Start_IT+0xc6>
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	681b      	ldr	r3, [r3, #0]
 80048de:	681a      	ldr	r2, [r3, #0]
 80048e0:	687b      	ldr	r3, [r7, #4]
 80048e2:	681b      	ldr	r3, [r3, #0]
 80048e4:	f042 0201 	orr.w	r2, r2, #1
 80048e8:	601a      	str	r2, [r3, #0]
 80048ea:	2300      	movs	r3, #0
 80048ec:	4618      	mov	r0, r3
 80048ee:	3710      	adds	r7, #16
 80048f0:	46bd      	mov	sp, r7
 80048f2:	bd80      	pop	{r7, pc}

080048f4 <HAL_TIM_IC_Stop_IT>:
 80048f4:	b580      	push	{r7, lr}
 80048f6:	b082      	sub	sp, #8
 80048f8:	af00      	add	r7, sp, #0
 80048fa:	6078      	str	r0, [r7, #4]
 80048fc:	6039      	str	r1, [r7, #0]
 80048fe:	683b      	ldr	r3, [r7, #0]
 8004900:	2b0c      	cmp	r3, #12
 8004902:	d841      	bhi.n	8004988 <HAL_TIM_IC_Stop_IT+0x94>
 8004904:	a201      	add	r2, pc, #4	; (adr r2, 800490c <HAL_TIM_IC_Stop_IT+0x18>)
 8004906:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800490a:	bf00      	nop
 800490c:	08004941 	.word	0x08004941
 8004910:	08004989 	.word	0x08004989
 8004914:	08004989 	.word	0x08004989
 8004918:	08004989 	.word	0x08004989
 800491c:	08004953 	.word	0x08004953
 8004920:	08004989 	.word	0x08004989
 8004924:	08004989 	.word	0x08004989
 8004928:	08004989 	.word	0x08004989
 800492c:	08004965 	.word	0x08004965
 8004930:	08004989 	.word	0x08004989
 8004934:	08004989 	.word	0x08004989
 8004938:	08004989 	.word	0x08004989
 800493c:	08004977 	.word	0x08004977
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	681b      	ldr	r3, [r3, #0]
 8004944:	68da      	ldr	r2, [r3, #12]
 8004946:	687b      	ldr	r3, [r7, #4]
 8004948:	681b      	ldr	r3, [r3, #0]
 800494a:	f022 0202 	bic.w	r2, r2, #2
 800494e:	60da      	str	r2, [r3, #12]
 8004950:	e01b      	b.n	800498a <HAL_TIM_IC_Stop_IT+0x96>
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	681b      	ldr	r3, [r3, #0]
 8004956:	68da      	ldr	r2, [r3, #12]
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	681b      	ldr	r3, [r3, #0]
 800495c:	f022 0204 	bic.w	r2, r2, #4
 8004960:	60da      	str	r2, [r3, #12]
 8004962:	e012      	b.n	800498a <HAL_TIM_IC_Stop_IT+0x96>
 8004964:	687b      	ldr	r3, [r7, #4]
 8004966:	681b      	ldr	r3, [r3, #0]
 8004968:	68da      	ldr	r2, [r3, #12]
 800496a:	687b      	ldr	r3, [r7, #4]
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	f022 0208 	bic.w	r2, r2, #8
 8004972:	60da      	str	r2, [r3, #12]
 8004974:	e009      	b.n	800498a <HAL_TIM_IC_Stop_IT+0x96>
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	681b      	ldr	r3, [r3, #0]
 800497a:	68da      	ldr	r2, [r3, #12]
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	681b      	ldr	r3, [r3, #0]
 8004980:	f022 0210 	bic.w	r2, r2, #16
 8004984:	60da      	str	r2, [r3, #12]
 8004986:	e000      	b.n	800498a <HAL_TIM_IC_Stop_IT+0x96>
 8004988:	bf00      	nop
 800498a:	687b      	ldr	r3, [r7, #4]
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	2200      	movs	r2, #0
 8004990:	6839      	ldr	r1, [r7, #0]
 8004992:	4618      	mov	r0, r3
 8004994:	f000 ff46 	bl	8005824 <TIM_CCxChannelCmd>
 8004998:	687b      	ldr	r3, [r7, #4]
 800499a:	681b      	ldr	r3, [r3, #0]
 800499c:	6a1a      	ldr	r2, [r3, #32]
 800499e:	f241 1311 	movw	r3, #4369	; 0x1111
 80049a2:	4013      	ands	r3, r2
 80049a4:	2b00      	cmp	r3, #0
 80049a6:	d10f      	bne.n	80049c8 <HAL_TIM_IC_Stop_IT+0xd4>
 80049a8:	687b      	ldr	r3, [r7, #4]
 80049aa:	681b      	ldr	r3, [r3, #0]
 80049ac:	6a1a      	ldr	r2, [r3, #32]
 80049ae:	f240 4344 	movw	r3, #1092	; 0x444
 80049b2:	4013      	ands	r3, r2
 80049b4:	2b00      	cmp	r3, #0
 80049b6:	d107      	bne.n	80049c8 <HAL_TIM_IC_Stop_IT+0xd4>
 80049b8:	687b      	ldr	r3, [r7, #4]
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	681a      	ldr	r2, [r3, #0]
 80049be:	687b      	ldr	r3, [r7, #4]
 80049c0:	681b      	ldr	r3, [r3, #0]
 80049c2:	f022 0201 	bic.w	r2, r2, #1
 80049c6:	601a      	str	r2, [r3, #0]
 80049c8:	2300      	movs	r3, #0
 80049ca:	4618      	mov	r0, r3
 80049cc:	3708      	adds	r7, #8
 80049ce:	46bd      	mov	sp, r7
 80049d0:	bd80      	pop	{r7, pc}
 80049d2:	bf00      	nop

080049d4 <HAL_TIM_IRQHandler>:
 80049d4:	b580      	push	{r7, lr}
 80049d6:	b082      	sub	sp, #8
 80049d8:	af00      	add	r7, sp, #0
 80049da:	6078      	str	r0, [r7, #4]
 80049dc:	687b      	ldr	r3, [r7, #4]
 80049de:	681b      	ldr	r3, [r3, #0]
 80049e0:	691b      	ldr	r3, [r3, #16]
 80049e2:	f003 0302 	and.w	r3, r3, #2
 80049e6:	2b02      	cmp	r3, #2
 80049e8:	d122      	bne.n	8004a30 <HAL_TIM_IRQHandler+0x5c>
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	681b      	ldr	r3, [r3, #0]
 80049ee:	68db      	ldr	r3, [r3, #12]
 80049f0:	f003 0302 	and.w	r3, r3, #2
 80049f4:	2b02      	cmp	r3, #2
 80049f6:	d11b      	bne.n	8004a30 <HAL_TIM_IRQHandler+0x5c>
 80049f8:	687b      	ldr	r3, [r7, #4]
 80049fa:	681b      	ldr	r3, [r3, #0]
 80049fc:	f06f 0202 	mvn.w	r2, #2
 8004a00:	611a      	str	r2, [r3, #16]
 8004a02:	687b      	ldr	r3, [r7, #4]
 8004a04:	2201      	movs	r2, #1
 8004a06:	771a      	strb	r2, [r3, #28]
 8004a08:	687b      	ldr	r3, [r7, #4]
 8004a0a:	681b      	ldr	r3, [r3, #0]
 8004a0c:	699b      	ldr	r3, [r3, #24]
 8004a0e:	f003 0303 	and.w	r3, r3, #3
 8004a12:	2b00      	cmp	r3, #0
 8004a14:	d003      	beq.n	8004a1e <HAL_TIM_IRQHandler+0x4a>
 8004a16:	6878      	ldr	r0, [r7, #4]
 8004a18:	f7fd fd88 	bl	800252c <HAL_TIM_IC_CaptureCallback>
 8004a1c:	e005      	b.n	8004a2a <HAL_TIM_IRQHandler+0x56>
 8004a1e:	6878      	ldr	r0, [r7, #4]
 8004a20:	f7fd fd56 	bl	80024d0 <HAL_TIM_OC_DelayElapsedCallback>
 8004a24:	6878      	ldr	r0, [r7, #4]
 8004a26:	f000 fad5 	bl	8004fd4 <HAL_TIM_PWM_PulseFinishedCallback>
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	2200      	movs	r2, #0
 8004a2e:	771a      	strb	r2, [r3, #28]
 8004a30:	687b      	ldr	r3, [r7, #4]
 8004a32:	681b      	ldr	r3, [r3, #0]
 8004a34:	691b      	ldr	r3, [r3, #16]
 8004a36:	f003 0304 	and.w	r3, r3, #4
 8004a3a:	2b04      	cmp	r3, #4
 8004a3c:	d122      	bne.n	8004a84 <HAL_TIM_IRQHandler+0xb0>
 8004a3e:	687b      	ldr	r3, [r7, #4]
 8004a40:	681b      	ldr	r3, [r3, #0]
 8004a42:	68db      	ldr	r3, [r3, #12]
 8004a44:	f003 0304 	and.w	r3, r3, #4
 8004a48:	2b04      	cmp	r3, #4
 8004a4a:	d11b      	bne.n	8004a84 <HAL_TIM_IRQHandler+0xb0>
 8004a4c:	687b      	ldr	r3, [r7, #4]
 8004a4e:	681b      	ldr	r3, [r3, #0]
 8004a50:	f06f 0204 	mvn.w	r2, #4
 8004a54:	611a      	str	r2, [r3, #16]
 8004a56:	687b      	ldr	r3, [r7, #4]
 8004a58:	2202      	movs	r2, #2
 8004a5a:	771a      	strb	r2, [r3, #28]
 8004a5c:	687b      	ldr	r3, [r7, #4]
 8004a5e:	681b      	ldr	r3, [r3, #0]
 8004a60:	699b      	ldr	r3, [r3, #24]
 8004a62:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004a66:	2b00      	cmp	r3, #0
 8004a68:	d003      	beq.n	8004a72 <HAL_TIM_IRQHandler+0x9e>
 8004a6a:	6878      	ldr	r0, [r7, #4]
 8004a6c:	f7fd fd5e 	bl	800252c <HAL_TIM_IC_CaptureCallback>
 8004a70:	e005      	b.n	8004a7e <HAL_TIM_IRQHandler+0xaa>
 8004a72:	6878      	ldr	r0, [r7, #4]
 8004a74:	f7fd fd2c 	bl	80024d0 <HAL_TIM_OC_DelayElapsedCallback>
 8004a78:	6878      	ldr	r0, [r7, #4]
 8004a7a:	f000 faab 	bl	8004fd4 <HAL_TIM_PWM_PulseFinishedCallback>
 8004a7e:	687b      	ldr	r3, [r7, #4]
 8004a80:	2200      	movs	r2, #0
 8004a82:	771a      	strb	r2, [r3, #28]
 8004a84:	687b      	ldr	r3, [r7, #4]
 8004a86:	681b      	ldr	r3, [r3, #0]
 8004a88:	691b      	ldr	r3, [r3, #16]
 8004a8a:	f003 0308 	and.w	r3, r3, #8
 8004a8e:	2b08      	cmp	r3, #8
 8004a90:	d122      	bne.n	8004ad8 <HAL_TIM_IRQHandler+0x104>
 8004a92:	687b      	ldr	r3, [r7, #4]
 8004a94:	681b      	ldr	r3, [r3, #0]
 8004a96:	68db      	ldr	r3, [r3, #12]
 8004a98:	f003 0308 	and.w	r3, r3, #8
 8004a9c:	2b08      	cmp	r3, #8
 8004a9e:	d11b      	bne.n	8004ad8 <HAL_TIM_IRQHandler+0x104>
 8004aa0:	687b      	ldr	r3, [r7, #4]
 8004aa2:	681b      	ldr	r3, [r3, #0]
 8004aa4:	f06f 0208 	mvn.w	r2, #8
 8004aa8:	611a      	str	r2, [r3, #16]
 8004aaa:	687b      	ldr	r3, [r7, #4]
 8004aac:	2204      	movs	r2, #4
 8004aae:	771a      	strb	r2, [r3, #28]
 8004ab0:	687b      	ldr	r3, [r7, #4]
 8004ab2:	681b      	ldr	r3, [r3, #0]
 8004ab4:	69db      	ldr	r3, [r3, #28]
 8004ab6:	f003 0303 	and.w	r3, r3, #3
 8004aba:	2b00      	cmp	r3, #0
 8004abc:	d003      	beq.n	8004ac6 <HAL_TIM_IRQHandler+0xf2>
 8004abe:	6878      	ldr	r0, [r7, #4]
 8004ac0:	f7fd fd34 	bl	800252c <HAL_TIM_IC_CaptureCallback>
 8004ac4:	e005      	b.n	8004ad2 <HAL_TIM_IRQHandler+0xfe>
 8004ac6:	6878      	ldr	r0, [r7, #4]
 8004ac8:	f7fd fd02 	bl	80024d0 <HAL_TIM_OC_DelayElapsedCallback>
 8004acc:	6878      	ldr	r0, [r7, #4]
 8004ace:	f000 fa81 	bl	8004fd4 <HAL_TIM_PWM_PulseFinishedCallback>
 8004ad2:	687b      	ldr	r3, [r7, #4]
 8004ad4:	2200      	movs	r2, #0
 8004ad6:	771a      	strb	r2, [r3, #28]
 8004ad8:	687b      	ldr	r3, [r7, #4]
 8004ada:	681b      	ldr	r3, [r3, #0]
 8004adc:	691b      	ldr	r3, [r3, #16]
 8004ade:	f003 0310 	and.w	r3, r3, #16
 8004ae2:	2b10      	cmp	r3, #16
 8004ae4:	d122      	bne.n	8004b2c <HAL_TIM_IRQHandler+0x158>
 8004ae6:	687b      	ldr	r3, [r7, #4]
 8004ae8:	681b      	ldr	r3, [r3, #0]
 8004aea:	68db      	ldr	r3, [r3, #12]
 8004aec:	f003 0310 	and.w	r3, r3, #16
 8004af0:	2b10      	cmp	r3, #16
 8004af2:	d11b      	bne.n	8004b2c <HAL_TIM_IRQHandler+0x158>
 8004af4:	687b      	ldr	r3, [r7, #4]
 8004af6:	681b      	ldr	r3, [r3, #0]
 8004af8:	f06f 0210 	mvn.w	r2, #16
 8004afc:	611a      	str	r2, [r3, #16]
 8004afe:	687b      	ldr	r3, [r7, #4]
 8004b00:	2208      	movs	r2, #8
 8004b02:	771a      	strb	r2, [r3, #28]
 8004b04:	687b      	ldr	r3, [r7, #4]
 8004b06:	681b      	ldr	r3, [r3, #0]
 8004b08:	69db      	ldr	r3, [r3, #28]
 8004b0a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004b0e:	2b00      	cmp	r3, #0
 8004b10:	d003      	beq.n	8004b1a <HAL_TIM_IRQHandler+0x146>
 8004b12:	6878      	ldr	r0, [r7, #4]
 8004b14:	f7fd fd0a 	bl	800252c <HAL_TIM_IC_CaptureCallback>
 8004b18:	e005      	b.n	8004b26 <HAL_TIM_IRQHandler+0x152>
 8004b1a:	6878      	ldr	r0, [r7, #4]
 8004b1c:	f7fd fcd8 	bl	80024d0 <HAL_TIM_OC_DelayElapsedCallback>
 8004b20:	6878      	ldr	r0, [r7, #4]
 8004b22:	f000 fa57 	bl	8004fd4 <HAL_TIM_PWM_PulseFinishedCallback>
 8004b26:	687b      	ldr	r3, [r7, #4]
 8004b28:	2200      	movs	r2, #0
 8004b2a:	771a      	strb	r2, [r3, #28]
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	681b      	ldr	r3, [r3, #0]
 8004b30:	691b      	ldr	r3, [r3, #16]
 8004b32:	f003 0301 	and.w	r3, r3, #1
 8004b36:	2b01      	cmp	r3, #1
 8004b38:	d10e      	bne.n	8004b58 <HAL_TIM_IRQHandler+0x184>
 8004b3a:	687b      	ldr	r3, [r7, #4]
 8004b3c:	681b      	ldr	r3, [r3, #0]
 8004b3e:	68db      	ldr	r3, [r3, #12]
 8004b40:	f003 0301 	and.w	r3, r3, #1
 8004b44:	2b01      	cmp	r3, #1
 8004b46:	d107      	bne.n	8004b58 <HAL_TIM_IRQHandler+0x184>
 8004b48:	687b      	ldr	r3, [r7, #4]
 8004b4a:	681b      	ldr	r3, [r3, #0]
 8004b4c:	f06f 0201 	mvn.w	r2, #1
 8004b50:	611a      	str	r2, [r3, #16]
 8004b52:	6878      	ldr	r0, [r7, #4]
 8004b54:	f7fd fcd8 	bl	8002508 <HAL_TIM_PeriodElapsedCallback>
 8004b58:	687b      	ldr	r3, [r7, #4]
 8004b5a:	681b      	ldr	r3, [r3, #0]
 8004b5c:	691b      	ldr	r3, [r3, #16]
 8004b5e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004b62:	2b80      	cmp	r3, #128	; 0x80
 8004b64:	d10e      	bne.n	8004b84 <HAL_TIM_IRQHandler+0x1b0>
 8004b66:	687b      	ldr	r3, [r7, #4]
 8004b68:	681b      	ldr	r3, [r3, #0]
 8004b6a:	68db      	ldr	r3, [r3, #12]
 8004b6c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004b70:	2b80      	cmp	r3, #128	; 0x80
 8004b72:	d107      	bne.n	8004b84 <HAL_TIM_IRQHandler+0x1b0>
 8004b74:	687b      	ldr	r3, [r7, #4]
 8004b76:	681b      	ldr	r3, [r3, #0]
 8004b78:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8004b7c:	611a      	str	r2, [r3, #16]
 8004b7e:	6878      	ldr	r0, [r7, #4]
 8004b80:	f000 fefc 	bl	800597c <HAL_TIMEx_BreakCallback>
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	681b      	ldr	r3, [r3, #0]
 8004b88:	691b      	ldr	r3, [r3, #16]
 8004b8a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004b8e:	2b40      	cmp	r3, #64	; 0x40
 8004b90:	d10e      	bne.n	8004bb0 <HAL_TIM_IRQHandler+0x1dc>
 8004b92:	687b      	ldr	r3, [r7, #4]
 8004b94:	681b      	ldr	r3, [r3, #0]
 8004b96:	68db      	ldr	r3, [r3, #12]
 8004b98:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004b9c:	2b40      	cmp	r3, #64	; 0x40
 8004b9e:	d107      	bne.n	8004bb0 <HAL_TIM_IRQHandler+0x1dc>
 8004ba0:	687b      	ldr	r3, [r7, #4]
 8004ba2:	681b      	ldr	r3, [r3, #0]
 8004ba4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8004ba8:	611a      	str	r2, [r3, #16]
 8004baa:	6878      	ldr	r0, [r7, #4]
 8004bac:	f000 fa1c 	bl	8004fe8 <HAL_TIM_TriggerCallback>
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	681b      	ldr	r3, [r3, #0]
 8004bb4:	691b      	ldr	r3, [r3, #16]
 8004bb6:	f003 0320 	and.w	r3, r3, #32
 8004bba:	2b20      	cmp	r3, #32
 8004bbc:	d10e      	bne.n	8004bdc <HAL_TIM_IRQHandler+0x208>
 8004bbe:	687b      	ldr	r3, [r7, #4]
 8004bc0:	681b      	ldr	r3, [r3, #0]
 8004bc2:	68db      	ldr	r3, [r3, #12]
 8004bc4:	f003 0320 	and.w	r3, r3, #32
 8004bc8:	2b20      	cmp	r3, #32
 8004bca:	d107      	bne.n	8004bdc <HAL_TIM_IRQHandler+0x208>
 8004bcc:	687b      	ldr	r3, [r7, #4]
 8004bce:	681b      	ldr	r3, [r3, #0]
 8004bd0:	f06f 0220 	mvn.w	r2, #32
 8004bd4:	611a      	str	r2, [r3, #16]
 8004bd6:	6878      	ldr	r0, [r7, #4]
 8004bd8:	f000 fec6 	bl	8005968 <HAL_TIMEx_CommutCallback>
 8004bdc:	bf00      	nop
 8004bde:	3708      	adds	r7, #8
 8004be0:	46bd      	mov	sp, r7
 8004be2:	bd80      	pop	{r7, pc}

08004be4 <HAL_TIM_OC_ConfigChannel>:
 8004be4:	b580      	push	{r7, lr}
 8004be6:	b084      	sub	sp, #16
 8004be8:	af00      	add	r7, sp, #0
 8004bea:	60f8      	str	r0, [r7, #12]
 8004bec:	60b9      	str	r1, [r7, #8]
 8004bee:	607a      	str	r2, [r7, #4]
 8004bf0:	68fb      	ldr	r3, [r7, #12]
 8004bf2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004bf6:	2b01      	cmp	r3, #1
 8004bf8:	d101      	bne.n	8004bfe <HAL_TIM_OC_ConfigChannel+0x1a>
 8004bfa:	2302      	movs	r3, #2
 8004bfc:	e04e      	b.n	8004c9c <HAL_TIM_OC_ConfigChannel+0xb8>
 8004bfe:	68fb      	ldr	r3, [r7, #12]
 8004c00:	2201      	movs	r2, #1
 8004c02:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004c06:	68fb      	ldr	r3, [r7, #12]
 8004c08:	2202      	movs	r2, #2
 8004c0a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004c0e:	687b      	ldr	r3, [r7, #4]
 8004c10:	2b0c      	cmp	r3, #12
 8004c12:	d839      	bhi.n	8004c88 <HAL_TIM_OC_ConfigChannel+0xa4>
 8004c14:	a201      	add	r2, pc, #4	; (adr r2, 8004c1c <HAL_TIM_OC_ConfigChannel+0x38>)
 8004c16:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004c1a:	bf00      	nop
 8004c1c:	08004c51 	.word	0x08004c51
 8004c20:	08004c89 	.word	0x08004c89
 8004c24:	08004c89 	.word	0x08004c89
 8004c28:	08004c89 	.word	0x08004c89
 8004c2c:	08004c5f 	.word	0x08004c5f
 8004c30:	08004c89 	.word	0x08004c89
 8004c34:	08004c89 	.word	0x08004c89
 8004c38:	08004c89 	.word	0x08004c89
 8004c3c:	08004c6d 	.word	0x08004c6d
 8004c40:	08004c89 	.word	0x08004c89
 8004c44:	08004c89 	.word	0x08004c89
 8004c48:	08004c89 	.word	0x08004c89
 8004c4c:	08004c7b 	.word	0x08004c7b
 8004c50:	68fb      	ldr	r3, [r7, #12]
 8004c52:	681b      	ldr	r3, [r3, #0]
 8004c54:	68b9      	ldr	r1, [r7, #8]
 8004c56:	4618      	mov	r0, r3
 8004c58:	f000 fa70 	bl	800513c <TIM_OC1_SetConfig>
 8004c5c:	e015      	b.n	8004c8a <HAL_TIM_OC_ConfigChannel+0xa6>
 8004c5e:	68fb      	ldr	r3, [r7, #12]
 8004c60:	681b      	ldr	r3, [r3, #0]
 8004c62:	68b9      	ldr	r1, [r7, #8]
 8004c64:	4618      	mov	r0, r3
 8004c66:	f000 fad9 	bl	800521c <TIM_OC2_SetConfig>
 8004c6a:	e00e      	b.n	8004c8a <HAL_TIM_OC_ConfigChannel+0xa6>
 8004c6c:	68fb      	ldr	r3, [r7, #12]
 8004c6e:	681b      	ldr	r3, [r3, #0]
 8004c70:	68b9      	ldr	r1, [r7, #8]
 8004c72:	4618      	mov	r0, r3
 8004c74:	f000 fb48 	bl	8005308 <TIM_OC3_SetConfig>
 8004c78:	e007      	b.n	8004c8a <HAL_TIM_OC_ConfigChannel+0xa6>
 8004c7a:	68fb      	ldr	r3, [r7, #12]
 8004c7c:	681b      	ldr	r3, [r3, #0]
 8004c7e:	68b9      	ldr	r1, [r7, #8]
 8004c80:	4618      	mov	r0, r3
 8004c82:	f000 fbb5 	bl	80053f0 <TIM_OC4_SetConfig>
 8004c86:	e000      	b.n	8004c8a <HAL_TIM_OC_ConfigChannel+0xa6>
 8004c88:	bf00      	nop
 8004c8a:	68fb      	ldr	r3, [r7, #12]
 8004c8c:	2201      	movs	r2, #1
 8004c8e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004c92:	68fb      	ldr	r3, [r7, #12]
 8004c94:	2200      	movs	r2, #0
 8004c96:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004c9a:	2300      	movs	r3, #0
 8004c9c:	4618      	mov	r0, r3
 8004c9e:	3710      	adds	r7, #16
 8004ca0:	46bd      	mov	sp, r7
 8004ca2:	bd80      	pop	{r7, pc}

08004ca4 <HAL_TIM_IC_ConfigChannel>:
 8004ca4:	b580      	push	{r7, lr}
 8004ca6:	b084      	sub	sp, #16
 8004ca8:	af00      	add	r7, sp, #0
 8004caa:	60f8      	str	r0, [r7, #12]
 8004cac:	60b9      	str	r1, [r7, #8]
 8004cae:	607a      	str	r2, [r7, #4]
 8004cb0:	68fb      	ldr	r3, [r7, #12]
 8004cb2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004cb6:	2b01      	cmp	r3, #1
 8004cb8:	d101      	bne.n	8004cbe <HAL_TIM_IC_ConfigChannel+0x1a>
 8004cba:	2302      	movs	r3, #2
 8004cbc:	e08a      	b.n	8004dd4 <HAL_TIM_IC_ConfigChannel+0x130>
 8004cbe:	68fb      	ldr	r3, [r7, #12]
 8004cc0:	2201      	movs	r2, #1
 8004cc2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004cc6:	68fb      	ldr	r3, [r7, #12]
 8004cc8:	2202      	movs	r2, #2
 8004cca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004cce:	687b      	ldr	r3, [r7, #4]
 8004cd0:	2b00      	cmp	r3, #0
 8004cd2:	d11b      	bne.n	8004d0c <HAL_TIM_IC_ConfigChannel+0x68>
 8004cd4:	68fb      	ldr	r3, [r7, #12]
 8004cd6:	6818      	ldr	r0, [r3, #0]
 8004cd8:	68bb      	ldr	r3, [r7, #8]
 8004cda:	6819      	ldr	r1, [r3, #0]
 8004cdc:	68bb      	ldr	r3, [r7, #8]
 8004cde:	685a      	ldr	r2, [r3, #4]
 8004ce0:	68bb      	ldr	r3, [r7, #8]
 8004ce2:	68db      	ldr	r3, [r3, #12]
 8004ce4:	f000 fbda 	bl	800549c <TIM_TI1_SetConfig>
 8004ce8:	68fb      	ldr	r3, [r7, #12]
 8004cea:	681b      	ldr	r3, [r3, #0]
 8004cec:	699a      	ldr	r2, [r3, #24]
 8004cee:	68fb      	ldr	r3, [r7, #12]
 8004cf0:	681b      	ldr	r3, [r3, #0]
 8004cf2:	f022 020c 	bic.w	r2, r2, #12
 8004cf6:	619a      	str	r2, [r3, #24]
 8004cf8:	68fb      	ldr	r3, [r7, #12]
 8004cfa:	681b      	ldr	r3, [r3, #0]
 8004cfc:	6999      	ldr	r1, [r3, #24]
 8004cfe:	68bb      	ldr	r3, [r7, #8]
 8004d00:	689a      	ldr	r2, [r3, #8]
 8004d02:	68fb      	ldr	r3, [r7, #12]
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	430a      	orrs	r2, r1
 8004d08:	619a      	str	r2, [r3, #24]
 8004d0a:	e05a      	b.n	8004dc2 <HAL_TIM_IC_ConfigChannel+0x11e>
 8004d0c:	687b      	ldr	r3, [r7, #4]
 8004d0e:	2b04      	cmp	r3, #4
 8004d10:	d11c      	bne.n	8004d4c <HAL_TIM_IC_ConfigChannel+0xa8>
 8004d12:	68fb      	ldr	r3, [r7, #12]
 8004d14:	6818      	ldr	r0, [r3, #0]
 8004d16:	68bb      	ldr	r3, [r7, #8]
 8004d18:	6819      	ldr	r1, [r3, #0]
 8004d1a:	68bb      	ldr	r3, [r7, #8]
 8004d1c:	685a      	ldr	r2, [r3, #4]
 8004d1e:	68bb      	ldr	r3, [r7, #8]
 8004d20:	68db      	ldr	r3, [r3, #12]
 8004d22:	f000 fc5e 	bl	80055e2 <TIM_TI2_SetConfig>
 8004d26:	68fb      	ldr	r3, [r7, #12]
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	699a      	ldr	r2, [r3, #24]
 8004d2c:	68fb      	ldr	r3, [r7, #12]
 8004d2e:	681b      	ldr	r3, [r3, #0]
 8004d30:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8004d34:	619a      	str	r2, [r3, #24]
 8004d36:	68fb      	ldr	r3, [r7, #12]
 8004d38:	681b      	ldr	r3, [r3, #0]
 8004d3a:	6999      	ldr	r1, [r3, #24]
 8004d3c:	68bb      	ldr	r3, [r7, #8]
 8004d3e:	689b      	ldr	r3, [r3, #8]
 8004d40:	021a      	lsls	r2, r3, #8
 8004d42:	68fb      	ldr	r3, [r7, #12]
 8004d44:	681b      	ldr	r3, [r3, #0]
 8004d46:	430a      	orrs	r2, r1
 8004d48:	619a      	str	r2, [r3, #24]
 8004d4a:	e03a      	b.n	8004dc2 <HAL_TIM_IC_ConfigChannel+0x11e>
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	2b08      	cmp	r3, #8
 8004d50:	d11b      	bne.n	8004d8a <HAL_TIM_IC_ConfigChannel+0xe6>
 8004d52:	68fb      	ldr	r3, [r7, #12]
 8004d54:	6818      	ldr	r0, [r3, #0]
 8004d56:	68bb      	ldr	r3, [r7, #8]
 8004d58:	6819      	ldr	r1, [r3, #0]
 8004d5a:	68bb      	ldr	r3, [r7, #8]
 8004d5c:	685a      	ldr	r2, [r3, #4]
 8004d5e:	68bb      	ldr	r3, [r7, #8]
 8004d60:	68db      	ldr	r3, [r3, #12]
 8004d62:	f000 fcab 	bl	80056bc <TIM_TI3_SetConfig>
 8004d66:	68fb      	ldr	r3, [r7, #12]
 8004d68:	681b      	ldr	r3, [r3, #0]
 8004d6a:	69da      	ldr	r2, [r3, #28]
 8004d6c:	68fb      	ldr	r3, [r7, #12]
 8004d6e:	681b      	ldr	r3, [r3, #0]
 8004d70:	f022 020c 	bic.w	r2, r2, #12
 8004d74:	61da      	str	r2, [r3, #28]
 8004d76:	68fb      	ldr	r3, [r7, #12]
 8004d78:	681b      	ldr	r3, [r3, #0]
 8004d7a:	69d9      	ldr	r1, [r3, #28]
 8004d7c:	68bb      	ldr	r3, [r7, #8]
 8004d7e:	689a      	ldr	r2, [r3, #8]
 8004d80:	68fb      	ldr	r3, [r7, #12]
 8004d82:	681b      	ldr	r3, [r3, #0]
 8004d84:	430a      	orrs	r2, r1
 8004d86:	61da      	str	r2, [r3, #28]
 8004d88:	e01b      	b.n	8004dc2 <HAL_TIM_IC_ConfigChannel+0x11e>
 8004d8a:	68fb      	ldr	r3, [r7, #12]
 8004d8c:	6818      	ldr	r0, [r3, #0]
 8004d8e:	68bb      	ldr	r3, [r7, #8]
 8004d90:	6819      	ldr	r1, [r3, #0]
 8004d92:	68bb      	ldr	r3, [r7, #8]
 8004d94:	685a      	ldr	r2, [r3, #4]
 8004d96:	68bb      	ldr	r3, [r7, #8]
 8004d98:	68db      	ldr	r3, [r3, #12]
 8004d9a:	f000 fccb 	bl	8005734 <TIM_TI4_SetConfig>
 8004d9e:	68fb      	ldr	r3, [r7, #12]
 8004da0:	681b      	ldr	r3, [r3, #0]
 8004da2:	69da      	ldr	r2, [r3, #28]
 8004da4:	68fb      	ldr	r3, [r7, #12]
 8004da6:	681b      	ldr	r3, [r3, #0]
 8004da8:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8004dac:	61da      	str	r2, [r3, #28]
 8004dae:	68fb      	ldr	r3, [r7, #12]
 8004db0:	681b      	ldr	r3, [r3, #0]
 8004db2:	69d9      	ldr	r1, [r3, #28]
 8004db4:	68bb      	ldr	r3, [r7, #8]
 8004db6:	689b      	ldr	r3, [r3, #8]
 8004db8:	021a      	lsls	r2, r3, #8
 8004dba:	68fb      	ldr	r3, [r7, #12]
 8004dbc:	681b      	ldr	r3, [r3, #0]
 8004dbe:	430a      	orrs	r2, r1
 8004dc0:	61da      	str	r2, [r3, #28]
 8004dc2:	68fb      	ldr	r3, [r7, #12]
 8004dc4:	2201      	movs	r2, #1
 8004dc6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004dca:	68fb      	ldr	r3, [r7, #12]
 8004dcc:	2200      	movs	r2, #0
 8004dce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004dd2:	2300      	movs	r3, #0
 8004dd4:	4618      	mov	r0, r3
 8004dd6:	3710      	adds	r7, #16
 8004dd8:	46bd      	mov	sp, r7
 8004dda:	bd80      	pop	{r7, pc}

08004ddc <HAL_TIM_ConfigClockSource>:
 8004ddc:	b580      	push	{r7, lr}
 8004dde:	b084      	sub	sp, #16
 8004de0:	af00      	add	r7, sp, #0
 8004de2:	6078      	str	r0, [r7, #4]
 8004de4:	6039      	str	r1, [r7, #0]
 8004de6:	687b      	ldr	r3, [r7, #4]
 8004de8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004dec:	2b01      	cmp	r3, #1
 8004dee:	d101      	bne.n	8004df4 <HAL_TIM_ConfigClockSource+0x18>
 8004df0:	2302      	movs	r3, #2
 8004df2:	e0a6      	b.n	8004f42 <HAL_TIM_ConfigClockSource+0x166>
 8004df4:	687b      	ldr	r3, [r7, #4]
 8004df6:	2201      	movs	r2, #1
 8004df8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004dfc:	687b      	ldr	r3, [r7, #4]
 8004dfe:	2202      	movs	r2, #2
 8004e00:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	681b      	ldr	r3, [r3, #0]
 8004e08:	689b      	ldr	r3, [r3, #8]
 8004e0a:	60fb      	str	r3, [r7, #12]
 8004e0c:	68fb      	ldr	r3, [r7, #12]
 8004e0e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8004e12:	60fb      	str	r3, [r7, #12]
 8004e14:	68fb      	ldr	r3, [r7, #12]
 8004e16:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8004e1a:	60fb      	str	r3, [r7, #12]
 8004e1c:	687b      	ldr	r3, [r7, #4]
 8004e1e:	681b      	ldr	r3, [r3, #0]
 8004e20:	68fa      	ldr	r2, [r7, #12]
 8004e22:	609a      	str	r2, [r3, #8]
 8004e24:	683b      	ldr	r3, [r7, #0]
 8004e26:	681b      	ldr	r3, [r3, #0]
 8004e28:	2b40      	cmp	r3, #64	; 0x40
 8004e2a:	d067      	beq.n	8004efc <HAL_TIM_ConfigClockSource+0x120>
 8004e2c:	2b40      	cmp	r3, #64	; 0x40
 8004e2e:	d80b      	bhi.n	8004e48 <HAL_TIM_ConfigClockSource+0x6c>
 8004e30:	2b10      	cmp	r3, #16
 8004e32:	d073      	beq.n	8004f1c <HAL_TIM_ConfigClockSource+0x140>
 8004e34:	2b10      	cmp	r3, #16
 8004e36:	d802      	bhi.n	8004e3e <HAL_TIM_ConfigClockSource+0x62>
 8004e38:	2b00      	cmp	r3, #0
 8004e3a:	d06f      	beq.n	8004f1c <HAL_TIM_ConfigClockSource+0x140>
 8004e3c:	e078      	b.n	8004f30 <HAL_TIM_ConfigClockSource+0x154>
 8004e3e:	2b20      	cmp	r3, #32
 8004e40:	d06c      	beq.n	8004f1c <HAL_TIM_ConfigClockSource+0x140>
 8004e42:	2b30      	cmp	r3, #48	; 0x30
 8004e44:	d06a      	beq.n	8004f1c <HAL_TIM_ConfigClockSource+0x140>
 8004e46:	e073      	b.n	8004f30 <HAL_TIM_ConfigClockSource+0x154>
 8004e48:	2b70      	cmp	r3, #112	; 0x70
 8004e4a:	d00d      	beq.n	8004e68 <HAL_TIM_ConfigClockSource+0x8c>
 8004e4c:	2b70      	cmp	r3, #112	; 0x70
 8004e4e:	d804      	bhi.n	8004e5a <HAL_TIM_ConfigClockSource+0x7e>
 8004e50:	2b50      	cmp	r3, #80	; 0x50
 8004e52:	d033      	beq.n	8004ebc <HAL_TIM_ConfigClockSource+0xe0>
 8004e54:	2b60      	cmp	r3, #96	; 0x60
 8004e56:	d041      	beq.n	8004edc <HAL_TIM_ConfigClockSource+0x100>
 8004e58:	e06a      	b.n	8004f30 <HAL_TIM_ConfigClockSource+0x154>
 8004e5a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004e5e:	d066      	beq.n	8004f2e <HAL_TIM_ConfigClockSource+0x152>
 8004e60:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004e64:	d017      	beq.n	8004e96 <HAL_TIM_ConfigClockSource+0xba>
 8004e66:	e063      	b.n	8004f30 <HAL_TIM_ConfigClockSource+0x154>
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	6818      	ldr	r0, [r3, #0]
 8004e6c:	683b      	ldr	r3, [r7, #0]
 8004e6e:	6899      	ldr	r1, [r3, #8]
 8004e70:	683b      	ldr	r3, [r7, #0]
 8004e72:	685a      	ldr	r2, [r3, #4]
 8004e74:	683b      	ldr	r3, [r7, #0]
 8004e76:	68db      	ldr	r3, [r3, #12]
 8004e78:	f000 fcb4 	bl	80057e4 <TIM_ETR_SetConfig>
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	689b      	ldr	r3, [r3, #8]
 8004e82:	60fb      	str	r3, [r7, #12]
 8004e84:	68fb      	ldr	r3, [r7, #12]
 8004e86:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8004e8a:	60fb      	str	r3, [r7, #12]
 8004e8c:	687b      	ldr	r3, [r7, #4]
 8004e8e:	681b      	ldr	r3, [r3, #0]
 8004e90:	68fa      	ldr	r2, [r7, #12]
 8004e92:	609a      	str	r2, [r3, #8]
 8004e94:	e04c      	b.n	8004f30 <HAL_TIM_ConfigClockSource+0x154>
 8004e96:	687b      	ldr	r3, [r7, #4]
 8004e98:	6818      	ldr	r0, [r3, #0]
 8004e9a:	683b      	ldr	r3, [r7, #0]
 8004e9c:	6899      	ldr	r1, [r3, #8]
 8004e9e:	683b      	ldr	r3, [r7, #0]
 8004ea0:	685a      	ldr	r2, [r3, #4]
 8004ea2:	683b      	ldr	r3, [r7, #0]
 8004ea4:	68db      	ldr	r3, [r3, #12]
 8004ea6:	f000 fc9d 	bl	80057e4 <TIM_ETR_SetConfig>
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	681b      	ldr	r3, [r3, #0]
 8004eae:	689a      	ldr	r2, [r3, #8]
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	681b      	ldr	r3, [r3, #0]
 8004eb4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004eb8:	609a      	str	r2, [r3, #8]
 8004eba:	e039      	b.n	8004f30 <HAL_TIM_ConfigClockSource+0x154>
 8004ebc:	687b      	ldr	r3, [r7, #4]
 8004ebe:	6818      	ldr	r0, [r3, #0]
 8004ec0:	683b      	ldr	r3, [r7, #0]
 8004ec2:	6859      	ldr	r1, [r3, #4]
 8004ec4:	683b      	ldr	r3, [r7, #0]
 8004ec6:	68db      	ldr	r3, [r3, #12]
 8004ec8:	461a      	mov	r2, r3
 8004eca:	f000 fb5b 	bl	8005584 <TIM_TI1_ConfigInputStage>
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	681b      	ldr	r3, [r3, #0]
 8004ed2:	2150      	movs	r1, #80	; 0x50
 8004ed4:	4618      	mov	r0, r3
 8004ed6:	f000 fc6a 	bl	80057ae <TIM_ITRx_SetConfig>
 8004eda:	e029      	b.n	8004f30 <HAL_TIM_ConfigClockSource+0x154>
 8004edc:	687b      	ldr	r3, [r7, #4]
 8004ede:	6818      	ldr	r0, [r3, #0]
 8004ee0:	683b      	ldr	r3, [r7, #0]
 8004ee2:	6859      	ldr	r1, [r3, #4]
 8004ee4:	683b      	ldr	r3, [r7, #0]
 8004ee6:	68db      	ldr	r3, [r3, #12]
 8004ee8:	461a      	mov	r2, r3
 8004eea:	f000 fbb7 	bl	800565c <TIM_TI2_ConfigInputStage>
 8004eee:	687b      	ldr	r3, [r7, #4]
 8004ef0:	681b      	ldr	r3, [r3, #0]
 8004ef2:	2160      	movs	r1, #96	; 0x60
 8004ef4:	4618      	mov	r0, r3
 8004ef6:	f000 fc5a 	bl	80057ae <TIM_ITRx_SetConfig>
 8004efa:	e019      	b.n	8004f30 <HAL_TIM_ConfigClockSource+0x154>
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	6818      	ldr	r0, [r3, #0]
 8004f00:	683b      	ldr	r3, [r7, #0]
 8004f02:	6859      	ldr	r1, [r3, #4]
 8004f04:	683b      	ldr	r3, [r7, #0]
 8004f06:	68db      	ldr	r3, [r3, #12]
 8004f08:	461a      	mov	r2, r3
 8004f0a:	f000 fb3b 	bl	8005584 <TIM_TI1_ConfigInputStage>
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	681b      	ldr	r3, [r3, #0]
 8004f12:	2140      	movs	r1, #64	; 0x40
 8004f14:	4618      	mov	r0, r3
 8004f16:	f000 fc4a 	bl	80057ae <TIM_ITRx_SetConfig>
 8004f1a:	e009      	b.n	8004f30 <HAL_TIM_ConfigClockSource+0x154>
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	681a      	ldr	r2, [r3, #0]
 8004f20:	683b      	ldr	r3, [r7, #0]
 8004f22:	681b      	ldr	r3, [r3, #0]
 8004f24:	4619      	mov	r1, r3
 8004f26:	4610      	mov	r0, r2
 8004f28:	f000 fc41 	bl	80057ae <TIM_ITRx_SetConfig>
 8004f2c:	e000      	b.n	8004f30 <HAL_TIM_ConfigClockSource+0x154>
 8004f2e:	bf00      	nop
 8004f30:	687b      	ldr	r3, [r7, #4]
 8004f32:	2201      	movs	r2, #1
 8004f34:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	2200      	movs	r2, #0
 8004f3c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004f40:	2300      	movs	r3, #0
 8004f42:	4618      	mov	r0, r3
 8004f44:	3710      	adds	r7, #16
 8004f46:	46bd      	mov	sp, r7
 8004f48:	bd80      	pop	{r7, pc}
	...

08004f4c <HAL_TIM_ReadCapturedValue>:
 8004f4c:	b480      	push	{r7}
 8004f4e:	b085      	sub	sp, #20
 8004f50:	af00      	add	r7, sp, #0
 8004f52:	6078      	str	r0, [r7, #4]
 8004f54:	6039      	str	r1, [r7, #0]
 8004f56:	2300      	movs	r3, #0
 8004f58:	60fb      	str	r3, [r7, #12]
 8004f5a:	683b      	ldr	r3, [r7, #0]
 8004f5c:	2b0c      	cmp	r3, #12
 8004f5e:	d831      	bhi.n	8004fc4 <HAL_TIM_ReadCapturedValue+0x78>
 8004f60:	a201      	add	r2, pc, #4	; (adr r2, 8004f68 <HAL_TIM_ReadCapturedValue+0x1c>)
 8004f62:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004f66:	bf00      	nop
 8004f68:	08004f9d 	.word	0x08004f9d
 8004f6c:	08004fc5 	.word	0x08004fc5
 8004f70:	08004fc5 	.word	0x08004fc5
 8004f74:	08004fc5 	.word	0x08004fc5
 8004f78:	08004fa7 	.word	0x08004fa7
 8004f7c:	08004fc5 	.word	0x08004fc5
 8004f80:	08004fc5 	.word	0x08004fc5
 8004f84:	08004fc5 	.word	0x08004fc5
 8004f88:	08004fb1 	.word	0x08004fb1
 8004f8c:	08004fc5 	.word	0x08004fc5
 8004f90:	08004fc5 	.word	0x08004fc5
 8004f94:	08004fc5 	.word	0x08004fc5
 8004f98:	08004fbb 	.word	0x08004fbb
 8004f9c:	687b      	ldr	r3, [r7, #4]
 8004f9e:	681b      	ldr	r3, [r3, #0]
 8004fa0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004fa2:	60fb      	str	r3, [r7, #12]
 8004fa4:	e00f      	b.n	8004fc6 <HAL_TIM_ReadCapturedValue+0x7a>
 8004fa6:	687b      	ldr	r3, [r7, #4]
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004fac:	60fb      	str	r3, [r7, #12]
 8004fae:	e00a      	b.n	8004fc6 <HAL_TIM_ReadCapturedValue+0x7a>
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	681b      	ldr	r3, [r3, #0]
 8004fb4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004fb6:	60fb      	str	r3, [r7, #12]
 8004fb8:	e005      	b.n	8004fc6 <HAL_TIM_ReadCapturedValue+0x7a>
 8004fba:	687b      	ldr	r3, [r7, #4]
 8004fbc:	681b      	ldr	r3, [r3, #0]
 8004fbe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fc0:	60fb      	str	r3, [r7, #12]
 8004fc2:	e000      	b.n	8004fc6 <HAL_TIM_ReadCapturedValue+0x7a>
 8004fc4:	bf00      	nop
 8004fc6:	68fb      	ldr	r3, [r7, #12]
 8004fc8:	4618      	mov	r0, r3
 8004fca:	3714      	adds	r7, #20
 8004fcc:	46bd      	mov	sp, r7
 8004fce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fd2:	4770      	bx	lr

08004fd4 <HAL_TIM_PWM_PulseFinishedCallback>:
 8004fd4:	b480      	push	{r7}
 8004fd6:	b083      	sub	sp, #12
 8004fd8:	af00      	add	r7, sp, #0
 8004fda:	6078      	str	r0, [r7, #4]
 8004fdc:	bf00      	nop
 8004fde:	370c      	adds	r7, #12
 8004fe0:	46bd      	mov	sp, r7
 8004fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fe6:	4770      	bx	lr

08004fe8 <HAL_TIM_TriggerCallback>:
 8004fe8:	b480      	push	{r7}
 8004fea:	b083      	sub	sp, #12
 8004fec:	af00      	add	r7, sp, #0
 8004fee:	6078      	str	r0, [r7, #4]
 8004ff0:	bf00      	nop
 8004ff2:	370c      	adds	r7, #12
 8004ff4:	46bd      	mov	sp, r7
 8004ff6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ffa:	4770      	bx	lr

08004ffc <TIM_Base_SetConfig>:
 8004ffc:	b480      	push	{r7}
 8004ffe:	b085      	sub	sp, #20
 8005000:	af00      	add	r7, sp, #0
 8005002:	6078      	str	r0, [r7, #4]
 8005004:	6039      	str	r1, [r7, #0]
 8005006:	687b      	ldr	r3, [r7, #4]
 8005008:	681b      	ldr	r3, [r3, #0]
 800500a:	60fb      	str	r3, [r7, #12]
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	4a40      	ldr	r2, [pc, #256]	; (8005110 <TIM_Base_SetConfig+0x114>)
 8005010:	4293      	cmp	r3, r2
 8005012:	d013      	beq.n	800503c <TIM_Base_SetConfig+0x40>
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800501a:	d00f      	beq.n	800503c <TIM_Base_SetConfig+0x40>
 800501c:	687b      	ldr	r3, [r7, #4]
 800501e:	4a3d      	ldr	r2, [pc, #244]	; (8005114 <TIM_Base_SetConfig+0x118>)
 8005020:	4293      	cmp	r3, r2
 8005022:	d00b      	beq.n	800503c <TIM_Base_SetConfig+0x40>
 8005024:	687b      	ldr	r3, [r7, #4]
 8005026:	4a3c      	ldr	r2, [pc, #240]	; (8005118 <TIM_Base_SetConfig+0x11c>)
 8005028:	4293      	cmp	r3, r2
 800502a:	d007      	beq.n	800503c <TIM_Base_SetConfig+0x40>
 800502c:	687b      	ldr	r3, [r7, #4]
 800502e:	4a3b      	ldr	r2, [pc, #236]	; (800511c <TIM_Base_SetConfig+0x120>)
 8005030:	4293      	cmp	r3, r2
 8005032:	d003      	beq.n	800503c <TIM_Base_SetConfig+0x40>
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	4a3a      	ldr	r2, [pc, #232]	; (8005120 <TIM_Base_SetConfig+0x124>)
 8005038:	4293      	cmp	r3, r2
 800503a:	d108      	bne.n	800504e <TIM_Base_SetConfig+0x52>
 800503c:	68fb      	ldr	r3, [r7, #12]
 800503e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005042:	60fb      	str	r3, [r7, #12]
 8005044:	683b      	ldr	r3, [r7, #0]
 8005046:	685b      	ldr	r3, [r3, #4]
 8005048:	68fa      	ldr	r2, [r7, #12]
 800504a:	4313      	orrs	r3, r2
 800504c:	60fb      	str	r3, [r7, #12]
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	4a2f      	ldr	r2, [pc, #188]	; (8005110 <TIM_Base_SetConfig+0x114>)
 8005052:	4293      	cmp	r3, r2
 8005054:	d02b      	beq.n	80050ae <TIM_Base_SetConfig+0xb2>
 8005056:	687b      	ldr	r3, [r7, #4]
 8005058:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800505c:	d027      	beq.n	80050ae <TIM_Base_SetConfig+0xb2>
 800505e:	687b      	ldr	r3, [r7, #4]
 8005060:	4a2c      	ldr	r2, [pc, #176]	; (8005114 <TIM_Base_SetConfig+0x118>)
 8005062:	4293      	cmp	r3, r2
 8005064:	d023      	beq.n	80050ae <TIM_Base_SetConfig+0xb2>
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	4a2b      	ldr	r2, [pc, #172]	; (8005118 <TIM_Base_SetConfig+0x11c>)
 800506a:	4293      	cmp	r3, r2
 800506c:	d01f      	beq.n	80050ae <TIM_Base_SetConfig+0xb2>
 800506e:	687b      	ldr	r3, [r7, #4]
 8005070:	4a2a      	ldr	r2, [pc, #168]	; (800511c <TIM_Base_SetConfig+0x120>)
 8005072:	4293      	cmp	r3, r2
 8005074:	d01b      	beq.n	80050ae <TIM_Base_SetConfig+0xb2>
 8005076:	687b      	ldr	r3, [r7, #4]
 8005078:	4a29      	ldr	r2, [pc, #164]	; (8005120 <TIM_Base_SetConfig+0x124>)
 800507a:	4293      	cmp	r3, r2
 800507c:	d017      	beq.n	80050ae <TIM_Base_SetConfig+0xb2>
 800507e:	687b      	ldr	r3, [r7, #4]
 8005080:	4a28      	ldr	r2, [pc, #160]	; (8005124 <TIM_Base_SetConfig+0x128>)
 8005082:	4293      	cmp	r3, r2
 8005084:	d013      	beq.n	80050ae <TIM_Base_SetConfig+0xb2>
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	4a27      	ldr	r2, [pc, #156]	; (8005128 <TIM_Base_SetConfig+0x12c>)
 800508a:	4293      	cmp	r3, r2
 800508c:	d00f      	beq.n	80050ae <TIM_Base_SetConfig+0xb2>
 800508e:	687b      	ldr	r3, [r7, #4]
 8005090:	4a26      	ldr	r2, [pc, #152]	; (800512c <TIM_Base_SetConfig+0x130>)
 8005092:	4293      	cmp	r3, r2
 8005094:	d00b      	beq.n	80050ae <TIM_Base_SetConfig+0xb2>
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	4a25      	ldr	r2, [pc, #148]	; (8005130 <TIM_Base_SetConfig+0x134>)
 800509a:	4293      	cmp	r3, r2
 800509c:	d007      	beq.n	80050ae <TIM_Base_SetConfig+0xb2>
 800509e:	687b      	ldr	r3, [r7, #4]
 80050a0:	4a24      	ldr	r2, [pc, #144]	; (8005134 <TIM_Base_SetConfig+0x138>)
 80050a2:	4293      	cmp	r3, r2
 80050a4:	d003      	beq.n	80050ae <TIM_Base_SetConfig+0xb2>
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	4a23      	ldr	r2, [pc, #140]	; (8005138 <TIM_Base_SetConfig+0x13c>)
 80050aa:	4293      	cmp	r3, r2
 80050ac:	d108      	bne.n	80050c0 <TIM_Base_SetConfig+0xc4>
 80050ae:	68fb      	ldr	r3, [r7, #12]
 80050b0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80050b4:	60fb      	str	r3, [r7, #12]
 80050b6:	683b      	ldr	r3, [r7, #0]
 80050b8:	68db      	ldr	r3, [r3, #12]
 80050ba:	68fa      	ldr	r2, [r7, #12]
 80050bc:	4313      	orrs	r3, r2
 80050be:	60fb      	str	r3, [r7, #12]
 80050c0:	68fb      	ldr	r3, [r7, #12]
 80050c2:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80050c6:	683b      	ldr	r3, [r7, #0]
 80050c8:	695b      	ldr	r3, [r3, #20]
 80050ca:	4313      	orrs	r3, r2
 80050cc:	60fb      	str	r3, [r7, #12]
 80050ce:	687b      	ldr	r3, [r7, #4]
 80050d0:	68fa      	ldr	r2, [r7, #12]
 80050d2:	601a      	str	r2, [r3, #0]
 80050d4:	683b      	ldr	r3, [r7, #0]
 80050d6:	689a      	ldr	r2, [r3, #8]
 80050d8:	687b      	ldr	r3, [r7, #4]
 80050da:	62da      	str	r2, [r3, #44]	; 0x2c
 80050dc:	683b      	ldr	r3, [r7, #0]
 80050de:	681a      	ldr	r2, [r3, #0]
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	629a      	str	r2, [r3, #40]	; 0x28
 80050e4:	687b      	ldr	r3, [r7, #4]
 80050e6:	4a0a      	ldr	r2, [pc, #40]	; (8005110 <TIM_Base_SetConfig+0x114>)
 80050e8:	4293      	cmp	r3, r2
 80050ea:	d003      	beq.n	80050f4 <TIM_Base_SetConfig+0xf8>
 80050ec:	687b      	ldr	r3, [r7, #4]
 80050ee:	4a0c      	ldr	r2, [pc, #48]	; (8005120 <TIM_Base_SetConfig+0x124>)
 80050f0:	4293      	cmp	r3, r2
 80050f2:	d103      	bne.n	80050fc <TIM_Base_SetConfig+0x100>
 80050f4:	683b      	ldr	r3, [r7, #0]
 80050f6:	691a      	ldr	r2, [r3, #16]
 80050f8:	687b      	ldr	r3, [r7, #4]
 80050fa:	631a      	str	r2, [r3, #48]	; 0x30
 80050fc:	687b      	ldr	r3, [r7, #4]
 80050fe:	2201      	movs	r2, #1
 8005100:	615a      	str	r2, [r3, #20]
 8005102:	bf00      	nop
 8005104:	3714      	adds	r7, #20
 8005106:	46bd      	mov	sp, r7
 8005108:	f85d 7b04 	ldr.w	r7, [sp], #4
 800510c:	4770      	bx	lr
 800510e:	bf00      	nop
 8005110:	40010000 	.word	0x40010000
 8005114:	40000400 	.word	0x40000400
 8005118:	40000800 	.word	0x40000800
 800511c:	40000c00 	.word	0x40000c00
 8005120:	40010400 	.word	0x40010400
 8005124:	40014000 	.word	0x40014000
 8005128:	40014400 	.word	0x40014400
 800512c:	40014800 	.word	0x40014800
 8005130:	40001800 	.word	0x40001800
 8005134:	40001c00 	.word	0x40001c00
 8005138:	40002000 	.word	0x40002000

0800513c <TIM_OC1_SetConfig>:
 800513c:	b480      	push	{r7}
 800513e:	b087      	sub	sp, #28
 8005140:	af00      	add	r7, sp, #0
 8005142:	6078      	str	r0, [r7, #4]
 8005144:	6039      	str	r1, [r7, #0]
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	6a1b      	ldr	r3, [r3, #32]
 800514a:	f023 0201 	bic.w	r2, r3, #1
 800514e:	687b      	ldr	r3, [r7, #4]
 8005150:	621a      	str	r2, [r3, #32]
 8005152:	687b      	ldr	r3, [r7, #4]
 8005154:	6a1b      	ldr	r3, [r3, #32]
 8005156:	617b      	str	r3, [r7, #20]
 8005158:	687b      	ldr	r3, [r7, #4]
 800515a:	685b      	ldr	r3, [r3, #4]
 800515c:	613b      	str	r3, [r7, #16]
 800515e:	687b      	ldr	r3, [r7, #4]
 8005160:	699b      	ldr	r3, [r3, #24]
 8005162:	60fb      	str	r3, [r7, #12]
 8005164:	68fb      	ldr	r3, [r7, #12]
 8005166:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800516a:	60fb      	str	r3, [r7, #12]
 800516c:	68fb      	ldr	r3, [r7, #12]
 800516e:	f023 0303 	bic.w	r3, r3, #3
 8005172:	60fb      	str	r3, [r7, #12]
 8005174:	683b      	ldr	r3, [r7, #0]
 8005176:	681b      	ldr	r3, [r3, #0]
 8005178:	68fa      	ldr	r2, [r7, #12]
 800517a:	4313      	orrs	r3, r2
 800517c:	60fb      	str	r3, [r7, #12]
 800517e:	697b      	ldr	r3, [r7, #20]
 8005180:	f023 0302 	bic.w	r3, r3, #2
 8005184:	617b      	str	r3, [r7, #20]
 8005186:	683b      	ldr	r3, [r7, #0]
 8005188:	689b      	ldr	r3, [r3, #8]
 800518a:	697a      	ldr	r2, [r7, #20]
 800518c:	4313      	orrs	r3, r2
 800518e:	617b      	str	r3, [r7, #20]
 8005190:	687b      	ldr	r3, [r7, #4]
 8005192:	4a20      	ldr	r2, [pc, #128]	; (8005214 <TIM_OC1_SetConfig+0xd8>)
 8005194:	4293      	cmp	r3, r2
 8005196:	d003      	beq.n	80051a0 <TIM_OC1_SetConfig+0x64>
 8005198:	687b      	ldr	r3, [r7, #4]
 800519a:	4a1f      	ldr	r2, [pc, #124]	; (8005218 <TIM_OC1_SetConfig+0xdc>)
 800519c:	4293      	cmp	r3, r2
 800519e:	d10c      	bne.n	80051ba <TIM_OC1_SetConfig+0x7e>
 80051a0:	697b      	ldr	r3, [r7, #20]
 80051a2:	f023 0308 	bic.w	r3, r3, #8
 80051a6:	617b      	str	r3, [r7, #20]
 80051a8:	683b      	ldr	r3, [r7, #0]
 80051aa:	68db      	ldr	r3, [r3, #12]
 80051ac:	697a      	ldr	r2, [r7, #20]
 80051ae:	4313      	orrs	r3, r2
 80051b0:	617b      	str	r3, [r7, #20]
 80051b2:	697b      	ldr	r3, [r7, #20]
 80051b4:	f023 0304 	bic.w	r3, r3, #4
 80051b8:	617b      	str	r3, [r7, #20]
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	4a15      	ldr	r2, [pc, #84]	; (8005214 <TIM_OC1_SetConfig+0xd8>)
 80051be:	4293      	cmp	r3, r2
 80051c0:	d003      	beq.n	80051ca <TIM_OC1_SetConfig+0x8e>
 80051c2:	687b      	ldr	r3, [r7, #4]
 80051c4:	4a14      	ldr	r2, [pc, #80]	; (8005218 <TIM_OC1_SetConfig+0xdc>)
 80051c6:	4293      	cmp	r3, r2
 80051c8:	d111      	bne.n	80051ee <TIM_OC1_SetConfig+0xb2>
 80051ca:	693b      	ldr	r3, [r7, #16]
 80051cc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80051d0:	613b      	str	r3, [r7, #16]
 80051d2:	693b      	ldr	r3, [r7, #16]
 80051d4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80051d8:	613b      	str	r3, [r7, #16]
 80051da:	683b      	ldr	r3, [r7, #0]
 80051dc:	695b      	ldr	r3, [r3, #20]
 80051de:	693a      	ldr	r2, [r7, #16]
 80051e0:	4313      	orrs	r3, r2
 80051e2:	613b      	str	r3, [r7, #16]
 80051e4:	683b      	ldr	r3, [r7, #0]
 80051e6:	699b      	ldr	r3, [r3, #24]
 80051e8:	693a      	ldr	r2, [r7, #16]
 80051ea:	4313      	orrs	r3, r2
 80051ec:	613b      	str	r3, [r7, #16]
 80051ee:	687b      	ldr	r3, [r7, #4]
 80051f0:	693a      	ldr	r2, [r7, #16]
 80051f2:	605a      	str	r2, [r3, #4]
 80051f4:	687b      	ldr	r3, [r7, #4]
 80051f6:	68fa      	ldr	r2, [r7, #12]
 80051f8:	619a      	str	r2, [r3, #24]
 80051fa:	683b      	ldr	r3, [r7, #0]
 80051fc:	685a      	ldr	r2, [r3, #4]
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	635a      	str	r2, [r3, #52]	; 0x34
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	697a      	ldr	r2, [r7, #20]
 8005206:	621a      	str	r2, [r3, #32]
 8005208:	bf00      	nop
 800520a:	371c      	adds	r7, #28
 800520c:	46bd      	mov	sp, r7
 800520e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005212:	4770      	bx	lr
 8005214:	40010000 	.word	0x40010000
 8005218:	40010400 	.word	0x40010400

0800521c <TIM_OC2_SetConfig>:
 800521c:	b480      	push	{r7}
 800521e:	b087      	sub	sp, #28
 8005220:	af00      	add	r7, sp, #0
 8005222:	6078      	str	r0, [r7, #4]
 8005224:	6039      	str	r1, [r7, #0]
 8005226:	687b      	ldr	r3, [r7, #4]
 8005228:	6a1b      	ldr	r3, [r3, #32]
 800522a:	f023 0210 	bic.w	r2, r3, #16
 800522e:	687b      	ldr	r3, [r7, #4]
 8005230:	621a      	str	r2, [r3, #32]
 8005232:	687b      	ldr	r3, [r7, #4]
 8005234:	6a1b      	ldr	r3, [r3, #32]
 8005236:	617b      	str	r3, [r7, #20]
 8005238:	687b      	ldr	r3, [r7, #4]
 800523a:	685b      	ldr	r3, [r3, #4]
 800523c:	613b      	str	r3, [r7, #16]
 800523e:	687b      	ldr	r3, [r7, #4]
 8005240:	699b      	ldr	r3, [r3, #24]
 8005242:	60fb      	str	r3, [r7, #12]
 8005244:	68fb      	ldr	r3, [r7, #12]
 8005246:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800524a:	60fb      	str	r3, [r7, #12]
 800524c:	68fb      	ldr	r3, [r7, #12]
 800524e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005252:	60fb      	str	r3, [r7, #12]
 8005254:	683b      	ldr	r3, [r7, #0]
 8005256:	681b      	ldr	r3, [r3, #0]
 8005258:	021b      	lsls	r3, r3, #8
 800525a:	68fa      	ldr	r2, [r7, #12]
 800525c:	4313      	orrs	r3, r2
 800525e:	60fb      	str	r3, [r7, #12]
 8005260:	697b      	ldr	r3, [r7, #20]
 8005262:	f023 0320 	bic.w	r3, r3, #32
 8005266:	617b      	str	r3, [r7, #20]
 8005268:	683b      	ldr	r3, [r7, #0]
 800526a:	689b      	ldr	r3, [r3, #8]
 800526c:	011b      	lsls	r3, r3, #4
 800526e:	697a      	ldr	r2, [r7, #20]
 8005270:	4313      	orrs	r3, r2
 8005272:	617b      	str	r3, [r7, #20]
 8005274:	687b      	ldr	r3, [r7, #4]
 8005276:	4a22      	ldr	r2, [pc, #136]	; (8005300 <TIM_OC2_SetConfig+0xe4>)
 8005278:	4293      	cmp	r3, r2
 800527a:	d003      	beq.n	8005284 <TIM_OC2_SetConfig+0x68>
 800527c:	687b      	ldr	r3, [r7, #4]
 800527e:	4a21      	ldr	r2, [pc, #132]	; (8005304 <TIM_OC2_SetConfig+0xe8>)
 8005280:	4293      	cmp	r3, r2
 8005282:	d10d      	bne.n	80052a0 <TIM_OC2_SetConfig+0x84>
 8005284:	697b      	ldr	r3, [r7, #20]
 8005286:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800528a:	617b      	str	r3, [r7, #20]
 800528c:	683b      	ldr	r3, [r7, #0]
 800528e:	68db      	ldr	r3, [r3, #12]
 8005290:	011b      	lsls	r3, r3, #4
 8005292:	697a      	ldr	r2, [r7, #20]
 8005294:	4313      	orrs	r3, r2
 8005296:	617b      	str	r3, [r7, #20]
 8005298:	697b      	ldr	r3, [r7, #20]
 800529a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800529e:	617b      	str	r3, [r7, #20]
 80052a0:	687b      	ldr	r3, [r7, #4]
 80052a2:	4a17      	ldr	r2, [pc, #92]	; (8005300 <TIM_OC2_SetConfig+0xe4>)
 80052a4:	4293      	cmp	r3, r2
 80052a6:	d003      	beq.n	80052b0 <TIM_OC2_SetConfig+0x94>
 80052a8:	687b      	ldr	r3, [r7, #4]
 80052aa:	4a16      	ldr	r2, [pc, #88]	; (8005304 <TIM_OC2_SetConfig+0xe8>)
 80052ac:	4293      	cmp	r3, r2
 80052ae:	d113      	bne.n	80052d8 <TIM_OC2_SetConfig+0xbc>
 80052b0:	693b      	ldr	r3, [r7, #16]
 80052b2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80052b6:	613b      	str	r3, [r7, #16]
 80052b8:	693b      	ldr	r3, [r7, #16]
 80052ba:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80052be:	613b      	str	r3, [r7, #16]
 80052c0:	683b      	ldr	r3, [r7, #0]
 80052c2:	695b      	ldr	r3, [r3, #20]
 80052c4:	009b      	lsls	r3, r3, #2
 80052c6:	693a      	ldr	r2, [r7, #16]
 80052c8:	4313      	orrs	r3, r2
 80052ca:	613b      	str	r3, [r7, #16]
 80052cc:	683b      	ldr	r3, [r7, #0]
 80052ce:	699b      	ldr	r3, [r3, #24]
 80052d0:	009b      	lsls	r3, r3, #2
 80052d2:	693a      	ldr	r2, [r7, #16]
 80052d4:	4313      	orrs	r3, r2
 80052d6:	613b      	str	r3, [r7, #16]
 80052d8:	687b      	ldr	r3, [r7, #4]
 80052da:	693a      	ldr	r2, [r7, #16]
 80052dc:	605a      	str	r2, [r3, #4]
 80052de:	687b      	ldr	r3, [r7, #4]
 80052e0:	68fa      	ldr	r2, [r7, #12]
 80052e2:	619a      	str	r2, [r3, #24]
 80052e4:	683b      	ldr	r3, [r7, #0]
 80052e6:	685a      	ldr	r2, [r3, #4]
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	639a      	str	r2, [r3, #56]	; 0x38
 80052ec:	687b      	ldr	r3, [r7, #4]
 80052ee:	697a      	ldr	r2, [r7, #20]
 80052f0:	621a      	str	r2, [r3, #32]
 80052f2:	bf00      	nop
 80052f4:	371c      	adds	r7, #28
 80052f6:	46bd      	mov	sp, r7
 80052f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052fc:	4770      	bx	lr
 80052fe:	bf00      	nop
 8005300:	40010000 	.word	0x40010000
 8005304:	40010400 	.word	0x40010400

08005308 <TIM_OC3_SetConfig>:
 8005308:	b480      	push	{r7}
 800530a:	b087      	sub	sp, #28
 800530c:	af00      	add	r7, sp, #0
 800530e:	6078      	str	r0, [r7, #4]
 8005310:	6039      	str	r1, [r7, #0]
 8005312:	687b      	ldr	r3, [r7, #4]
 8005314:	6a1b      	ldr	r3, [r3, #32]
 8005316:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800531a:	687b      	ldr	r3, [r7, #4]
 800531c:	621a      	str	r2, [r3, #32]
 800531e:	687b      	ldr	r3, [r7, #4]
 8005320:	6a1b      	ldr	r3, [r3, #32]
 8005322:	617b      	str	r3, [r7, #20]
 8005324:	687b      	ldr	r3, [r7, #4]
 8005326:	685b      	ldr	r3, [r3, #4]
 8005328:	613b      	str	r3, [r7, #16]
 800532a:	687b      	ldr	r3, [r7, #4]
 800532c:	69db      	ldr	r3, [r3, #28]
 800532e:	60fb      	str	r3, [r7, #12]
 8005330:	68fb      	ldr	r3, [r7, #12]
 8005332:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005336:	60fb      	str	r3, [r7, #12]
 8005338:	68fb      	ldr	r3, [r7, #12]
 800533a:	f023 0303 	bic.w	r3, r3, #3
 800533e:	60fb      	str	r3, [r7, #12]
 8005340:	683b      	ldr	r3, [r7, #0]
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	68fa      	ldr	r2, [r7, #12]
 8005346:	4313      	orrs	r3, r2
 8005348:	60fb      	str	r3, [r7, #12]
 800534a:	697b      	ldr	r3, [r7, #20]
 800534c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8005350:	617b      	str	r3, [r7, #20]
 8005352:	683b      	ldr	r3, [r7, #0]
 8005354:	689b      	ldr	r3, [r3, #8]
 8005356:	021b      	lsls	r3, r3, #8
 8005358:	697a      	ldr	r2, [r7, #20]
 800535a:	4313      	orrs	r3, r2
 800535c:	617b      	str	r3, [r7, #20]
 800535e:	687b      	ldr	r3, [r7, #4]
 8005360:	4a21      	ldr	r2, [pc, #132]	; (80053e8 <TIM_OC3_SetConfig+0xe0>)
 8005362:	4293      	cmp	r3, r2
 8005364:	d003      	beq.n	800536e <TIM_OC3_SetConfig+0x66>
 8005366:	687b      	ldr	r3, [r7, #4]
 8005368:	4a20      	ldr	r2, [pc, #128]	; (80053ec <TIM_OC3_SetConfig+0xe4>)
 800536a:	4293      	cmp	r3, r2
 800536c:	d10d      	bne.n	800538a <TIM_OC3_SetConfig+0x82>
 800536e:	697b      	ldr	r3, [r7, #20]
 8005370:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005374:	617b      	str	r3, [r7, #20]
 8005376:	683b      	ldr	r3, [r7, #0]
 8005378:	68db      	ldr	r3, [r3, #12]
 800537a:	021b      	lsls	r3, r3, #8
 800537c:	697a      	ldr	r2, [r7, #20]
 800537e:	4313      	orrs	r3, r2
 8005380:	617b      	str	r3, [r7, #20]
 8005382:	697b      	ldr	r3, [r7, #20]
 8005384:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8005388:	617b      	str	r3, [r7, #20]
 800538a:	687b      	ldr	r3, [r7, #4]
 800538c:	4a16      	ldr	r2, [pc, #88]	; (80053e8 <TIM_OC3_SetConfig+0xe0>)
 800538e:	4293      	cmp	r3, r2
 8005390:	d003      	beq.n	800539a <TIM_OC3_SetConfig+0x92>
 8005392:	687b      	ldr	r3, [r7, #4]
 8005394:	4a15      	ldr	r2, [pc, #84]	; (80053ec <TIM_OC3_SetConfig+0xe4>)
 8005396:	4293      	cmp	r3, r2
 8005398:	d113      	bne.n	80053c2 <TIM_OC3_SetConfig+0xba>
 800539a:	693b      	ldr	r3, [r7, #16]
 800539c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80053a0:	613b      	str	r3, [r7, #16]
 80053a2:	693b      	ldr	r3, [r7, #16]
 80053a4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80053a8:	613b      	str	r3, [r7, #16]
 80053aa:	683b      	ldr	r3, [r7, #0]
 80053ac:	695b      	ldr	r3, [r3, #20]
 80053ae:	011b      	lsls	r3, r3, #4
 80053b0:	693a      	ldr	r2, [r7, #16]
 80053b2:	4313      	orrs	r3, r2
 80053b4:	613b      	str	r3, [r7, #16]
 80053b6:	683b      	ldr	r3, [r7, #0]
 80053b8:	699b      	ldr	r3, [r3, #24]
 80053ba:	011b      	lsls	r3, r3, #4
 80053bc:	693a      	ldr	r2, [r7, #16]
 80053be:	4313      	orrs	r3, r2
 80053c0:	613b      	str	r3, [r7, #16]
 80053c2:	687b      	ldr	r3, [r7, #4]
 80053c4:	693a      	ldr	r2, [r7, #16]
 80053c6:	605a      	str	r2, [r3, #4]
 80053c8:	687b      	ldr	r3, [r7, #4]
 80053ca:	68fa      	ldr	r2, [r7, #12]
 80053cc:	61da      	str	r2, [r3, #28]
 80053ce:	683b      	ldr	r3, [r7, #0]
 80053d0:	685a      	ldr	r2, [r3, #4]
 80053d2:	687b      	ldr	r3, [r7, #4]
 80053d4:	63da      	str	r2, [r3, #60]	; 0x3c
 80053d6:	687b      	ldr	r3, [r7, #4]
 80053d8:	697a      	ldr	r2, [r7, #20]
 80053da:	621a      	str	r2, [r3, #32]
 80053dc:	bf00      	nop
 80053de:	371c      	adds	r7, #28
 80053e0:	46bd      	mov	sp, r7
 80053e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053e6:	4770      	bx	lr
 80053e8:	40010000 	.word	0x40010000
 80053ec:	40010400 	.word	0x40010400

080053f0 <TIM_OC4_SetConfig>:
 80053f0:	b480      	push	{r7}
 80053f2:	b087      	sub	sp, #28
 80053f4:	af00      	add	r7, sp, #0
 80053f6:	6078      	str	r0, [r7, #4]
 80053f8:	6039      	str	r1, [r7, #0]
 80053fa:	687b      	ldr	r3, [r7, #4]
 80053fc:	6a1b      	ldr	r3, [r3, #32]
 80053fe:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8005402:	687b      	ldr	r3, [r7, #4]
 8005404:	621a      	str	r2, [r3, #32]
 8005406:	687b      	ldr	r3, [r7, #4]
 8005408:	6a1b      	ldr	r3, [r3, #32]
 800540a:	613b      	str	r3, [r7, #16]
 800540c:	687b      	ldr	r3, [r7, #4]
 800540e:	685b      	ldr	r3, [r3, #4]
 8005410:	617b      	str	r3, [r7, #20]
 8005412:	687b      	ldr	r3, [r7, #4]
 8005414:	69db      	ldr	r3, [r3, #28]
 8005416:	60fb      	str	r3, [r7, #12]
 8005418:	68fb      	ldr	r3, [r7, #12]
 800541a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800541e:	60fb      	str	r3, [r7, #12]
 8005420:	68fb      	ldr	r3, [r7, #12]
 8005422:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005426:	60fb      	str	r3, [r7, #12]
 8005428:	683b      	ldr	r3, [r7, #0]
 800542a:	681b      	ldr	r3, [r3, #0]
 800542c:	021b      	lsls	r3, r3, #8
 800542e:	68fa      	ldr	r2, [r7, #12]
 8005430:	4313      	orrs	r3, r2
 8005432:	60fb      	str	r3, [r7, #12]
 8005434:	693b      	ldr	r3, [r7, #16]
 8005436:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800543a:	613b      	str	r3, [r7, #16]
 800543c:	683b      	ldr	r3, [r7, #0]
 800543e:	689b      	ldr	r3, [r3, #8]
 8005440:	031b      	lsls	r3, r3, #12
 8005442:	693a      	ldr	r2, [r7, #16]
 8005444:	4313      	orrs	r3, r2
 8005446:	613b      	str	r3, [r7, #16]
 8005448:	687b      	ldr	r3, [r7, #4]
 800544a:	4a12      	ldr	r2, [pc, #72]	; (8005494 <TIM_OC4_SetConfig+0xa4>)
 800544c:	4293      	cmp	r3, r2
 800544e:	d003      	beq.n	8005458 <TIM_OC4_SetConfig+0x68>
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	4a11      	ldr	r2, [pc, #68]	; (8005498 <TIM_OC4_SetConfig+0xa8>)
 8005454:	4293      	cmp	r3, r2
 8005456:	d109      	bne.n	800546c <TIM_OC4_SetConfig+0x7c>
 8005458:	697b      	ldr	r3, [r7, #20]
 800545a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800545e:	617b      	str	r3, [r7, #20]
 8005460:	683b      	ldr	r3, [r7, #0]
 8005462:	695b      	ldr	r3, [r3, #20]
 8005464:	019b      	lsls	r3, r3, #6
 8005466:	697a      	ldr	r2, [r7, #20]
 8005468:	4313      	orrs	r3, r2
 800546a:	617b      	str	r3, [r7, #20]
 800546c:	687b      	ldr	r3, [r7, #4]
 800546e:	697a      	ldr	r2, [r7, #20]
 8005470:	605a      	str	r2, [r3, #4]
 8005472:	687b      	ldr	r3, [r7, #4]
 8005474:	68fa      	ldr	r2, [r7, #12]
 8005476:	61da      	str	r2, [r3, #28]
 8005478:	683b      	ldr	r3, [r7, #0]
 800547a:	685a      	ldr	r2, [r3, #4]
 800547c:	687b      	ldr	r3, [r7, #4]
 800547e:	641a      	str	r2, [r3, #64]	; 0x40
 8005480:	687b      	ldr	r3, [r7, #4]
 8005482:	693a      	ldr	r2, [r7, #16]
 8005484:	621a      	str	r2, [r3, #32]
 8005486:	bf00      	nop
 8005488:	371c      	adds	r7, #28
 800548a:	46bd      	mov	sp, r7
 800548c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005490:	4770      	bx	lr
 8005492:	bf00      	nop
 8005494:	40010000 	.word	0x40010000
 8005498:	40010400 	.word	0x40010400

0800549c <TIM_TI1_SetConfig>:
 800549c:	b480      	push	{r7}
 800549e:	b087      	sub	sp, #28
 80054a0:	af00      	add	r7, sp, #0
 80054a2:	60f8      	str	r0, [r7, #12]
 80054a4:	60b9      	str	r1, [r7, #8]
 80054a6:	607a      	str	r2, [r7, #4]
 80054a8:	603b      	str	r3, [r7, #0]
 80054aa:	68fb      	ldr	r3, [r7, #12]
 80054ac:	6a1b      	ldr	r3, [r3, #32]
 80054ae:	f023 0201 	bic.w	r2, r3, #1
 80054b2:	68fb      	ldr	r3, [r7, #12]
 80054b4:	621a      	str	r2, [r3, #32]
 80054b6:	68fb      	ldr	r3, [r7, #12]
 80054b8:	699b      	ldr	r3, [r3, #24]
 80054ba:	617b      	str	r3, [r7, #20]
 80054bc:	68fb      	ldr	r3, [r7, #12]
 80054be:	6a1b      	ldr	r3, [r3, #32]
 80054c0:	613b      	str	r3, [r7, #16]
 80054c2:	68fb      	ldr	r3, [r7, #12]
 80054c4:	4a28      	ldr	r2, [pc, #160]	; (8005568 <TIM_TI1_SetConfig+0xcc>)
 80054c6:	4293      	cmp	r3, r2
 80054c8:	d01b      	beq.n	8005502 <TIM_TI1_SetConfig+0x66>
 80054ca:	68fb      	ldr	r3, [r7, #12]
 80054cc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80054d0:	d017      	beq.n	8005502 <TIM_TI1_SetConfig+0x66>
 80054d2:	68fb      	ldr	r3, [r7, #12]
 80054d4:	4a25      	ldr	r2, [pc, #148]	; (800556c <TIM_TI1_SetConfig+0xd0>)
 80054d6:	4293      	cmp	r3, r2
 80054d8:	d013      	beq.n	8005502 <TIM_TI1_SetConfig+0x66>
 80054da:	68fb      	ldr	r3, [r7, #12]
 80054dc:	4a24      	ldr	r2, [pc, #144]	; (8005570 <TIM_TI1_SetConfig+0xd4>)
 80054de:	4293      	cmp	r3, r2
 80054e0:	d00f      	beq.n	8005502 <TIM_TI1_SetConfig+0x66>
 80054e2:	68fb      	ldr	r3, [r7, #12]
 80054e4:	4a23      	ldr	r2, [pc, #140]	; (8005574 <TIM_TI1_SetConfig+0xd8>)
 80054e6:	4293      	cmp	r3, r2
 80054e8:	d00b      	beq.n	8005502 <TIM_TI1_SetConfig+0x66>
 80054ea:	68fb      	ldr	r3, [r7, #12]
 80054ec:	4a22      	ldr	r2, [pc, #136]	; (8005578 <TIM_TI1_SetConfig+0xdc>)
 80054ee:	4293      	cmp	r3, r2
 80054f0:	d007      	beq.n	8005502 <TIM_TI1_SetConfig+0x66>
 80054f2:	68fb      	ldr	r3, [r7, #12]
 80054f4:	4a21      	ldr	r2, [pc, #132]	; (800557c <TIM_TI1_SetConfig+0xe0>)
 80054f6:	4293      	cmp	r3, r2
 80054f8:	d003      	beq.n	8005502 <TIM_TI1_SetConfig+0x66>
 80054fa:	68fb      	ldr	r3, [r7, #12]
 80054fc:	4a20      	ldr	r2, [pc, #128]	; (8005580 <TIM_TI1_SetConfig+0xe4>)
 80054fe:	4293      	cmp	r3, r2
 8005500:	d101      	bne.n	8005506 <TIM_TI1_SetConfig+0x6a>
 8005502:	2301      	movs	r3, #1
 8005504:	e000      	b.n	8005508 <TIM_TI1_SetConfig+0x6c>
 8005506:	2300      	movs	r3, #0
 8005508:	2b00      	cmp	r3, #0
 800550a:	d008      	beq.n	800551e <TIM_TI1_SetConfig+0x82>
 800550c:	697b      	ldr	r3, [r7, #20]
 800550e:	f023 0303 	bic.w	r3, r3, #3
 8005512:	617b      	str	r3, [r7, #20]
 8005514:	697a      	ldr	r2, [r7, #20]
 8005516:	687b      	ldr	r3, [r7, #4]
 8005518:	4313      	orrs	r3, r2
 800551a:	617b      	str	r3, [r7, #20]
 800551c:	e003      	b.n	8005526 <TIM_TI1_SetConfig+0x8a>
 800551e:	697b      	ldr	r3, [r7, #20]
 8005520:	f043 0301 	orr.w	r3, r3, #1
 8005524:	617b      	str	r3, [r7, #20]
 8005526:	697b      	ldr	r3, [r7, #20]
 8005528:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800552c:	617b      	str	r3, [r7, #20]
 800552e:	683b      	ldr	r3, [r7, #0]
 8005530:	011b      	lsls	r3, r3, #4
 8005532:	b2db      	uxtb	r3, r3
 8005534:	697a      	ldr	r2, [r7, #20]
 8005536:	4313      	orrs	r3, r2
 8005538:	617b      	str	r3, [r7, #20]
 800553a:	693b      	ldr	r3, [r7, #16]
 800553c:	f023 030a 	bic.w	r3, r3, #10
 8005540:	613b      	str	r3, [r7, #16]
 8005542:	68bb      	ldr	r3, [r7, #8]
 8005544:	f003 030a 	and.w	r3, r3, #10
 8005548:	693a      	ldr	r2, [r7, #16]
 800554a:	4313      	orrs	r3, r2
 800554c:	613b      	str	r3, [r7, #16]
 800554e:	68fb      	ldr	r3, [r7, #12]
 8005550:	697a      	ldr	r2, [r7, #20]
 8005552:	619a      	str	r2, [r3, #24]
 8005554:	68fb      	ldr	r3, [r7, #12]
 8005556:	693a      	ldr	r2, [r7, #16]
 8005558:	621a      	str	r2, [r3, #32]
 800555a:	bf00      	nop
 800555c:	371c      	adds	r7, #28
 800555e:	46bd      	mov	sp, r7
 8005560:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005564:	4770      	bx	lr
 8005566:	bf00      	nop
 8005568:	40010000 	.word	0x40010000
 800556c:	40000400 	.word	0x40000400
 8005570:	40000800 	.word	0x40000800
 8005574:	40000c00 	.word	0x40000c00
 8005578:	40010400 	.word	0x40010400
 800557c:	40014000 	.word	0x40014000
 8005580:	40001800 	.word	0x40001800

08005584 <TIM_TI1_ConfigInputStage>:
 8005584:	b480      	push	{r7}
 8005586:	b087      	sub	sp, #28
 8005588:	af00      	add	r7, sp, #0
 800558a:	60f8      	str	r0, [r7, #12]
 800558c:	60b9      	str	r1, [r7, #8]
 800558e:	607a      	str	r2, [r7, #4]
 8005590:	68fb      	ldr	r3, [r7, #12]
 8005592:	6a1b      	ldr	r3, [r3, #32]
 8005594:	617b      	str	r3, [r7, #20]
 8005596:	68fb      	ldr	r3, [r7, #12]
 8005598:	6a1b      	ldr	r3, [r3, #32]
 800559a:	f023 0201 	bic.w	r2, r3, #1
 800559e:	68fb      	ldr	r3, [r7, #12]
 80055a0:	621a      	str	r2, [r3, #32]
 80055a2:	68fb      	ldr	r3, [r7, #12]
 80055a4:	699b      	ldr	r3, [r3, #24]
 80055a6:	613b      	str	r3, [r7, #16]
 80055a8:	693b      	ldr	r3, [r7, #16]
 80055aa:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80055ae:	613b      	str	r3, [r7, #16]
 80055b0:	687b      	ldr	r3, [r7, #4]
 80055b2:	011b      	lsls	r3, r3, #4
 80055b4:	693a      	ldr	r2, [r7, #16]
 80055b6:	4313      	orrs	r3, r2
 80055b8:	613b      	str	r3, [r7, #16]
 80055ba:	697b      	ldr	r3, [r7, #20]
 80055bc:	f023 030a 	bic.w	r3, r3, #10
 80055c0:	617b      	str	r3, [r7, #20]
 80055c2:	697a      	ldr	r2, [r7, #20]
 80055c4:	68bb      	ldr	r3, [r7, #8]
 80055c6:	4313      	orrs	r3, r2
 80055c8:	617b      	str	r3, [r7, #20]
 80055ca:	68fb      	ldr	r3, [r7, #12]
 80055cc:	693a      	ldr	r2, [r7, #16]
 80055ce:	619a      	str	r2, [r3, #24]
 80055d0:	68fb      	ldr	r3, [r7, #12]
 80055d2:	697a      	ldr	r2, [r7, #20]
 80055d4:	621a      	str	r2, [r3, #32]
 80055d6:	bf00      	nop
 80055d8:	371c      	adds	r7, #28
 80055da:	46bd      	mov	sp, r7
 80055dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055e0:	4770      	bx	lr

080055e2 <TIM_TI2_SetConfig>:
 80055e2:	b480      	push	{r7}
 80055e4:	b087      	sub	sp, #28
 80055e6:	af00      	add	r7, sp, #0
 80055e8:	60f8      	str	r0, [r7, #12]
 80055ea:	60b9      	str	r1, [r7, #8]
 80055ec:	607a      	str	r2, [r7, #4]
 80055ee:	603b      	str	r3, [r7, #0]
 80055f0:	68fb      	ldr	r3, [r7, #12]
 80055f2:	6a1b      	ldr	r3, [r3, #32]
 80055f4:	f023 0210 	bic.w	r2, r3, #16
 80055f8:	68fb      	ldr	r3, [r7, #12]
 80055fa:	621a      	str	r2, [r3, #32]
 80055fc:	68fb      	ldr	r3, [r7, #12]
 80055fe:	699b      	ldr	r3, [r3, #24]
 8005600:	617b      	str	r3, [r7, #20]
 8005602:	68fb      	ldr	r3, [r7, #12]
 8005604:	6a1b      	ldr	r3, [r3, #32]
 8005606:	613b      	str	r3, [r7, #16]
 8005608:	697b      	ldr	r3, [r7, #20]
 800560a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800560e:	617b      	str	r3, [r7, #20]
 8005610:	687b      	ldr	r3, [r7, #4]
 8005612:	021b      	lsls	r3, r3, #8
 8005614:	697a      	ldr	r2, [r7, #20]
 8005616:	4313      	orrs	r3, r2
 8005618:	617b      	str	r3, [r7, #20]
 800561a:	697b      	ldr	r3, [r7, #20]
 800561c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8005620:	617b      	str	r3, [r7, #20]
 8005622:	683b      	ldr	r3, [r7, #0]
 8005624:	031b      	lsls	r3, r3, #12
 8005626:	b29b      	uxth	r3, r3
 8005628:	697a      	ldr	r2, [r7, #20]
 800562a:	4313      	orrs	r3, r2
 800562c:	617b      	str	r3, [r7, #20]
 800562e:	693b      	ldr	r3, [r7, #16]
 8005630:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8005634:	613b      	str	r3, [r7, #16]
 8005636:	68bb      	ldr	r3, [r7, #8]
 8005638:	011b      	lsls	r3, r3, #4
 800563a:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 800563e:	693a      	ldr	r2, [r7, #16]
 8005640:	4313      	orrs	r3, r2
 8005642:	613b      	str	r3, [r7, #16]
 8005644:	68fb      	ldr	r3, [r7, #12]
 8005646:	697a      	ldr	r2, [r7, #20]
 8005648:	619a      	str	r2, [r3, #24]
 800564a:	68fb      	ldr	r3, [r7, #12]
 800564c:	693a      	ldr	r2, [r7, #16]
 800564e:	621a      	str	r2, [r3, #32]
 8005650:	bf00      	nop
 8005652:	371c      	adds	r7, #28
 8005654:	46bd      	mov	sp, r7
 8005656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800565a:	4770      	bx	lr

0800565c <TIM_TI2_ConfigInputStage>:
 800565c:	b480      	push	{r7}
 800565e:	b087      	sub	sp, #28
 8005660:	af00      	add	r7, sp, #0
 8005662:	60f8      	str	r0, [r7, #12]
 8005664:	60b9      	str	r1, [r7, #8]
 8005666:	607a      	str	r2, [r7, #4]
 8005668:	68fb      	ldr	r3, [r7, #12]
 800566a:	6a1b      	ldr	r3, [r3, #32]
 800566c:	f023 0210 	bic.w	r2, r3, #16
 8005670:	68fb      	ldr	r3, [r7, #12]
 8005672:	621a      	str	r2, [r3, #32]
 8005674:	68fb      	ldr	r3, [r7, #12]
 8005676:	699b      	ldr	r3, [r3, #24]
 8005678:	617b      	str	r3, [r7, #20]
 800567a:	68fb      	ldr	r3, [r7, #12]
 800567c:	6a1b      	ldr	r3, [r3, #32]
 800567e:	613b      	str	r3, [r7, #16]
 8005680:	697b      	ldr	r3, [r7, #20]
 8005682:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8005686:	617b      	str	r3, [r7, #20]
 8005688:	687b      	ldr	r3, [r7, #4]
 800568a:	031b      	lsls	r3, r3, #12
 800568c:	697a      	ldr	r2, [r7, #20]
 800568e:	4313      	orrs	r3, r2
 8005690:	617b      	str	r3, [r7, #20]
 8005692:	693b      	ldr	r3, [r7, #16]
 8005694:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8005698:	613b      	str	r3, [r7, #16]
 800569a:	68bb      	ldr	r3, [r7, #8]
 800569c:	011b      	lsls	r3, r3, #4
 800569e:	693a      	ldr	r2, [r7, #16]
 80056a0:	4313      	orrs	r3, r2
 80056a2:	613b      	str	r3, [r7, #16]
 80056a4:	68fb      	ldr	r3, [r7, #12]
 80056a6:	697a      	ldr	r2, [r7, #20]
 80056a8:	619a      	str	r2, [r3, #24]
 80056aa:	68fb      	ldr	r3, [r7, #12]
 80056ac:	693a      	ldr	r2, [r7, #16]
 80056ae:	621a      	str	r2, [r3, #32]
 80056b0:	bf00      	nop
 80056b2:	371c      	adds	r7, #28
 80056b4:	46bd      	mov	sp, r7
 80056b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056ba:	4770      	bx	lr

080056bc <TIM_TI3_SetConfig>:
 80056bc:	b480      	push	{r7}
 80056be:	b087      	sub	sp, #28
 80056c0:	af00      	add	r7, sp, #0
 80056c2:	60f8      	str	r0, [r7, #12]
 80056c4:	60b9      	str	r1, [r7, #8]
 80056c6:	607a      	str	r2, [r7, #4]
 80056c8:	603b      	str	r3, [r7, #0]
 80056ca:	68fb      	ldr	r3, [r7, #12]
 80056cc:	6a1b      	ldr	r3, [r3, #32]
 80056ce:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80056d2:	68fb      	ldr	r3, [r7, #12]
 80056d4:	621a      	str	r2, [r3, #32]
 80056d6:	68fb      	ldr	r3, [r7, #12]
 80056d8:	69db      	ldr	r3, [r3, #28]
 80056da:	617b      	str	r3, [r7, #20]
 80056dc:	68fb      	ldr	r3, [r7, #12]
 80056de:	6a1b      	ldr	r3, [r3, #32]
 80056e0:	613b      	str	r3, [r7, #16]
 80056e2:	697b      	ldr	r3, [r7, #20]
 80056e4:	f023 0303 	bic.w	r3, r3, #3
 80056e8:	617b      	str	r3, [r7, #20]
 80056ea:	697a      	ldr	r2, [r7, #20]
 80056ec:	687b      	ldr	r3, [r7, #4]
 80056ee:	4313      	orrs	r3, r2
 80056f0:	617b      	str	r3, [r7, #20]
 80056f2:	697b      	ldr	r3, [r7, #20]
 80056f4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80056f8:	617b      	str	r3, [r7, #20]
 80056fa:	683b      	ldr	r3, [r7, #0]
 80056fc:	011b      	lsls	r3, r3, #4
 80056fe:	b2db      	uxtb	r3, r3
 8005700:	697a      	ldr	r2, [r7, #20]
 8005702:	4313      	orrs	r3, r2
 8005704:	617b      	str	r3, [r7, #20]
 8005706:	693b      	ldr	r3, [r7, #16]
 8005708:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 800570c:	613b      	str	r3, [r7, #16]
 800570e:	68bb      	ldr	r3, [r7, #8]
 8005710:	021b      	lsls	r3, r3, #8
 8005712:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 8005716:	693a      	ldr	r2, [r7, #16]
 8005718:	4313      	orrs	r3, r2
 800571a:	613b      	str	r3, [r7, #16]
 800571c:	68fb      	ldr	r3, [r7, #12]
 800571e:	697a      	ldr	r2, [r7, #20]
 8005720:	61da      	str	r2, [r3, #28]
 8005722:	68fb      	ldr	r3, [r7, #12]
 8005724:	693a      	ldr	r2, [r7, #16]
 8005726:	621a      	str	r2, [r3, #32]
 8005728:	bf00      	nop
 800572a:	371c      	adds	r7, #28
 800572c:	46bd      	mov	sp, r7
 800572e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005732:	4770      	bx	lr

08005734 <TIM_TI4_SetConfig>:
 8005734:	b480      	push	{r7}
 8005736:	b087      	sub	sp, #28
 8005738:	af00      	add	r7, sp, #0
 800573a:	60f8      	str	r0, [r7, #12]
 800573c:	60b9      	str	r1, [r7, #8]
 800573e:	607a      	str	r2, [r7, #4]
 8005740:	603b      	str	r3, [r7, #0]
 8005742:	68fb      	ldr	r3, [r7, #12]
 8005744:	6a1b      	ldr	r3, [r3, #32]
 8005746:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800574a:	68fb      	ldr	r3, [r7, #12]
 800574c:	621a      	str	r2, [r3, #32]
 800574e:	68fb      	ldr	r3, [r7, #12]
 8005750:	69db      	ldr	r3, [r3, #28]
 8005752:	617b      	str	r3, [r7, #20]
 8005754:	68fb      	ldr	r3, [r7, #12]
 8005756:	6a1b      	ldr	r3, [r3, #32]
 8005758:	613b      	str	r3, [r7, #16]
 800575a:	697b      	ldr	r3, [r7, #20]
 800575c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005760:	617b      	str	r3, [r7, #20]
 8005762:	687b      	ldr	r3, [r7, #4]
 8005764:	021b      	lsls	r3, r3, #8
 8005766:	697a      	ldr	r2, [r7, #20]
 8005768:	4313      	orrs	r3, r2
 800576a:	617b      	str	r3, [r7, #20]
 800576c:	697b      	ldr	r3, [r7, #20]
 800576e:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8005772:	617b      	str	r3, [r7, #20]
 8005774:	683b      	ldr	r3, [r7, #0]
 8005776:	031b      	lsls	r3, r3, #12
 8005778:	b29b      	uxth	r3, r3
 800577a:	697a      	ldr	r2, [r7, #20]
 800577c:	4313      	orrs	r3, r2
 800577e:	617b      	str	r3, [r7, #20]
 8005780:	693b      	ldr	r3, [r7, #16]
 8005782:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 8005786:	613b      	str	r3, [r7, #16]
 8005788:	68bb      	ldr	r3, [r7, #8]
 800578a:	031b      	lsls	r3, r3, #12
 800578c:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 8005790:	693a      	ldr	r2, [r7, #16]
 8005792:	4313      	orrs	r3, r2
 8005794:	613b      	str	r3, [r7, #16]
 8005796:	68fb      	ldr	r3, [r7, #12]
 8005798:	697a      	ldr	r2, [r7, #20]
 800579a:	61da      	str	r2, [r3, #28]
 800579c:	68fb      	ldr	r3, [r7, #12]
 800579e:	693a      	ldr	r2, [r7, #16]
 80057a0:	621a      	str	r2, [r3, #32]
 80057a2:	bf00      	nop
 80057a4:	371c      	adds	r7, #28
 80057a6:	46bd      	mov	sp, r7
 80057a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057ac:	4770      	bx	lr

080057ae <TIM_ITRx_SetConfig>:
 80057ae:	b480      	push	{r7}
 80057b0:	b085      	sub	sp, #20
 80057b2:	af00      	add	r7, sp, #0
 80057b4:	6078      	str	r0, [r7, #4]
 80057b6:	6039      	str	r1, [r7, #0]
 80057b8:	687b      	ldr	r3, [r7, #4]
 80057ba:	689b      	ldr	r3, [r3, #8]
 80057bc:	60fb      	str	r3, [r7, #12]
 80057be:	68fb      	ldr	r3, [r7, #12]
 80057c0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80057c4:	60fb      	str	r3, [r7, #12]
 80057c6:	683a      	ldr	r2, [r7, #0]
 80057c8:	68fb      	ldr	r3, [r7, #12]
 80057ca:	4313      	orrs	r3, r2
 80057cc:	f043 0307 	orr.w	r3, r3, #7
 80057d0:	60fb      	str	r3, [r7, #12]
 80057d2:	687b      	ldr	r3, [r7, #4]
 80057d4:	68fa      	ldr	r2, [r7, #12]
 80057d6:	609a      	str	r2, [r3, #8]
 80057d8:	bf00      	nop
 80057da:	3714      	adds	r7, #20
 80057dc:	46bd      	mov	sp, r7
 80057de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057e2:	4770      	bx	lr

080057e4 <TIM_ETR_SetConfig>:
 80057e4:	b480      	push	{r7}
 80057e6:	b087      	sub	sp, #28
 80057e8:	af00      	add	r7, sp, #0
 80057ea:	60f8      	str	r0, [r7, #12]
 80057ec:	60b9      	str	r1, [r7, #8]
 80057ee:	607a      	str	r2, [r7, #4]
 80057f0:	603b      	str	r3, [r7, #0]
 80057f2:	68fb      	ldr	r3, [r7, #12]
 80057f4:	689b      	ldr	r3, [r3, #8]
 80057f6:	617b      	str	r3, [r7, #20]
 80057f8:	697b      	ldr	r3, [r7, #20]
 80057fa:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80057fe:	617b      	str	r3, [r7, #20]
 8005800:	683b      	ldr	r3, [r7, #0]
 8005802:	021a      	lsls	r2, r3, #8
 8005804:	687b      	ldr	r3, [r7, #4]
 8005806:	431a      	orrs	r2, r3
 8005808:	68bb      	ldr	r3, [r7, #8]
 800580a:	4313      	orrs	r3, r2
 800580c:	697a      	ldr	r2, [r7, #20]
 800580e:	4313      	orrs	r3, r2
 8005810:	617b      	str	r3, [r7, #20]
 8005812:	68fb      	ldr	r3, [r7, #12]
 8005814:	697a      	ldr	r2, [r7, #20]
 8005816:	609a      	str	r2, [r3, #8]
 8005818:	bf00      	nop
 800581a:	371c      	adds	r7, #28
 800581c:	46bd      	mov	sp, r7
 800581e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005822:	4770      	bx	lr

08005824 <TIM_CCxChannelCmd>:
 8005824:	b480      	push	{r7}
 8005826:	b087      	sub	sp, #28
 8005828:	af00      	add	r7, sp, #0
 800582a:	60f8      	str	r0, [r7, #12]
 800582c:	60b9      	str	r1, [r7, #8]
 800582e:	607a      	str	r2, [r7, #4]
 8005830:	68bb      	ldr	r3, [r7, #8]
 8005832:	f003 031f 	and.w	r3, r3, #31
 8005836:	2201      	movs	r2, #1
 8005838:	fa02 f303 	lsl.w	r3, r2, r3
 800583c:	617b      	str	r3, [r7, #20]
 800583e:	68fb      	ldr	r3, [r7, #12]
 8005840:	6a1a      	ldr	r2, [r3, #32]
 8005842:	697b      	ldr	r3, [r7, #20]
 8005844:	43db      	mvns	r3, r3
 8005846:	401a      	ands	r2, r3
 8005848:	68fb      	ldr	r3, [r7, #12]
 800584a:	621a      	str	r2, [r3, #32]
 800584c:	68fb      	ldr	r3, [r7, #12]
 800584e:	6a1a      	ldr	r2, [r3, #32]
 8005850:	68bb      	ldr	r3, [r7, #8]
 8005852:	f003 031f 	and.w	r3, r3, #31
 8005856:	6879      	ldr	r1, [r7, #4]
 8005858:	fa01 f303 	lsl.w	r3, r1, r3
 800585c:	431a      	orrs	r2, r3
 800585e:	68fb      	ldr	r3, [r7, #12]
 8005860:	621a      	str	r2, [r3, #32]
 8005862:	bf00      	nop
 8005864:	371c      	adds	r7, #28
 8005866:	46bd      	mov	sp, r7
 8005868:	f85d 7b04 	ldr.w	r7, [sp], #4
 800586c:	4770      	bx	lr
	...

08005870 <HAL_TIMEx_MasterConfigSynchronization>:
 8005870:	b480      	push	{r7}
 8005872:	b085      	sub	sp, #20
 8005874:	af00      	add	r7, sp, #0
 8005876:	6078      	str	r0, [r7, #4]
 8005878:	6039      	str	r1, [r7, #0]
 800587a:	687b      	ldr	r3, [r7, #4]
 800587c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005880:	2b01      	cmp	r3, #1
 8005882:	d101      	bne.n	8005888 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005884:	2302      	movs	r3, #2
 8005886:	e05a      	b.n	800593e <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	2201      	movs	r2, #1
 800588c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005890:	687b      	ldr	r3, [r7, #4]
 8005892:	2202      	movs	r2, #2
 8005894:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005898:	687b      	ldr	r3, [r7, #4]
 800589a:	681b      	ldr	r3, [r3, #0]
 800589c:	685b      	ldr	r3, [r3, #4]
 800589e:	60fb      	str	r3, [r7, #12]
 80058a0:	687b      	ldr	r3, [r7, #4]
 80058a2:	681b      	ldr	r3, [r3, #0]
 80058a4:	689b      	ldr	r3, [r3, #8]
 80058a6:	60bb      	str	r3, [r7, #8]
 80058a8:	68fb      	ldr	r3, [r7, #12]
 80058aa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80058ae:	60fb      	str	r3, [r7, #12]
 80058b0:	683b      	ldr	r3, [r7, #0]
 80058b2:	681b      	ldr	r3, [r3, #0]
 80058b4:	68fa      	ldr	r2, [r7, #12]
 80058b6:	4313      	orrs	r3, r2
 80058b8:	60fb      	str	r3, [r7, #12]
 80058ba:	687b      	ldr	r3, [r7, #4]
 80058bc:	681b      	ldr	r3, [r3, #0]
 80058be:	68fa      	ldr	r2, [r7, #12]
 80058c0:	605a      	str	r2, [r3, #4]
 80058c2:	687b      	ldr	r3, [r7, #4]
 80058c4:	681b      	ldr	r3, [r3, #0]
 80058c6:	4a21      	ldr	r2, [pc, #132]	; (800594c <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 80058c8:	4293      	cmp	r3, r2
 80058ca:	d022      	beq.n	8005912 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80058cc:	687b      	ldr	r3, [r7, #4]
 80058ce:	681b      	ldr	r3, [r3, #0]
 80058d0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80058d4:	d01d      	beq.n	8005912 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80058d6:	687b      	ldr	r3, [r7, #4]
 80058d8:	681b      	ldr	r3, [r3, #0]
 80058da:	4a1d      	ldr	r2, [pc, #116]	; (8005950 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 80058dc:	4293      	cmp	r3, r2
 80058de:	d018      	beq.n	8005912 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80058e0:	687b      	ldr	r3, [r7, #4]
 80058e2:	681b      	ldr	r3, [r3, #0]
 80058e4:	4a1b      	ldr	r2, [pc, #108]	; (8005954 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 80058e6:	4293      	cmp	r3, r2
 80058e8:	d013      	beq.n	8005912 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80058ea:	687b      	ldr	r3, [r7, #4]
 80058ec:	681b      	ldr	r3, [r3, #0]
 80058ee:	4a1a      	ldr	r2, [pc, #104]	; (8005958 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 80058f0:	4293      	cmp	r3, r2
 80058f2:	d00e      	beq.n	8005912 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80058f4:	687b      	ldr	r3, [r7, #4]
 80058f6:	681b      	ldr	r3, [r3, #0]
 80058f8:	4a18      	ldr	r2, [pc, #96]	; (800595c <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80058fa:	4293      	cmp	r3, r2
 80058fc:	d009      	beq.n	8005912 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80058fe:	687b      	ldr	r3, [r7, #4]
 8005900:	681b      	ldr	r3, [r3, #0]
 8005902:	4a17      	ldr	r2, [pc, #92]	; (8005960 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8005904:	4293      	cmp	r3, r2
 8005906:	d004      	beq.n	8005912 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005908:	687b      	ldr	r3, [r7, #4]
 800590a:	681b      	ldr	r3, [r3, #0]
 800590c:	4a15      	ldr	r2, [pc, #84]	; (8005964 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800590e:	4293      	cmp	r3, r2
 8005910:	d10c      	bne.n	800592c <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8005912:	68bb      	ldr	r3, [r7, #8]
 8005914:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005918:	60bb      	str	r3, [r7, #8]
 800591a:	683b      	ldr	r3, [r7, #0]
 800591c:	685b      	ldr	r3, [r3, #4]
 800591e:	68ba      	ldr	r2, [r7, #8]
 8005920:	4313      	orrs	r3, r2
 8005922:	60bb      	str	r3, [r7, #8]
 8005924:	687b      	ldr	r3, [r7, #4]
 8005926:	681b      	ldr	r3, [r3, #0]
 8005928:	68ba      	ldr	r2, [r7, #8]
 800592a:	609a      	str	r2, [r3, #8]
 800592c:	687b      	ldr	r3, [r7, #4]
 800592e:	2201      	movs	r2, #1
 8005930:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005934:	687b      	ldr	r3, [r7, #4]
 8005936:	2200      	movs	r2, #0
 8005938:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800593c:	2300      	movs	r3, #0
 800593e:	4618      	mov	r0, r3
 8005940:	3714      	adds	r7, #20
 8005942:	46bd      	mov	sp, r7
 8005944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005948:	4770      	bx	lr
 800594a:	bf00      	nop
 800594c:	40010000 	.word	0x40010000
 8005950:	40000400 	.word	0x40000400
 8005954:	40000800 	.word	0x40000800
 8005958:	40000c00 	.word	0x40000c00
 800595c:	40010400 	.word	0x40010400
 8005960:	40014000 	.word	0x40014000
 8005964:	40001800 	.word	0x40001800

08005968 <HAL_TIMEx_CommutCallback>:
 8005968:	b480      	push	{r7}
 800596a:	b083      	sub	sp, #12
 800596c:	af00      	add	r7, sp, #0
 800596e:	6078      	str	r0, [r7, #4]
 8005970:	bf00      	nop
 8005972:	370c      	adds	r7, #12
 8005974:	46bd      	mov	sp, r7
 8005976:	f85d 7b04 	ldr.w	r7, [sp], #4
 800597a:	4770      	bx	lr

0800597c <HAL_TIMEx_BreakCallback>:
 800597c:	b480      	push	{r7}
 800597e:	b083      	sub	sp, #12
 8005980:	af00      	add	r7, sp, #0
 8005982:	6078      	str	r0, [r7, #4]
 8005984:	bf00      	nop
 8005986:	370c      	adds	r7, #12
 8005988:	46bd      	mov	sp, r7
 800598a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800598e:	4770      	bx	lr

08005990 <HAL_UART_Init>:
 8005990:	b580      	push	{r7, lr}
 8005992:	b082      	sub	sp, #8
 8005994:	af00      	add	r7, sp, #0
 8005996:	6078      	str	r0, [r7, #4]
 8005998:	687b      	ldr	r3, [r7, #4]
 800599a:	2b00      	cmp	r3, #0
 800599c:	d101      	bne.n	80059a2 <HAL_UART_Init+0x12>
 800599e:	2301      	movs	r3, #1
 80059a0:	e03f      	b.n	8005a22 <HAL_UART_Init+0x92>
 80059a2:	687b      	ldr	r3, [r7, #4]
 80059a4:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80059a8:	b2db      	uxtb	r3, r3
 80059aa:	2b00      	cmp	r3, #0
 80059ac:	d106      	bne.n	80059bc <HAL_UART_Init+0x2c>
 80059ae:	687b      	ldr	r3, [r7, #4]
 80059b0:	2200      	movs	r2, #0
 80059b2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80059b6:	6878      	ldr	r0, [r7, #4]
 80059b8:	f7fc ff7a 	bl	80028b0 <HAL_UART_MspInit>
 80059bc:	687b      	ldr	r3, [r7, #4]
 80059be:	2224      	movs	r2, #36	; 0x24
 80059c0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	681b      	ldr	r3, [r3, #0]
 80059c8:	68da      	ldr	r2, [r3, #12]
 80059ca:	687b      	ldr	r3, [r7, #4]
 80059cc:	681b      	ldr	r3, [r3, #0]
 80059ce:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80059d2:	60da      	str	r2, [r3, #12]
 80059d4:	6878      	ldr	r0, [r7, #4]
 80059d6:	f000 fb97 	bl	8006108 <UART_SetConfig>
 80059da:	687b      	ldr	r3, [r7, #4]
 80059dc:	681b      	ldr	r3, [r3, #0]
 80059de:	691a      	ldr	r2, [r3, #16]
 80059e0:	687b      	ldr	r3, [r7, #4]
 80059e2:	681b      	ldr	r3, [r3, #0]
 80059e4:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80059e8:	611a      	str	r2, [r3, #16]
 80059ea:	687b      	ldr	r3, [r7, #4]
 80059ec:	681b      	ldr	r3, [r3, #0]
 80059ee:	695a      	ldr	r2, [r3, #20]
 80059f0:	687b      	ldr	r3, [r7, #4]
 80059f2:	681b      	ldr	r3, [r3, #0]
 80059f4:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80059f8:	615a      	str	r2, [r3, #20]
 80059fa:	687b      	ldr	r3, [r7, #4]
 80059fc:	681b      	ldr	r3, [r3, #0]
 80059fe:	68da      	ldr	r2, [r3, #12]
 8005a00:	687b      	ldr	r3, [r7, #4]
 8005a02:	681b      	ldr	r3, [r3, #0]
 8005a04:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8005a08:	60da      	str	r2, [r3, #12]
 8005a0a:	687b      	ldr	r3, [r7, #4]
 8005a0c:	2200      	movs	r2, #0
 8005a0e:	63da      	str	r2, [r3, #60]	; 0x3c
 8005a10:	687b      	ldr	r3, [r7, #4]
 8005a12:	2220      	movs	r2, #32
 8005a14:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005a18:	687b      	ldr	r3, [r7, #4]
 8005a1a:	2220      	movs	r2, #32
 8005a1c:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8005a20:	2300      	movs	r3, #0
 8005a22:	4618      	mov	r0, r3
 8005a24:	3708      	adds	r7, #8
 8005a26:	46bd      	mov	sp, r7
 8005a28:	bd80      	pop	{r7, pc}

08005a2a <HAL_UART_Transmit>:
 8005a2a:	b580      	push	{r7, lr}
 8005a2c:	b088      	sub	sp, #32
 8005a2e:	af02      	add	r7, sp, #8
 8005a30:	60f8      	str	r0, [r7, #12]
 8005a32:	60b9      	str	r1, [r7, #8]
 8005a34:	603b      	str	r3, [r7, #0]
 8005a36:	4613      	mov	r3, r2
 8005a38:	80fb      	strh	r3, [r7, #6]
 8005a3a:	2300      	movs	r3, #0
 8005a3c:	617b      	str	r3, [r7, #20]
 8005a3e:	68fb      	ldr	r3, [r7, #12]
 8005a40:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8005a44:	b2db      	uxtb	r3, r3
 8005a46:	2b20      	cmp	r3, #32
 8005a48:	f040 8083 	bne.w	8005b52 <HAL_UART_Transmit+0x128>
 8005a4c:	68bb      	ldr	r3, [r7, #8]
 8005a4e:	2b00      	cmp	r3, #0
 8005a50:	d002      	beq.n	8005a58 <HAL_UART_Transmit+0x2e>
 8005a52:	88fb      	ldrh	r3, [r7, #6]
 8005a54:	2b00      	cmp	r3, #0
 8005a56:	d101      	bne.n	8005a5c <HAL_UART_Transmit+0x32>
 8005a58:	2301      	movs	r3, #1
 8005a5a:	e07b      	b.n	8005b54 <HAL_UART_Transmit+0x12a>
 8005a5c:	68fb      	ldr	r3, [r7, #12]
 8005a5e:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8005a62:	2b01      	cmp	r3, #1
 8005a64:	d101      	bne.n	8005a6a <HAL_UART_Transmit+0x40>
 8005a66:	2302      	movs	r3, #2
 8005a68:	e074      	b.n	8005b54 <HAL_UART_Transmit+0x12a>
 8005a6a:	68fb      	ldr	r3, [r7, #12]
 8005a6c:	2201      	movs	r2, #1
 8005a6e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8005a72:	68fb      	ldr	r3, [r7, #12]
 8005a74:	2200      	movs	r2, #0
 8005a76:	63da      	str	r2, [r3, #60]	; 0x3c
 8005a78:	68fb      	ldr	r3, [r7, #12]
 8005a7a:	2221      	movs	r2, #33	; 0x21
 8005a7c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005a80:	f7fd f8aa 	bl	8002bd8 <HAL_GetTick>
 8005a84:	6178      	str	r0, [r7, #20]
 8005a86:	68fb      	ldr	r3, [r7, #12]
 8005a88:	88fa      	ldrh	r2, [r7, #6]
 8005a8a:	849a      	strh	r2, [r3, #36]	; 0x24
 8005a8c:	68fb      	ldr	r3, [r7, #12]
 8005a8e:	88fa      	ldrh	r2, [r7, #6]
 8005a90:	84da      	strh	r2, [r3, #38]	; 0x26
 8005a92:	68fb      	ldr	r3, [r7, #12]
 8005a94:	2200      	movs	r2, #0
 8005a96:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8005a9a:	e042      	b.n	8005b22 <HAL_UART_Transmit+0xf8>
 8005a9c:	68fb      	ldr	r3, [r7, #12]
 8005a9e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8005aa0:	b29b      	uxth	r3, r3
 8005aa2:	3b01      	subs	r3, #1
 8005aa4:	b29a      	uxth	r2, r3
 8005aa6:	68fb      	ldr	r3, [r7, #12]
 8005aa8:	84da      	strh	r2, [r3, #38]	; 0x26
 8005aaa:	68fb      	ldr	r3, [r7, #12]
 8005aac:	689b      	ldr	r3, [r3, #8]
 8005aae:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005ab2:	d122      	bne.n	8005afa <HAL_UART_Transmit+0xd0>
 8005ab4:	683b      	ldr	r3, [r7, #0]
 8005ab6:	9300      	str	r3, [sp, #0]
 8005ab8:	697b      	ldr	r3, [r7, #20]
 8005aba:	2200      	movs	r2, #0
 8005abc:	2180      	movs	r1, #128	; 0x80
 8005abe:	68f8      	ldr	r0, [r7, #12]
 8005ac0:	f000 f9b6 	bl	8005e30 <UART_WaitOnFlagUntilTimeout>
 8005ac4:	4603      	mov	r3, r0
 8005ac6:	2b00      	cmp	r3, #0
 8005ac8:	d001      	beq.n	8005ace <HAL_UART_Transmit+0xa4>
 8005aca:	2303      	movs	r3, #3
 8005acc:	e042      	b.n	8005b54 <HAL_UART_Transmit+0x12a>
 8005ace:	68bb      	ldr	r3, [r7, #8]
 8005ad0:	613b      	str	r3, [r7, #16]
 8005ad2:	693b      	ldr	r3, [r7, #16]
 8005ad4:	881b      	ldrh	r3, [r3, #0]
 8005ad6:	461a      	mov	r2, r3
 8005ad8:	68fb      	ldr	r3, [r7, #12]
 8005ada:	681b      	ldr	r3, [r3, #0]
 8005adc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005ae0:	605a      	str	r2, [r3, #4]
 8005ae2:	68fb      	ldr	r3, [r7, #12]
 8005ae4:	691b      	ldr	r3, [r3, #16]
 8005ae6:	2b00      	cmp	r3, #0
 8005ae8:	d103      	bne.n	8005af2 <HAL_UART_Transmit+0xc8>
 8005aea:	68bb      	ldr	r3, [r7, #8]
 8005aec:	3302      	adds	r3, #2
 8005aee:	60bb      	str	r3, [r7, #8]
 8005af0:	e017      	b.n	8005b22 <HAL_UART_Transmit+0xf8>
 8005af2:	68bb      	ldr	r3, [r7, #8]
 8005af4:	3301      	adds	r3, #1
 8005af6:	60bb      	str	r3, [r7, #8]
 8005af8:	e013      	b.n	8005b22 <HAL_UART_Transmit+0xf8>
 8005afa:	683b      	ldr	r3, [r7, #0]
 8005afc:	9300      	str	r3, [sp, #0]
 8005afe:	697b      	ldr	r3, [r7, #20]
 8005b00:	2200      	movs	r2, #0
 8005b02:	2180      	movs	r1, #128	; 0x80
 8005b04:	68f8      	ldr	r0, [r7, #12]
 8005b06:	f000 f993 	bl	8005e30 <UART_WaitOnFlagUntilTimeout>
 8005b0a:	4603      	mov	r3, r0
 8005b0c:	2b00      	cmp	r3, #0
 8005b0e:	d001      	beq.n	8005b14 <HAL_UART_Transmit+0xea>
 8005b10:	2303      	movs	r3, #3
 8005b12:	e01f      	b.n	8005b54 <HAL_UART_Transmit+0x12a>
 8005b14:	68bb      	ldr	r3, [r7, #8]
 8005b16:	1c5a      	adds	r2, r3, #1
 8005b18:	60ba      	str	r2, [r7, #8]
 8005b1a:	781a      	ldrb	r2, [r3, #0]
 8005b1c:	68fb      	ldr	r3, [r7, #12]
 8005b1e:	681b      	ldr	r3, [r3, #0]
 8005b20:	605a      	str	r2, [r3, #4]
 8005b22:	68fb      	ldr	r3, [r7, #12]
 8005b24:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8005b26:	b29b      	uxth	r3, r3
 8005b28:	2b00      	cmp	r3, #0
 8005b2a:	d1b7      	bne.n	8005a9c <HAL_UART_Transmit+0x72>
 8005b2c:	683b      	ldr	r3, [r7, #0]
 8005b2e:	9300      	str	r3, [sp, #0]
 8005b30:	697b      	ldr	r3, [r7, #20]
 8005b32:	2200      	movs	r2, #0
 8005b34:	2140      	movs	r1, #64	; 0x40
 8005b36:	68f8      	ldr	r0, [r7, #12]
 8005b38:	f000 f97a 	bl	8005e30 <UART_WaitOnFlagUntilTimeout>
 8005b3c:	4603      	mov	r3, r0
 8005b3e:	2b00      	cmp	r3, #0
 8005b40:	d001      	beq.n	8005b46 <HAL_UART_Transmit+0x11c>
 8005b42:	2303      	movs	r3, #3
 8005b44:	e006      	b.n	8005b54 <HAL_UART_Transmit+0x12a>
 8005b46:	68fb      	ldr	r3, [r7, #12]
 8005b48:	2220      	movs	r2, #32
 8005b4a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005b4e:	2300      	movs	r3, #0
 8005b50:	e000      	b.n	8005b54 <HAL_UART_Transmit+0x12a>
 8005b52:	2302      	movs	r3, #2
 8005b54:	4618      	mov	r0, r3
 8005b56:	3718      	adds	r7, #24
 8005b58:	46bd      	mov	sp, r7
 8005b5a:	bd80      	pop	{r7, pc}

08005b5c <HAL_UART_Receive_IT>:
 8005b5c:	b480      	push	{r7}
 8005b5e:	b085      	sub	sp, #20
 8005b60:	af00      	add	r7, sp, #0
 8005b62:	60f8      	str	r0, [r7, #12]
 8005b64:	60b9      	str	r1, [r7, #8]
 8005b66:	4613      	mov	r3, r2
 8005b68:	80fb      	strh	r3, [r7, #6]
 8005b6a:	68fb      	ldr	r3, [r7, #12]
 8005b6c:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8005b70:	b2db      	uxtb	r3, r3
 8005b72:	2b20      	cmp	r3, #32
 8005b74:	d140      	bne.n	8005bf8 <HAL_UART_Receive_IT+0x9c>
 8005b76:	68bb      	ldr	r3, [r7, #8]
 8005b78:	2b00      	cmp	r3, #0
 8005b7a:	d002      	beq.n	8005b82 <HAL_UART_Receive_IT+0x26>
 8005b7c:	88fb      	ldrh	r3, [r7, #6]
 8005b7e:	2b00      	cmp	r3, #0
 8005b80:	d101      	bne.n	8005b86 <HAL_UART_Receive_IT+0x2a>
 8005b82:	2301      	movs	r3, #1
 8005b84:	e039      	b.n	8005bfa <HAL_UART_Receive_IT+0x9e>
 8005b86:	68fb      	ldr	r3, [r7, #12]
 8005b88:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8005b8c:	2b01      	cmp	r3, #1
 8005b8e:	d101      	bne.n	8005b94 <HAL_UART_Receive_IT+0x38>
 8005b90:	2302      	movs	r3, #2
 8005b92:	e032      	b.n	8005bfa <HAL_UART_Receive_IT+0x9e>
 8005b94:	68fb      	ldr	r3, [r7, #12]
 8005b96:	2201      	movs	r2, #1
 8005b98:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8005b9c:	68fb      	ldr	r3, [r7, #12]
 8005b9e:	68ba      	ldr	r2, [r7, #8]
 8005ba0:	629a      	str	r2, [r3, #40]	; 0x28
 8005ba2:	68fb      	ldr	r3, [r7, #12]
 8005ba4:	88fa      	ldrh	r2, [r7, #6]
 8005ba6:	859a      	strh	r2, [r3, #44]	; 0x2c
 8005ba8:	68fb      	ldr	r3, [r7, #12]
 8005baa:	88fa      	ldrh	r2, [r7, #6]
 8005bac:	85da      	strh	r2, [r3, #46]	; 0x2e
 8005bae:	68fb      	ldr	r3, [r7, #12]
 8005bb0:	2200      	movs	r2, #0
 8005bb2:	63da      	str	r2, [r3, #60]	; 0x3c
 8005bb4:	68fb      	ldr	r3, [r7, #12]
 8005bb6:	2222      	movs	r2, #34	; 0x22
 8005bb8:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8005bbc:	68fb      	ldr	r3, [r7, #12]
 8005bbe:	2200      	movs	r2, #0
 8005bc0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8005bc4:	68fb      	ldr	r3, [r7, #12]
 8005bc6:	681b      	ldr	r3, [r3, #0]
 8005bc8:	68da      	ldr	r2, [r3, #12]
 8005bca:	68fb      	ldr	r3, [r7, #12]
 8005bcc:	681b      	ldr	r3, [r3, #0]
 8005bce:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005bd2:	60da      	str	r2, [r3, #12]
 8005bd4:	68fb      	ldr	r3, [r7, #12]
 8005bd6:	681b      	ldr	r3, [r3, #0]
 8005bd8:	695a      	ldr	r2, [r3, #20]
 8005bda:	68fb      	ldr	r3, [r7, #12]
 8005bdc:	681b      	ldr	r3, [r3, #0]
 8005bde:	f042 0201 	orr.w	r2, r2, #1
 8005be2:	615a      	str	r2, [r3, #20]
 8005be4:	68fb      	ldr	r3, [r7, #12]
 8005be6:	681b      	ldr	r3, [r3, #0]
 8005be8:	68da      	ldr	r2, [r3, #12]
 8005bea:	68fb      	ldr	r3, [r7, #12]
 8005bec:	681b      	ldr	r3, [r3, #0]
 8005bee:	f042 0220 	orr.w	r2, r2, #32
 8005bf2:	60da      	str	r2, [r3, #12]
 8005bf4:	2300      	movs	r3, #0
 8005bf6:	e000      	b.n	8005bfa <HAL_UART_Receive_IT+0x9e>
 8005bf8:	2302      	movs	r3, #2
 8005bfa:	4618      	mov	r0, r3
 8005bfc:	3714      	adds	r7, #20
 8005bfe:	46bd      	mov	sp, r7
 8005c00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c04:	4770      	bx	lr
	...

08005c08 <HAL_UART_IRQHandler>:
 8005c08:	b580      	push	{r7, lr}
 8005c0a:	b088      	sub	sp, #32
 8005c0c:	af00      	add	r7, sp, #0
 8005c0e:	6078      	str	r0, [r7, #4]
 8005c10:	687b      	ldr	r3, [r7, #4]
 8005c12:	681b      	ldr	r3, [r3, #0]
 8005c14:	681b      	ldr	r3, [r3, #0]
 8005c16:	61fb      	str	r3, [r7, #28]
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	681b      	ldr	r3, [r3, #0]
 8005c1c:	68db      	ldr	r3, [r3, #12]
 8005c1e:	61bb      	str	r3, [r7, #24]
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	681b      	ldr	r3, [r3, #0]
 8005c24:	695b      	ldr	r3, [r3, #20]
 8005c26:	617b      	str	r3, [r7, #20]
 8005c28:	2300      	movs	r3, #0
 8005c2a:	613b      	str	r3, [r7, #16]
 8005c2c:	2300      	movs	r3, #0
 8005c2e:	60fb      	str	r3, [r7, #12]
 8005c30:	69fb      	ldr	r3, [r7, #28]
 8005c32:	f003 030f 	and.w	r3, r3, #15
 8005c36:	613b      	str	r3, [r7, #16]
 8005c38:	693b      	ldr	r3, [r7, #16]
 8005c3a:	2b00      	cmp	r3, #0
 8005c3c:	d10d      	bne.n	8005c5a <HAL_UART_IRQHandler+0x52>
 8005c3e:	69fb      	ldr	r3, [r7, #28]
 8005c40:	f003 0320 	and.w	r3, r3, #32
 8005c44:	2b00      	cmp	r3, #0
 8005c46:	d008      	beq.n	8005c5a <HAL_UART_IRQHandler+0x52>
 8005c48:	69bb      	ldr	r3, [r7, #24]
 8005c4a:	f003 0320 	and.w	r3, r3, #32
 8005c4e:	2b00      	cmp	r3, #0
 8005c50:	d003      	beq.n	8005c5a <HAL_UART_IRQHandler+0x52>
 8005c52:	6878      	ldr	r0, [r7, #4]
 8005c54:	f000 f9d6 	bl	8006004 <UART_Receive_IT>
 8005c58:	e0d1      	b.n	8005dfe <HAL_UART_IRQHandler+0x1f6>
 8005c5a:	693b      	ldr	r3, [r7, #16]
 8005c5c:	2b00      	cmp	r3, #0
 8005c5e:	f000 80b0 	beq.w	8005dc2 <HAL_UART_IRQHandler+0x1ba>
 8005c62:	697b      	ldr	r3, [r7, #20]
 8005c64:	f003 0301 	and.w	r3, r3, #1
 8005c68:	2b00      	cmp	r3, #0
 8005c6a:	d105      	bne.n	8005c78 <HAL_UART_IRQHandler+0x70>
 8005c6c:	69bb      	ldr	r3, [r7, #24]
 8005c6e:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8005c72:	2b00      	cmp	r3, #0
 8005c74:	f000 80a5 	beq.w	8005dc2 <HAL_UART_IRQHandler+0x1ba>
 8005c78:	69fb      	ldr	r3, [r7, #28]
 8005c7a:	f003 0301 	and.w	r3, r3, #1
 8005c7e:	2b00      	cmp	r3, #0
 8005c80:	d00a      	beq.n	8005c98 <HAL_UART_IRQHandler+0x90>
 8005c82:	69bb      	ldr	r3, [r7, #24]
 8005c84:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005c88:	2b00      	cmp	r3, #0
 8005c8a:	d005      	beq.n	8005c98 <HAL_UART_IRQHandler+0x90>
 8005c8c:	687b      	ldr	r3, [r7, #4]
 8005c8e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005c90:	f043 0201 	orr.w	r2, r3, #1
 8005c94:	687b      	ldr	r3, [r7, #4]
 8005c96:	63da      	str	r2, [r3, #60]	; 0x3c
 8005c98:	69fb      	ldr	r3, [r7, #28]
 8005c9a:	f003 0304 	and.w	r3, r3, #4
 8005c9e:	2b00      	cmp	r3, #0
 8005ca0:	d00a      	beq.n	8005cb8 <HAL_UART_IRQHandler+0xb0>
 8005ca2:	697b      	ldr	r3, [r7, #20]
 8005ca4:	f003 0301 	and.w	r3, r3, #1
 8005ca8:	2b00      	cmp	r3, #0
 8005caa:	d005      	beq.n	8005cb8 <HAL_UART_IRQHandler+0xb0>
 8005cac:	687b      	ldr	r3, [r7, #4]
 8005cae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005cb0:	f043 0202 	orr.w	r2, r3, #2
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	63da      	str	r2, [r3, #60]	; 0x3c
 8005cb8:	69fb      	ldr	r3, [r7, #28]
 8005cba:	f003 0302 	and.w	r3, r3, #2
 8005cbe:	2b00      	cmp	r3, #0
 8005cc0:	d00a      	beq.n	8005cd8 <HAL_UART_IRQHandler+0xd0>
 8005cc2:	697b      	ldr	r3, [r7, #20]
 8005cc4:	f003 0301 	and.w	r3, r3, #1
 8005cc8:	2b00      	cmp	r3, #0
 8005cca:	d005      	beq.n	8005cd8 <HAL_UART_IRQHandler+0xd0>
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005cd0:	f043 0204 	orr.w	r2, r3, #4
 8005cd4:	687b      	ldr	r3, [r7, #4]
 8005cd6:	63da      	str	r2, [r3, #60]	; 0x3c
 8005cd8:	69fb      	ldr	r3, [r7, #28]
 8005cda:	f003 0308 	and.w	r3, r3, #8
 8005cde:	2b00      	cmp	r3, #0
 8005ce0:	d00f      	beq.n	8005d02 <HAL_UART_IRQHandler+0xfa>
 8005ce2:	69bb      	ldr	r3, [r7, #24]
 8005ce4:	f003 0320 	and.w	r3, r3, #32
 8005ce8:	2b00      	cmp	r3, #0
 8005cea:	d104      	bne.n	8005cf6 <HAL_UART_IRQHandler+0xee>
 8005cec:	697b      	ldr	r3, [r7, #20]
 8005cee:	f003 0301 	and.w	r3, r3, #1
 8005cf2:	2b00      	cmp	r3, #0
 8005cf4:	d005      	beq.n	8005d02 <HAL_UART_IRQHandler+0xfa>
 8005cf6:	687b      	ldr	r3, [r7, #4]
 8005cf8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005cfa:	f043 0208 	orr.w	r2, r3, #8
 8005cfe:	687b      	ldr	r3, [r7, #4]
 8005d00:	63da      	str	r2, [r3, #60]	; 0x3c
 8005d02:	687b      	ldr	r3, [r7, #4]
 8005d04:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005d06:	2b00      	cmp	r3, #0
 8005d08:	d078      	beq.n	8005dfc <HAL_UART_IRQHandler+0x1f4>
 8005d0a:	69fb      	ldr	r3, [r7, #28]
 8005d0c:	f003 0320 	and.w	r3, r3, #32
 8005d10:	2b00      	cmp	r3, #0
 8005d12:	d007      	beq.n	8005d24 <HAL_UART_IRQHandler+0x11c>
 8005d14:	69bb      	ldr	r3, [r7, #24]
 8005d16:	f003 0320 	and.w	r3, r3, #32
 8005d1a:	2b00      	cmp	r3, #0
 8005d1c:	d002      	beq.n	8005d24 <HAL_UART_IRQHandler+0x11c>
 8005d1e:	6878      	ldr	r0, [r7, #4]
 8005d20:	f000 f970 	bl	8006004 <UART_Receive_IT>
 8005d24:	687b      	ldr	r3, [r7, #4]
 8005d26:	681b      	ldr	r3, [r3, #0]
 8005d28:	695b      	ldr	r3, [r3, #20]
 8005d2a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005d2e:	2b40      	cmp	r3, #64	; 0x40
 8005d30:	bf0c      	ite	eq
 8005d32:	2301      	moveq	r3, #1
 8005d34:	2300      	movne	r3, #0
 8005d36:	b2db      	uxtb	r3, r3
 8005d38:	60fb      	str	r3, [r7, #12]
 8005d3a:	687b      	ldr	r3, [r7, #4]
 8005d3c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005d3e:	f003 0308 	and.w	r3, r3, #8
 8005d42:	2b00      	cmp	r3, #0
 8005d44:	d102      	bne.n	8005d4c <HAL_UART_IRQHandler+0x144>
 8005d46:	68fb      	ldr	r3, [r7, #12]
 8005d48:	2b00      	cmp	r3, #0
 8005d4a:	d031      	beq.n	8005db0 <HAL_UART_IRQHandler+0x1a8>
 8005d4c:	6878      	ldr	r0, [r7, #4]
 8005d4e:	f000 f8b9 	bl	8005ec4 <UART_EndRxTransfer>
 8005d52:	687b      	ldr	r3, [r7, #4]
 8005d54:	681b      	ldr	r3, [r3, #0]
 8005d56:	695b      	ldr	r3, [r3, #20]
 8005d58:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005d5c:	2b40      	cmp	r3, #64	; 0x40
 8005d5e:	d123      	bne.n	8005da8 <HAL_UART_IRQHandler+0x1a0>
 8005d60:	687b      	ldr	r3, [r7, #4]
 8005d62:	681b      	ldr	r3, [r3, #0]
 8005d64:	695a      	ldr	r2, [r3, #20]
 8005d66:	687b      	ldr	r3, [r7, #4]
 8005d68:	681b      	ldr	r3, [r3, #0]
 8005d6a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005d6e:	615a      	str	r2, [r3, #20]
 8005d70:	687b      	ldr	r3, [r7, #4]
 8005d72:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005d74:	2b00      	cmp	r3, #0
 8005d76:	d013      	beq.n	8005da0 <HAL_UART_IRQHandler+0x198>
 8005d78:	687b      	ldr	r3, [r7, #4]
 8005d7a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005d7c:	4a21      	ldr	r2, [pc, #132]	; (8005e04 <HAL_UART_IRQHandler+0x1fc>)
 8005d7e:	651a      	str	r2, [r3, #80]	; 0x50
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005d84:	4618      	mov	r0, r3
 8005d86:	f7fd fa13 	bl	80031b0 <HAL_DMA_Abort_IT>
 8005d8a:	4603      	mov	r3, r0
 8005d8c:	2b00      	cmp	r3, #0
 8005d8e:	d016      	beq.n	8005dbe <HAL_UART_IRQHandler+0x1b6>
 8005d90:	687b      	ldr	r3, [r7, #4]
 8005d92:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005d94:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005d96:	687a      	ldr	r2, [r7, #4]
 8005d98:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8005d9a:	4610      	mov	r0, r2
 8005d9c:	4798      	blx	r3
 8005d9e:	e00e      	b.n	8005dbe <HAL_UART_IRQHandler+0x1b6>
 8005da0:	6878      	ldr	r0, [r7, #4]
 8005da2:	f000 f83b 	bl	8005e1c <HAL_UART_ErrorCallback>
 8005da6:	e00a      	b.n	8005dbe <HAL_UART_IRQHandler+0x1b6>
 8005da8:	6878      	ldr	r0, [r7, #4]
 8005daa:	f000 f837 	bl	8005e1c <HAL_UART_ErrorCallback>
 8005dae:	e006      	b.n	8005dbe <HAL_UART_IRQHandler+0x1b6>
 8005db0:	6878      	ldr	r0, [r7, #4]
 8005db2:	f000 f833 	bl	8005e1c <HAL_UART_ErrorCallback>
 8005db6:	687b      	ldr	r3, [r7, #4]
 8005db8:	2200      	movs	r2, #0
 8005dba:	63da      	str	r2, [r3, #60]	; 0x3c
 8005dbc:	e01e      	b.n	8005dfc <HAL_UART_IRQHandler+0x1f4>
 8005dbe:	bf00      	nop
 8005dc0:	e01c      	b.n	8005dfc <HAL_UART_IRQHandler+0x1f4>
 8005dc2:	69fb      	ldr	r3, [r7, #28]
 8005dc4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005dc8:	2b00      	cmp	r3, #0
 8005dca:	d008      	beq.n	8005dde <HAL_UART_IRQHandler+0x1d6>
 8005dcc:	69bb      	ldr	r3, [r7, #24]
 8005dce:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005dd2:	2b00      	cmp	r3, #0
 8005dd4:	d003      	beq.n	8005dde <HAL_UART_IRQHandler+0x1d6>
 8005dd6:	6878      	ldr	r0, [r7, #4]
 8005dd8:	f000 f8a6 	bl	8005f28 <UART_Transmit_IT>
 8005ddc:	e00f      	b.n	8005dfe <HAL_UART_IRQHandler+0x1f6>
 8005dde:	69fb      	ldr	r3, [r7, #28]
 8005de0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005de4:	2b00      	cmp	r3, #0
 8005de6:	d00a      	beq.n	8005dfe <HAL_UART_IRQHandler+0x1f6>
 8005de8:	69bb      	ldr	r3, [r7, #24]
 8005dea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005dee:	2b00      	cmp	r3, #0
 8005df0:	d005      	beq.n	8005dfe <HAL_UART_IRQHandler+0x1f6>
 8005df2:	6878      	ldr	r0, [r7, #4]
 8005df4:	f000 f8ee 	bl	8005fd4 <UART_EndTransmit_IT>
 8005df8:	bf00      	nop
 8005dfa:	e000      	b.n	8005dfe <HAL_UART_IRQHandler+0x1f6>
 8005dfc:	bf00      	nop
 8005dfe:	3720      	adds	r7, #32
 8005e00:	46bd      	mov	sp, r7
 8005e02:	bd80      	pop	{r7, pc}
 8005e04:	08005f01 	.word	0x08005f01

08005e08 <HAL_UART_TxCpltCallback>:
 8005e08:	b480      	push	{r7}
 8005e0a:	b083      	sub	sp, #12
 8005e0c:	af00      	add	r7, sp, #0
 8005e0e:	6078      	str	r0, [r7, #4]
 8005e10:	bf00      	nop
 8005e12:	370c      	adds	r7, #12
 8005e14:	46bd      	mov	sp, r7
 8005e16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e1a:	4770      	bx	lr

08005e1c <HAL_UART_ErrorCallback>:
 8005e1c:	b480      	push	{r7}
 8005e1e:	b083      	sub	sp, #12
 8005e20:	af00      	add	r7, sp, #0
 8005e22:	6078      	str	r0, [r7, #4]
 8005e24:	bf00      	nop
 8005e26:	370c      	adds	r7, #12
 8005e28:	46bd      	mov	sp, r7
 8005e2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e2e:	4770      	bx	lr

08005e30 <UART_WaitOnFlagUntilTimeout>:
 8005e30:	b580      	push	{r7, lr}
 8005e32:	b084      	sub	sp, #16
 8005e34:	af00      	add	r7, sp, #0
 8005e36:	60f8      	str	r0, [r7, #12]
 8005e38:	60b9      	str	r1, [r7, #8]
 8005e3a:	603b      	str	r3, [r7, #0]
 8005e3c:	4613      	mov	r3, r2
 8005e3e:	71fb      	strb	r3, [r7, #7]
 8005e40:	e02c      	b.n	8005e9c <UART_WaitOnFlagUntilTimeout+0x6c>
 8005e42:	69bb      	ldr	r3, [r7, #24]
 8005e44:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005e48:	d028      	beq.n	8005e9c <UART_WaitOnFlagUntilTimeout+0x6c>
 8005e4a:	69bb      	ldr	r3, [r7, #24]
 8005e4c:	2b00      	cmp	r3, #0
 8005e4e:	d007      	beq.n	8005e60 <UART_WaitOnFlagUntilTimeout+0x30>
 8005e50:	f7fc fec2 	bl	8002bd8 <HAL_GetTick>
 8005e54:	4602      	mov	r2, r0
 8005e56:	683b      	ldr	r3, [r7, #0]
 8005e58:	1ad3      	subs	r3, r2, r3
 8005e5a:	69ba      	ldr	r2, [r7, #24]
 8005e5c:	429a      	cmp	r2, r3
 8005e5e:	d21d      	bcs.n	8005e9c <UART_WaitOnFlagUntilTimeout+0x6c>
 8005e60:	68fb      	ldr	r3, [r7, #12]
 8005e62:	681b      	ldr	r3, [r3, #0]
 8005e64:	68da      	ldr	r2, [r3, #12]
 8005e66:	68fb      	ldr	r3, [r7, #12]
 8005e68:	681b      	ldr	r3, [r3, #0]
 8005e6a:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8005e6e:	60da      	str	r2, [r3, #12]
 8005e70:	68fb      	ldr	r3, [r7, #12]
 8005e72:	681b      	ldr	r3, [r3, #0]
 8005e74:	695a      	ldr	r2, [r3, #20]
 8005e76:	68fb      	ldr	r3, [r7, #12]
 8005e78:	681b      	ldr	r3, [r3, #0]
 8005e7a:	f022 0201 	bic.w	r2, r2, #1
 8005e7e:	615a      	str	r2, [r3, #20]
 8005e80:	68fb      	ldr	r3, [r7, #12]
 8005e82:	2220      	movs	r2, #32
 8005e84:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005e88:	68fb      	ldr	r3, [r7, #12]
 8005e8a:	2220      	movs	r2, #32
 8005e8c:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8005e90:	68fb      	ldr	r3, [r7, #12]
 8005e92:	2200      	movs	r2, #0
 8005e94:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8005e98:	2303      	movs	r3, #3
 8005e9a:	e00f      	b.n	8005ebc <UART_WaitOnFlagUntilTimeout+0x8c>
 8005e9c:	68fb      	ldr	r3, [r7, #12]
 8005e9e:	681b      	ldr	r3, [r3, #0]
 8005ea0:	681a      	ldr	r2, [r3, #0]
 8005ea2:	68bb      	ldr	r3, [r7, #8]
 8005ea4:	4013      	ands	r3, r2
 8005ea6:	68ba      	ldr	r2, [r7, #8]
 8005ea8:	429a      	cmp	r2, r3
 8005eaa:	bf0c      	ite	eq
 8005eac:	2301      	moveq	r3, #1
 8005eae:	2300      	movne	r3, #0
 8005eb0:	b2db      	uxtb	r3, r3
 8005eb2:	461a      	mov	r2, r3
 8005eb4:	79fb      	ldrb	r3, [r7, #7]
 8005eb6:	429a      	cmp	r2, r3
 8005eb8:	d0c3      	beq.n	8005e42 <UART_WaitOnFlagUntilTimeout+0x12>
 8005eba:	2300      	movs	r3, #0
 8005ebc:	4618      	mov	r0, r3
 8005ebe:	3710      	adds	r7, #16
 8005ec0:	46bd      	mov	sp, r7
 8005ec2:	bd80      	pop	{r7, pc}

08005ec4 <UART_EndRxTransfer>:
 8005ec4:	b480      	push	{r7}
 8005ec6:	b083      	sub	sp, #12
 8005ec8:	af00      	add	r7, sp, #0
 8005eca:	6078      	str	r0, [r7, #4]
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	681b      	ldr	r3, [r3, #0]
 8005ed0:	68da      	ldr	r2, [r3, #12]
 8005ed2:	687b      	ldr	r3, [r7, #4]
 8005ed4:	681b      	ldr	r3, [r3, #0]
 8005ed6:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8005eda:	60da      	str	r2, [r3, #12]
 8005edc:	687b      	ldr	r3, [r7, #4]
 8005ede:	681b      	ldr	r3, [r3, #0]
 8005ee0:	695a      	ldr	r2, [r3, #20]
 8005ee2:	687b      	ldr	r3, [r7, #4]
 8005ee4:	681b      	ldr	r3, [r3, #0]
 8005ee6:	f022 0201 	bic.w	r2, r2, #1
 8005eea:	615a      	str	r2, [r3, #20]
 8005eec:	687b      	ldr	r3, [r7, #4]
 8005eee:	2220      	movs	r2, #32
 8005ef0:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8005ef4:	bf00      	nop
 8005ef6:	370c      	adds	r7, #12
 8005ef8:	46bd      	mov	sp, r7
 8005efa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005efe:	4770      	bx	lr

08005f00 <UART_DMAAbortOnError>:
 8005f00:	b580      	push	{r7, lr}
 8005f02:	b084      	sub	sp, #16
 8005f04:	af00      	add	r7, sp, #0
 8005f06:	6078      	str	r0, [r7, #4]
 8005f08:	687b      	ldr	r3, [r7, #4]
 8005f0a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005f0c:	60fb      	str	r3, [r7, #12]
 8005f0e:	68fb      	ldr	r3, [r7, #12]
 8005f10:	2200      	movs	r2, #0
 8005f12:	85da      	strh	r2, [r3, #46]	; 0x2e
 8005f14:	68fb      	ldr	r3, [r7, #12]
 8005f16:	2200      	movs	r2, #0
 8005f18:	84da      	strh	r2, [r3, #38]	; 0x26
 8005f1a:	68f8      	ldr	r0, [r7, #12]
 8005f1c:	f7ff ff7e 	bl	8005e1c <HAL_UART_ErrorCallback>
 8005f20:	bf00      	nop
 8005f22:	3710      	adds	r7, #16
 8005f24:	46bd      	mov	sp, r7
 8005f26:	bd80      	pop	{r7, pc}

08005f28 <UART_Transmit_IT>:
 8005f28:	b480      	push	{r7}
 8005f2a:	b085      	sub	sp, #20
 8005f2c:	af00      	add	r7, sp, #0
 8005f2e:	6078      	str	r0, [r7, #4]
 8005f30:	687b      	ldr	r3, [r7, #4]
 8005f32:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8005f36:	b2db      	uxtb	r3, r3
 8005f38:	2b21      	cmp	r3, #33	; 0x21
 8005f3a:	d144      	bne.n	8005fc6 <UART_Transmit_IT+0x9e>
 8005f3c:	687b      	ldr	r3, [r7, #4]
 8005f3e:	689b      	ldr	r3, [r3, #8]
 8005f40:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005f44:	d11a      	bne.n	8005f7c <UART_Transmit_IT+0x54>
 8005f46:	687b      	ldr	r3, [r7, #4]
 8005f48:	6a1b      	ldr	r3, [r3, #32]
 8005f4a:	60fb      	str	r3, [r7, #12]
 8005f4c:	68fb      	ldr	r3, [r7, #12]
 8005f4e:	881b      	ldrh	r3, [r3, #0]
 8005f50:	461a      	mov	r2, r3
 8005f52:	687b      	ldr	r3, [r7, #4]
 8005f54:	681b      	ldr	r3, [r3, #0]
 8005f56:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005f5a:	605a      	str	r2, [r3, #4]
 8005f5c:	687b      	ldr	r3, [r7, #4]
 8005f5e:	691b      	ldr	r3, [r3, #16]
 8005f60:	2b00      	cmp	r3, #0
 8005f62:	d105      	bne.n	8005f70 <UART_Transmit_IT+0x48>
 8005f64:	687b      	ldr	r3, [r7, #4]
 8005f66:	6a1b      	ldr	r3, [r3, #32]
 8005f68:	1c9a      	adds	r2, r3, #2
 8005f6a:	687b      	ldr	r3, [r7, #4]
 8005f6c:	621a      	str	r2, [r3, #32]
 8005f6e:	e00e      	b.n	8005f8e <UART_Transmit_IT+0x66>
 8005f70:	687b      	ldr	r3, [r7, #4]
 8005f72:	6a1b      	ldr	r3, [r3, #32]
 8005f74:	1c5a      	adds	r2, r3, #1
 8005f76:	687b      	ldr	r3, [r7, #4]
 8005f78:	621a      	str	r2, [r3, #32]
 8005f7a:	e008      	b.n	8005f8e <UART_Transmit_IT+0x66>
 8005f7c:	687b      	ldr	r3, [r7, #4]
 8005f7e:	6a1b      	ldr	r3, [r3, #32]
 8005f80:	1c59      	adds	r1, r3, #1
 8005f82:	687a      	ldr	r2, [r7, #4]
 8005f84:	6211      	str	r1, [r2, #32]
 8005f86:	781a      	ldrb	r2, [r3, #0]
 8005f88:	687b      	ldr	r3, [r7, #4]
 8005f8a:	681b      	ldr	r3, [r3, #0]
 8005f8c:	605a      	str	r2, [r3, #4]
 8005f8e:	687b      	ldr	r3, [r7, #4]
 8005f90:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8005f92:	b29b      	uxth	r3, r3
 8005f94:	3b01      	subs	r3, #1
 8005f96:	b29b      	uxth	r3, r3
 8005f98:	687a      	ldr	r2, [r7, #4]
 8005f9a:	4619      	mov	r1, r3
 8005f9c:	84d1      	strh	r1, [r2, #38]	; 0x26
 8005f9e:	2b00      	cmp	r3, #0
 8005fa0:	d10f      	bne.n	8005fc2 <UART_Transmit_IT+0x9a>
 8005fa2:	687b      	ldr	r3, [r7, #4]
 8005fa4:	681b      	ldr	r3, [r3, #0]
 8005fa6:	68da      	ldr	r2, [r3, #12]
 8005fa8:	687b      	ldr	r3, [r7, #4]
 8005faa:	681b      	ldr	r3, [r3, #0]
 8005fac:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005fb0:	60da      	str	r2, [r3, #12]
 8005fb2:	687b      	ldr	r3, [r7, #4]
 8005fb4:	681b      	ldr	r3, [r3, #0]
 8005fb6:	68da      	ldr	r2, [r3, #12]
 8005fb8:	687b      	ldr	r3, [r7, #4]
 8005fba:	681b      	ldr	r3, [r3, #0]
 8005fbc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005fc0:	60da      	str	r2, [r3, #12]
 8005fc2:	2300      	movs	r3, #0
 8005fc4:	e000      	b.n	8005fc8 <UART_Transmit_IT+0xa0>
 8005fc6:	2302      	movs	r3, #2
 8005fc8:	4618      	mov	r0, r3
 8005fca:	3714      	adds	r7, #20
 8005fcc:	46bd      	mov	sp, r7
 8005fce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fd2:	4770      	bx	lr

08005fd4 <UART_EndTransmit_IT>:
 8005fd4:	b580      	push	{r7, lr}
 8005fd6:	b082      	sub	sp, #8
 8005fd8:	af00      	add	r7, sp, #0
 8005fda:	6078      	str	r0, [r7, #4]
 8005fdc:	687b      	ldr	r3, [r7, #4]
 8005fde:	681b      	ldr	r3, [r3, #0]
 8005fe0:	68da      	ldr	r2, [r3, #12]
 8005fe2:	687b      	ldr	r3, [r7, #4]
 8005fe4:	681b      	ldr	r3, [r3, #0]
 8005fe6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005fea:	60da      	str	r2, [r3, #12]
 8005fec:	687b      	ldr	r3, [r7, #4]
 8005fee:	2220      	movs	r2, #32
 8005ff0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005ff4:	6878      	ldr	r0, [r7, #4]
 8005ff6:	f7ff ff07 	bl	8005e08 <HAL_UART_TxCpltCallback>
 8005ffa:	2300      	movs	r3, #0
 8005ffc:	4618      	mov	r0, r3
 8005ffe:	3708      	adds	r7, #8
 8006000:	46bd      	mov	sp, r7
 8006002:	bd80      	pop	{r7, pc}

08006004 <UART_Receive_IT>:
 8006004:	b580      	push	{r7, lr}
 8006006:	b084      	sub	sp, #16
 8006008:	af00      	add	r7, sp, #0
 800600a:	6078      	str	r0, [r7, #4]
 800600c:	687b      	ldr	r3, [r7, #4]
 800600e:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8006012:	b2db      	uxtb	r3, r3
 8006014:	2b22      	cmp	r3, #34	; 0x22
 8006016:	d171      	bne.n	80060fc <UART_Receive_IT+0xf8>
 8006018:	687b      	ldr	r3, [r7, #4]
 800601a:	689b      	ldr	r3, [r3, #8]
 800601c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006020:	d123      	bne.n	800606a <UART_Receive_IT+0x66>
 8006022:	687b      	ldr	r3, [r7, #4]
 8006024:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006026:	60fb      	str	r3, [r7, #12]
 8006028:	687b      	ldr	r3, [r7, #4]
 800602a:	691b      	ldr	r3, [r3, #16]
 800602c:	2b00      	cmp	r3, #0
 800602e:	d10e      	bne.n	800604e <UART_Receive_IT+0x4a>
 8006030:	687b      	ldr	r3, [r7, #4]
 8006032:	681b      	ldr	r3, [r3, #0]
 8006034:	685b      	ldr	r3, [r3, #4]
 8006036:	b29b      	uxth	r3, r3
 8006038:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800603c:	b29a      	uxth	r2, r3
 800603e:	68fb      	ldr	r3, [r7, #12]
 8006040:	801a      	strh	r2, [r3, #0]
 8006042:	687b      	ldr	r3, [r7, #4]
 8006044:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006046:	1c9a      	adds	r2, r3, #2
 8006048:	687b      	ldr	r3, [r7, #4]
 800604a:	629a      	str	r2, [r3, #40]	; 0x28
 800604c:	e029      	b.n	80060a2 <UART_Receive_IT+0x9e>
 800604e:	687b      	ldr	r3, [r7, #4]
 8006050:	681b      	ldr	r3, [r3, #0]
 8006052:	685b      	ldr	r3, [r3, #4]
 8006054:	b29b      	uxth	r3, r3
 8006056:	b2db      	uxtb	r3, r3
 8006058:	b29a      	uxth	r2, r3
 800605a:	68fb      	ldr	r3, [r7, #12]
 800605c:	801a      	strh	r2, [r3, #0]
 800605e:	687b      	ldr	r3, [r7, #4]
 8006060:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006062:	1c5a      	adds	r2, r3, #1
 8006064:	687b      	ldr	r3, [r7, #4]
 8006066:	629a      	str	r2, [r3, #40]	; 0x28
 8006068:	e01b      	b.n	80060a2 <UART_Receive_IT+0x9e>
 800606a:	687b      	ldr	r3, [r7, #4]
 800606c:	691b      	ldr	r3, [r3, #16]
 800606e:	2b00      	cmp	r3, #0
 8006070:	d10a      	bne.n	8006088 <UART_Receive_IT+0x84>
 8006072:	687b      	ldr	r3, [r7, #4]
 8006074:	681b      	ldr	r3, [r3, #0]
 8006076:	6858      	ldr	r0, [r3, #4]
 8006078:	687b      	ldr	r3, [r7, #4]
 800607a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800607c:	1c59      	adds	r1, r3, #1
 800607e:	687a      	ldr	r2, [r7, #4]
 8006080:	6291      	str	r1, [r2, #40]	; 0x28
 8006082:	b2c2      	uxtb	r2, r0
 8006084:	701a      	strb	r2, [r3, #0]
 8006086:	e00c      	b.n	80060a2 <UART_Receive_IT+0x9e>
 8006088:	687b      	ldr	r3, [r7, #4]
 800608a:	681b      	ldr	r3, [r3, #0]
 800608c:	685b      	ldr	r3, [r3, #4]
 800608e:	b2da      	uxtb	r2, r3
 8006090:	687b      	ldr	r3, [r7, #4]
 8006092:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006094:	1c58      	adds	r0, r3, #1
 8006096:	6879      	ldr	r1, [r7, #4]
 8006098:	6288      	str	r0, [r1, #40]	; 0x28
 800609a:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 800609e:	b2d2      	uxtb	r2, r2
 80060a0:	701a      	strb	r2, [r3, #0]
 80060a2:	687b      	ldr	r3, [r7, #4]
 80060a4:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80060a6:	b29b      	uxth	r3, r3
 80060a8:	3b01      	subs	r3, #1
 80060aa:	b29b      	uxth	r3, r3
 80060ac:	687a      	ldr	r2, [r7, #4]
 80060ae:	4619      	mov	r1, r3
 80060b0:	85d1      	strh	r1, [r2, #46]	; 0x2e
 80060b2:	2b00      	cmp	r3, #0
 80060b4:	d120      	bne.n	80060f8 <UART_Receive_IT+0xf4>
 80060b6:	687b      	ldr	r3, [r7, #4]
 80060b8:	681b      	ldr	r3, [r3, #0]
 80060ba:	68da      	ldr	r2, [r3, #12]
 80060bc:	687b      	ldr	r3, [r7, #4]
 80060be:	681b      	ldr	r3, [r3, #0]
 80060c0:	f022 0220 	bic.w	r2, r2, #32
 80060c4:	60da      	str	r2, [r3, #12]
 80060c6:	687b      	ldr	r3, [r7, #4]
 80060c8:	681b      	ldr	r3, [r3, #0]
 80060ca:	68da      	ldr	r2, [r3, #12]
 80060cc:	687b      	ldr	r3, [r7, #4]
 80060ce:	681b      	ldr	r3, [r3, #0]
 80060d0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80060d4:	60da      	str	r2, [r3, #12]
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	681b      	ldr	r3, [r3, #0]
 80060da:	695a      	ldr	r2, [r3, #20]
 80060dc:	687b      	ldr	r3, [r7, #4]
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	f022 0201 	bic.w	r2, r2, #1
 80060e4:	615a      	str	r2, [r3, #20]
 80060e6:	687b      	ldr	r3, [r7, #4]
 80060e8:	2220      	movs	r2, #32
 80060ea:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80060ee:	6878      	ldr	r0, [r7, #4]
 80060f0:	f7fc fa3a 	bl	8002568 <HAL_UART_RxCpltCallback>
 80060f4:	2300      	movs	r3, #0
 80060f6:	e002      	b.n	80060fe <UART_Receive_IT+0xfa>
 80060f8:	2300      	movs	r3, #0
 80060fa:	e000      	b.n	80060fe <UART_Receive_IT+0xfa>
 80060fc:	2302      	movs	r3, #2
 80060fe:	4618      	mov	r0, r3
 8006100:	3710      	adds	r7, #16
 8006102:	46bd      	mov	sp, r7
 8006104:	bd80      	pop	{r7, pc}
	...

08006108 <UART_SetConfig>:
 8006108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800610c:	b085      	sub	sp, #20
 800610e:	af00      	add	r7, sp, #0
 8006110:	6078      	str	r0, [r7, #4]
 8006112:	687b      	ldr	r3, [r7, #4]
 8006114:	681b      	ldr	r3, [r3, #0]
 8006116:	691b      	ldr	r3, [r3, #16]
 8006118:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800611c:	687b      	ldr	r3, [r7, #4]
 800611e:	68da      	ldr	r2, [r3, #12]
 8006120:	687b      	ldr	r3, [r7, #4]
 8006122:	681b      	ldr	r3, [r3, #0]
 8006124:	430a      	orrs	r2, r1
 8006126:	611a      	str	r2, [r3, #16]
 8006128:	687b      	ldr	r3, [r7, #4]
 800612a:	689a      	ldr	r2, [r3, #8]
 800612c:	687b      	ldr	r3, [r7, #4]
 800612e:	691b      	ldr	r3, [r3, #16]
 8006130:	431a      	orrs	r2, r3
 8006132:	687b      	ldr	r3, [r7, #4]
 8006134:	695b      	ldr	r3, [r3, #20]
 8006136:	431a      	orrs	r2, r3
 8006138:	687b      	ldr	r3, [r7, #4]
 800613a:	69db      	ldr	r3, [r3, #28]
 800613c:	4313      	orrs	r3, r2
 800613e:	60fb      	str	r3, [r7, #12]
 8006140:	687b      	ldr	r3, [r7, #4]
 8006142:	681b      	ldr	r3, [r3, #0]
 8006144:	68db      	ldr	r3, [r3, #12]
 8006146:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 800614a:	f023 030c 	bic.w	r3, r3, #12
 800614e:	687a      	ldr	r2, [r7, #4]
 8006150:	6812      	ldr	r2, [r2, #0]
 8006152:	68f9      	ldr	r1, [r7, #12]
 8006154:	430b      	orrs	r3, r1
 8006156:	60d3      	str	r3, [r2, #12]
 8006158:	687b      	ldr	r3, [r7, #4]
 800615a:	681b      	ldr	r3, [r3, #0]
 800615c:	695b      	ldr	r3, [r3, #20]
 800615e:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8006162:	687b      	ldr	r3, [r7, #4]
 8006164:	699a      	ldr	r2, [r3, #24]
 8006166:	687b      	ldr	r3, [r7, #4]
 8006168:	681b      	ldr	r3, [r3, #0]
 800616a:	430a      	orrs	r2, r1
 800616c:	615a      	str	r2, [r3, #20]
 800616e:	687b      	ldr	r3, [r7, #4]
 8006170:	69db      	ldr	r3, [r3, #28]
 8006172:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006176:	f040 818b 	bne.w	8006490 <UART_SetConfig+0x388>
 800617a:	687b      	ldr	r3, [r7, #4]
 800617c:	681b      	ldr	r3, [r3, #0]
 800617e:	4ac1      	ldr	r2, [pc, #772]	; (8006484 <UART_SetConfig+0x37c>)
 8006180:	4293      	cmp	r3, r2
 8006182:	d005      	beq.n	8006190 <UART_SetConfig+0x88>
 8006184:	687b      	ldr	r3, [r7, #4]
 8006186:	681b      	ldr	r3, [r3, #0]
 8006188:	4abf      	ldr	r2, [pc, #764]	; (8006488 <UART_SetConfig+0x380>)
 800618a:	4293      	cmp	r3, r2
 800618c:	f040 80bd 	bne.w	800630a <UART_SetConfig+0x202>
 8006190:	f7fd fd5a 	bl	8003c48 <HAL_RCC_GetPCLK2Freq>
 8006194:	60b8      	str	r0, [r7, #8]
 8006196:	68bb      	ldr	r3, [r7, #8]
 8006198:	461d      	mov	r5, r3
 800619a:	f04f 0600 	mov.w	r6, #0
 800619e:	46a8      	mov	r8, r5
 80061a0:	46b1      	mov	r9, r6
 80061a2:	eb18 0308 	adds.w	r3, r8, r8
 80061a6:	eb49 0409 	adc.w	r4, r9, r9
 80061aa:	4698      	mov	r8, r3
 80061ac:	46a1      	mov	r9, r4
 80061ae:	eb18 0805 	adds.w	r8, r8, r5
 80061b2:	eb49 0906 	adc.w	r9, r9, r6
 80061b6:	f04f 0100 	mov.w	r1, #0
 80061ba:	f04f 0200 	mov.w	r2, #0
 80061be:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 80061c2:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 80061c6:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80061ca:	4688      	mov	r8, r1
 80061cc:	4691      	mov	r9, r2
 80061ce:	eb18 0005 	adds.w	r0, r8, r5
 80061d2:	eb49 0106 	adc.w	r1, r9, r6
 80061d6:	687b      	ldr	r3, [r7, #4]
 80061d8:	685b      	ldr	r3, [r3, #4]
 80061da:	461d      	mov	r5, r3
 80061dc:	f04f 0600 	mov.w	r6, #0
 80061e0:	196b      	adds	r3, r5, r5
 80061e2:	eb46 0406 	adc.w	r4, r6, r6
 80061e6:	461a      	mov	r2, r3
 80061e8:	4623      	mov	r3, r4
 80061ea:	f7fa fcf5 	bl	8000bd8 <__aeabi_uldivmod>
 80061ee:	4603      	mov	r3, r0
 80061f0:	460c      	mov	r4, r1
 80061f2:	461a      	mov	r2, r3
 80061f4:	4ba5      	ldr	r3, [pc, #660]	; (800648c <UART_SetConfig+0x384>)
 80061f6:	fba3 2302 	umull	r2, r3, r3, r2
 80061fa:	095b      	lsrs	r3, r3, #5
 80061fc:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8006200:	68bb      	ldr	r3, [r7, #8]
 8006202:	461d      	mov	r5, r3
 8006204:	f04f 0600 	mov.w	r6, #0
 8006208:	46a9      	mov	r9, r5
 800620a:	46b2      	mov	sl, r6
 800620c:	eb19 0309 	adds.w	r3, r9, r9
 8006210:	eb4a 040a 	adc.w	r4, sl, sl
 8006214:	4699      	mov	r9, r3
 8006216:	46a2      	mov	sl, r4
 8006218:	eb19 0905 	adds.w	r9, r9, r5
 800621c:	eb4a 0a06 	adc.w	sl, sl, r6
 8006220:	f04f 0100 	mov.w	r1, #0
 8006224:	f04f 0200 	mov.w	r2, #0
 8006228:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800622c:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8006230:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8006234:	4689      	mov	r9, r1
 8006236:	4692      	mov	sl, r2
 8006238:	eb19 0005 	adds.w	r0, r9, r5
 800623c:	eb4a 0106 	adc.w	r1, sl, r6
 8006240:	687b      	ldr	r3, [r7, #4]
 8006242:	685b      	ldr	r3, [r3, #4]
 8006244:	461d      	mov	r5, r3
 8006246:	f04f 0600 	mov.w	r6, #0
 800624a:	196b      	adds	r3, r5, r5
 800624c:	eb46 0406 	adc.w	r4, r6, r6
 8006250:	461a      	mov	r2, r3
 8006252:	4623      	mov	r3, r4
 8006254:	f7fa fcc0 	bl	8000bd8 <__aeabi_uldivmod>
 8006258:	4603      	mov	r3, r0
 800625a:	460c      	mov	r4, r1
 800625c:	461a      	mov	r2, r3
 800625e:	4b8b      	ldr	r3, [pc, #556]	; (800648c <UART_SetConfig+0x384>)
 8006260:	fba3 1302 	umull	r1, r3, r3, r2
 8006264:	095b      	lsrs	r3, r3, #5
 8006266:	2164      	movs	r1, #100	; 0x64
 8006268:	fb01 f303 	mul.w	r3, r1, r3
 800626c:	1ad3      	subs	r3, r2, r3
 800626e:	00db      	lsls	r3, r3, #3
 8006270:	3332      	adds	r3, #50	; 0x32
 8006272:	4a86      	ldr	r2, [pc, #536]	; (800648c <UART_SetConfig+0x384>)
 8006274:	fba2 2303 	umull	r2, r3, r2, r3
 8006278:	095b      	lsrs	r3, r3, #5
 800627a:	005b      	lsls	r3, r3, #1
 800627c:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8006280:	4498      	add	r8, r3
 8006282:	68bb      	ldr	r3, [r7, #8]
 8006284:	461d      	mov	r5, r3
 8006286:	f04f 0600 	mov.w	r6, #0
 800628a:	46a9      	mov	r9, r5
 800628c:	46b2      	mov	sl, r6
 800628e:	eb19 0309 	adds.w	r3, r9, r9
 8006292:	eb4a 040a 	adc.w	r4, sl, sl
 8006296:	4699      	mov	r9, r3
 8006298:	46a2      	mov	sl, r4
 800629a:	eb19 0905 	adds.w	r9, r9, r5
 800629e:	eb4a 0a06 	adc.w	sl, sl, r6
 80062a2:	f04f 0100 	mov.w	r1, #0
 80062a6:	f04f 0200 	mov.w	r2, #0
 80062aa:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80062ae:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80062b2:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80062b6:	4689      	mov	r9, r1
 80062b8:	4692      	mov	sl, r2
 80062ba:	eb19 0005 	adds.w	r0, r9, r5
 80062be:	eb4a 0106 	adc.w	r1, sl, r6
 80062c2:	687b      	ldr	r3, [r7, #4]
 80062c4:	685b      	ldr	r3, [r3, #4]
 80062c6:	461d      	mov	r5, r3
 80062c8:	f04f 0600 	mov.w	r6, #0
 80062cc:	196b      	adds	r3, r5, r5
 80062ce:	eb46 0406 	adc.w	r4, r6, r6
 80062d2:	461a      	mov	r2, r3
 80062d4:	4623      	mov	r3, r4
 80062d6:	f7fa fc7f 	bl	8000bd8 <__aeabi_uldivmod>
 80062da:	4603      	mov	r3, r0
 80062dc:	460c      	mov	r4, r1
 80062de:	461a      	mov	r2, r3
 80062e0:	4b6a      	ldr	r3, [pc, #424]	; (800648c <UART_SetConfig+0x384>)
 80062e2:	fba3 1302 	umull	r1, r3, r3, r2
 80062e6:	095b      	lsrs	r3, r3, #5
 80062e8:	2164      	movs	r1, #100	; 0x64
 80062ea:	fb01 f303 	mul.w	r3, r1, r3
 80062ee:	1ad3      	subs	r3, r2, r3
 80062f0:	00db      	lsls	r3, r3, #3
 80062f2:	3332      	adds	r3, #50	; 0x32
 80062f4:	4a65      	ldr	r2, [pc, #404]	; (800648c <UART_SetConfig+0x384>)
 80062f6:	fba2 2303 	umull	r2, r3, r2, r3
 80062fa:	095b      	lsrs	r3, r3, #5
 80062fc:	f003 0207 	and.w	r2, r3, #7
 8006300:	687b      	ldr	r3, [r7, #4]
 8006302:	681b      	ldr	r3, [r3, #0]
 8006304:	4442      	add	r2, r8
 8006306:	609a      	str	r2, [r3, #8]
 8006308:	e26f      	b.n	80067ea <UART_SetConfig+0x6e2>
 800630a:	f7fd fc89 	bl	8003c20 <HAL_RCC_GetPCLK1Freq>
 800630e:	60b8      	str	r0, [r7, #8]
 8006310:	68bb      	ldr	r3, [r7, #8]
 8006312:	461d      	mov	r5, r3
 8006314:	f04f 0600 	mov.w	r6, #0
 8006318:	46a8      	mov	r8, r5
 800631a:	46b1      	mov	r9, r6
 800631c:	eb18 0308 	adds.w	r3, r8, r8
 8006320:	eb49 0409 	adc.w	r4, r9, r9
 8006324:	4698      	mov	r8, r3
 8006326:	46a1      	mov	r9, r4
 8006328:	eb18 0805 	adds.w	r8, r8, r5
 800632c:	eb49 0906 	adc.w	r9, r9, r6
 8006330:	f04f 0100 	mov.w	r1, #0
 8006334:	f04f 0200 	mov.w	r2, #0
 8006338:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 800633c:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8006340:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8006344:	4688      	mov	r8, r1
 8006346:	4691      	mov	r9, r2
 8006348:	eb18 0005 	adds.w	r0, r8, r5
 800634c:	eb49 0106 	adc.w	r1, r9, r6
 8006350:	687b      	ldr	r3, [r7, #4]
 8006352:	685b      	ldr	r3, [r3, #4]
 8006354:	461d      	mov	r5, r3
 8006356:	f04f 0600 	mov.w	r6, #0
 800635a:	196b      	adds	r3, r5, r5
 800635c:	eb46 0406 	adc.w	r4, r6, r6
 8006360:	461a      	mov	r2, r3
 8006362:	4623      	mov	r3, r4
 8006364:	f7fa fc38 	bl	8000bd8 <__aeabi_uldivmod>
 8006368:	4603      	mov	r3, r0
 800636a:	460c      	mov	r4, r1
 800636c:	461a      	mov	r2, r3
 800636e:	4b47      	ldr	r3, [pc, #284]	; (800648c <UART_SetConfig+0x384>)
 8006370:	fba3 2302 	umull	r2, r3, r3, r2
 8006374:	095b      	lsrs	r3, r3, #5
 8006376:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800637a:	68bb      	ldr	r3, [r7, #8]
 800637c:	461d      	mov	r5, r3
 800637e:	f04f 0600 	mov.w	r6, #0
 8006382:	46a9      	mov	r9, r5
 8006384:	46b2      	mov	sl, r6
 8006386:	eb19 0309 	adds.w	r3, r9, r9
 800638a:	eb4a 040a 	adc.w	r4, sl, sl
 800638e:	4699      	mov	r9, r3
 8006390:	46a2      	mov	sl, r4
 8006392:	eb19 0905 	adds.w	r9, r9, r5
 8006396:	eb4a 0a06 	adc.w	sl, sl, r6
 800639a:	f04f 0100 	mov.w	r1, #0
 800639e:	f04f 0200 	mov.w	r2, #0
 80063a2:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80063a6:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80063aa:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80063ae:	4689      	mov	r9, r1
 80063b0:	4692      	mov	sl, r2
 80063b2:	eb19 0005 	adds.w	r0, r9, r5
 80063b6:	eb4a 0106 	adc.w	r1, sl, r6
 80063ba:	687b      	ldr	r3, [r7, #4]
 80063bc:	685b      	ldr	r3, [r3, #4]
 80063be:	461d      	mov	r5, r3
 80063c0:	f04f 0600 	mov.w	r6, #0
 80063c4:	196b      	adds	r3, r5, r5
 80063c6:	eb46 0406 	adc.w	r4, r6, r6
 80063ca:	461a      	mov	r2, r3
 80063cc:	4623      	mov	r3, r4
 80063ce:	f7fa fc03 	bl	8000bd8 <__aeabi_uldivmod>
 80063d2:	4603      	mov	r3, r0
 80063d4:	460c      	mov	r4, r1
 80063d6:	461a      	mov	r2, r3
 80063d8:	4b2c      	ldr	r3, [pc, #176]	; (800648c <UART_SetConfig+0x384>)
 80063da:	fba3 1302 	umull	r1, r3, r3, r2
 80063de:	095b      	lsrs	r3, r3, #5
 80063e0:	2164      	movs	r1, #100	; 0x64
 80063e2:	fb01 f303 	mul.w	r3, r1, r3
 80063e6:	1ad3      	subs	r3, r2, r3
 80063e8:	00db      	lsls	r3, r3, #3
 80063ea:	3332      	adds	r3, #50	; 0x32
 80063ec:	4a27      	ldr	r2, [pc, #156]	; (800648c <UART_SetConfig+0x384>)
 80063ee:	fba2 2303 	umull	r2, r3, r2, r3
 80063f2:	095b      	lsrs	r3, r3, #5
 80063f4:	005b      	lsls	r3, r3, #1
 80063f6:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 80063fa:	4498      	add	r8, r3
 80063fc:	68bb      	ldr	r3, [r7, #8]
 80063fe:	461d      	mov	r5, r3
 8006400:	f04f 0600 	mov.w	r6, #0
 8006404:	46a9      	mov	r9, r5
 8006406:	46b2      	mov	sl, r6
 8006408:	eb19 0309 	adds.w	r3, r9, r9
 800640c:	eb4a 040a 	adc.w	r4, sl, sl
 8006410:	4699      	mov	r9, r3
 8006412:	46a2      	mov	sl, r4
 8006414:	eb19 0905 	adds.w	r9, r9, r5
 8006418:	eb4a 0a06 	adc.w	sl, sl, r6
 800641c:	f04f 0100 	mov.w	r1, #0
 8006420:	f04f 0200 	mov.w	r2, #0
 8006424:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006428:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800642c:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8006430:	4689      	mov	r9, r1
 8006432:	4692      	mov	sl, r2
 8006434:	eb19 0005 	adds.w	r0, r9, r5
 8006438:	eb4a 0106 	adc.w	r1, sl, r6
 800643c:	687b      	ldr	r3, [r7, #4]
 800643e:	685b      	ldr	r3, [r3, #4]
 8006440:	461d      	mov	r5, r3
 8006442:	f04f 0600 	mov.w	r6, #0
 8006446:	196b      	adds	r3, r5, r5
 8006448:	eb46 0406 	adc.w	r4, r6, r6
 800644c:	461a      	mov	r2, r3
 800644e:	4623      	mov	r3, r4
 8006450:	f7fa fbc2 	bl	8000bd8 <__aeabi_uldivmod>
 8006454:	4603      	mov	r3, r0
 8006456:	460c      	mov	r4, r1
 8006458:	461a      	mov	r2, r3
 800645a:	4b0c      	ldr	r3, [pc, #48]	; (800648c <UART_SetConfig+0x384>)
 800645c:	fba3 1302 	umull	r1, r3, r3, r2
 8006460:	095b      	lsrs	r3, r3, #5
 8006462:	2164      	movs	r1, #100	; 0x64
 8006464:	fb01 f303 	mul.w	r3, r1, r3
 8006468:	1ad3      	subs	r3, r2, r3
 800646a:	00db      	lsls	r3, r3, #3
 800646c:	3332      	adds	r3, #50	; 0x32
 800646e:	4a07      	ldr	r2, [pc, #28]	; (800648c <UART_SetConfig+0x384>)
 8006470:	fba2 2303 	umull	r2, r3, r2, r3
 8006474:	095b      	lsrs	r3, r3, #5
 8006476:	f003 0207 	and.w	r2, r3, #7
 800647a:	687b      	ldr	r3, [r7, #4]
 800647c:	681b      	ldr	r3, [r3, #0]
 800647e:	4442      	add	r2, r8
 8006480:	609a      	str	r2, [r3, #8]
 8006482:	e1b2      	b.n	80067ea <UART_SetConfig+0x6e2>
 8006484:	40011000 	.word	0x40011000
 8006488:	40011400 	.word	0x40011400
 800648c:	51eb851f 	.word	0x51eb851f
 8006490:	687b      	ldr	r3, [r7, #4]
 8006492:	681b      	ldr	r3, [r3, #0]
 8006494:	4ad7      	ldr	r2, [pc, #860]	; (80067f4 <UART_SetConfig+0x6ec>)
 8006496:	4293      	cmp	r3, r2
 8006498:	d005      	beq.n	80064a6 <UART_SetConfig+0x39e>
 800649a:	687b      	ldr	r3, [r7, #4]
 800649c:	681b      	ldr	r3, [r3, #0]
 800649e:	4ad6      	ldr	r2, [pc, #856]	; (80067f8 <UART_SetConfig+0x6f0>)
 80064a0:	4293      	cmp	r3, r2
 80064a2:	f040 80d1 	bne.w	8006648 <UART_SetConfig+0x540>
 80064a6:	f7fd fbcf 	bl	8003c48 <HAL_RCC_GetPCLK2Freq>
 80064aa:	60b8      	str	r0, [r7, #8]
 80064ac:	68bb      	ldr	r3, [r7, #8]
 80064ae:	469a      	mov	sl, r3
 80064b0:	f04f 0b00 	mov.w	fp, #0
 80064b4:	46d0      	mov	r8, sl
 80064b6:	46d9      	mov	r9, fp
 80064b8:	eb18 0308 	adds.w	r3, r8, r8
 80064bc:	eb49 0409 	adc.w	r4, r9, r9
 80064c0:	4698      	mov	r8, r3
 80064c2:	46a1      	mov	r9, r4
 80064c4:	eb18 080a 	adds.w	r8, r8, sl
 80064c8:	eb49 090b 	adc.w	r9, r9, fp
 80064cc:	f04f 0100 	mov.w	r1, #0
 80064d0:	f04f 0200 	mov.w	r2, #0
 80064d4:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 80064d8:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 80064dc:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80064e0:	4688      	mov	r8, r1
 80064e2:	4691      	mov	r9, r2
 80064e4:	eb1a 0508 	adds.w	r5, sl, r8
 80064e8:	eb4b 0609 	adc.w	r6, fp, r9
 80064ec:	687b      	ldr	r3, [r7, #4]
 80064ee:	685b      	ldr	r3, [r3, #4]
 80064f0:	4619      	mov	r1, r3
 80064f2:	f04f 0200 	mov.w	r2, #0
 80064f6:	f04f 0300 	mov.w	r3, #0
 80064fa:	f04f 0400 	mov.w	r4, #0
 80064fe:	0094      	lsls	r4, r2, #2
 8006500:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8006504:	008b      	lsls	r3, r1, #2
 8006506:	461a      	mov	r2, r3
 8006508:	4623      	mov	r3, r4
 800650a:	4628      	mov	r0, r5
 800650c:	4631      	mov	r1, r6
 800650e:	f7fa fb63 	bl	8000bd8 <__aeabi_uldivmod>
 8006512:	4603      	mov	r3, r0
 8006514:	460c      	mov	r4, r1
 8006516:	461a      	mov	r2, r3
 8006518:	4bb8      	ldr	r3, [pc, #736]	; (80067fc <UART_SetConfig+0x6f4>)
 800651a:	fba3 2302 	umull	r2, r3, r3, r2
 800651e:	095b      	lsrs	r3, r3, #5
 8006520:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8006524:	68bb      	ldr	r3, [r7, #8]
 8006526:	469b      	mov	fp, r3
 8006528:	f04f 0c00 	mov.w	ip, #0
 800652c:	46d9      	mov	r9, fp
 800652e:	46e2      	mov	sl, ip
 8006530:	eb19 0309 	adds.w	r3, r9, r9
 8006534:	eb4a 040a 	adc.w	r4, sl, sl
 8006538:	4699      	mov	r9, r3
 800653a:	46a2      	mov	sl, r4
 800653c:	eb19 090b 	adds.w	r9, r9, fp
 8006540:	eb4a 0a0c 	adc.w	sl, sl, ip
 8006544:	f04f 0100 	mov.w	r1, #0
 8006548:	f04f 0200 	mov.w	r2, #0
 800654c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006550:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8006554:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8006558:	4689      	mov	r9, r1
 800655a:	4692      	mov	sl, r2
 800655c:	eb1b 0509 	adds.w	r5, fp, r9
 8006560:	eb4c 060a 	adc.w	r6, ip, sl
 8006564:	687b      	ldr	r3, [r7, #4]
 8006566:	685b      	ldr	r3, [r3, #4]
 8006568:	4619      	mov	r1, r3
 800656a:	f04f 0200 	mov.w	r2, #0
 800656e:	f04f 0300 	mov.w	r3, #0
 8006572:	f04f 0400 	mov.w	r4, #0
 8006576:	0094      	lsls	r4, r2, #2
 8006578:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800657c:	008b      	lsls	r3, r1, #2
 800657e:	461a      	mov	r2, r3
 8006580:	4623      	mov	r3, r4
 8006582:	4628      	mov	r0, r5
 8006584:	4631      	mov	r1, r6
 8006586:	f7fa fb27 	bl	8000bd8 <__aeabi_uldivmod>
 800658a:	4603      	mov	r3, r0
 800658c:	460c      	mov	r4, r1
 800658e:	461a      	mov	r2, r3
 8006590:	4b9a      	ldr	r3, [pc, #616]	; (80067fc <UART_SetConfig+0x6f4>)
 8006592:	fba3 1302 	umull	r1, r3, r3, r2
 8006596:	095b      	lsrs	r3, r3, #5
 8006598:	2164      	movs	r1, #100	; 0x64
 800659a:	fb01 f303 	mul.w	r3, r1, r3
 800659e:	1ad3      	subs	r3, r2, r3
 80065a0:	011b      	lsls	r3, r3, #4
 80065a2:	3332      	adds	r3, #50	; 0x32
 80065a4:	4a95      	ldr	r2, [pc, #596]	; (80067fc <UART_SetConfig+0x6f4>)
 80065a6:	fba2 2303 	umull	r2, r3, r2, r3
 80065aa:	095b      	lsrs	r3, r3, #5
 80065ac:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80065b0:	4498      	add	r8, r3
 80065b2:	68bb      	ldr	r3, [r7, #8]
 80065b4:	469b      	mov	fp, r3
 80065b6:	f04f 0c00 	mov.w	ip, #0
 80065ba:	46d9      	mov	r9, fp
 80065bc:	46e2      	mov	sl, ip
 80065be:	eb19 0309 	adds.w	r3, r9, r9
 80065c2:	eb4a 040a 	adc.w	r4, sl, sl
 80065c6:	4699      	mov	r9, r3
 80065c8:	46a2      	mov	sl, r4
 80065ca:	eb19 090b 	adds.w	r9, r9, fp
 80065ce:	eb4a 0a0c 	adc.w	sl, sl, ip
 80065d2:	f04f 0100 	mov.w	r1, #0
 80065d6:	f04f 0200 	mov.w	r2, #0
 80065da:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80065de:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80065e2:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80065e6:	4689      	mov	r9, r1
 80065e8:	4692      	mov	sl, r2
 80065ea:	eb1b 0509 	adds.w	r5, fp, r9
 80065ee:	eb4c 060a 	adc.w	r6, ip, sl
 80065f2:	687b      	ldr	r3, [r7, #4]
 80065f4:	685b      	ldr	r3, [r3, #4]
 80065f6:	4619      	mov	r1, r3
 80065f8:	f04f 0200 	mov.w	r2, #0
 80065fc:	f04f 0300 	mov.w	r3, #0
 8006600:	f04f 0400 	mov.w	r4, #0
 8006604:	0094      	lsls	r4, r2, #2
 8006606:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800660a:	008b      	lsls	r3, r1, #2
 800660c:	461a      	mov	r2, r3
 800660e:	4623      	mov	r3, r4
 8006610:	4628      	mov	r0, r5
 8006612:	4631      	mov	r1, r6
 8006614:	f7fa fae0 	bl	8000bd8 <__aeabi_uldivmod>
 8006618:	4603      	mov	r3, r0
 800661a:	460c      	mov	r4, r1
 800661c:	461a      	mov	r2, r3
 800661e:	4b77      	ldr	r3, [pc, #476]	; (80067fc <UART_SetConfig+0x6f4>)
 8006620:	fba3 1302 	umull	r1, r3, r3, r2
 8006624:	095b      	lsrs	r3, r3, #5
 8006626:	2164      	movs	r1, #100	; 0x64
 8006628:	fb01 f303 	mul.w	r3, r1, r3
 800662c:	1ad3      	subs	r3, r2, r3
 800662e:	011b      	lsls	r3, r3, #4
 8006630:	3332      	adds	r3, #50	; 0x32
 8006632:	4a72      	ldr	r2, [pc, #456]	; (80067fc <UART_SetConfig+0x6f4>)
 8006634:	fba2 2303 	umull	r2, r3, r2, r3
 8006638:	095b      	lsrs	r3, r3, #5
 800663a:	f003 020f 	and.w	r2, r3, #15
 800663e:	687b      	ldr	r3, [r7, #4]
 8006640:	681b      	ldr	r3, [r3, #0]
 8006642:	4442      	add	r2, r8
 8006644:	609a      	str	r2, [r3, #8]
 8006646:	e0d0      	b.n	80067ea <UART_SetConfig+0x6e2>
 8006648:	f7fd faea 	bl	8003c20 <HAL_RCC_GetPCLK1Freq>
 800664c:	60b8      	str	r0, [r7, #8]
 800664e:	68bb      	ldr	r3, [r7, #8]
 8006650:	469a      	mov	sl, r3
 8006652:	f04f 0b00 	mov.w	fp, #0
 8006656:	46d0      	mov	r8, sl
 8006658:	46d9      	mov	r9, fp
 800665a:	eb18 0308 	adds.w	r3, r8, r8
 800665e:	eb49 0409 	adc.w	r4, r9, r9
 8006662:	4698      	mov	r8, r3
 8006664:	46a1      	mov	r9, r4
 8006666:	eb18 080a 	adds.w	r8, r8, sl
 800666a:	eb49 090b 	adc.w	r9, r9, fp
 800666e:	f04f 0100 	mov.w	r1, #0
 8006672:	f04f 0200 	mov.w	r2, #0
 8006676:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 800667a:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 800667e:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8006682:	4688      	mov	r8, r1
 8006684:	4691      	mov	r9, r2
 8006686:	eb1a 0508 	adds.w	r5, sl, r8
 800668a:	eb4b 0609 	adc.w	r6, fp, r9
 800668e:	687b      	ldr	r3, [r7, #4]
 8006690:	685b      	ldr	r3, [r3, #4]
 8006692:	4619      	mov	r1, r3
 8006694:	f04f 0200 	mov.w	r2, #0
 8006698:	f04f 0300 	mov.w	r3, #0
 800669c:	f04f 0400 	mov.w	r4, #0
 80066a0:	0094      	lsls	r4, r2, #2
 80066a2:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 80066a6:	008b      	lsls	r3, r1, #2
 80066a8:	461a      	mov	r2, r3
 80066aa:	4623      	mov	r3, r4
 80066ac:	4628      	mov	r0, r5
 80066ae:	4631      	mov	r1, r6
 80066b0:	f7fa fa92 	bl	8000bd8 <__aeabi_uldivmod>
 80066b4:	4603      	mov	r3, r0
 80066b6:	460c      	mov	r4, r1
 80066b8:	461a      	mov	r2, r3
 80066ba:	4b50      	ldr	r3, [pc, #320]	; (80067fc <UART_SetConfig+0x6f4>)
 80066bc:	fba3 2302 	umull	r2, r3, r3, r2
 80066c0:	095b      	lsrs	r3, r3, #5
 80066c2:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80066c6:	68bb      	ldr	r3, [r7, #8]
 80066c8:	469b      	mov	fp, r3
 80066ca:	f04f 0c00 	mov.w	ip, #0
 80066ce:	46d9      	mov	r9, fp
 80066d0:	46e2      	mov	sl, ip
 80066d2:	eb19 0309 	adds.w	r3, r9, r9
 80066d6:	eb4a 040a 	adc.w	r4, sl, sl
 80066da:	4699      	mov	r9, r3
 80066dc:	46a2      	mov	sl, r4
 80066de:	eb19 090b 	adds.w	r9, r9, fp
 80066e2:	eb4a 0a0c 	adc.w	sl, sl, ip
 80066e6:	f04f 0100 	mov.w	r1, #0
 80066ea:	f04f 0200 	mov.w	r2, #0
 80066ee:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80066f2:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80066f6:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80066fa:	4689      	mov	r9, r1
 80066fc:	4692      	mov	sl, r2
 80066fe:	eb1b 0509 	adds.w	r5, fp, r9
 8006702:	eb4c 060a 	adc.w	r6, ip, sl
 8006706:	687b      	ldr	r3, [r7, #4]
 8006708:	685b      	ldr	r3, [r3, #4]
 800670a:	4619      	mov	r1, r3
 800670c:	f04f 0200 	mov.w	r2, #0
 8006710:	f04f 0300 	mov.w	r3, #0
 8006714:	f04f 0400 	mov.w	r4, #0
 8006718:	0094      	lsls	r4, r2, #2
 800671a:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800671e:	008b      	lsls	r3, r1, #2
 8006720:	461a      	mov	r2, r3
 8006722:	4623      	mov	r3, r4
 8006724:	4628      	mov	r0, r5
 8006726:	4631      	mov	r1, r6
 8006728:	f7fa fa56 	bl	8000bd8 <__aeabi_uldivmod>
 800672c:	4603      	mov	r3, r0
 800672e:	460c      	mov	r4, r1
 8006730:	461a      	mov	r2, r3
 8006732:	4b32      	ldr	r3, [pc, #200]	; (80067fc <UART_SetConfig+0x6f4>)
 8006734:	fba3 1302 	umull	r1, r3, r3, r2
 8006738:	095b      	lsrs	r3, r3, #5
 800673a:	2164      	movs	r1, #100	; 0x64
 800673c:	fb01 f303 	mul.w	r3, r1, r3
 8006740:	1ad3      	subs	r3, r2, r3
 8006742:	011b      	lsls	r3, r3, #4
 8006744:	3332      	adds	r3, #50	; 0x32
 8006746:	4a2d      	ldr	r2, [pc, #180]	; (80067fc <UART_SetConfig+0x6f4>)
 8006748:	fba2 2303 	umull	r2, r3, r2, r3
 800674c:	095b      	lsrs	r3, r3, #5
 800674e:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8006752:	4498      	add	r8, r3
 8006754:	68bb      	ldr	r3, [r7, #8]
 8006756:	469b      	mov	fp, r3
 8006758:	f04f 0c00 	mov.w	ip, #0
 800675c:	46d9      	mov	r9, fp
 800675e:	46e2      	mov	sl, ip
 8006760:	eb19 0309 	adds.w	r3, r9, r9
 8006764:	eb4a 040a 	adc.w	r4, sl, sl
 8006768:	4699      	mov	r9, r3
 800676a:	46a2      	mov	sl, r4
 800676c:	eb19 090b 	adds.w	r9, r9, fp
 8006770:	eb4a 0a0c 	adc.w	sl, sl, ip
 8006774:	f04f 0100 	mov.w	r1, #0
 8006778:	f04f 0200 	mov.w	r2, #0
 800677c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006780:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8006784:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8006788:	4689      	mov	r9, r1
 800678a:	4692      	mov	sl, r2
 800678c:	eb1b 0509 	adds.w	r5, fp, r9
 8006790:	eb4c 060a 	adc.w	r6, ip, sl
 8006794:	687b      	ldr	r3, [r7, #4]
 8006796:	685b      	ldr	r3, [r3, #4]
 8006798:	4619      	mov	r1, r3
 800679a:	f04f 0200 	mov.w	r2, #0
 800679e:	f04f 0300 	mov.w	r3, #0
 80067a2:	f04f 0400 	mov.w	r4, #0
 80067a6:	0094      	lsls	r4, r2, #2
 80067a8:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 80067ac:	008b      	lsls	r3, r1, #2
 80067ae:	461a      	mov	r2, r3
 80067b0:	4623      	mov	r3, r4
 80067b2:	4628      	mov	r0, r5
 80067b4:	4631      	mov	r1, r6
 80067b6:	f7fa fa0f 	bl	8000bd8 <__aeabi_uldivmod>
 80067ba:	4603      	mov	r3, r0
 80067bc:	460c      	mov	r4, r1
 80067be:	461a      	mov	r2, r3
 80067c0:	4b0e      	ldr	r3, [pc, #56]	; (80067fc <UART_SetConfig+0x6f4>)
 80067c2:	fba3 1302 	umull	r1, r3, r3, r2
 80067c6:	095b      	lsrs	r3, r3, #5
 80067c8:	2164      	movs	r1, #100	; 0x64
 80067ca:	fb01 f303 	mul.w	r3, r1, r3
 80067ce:	1ad3      	subs	r3, r2, r3
 80067d0:	011b      	lsls	r3, r3, #4
 80067d2:	3332      	adds	r3, #50	; 0x32
 80067d4:	4a09      	ldr	r2, [pc, #36]	; (80067fc <UART_SetConfig+0x6f4>)
 80067d6:	fba2 2303 	umull	r2, r3, r2, r3
 80067da:	095b      	lsrs	r3, r3, #5
 80067dc:	f003 020f 	and.w	r2, r3, #15
 80067e0:	687b      	ldr	r3, [r7, #4]
 80067e2:	681b      	ldr	r3, [r3, #0]
 80067e4:	4442      	add	r2, r8
 80067e6:	609a      	str	r2, [r3, #8]
 80067e8:	e7ff      	b.n	80067ea <UART_SetConfig+0x6e2>
 80067ea:	bf00      	nop
 80067ec:	3714      	adds	r7, #20
 80067ee:	46bd      	mov	sp, r7
 80067f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80067f4:	40011000 	.word	0x40011000
 80067f8:	40011400 	.word	0x40011400
 80067fc:	51eb851f 	.word	0x51eb851f

08006800 <__errno>:
 8006800:	4b01      	ldr	r3, [pc, #4]	; (8006808 <__errno+0x8>)
 8006802:	6818      	ldr	r0, [r3, #0]
 8006804:	4770      	bx	lr
 8006806:	bf00      	nop
 8006808:	20000020 	.word	0x20000020

0800680c <__libc_init_array>:
 800680c:	b570      	push	{r4, r5, r6, lr}
 800680e:	4e0d      	ldr	r6, [pc, #52]	; (8006844 <__libc_init_array+0x38>)
 8006810:	4c0d      	ldr	r4, [pc, #52]	; (8006848 <__libc_init_array+0x3c>)
 8006812:	1ba4      	subs	r4, r4, r6
 8006814:	10a4      	asrs	r4, r4, #2
 8006816:	2500      	movs	r5, #0
 8006818:	42a5      	cmp	r5, r4
 800681a:	d109      	bne.n	8006830 <__libc_init_array+0x24>
 800681c:	4e0b      	ldr	r6, [pc, #44]	; (800684c <__libc_init_array+0x40>)
 800681e:	4c0c      	ldr	r4, [pc, #48]	; (8006850 <__libc_init_array+0x44>)
 8006820:	f001 fc7c 	bl	800811c <_init>
 8006824:	1ba4      	subs	r4, r4, r6
 8006826:	10a4      	asrs	r4, r4, #2
 8006828:	2500      	movs	r5, #0
 800682a:	42a5      	cmp	r5, r4
 800682c:	d105      	bne.n	800683a <__libc_init_array+0x2e>
 800682e:	bd70      	pop	{r4, r5, r6, pc}
 8006830:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006834:	4798      	blx	r3
 8006836:	3501      	adds	r5, #1
 8006838:	e7ee      	b.n	8006818 <__libc_init_array+0xc>
 800683a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800683e:	4798      	blx	r3
 8006840:	3501      	adds	r5, #1
 8006842:	e7f2      	b.n	800682a <__libc_init_array+0x1e>
 8006844:	08008638 	.word	0x08008638
 8006848:	08008638 	.word	0x08008638
 800684c:	08008638 	.word	0x08008638
 8006850:	0800863c 	.word	0x0800863c

08006854 <memcpy>:
 8006854:	b510      	push	{r4, lr}
 8006856:	1e43      	subs	r3, r0, #1
 8006858:	440a      	add	r2, r1
 800685a:	4291      	cmp	r1, r2
 800685c:	d100      	bne.n	8006860 <memcpy+0xc>
 800685e:	bd10      	pop	{r4, pc}
 8006860:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006864:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006868:	e7f7      	b.n	800685a <memcpy+0x6>

0800686a <memmove>:
 800686a:	4288      	cmp	r0, r1
 800686c:	b510      	push	{r4, lr}
 800686e:	eb01 0302 	add.w	r3, r1, r2
 8006872:	d807      	bhi.n	8006884 <memmove+0x1a>
 8006874:	1e42      	subs	r2, r0, #1
 8006876:	4299      	cmp	r1, r3
 8006878:	d00a      	beq.n	8006890 <memmove+0x26>
 800687a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800687e:	f802 4f01 	strb.w	r4, [r2, #1]!
 8006882:	e7f8      	b.n	8006876 <memmove+0xc>
 8006884:	4283      	cmp	r3, r0
 8006886:	d9f5      	bls.n	8006874 <memmove+0xa>
 8006888:	1881      	adds	r1, r0, r2
 800688a:	1ad2      	subs	r2, r2, r3
 800688c:	42d3      	cmn	r3, r2
 800688e:	d100      	bne.n	8006892 <memmove+0x28>
 8006890:	bd10      	pop	{r4, pc}
 8006892:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8006896:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800689a:	e7f7      	b.n	800688c <memmove+0x22>

0800689c <memset>:
 800689c:	4402      	add	r2, r0
 800689e:	4603      	mov	r3, r0
 80068a0:	4293      	cmp	r3, r2
 80068a2:	d100      	bne.n	80068a6 <memset+0xa>
 80068a4:	4770      	bx	lr
 80068a6:	f803 1b01 	strb.w	r1, [r3], #1
 80068aa:	e7f9      	b.n	80068a0 <memset+0x4>

080068ac <siprintf>:
 80068ac:	b40e      	push	{r1, r2, r3}
 80068ae:	b500      	push	{lr}
 80068b0:	b09c      	sub	sp, #112	; 0x70
 80068b2:	ab1d      	add	r3, sp, #116	; 0x74
 80068b4:	9002      	str	r0, [sp, #8]
 80068b6:	9006      	str	r0, [sp, #24]
 80068b8:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80068bc:	4809      	ldr	r0, [pc, #36]	; (80068e4 <siprintf+0x38>)
 80068be:	9107      	str	r1, [sp, #28]
 80068c0:	9104      	str	r1, [sp, #16]
 80068c2:	4909      	ldr	r1, [pc, #36]	; (80068e8 <siprintf+0x3c>)
 80068c4:	f853 2b04 	ldr.w	r2, [r3], #4
 80068c8:	9105      	str	r1, [sp, #20]
 80068ca:	6800      	ldr	r0, [r0, #0]
 80068cc:	9301      	str	r3, [sp, #4]
 80068ce:	a902      	add	r1, sp, #8
 80068d0:	f000 f866 	bl	80069a0 <_svfiprintf_r>
 80068d4:	9b02      	ldr	r3, [sp, #8]
 80068d6:	2200      	movs	r2, #0
 80068d8:	701a      	strb	r2, [r3, #0]
 80068da:	b01c      	add	sp, #112	; 0x70
 80068dc:	f85d eb04 	ldr.w	lr, [sp], #4
 80068e0:	b003      	add	sp, #12
 80068e2:	4770      	bx	lr
 80068e4:	20000020 	.word	0x20000020
 80068e8:	ffff0208 	.word	0xffff0208

080068ec <__ssputs_r>:
 80068ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80068f0:	688e      	ldr	r6, [r1, #8]
 80068f2:	429e      	cmp	r6, r3
 80068f4:	4682      	mov	sl, r0
 80068f6:	460c      	mov	r4, r1
 80068f8:	4690      	mov	r8, r2
 80068fa:	4699      	mov	r9, r3
 80068fc:	d837      	bhi.n	800696e <__ssputs_r+0x82>
 80068fe:	898a      	ldrh	r2, [r1, #12]
 8006900:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8006904:	d031      	beq.n	800696a <__ssputs_r+0x7e>
 8006906:	6825      	ldr	r5, [r4, #0]
 8006908:	6909      	ldr	r1, [r1, #16]
 800690a:	1a6f      	subs	r7, r5, r1
 800690c:	6965      	ldr	r5, [r4, #20]
 800690e:	2302      	movs	r3, #2
 8006910:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006914:	fb95 f5f3 	sdiv	r5, r5, r3
 8006918:	f109 0301 	add.w	r3, r9, #1
 800691c:	443b      	add	r3, r7
 800691e:	429d      	cmp	r5, r3
 8006920:	bf38      	it	cc
 8006922:	461d      	movcc	r5, r3
 8006924:	0553      	lsls	r3, r2, #21
 8006926:	d530      	bpl.n	800698a <__ssputs_r+0x9e>
 8006928:	4629      	mov	r1, r5
 800692a:	f000 fb07 	bl	8006f3c <_malloc_r>
 800692e:	4606      	mov	r6, r0
 8006930:	b950      	cbnz	r0, 8006948 <__ssputs_r+0x5c>
 8006932:	230c      	movs	r3, #12
 8006934:	f8ca 3000 	str.w	r3, [sl]
 8006938:	89a3      	ldrh	r3, [r4, #12]
 800693a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800693e:	81a3      	strh	r3, [r4, #12]
 8006940:	f04f 30ff 	mov.w	r0, #4294967295
 8006944:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006948:	463a      	mov	r2, r7
 800694a:	6921      	ldr	r1, [r4, #16]
 800694c:	f7ff ff82 	bl	8006854 <memcpy>
 8006950:	89a3      	ldrh	r3, [r4, #12]
 8006952:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8006956:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800695a:	81a3      	strh	r3, [r4, #12]
 800695c:	6126      	str	r6, [r4, #16]
 800695e:	6165      	str	r5, [r4, #20]
 8006960:	443e      	add	r6, r7
 8006962:	1bed      	subs	r5, r5, r7
 8006964:	6026      	str	r6, [r4, #0]
 8006966:	60a5      	str	r5, [r4, #8]
 8006968:	464e      	mov	r6, r9
 800696a:	454e      	cmp	r6, r9
 800696c:	d900      	bls.n	8006970 <__ssputs_r+0x84>
 800696e:	464e      	mov	r6, r9
 8006970:	4632      	mov	r2, r6
 8006972:	4641      	mov	r1, r8
 8006974:	6820      	ldr	r0, [r4, #0]
 8006976:	f7ff ff78 	bl	800686a <memmove>
 800697a:	68a3      	ldr	r3, [r4, #8]
 800697c:	1b9b      	subs	r3, r3, r6
 800697e:	60a3      	str	r3, [r4, #8]
 8006980:	6823      	ldr	r3, [r4, #0]
 8006982:	441e      	add	r6, r3
 8006984:	6026      	str	r6, [r4, #0]
 8006986:	2000      	movs	r0, #0
 8006988:	e7dc      	b.n	8006944 <__ssputs_r+0x58>
 800698a:	462a      	mov	r2, r5
 800698c:	f000 fb30 	bl	8006ff0 <_realloc_r>
 8006990:	4606      	mov	r6, r0
 8006992:	2800      	cmp	r0, #0
 8006994:	d1e2      	bne.n	800695c <__ssputs_r+0x70>
 8006996:	6921      	ldr	r1, [r4, #16]
 8006998:	4650      	mov	r0, sl
 800699a:	f000 fa81 	bl	8006ea0 <_free_r>
 800699e:	e7c8      	b.n	8006932 <__ssputs_r+0x46>

080069a0 <_svfiprintf_r>:
 80069a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80069a4:	461d      	mov	r5, r3
 80069a6:	898b      	ldrh	r3, [r1, #12]
 80069a8:	061f      	lsls	r7, r3, #24
 80069aa:	b09d      	sub	sp, #116	; 0x74
 80069ac:	4680      	mov	r8, r0
 80069ae:	460c      	mov	r4, r1
 80069b0:	4616      	mov	r6, r2
 80069b2:	d50f      	bpl.n	80069d4 <_svfiprintf_r+0x34>
 80069b4:	690b      	ldr	r3, [r1, #16]
 80069b6:	b96b      	cbnz	r3, 80069d4 <_svfiprintf_r+0x34>
 80069b8:	2140      	movs	r1, #64	; 0x40
 80069ba:	f000 fabf 	bl	8006f3c <_malloc_r>
 80069be:	6020      	str	r0, [r4, #0]
 80069c0:	6120      	str	r0, [r4, #16]
 80069c2:	b928      	cbnz	r0, 80069d0 <_svfiprintf_r+0x30>
 80069c4:	230c      	movs	r3, #12
 80069c6:	f8c8 3000 	str.w	r3, [r8]
 80069ca:	f04f 30ff 	mov.w	r0, #4294967295
 80069ce:	e0c8      	b.n	8006b62 <_svfiprintf_r+0x1c2>
 80069d0:	2340      	movs	r3, #64	; 0x40
 80069d2:	6163      	str	r3, [r4, #20]
 80069d4:	2300      	movs	r3, #0
 80069d6:	9309      	str	r3, [sp, #36]	; 0x24
 80069d8:	2320      	movs	r3, #32
 80069da:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80069de:	2330      	movs	r3, #48	; 0x30
 80069e0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80069e4:	9503      	str	r5, [sp, #12]
 80069e6:	f04f 0b01 	mov.w	fp, #1
 80069ea:	4637      	mov	r7, r6
 80069ec:	463d      	mov	r5, r7
 80069ee:	f815 3b01 	ldrb.w	r3, [r5], #1
 80069f2:	b10b      	cbz	r3, 80069f8 <_svfiprintf_r+0x58>
 80069f4:	2b25      	cmp	r3, #37	; 0x25
 80069f6:	d13e      	bne.n	8006a76 <_svfiprintf_r+0xd6>
 80069f8:	ebb7 0a06 	subs.w	sl, r7, r6
 80069fc:	d00b      	beq.n	8006a16 <_svfiprintf_r+0x76>
 80069fe:	4653      	mov	r3, sl
 8006a00:	4632      	mov	r2, r6
 8006a02:	4621      	mov	r1, r4
 8006a04:	4640      	mov	r0, r8
 8006a06:	f7ff ff71 	bl	80068ec <__ssputs_r>
 8006a0a:	3001      	adds	r0, #1
 8006a0c:	f000 80a4 	beq.w	8006b58 <_svfiprintf_r+0x1b8>
 8006a10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006a12:	4453      	add	r3, sl
 8006a14:	9309      	str	r3, [sp, #36]	; 0x24
 8006a16:	783b      	ldrb	r3, [r7, #0]
 8006a18:	2b00      	cmp	r3, #0
 8006a1a:	f000 809d 	beq.w	8006b58 <_svfiprintf_r+0x1b8>
 8006a1e:	2300      	movs	r3, #0
 8006a20:	f04f 32ff 	mov.w	r2, #4294967295
 8006a24:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006a28:	9304      	str	r3, [sp, #16]
 8006a2a:	9307      	str	r3, [sp, #28]
 8006a2c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006a30:	931a      	str	r3, [sp, #104]	; 0x68
 8006a32:	462f      	mov	r7, r5
 8006a34:	2205      	movs	r2, #5
 8006a36:	f817 1b01 	ldrb.w	r1, [r7], #1
 8006a3a:	4850      	ldr	r0, [pc, #320]	; (8006b7c <_svfiprintf_r+0x1dc>)
 8006a3c:	f7f9 fbf0 	bl	8000220 <memchr>
 8006a40:	9b04      	ldr	r3, [sp, #16]
 8006a42:	b9d0      	cbnz	r0, 8006a7a <_svfiprintf_r+0xda>
 8006a44:	06d9      	lsls	r1, r3, #27
 8006a46:	bf44      	itt	mi
 8006a48:	2220      	movmi	r2, #32
 8006a4a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006a4e:	071a      	lsls	r2, r3, #28
 8006a50:	bf44      	itt	mi
 8006a52:	222b      	movmi	r2, #43	; 0x2b
 8006a54:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006a58:	782a      	ldrb	r2, [r5, #0]
 8006a5a:	2a2a      	cmp	r2, #42	; 0x2a
 8006a5c:	d015      	beq.n	8006a8a <_svfiprintf_r+0xea>
 8006a5e:	9a07      	ldr	r2, [sp, #28]
 8006a60:	462f      	mov	r7, r5
 8006a62:	2000      	movs	r0, #0
 8006a64:	250a      	movs	r5, #10
 8006a66:	4639      	mov	r1, r7
 8006a68:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006a6c:	3b30      	subs	r3, #48	; 0x30
 8006a6e:	2b09      	cmp	r3, #9
 8006a70:	d94d      	bls.n	8006b0e <_svfiprintf_r+0x16e>
 8006a72:	b1b8      	cbz	r0, 8006aa4 <_svfiprintf_r+0x104>
 8006a74:	e00f      	b.n	8006a96 <_svfiprintf_r+0xf6>
 8006a76:	462f      	mov	r7, r5
 8006a78:	e7b8      	b.n	80069ec <_svfiprintf_r+0x4c>
 8006a7a:	4a40      	ldr	r2, [pc, #256]	; (8006b7c <_svfiprintf_r+0x1dc>)
 8006a7c:	1a80      	subs	r0, r0, r2
 8006a7e:	fa0b f000 	lsl.w	r0, fp, r0
 8006a82:	4318      	orrs	r0, r3
 8006a84:	9004      	str	r0, [sp, #16]
 8006a86:	463d      	mov	r5, r7
 8006a88:	e7d3      	b.n	8006a32 <_svfiprintf_r+0x92>
 8006a8a:	9a03      	ldr	r2, [sp, #12]
 8006a8c:	1d11      	adds	r1, r2, #4
 8006a8e:	6812      	ldr	r2, [r2, #0]
 8006a90:	9103      	str	r1, [sp, #12]
 8006a92:	2a00      	cmp	r2, #0
 8006a94:	db01      	blt.n	8006a9a <_svfiprintf_r+0xfa>
 8006a96:	9207      	str	r2, [sp, #28]
 8006a98:	e004      	b.n	8006aa4 <_svfiprintf_r+0x104>
 8006a9a:	4252      	negs	r2, r2
 8006a9c:	f043 0302 	orr.w	r3, r3, #2
 8006aa0:	9207      	str	r2, [sp, #28]
 8006aa2:	9304      	str	r3, [sp, #16]
 8006aa4:	783b      	ldrb	r3, [r7, #0]
 8006aa6:	2b2e      	cmp	r3, #46	; 0x2e
 8006aa8:	d10c      	bne.n	8006ac4 <_svfiprintf_r+0x124>
 8006aaa:	787b      	ldrb	r3, [r7, #1]
 8006aac:	2b2a      	cmp	r3, #42	; 0x2a
 8006aae:	d133      	bne.n	8006b18 <_svfiprintf_r+0x178>
 8006ab0:	9b03      	ldr	r3, [sp, #12]
 8006ab2:	1d1a      	adds	r2, r3, #4
 8006ab4:	681b      	ldr	r3, [r3, #0]
 8006ab6:	9203      	str	r2, [sp, #12]
 8006ab8:	2b00      	cmp	r3, #0
 8006aba:	bfb8      	it	lt
 8006abc:	f04f 33ff 	movlt.w	r3, #4294967295
 8006ac0:	3702      	adds	r7, #2
 8006ac2:	9305      	str	r3, [sp, #20]
 8006ac4:	4d2e      	ldr	r5, [pc, #184]	; (8006b80 <_svfiprintf_r+0x1e0>)
 8006ac6:	7839      	ldrb	r1, [r7, #0]
 8006ac8:	2203      	movs	r2, #3
 8006aca:	4628      	mov	r0, r5
 8006acc:	f7f9 fba8 	bl	8000220 <memchr>
 8006ad0:	b138      	cbz	r0, 8006ae2 <_svfiprintf_r+0x142>
 8006ad2:	2340      	movs	r3, #64	; 0x40
 8006ad4:	1b40      	subs	r0, r0, r5
 8006ad6:	fa03 f000 	lsl.w	r0, r3, r0
 8006ada:	9b04      	ldr	r3, [sp, #16]
 8006adc:	4303      	orrs	r3, r0
 8006ade:	3701      	adds	r7, #1
 8006ae0:	9304      	str	r3, [sp, #16]
 8006ae2:	7839      	ldrb	r1, [r7, #0]
 8006ae4:	4827      	ldr	r0, [pc, #156]	; (8006b84 <_svfiprintf_r+0x1e4>)
 8006ae6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006aea:	2206      	movs	r2, #6
 8006aec:	1c7e      	adds	r6, r7, #1
 8006aee:	f7f9 fb97 	bl	8000220 <memchr>
 8006af2:	2800      	cmp	r0, #0
 8006af4:	d038      	beq.n	8006b68 <_svfiprintf_r+0x1c8>
 8006af6:	4b24      	ldr	r3, [pc, #144]	; (8006b88 <_svfiprintf_r+0x1e8>)
 8006af8:	bb13      	cbnz	r3, 8006b40 <_svfiprintf_r+0x1a0>
 8006afa:	9b03      	ldr	r3, [sp, #12]
 8006afc:	3307      	adds	r3, #7
 8006afe:	f023 0307 	bic.w	r3, r3, #7
 8006b02:	3308      	adds	r3, #8
 8006b04:	9303      	str	r3, [sp, #12]
 8006b06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006b08:	444b      	add	r3, r9
 8006b0a:	9309      	str	r3, [sp, #36]	; 0x24
 8006b0c:	e76d      	b.n	80069ea <_svfiprintf_r+0x4a>
 8006b0e:	fb05 3202 	mla	r2, r5, r2, r3
 8006b12:	2001      	movs	r0, #1
 8006b14:	460f      	mov	r7, r1
 8006b16:	e7a6      	b.n	8006a66 <_svfiprintf_r+0xc6>
 8006b18:	2300      	movs	r3, #0
 8006b1a:	3701      	adds	r7, #1
 8006b1c:	9305      	str	r3, [sp, #20]
 8006b1e:	4619      	mov	r1, r3
 8006b20:	250a      	movs	r5, #10
 8006b22:	4638      	mov	r0, r7
 8006b24:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006b28:	3a30      	subs	r2, #48	; 0x30
 8006b2a:	2a09      	cmp	r2, #9
 8006b2c:	d903      	bls.n	8006b36 <_svfiprintf_r+0x196>
 8006b2e:	2b00      	cmp	r3, #0
 8006b30:	d0c8      	beq.n	8006ac4 <_svfiprintf_r+0x124>
 8006b32:	9105      	str	r1, [sp, #20]
 8006b34:	e7c6      	b.n	8006ac4 <_svfiprintf_r+0x124>
 8006b36:	fb05 2101 	mla	r1, r5, r1, r2
 8006b3a:	2301      	movs	r3, #1
 8006b3c:	4607      	mov	r7, r0
 8006b3e:	e7f0      	b.n	8006b22 <_svfiprintf_r+0x182>
 8006b40:	ab03      	add	r3, sp, #12
 8006b42:	9300      	str	r3, [sp, #0]
 8006b44:	4622      	mov	r2, r4
 8006b46:	4b11      	ldr	r3, [pc, #68]	; (8006b8c <_svfiprintf_r+0x1ec>)
 8006b48:	a904      	add	r1, sp, #16
 8006b4a:	4640      	mov	r0, r8
 8006b4c:	f3af 8000 	nop.w
 8006b50:	f1b0 3fff 	cmp.w	r0, #4294967295
 8006b54:	4681      	mov	r9, r0
 8006b56:	d1d6      	bne.n	8006b06 <_svfiprintf_r+0x166>
 8006b58:	89a3      	ldrh	r3, [r4, #12]
 8006b5a:	065b      	lsls	r3, r3, #25
 8006b5c:	f53f af35 	bmi.w	80069ca <_svfiprintf_r+0x2a>
 8006b60:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006b62:	b01d      	add	sp, #116	; 0x74
 8006b64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b68:	ab03      	add	r3, sp, #12
 8006b6a:	9300      	str	r3, [sp, #0]
 8006b6c:	4622      	mov	r2, r4
 8006b6e:	4b07      	ldr	r3, [pc, #28]	; (8006b8c <_svfiprintf_r+0x1ec>)
 8006b70:	a904      	add	r1, sp, #16
 8006b72:	4640      	mov	r0, r8
 8006b74:	f000 f882 	bl	8006c7c <_printf_i>
 8006b78:	e7ea      	b.n	8006b50 <_svfiprintf_r+0x1b0>
 8006b7a:	bf00      	nop
 8006b7c:	080085b4 	.word	0x080085b4
 8006b80:	080085ba 	.word	0x080085ba
 8006b84:	080085be 	.word	0x080085be
 8006b88:	00000000 	.word	0x00000000
 8006b8c:	080068ed 	.word	0x080068ed

08006b90 <_printf_common>:
 8006b90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006b94:	4691      	mov	r9, r2
 8006b96:	461f      	mov	r7, r3
 8006b98:	688a      	ldr	r2, [r1, #8]
 8006b9a:	690b      	ldr	r3, [r1, #16]
 8006b9c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8006ba0:	4293      	cmp	r3, r2
 8006ba2:	bfb8      	it	lt
 8006ba4:	4613      	movlt	r3, r2
 8006ba6:	f8c9 3000 	str.w	r3, [r9]
 8006baa:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8006bae:	4606      	mov	r6, r0
 8006bb0:	460c      	mov	r4, r1
 8006bb2:	b112      	cbz	r2, 8006bba <_printf_common+0x2a>
 8006bb4:	3301      	adds	r3, #1
 8006bb6:	f8c9 3000 	str.w	r3, [r9]
 8006bba:	6823      	ldr	r3, [r4, #0]
 8006bbc:	0699      	lsls	r1, r3, #26
 8006bbe:	bf42      	ittt	mi
 8006bc0:	f8d9 3000 	ldrmi.w	r3, [r9]
 8006bc4:	3302      	addmi	r3, #2
 8006bc6:	f8c9 3000 	strmi.w	r3, [r9]
 8006bca:	6825      	ldr	r5, [r4, #0]
 8006bcc:	f015 0506 	ands.w	r5, r5, #6
 8006bd0:	d107      	bne.n	8006be2 <_printf_common+0x52>
 8006bd2:	f104 0a19 	add.w	sl, r4, #25
 8006bd6:	68e3      	ldr	r3, [r4, #12]
 8006bd8:	f8d9 2000 	ldr.w	r2, [r9]
 8006bdc:	1a9b      	subs	r3, r3, r2
 8006bde:	42ab      	cmp	r3, r5
 8006be0:	dc28      	bgt.n	8006c34 <_printf_common+0xa4>
 8006be2:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8006be6:	6822      	ldr	r2, [r4, #0]
 8006be8:	3300      	adds	r3, #0
 8006bea:	bf18      	it	ne
 8006bec:	2301      	movne	r3, #1
 8006bee:	0692      	lsls	r2, r2, #26
 8006bf0:	d42d      	bmi.n	8006c4e <_printf_common+0xbe>
 8006bf2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8006bf6:	4639      	mov	r1, r7
 8006bf8:	4630      	mov	r0, r6
 8006bfa:	47c0      	blx	r8
 8006bfc:	3001      	adds	r0, #1
 8006bfe:	d020      	beq.n	8006c42 <_printf_common+0xb2>
 8006c00:	6823      	ldr	r3, [r4, #0]
 8006c02:	68e5      	ldr	r5, [r4, #12]
 8006c04:	f8d9 2000 	ldr.w	r2, [r9]
 8006c08:	f003 0306 	and.w	r3, r3, #6
 8006c0c:	2b04      	cmp	r3, #4
 8006c0e:	bf08      	it	eq
 8006c10:	1aad      	subeq	r5, r5, r2
 8006c12:	68a3      	ldr	r3, [r4, #8]
 8006c14:	6922      	ldr	r2, [r4, #16]
 8006c16:	bf0c      	ite	eq
 8006c18:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8006c1c:	2500      	movne	r5, #0
 8006c1e:	4293      	cmp	r3, r2
 8006c20:	bfc4      	itt	gt
 8006c22:	1a9b      	subgt	r3, r3, r2
 8006c24:	18ed      	addgt	r5, r5, r3
 8006c26:	f04f 0900 	mov.w	r9, #0
 8006c2a:	341a      	adds	r4, #26
 8006c2c:	454d      	cmp	r5, r9
 8006c2e:	d11a      	bne.n	8006c66 <_printf_common+0xd6>
 8006c30:	2000      	movs	r0, #0
 8006c32:	e008      	b.n	8006c46 <_printf_common+0xb6>
 8006c34:	2301      	movs	r3, #1
 8006c36:	4652      	mov	r2, sl
 8006c38:	4639      	mov	r1, r7
 8006c3a:	4630      	mov	r0, r6
 8006c3c:	47c0      	blx	r8
 8006c3e:	3001      	adds	r0, #1
 8006c40:	d103      	bne.n	8006c4a <_printf_common+0xba>
 8006c42:	f04f 30ff 	mov.w	r0, #4294967295
 8006c46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006c4a:	3501      	adds	r5, #1
 8006c4c:	e7c3      	b.n	8006bd6 <_printf_common+0x46>
 8006c4e:	18e1      	adds	r1, r4, r3
 8006c50:	1c5a      	adds	r2, r3, #1
 8006c52:	2030      	movs	r0, #48	; 0x30
 8006c54:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8006c58:	4422      	add	r2, r4
 8006c5a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8006c5e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8006c62:	3302      	adds	r3, #2
 8006c64:	e7c5      	b.n	8006bf2 <_printf_common+0x62>
 8006c66:	2301      	movs	r3, #1
 8006c68:	4622      	mov	r2, r4
 8006c6a:	4639      	mov	r1, r7
 8006c6c:	4630      	mov	r0, r6
 8006c6e:	47c0      	blx	r8
 8006c70:	3001      	adds	r0, #1
 8006c72:	d0e6      	beq.n	8006c42 <_printf_common+0xb2>
 8006c74:	f109 0901 	add.w	r9, r9, #1
 8006c78:	e7d8      	b.n	8006c2c <_printf_common+0x9c>
	...

08006c7c <_printf_i>:
 8006c7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006c80:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8006c84:	460c      	mov	r4, r1
 8006c86:	7e09      	ldrb	r1, [r1, #24]
 8006c88:	b085      	sub	sp, #20
 8006c8a:	296e      	cmp	r1, #110	; 0x6e
 8006c8c:	4617      	mov	r7, r2
 8006c8e:	4606      	mov	r6, r0
 8006c90:	4698      	mov	r8, r3
 8006c92:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006c94:	f000 80b3 	beq.w	8006dfe <_printf_i+0x182>
 8006c98:	d822      	bhi.n	8006ce0 <_printf_i+0x64>
 8006c9a:	2963      	cmp	r1, #99	; 0x63
 8006c9c:	d036      	beq.n	8006d0c <_printf_i+0x90>
 8006c9e:	d80a      	bhi.n	8006cb6 <_printf_i+0x3a>
 8006ca0:	2900      	cmp	r1, #0
 8006ca2:	f000 80b9 	beq.w	8006e18 <_printf_i+0x19c>
 8006ca6:	2958      	cmp	r1, #88	; 0x58
 8006ca8:	f000 8083 	beq.w	8006db2 <_printf_i+0x136>
 8006cac:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006cb0:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8006cb4:	e032      	b.n	8006d1c <_printf_i+0xa0>
 8006cb6:	2964      	cmp	r1, #100	; 0x64
 8006cb8:	d001      	beq.n	8006cbe <_printf_i+0x42>
 8006cba:	2969      	cmp	r1, #105	; 0x69
 8006cbc:	d1f6      	bne.n	8006cac <_printf_i+0x30>
 8006cbe:	6820      	ldr	r0, [r4, #0]
 8006cc0:	6813      	ldr	r3, [r2, #0]
 8006cc2:	0605      	lsls	r5, r0, #24
 8006cc4:	f103 0104 	add.w	r1, r3, #4
 8006cc8:	d52a      	bpl.n	8006d20 <_printf_i+0xa4>
 8006cca:	681b      	ldr	r3, [r3, #0]
 8006ccc:	6011      	str	r1, [r2, #0]
 8006cce:	2b00      	cmp	r3, #0
 8006cd0:	da03      	bge.n	8006cda <_printf_i+0x5e>
 8006cd2:	222d      	movs	r2, #45	; 0x2d
 8006cd4:	425b      	negs	r3, r3
 8006cd6:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8006cda:	486f      	ldr	r0, [pc, #444]	; (8006e98 <_printf_i+0x21c>)
 8006cdc:	220a      	movs	r2, #10
 8006cde:	e039      	b.n	8006d54 <_printf_i+0xd8>
 8006ce0:	2973      	cmp	r1, #115	; 0x73
 8006ce2:	f000 809d 	beq.w	8006e20 <_printf_i+0x1a4>
 8006ce6:	d808      	bhi.n	8006cfa <_printf_i+0x7e>
 8006ce8:	296f      	cmp	r1, #111	; 0x6f
 8006cea:	d020      	beq.n	8006d2e <_printf_i+0xb2>
 8006cec:	2970      	cmp	r1, #112	; 0x70
 8006cee:	d1dd      	bne.n	8006cac <_printf_i+0x30>
 8006cf0:	6823      	ldr	r3, [r4, #0]
 8006cf2:	f043 0320 	orr.w	r3, r3, #32
 8006cf6:	6023      	str	r3, [r4, #0]
 8006cf8:	e003      	b.n	8006d02 <_printf_i+0x86>
 8006cfa:	2975      	cmp	r1, #117	; 0x75
 8006cfc:	d017      	beq.n	8006d2e <_printf_i+0xb2>
 8006cfe:	2978      	cmp	r1, #120	; 0x78
 8006d00:	d1d4      	bne.n	8006cac <_printf_i+0x30>
 8006d02:	2378      	movs	r3, #120	; 0x78
 8006d04:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8006d08:	4864      	ldr	r0, [pc, #400]	; (8006e9c <_printf_i+0x220>)
 8006d0a:	e055      	b.n	8006db8 <_printf_i+0x13c>
 8006d0c:	6813      	ldr	r3, [r2, #0]
 8006d0e:	1d19      	adds	r1, r3, #4
 8006d10:	681b      	ldr	r3, [r3, #0]
 8006d12:	6011      	str	r1, [r2, #0]
 8006d14:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006d18:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006d1c:	2301      	movs	r3, #1
 8006d1e:	e08c      	b.n	8006e3a <_printf_i+0x1be>
 8006d20:	681b      	ldr	r3, [r3, #0]
 8006d22:	6011      	str	r1, [r2, #0]
 8006d24:	f010 0f40 	tst.w	r0, #64	; 0x40
 8006d28:	bf18      	it	ne
 8006d2a:	b21b      	sxthne	r3, r3
 8006d2c:	e7cf      	b.n	8006cce <_printf_i+0x52>
 8006d2e:	6813      	ldr	r3, [r2, #0]
 8006d30:	6825      	ldr	r5, [r4, #0]
 8006d32:	1d18      	adds	r0, r3, #4
 8006d34:	6010      	str	r0, [r2, #0]
 8006d36:	0628      	lsls	r0, r5, #24
 8006d38:	d501      	bpl.n	8006d3e <_printf_i+0xc2>
 8006d3a:	681b      	ldr	r3, [r3, #0]
 8006d3c:	e002      	b.n	8006d44 <_printf_i+0xc8>
 8006d3e:	0668      	lsls	r0, r5, #25
 8006d40:	d5fb      	bpl.n	8006d3a <_printf_i+0xbe>
 8006d42:	881b      	ldrh	r3, [r3, #0]
 8006d44:	4854      	ldr	r0, [pc, #336]	; (8006e98 <_printf_i+0x21c>)
 8006d46:	296f      	cmp	r1, #111	; 0x6f
 8006d48:	bf14      	ite	ne
 8006d4a:	220a      	movne	r2, #10
 8006d4c:	2208      	moveq	r2, #8
 8006d4e:	2100      	movs	r1, #0
 8006d50:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8006d54:	6865      	ldr	r5, [r4, #4]
 8006d56:	60a5      	str	r5, [r4, #8]
 8006d58:	2d00      	cmp	r5, #0
 8006d5a:	f2c0 8095 	blt.w	8006e88 <_printf_i+0x20c>
 8006d5e:	6821      	ldr	r1, [r4, #0]
 8006d60:	f021 0104 	bic.w	r1, r1, #4
 8006d64:	6021      	str	r1, [r4, #0]
 8006d66:	2b00      	cmp	r3, #0
 8006d68:	d13d      	bne.n	8006de6 <_printf_i+0x16a>
 8006d6a:	2d00      	cmp	r5, #0
 8006d6c:	f040 808e 	bne.w	8006e8c <_printf_i+0x210>
 8006d70:	4665      	mov	r5, ip
 8006d72:	2a08      	cmp	r2, #8
 8006d74:	d10b      	bne.n	8006d8e <_printf_i+0x112>
 8006d76:	6823      	ldr	r3, [r4, #0]
 8006d78:	07db      	lsls	r3, r3, #31
 8006d7a:	d508      	bpl.n	8006d8e <_printf_i+0x112>
 8006d7c:	6923      	ldr	r3, [r4, #16]
 8006d7e:	6862      	ldr	r2, [r4, #4]
 8006d80:	429a      	cmp	r2, r3
 8006d82:	bfde      	ittt	le
 8006d84:	2330      	movle	r3, #48	; 0x30
 8006d86:	f805 3c01 	strble.w	r3, [r5, #-1]
 8006d8a:	f105 35ff 	addle.w	r5, r5, #4294967295
 8006d8e:	ebac 0305 	sub.w	r3, ip, r5
 8006d92:	6123      	str	r3, [r4, #16]
 8006d94:	f8cd 8000 	str.w	r8, [sp]
 8006d98:	463b      	mov	r3, r7
 8006d9a:	aa03      	add	r2, sp, #12
 8006d9c:	4621      	mov	r1, r4
 8006d9e:	4630      	mov	r0, r6
 8006da0:	f7ff fef6 	bl	8006b90 <_printf_common>
 8006da4:	3001      	adds	r0, #1
 8006da6:	d14d      	bne.n	8006e44 <_printf_i+0x1c8>
 8006da8:	f04f 30ff 	mov.w	r0, #4294967295
 8006dac:	b005      	add	sp, #20
 8006dae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006db2:	4839      	ldr	r0, [pc, #228]	; (8006e98 <_printf_i+0x21c>)
 8006db4:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8006db8:	6813      	ldr	r3, [r2, #0]
 8006dba:	6821      	ldr	r1, [r4, #0]
 8006dbc:	1d1d      	adds	r5, r3, #4
 8006dbe:	681b      	ldr	r3, [r3, #0]
 8006dc0:	6015      	str	r5, [r2, #0]
 8006dc2:	060a      	lsls	r2, r1, #24
 8006dc4:	d50b      	bpl.n	8006dde <_printf_i+0x162>
 8006dc6:	07ca      	lsls	r2, r1, #31
 8006dc8:	bf44      	itt	mi
 8006dca:	f041 0120 	orrmi.w	r1, r1, #32
 8006dce:	6021      	strmi	r1, [r4, #0]
 8006dd0:	b91b      	cbnz	r3, 8006dda <_printf_i+0x15e>
 8006dd2:	6822      	ldr	r2, [r4, #0]
 8006dd4:	f022 0220 	bic.w	r2, r2, #32
 8006dd8:	6022      	str	r2, [r4, #0]
 8006dda:	2210      	movs	r2, #16
 8006ddc:	e7b7      	b.n	8006d4e <_printf_i+0xd2>
 8006dde:	064d      	lsls	r5, r1, #25
 8006de0:	bf48      	it	mi
 8006de2:	b29b      	uxthmi	r3, r3
 8006de4:	e7ef      	b.n	8006dc6 <_printf_i+0x14a>
 8006de6:	4665      	mov	r5, ip
 8006de8:	fbb3 f1f2 	udiv	r1, r3, r2
 8006dec:	fb02 3311 	mls	r3, r2, r1, r3
 8006df0:	5cc3      	ldrb	r3, [r0, r3]
 8006df2:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8006df6:	460b      	mov	r3, r1
 8006df8:	2900      	cmp	r1, #0
 8006dfa:	d1f5      	bne.n	8006de8 <_printf_i+0x16c>
 8006dfc:	e7b9      	b.n	8006d72 <_printf_i+0xf6>
 8006dfe:	6813      	ldr	r3, [r2, #0]
 8006e00:	6825      	ldr	r5, [r4, #0]
 8006e02:	6961      	ldr	r1, [r4, #20]
 8006e04:	1d18      	adds	r0, r3, #4
 8006e06:	6010      	str	r0, [r2, #0]
 8006e08:	0628      	lsls	r0, r5, #24
 8006e0a:	681b      	ldr	r3, [r3, #0]
 8006e0c:	d501      	bpl.n	8006e12 <_printf_i+0x196>
 8006e0e:	6019      	str	r1, [r3, #0]
 8006e10:	e002      	b.n	8006e18 <_printf_i+0x19c>
 8006e12:	066a      	lsls	r2, r5, #25
 8006e14:	d5fb      	bpl.n	8006e0e <_printf_i+0x192>
 8006e16:	8019      	strh	r1, [r3, #0]
 8006e18:	2300      	movs	r3, #0
 8006e1a:	6123      	str	r3, [r4, #16]
 8006e1c:	4665      	mov	r5, ip
 8006e1e:	e7b9      	b.n	8006d94 <_printf_i+0x118>
 8006e20:	6813      	ldr	r3, [r2, #0]
 8006e22:	1d19      	adds	r1, r3, #4
 8006e24:	6011      	str	r1, [r2, #0]
 8006e26:	681d      	ldr	r5, [r3, #0]
 8006e28:	6862      	ldr	r2, [r4, #4]
 8006e2a:	2100      	movs	r1, #0
 8006e2c:	4628      	mov	r0, r5
 8006e2e:	f7f9 f9f7 	bl	8000220 <memchr>
 8006e32:	b108      	cbz	r0, 8006e38 <_printf_i+0x1bc>
 8006e34:	1b40      	subs	r0, r0, r5
 8006e36:	6060      	str	r0, [r4, #4]
 8006e38:	6863      	ldr	r3, [r4, #4]
 8006e3a:	6123      	str	r3, [r4, #16]
 8006e3c:	2300      	movs	r3, #0
 8006e3e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006e42:	e7a7      	b.n	8006d94 <_printf_i+0x118>
 8006e44:	6923      	ldr	r3, [r4, #16]
 8006e46:	462a      	mov	r2, r5
 8006e48:	4639      	mov	r1, r7
 8006e4a:	4630      	mov	r0, r6
 8006e4c:	47c0      	blx	r8
 8006e4e:	3001      	adds	r0, #1
 8006e50:	d0aa      	beq.n	8006da8 <_printf_i+0x12c>
 8006e52:	6823      	ldr	r3, [r4, #0]
 8006e54:	079b      	lsls	r3, r3, #30
 8006e56:	d413      	bmi.n	8006e80 <_printf_i+0x204>
 8006e58:	68e0      	ldr	r0, [r4, #12]
 8006e5a:	9b03      	ldr	r3, [sp, #12]
 8006e5c:	4298      	cmp	r0, r3
 8006e5e:	bfb8      	it	lt
 8006e60:	4618      	movlt	r0, r3
 8006e62:	e7a3      	b.n	8006dac <_printf_i+0x130>
 8006e64:	2301      	movs	r3, #1
 8006e66:	464a      	mov	r2, r9
 8006e68:	4639      	mov	r1, r7
 8006e6a:	4630      	mov	r0, r6
 8006e6c:	47c0      	blx	r8
 8006e6e:	3001      	adds	r0, #1
 8006e70:	d09a      	beq.n	8006da8 <_printf_i+0x12c>
 8006e72:	3501      	adds	r5, #1
 8006e74:	68e3      	ldr	r3, [r4, #12]
 8006e76:	9a03      	ldr	r2, [sp, #12]
 8006e78:	1a9b      	subs	r3, r3, r2
 8006e7a:	42ab      	cmp	r3, r5
 8006e7c:	dcf2      	bgt.n	8006e64 <_printf_i+0x1e8>
 8006e7e:	e7eb      	b.n	8006e58 <_printf_i+0x1dc>
 8006e80:	2500      	movs	r5, #0
 8006e82:	f104 0919 	add.w	r9, r4, #25
 8006e86:	e7f5      	b.n	8006e74 <_printf_i+0x1f8>
 8006e88:	2b00      	cmp	r3, #0
 8006e8a:	d1ac      	bne.n	8006de6 <_printf_i+0x16a>
 8006e8c:	7803      	ldrb	r3, [r0, #0]
 8006e8e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006e92:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006e96:	e76c      	b.n	8006d72 <_printf_i+0xf6>
 8006e98:	080085c5 	.word	0x080085c5
 8006e9c:	080085d6 	.word	0x080085d6

08006ea0 <_free_r>:
 8006ea0:	b538      	push	{r3, r4, r5, lr}
 8006ea2:	4605      	mov	r5, r0
 8006ea4:	2900      	cmp	r1, #0
 8006ea6:	d045      	beq.n	8006f34 <_free_r+0x94>
 8006ea8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006eac:	1f0c      	subs	r4, r1, #4
 8006eae:	2b00      	cmp	r3, #0
 8006eb0:	bfb8      	it	lt
 8006eb2:	18e4      	addlt	r4, r4, r3
 8006eb4:	f000 f8d2 	bl	800705c <__malloc_lock>
 8006eb8:	4a1f      	ldr	r2, [pc, #124]	; (8006f38 <_free_r+0x98>)
 8006eba:	6813      	ldr	r3, [r2, #0]
 8006ebc:	4610      	mov	r0, r2
 8006ebe:	b933      	cbnz	r3, 8006ece <_free_r+0x2e>
 8006ec0:	6063      	str	r3, [r4, #4]
 8006ec2:	6014      	str	r4, [r2, #0]
 8006ec4:	4628      	mov	r0, r5
 8006ec6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006eca:	f000 b8c8 	b.w	800705e <__malloc_unlock>
 8006ece:	42a3      	cmp	r3, r4
 8006ed0:	d90c      	bls.n	8006eec <_free_r+0x4c>
 8006ed2:	6821      	ldr	r1, [r4, #0]
 8006ed4:	1862      	adds	r2, r4, r1
 8006ed6:	4293      	cmp	r3, r2
 8006ed8:	bf04      	itt	eq
 8006eda:	681a      	ldreq	r2, [r3, #0]
 8006edc:	685b      	ldreq	r3, [r3, #4]
 8006ede:	6063      	str	r3, [r4, #4]
 8006ee0:	bf04      	itt	eq
 8006ee2:	1852      	addeq	r2, r2, r1
 8006ee4:	6022      	streq	r2, [r4, #0]
 8006ee6:	6004      	str	r4, [r0, #0]
 8006ee8:	e7ec      	b.n	8006ec4 <_free_r+0x24>
 8006eea:	4613      	mov	r3, r2
 8006eec:	685a      	ldr	r2, [r3, #4]
 8006eee:	b10a      	cbz	r2, 8006ef4 <_free_r+0x54>
 8006ef0:	42a2      	cmp	r2, r4
 8006ef2:	d9fa      	bls.n	8006eea <_free_r+0x4a>
 8006ef4:	6819      	ldr	r1, [r3, #0]
 8006ef6:	1858      	adds	r0, r3, r1
 8006ef8:	42a0      	cmp	r0, r4
 8006efa:	d10b      	bne.n	8006f14 <_free_r+0x74>
 8006efc:	6820      	ldr	r0, [r4, #0]
 8006efe:	4401      	add	r1, r0
 8006f00:	1858      	adds	r0, r3, r1
 8006f02:	4282      	cmp	r2, r0
 8006f04:	6019      	str	r1, [r3, #0]
 8006f06:	d1dd      	bne.n	8006ec4 <_free_r+0x24>
 8006f08:	6810      	ldr	r0, [r2, #0]
 8006f0a:	6852      	ldr	r2, [r2, #4]
 8006f0c:	605a      	str	r2, [r3, #4]
 8006f0e:	4401      	add	r1, r0
 8006f10:	6019      	str	r1, [r3, #0]
 8006f12:	e7d7      	b.n	8006ec4 <_free_r+0x24>
 8006f14:	d902      	bls.n	8006f1c <_free_r+0x7c>
 8006f16:	230c      	movs	r3, #12
 8006f18:	602b      	str	r3, [r5, #0]
 8006f1a:	e7d3      	b.n	8006ec4 <_free_r+0x24>
 8006f1c:	6820      	ldr	r0, [r4, #0]
 8006f1e:	1821      	adds	r1, r4, r0
 8006f20:	428a      	cmp	r2, r1
 8006f22:	bf04      	itt	eq
 8006f24:	6811      	ldreq	r1, [r2, #0]
 8006f26:	6852      	ldreq	r2, [r2, #4]
 8006f28:	6062      	str	r2, [r4, #4]
 8006f2a:	bf04      	itt	eq
 8006f2c:	1809      	addeq	r1, r1, r0
 8006f2e:	6021      	streq	r1, [r4, #0]
 8006f30:	605c      	str	r4, [r3, #4]
 8006f32:	e7c7      	b.n	8006ec4 <_free_r+0x24>
 8006f34:	bd38      	pop	{r3, r4, r5, pc}
 8006f36:	bf00      	nop
 8006f38:	200000dc 	.word	0x200000dc

08006f3c <_malloc_r>:
 8006f3c:	b570      	push	{r4, r5, r6, lr}
 8006f3e:	1ccd      	adds	r5, r1, #3
 8006f40:	f025 0503 	bic.w	r5, r5, #3
 8006f44:	3508      	adds	r5, #8
 8006f46:	2d0c      	cmp	r5, #12
 8006f48:	bf38      	it	cc
 8006f4a:	250c      	movcc	r5, #12
 8006f4c:	2d00      	cmp	r5, #0
 8006f4e:	4606      	mov	r6, r0
 8006f50:	db01      	blt.n	8006f56 <_malloc_r+0x1a>
 8006f52:	42a9      	cmp	r1, r5
 8006f54:	d903      	bls.n	8006f5e <_malloc_r+0x22>
 8006f56:	230c      	movs	r3, #12
 8006f58:	6033      	str	r3, [r6, #0]
 8006f5a:	2000      	movs	r0, #0
 8006f5c:	bd70      	pop	{r4, r5, r6, pc}
 8006f5e:	f000 f87d 	bl	800705c <__malloc_lock>
 8006f62:	4a21      	ldr	r2, [pc, #132]	; (8006fe8 <_malloc_r+0xac>)
 8006f64:	6814      	ldr	r4, [r2, #0]
 8006f66:	4621      	mov	r1, r4
 8006f68:	b991      	cbnz	r1, 8006f90 <_malloc_r+0x54>
 8006f6a:	4c20      	ldr	r4, [pc, #128]	; (8006fec <_malloc_r+0xb0>)
 8006f6c:	6823      	ldr	r3, [r4, #0]
 8006f6e:	b91b      	cbnz	r3, 8006f78 <_malloc_r+0x3c>
 8006f70:	4630      	mov	r0, r6
 8006f72:	f000 f863 	bl	800703c <_sbrk_r>
 8006f76:	6020      	str	r0, [r4, #0]
 8006f78:	4629      	mov	r1, r5
 8006f7a:	4630      	mov	r0, r6
 8006f7c:	f000 f85e 	bl	800703c <_sbrk_r>
 8006f80:	1c43      	adds	r3, r0, #1
 8006f82:	d124      	bne.n	8006fce <_malloc_r+0x92>
 8006f84:	230c      	movs	r3, #12
 8006f86:	6033      	str	r3, [r6, #0]
 8006f88:	4630      	mov	r0, r6
 8006f8a:	f000 f868 	bl	800705e <__malloc_unlock>
 8006f8e:	e7e4      	b.n	8006f5a <_malloc_r+0x1e>
 8006f90:	680b      	ldr	r3, [r1, #0]
 8006f92:	1b5b      	subs	r3, r3, r5
 8006f94:	d418      	bmi.n	8006fc8 <_malloc_r+0x8c>
 8006f96:	2b0b      	cmp	r3, #11
 8006f98:	d90f      	bls.n	8006fba <_malloc_r+0x7e>
 8006f9a:	600b      	str	r3, [r1, #0]
 8006f9c:	50cd      	str	r5, [r1, r3]
 8006f9e:	18cc      	adds	r4, r1, r3
 8006fa0:	4630      	mov	r0, r6
 8006fa2:	f000 f85c 	bl	800705e <__malloc_unlock>
 8006fa6:	f104 000b 	add.w	r0, r4, #11
 8006faa:	1d23      	adds	r3, r4, #4
 8006fac:	f020 0007 	bic.w	r0, r0, #7
 8006fb0:	1ac3      	subs	r3, r0, r3
 8006fb2:	d0d3      	beq.n	8006f5c <_malloc_r+0x20>
 8006fb4:	425a      	negs	r2, r3
 8006fb6:	50e2      	str	r2, [r4, r3]
 8006fb8:	e7d0      	b.n	8006f5c <_malloc_r+0x20>
 8006fba:	428c      	cmp	r4, r1
 8006fbc:	684b      	ldr	r3, [r1, #4]
 8006fbe:	bf16      	itet	ne
 8006fc0:	6063      	strne	r3, [r4, #4]
 8006fc2:	6013      	streq	r3, [r2, #0]
 8006fc4:	460c      	movne	r4, r1
 8006fc6:	e7eb      	b.n	8006fa0 <_malloc_r+0x64>
 8006fc8:	460c      	mov	r4, r1
 8006fca:	6849      	ldr	r1, [r1, #4]
 8006fcc:	e7cc      	b.n	8006f68 <_malloc_r+0x2c>
 8006fce:	1cc4      	adds	r4, r0, #3
 8006fd0:	f024 0403 	bic.w	r4, r4, #3
 8006fd4:	42a0      	cmp	r0, r4
 8006fd6:	d005      	beq.n	8006fe4 <_malloc_r+0xa8>
 8006fd8:	1a21      	subs	r1, r4, r0
 8006fda:	4630      	mov	r0, r6
 8006fdc:	f000 f82e 	bl	800703c <_sbrk_r>
 8006fe0:	3001      	adds	r0, #1
 8006fe2:	d0cf      	beq.n	8006f84 <_malloc_r+0x48>
 8006fe4:	6025      	str	r5, [r4, #0]
 8006fe6:	e7db      	b.n	8006fa0 <_malloc_r+0x64>
 8006fe8:	200000dc 	.word	0x200000dc
 8006fec:	200000e0 	.word	0x200000e0

08006ff0 <_realloc_r>:
 8006ff0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006ff2:	4607      	mov	r7, r0
 8006ff4:	4614      	mov	r4, r2
 8006ff6:	460e      	mov	r6, r1
 8006ff8:	b921      	cbnz	r1, 8007004 <_realloc_r+0x14>
 8006ffa:	4611      	mov	r1, r2
 8006ffc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8007000:	f7ff bf9c 	b.w	8006f3c <_malloc_r>
 8007004:	b922      	cbnz	r2, 8007010 <_realloc_r+0x20>
 8007006:	f7ff ff4b 	bl	8006ea0 <_free_r>
 800700a:	4625      	mov	r5, r4
 800700c:	4628      	mov	r0, r5
 800700e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007010:	f000 f826 	bl	8007060 <_malloc_usable_size_r>
 8007014:	42a0      	cmp	r0, r4
 8007016:	d20f      	bcs.n	8007038 <_realloc_r+0x48>
 8007018:	4621      	mov	r1, r4
 800701a:	4638      	mov	r0, r7
 800701c:	f7ff ff8e 	bl	8006f3c <_malloc_r>
 8007020:	4605      	mov	r5, r0
 8007022:	2800      	cmp	r0, #0
 8007024:	d0f2      	beq.n	800700c <_realloc_r+0x1c>
 8007026:	4631      	mov	r1, r6
 8007028:	4622      	mov	r2, r4
 800702a:	f7ff fc13 	bl	8006854 <memcpy>
 800702e:	4631      	mov	r1, r6
 8007030:	4638      	mov	r0, r7
 8007032:	f7ff ff35 	bl	8006ea0 <_free_r>
 8007036:	e7e9      	b.n	800700c <_realloc_r+0x1c>
 8007038:	4635      	mov	r5, r6
 800703a:	e7e7      	b.n	800700c <_realloc_r+0x1c>

0800703c <_sbrk_r>:
 800703c:	b538      	push	{r3, r4, r5, lr}
 800703e:	4c06      	ldr	r4, [pc, #24]	; (8007058 <_sbrk_r+0x1c>)
 8007040:	2300      	movs	r3, #0
 8007042:	4605      	mov	r5, r0
 8007044:	4608      	mov	r0, r1
 8007046:	6023      	str	r3, [r4, #0]
 8007048:	f7fb fcea 	bl	8002a20 <_sbrk>
 800704c:	1c43      	adds	r3, r0, #1
 800704e:	d102      	bne.n	8007056 <_sbrk_r+0x1a>
 8007050:	6823      	ldr	r3, [r4, #0]
 8007052:	b103      	cbz	r3, 8007056 <_sbrk_r+0x1a>
 8007054:	602b      	str	r3, [r5, #0]
 8007056:	bd38      	pop	{r3, r4, r5, pc}
 8007058:	200034b4 	.word	0x200034b4

0800705c <__malloc_lock>:
 800705c:	4770      	bx	lr

0800705e <__malloc_unlock>:
 800705e:	4770      	bx	lr

08007060 <_malloc_usable_size_r>:
 8007060:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007064:	1f18      	subs	r0, r3, #4
 8007066:	2b00      	cmp	r3, #0
 8007068:	bfbc      	itt	lt
 800706a:	580b      	ldrlt	r3, [r1, r0]
 800706c:	18c0      	addlt	r0, r0, r3
 800706e:	4770      	bx	lr

08007070 <pow>:
 8007070:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007074:	ed2d 8b04 	vpush	{d8-d9}
 8007078:	f8df 92d0 	ldr.w	r9, [pc, #720]	; 800734c <pow+0x2dc>
 800707c:	b08d      	sub	sp, #52	; 0x34
 800707e:	ec57 6b10 	vmov	r6, r7, d0
 8007082:	ec55 4b11 	vmov	r4, r5, d1
 8007086:	f000 f963 	bl	8007350 <__ieee754_pow>
 800708a:	f999 3000 	ldrsb.w	r3, [r9]
 800708e:	9300      	str	r3, [sp, #0]
 8007090:	3301      	adds	r3, #1
 8007092:	eeb0 8a40 	vmov.f32	s16, s0
 8007096:	eef0 8a60 	vmov.f32	s17, s1
 800709a:	46c8      	mov	r8, r9
 800709c:	d05f      	beq.n	800715e <pow+0xee>
 800709e:	4622      	mov	r2, r4
 80070a0:	462b      	mov	r3, r5
 80070a2:	4620      	mov	r0, r4
 80070a4:	4629      	mov	r1, r5
 80070a6:	f7f9 fd61 	bl	8000b6c <__aeabi_dcmpun>
 80070aa:	4683      	mov	fp, r0
 80070ac:	2800      	cmp	r0, #0
 80070ae:	d156      	bne.n	800715e <pow+0xee>
 80070b0:	4632      	mov	r2, r6
 80070b2:	463b      	mov	r3, r7
 80070b4:	4630      	mov	r0, r6
 80070b6:	4639      	mov	r1, r7
 80070b8:	f7f9 fd58 	bl	8000b6c <__aeabi_dcmpun>
 80070bc:	9001      	str	r0, [sp, #4]
 80070be:	b1e8      	cbz	r0, 80070fc <pow+0x8c>
 80070c0:	2200      	movs	r2, #0
 80070c2:	2300      	movs	r3, #0
 80070c4:	4620      	mov	r0, r4
 80070c6:	4629      	mov	r1, r5
 80070c8:	f7f9 fd1e 	bl	8000b08 <__aeabi_dcmpeq>
 80070cc:	2800      	cmp	r0, #0
 80070ce:	d046      	beq.n	800715e <pow+0xee>
 80070d0:	2301      	movs	r3, #1
 80070d2:	9302      	str	r3, [sp, #8]
 80070d4:	4b96      	ldr	r3, [pc, #600]	; (8007330 <pow+0x2c0>)
 80070d6:	9303      	str	r3, [sp, #12]
 80070d8:	4b96      	ldr	r3, [pc, #600]	; (8007334 <pow+0x2c4>)
 80070da:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80070de:	2200      	movs	r2, #0
 80070e0:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80070e4:	9b00      	ldr	r3, [sp, #0]
 80070e6:	2b02      	cmp	r3, #2
 80070e8:	e9cd 6704 	strd	r6, r7, [sp, #16]
 80070ec:	e9cd 4506 	strd	r4, r5, [sp, #24]
 80070f0:	d033      	beq.n	800715a <pow+0xea>
 80070f2:	a802      	add	r0, sp, #8
 80070f4:	f000 fefb 	bl	8007eee <matherr>
 80070f8:	bb48      	cbnz	r0, 800714e <pow+0xde>
 80070fa:	e05d      	b.n	80071b8 <pow+0x148>
 80070fc:	f04f 0a00 	mov.w	sl, #0
 8007100:	f04f 0b00 	mov.w	fp, #0
 8007104:	4652      	mov	r2, sl
 8007106:	465b      	mov	r3, fp
 8007108:	4630      	mov	r0, r6
 800710a:	4639      	mov	r1, r7
 800710c:	f7f9 fcfc 	bl	8000b08 <__aeabi_dcmpeq>
 8007110:	ec4b ab19 	vmov	d9, sl, fp
 8007114:	2800      	cmp	r0, #0
 8007116:	d054      	beq.n	80071c2 <pow+0x152>
 8007118:	4652      	mov	r2, sl
 800711a:	465b      	mov	r3, fp
 800711c:	4620      	mov	r0, r4
 800711e:	4629      	mov	r1, r5
 8007120:	f7f9 fcf2 	bl	8000b08 <__aeabi_dcmpeq>
 8007124:	4680      	mov	r8, r0
 8007126:	b318      	cbz	r0, 8007170 <pow+0x100>
 8007128:	2301      	movs	r3, #1
 800712a:	9302      	str	r3, [sp, #8]
 800712c:	4b80      	ldr	r3, [pc, #512]	; (8007330 <pow+0x2c0>)
 800712e:	9303      	str	r3, [sp, #12]
 8007130:	9b01      	ldr	r3, [sp, #4]
 8007132:	930a      	str	r3, [sp, #40]	; 0x28
 8007134:	9b00      	ldr	r3, [sp, #0]
 8007136:	e9cd 6704 	strd	r6, r7, [sp, #16]
 800713a:	e9cd 4506 	strd	r4, r5, [sp, #24]
 800713e:	e9cd ab08 	strd	sl, fp, [sp, #32]
 8007142:	2b00      	cmp	r3, #0
 8007144:	d0d5      	beq.n	80070f2 <pow+0x82>
 8007146:	4b7b      	ldr	r3, [pc, #492]	; (8007334 <pow+0x2c4>)
 8007148:	2200      	movs	r2, #0
 800714a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800714e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007150:	b11b      	cbz	r3, 800715a <pow+0xea>
 8007152:	f7ff fb55 	bl	8006800 <__errno>
 8007156:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007158:	6003      	str	r3, [r0, #0]
 800715a:	ed9d 8b08 	vldr	d8, [sp, #32]
 800715e:	eeb0 0a48 	vmov.f32	s0, s16
 8007162:	eef0 0a68 	vmov.f32	s1, s17
 8007166:	b00d      	add	sp, #52	; 0x34
 8007168:	ecbd 8b04 	vpop	{d8-d9}
 800716c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007170:	ec45 4b10 	vmov	d0, r4, r5
 8007174:	f000 feb3 	bl	8007ede <finite>
 8007178:	2800      	cmp	r0, #0
 800717a:	d0f0      	beq.n	800715e <pow+0xee>
 800717c:	4652      	mov	r2, sl
 800717e:	465b      	mov	r3, fp
 8007180:	4620      	mov	r0, r4
 8007182:	4629      	mov	r1, r5
 8007184:	f7f9 fcca 	bl	8000b1c <__aeabi_dcmplt>
 8007188:	2800      	cmp	r0, #0
 800718a:	d0e8      	beq.n	800715e <pow+0xee>
 800718c:	2301      	movs	r3, #1
 800718e:	9302      	str	r3, [sp, #8]
 8007190:	4b67      	ldr	r3, [pc, #412]	; (8007330 <pow+0x2c0>)
 8007192:	9303      	str	r3, [sp, #12]
 8007194:	f999 3000 	ldrsb.w	r3, [r9]
 8007198:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800719c:	e9cd 6704 	strd	r6, r7, [sp, #16]
 80071a0:	e9cd 4506 	strd	r4, r5, [sp, #24]
 80071a4:	b913      	cbnz	r3, 80071ac <pow+0x13c>
 80071a6:	e9cd ab08 	strd	sl, fp, [sp, #32]
 80071aa:	e7a2      	b.n	80070f2 <pow+0x82>
 80071ac:	4962      	ldr	r1, [pc, #392]	; (8007338 <pow+0x2c8>)
 80071ae:	2000      	movs	r0, #0
 80071b0:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80071b4:	2b02      	cmp	r3, #2
 80071b6:	d19c      	bne.n	80070f2 <pow+0x82>
 80071b8:	f7ff fb22 	bl	8006800 <__errno>
 80071bc:	2321      	movs	r3, #33	; 0x21
 80071be:	6003      	str	r3, [r0, #0]
 80071c0:	e7c5      	b.n	800714e <pow+0xde>
 80071c2:	eeb0 0a48 	vmov.f32	s0, s16
 80071c6:	eef0 0a68 	vmov.f32	s1, s17
 80071ca:	f000 fe88 	bl	8007ede <finite>
 80071ce:	9000      	str	r0, [sp, #0]
 80071d0:	2800      	cmp	r0, #0
 80071d2:	f040 8081 	bne.w	80072d8 <pow+0x268>
 80071d6:	ec47 6b10 	vmov	d0, r6, r7
 80071da:	f000 fe80 	bl	8007ede <finite>
 80071de:	2800      	cmp	r0, #0
 80071e0:	d07a      	beq.n	80072d8 <pow+0x268>
 80071e2:	ec45 4b10 	vmov	d0, r4, r5
 80071e6:	f000 fe7a 	bl	8007ede <finite>
 80071ea:	2800      	cmp	r0, #0
 80071ec:	d074      	beq.n	80072d8 <pow+0x268>
 80071ee:	ec53 2b18 	vmov	r2, r3, d8
 80071f2:	ee18 0a10 	vmov	r0, s16
 80071f6:	4619      	mov	r1, r3
 80071f8:	f7f9 fcb8 	bl	8000b6c <__aeabi_dcmpun>
 80071fc:	f999 9000 	ldrsb.w	r9, [r9]
 8007200:	4b4b      	ldr	r3, [pc, #300]	; (8007330 <pow+0x2c0>)
 8007202:	b1b0      	cbz	r0, 8007232 <pow+0x1c2>
 8007204:	2201      	movs	r2, #1
 8007206:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800720a:	9b00      	ldr	r3, [sp, #0]
 800720c:	930a      	str	r3, [sp, #40]	; 0x28
 800720e:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8007212:	e9cd 4506 	strd	r4, r5, [sp, #24]
 8007216:	f1b9 0f00 	cmp.w	r9, #0
 800721a:	d0c4      	beq.n	80071a6 <pow+0x136>
 800721c:	4652      	mov	r2, sl
 800721e:	465b      	mov	r3, fp
 8007220:	4650      	mov	r0, sl
 8007222:	4659      	mov	r1, fp
 8007224:	f7f9 fb32 	bl	800088c <__aeabi_ddiv>
 8007228:	f1b9 0f02 	cmp.w	r9, #2
 800722c:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8007230:	e7c1      	b.n	80071b6 <pow+0x146>
 8007232:	2203      	movs	r2, #3
 8007234:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8007238:	900a      	str	r0, [sp, #40]	; 0x28
 800723a:	4629      	mov	r1, r5
 800723c:	4620      	mov	r0, r4
 800723e:	2200      	movs	r2, #0
 8007240:	4b3e      	ldr	r3, [pc, #248]	; (800733c <pow+0x2cc>)
 8007242:	e9cd 4506 	strd	r4, r5, [sp, #24]
 8007246:	e9cd 6704 	strd	r6, r7, [sp, #16]
 800724a:	f7f9 f9f5 	bl	8000638 <__aeabi_dmul>
 800724e:	4604      	mov	r4, r0
 8007250:	460d      	mov	r5, r1
 8007252:	f1b9 0f00 	cmp.w	r9, #0
 8007256:	d124      	bne.n	80072a2 <pow+0x232>
 8007258:	4b39      	ldr	r3, [pc, #228]	; (8007340 <pow+0x2d0>)
 800725a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800725e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8007262:	4630      	mov	r0, r6
 8007264:	4652      	mov	r2, sl
 8007266:	465b      	mov	r3, fp
 8007268:	4639      	mov	r1, r7
 800726a:	f7f9 fc57 	bl	8000b1c <__aeabi_dcmplt>
 800726e:	2800      	cmp	r0, #0
 8007270:	d056      	beq.n	8007320 <pow+0x2b0>
 8007272:	ec45 4b10 	vmov	d0, r4, r5
 8007276:	f000 fe47 	bl	8007f08 <rint>
 800727a:	4622      	mov	r2, r4
 800727c:	462b      	mov	r3, r5
 800727e:	ec51 0b10 	vmov	r0, r1, d0
 8007282:	f7f9 fc41 	bl	8000b08 <__aeabi_dcmpeq>
 8007286:	b920      	cbnz	r0, 8007292 <pow+0x222>
 8007288:	4b2e      	ldr	r3, [pc, #184]	; (8007344 <pow+0x2d4>)
 800728a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800728e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8007292:	f998 3000 	ldrsb.w	r3, [r8]
 8007296:	2b02      	cmp	r3, #2
 8007298:	d142      	bne.n	8007320 <pow+0x2b0>
 800729a:	f7ff fab1 	bl	8006800 <__errno>
 800729e:	2322      	movs	r3, #34	; 0x22
 80072a0:	e78d      	b.n	80071be <pow+0x14e>
 80072a2:	4b29      	ldr	r3, [pc, #164]	; (8007348 <pow+0x2d8>)
 80072a4:	2200      	movs	r2, #0
 80072a6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80072aa:	4630      	mov	r0, r6
 80072ac:	4652      	mov	r2, sl
 80072ae:	465b      	mov	r3, fp
 80072b0:	4639      	mov	r1, r7
 80072b2:	f7f9 fc33 	bl	8000b1c <__aeabi_dcmplt>
 80072b6:	2800      	cmp	r0, #0
 80072b8:	d0eb      	beq.n	8007292 <pow+0x222>
 80072ba:	ec45 4b10 	vmov	d0, r4, r5
 80072be:	f000 fe23 	bl	8007f08 <rint>
 80072c2:	4622      	mov	r2, r4
 80072c4:	462b      	mov	r3, r5
 80072c6:	ec51 0b10 	vmov	r0, r1, d0
 80072ca:	f7f9 fc1d 	bl	8000b08 <__aeabi_dcmpeq>
 80072ce:	2800      	cmp	r0, #0
 80072d0:	d1df      	bne.n	8007292 <pow+0x222>
 80072d2:	2200      	movs	r2, #0
 80072d4:	4b18      	ldr	r3, [pc, #96]	; (8007338 <pow+0x2c8>)
 80072d6:	e7da      	b.n	800728e <pow+0x21e>
 80072d8:	2200      	movs	r2, #0
 80072da:	2300      	movs	r3, #0
 80072dc:	ec51 0b18 	vmov	r0, r1, d8
 80072e0:	f7f9 fc12 	bl	8000b08 <__aeabi_dcmpeq>
 80072e4:	2800      	cmp	r0, #0
 80072e6:	f43f af3a 	beq.w	800715e <pow+0xee>
 80072ea:	ec47 6b10 	vmov	d0, r6, r7
 80072ee:	f000 fdf6 	bl	8007ede <finite>
 80072f2:	2800      	cmp	r0, #0
 80072f4:	f43f af33 	beq.w	800715e <pow+0xee>
 80072f8:	ec45 4b10 	vmov	d0, r4, r5
 80072fc:	f000 fdef 	bl	8007ede <finite>
 8007300:	2800      	cmp	r0, #0
 8007302:	f43f af2c 	beq.w	800715e <pow+0xee>
 8007306:	2304      	movs	r3, #4
 8007308:	9302      	str	r3, [sp, #8]
 800730a:	4b09      	ldr	r3, [pc, #36]	; (8007330 <pow+0x2c0>)
 800730c:	9303      	str	r3, [sp, #12]
 800730e:	2300      	movs	r3, #0
 8007310:	930a      	str	r3, [sp, #40]	; 0x28
 8007312:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8007316:	e9cd 4506 	strd	r4, r5, [sp, #24]
 800731a:	ed8d 9b08 	vstr	d9, [sp, #32]
 800731e:	e7b8      	b.n	8007292 <pow+0x222>
 8007320:	a802      	add	r0, sp, #8
 8007322:	f000 fde4 	bl	8007eee <matherr>
 8007326:	2800      	cmp	r0, #0
 8007328:	f47f af11 	bne.w	800714e <pow+0xde>
 800732c:	e7b5      	b.n	800729a <pow+0x22a>
 800732e:	bf00      	nop
 8007330:	080085e7 	.word	0x080085e7
 8007334:	3ff00000 	.word	0x3ff00000
 8007338:	fff00000 	.word	0xfff00000
 800733c:	3fe00000 	.word	0x3fe00000
 8007340:	47efffff 	.word	0x47efffff
 8007344:	c7efffff 	.word	0xc7efffff
 8007348:	7ff00000 	.word	0x7ff00000
 800734c:	20000084 	.word	0x20000084

08007350 <__ieee754_pow>:
 8007350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007354:	b091      	sub	sp, #68	; 0x44
 8007356:	ed8d 1b00 	vstr	d1, [sp]
 800735a:	e9dd 2900 	ldrd	r2, r9, [sp]
 800735e:	f029 4800 	bic.w	r8, r9, #2147483648	; 0x80000000
 8007362:	ea58 0302 	orrs.w	r3, r8, r2
 8007366:	ec57 6b10 	vmov	r6, r7, d0
 800736a:	f000 84be 	beq.w	8007cea <__ieee754_pow+0x99a>
 800736e:	4b7a      	ldr	r3, [pc, #488]	; (8007558 <__ieee754_pow+0x208>)
 8007370:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
 8007374:	429c      	cmp	r4, r3
 8007376:	463d      	mov	r5, r7
 8007378:	ee10 aa10 	vmov	sl, s0
 800737c:	dc09      	bgt.n	8007392 <__ieee754_pow+0x42>
 800737e:	d103      	bne.n	8007388 <__ieee754_pow+0x38>
 8007380:	b93e      	cbnz	r6, 8007392 <__ieee754_pow+0x42>
 8007382:	45a0      	cmp	r8, r4
 8007384:	dc0d      	bgt.n	80073a2 <__ieee754_pow+0x52>
 8007386:	e001      	b.n	800738c <__ieee754_pow+0x3c>
 8007388:	4598      	cmp	r8, r3
 800738a:	dc02      	bgt.n	8007392 <__ieee754_pow+0x42>
 800738c:	4598      	cmp	r8, r3
 800738e:	d10e      	bne.n	80073ae <__ieee754_pow+0x5e>
 8007390:	b16a      	cbz	r2, 80073ae <__ieee754_pow+0x5e>
 8007392:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8007396:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 800739a:	ea54 030a 	orrs.w	r3, r4, sl
 800739e:	f000 84a4 	beq.w	8007cea <__ieee754_pow+0x99a>
 80073a2:	486e      	ldr	r0, [pc, #440]	; (800755c <__ieee754_pow+0x20c>)
 80073a4:	b011      	add	sp, #68	; 0x44
 80073a6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80073aa:	f000 bda5 	b.w	8007ef8 <nan>
 80073ae:	2d00      	cmp	r5, #0
 80073b0:	da53      	bge.n	800745a <__ieee754_pow+0x10a>
 80073b2:	4b6b      	ldr	r3, [pc, #428]	; (8007560 <__ieee754_pow+0x210>)
 80073b4:	4598      	cmp	r8, r3
 80073b6:	dc4d      	bgt.n	8007454 <__ieee754_pow+0x104>
 80073b8:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 80073bc:	4598      	cmp	r8, r3
 80073be:	dd4c      	ble.n	800745a <__ieee754_pow+0x10a>
 80073c0:	ea4f 5328 	mov.w	r3, r8, asr #20
 80073c4:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 80073c8:	2b14      	cmp	r3, #20
 80073ca:	dd26      	ble.n	800741a <__ieee754_pow+0xca>
 80073cc:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 80073d0:	fa22 f103 	lsr.w	r1, r2, r3
 80073d4:	fa01 f303 	lsl.w	r3, r1, r3
 80073d8:	4293      	cmp	r3, r2
 80073da:	d13e      	bne.n	800745a <__ieee754_pow+0x10a>
 80073dc:	f001 0101 	and.w	r1, r1, #1
 80073e0:	f1c1 0b02 	rsb	fp, r1, #2
 80073e4:	2a00      	cmp	r2, #0
 80073e6:	d15b      	bne.n	80074a0 <__ieee754_pow+0x150>
 80073e8:	4b5b      	ldr	r3, [pc, #364]	; (8007558 <__ieee754_pow+0x208>)
 80073ea:	4598      	cmp	r8, r3
 80073ec:	d124      	bne.n	8007438 <__ieee754_pow+0xe8>
 80073ee:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 80073f2:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 80073f6:	ea53 030a 	orrs.w	r3, r3, sl
 80073fa:	f000 8476 	beq.w	8007cea <__ieee754_pow+0x99a>
 80073fe:	4b59      	ldr	r3, [pc, #356]	; (8007564 <__ieee754_pow+0x214>)
 8007400:	429c      	cmp	r4, r3
 8007402:	dd2d      	ble.n	8007460 <__ieee754_pow+0x110>
 8007404:	f1b9 0f00 	cmp.w	r9, #0
 8007408:	f280 8473 	bge.w	8007cf2 <__ieee754_pow+0x9a2>
 800740c:	2000      	movs	r0, #0
 800740e:	2100      	movs	r1, #0
 8007410:	ec41 0b10 	vmov	d0, r0, r1
 8007414:	b011      	add	sp, #68	; 0x44
 8007416:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800741a:	2a00      	cmp	r2, #0
 800741c:	d13e      	bne.n	800749c <__ieee754_pow+0x14c>
 800741e:	f1c3 0314 	rsb	r3, r3, #20
 8007422:	fa48 f103 	asr.w	r1, r8, r3
 8007426:	fa01 f303 	lsl.w	r3, r1, r3
 800742a:	4543      	cmp	r3, r8
 800742c:	f040 8469 	bne.w	8007d02 <__ieee754_pow+0x9b2>
 8007430:	f001 0101 	and.w	r1, r1, #1
 8007434:	f1c1 0b02 	rsb	fp, r1, #2
 8007438:	4b4b      	ldr	r3, [pc, #300]	; (8007568 <__ieee754_pow+0x218>)
 800743a:	4598      	cmp	r8, r3
 800743c:	d118      	bne.n	8007470 <__ieee754_pow+0x120>
 800743e:	f1b9 0f00 	cmp.w	r9, #0
 8007442:	f280 845a 	bge.w	8007cfa <__ieee754_pow+0x9aa>
 8007446:	4948      	ldr	r1, [pc, #288]	; (8007568 <__ieee754_pow+0x218>)
 8007448:	4632      	mov	r2, r6
 800744a:	463b      	mov	r3, r7
 800744c:	2000      	movs	r0, #0
 800744e:	f7f9 fa1d 	bl	800088c <__aeabi_ddiv>
 8007452:	e7dd      	b.n	8007410 <__ieee754_pow+0xc0>
 8007454:	f04f 0b02 	mov.w	fp, #2
 8007458:	e7c4      	b.n	80073e4 <__ieee754_pow+0x94>
 800745a:	f04f 0b00 	mov.w	fp, #0
 800745e:	e7c1      	b.n	80073e4 <__ieee754_pow+0x94>
 8007460:	f1b9 0f00 	cmp.w	r9, #0
 8007464:	dad2      	bge.n	800740c <__ieee754_pow+0xbc>
 8007466:	e9dd 0300 	ldrd	r0, r3, [sp]
 800746a:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800746e:	e7cf      	b.n	8007410 <__ieee754_pow+0xc0>
 8007470:	f1b9 4f80 	cmp.w	r9, #1073741824	; 0x40000000
 8007474:	d106      	bne.n	8007484 <__ieee754_pow+0x134>
 8007476:	4632      	mov	r2, r6
 8007478:	463b      	mov	r3, r7
 800747a:	4610      	mov	r0, r2
 800747c:	4619      	mov	r1, r3
 800747e:	f7f9 f8db 	bl	8000638 <__aeabi_dmul>
 8007482:	e7c5      	b.n	8007410 <__ieee754_pow+0xc0>
 8007484:	4b39      	ldr	r3, [pc, #228]	; (800756c <__ieee754_pow+0x21c>)
 8007486:	4599      	cmp	r9, r3
 8007488:	d10a      	bne.n	80074a0 <__ieee754_pow+0x150>
 800748a:	2d00      	cmp	r5, #0
 800748c:	db08      	blt.n	80074a0 <__ieee754_pow+0x150>
 800748e:	ec47 6b10 	vmov	d0, r6, r7
 8007492:	b011      	add	sp, #68	; 0x44
 8007494:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007498:	f000 bc68 	b.w	8007d6c <__ieee754_sqrt>
 800749c:	f04f 0b00 	mov.w	fp, #0
 80074a0:	ec47 6b10 	vmov	d0, r6, r7
 80074a4:	f000 fd12 	bl	8007ecc <fabs>
 80074a8:	ec51 0b10 	vmov	r0, r1, d0
 80074ac:	f1ba 0f00 	cmp.w	sl, #0
 80074b0:	d127      	bne.n	8007502 <__ieee754_pow+0x1b2>
 80074b2:	b124      	cbz	r4, 80074be <__ieee754_pow+0x16e>
 80074b4:	4b2c      	ldr	r3, [pc, #176]	; (8007568 <__ieee754_pow+0x218>)
 80074b6:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 80074ba:	429a      	cmp	r2, r3
 80074bc:	d121      	bne.n	8007502 <__ieee754_pow+0x1b2>
 80074be:	f1b9 0f00 	cmp.w	r9, #0
 80074c2:	da05      	bge.n	80074d0 <__ieee754_pow+0x180>
 80074c4:	4602      	mov	r2, r0
 80074c6:	460b      	mov	r3, r1
 80074c8:	2000      	movs	r0, #0
 80074ca:	4927      	ldr	r1, [pc, #156]	; (8007568 <__ieee754_pow+0x218>)
 80074cc:	f7f9 f9de 	bl	800088c <__aeabi_ddiv>
 80074d0:	2d00      	cmp	r5, #0
 80074d2:	da9d      	bge.n	8007410 <__ieee754_pow+0xc0>
 80074d4:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 80074d8:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 80074dc:	ea54 030b 	orrs.w	r3, r4, fp
 80074e0:	d108      	bne.n	80074f4 <__ieee754_pow+0x1a4>
 80074e2:	4602      	mov	r2, r0
 80074e4:	460b      	mov	r3, r1
 80074e6:	4610      	mov	r0, r2
 80074e8:	4619      	mov	r1, r3
 80074ea:	f7f8 feed 	bl	80002c8 <__aeabi_dsub>
 80074ee:	4602      	mov	r2, r0
 80074f0:	460b      	mov	r3, r1
 80074f2:	e7ac      	b.n	800744e <__ieee754_pow+0xfe>
 80074f4:	f1bb 0f01 	cmp.w	fp, #1
 80074f8:	d18a      	bne.n	8007410 <__ieee754_pow+0xc0>
 80074fa:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80074fe:	4619      	mov	r1, r3
 8007500:	e786      	b.n	8007410 <__ieee754_pow+0xc0>
 8007502:	0fed      	lsrs	r5, r5, #31
 8007504:	1e6b      	subs	r3, r5, #1
 8007506:	930d      	str	r3, [sp, #52]	; 0x34
 8007508:	ea5b 0303 	orrs.w	r3, fp, r3
 800750c:	d102      	bne.n	8007514 <__ieee754_pow+0x1c4>
 800750e:	4632      	mov	r2, r6
 8007510:	463b      	mov	r3, r7
 8007512:	e7e8      	b.n	80074e6 <__ieee754_pow+0x196>
 8007514:	4b16      	ldr	r3, [pc, #88]	; (8007570 <__ieee754_pow+0x220>)
 8007516:	4598      	cmp	r8, r3
 8007518:	f340 80fe 	ble.w	8007718 <__ieee754_pow+0x3c8>
 800751c:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 8007520:	4598      	cmp	r8, r3
 8007522:	dd0a      	ble.n	800753a <__ieee754_pow+0x1ea>
 8007524:	4b0f      	ldr	r3, [pc, #60]	; (8007564 <__ieee754_pow+0x214>)
 8007526:	429c      	cmp	r4, r3
 8007528:	dc0d      	bgt.n	8007546 <__ieee754_pow+0x1f6>
 800752a:	f1b9 0f00 	cmp.w	r9, #0
 800752e:	f6bf af6d 	bge.w	800740c <__ieee754_pow+0xbc>
 8007532:	a307      	add	r3, pc, #28	; (adr r3, 8007550 <__ieee754_pow+0x200>)
 8007534:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007538:	e79f      	b.n	800747a <__ieee754_pow+0x12a>
 800753a:	4b0e      	ldr	r3, [pc, #56]	; (8007574 <__ieee754_pow+0x224>)
 800753c:	429c      	cmp	r4, r3
 800753e:	ddf4      	ble.n	800752a <__ieee754_pow+0x1da>
 8007540:	4b09      	ldr	r3, [pc, #36]	; (8007568 <__ieee754_pow+0x218>)
 8007542:	429c      	cmp	r4, r3
 8007544:	dd18      	ble.n	8007578 <__ieee754_pow+0x228>
 8007546:	f1b9 0f00 	cmp.w	r9, #0
 800754a:	dcf2      	bgt.n	8007532 <__ieee754_pow+0x1e2>
 800754c:	e75e      	b.n	800740c <__ieee754_pow+0xbc>
 800754e:	bf00      	nop
 8007550:	8800759c 	.word	0x8800759c
 8007554:	7e37e43c 	.word	0x7e37e43c
 8007558:	7ff00000 	.word	0x7ff00000
 800755c:	080085b9 	.word	0x080085b9
 8007560:	433fffff 	.word	0x433fffff
 8007564:	3fefffff 	.word	0x3fefffff
 8007568:	3ff00000 	.word	0x3ff00000
 800756c:	3fe00000 	.word	0x3fe00000
 8007570:	41e00000 	.word	0x41e00000
 8007574:	3feffffe 	.word	0x3feffffe
 8007578:	2200      	movs	r2, #0
 800757a:	4b63      	ldr	r3, [pc, #396]	; (8007708 <__ieee754_pow+0x3b8>)
 800757c:	f7f8 fea4 	bl	80002c8 <__aeabi_dsub>
 8007580:	a355      	add	r3, pc, #340	; (adr r3, 80076d8 <__ieee754_pow+0x388>)
 8007582:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007586:	4604      	mov	r4, r0
 8007588:	460d      	mov	r5, r1
 800758a:	f7f9 f855 	bl	8000638 <__aeabi_dmul>
 800758e:	a354      	add	r3, pc, #336	; (adr r3, 80076e0 <__ieee754_pow+0x390>)
 8007590:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007594:	4606      	mov	r6, r0
 8007596:	460f      	mov	r7, r1
 8007598:	4620      	mov	r0, r4
 800759a:	4629      	mov	r1, r5
 800759c:	f7f9 f84c 	bl	8000638 <__aeabi_dmul>
 80075a0:	2200      	movs	r2, #0
 80075a2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80075a6:	4b59      	ldr	r3, [pc, #356]	; (800770c <__ieee754_pow+0x3bc>)
 80075a8:	4620      	mov	r0, r4
 80075aa:	4629      	mov	r1, r5
 80075ac:	f7f9 f844 	bl	8000638 <__aeabi_dmul>
 80075b0:	4602      	mov	r2, r0
 80075b2:	460b      	mov	r3, r1
 80075b4:	a14c      	add	r1, pc, #304	; (adr r1, 80076e8 <__ieee754_pow+0x398>)
 80075b6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80075ba:	f7f8 fe85 	bl	80002c8 <__aeabi_dsub>
 80075be:	4622      	mov	r2, r4
 80075c0:	462b      	mov	r3, r5
 80075c2:	f7f9 f839 	bl	8000638 <__aeabi_dmul>
 80075c6:	4602      	mov	r2, r0
 80075c8:	460b      	mov	r3, r1
 80075ca:	2000      	movs	r0, #0
 80075cc:	4950      	ldr	r1, [pc, #320]	; (8007710 <__ieee754_pow+0x3c0>)
 80075ce:	f7f8 fe7b 	bl	80002c8 <__aeabi_dsub>
 80075d2:	4622      	mov	r2, r4
 80075d4:	462b      	mov	r3, r5
 80075d6:	4680      	mov	r8, r0
 80075d8:	4689      	mov	r9, r1
 80075da:	4620      	mov	r0, r4
 80075dc:	4629      	mov	r1, r5
 80075de:	f7f9 f82b 	bl	8000638 <__aeabi_dmul>
 80075e2:	4602      	mov	r2, r0
 80075e4:	460b      	mov	r3, r1
 80075e6:	4640      	mov	r0, r8
 80075e8:	4649      	mov	r1, r9
 80075ea:	f7f9 f825 	bl	8000638 <__aeabi_dmul>
 80075ee:	a340      	add	r3, pc, #256	; (adr r3, 80076f0 <__ieee754_pow+0x3a0>)
 80075f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80075f4:	f7f9 f820 	bl	8000638 <__aeabi_dmul>
 80075f8:	4602      	mov	r2, r0
 80075fa:	460b      	mov	r3, r1
 80075fc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007600:	f7f8 fe62 	bl	80002c8 <__aeabi_dsub>
 8007604:	4602      	mov	r2, r0
 8007606:	460b      	mov	r3, r1
 8007608:	4604      	mov	r4, r0
 800760a:	460d      	mov	r5, r1
 800760c:	4630      	mov	r0, r6
 800760e:	4639      	mov	r1, r7
 8007610:	f7f8 fe5c 	bl	80002cc <__adddf3>
 8007614:	2000      	movs	r0, #0
 8007616:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800761a:	4632      	mov	r2, r6
 800761c:	463b      	mov	r3, r7
 800761e:	f7f8 fe53 	bl	80002c8 <__aeabi_dsub>
 8007622:	4602      	mov	r2, r0
 8007624:	460b      	mov	r3, r1
 8007626:	4620      	mov	r0, r4
 8007628:	4629      	mov	r1, r5
 800762a:	f7f8 fe4d 	bl	80002c8 <__aeabi_dsub>
 800762e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8007630:	f10b 33ff 	add.w	r3, fp, #4294967295
 8007634:	4313      	orrs	r3, r2
 8007636:	4606      	mov	r6, r0
 8007638:	460f      	mov	r7, r1
 800763a:	f040 81eb 	bne.w	8007a14 <__ieee754_pow+0x6c4>
 800763e:	ed9f 7b2e 	vldr	d7, [pc, #184]	; 80076f8 <__ieee754_pow+0x3a8>
 8007642:	e9dd 4500 	ldrd	r4, r5, [sp]
 8007646:	2400      	movs	r4, #0
 8007648:	4622      	mov	r2, r4
 800764a:	462b      	mov	r3, r5
 800764c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007650:	ed8d 7b02 	vstr	d7, [sp, #8]
 8007654:	f7f8 fe38 	bl	80002c8 <__aeabi_dsub>
 8007658:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800765c:	f7f8 ffec 	bl	8000638 <__aeabi_dmul>
 8007660:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007664:	4680      	mov	r8, r0
 8007666:	4689      	mov	r9, r1
 8007668:	4630      	mov	r0, r6
 800766a:	4639      	mov	r1, r7
 800766c:	f7f8 ffe4 	bl	8000638 <__aeabi_dmul>
 8007670:	4602      	mov	r2, r0
 8007672:	460b      	mov	r3, r1
 8007674:	4640      	mov	r0, r8
 8007676:	4649      	mov	r1, r9
 8007678:	f7f8 fe28 	bl	80002cc <__adddf3>
 800767c:	4622      	mov	r2, r4
 800767e:	462b      	mov	r3, r5
 8007680:	4680      	mov	r8, r0
 8007682:	4689      	mov	r9, r1
 8007684:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8007688:	f7f8 ffd6 	bl	8000638 <__aeabi_dmul>
 800768c:	460b      	mov	r3, r1
 800768e:	4604      	mov	r4, r0
 8007690:	460d      	mov	r5, r1
 8007692:	4602      	mov	r2, r0
 8007694:	4649      	mov	r1, r9
 8007696:	4640      	mov	r0, r8
 8007698:	e9cd 4500 	strd	r4, r5, [sp]
 800769c:	f7f8 fe16 	bl	80002cc <__adddf3>
 80076a0:	4b1c      	ldr	r3, [pc, #112]	; (8007714 <__ieee754_pow+0x3c4>)
 80076a2:	4299      	cmp	r1, r3
 80076a4:	4606      	mov	r6, r0
 80076a6:	460f      	mov	r7, r1
 80076a8:	468b      	mov	fp, r1
 80076aa:	f340 82f7 	ble.w	8007c9c <__ieee754_pow+0x94c>
 80076ae:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 80076b2:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 80076b6:	4303      	orrs	r3, r0
 80076b8:	f000 81ea 	beq.w	8007a90 <__ieee754_pow+0x740>
 80076bc:	a310      	add	r3, pc, #64	; (adr r3, 8007700 <__ieee754_pow+0x3b0>)
 80076be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076c2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80076c6:	f7f8 ffb7 	bl	8000638 <__aeabi_dmul>
 80076ca:	a30d      	add	r3, pc, #52	; (adr r3, 8007700 <__ieee754_pow+0x3b0>)
 80076cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076d0:	e6d5      	b.n	800747e <__ieee754_pow+0x12e>
 80076d2:	bf00      	nop
 80076d4:	f3af 8000 	nop.w
 80076d8:	60000000 	.word	0x60000000
 80076dc:	3ff71547 	.word	0x3ff71547
 80076e0:	f85ddf44 	.word	0xf85ddf44
 80076e4:	3e54ae0b 	.word	0x3e54ae0b
 80076e8:	55555555 	.word	0x55555555
 80076ec:	3fd55555 	.word	0x3fd55555
 80076f0:	652b82fe 	.word	0x652b82fe
 80076f4:	3ff71547 	.word	0x3ff71547
 80076f8:	00000000 	.word	0x00000000
 80076fc:	bff00000 	.word	0xbff00000
 8007700:	8800759c 	.word	0x8800759c
 8007704:	7e37e43c 	.word	0x7e37e43c
 8007708:	3ff00000 	.word	0x3ff00000
 800770c:	3fd00000 	.word	0x3fd00000
 8007710:	3fe00000 	.word	0x3fe00000
 8007714:	408fffff 	.word	0x408fffff
 8007718:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 800771c:	f04f 0200 	mov.w	r2, #0
 8007720:	da05      	bge.n	800772e <__ieee754_pow+0x3de>
 8007722:	4bd3      	ldr	r3, [pc, #844]	; (8007a70 <__ieee754_pow+0x720>)
 8007724:	f7f8 ff88 	bl	8000638 <__aeabi_dmul>
 8007728:	f06f 0234 	mvn.w	r2, #52	; 0x34
 800772c:	460c      	mov	r4, r1
 800772e:	1523      	asrs	r3, r4, #20
 8007730:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8007734:	4413      	add	r3, r2
 8007736:	9309      	str	r3, [sp, #36]	; 0x24
 8007738:	4bce      	ldr	r3, [pc, #824]	; (8007a74 <__ieee754_pow+0x724>)
 800773a:	f3c4 0413 	ubfx	r4, r4, #0, #20
 800773e:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 8007742:	429c      	cmp	r4, r3
 8007744:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8007748:	dd08      	ble.n	800775c <__ieee754_pow+0x40c>
 800774a:	4bcb      	ldr	r3, [pc, #812]	; (8007a78 <__ieee754_pow+0x728>)
 800774c:	429c      	cmp	r4, r3
 800774e:	f340 815e 	ble.w	8007a0e <__ieee754_pow+0x6be>
 8007752:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007754:	3301      	adds	r3, #1
 8007756:	9309      	str	r3, [sp, #36]	; 0x24
 8007758:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 800775c:	f04f 0a00 	mov.w	sl, #0
 8007760:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8007764:	930c      	str	r3, [sp, #48]	; 0x30
 8007766:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007768:	4bc4      	ldr	r3, [pc, #784]	; (8007a7c <__ieee754_pow+0x72c>)
 800776a:	4413      	add	r3, r2
 800776c:	ed93 7b00 	vldr	d7, [r3]
 8007770:	4629      	mov	r1, r5
 8007772:	ec53 2b17 	vmov	r2, r3, d7
 8007776:	ed8d 7b06 	vstr	d7, [sp, #24]
 800777a:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800777e:	f7f8 fda3 	bl	80002c8 <__aeabi_dsub>
 8007782:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8007786:	4606      	mov	r6, r0
 8007788:	460f      	mov	r7, r1
 800778a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800778e:	f7f8 fd9d 	bl	80002cc <__adddf3>
 8007792:	4602      	mov	r2, r0
 8007794:	460b      	mov	r3, r1
 8007796:	2000      	movs	r0, #0
 8007798:	49b9      	ldr	r1, [pc, #740]	; (8007a80 <__ieee754_pow+0x730>)
 800779a:	f7f9 f877 	bl	800088c <__aeabi_ddiv>
 800779e:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 80077a2:	4602      	mov	r2, r0
 80077a4:	460b      	mov	r3, r1
 80077a6:	4630      	mov	r0, r6
 80077a8:	4639      	mov	r1, r7
 80077aa:	f7f8 ff45 	bl	8000638 <__aeabi_dmul>
 80077ae:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80077b2:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 80077b6:	e9cd 3402 	strd	r3, r4, [sp, #8]
 80077ba:	2300      	movs	r3, #0
 80077bc:	9302      	str	r3, [sp, #8]
 80077be:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 80077c2:	106d      	asrs	r5, r5, #1
 80077c4:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 80077c8:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 80077cc:	2200      	movs	r2, #0
 80077ce:	eb05 438a 	add.w	r3, r5, sl, lsl #18
 80077d2:	4640      	mov	r0, r8
 80077d4:	4649      	mov	r1, r9
 80077d6:	4614      	mov	r4, r2
 80077d8:	461d      	mov	r5, r3
 80077da:	f7f8 ff2d 	bl	8000638 <__aeabi_dmul>
 80077de:	4602      	mov	r2, r0
 80077e0:	460b      	mov	r3, r1
 80077e2:	4630      	mov	r0, r6
 80077e4:	4639      	mov	r1, r7
 80077e6:	f7f8 fd6f 	bl	80002c8 <__aeabi_dsub>
 80077ea:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80077ee:	4606      	mov	r6, r0
 80077f0:	460f      	mov	r7, r1
 80077f2:	4620      	mov	r0, r4
 80077f4:	4629      	mov	r1, r5
 80077f6:	f7f8 fd67 	bl	80002c8 <__aeabi_dsub>
 80077fa:	4602      	mov	r2, r0
 80077fc:	460b      	mov	r3, r1
 80077fe:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8007802:	f7f8 fd61 	bl	80002c8 <__aeabi_dsub>
 8007806:	4642      	mov	r2, r8
 8007808:	464b      	mov	r3, r9
 800780a:	f7f8 ff15 	bl	8000638 <__aeabi_dmul>
 800780e:	4602      	mov	r2, r0
 8007810:	460b      	mov	r3, r1
 8007812:	4630      	mov	r0, r6
 8007814:	4639      	mov	r1, r7
 8007816:	f7f8 fd57 	bl	80002c8 <__aeabi_dsub>
 800781a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 800781e:	f7f8 ff0b 	bl	8000638 <__aeabi_dmul>
 8007822:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007826:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800782a:	4610      	mov	r0, r2
 800782c:	4619      	mov	r1, r3
 800782e:	f7f8 ff03 	bl	8000638 <__aeabi_dmul>
 8007832:	a37b      	add	r3, pc, #492	; (adr r3, 8007a20 <__ieee754_pow+0x6d0>)
 8007834:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007838:	4604      	mov	r4, r0
 800783a:	460d      	mov	r5, r1
 800783c:	f7f8 fefc 	bl	8000638 <__aeabi_dmul>
 8007840:	a379      	add	r3, pc, #484	; (adr r3, 8007a28 <__ieee754_pow+0x6d8>)
 8007842:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007846:	f7f8 fd41 	bl	80002cc <__adddf3>
 800784a:	4622      	mov	r2, r4
 800784c:	462b      	mov	r3, r5
 800784e:	f7f8 fef3 	bl	8000638 <__aeabi_dmul>
 8007852:	a377      	add	r3, pc, #476	; (adr r3, 8007a30 <__ieee754_pow+0x6e0>)
 8007854:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007858:	f7f8 fd38 	bl	80002cc <__adddf3>
 800785c:	4622      	mov	r2, r4
 800785e:	462b      	mov	r3, r5
 8007860:	f7f8 feea 	bl	8000638 <__aeabi_dmul>
 8007864:	a374      	add	r3, pc, #464	; (adr r3, 8007a38 <__ieee754_pow+0x6e8>)
 8007866:	e9d3 2300 	ldrd	r2, r3, [r3]
 800786a:	f7f8 fd2f 	bl	80002cc <__adddf3>
 800786e:	4622      	mov	r2, r4
 8007870:	462b      	mov	r3, r5
 8007872:	f7f8 fee1 	bl	8000638 <__aeabi_dmul>
 8007876:	a372      	add	r3, pc, #456	; (adr r3, 8007a40 <__ieee754_pow+0x6f0>)
 8007878:	e9d3 2300 	ldrd	r2, r3, [r3]
 800787c:	f7f8 fd26 	bl	80002cc <__adddf3>
 8007880:	4622      	mov	r2, r4
 8007882:	462b      	mov	r3, r5
 8007884:	f7f8 fed8 	bl	8000638 <__aeabi_dmul>
 8007888:	a36f      	add	r3, pc, #444	; (adr r3, 8007a48 <__ieee754_pow+0x6f8>)
 800788a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800788e:	f7f8 fd1d 	bl	80002cc <__adddf3>
 8007892:	4622      	mov	r2, r4
 8007894:	4606      	mov	r6, r0
 8007896:	460f      	mov	r7, r1
 8007898:	462b      	mov	r3, r5
 800789a:	4620      	mov	r0, r4
 800789c:	4629      	mov	r1, r5
 800789e:	f7f8 fecb 	bl	8000638 <__aeabi_dmul>
 80078a2:	4602      	mov	r2, r0
 80078a4:	460b      	mov	r3, r1
 80078a6:	4630      	mov	r0, r6
 80078a8:	4639      	mov	r1, r7
 80078aa:	f7f8 fec5 	bl	8000638 <__aeabi_dmul>
 80078ae:	4642      	mov	r2, r8
 80078b0:	4604      	mov	r4, r0
 80078b2:	460d      	mov	r5, r1
 80078b4:	464b      	mov	r3, r9
 80078b6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80078ba:	f7f8 fd07 	bl	80002cc <__adddf3>
 80078be:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80078c2:	f7f8 feb9 	bl	8000638 <__aeabi_dmul>
 80078c6:	4622      	mov	r2, r4
 80078c8:	462b      	mov	r3, r5
 80078ca:	f7f8 fcff 	bl	80002cc <__adddf3>
 80078ce:	4642      	mov	r2, r8
 80078d0:	4606      	mov	r6, r0
 80078d2:	460f      	mov	r7, r1
 80078d4:	464b      	mov	r3, r9
 80078d6:	4640      	mov	r0, r8
 80078d8:	4649      	mov	r1, r9
 80078da:	f7f8 fead 	bl	8000638 <__aeabi_dmul>
 80078de:	2200      	movs	r2, #0
 80078e0:	4b68      	ldr	r3, [pc, #416]	; (8007a84 <__ieee754_pow+0x734>)
 80078e2:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80078e6:	f7f8 fcf1 	bl	80002cc <__adddf3>
 80078ea:	4632      	mov	r2, r6
 80078ec:	463b      	mov	r3, r7
 80078ee:	f7f8 fced 	bl	80002cc <__adddf3>
 80078f2:	9802      	ldr	r0, [sp, #8]
 80078f4:	460d      	mov	r5, r1
 80078f6:	4604      	mov	r4, r0
 80078f8:	4602      	mov	r2, r0
 80078fa:	460b      	mov	r3, r1
 80078fc:	4640      	mov	r0, r8
 80078fe:	4649      	mov	r1, r9
 8007900:	f7f8 fe9a 	bl	8000638 <__aeabi_dmul>
 8007904:	2200      	movs	r2, #0
 8007906:	4680      	mov	r8, r0
 8007908:	4689      	mov	r9, r1
 800790a:	4b5e      	ldr	r3, [pc, #376]	; (8007a84 <__ieee754_pow+0x734>)
 800790c:	4620      	mov	r0, r4
 800790e:	4629      	mov	r1, r5
 8007910:	f7f8 fcda 	bl	80002c8 <__aeabi_dsub>
 8007914:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8007918:	f7f8 fcd6 	bl	80002c8 <__aeabi_dsub>
 800791c:	4602      	mov	r2, r0
 800791e:	460b      	mov	r3, r1
 8007920:	4630      	mov	r0, r6
 8007922:	4639      	mov	r1, r7
 8007924:	f7f8 fcd0 	bl	80002c8 <__aeabi_dsub>
 8007928:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800792c:	f7f8 fe84 	bl	8000638 <__aeabi_dmul>
 8007930:	4622      	mov	r2, r4
 8007932:	4606      	mov	r6, r0
 8007934:	460f      	mov	r7, r1
 8007936:	462b      	mov	r3, r5
 8007938:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800793c:	f7f8 fe7c 	bl	8000638 <__aeabi_dmul>
 8007940:	4602      	mov	r2, r0
 8007942:	460b      	mov	r3, r1
 8007944:	4630      	mov	r0, r6
 8007946:	4639      	mov	r1, r7
 8007948:	f7f8 fcc0 	bl	80002cc <__adddf3>
 800794c:	4606      	mov	r6, r0
 800794e:	460f      	mov	r7, r1
 8007950:	4602      	mov	r2, r0
 8007952:	460b      	mov	r3, r1
 8007954:	4640      	mov	r0, r8
 8007956:	4649      	mov	r1, r9
 8007958:	f7f8 fcb8 	bl	80002cc <__adddf3>
 800795c:	9802      	ldr	r0, [sp, #8]
 800795e:	a33c      	add	r3, pc, #240	; (adr r3, 8007a50 <__ieee754_pow+0x700>)
 8007960:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007964:	4604      	mov	r4, r0
 8007966:	460d      	mov	r5, r1
 8007968:	f7f8 fe66 	bl	8000638 <__aeabi_dmul>
 800796c:	4642      	mov	r2, r8
 800796e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8007972:	464b      	mov	r3, r9
 8007974:	4620      	mov	r0, r4
 8007976:	4629      	mov	r1, r5
 8007978:	f7f8 fca6 	bl	80002c8 <__aeabi_dsub>
 800797c:	4602      	mov	r2, r0
 800797e:	460b      	mov	r3, r1
 8007980:	4630      	mov	r0, r6
 8007982:	4639      	mov	r1, r7
 8007984:	f7f8 fca0 	bl	80002c8 <__aeabi_dsub>
 8007988:	a333      	add	r3, pc, #204	; (adr r3, 8007a58 <__ieee754_pow+0x708>)
 800798a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800798e:	f7f8 fe53 	bl	8000638 <__aeabi_dmul>
 8007992:	a333      	add	r3, pc, #204	; (adr r3, 8007a60 <__ieee754_pow+0x710>)
 8007994:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007998:	4606      	mov	r6, r0
 800799a:	460f      	mov	r7, r1
 800799c:	4620      	mov	r0, r4
 800799e:	4629      	mov	r1, r5
 80079a0:	f7f8 fe4a 	bl	8000638 <__aeabi_dmul>
 80079a4:	4602      	mov	r2, r0
 80079a6:	460b      	mov	r3, r1
 80079a8:	4630      	mov	r0, r6
 80079aa:	4639      	mov	r1, r7
 80079ac:	f7f8 fc8e 	bl	80002cc <__adddf3>
 80079b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80079b2:	4b35      	ldr	r3, [pc, #212]	; (8007a88 <__ieee754_pow+0x738>)
 80079b4:	4413      	add	r3, r2
 80079b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079ba:	f7f8 fc87 	bl	80002cc <__adddf3>
 80079be:	4604      	mov	r4, r0
 80079c0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80079c2:	460d      	mov	r5, r1
 80079c4:	f7f8 fdce 	bl	8000564 <__aeabi_i2d>
 80079c8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80079ca:	4b30      	ldr	r3, [pc, #192]	; (8007a8c <__ieee754_pow+0x73c>)
 80079cc:	4413      	add	r3, r2
 80079ce:	e9d3 8900 	ldrd	r8, r9, [r3]
 80079d2:	4606      	mov	r6, r0
 80079d4:	460f      	mov	r7, r1
 80079d6:	4622      	mov	r2, r4
 80079d8:	462b      	mov	r3, r5
 80079da:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80079de:	f7f8 fc75 	bl	80002cc <__adddf3>
 80079e2:	4642      	mov	r2, r8
 80079e4:	464b      	mov	r3, r9
 80079e6:	f7f8 fc71 	bl	80002cc <__adddf3>
 80079ea:	4632      	mov	r2, r6
 80079ec:	463b      	mov	r3, r7
 80079ee:	f7f8 fc6d 	bl	80002cc <__adddf3>
 80079f2:	9802      	ldr	r0, [sp, #8]
 80079f4:	4632      	mov	r2, r6
 80079f6:	463b      	mov	r3, r7
 80079f8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80079fc:	f7f8 fc64 	bl	80002c8 <__aeabi_dsub>
 8007a00:	4642      	mov	r2, r8
 8007a02:	464b      	mov	r3, r9
 8007a04:	f7f8 fc60 	bl	80002c8 <__aeabi_dsub>
 8007a08:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8007a0c:	e607      	b.n	800761e <__ieee754_pow+0x2ce>
 8007a0e:	f04f 0a01 	mov.w	sl, #1
 8007a12:	e6a5      	b.n	8007760 <__ieee754_pow+0x410>
 8007a14:	ed9f 7b14 	vldr	d7, [pc, #80]	; 8007a68 <__ieee754_pow+0x718>
 8007a18:	e613      	b.n	8007642 <__ieee754_pow+0x2f2>
 8007a1a:	bf00      	nop
 8007a1c:	f3af 8000 	nop.w
 8007a20:	4a454eef 	.word	0x4a454eef
 8007a24:	3fca7e28 	.word	0x3fca7e28
 8007a28:	93c9db65 	.word	0x93c9db65
 8007a2c:	3fcd864a 	.word	0x3fcd864a
 8007a30:	a91d4101 	.word	0xa91d4101
 8007a34:	3fd17460 	.word	0x3fd17460
 8007a38:	518f264d 	.word	0x518f264d
 8007a3c:	3fd55555 	.word	0x3fd55555
 8007a40:	db6fabff 	.word	0xdb6fabff
 8007a44:	3fdb6db6 	.word	0x3fdb6db6
 8007a48:	33333303 	.word	0x33333303
 8007a4c:	3fe33333 	.word	0x3fe33333
 8007a50:	e0000000 	.word	0xe0000000
 8007a54:	3feec709 	.word	0x3feec709
 8007a58:	dc3a03fd 	.word	0xdc3a03fd
 8007a5c:	3feec709 	.word	0x3feec709
 8007a60:	145b01f5 	.word	0x145b01f5
 8007a64:	be3e2fe0 	.word	0xbe3e2fe0
 8007a68:	00000000 	.word	0x00000000
 8007a6c:	3ff00000 	.word	0x3ff00000
 8007a70:	43400000 	.word	0x43400000
 8007a74:	0003988e 	.word	0x0003988e
 8007a78:	000bb679 	.word	0x000bb679
 8007a7c:	080085f0 	.word	0x080085f0
 8007a80:	3ff00000 	.word	0x3ff00000
 8007a84:	40080000 	.word	0x40080000
 8007a88:	08008610 	.word	0x08008610
 8007a8c:	08008600 	.word	0x08008600
 8007a90:	a3b4      	add	r3, pc, #720	; (adr r3, 8007d64 <__ieee754_pow+0xa14>)
 8007a92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a96:	4640      	mov	r0, r8
 8007a98:	4649      	mov	r1, r9
 8007a9a:	f7f8 fc17 	bl	80002cc <__adddf3>
 8007a9e:	4622      	mov	r2, r4
 8007aa0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8007aa4:	462b      	mov	r3, r5
 8007aa6:	4630      	mov	r0, r6
 8007aa8:	4639      	mov	r1, r7
 8007aaa:	f7f8 fc0d 	bl	80002c8 <__aeabi_dsub>
 8007aae:	4602      	mov	r2, r0
 8007ab0:	460b      	mov	r3, r1
 8007ab2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8007ab6:	f7f9 f84f 	bl	8000b58 <__aeabi_dcmpgt>
 8007aba:	2800      	cmp	r0, #0
 8007abc:	f47f adfe 	bne.w	80076bc <__ieee754_pow+0x36c>
 8007ac0:	4aa3      	ldr	r2, [pc, #652]	; (8007d50 <__ieee754_pow+0xa00>)
 8007ac2:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8007ac6:	4293      	cmp	r3, r2
 8007ac8:	f340 810a 	ble.w	8007ce0 <__ieee754_pow+0x990>
 8007acc:	151b      	asrs	r3, r3, #20
 8007ace:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 8007ad2:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 8007ad6:	fa4a f303 	asr.w	r3, sl, r3
 8007ada:	445b      	add	r3, fp
 8007adc:	f3c3 520a 	ubfx	r2, r3, #20, #11
 8007ae0:	4e9c      	ldr	r6, [pc, #624]	; (8007d54 <__ieee754_pow+0xa04>)
 8007ae2:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 8007ae6:	4116      	asrs	r6, r2
 8007ae8:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 8007aec:	2000      	movs	r0, #0
 8007aee:	ea23 0106 	bic.w	r1, r3, r6
 8007af2:	f1c2 0214 	rsb	r2, r2, #20
 8007af6:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 8007afa:	fa4a fa02 	asr.w	sl, sl, r2
 8007afe:	f1bb 0f00 	cmp.w	fp, #0
 8007b02:	4602      	mov	r2, r0
 8007b04:	460b      	mov	r3, r1
 8007b06:	4620      	mov	r0, r4
 8007b08:	4629      	mov	r1, r5
 8007b0a:	bfb8      	it	lt
 8007b0c:	f1ca 0a00 	rsblt	sl, sl, #0
 8007b10:	f7f8 fbda 	bl	80002c8 <__aeabi_dsub>
 8007b14:	e9cd 0100 	strd	r0, r1, [sp]
 8007b18:	4642      	mov	r2, r8
 8007b1a:	464b      	mov	r3, r9
 8007b1c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007b20:	f7f8 fbd4 	bl	80002cc <__adddf3>
 8007b24:	2000      	movs	r0, #0
 8007b26:	a378      	add	r3, pc, #480	; (adr r3, 8007d08 <__ieee754_pow+0x9b8>)
 8007b28:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b2c:	4604      	mov	r4, r0
 8007b2e:	460d      	mov	r5, r1
 8007b30:	f7f8 fd82 	bl	8000638 <__aeabi_dmul>
 8007b34:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007b38:	4606      	mov	r6, r0
 8007b3a:	460f      	mov	r7, r1
 8007b3c:	4620      	mov	r0, r4
 8007b3e:	4629      	mov	r1, r5
 8007b40:	f7f8 fbc2 	bl	80002c8 <__aeabi_dsub>
 8007b44:	4602      	mov	r2, r0
 8007b46:	460b      	mov	r3, r1
 8007b48:	4640      	mov	r0, r8
 8007b4a:	4649      	mov	r1, r9
 8007b4c:	f7f8 fbbc 	bl	80002c8 <__aeabi_dsub>
 8007b50:	a36f      	add	r3, pc, #444	; (adr r3, 8007d10 <__ieee754_pow+0x9c0>)
 8007b52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b56:	f7f8 fd6f 	bl	8000638 <__aeabi_dmul>
 8007b5a:	a36f      	add	r3, pc, #444	; (adr r3, 8007d18 <__ieee754_pow+0x9c8>)
 8007b5c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b60:	4680      	mov	r8, r0
 8007b62:	4689      	mov	r9, r1
 8007b64:	4620      	mov	r0, r4
 8007b66:	4629      	mov	r1, r5
 8007b68:	f7f8 fd66 	bl	8000638 <__aeabi_dmul>
 8007b6c:	4602      	mov	r2, r0
 8007b6e:	460b      	mov	r3, r1
 8007b70:	4640      	mov	r0, r8
 8007b72:	4649      	mov	r1, r9
 8007b74:	f7f8 fbaa 	bl	80002cc <__adddf3>
 8007b78:	4604      	mov	r4, r0
 8007b7a:	460d      	mov	r5, r1
 8007b7c:	4602      	mov	r2, r0
 8007b7e:	460b      	mov	r3, r1
 8007b80:	4630      	mov	r0, r6
 8007b82:	4639      	mov	r1, r7
 8007b84:	f7f8 fba2 	bl	80002cc <__adddf3>
 8007b88:	4632      	mov	r2, r6
 8007b8a:	463b      	mov	r3, r7
 8007b8c:	4680      	mov	r8, r0
 8007b8e:	4689      	mov	r9, r1
 8007b90:	f7f8 fb9a 	bl	80002c8 <__aeabi_dsub>
 8007b94:	4602      	mov	r2, r0
 8007b96:	460b      	mov	r3, r1
 8007b98:	4620      	mov	r0, r4
 8007b9a:	4629      	mov	r1, r5
 8007b9c:	f7f8 fb94 	bl	80002c8 <__aeabi_dsub>
 8007ba0:	4642      	mov	r2, r8
 8007ba2:	4606      	mov	r6, r0
 8007ba4:	460f      	mov	r7, r1
 8007ba6:	464b      	mov	r3, r9
 8007ba8:	4640      	mov	r0, r8
 8007baa:	4649      	mov	r1, r9
 8007bac:	f7f8 fd44 	bl	8000638 <__aeabi_dmul>
 8007bb0:	a35b      	add	r3, pc, #364	; (adr r3, 8007d20 <__ieee754_pow+0x9d0>)
 8007bb2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bb6:	4604      	mov	r4, r0
 8007bb8:	460d      	mov	r5, r1
 8007bba:	f7f8 fd3d 	bl	8000638 <__aeabi_dmul>
 8007bbe:	a35a      	add	r3, pc, #360	; (adr r3, 8007d28 <__ieee754_pow+0x9d8>)
 8007bc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bc4:	f7f8 fb80 	bl	80002c8 <__aeabi_dsub>
 8007bc8:	4622      	mov	r2, r4
 8007bca:	462b      	mov	r3, r5
 8007bcc:	f7f8 fd34 	bl	8000638 <__aeabi_dmul>
 8007bd0:	a357      	add	r3, pc, #348	; (adr r3, 8007d30 <__ieee754_pow+0x9e0>)
 8007bd2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bd6:	f7f8 fb79 	bl	80002cc <__adddf3>
 8007bda:	4622      	mov	r2, r4
 8007bdc:	462b      	mov	r3, r5
 8007bde:	f7f8 fd2b 	bl	8000638 <__aeabi_dmul>
 8007be2:	a355      	add	r3, pc, #340	; (adr r3, 8007d38 <__ieee754_pow+0x9e8>)
 8007be4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007be8:	f7f8 fb6e 	bl	80002c8 <__aeabi_dsub>
 8007bec:	4622      	mov	r2, r4
 8007bee:	462b      	mov	r3, r5
 8007bf0:	f7f8 fd22 	bl	8000638 <__aeabi_dmul>
 8007bf4:	a352      	add	r3, pc, #328	; (adr r3, 8007d40 <__ieee754_pow+0x9f0>)
 8007bf6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bfa:	f7f8 fb67 	bl	80002cc <__adddf3>
 8007bfe:	4622      	mov	r2, r4
 8007c00:	462b      	mov	r3, r5
 8007c02:	f7f8 fd19 	bl	8000638 <__aeabi_dmul>
 8007c06:	4602      	mov	r2, r0
 8007c08:	460b      	mov	r3, r1
 8007c0a:	4640      	mov	r0, r8
 8007c0c:	4649      	mov	r1, r9
 8007c0e:	f7f8 fb5b 	bl	80002c8 <__aeabi_dsub>
 8007c12:	4604      	mov	r4, r0
 8007c14:	460d      	mov	r5, r1
 8007c16:	4602      	mov	r2, r0
 8007c18:	460b      	mov	r3, r1
 8007c1a:	4640      	mov	r0, r8
 8007c1c:	4649      	mov	r1, r9
 8007c1e:	f7f8 fd0b 	bl	8000638 <__aeabi_dmul>
 8007c22:	2200      	movs	r2, #0
 8007c24:	e9cd 0100 	strd	r0, r1, [sp]
 8007c28:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8007c2c:	4620      	mov	r0, r4
 8007c2e:	4629      	mov	r1, r5
 8007c30:	f7f8 fb4a 	bl	80002c8 <__aeabi_dsub>
 8007c34:	4602      	mov	r2, r0
 8007c36:	460b      	mov	r3, r1
 8007c38:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007c3c:	f7f8 fe26 	bl	800088c <__aeabi_ddiv>
 8007c40:	4632      	mov	r2, r6
 8007c42:	4604      	mov	r4, r0
 8007c44:	460d      	mov	r5, r1
 8007c46:	463b      	mov	r3, r7
 8007c48:	4640      	mov	r0, r8
 8007c4a:	4649      	mov	r1, r9
 8007c4c:	f7f8 fcf4 	bl	8000638 <__aeabi_dmul>
 8007c50:	4632      	mov	r2, r6
 8007c52:	463b      	mov	r3, r7
 8007c54:	f7f8 fb3a 	bl	80002cc <__adddf3>
 8007c58:	4602      	mov	r2, r0
 8007c5a:	460b      	mov	r3, r1
 8007c5c:	4620      	mov	r0, r4
 8007c5e:	4629      	mov	r1, r5
 8007c60:	f7f8 fb32 	bl	80002c8 <__aeabi_dsub>
 8007c64:	4642      	mov	r2, r8
 8007c66:	464b      	mov	r3, r9
 8007c68:	f7f8 fb2e 	bl	80002c8 <__aeabi_dsub>
 8007c6c:	4602      	mov	r2, r0
 8007c6e:	460b      	mov	r3, r1
 8007c70:	2000      	movs	r0, #0
 8007c72:	4939      	ldr	r1, [pc, #228]	; (8007d58 <__ieee754_pow+0xa08>)
 8007c74:	f7f8 fb28 	bl	80002c8 <__aeabi_dsub>
 8007c78:	eb01 540a 	add.w	r4, r1, sl, lsl #20
 8007c7c:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 8007c80:	4602      	mov	r2, r0
 8007c82:	460b      	mov	r3, r1
 8007c84:	da2f      	bge.n	8007ce6 <__ieee754_pow+0x996>
 8007c86:	4650      	mov	r0, sl
 8007c88:	ec43 2b10 	vmov	d0, r2, r3
 8007c8c:	f000 f9c0 	bl	8008010 <scalbn>
 8007c90:	ec51 0b10 	vmov	r0, r1, d0
 8007c94:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007c98:	f7ff bbf1 	b.w	800747e <__ieee754_pow+0x12e>
 8007c9c:	4b2f      	ldr	r3, [pc, #188]	; (8007d5c <__ieee754_pow+0xa0c>)
 8007c9e:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8007ca2:	429e      	cmp	r6, r3
 8007ca4:	f77f af0c 	ble.w	8007ac0 <__ieee754_pow+0x770>
 8007ca8:	4b2d      	ldr	r3, [pc, #180]	; (8007d60 <__ieee754_pow+0xa10>)
 8007caa:	440b      	add	r3, r1
 8007cac:	4303      	orrs	r3, r0
 8007cae:	d00b      	beq.n	8007cc8 <__ieee754_pow+0x978>
 8007cb0:	a325      	add	r3, pc, #148	; (adr r3, 8007d48 <__ieee754_pow+0x9f8>)
 8007cb2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007cb6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007cba:	f7f8 fcbd 	bl	8000638 <__aeabi_dmul>
 8007cbe:	a322      	add	r3, pc, #136	; (adr r3, 8007d48 <__ieee754_pow+0x9f8>)
 8007cc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007cc4:	f7ff bbdb 	b.w	800747e <__ieee754_pow+0x12e>
 8007cc8:	4622      	mov	r2, r4
 8007cca:	462b      	mov	r3, r5
 8007ccc:	f7f8 fafc 	bl	80002c8 <__aeabi_dsub>
 8007cd0:	4642      	mov	r2, r8
 8007cd2:	464b      	mov	r3, r9
 8007cd4:	f7f8 ff36 	bl	8000b44 <__aeabi_dcmpge>
 8007cd8:	2800      	cmp	r0, #0
 8007cda:	f43f aef1 	beq.w	8007ac0 <__ieee754_pow+0x770>
 8007cde:	e7e7      	b.n	8007cb0 <__ieee754_pow+0x960>
 8007ce0:	f04f 0a00 	mov.w	sl, #0
 8007ce4:	e718      	b.n	8007b18 <__ieee754_pow+0x7c8>
 8007ce6:	4621      	mov	r1, r4
 8007ce8:	e7d4      	b.n	8007c94 <__ieee754_pow+0x944>
 8007cea:	2000      	movs	r0, #0
 8007cec:	491a      	ldr	r1, [pc, #104]	; (8007d58 <__ieee754_pow+0xa08>)
 8007cee:	f7ff bb8f 	b.w	8007410 <__ieee754_pow+0xc0>
 8007cf2:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007cf6:	f7ff bb8b 	b.w	8007410 <__ieee754_pow+0xc0>
 8007cfa:	4630      	mov	r0, r6
 8007cfc:	4639      	mov	r1, r7
 8007cfe:	f7ff bb87 	b.w	8007410 <__ieee754_pow+0xc0>
 8007d02:	4693      	mov	fp, r2
 8007d04:	f7ff bb98 	b.w	8007438 <__ieee754_pow+0xe8>
 8007d08:	00000000 	.word	0x00000000
 8007d0c:	3fe62e43 	.word	0x3fe62e43
 8007d10:	fefa39ef 	.word	0xfefa39ef
 8007d14:	3fe62e42 	.word	0x3fe62e42
 8007d18:	0ca86c39 	.word	0x0ca86c39
 8007d1c:	be205c61 	.word	0xbe205c61
 8007d20:	72bea4d0 	.word	0x72bea4d0
 8007d24:	3e663769 	.word	0x3e663769
 8007d28:	c5d26bf1 	.word	0xc5d26bf1
 8007d2c:	3ebbbd41 	.word	0x3ebbbd41
 8007d30:	af25de2c 	.word	0xaf25de2c
 8007d34:	3f11566a 	.word	0x3f11566a
 8007d38:	16bebd93 	.word	0x16bebd93
 8007d3c:	3f66c16c 	.word	0x3f66c16c
 8007d40:	5555553e 	.word	0x5555553e
 8007d44:	3fc55555 	.word	0x3fc55555
 8007d48:	c2f8f359 	.word	0xc2f8f359
 8007d4c:	01a56e1f 	.word	0x01a56e1f
 8007d50:	3fe00000 	.word	0x3fe00000
 8007d54:	000fffff 	.word	0x000fffff
 8007d58:	3ff00000 	.word	0x3ff00000
 8007d5c:	4090cbff 	.word	0x4090cbff
 8007d60:	3f6f3400 	.word	0x3f6f3400
 8007d64:	652b82fe 	.word	0x652b82fe
 8007d68:	3c971547 	.word	0x3c971547

08007d6c <__ieee754_sqrt>:
 8007d6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007d70:	4955      	ldr	r1, [pc, #340]	; (8007ec8 <__ieee754_sqrt+0x15c>)
 8007d72:	ec55 4b10 	vmov	r4, r5, d0
 8007d76:	43a9      	bics	r1, r5
 8007d78:	462b      	mov	r3, r5
 8007d7a:	462a      	mov	r2, r5
 8007d7c:	d112      	bne.n	8007da4 <__ieee754_sqrt+0x38>
 8007d7e:	ee10 2a10 	vmov	r2, s0
 8007d82:	ee10 0a10 	vmov	r0, s0
 8007d86:	4629      	mov	r1, r5
 8007d88:	f7f8 fc56 	bl	8000638 <__aeabi_dmul>
 8007d8c:	4602      	mov	r2, r0
 8007d8e:	460b      	mov	r3, r1
 8007d90:	4620      	mov	r0, r4
 8007d92:	4629      	mov	r1, r5
 8007d94:	f7f8 fa9a 	bl	80002cc <__adddf3>
 8007d98:	4604      	mov	r4, r0
 8007d9a:	460d      	mov	r5, r1
 8007d9c:	ec45 4b10 	vmov	d0, r4, r5
 8007da0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007da4:	2d00      	cmp	r5, #0
 8007da6:	ee10 0a10 	vmov	r0, s0
 8007daa:	4621      	mov	r1, r4
 8007dac:	dc0f      	bgt.n	8007dce <__ieee754_sqrt+0x62>
 8007dae:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8007db2:	4330      	orrs	r0, r6
 8007db4:	d0f2      	beq.n	8007d9c <__ieee754_sqrt+0x30>
 8007db6:	b155      	cbz	r5, 8007dce <__ieee754_sqrt+0x62>
 8007db8:	ee10 2a10 	vmov	r2, s0
 8007dbc:	4620      	mov	r0, r4
 8007dbe:	4629      	mov	r1, r5
 8007dc0:	f7f8 fa82 	bl	80002c8 <__aeabi_dsub>
 8007dc4:	4602      	mov	r2, r0
 8007dc6:	460b      	mov	r3, r1
 8007dc8:	f7f8 fd60 	bl	800088c <__aeabi_ddiv>
 8007dcc:	e7e4      	b.n	8007d98 <__ieee754_sqrt+0x2c>
 8007dce:	151b      	asrs	r3, r3, #20
 8007dd0:	d073      	beq.n	8007eba <__ieee754_sqrt+0x14e>
 8007dd2:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8007dd6:	07dd      	lsls	r5, r3, #31
 8007dd8:	f3c2 0213 	ubfx	r2, r2, #0, #20
 8007ddc:	bf48      	it	mi
 8007dde:	0fc8      	lsrmi	r0, r1, #31
 8007de0:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8007de4:	bf44      	itt	mi
 8007de6:	0049      	lslmi	r1, r1, #1
 8007de8:	eb00 0242 	addmi.w	r2, r0, r2, lsl #1
 8007dec:	2500      	movs	r5, #0
 8007dee:	1058      	asrs	r0, r3, #1
 8007df0:	0fcb      	lsrs	r3, r1, #31
 8007df2:	eb03 0242 	add.w	r2, r3, r2, lsl #1
 8007df6:	0049      	lsls	r1, r1, #1
 8007df8:	2316      	movs	r3, #22
 8007dfa:	462c      	mov	r4, r5
 8007dfc:	f44f 1600 	mov.w	r6, #2097152	; 0x200000
 8007e00:	19a7      	adds	r7, r4, r6
 8007e02:	4297      	cmp	r7, r2
 8007e04:	bfde      	ittt	le
 8007e06:	19bc      	addle	r4, r7, r6
 8007e08:	1bd2      	suble	r2, r2, r7
 8007e0a:	19ad      	addle	r5, r5, r6
 8007e0c:	0fcf      	lsrs	r7, r1, #31
 8007e0e:	3b01      	subs	r3, #1
 8007e10:	eb07 0242 	add.w	r2, r7, r2, lsl #1
 8007e14:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8007e18:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8007e1c:	d1f0      	bne.n	8007e00 <__ieee754_sqrt+0x94>
 8007e1e:	f04f 0c20 	mov.w	ip, #32
 8007e22:	469e      	mov	lr, r3
 8007e24:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8007e28:	42a2      	cmp	r2, r4
 8007e2a:	eb06 070e 	add.w	r7, r6, lr
 8007e2e:	dc02      	bgt.n	8007e36 <__ieee754_sqrt+0xca>
 8007e30:	d112      	bne.n	8007e58 <__ieee754_sqrt+0xec>
 8007e32:	428f      	cmp	r7, r1
 8007e34:	d810      	bhi.n	8007e58 <__ieee754_sqrt+0xec>
 8007e36:	2f00      	cmp	r7, #0
 8007e38:	eb07 0e06 	add.w	lr, r7, r6
 8007e3c:	da42      	bge.n	8007ec4 <__ieee754_sqrt+0x158>
 8007e3e:	f1be 0f00 	cmp.w	lr, #0
 8007e42:	db3f      	blt.n	8007ec4 <__ieee754_sqrt+0x158>
 8007e44:	f104 0801 	add.w	r8, r4, #1
 8007e48:	1b12      	subs	r2, r2, r4
 8007e4a:	428f      	cmp	r7, r1
 8007e4c:	bf88      	it	hi
 8007e4e:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8007e52:	1bc9      	subs	r1, r1, r7
 8007e54:	4433      	add	r3, r6
 8007e56:	4644      	mov	r4, r8
 8007e58:	0052      	lsls	r2, r2, #1
 8007e5a:	f1bc 0c01 	subs.w	ip, ip, #1
 8007e5e:	eb02 72d1 	add.w	r2, r2, r1, lsr #31
 8007e62:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8007e66:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8007e6a:	d1dd      	bne.n	8007e28 <__ieee754_sqrt+0xbc>
 8007e6c:	430a      	orrs	r2, r1
 8007e6e:	d006      	beq.n	8007e7e <__ieee754_sqrt+0x112>
 8007e70:	1c5c      	adds	r4, r3, #1
 8007e72:	bf13      	iteet	ne
 8007e74:	3301      	addne	r3, #1
 8007e76:	3501      	addeq	r5, #1
 8007e78:	4663      	moveq	r3, ip
 8007e7a:	f023 0301 	bicne.w	r3, r3, #1
 8007e7e:	106a      	asrs	r2, r5, #1
 8007e80:	085b      	lsrs	r3, r3, #1
 8007e82:	07e9      	lsls	r1, r5, #31
 8007e84:	f102 527f 	add.w	r2, r2, #1069547520	; 0x3fc00000
 8007e88:	f502 1200 	add.w	r2, r2, #2097152	; 0x200000
 8007e8c:	bf48      	it	mi
 8007e8e:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 8007e92:	eb02 5500 	add.w	r5, r2, r0, lsl #20
 8007e96:	461c      	mov	r4, r3
 8007e98:	e780      	b.n	8007d9c <__ieee754_sqrt+0x30>
 8007e9a:	0aca      	lsrs	r2, r1, #11
 8007e9c:	3815      	subs	r0, #21
 8007e9e:	0549      	lsls	r1, r1, #21
 8007ea0:	2a00      	cmp	r2, #0
 8007ea2:	d0fa      	beq.n	8007e9a <__ieee754_sqrt+0x12e>
 8007ea4:	02d6      	lsls	r6, r2, #11
 8007ea6:	d50a      	bpl.n	8007ebe <__ieee754_sqrt+0x152>
 8007ea8:	f1c3 0420 	rsb	r4, r3, #32
 8007eac:	fa21 f404 	lsr.w	r4, r1, r4
 8007eb0:	1e5d      	subs	r5, r3, #1
 8007eb2:	4099      	lsls	r1, r3
 8007eb4:	4322      	orrs	r2, r4
 8007eb6:	1b43      	subs	r3, r0, r5
 8007eb8:	e78b      	b.n	8007dd2 <__ieee754_sqrt+0x66>
 8007eba:	4618      	mov	r0, r3
 8007ebc:	e7f0      	b.n	8007ea0 <__ieee754_sqrt+0x134>
 8007ebe:	0052      	lsls	r2, r2, #1
 8007ec0:	3301      	adds	r3, #1
 8007ec2:	e7ef      	b.n	8007ea4 <__ieee754_sqrt+0x138>
 8007ec4:	46a0      	mov	r8, r4
 8007ec6:	e7bf      	b.n	8007e48 <__ieee754_sqrt+0xdc>
 8007ec8:	7ff00000 	.word	0x7ff00000

08007ecc <fabs>:
 8007ecc:	ec51 0b10 	vmov	r0, r1, d0
 8007ed0:	ee10 2a10 	vmov	r2, s0
 8007ed4:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8007ed8:	ec43 2b10 	vmov	d0, r2, r3
 8007edc:	4770      	bx	lr

08007ede <finite>:
 8007ede:	ee10 3a90 	vmov	r3, s1
 8007ee2:	f043 4000 	orr.w	r0, r3, #2147483648	; 0x80000000
 8007ee6:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8007eea:	0fc0      	lsrs	r0, r0, #31
 8007eec:	4770      	bx	lr

08007eee <matherr>:
 8007eee:	2000      	movs	r0, #0
 8007ef0:	4770      	bx	lr
 8007ef2:	0000      	movs	r0, r0
 8007ef4:	0000      	movs	r0, r0
	...

08007ef8 <nan>:
 8007ef8:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8007f00 <nan+0x8>
 8007efc:	4770      	bx	lr
 8007efe:	bf00      	nop
 8007f00:	00000000 	.word	0x00000000
 8007f04:	7ff80000 	.word	0x7ff80000

08007f08 <rint>:
 8007f08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007f0a:	ec51 0b10 	vmov	r0, r1, d0
 8007f0e:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8007f12:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 8007f16:	2e13      	cmp	r6, #19
 8007f18:	460b      	mov	r3, r1
 8007f1a:	ee10 4a10 	vmov	r4, s0
 8007f1e:	ea4f 75d1 	mov.w	r5, r1, lsr #31
 8007f22:	dc56      	bgt.n	8007fd2 <rint+0xca>
 8007f24:	2e00      	cmp	r6, #0
 8007f26:	da2b      	bge.n	8007f80 <rint+0x78>
 8007f28:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 8007f2c:	4302      	orrs	r2, r0
 8007f2e:	d023      	beq.n	8007f78 <rint+0x70>
 8007f30:	f3c1 0213 	ubfx	r2, r1, #0, #20
 8007f34:	4302      	orrs	r2, r0
 8007f36:	4254      	negs	r4, r2
 8007f38:	4314      	orrs	r4, r2
 8007f3a:	0c4b      	lsrs	r3, r1, #17
 8007f3c:	0b24      	lsrs	r4, r4, #12
 8007f3e:	045b      	lsls	r3, r3, #17
 8007f40:	f404 2400 	and.w	r4, r4, #524288	; 0x80000
 8007f44:	ea44 0103 	orr.w	r1, r4, r3
 8007f48:	460b      	mov	r3, r1
 8007f4a:	492f      	ldr	r1, [pc, #188]	; (8008008 <rint+0x100>)
 8007f4c:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
 8007f50:	e9d1 6700 	ldrd	r6, r7, [r1]
 8007f54:	4602      	mov	r2, r0
 8007f56:	4639      	mov	r1, r7
 8007f58:	4630      	mov	r0, r6
 8007f5a:	f7f8 f9b7 	bl	80002cc <__adddf3>
 8007f5e:	e9cd 0100 	strd	r0, r1, [sp]
 8007f62:	463b      	mov	r3, r7
 8007f64:	4632      	mov	r2, r6
 8007f66:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007f6a:	f7f8 f9ad 	bl	80002c8 <__aeabi_dsub>
 8007f6e:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8007f72:	ea43 77c5 	orr.w	r7, r3, r5, lsl #31
 8007f76:	4639      	mov	r1, r7
 8007f78:	ec41 0b10 	vmov	d0, r0, r1
 8007f7c:	b003      	add	sp, #12
 8007f7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007f80:	4a22      	ldr	r2, [pc, #136]	; (800800c <rint+0x104>)
 8007f82:	4132      	asrs	r2, r6
 8007f84:	ea01 0702 	and.w	r7, r1, r2
 8007f88:	4307      	orrs	r7, r0
 8007f8a:	d0f5      	beq.n	8007f78 <rint+0x70>
 8007f8c:	0852      	lsrs	r2, r2, #1
 8007f8e:	4011      	ands	r1, r2
 8007f90:	430c      	orrs	r4, r1
 8007f92:	d00b      	beq.n	8007fac <rint+0xa4>
 8007f94:	ea23 0202 	bic.w	r2, r3, r2
 8007f98:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8007f9c:	2e13      	cmp	r6, #19
 8007f9e:	fa43 f306 	asr.w	r3, r3, r6
 8007fa2:	bf0c      	ite	eq
 8007fa4:	f04f 4400 	moveq.w	r4, #2147483648	; 0x80000000
 8007fa8:	2400      	movne	r4, #0
 8007faa:	4313      	orrs	r3, r2
 8007fac:	4916      	ldr	r1, [pc, #88]	; (8008008 <rint+0x100>)
 8007fae:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
 8007fb2:	4622      	mov	r2, r4
 8007fb4:	e9d5 4500 	ldrd	r4, r5, [r5]
 8007fb8:	4620      	mov	r0, r4
 8007fba:	4629      	mov	r1, r5
 8007fbc:	f7f8 f986 	bl	80002cc <__adddf3>
 8007fc0:	e9cd 0100 	strd	r0, r1, [sp]
 8007fc4:	4622      	mov	r2, r4
 8007fc6:	462b      	mov	r3, r5
 8007fc8:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007fcc:	f7f8 f97c 	bl	80002c8 <__aeabi_dsub>
 8007fd0:	e7d2      	b.n	8007f78 <rint+0x70>
 8007fd2:	2e33      	cmp	r6, #51	; 0x33
 8007fd4:	dd07      	ble.n	8007fe6 <rint+0xde>
 8007fd6:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8007fda:	d1cd      	bne.n	8007f78 <rint+0x70>
 8007fdc:	ee10 2a10 	vmov	r2, s0
 8007fe0:	f7f8 f974 	bl	80002cc <__adddf3>
 8007fe4:	e7c8      	b.n	8007f78 <rint+0x70>
 8007fe6:	f2a2 4613 	subw	r6, r2, #1043	; 0x413
 8007fea:	f04f 32ff 	mov.w	r2, #4294967295
 8007fee:	40f2      	lsrs	r2, r6
 8007ff0:	4210      	tst	r0, r2
 8007ff2:	d0c1      	beq.n	8007f78 <rint+0x70>
 8007ff4:	0852      	lsrs	r2, r2, #1
 8007ff6:	4210      	tst	r0, r2
 8007ff8:	bf1f      	itttt	ne
 8007ffa:	f04f 4480 	movne.w	r4, #1073741824	; 0x40000000
 8007ffe:	ea20 0202 	bicne.w	r2, r0, r2
 8008002:	4134      	asrne	r4, r6
 8008004:	4314      	orrne	r4, r2
 8008006:	e7d1      	b.n	8007fac <rint+0xa4>
 8008008:	08008620 	.word	0x08008620
 800800c:	000fffff 	.word	0x000fffff

08008010 <scalbn>:
 8008010:	b570      	push	{r4, r5, r6, lr}
 8008012:	ec55 4b10 	vmov	r4, r5, d0
 8008016:	f3c5 520a 	ubfx	r2, r5, #20, #11
 800801a:	4606      	mov	r6, r0
 800801c:	462b      	mov	r3, r5
 800801e:	b9aa      	cbnz	r2, 800804c <scalbn+0x3c>
 8008020:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8008024:	4323      	orrs	r3, r4
 8008026:	d03b      	beq.n	80080a0 <scalbn+0x90>
 8008028:	4b31      	ldr	r3, [pc, #196]	; (80080f0 <scalbn+0xe0>)
 800802a:	4629      	mov	r1, r5
 800802c:	2200      	movs	r2, #0
 800802e:	ee10 0a10 	vmov	r0, s0
 8008032:	f7f8 fb01 	bl	8000638 <__aeabi_dmul>
 8008036:	4b2f      	ldr	r3, [pc, #188]	; (80080f4 <scalbn+0xe4>)
 8008038:	429e      	cmp	r6, r3
 800803a:	4604      	mov	r4, r0
 800803c:	460d      	mov	r5, r1
 800803e:	da12      	bge.n	8008066 <scalbn+0x56>
 8008040:	a327      	add	r3, pc, #156	; (adr r3, 80080e0 <scalbn+0xd0>)
 8008042:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008046:	f7f8 faf7 	bl	8000638 <__aeabi_dmul>
 800804a:	e009      	b.n	8008060 <scalbn+0x50>
 800804c:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8008050:	428a      	cmp	r2, r1
 8008052:	d10c      	bne.n	800806e <scalbn+0x5e>
 8008054:	ee10 2a10 	vmov	r2, s0
 8008058:	4620      	mov	r0, r4
 800805a:	4629      	mov	r1, r5
 800805c:	f7f8 f936 	bl	80002cc <__adddf3>
 8008060:	4604      	mov	r4, r0
 8008062:	460d      	mov	r5, r1
 8008064:	e01c      	b.n	80080a0 <scalbn+0x90>
 8008066:	f3c1 520a 	ubfx	r2, r1, #20, #11
 800806a:	460b      	mov	r3, r1
 800806c:	3a36      	subs	r2, #54	; 0x36
 800806e:	4432      	add	r2, r6
 8008070:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8008074:	428a      	cmp	r2, r1
 8008076:	dd0b      	ble.n	8008090 <scalbn+0x80>
 8008078:	ec45 4b11 	vmov	d1, r4, r5
 800807c:	ed9f 0b1a 	vldr	d0, [pc, #104]	; 80080e8 <scalbn+0xd8>
 8008080:	f000 f83c 	bl	80080fc <copysign>
 8008084:	a318      	add	r3, pc, #96	; (adr r3, 80080e8 <scalbn+0xd8>)
 8008086:	e9d3 2300 	ldrd	r2, r3, [r3]
 800808a:	ec51 0b10 	vmov	r0, r1, d0
 800808e:	e7da      	b.n	8008046 <scalbn+0x36>
 8008090:	2a00      	cmp	r2, #0
 8008092:	dd08      	ble.n	80080a6 <scalbn+0x96>
 8008094:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8008098:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800809c:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 80080a0:	ec45 4b10 	vmov	d0, r4, r5
 80080a4:	bd70      	pop	{r4, r5, r6, pc}
 80080a6:	f112 0f35 	cmn.w	r2, #53	; 0x35
 80080aa:	da0d      	bge.n	80080c8 <scalbn+0xb8>
 80080ac:	f24c 3350 	movw	r3, #50000	; 0xc350
 80080b0:	429e      	cmp	r6, r3
 80080b2:	ec45 4b11 	vmov	d1, r4, r5
 80080b6:	dce1      	bgt.n	800807c <scalbn+0x6c>
 80080b8:	ed9f 0b09 	vldr	d0, [pc, #36]	; 80080e0 <scalbn+0xd0>
 80080bc:	f000 f81e 	bl	80080fc <copysign>
 80080c0:	a307      	add	r3, pc, #28	; (adr r3, 80080e0 <scalbn+0xd0>)
 80080c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80080c6:	e7e0      	b.n	800808a <scalbn+0x7a>
 80080c8:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80080cc:	3236      	adds	r2, #54	; 0x36
 80080ce:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80080d2:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 80080d6:	4620      	mov	r0, r4
 80080d8:	4629      	mov	r1, r5
 80080da:	2200      	movs	r2, #0
 80080dc:	4b06      	ldr	r3, [pc, #24]	; (80080f8 <scalbn+0xe8>)
 80080de:	e7b2      	b.n	8008046 <scalbn+0x36>
 80080e0:	c2f8f359 	.word	0xc2f8f359
 80080e4:	01a56e1f 	.word	0x01a56e1f
 80080e8:	8800759c 	.word	0x8800759c
 80080ec:	7e37e43c 	.word	0x7e37e43c
 80080f0:	43500000 	.word	0x43500000
 80080f4:	ffff3cb0 	.word	0xffff3cb0
 80080f8:	3c900000 	.word	0x3c900000

080080fc <copysign>:
 80080fc:	ec51 0b10 	vmov	r0, r1, d0
 8008100:	ee11 0a90 	vmov	r0, s3
 8008104:	ee10 2a10 	vmov	r2, s0
 8008108:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800810c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8008110:	ea41 0300 	orr.w	r3, r1, r0
 8008114:	ec43 2b10 	vmov	d0, r2, r3
 8008118:	4770      	bx	lr
	...

0800811c <_init>:
 800811c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800811e:	bf00      	nop
 8008120:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008122:	bc08      	pop	{r3}
 8008124:	469e      	mov	lr, r3
 8008126:	4770      	bx	lr

08008128 <_fini>:
 8008128:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800812a:	bf00      	nop
 800812c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800812e:	bc08      	pop	{r3}
 8008130:	469e      	mov	lr, r3
 8008132:	4770      	bx	lr
