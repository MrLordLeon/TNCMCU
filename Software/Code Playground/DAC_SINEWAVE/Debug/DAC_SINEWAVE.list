
DAC_SINEWAVE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007b24  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000528  08007cf8  08007cf8  00017cf8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008220  08008220  00020078  2**0
                  CONTENTS
  4 .ARM          00000008  08008220  08008220  00018220  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008228  08008228  00020078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008228  08008228  00018228  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800822c  0800822c  0001822c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000078  20000000  08008230  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00004d30  20000078  080082a8  00020078  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20004da8  080082a8  00024da8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020078  2**0
                  CONTENTS, READONLY
 12 .debug_info   000119c5  00000000  00000000  000200a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00002726  00000000  00000000  00031a6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000f20  00000000  00000000  00034198  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000e10  00000000  00000000  000350b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0002306a  00000000  00000000  00035ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000c1d6  00000000  00000000  00058f32  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000d280c  00000000  00000000  00065108  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00137914  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000463c  00000000  00000000  00137990  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000078 	.word	0x20000078
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08007cdc 	.word	0x08007cdc

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	2000007c 	.word	0x2000007c
 800020c:	08007cdc 	.word	0x08007cdc

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003fe:	f1a4 0401 	sub.w	r4, r4, #1
 8000402:	d1e9      	bne.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_d2iz>:
 8000b6c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b70:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b74:	d215      	bcs.n	8000ba2 <__aeabi_d2iz+0x36>
 8000b76:	d511      	bpl.n	8000b9c <__aeabi_d2iz+0x30>
 8000b78:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b7c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b80:	d912      	bls.n	8000ba8 <__aeabi_d2iz+0x3c>
 8000b82:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b86:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b8a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b92:	fa23 f002 	lsr.w	r0, r3, r2
 8000b96:	bf18      	it	ne
 8000b98:	4240      	negne	r0, r0
 8000b9a:	4770      	bx	lr
 8000b9c:	f04f 0000 	mov.w	r0, #0
 8000ba0:	4770      	bx	lr
 8000ba2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba6:	d105      	bne.n	8000bb4 <__aeabi_d2iz+0x48>
 8000ba8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bac:	bf08      	it	eq
 8000bae:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bb2:	4770      	bx	lr
 8000bb4:	f04f 0000 	mov.w	r0, #0
 8000bb8:	4770      	bx	lr
 8000bba:	bf00      	nop

08000bbc <__aeabi_d2uiz>:
 8000bbc:	004a      	lsls	r2, r1, #1
 8000bbe:	d211      	bcs.n	8000be4 <__aeabi_d2uiz+0x28>
 8000bc0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bc4:	d211      	bcs.n	8000bea <__aeabi_d2uiz+0x2e>
 8000bc6:	d50d      	bpl.n	8000be4 <__aeabi_d2uiz+0x28>
 8000bc8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bcc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bd0:	d40e      	bmi.n	8000bf0 <__aeabi_d2uiz+0x34>
 8000bd2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bda:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bde:	fa23 f002 	lsr.w	r0, r3, r2
 8000be2:	4770      	bx	lr
 8000be4:	f04f 0000 	mov.w	r0, #0
 8000be8:	4770      	bx	lr
 8000bea:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bee:	d102      	bne.n	8000bf6 <__aeabi_d2uiz+0x3a>
 8000bf0:	f04f 30ff 	mov.w	r0, #4294967295
 8000bf4:	4770      	bx	lr
 8000bf6:	f04f 0000 	mov.w	r0, #0
 8000bfa:	4770      	bx	lr

08000bfc <__aeabi_uldivmod>:
 8000bfc:	b953      	cbnz	r3, 8000c14 <__aeabi_uldivmod+0x18>
 8000bfe:	b94a      	cbnz	r2, 8000c14 <__aeabi_uldivmod+0x18>
 8000c00:	2900      	cmp	r1, #0
 8000c02:	bf08      	it	eq
 8000c04:	2800      	cmpeq	r0, #0
 8000c06:	bf1c      	itt	ne
 8000c08:	f04f 31ff 	movne.w	r1, #4294967295
 8000c0c:	f04f 30ff 	movne.w	r0, #4294967295
 8000c10:	f000 b972 	b.w	8000ef8 <__aeabi_idiv0>
 8000c14:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c18:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c1c:	f000 f806 	bl	8000c2c <__udivmoddi4>
 8000c20:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c28:	b004      	add	sp, #16
 8000c2a:	4770      	bx	lr

08000c2c <__udivmoddi4>:
 8000c2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c30:	9e08      	ldr	r6, [sp, #32]
 8000c32:	4604      	mov	r4, r0
 8000c34:	4688      	mov	r8, r1
 8000c36:	2b00      	cmp	r3, #0
 8000c38:	d14b      	bne.n	8000cd2 <__udivmoddi4+0xa6>
 8000c3a:	428a      	cmp	r2, r1
 8000c3c:	4615      	mov	r5, r2
 8000c3e:	d967      	bls.n	8000d10 <__udivmoddi4+0xe4>
 8000c40:	fab2 f282 	clz	r2, r2
 8000c44:	b14a      	cbz	r2, 8000c5a <__udivmoddi4+0x2e>
 8000c46:	f1c2 0720 	rsb	r7, r2, #32
 8000c4a:	fa01 f302 	lsl.w	r3, r1, r2
 8000c4e:	fa20 f707 	lsr.w	r7, r0, r7
 8000c52:	4095      	lsls	r5, r2
 8000c54:	ea47 0803 	orr.w	r8, r7, r3
 8000c58:	4094      	lsls	r4, r2
 8000c5a:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000c5e:	0c23      	lsrs	r3, r4, #16
 8000c60:	fbb8 f7fe 	udiv	r7, r8, lr
 8000c64:	fa1f fc85 	uxth.w	ip, r5
 8000c68:	fb0e 8817 	mls	r8, lr, r7, r8
 8000c6c:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000c70:	fb07 f10c 	mul.w	r1, r7, ip
 8000c74:	4299      	cmp	r1, r3
 8000c76:	d909      	bls.n	8000c8c <__udivmoddi4+0x60>
 8000c78:	18eb      	adds	r3, r5, r3
 8000c7a:	f107 30ff 	add.w	r0, r7, #4294967295
 8000c7e:	f080 811b 	bcs.w	8000eb8 <__udivmoddi4+0x28c>
 8000c82:	4299      	cmp	r1, r3
 8000c84:	f240 8118 	bls.w	8000eb8 <__udivmoddi4+0x28c>
 8000c88:	3f02      	subs	r7, #2
 8000c8a:	442b      	add	r3, r5
 8000c8c:	1a5b      	subs	r3, r3, r1
 8000c8e:	b2a4      	uxth	r4, r4
 8000c90:	fbb3 f0fe 	udiv	r0, r3, lr
 8000c94:	fb0e 3310 	mls	r3, lr, r0, r3
 8000c98:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c9c:	fb00 fc0c 	mul.w	ip, r0, ip
 8000ca0:	45a4      	cmp	ip, r4
 8000ca2:	d909      	bls.n	8000cb8 <__udivmoddi4+0x8c>
 8000ca4:	192c      	adds	r4, r5, r4
 8000ca6:	f100 33ff 	add.w	r3, r0, #4294967295
 8000caa:	f080 8107 	bcs.w	8000ebc <__udivmoddi4+0x290>
 8000cae:	45a4      	cmp	ip, r4
 8000cb0:	f240 8104 	bls.w	8000ebc <__udivmoddi4+0x290>
 8000cb4:	3802      	subs	r0, #2
 8000cb6:	442c      	add	r4, r5
 8000cb8:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000cbc:	eba4 040c 	sub.w	r4, r4, ip
 8000cc0:	2700      	movs	r7, #0
 8000cc2:	b11e      	cbz	r6, 8000ccc <__udivmoddi4+0xa0>
 8000cc4:	40d4      	lsrs	r4, r2
 8000cc6:	2300      	movs	r3, #0
 8000cc8:	e9c6 4300 	strd	r4, r3, [r6]
 8000ccc:	4639      	mov	r1, r7
 8000cce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cd2:	428b      	cmp	r3, r1
 8000cd4:	d909      	bls.n	8000cea <__udivmoddi4+0xbe>
 8000cd6:	2e00      	cmp	r6, #0
 8000cd8:	f000 80eb 	beq.w	8000eb2 <__udivmoddi4+0x286>
 8000cdc:	2700      	movs	r7, #0
 8000cde:	e9c6 0100 	strd	r0, r1, [r6]
 8000ce2:	4638      	mov	r0, r7
 8000ce4:	4639      	mov	r1, r7
 8000ce6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cea:	fab3 f783 	clz	r7, r3
 8000cee:	2f00      	cmp	r7, #0
 8000cf0:	d147      	bne.n	8000d82 <__udivmoddi4+0x156>
 8000cf2:	428b      	cmp	r3, r1
 8000cf4:	d302      	bcc.n	8000cfc <__udivmoddi4+0xd0>
 8000cf6:	4282      	cmp	r2, r0
 8000cf8:	f200 80fa 	bhi.w	8000ef0 <__udivmoddi4+0x2c4>
 8000cfc:	1a84      	subs	r4, r0, r2
 8000cfe:	eb61 0303 	sbc.w	r3, r1, r3
 8000d02:	2001      	movs	r0, #1
 8000d04:	4698      	mov	r8, r3
 8000d06:	2e00      	cmp	r6, #0
 8000d08:	d0e0      	beq.n	8000ccc <__udivmoddi4+0xa0>
 8000d0a:	e9c6 4800 	strd	r4, r8, [r6]
 8000d0e:	e7dd      	b.n	8000ccc <__udivmoddi4+0xa0>
 8000d10:	b902      	cbnz	r2, 8000d14 <__udivmoddi4+0xe8>
 8000d12:	deff      	udf	#255	; 0xff
 8000d14:	fab2 f282 	clz	r2, r2
 8000d18:	2a00      	cmp	r2, #0
 8000d1a:	f040 808f 	bne.w	8000e3c <__udivmoddi4+0x210>
 8000d1e:	1b49      	subs	r1, r1, r5
 8000d20:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000d24:	fa1f f885 	uxth.w	r8, r5
 8000d28:	2701      	movs	r7, #1
 8000d2a:	fbb1 fcfe 	udiv	ip, r1, lr
 8000d2e:	0c23      	lsrs	r3, r4, #16
 8000d30:	fb0e 111c 	mls	r1, lr, ip, r1
 8000d34:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d38:	fb08 f10c 	mul.w	r1, r8, ip
 8000d3c:	4299      	cmp	r1, r3
 8000d3e:	d907      	bls.n	8000d50 <__udivmoddi4+0x124>
 8000d40:	18eb      	adds	r3, r5, r3
 8000d42:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000d46:	d202      	bcs.n	8000d4e <__udivmoddi4+0x122>
 8000d48:	4299      	cmp	r1, r3
 8000d4a:	f200 80cd 	bhi.w	8000ee8 <__udivmoddi4+0x2bc>
 8000d4e:	4684      	mov	ip, r0
 8000d50:	1a59      	subs	r1, r3, r1
 8000d52:	b2a3      	uxth	r3, r4
 8000d54:	fbb1 f0fe 	udiv	r0, r1, lr
 8000d58:	fb0e 1410 	mls	r4, lr, r0, r1
 8000d5c:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000d60:	fb08 f800 	mul.w	r8, r8, r0
 8000d64:	45a0      	cmp	r8, r4
 8000d66:	d907      	bls.n	8000d78 <__udivmoddi4+0x14c>
 8000d68:	192c      	adds	r4, r5, r4
 8000d6a:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d6e:	d202      	bcs.n	8000d76 <__udivmoddi4+0x14a>
 8000d70:	45a0      	cmp	r8, r4
 8000d72:	f200 80b6 	bhi.w	8000ee2 <__udivmoddi4+0x2b6>
 8000d76:	4618      	mov	r0, r3
 8000d78:	eba4 0408 	sub.w	r4, r4, r8
 8000d7c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000d80:	e79f      	b.n	8000cc2 <__udivmoddi4+0x96>
 8000d82:	f1c7 0c20 	rsb	ip, r7, #32
 8000d86:	40bb      	lsls	r3, r7
 8000d88:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000d8c:	ea4e 0e03 	orr.w	lr, lr, r3
 8000d90:	fa01 f407 	lsl.w	r4, r1, r7
 8000d94:	fa20 f50c 	lsr.w	r5, r0, ip
 8000d98:	fa21 f30c 	lsr.w	r3, r1, ip
 8000d9c:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000da0:	4325      	orrs	r5, r4
 8000da2:	fbb3 f9f8 	udiv	r9, r3, r8
 8000da6:	0c2c      	lsrs	r4, r5, #16
 8000da8:	fb08 3319 	mls	r3, r8, r9, r3
 8000dac:	fa1f fa8e 	uxth.w	sl, lr
 8000db0:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000db4:	fb09 f40a 	mul.w	r4, r9, sl
 8000db8:	429c      	cmp	r4, r3
 8000dba:	fa02 f207 	lsl.w	r2, r2, r7
 8000dbe:	fa00 f107 	lsl.w	r1, r0, r7
 8000dc2:	d90b      	bls.n	8000ddc <__udivmoddi4+0x1b0>
 8000dc4:	eb1e 0303 	adds.w	r3, lr, r3
 8000dc8:	f109 30ff 	add.w	r0, r9, #4294967295
 8000dcc:	f080 8087 	bcs.w	8000ede <__udivmoddi4+0x2b2>
 8000dd0:	429c      	cmp	r4, r3
 8000dd2:	f240 8084 	bls.w	8000ede <__udivmoddi4+0x2b2>
 8000dd6:	f1a9 0902 	sub.w	r9, r9, #2
 8000dda:	4473      	add	r3, lr
 8000ddc:	1b1b      	subs	r3, r3, r4
 8000dde:	b2ad      	uxth	r5, r5
 8000de0:	fbb3 f0f8 	udiv	r0, r3, r8
 8000de4:	fb08 3310 	mls	r3, r8, r0, r3
 8000de8:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000dec:	fb00 fa0a 	mul.w	sl, r0, sl
 8000df0:	45a2      	cmp	sl, r4
 8000df2:	d908      	bls.n	8000e06 <__udivmoddi4+0x1da>
 8000df4:	eb1e 0404 	adds.w	r4, lr, r4
 8000df8:	f100 33ff 	add.w	r3, r0, #4294967295
 8000dfc:	d26b      	bcs.n	8000ed6 <__udivmoddi4+0x2aa>
 8000dfe:	45a2      	cmp	sl, r4
 8000e00:	d969      	bls.n	8000ed6 <__udivmoddi4+0x2aa>
 8000e02:	3802      	subs	r0, #2
 8000e04:	4474      	add	r4, lr
 8000e06:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000e0a:	fba0 8902 	umull	r8, r9, r0, r2
 8000e0e:	eba4 040a 	sub.w	r4, r4, sl
 8000e12:	454c      	cmp	r4, r9
 8000e14:	46c2      	mov	sl, r8
 8000e16:	464b      	mov	r3, r9
 8000e18:	d354      	bcc.n	8000ec4 <__udivmoddi4+0x298>
 8000e1a:	d051      	beq.n	8000ec0 <__udivmoddi4+0x294>
 8000e1c:	2e00      	cmp	r6, #0
 8000e1e:	d069      	beq.n	8000ef4 <__udivmoddi4+0x2c8>
 8000e20:	ebb1 050a 	subs.w	r5, r1, sl
 8000e24:	eb64 0403 	sbc.w	r4, r4, r3
 8000e28:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000e2c:	40fd      	lsrs	r5, r7
 8000e2e:	40fc      	lsrs	r4, r7
 8000e30:	ea4c 0505 	orr.w	r5, ip, r5
 8000e34:	e9c6 5400 	strd	r5, r4, [r6]
 8000e38:	2700      	movs	r7, #0
 8000e3a:	e747      	b.n	8000ccc <__udivmoddi4+0xa0>
 8000e3c:	f1c2 0320 	rsb	r3, r2, #32
 8000e40:	fa20 f703 	lsr.w	r7, r0, r3
 8000e44:	4095      	lsls	r5, r2
 8000e46:	fa01 f002 	lsl.w	r0, r1, r2
 8000e4a:	fa21 f303 	lsr.w	r3, r1, r3
 8000e4e:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000e52:	4338      	orrs	r0, r7
 8000e54:	0c01      	lsrs	r1, r0, #16
 8000e56:	fbb3 f7fe 	udiv	r7, r3, lr
 8000e5a:	fa1f f885 	uxth.w	r8, r5
 8000e5e:	fb0e 3317 	mls	r3, lr, r7, r3
 8000e62:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e66:	fb07 f308 	mul.w	r3, r7, r8
 8000e6a:	428b      	cmp	r3, r1
 8000e6c:	fa04 f402 	lsl.w	r4, r4, r2
 8000e70:	d907      	bls.n	8000e82 <__udivmoddi4+0x256>
 8000e72:	1869      	adds	r1, r5, r1
 8000e74:	f107 3cff 	add.w	ip, r7, #4294967295
 8000e78:	d22f      	bcs.n	8000eda <__udivmoddi4+0x2ae>
 8000e7a:	428b      	cmp	r3, r1
 8000e7c:	d92d      	bls.n	8000eda <__udivmoddi4+0x2ae>
 8000e7e:	3f02      	subs	r7, #2
 8000e80:	4429      	add	r1, r5
 8000e82:	1acb      	subs	r3, r1, r3
 8000e84:	b281      	uxth	r1, r0
 8000e86:	fbb3 f0fe 	udiv	r0, r3, lr
 8000e8a:	fb0e 3310 	mls	r3, lr, r0, r3
 8000e8e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e92:	fb00 f308 	mul.w	r3, r0, r8
 8000e96:	428b      	cmp	r3, r1
 8000e98:	d907      	bls.n	8000eaa <__udivmoddi4+0x27e>
 8000e9a:	1869      	adds	r1, r5, r1
 8000e9c:	f100 3cff 	add.w	ip, r0, #4294967295
 8000ea0:	d217      	bcs.n	8000ed2 <__udivmoddi4+0x2a6>
 8000ea2:	428b      	cmp	r3, r1
 8000ea4:	d915      	bls.n	8000ed2 <__udivmoddi4+0x2a6>
 8000ea6:	3802      	subs	r0, #2
 8000ea8:	4429      	add	r1, r5
 8000eaa:	1ac9      	subs	r1, r1, r3
 8000eac:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000eb0:	e73b      	b.n	8000d2a <__udivmoddi4+0xfe>
 8000eb2:	4637      	mov	r7, r6
 8000eb4:	4630      	mov	r0, r6
 8000eb6:	e709      	b.n	8000ccc <__udivmoddi4+0xa0>
 8000eb8:	4607      	mov	r7, r0
 8000eba:	e6e7      	b.n	8000c8c <__udivmoddi4+0x60>
 8000ebc:	4618      	mov	r0, r3
 8000ebe:	e6fb      	b.n	8000cb8 <__udivmoddi4+0x8c>
 8000ec0:	4541      	cmp	r1, r8
 8000ec2:	d2ab      	bcs.n	8000e1c <__udivmoddi4+0x1f0>
 8000ec4:	ebb8 0a02 	subs.w	sl, r8, r2
 8000ec8:	eb69 020e 	sbc.w	r2, r9, lr
 8000ecc:	3801      	subs	r0, #1
 8000ece:	4613      	mov	r3, r2
 8000ed0:	e7a4      	b.n	8000e1c <__udivmoddi4+0x1f0>
 8000ed2:	4660      	mov	r0, ip
 8000ed4:	e7e9      	b.n	8000eaa <__udivmoddi4+0x27e>
 8000ed6:	4618      	mov	r0, r3
 8000ed8:	e795      	b.n	8000e06 <__udivmoddi4+0x1da>
 8000eda:	4667      	mov	r7, ip
 8000edc:	e7d1      	b.n	8000e82 <__udivmoddi4+0x256>
 8000ede:	4681      	mov	r9, r0
 8000ee0:	e77c      	b.n	8000ddc <__udivmoddi4+0x1b0>
 8000ee2:	3802      	subs	r0, #2
 8000ee4:	442c      	add	r4, r5
 8000ee6:	e747      	b.n	8000d78 <__udivmoddi4+0x14c>
 8000ee8:	f1ac 0c02 	sub.w	ip, ip, #2
 8000eec:	442b      	add	r3, r5
 8000eee:	e72f      	b.n	8000d50 <__udivmoddi4+0x124>
 8000ef0:	4638      	mov	r0, r7
 8000ef2:	e708      	b.n	8000d06 <__udivmoddi4+0xda>
 8000ef4:	4637      	mov	r7, r6
 8000ef6:	e6e9      	b.n	8000ccc <__udivmoddi4+0xa0>

08000ef8 <__aeabi_idiv0>:
 8000ef8:	4770      	bx	lr
 8000efa:	bf00      	nop

08000efc <conv_HEX_to_BIN>:

//**************** KISS *************************************************************************************************************
bool KISS_FLAG[FLAG_SIZE] = { 1, 1, 0, 0, 0, 0, 0, 0 };

//Conversion functions
void conv_HEX_to_BIN(uint8_t hex_byte_in, bool *bin_byte_out){
 8000efc:	b480      	push	{r7}
 8000efe:	b085      	sub	sp, #20
 8000f00:	af00      	add	r7, sp, #0
 8000f02:	4603      	mov	r3, r0
 8000f04:	6039      	str	r1, [r7, #0]
 8000f06:	71fb      	strb	r3, [r7, #7]
    int temp;

    //sprintf(uartData, "\nByte value            = %d\nBinary value[LSB:MSB] =",hex_byte_in);
	//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);

    for(int i = 0; i < 8; i++){
 8000f08:	2300      	movs	r3, #0
 8000f0a:	60fb      	str	r3, [r7, #12]
 8000f0c:	e018      	b.n	8000f40 <conv_HEX_to_BIN+0x44>
        temp = hex_byte_in >> i;
 8000f0e:	79fa      	ldrb	r2, [r7, #7]
 8000f10:	68fb      	ldr	r3, [r7, #12]
 8000f12:	fa42 f303 	asr.w	r3, r2, r3
 8000f16:	60bb      	str	r3, [r7, #8]
        temp = temp%2;
 8000f18:	68bb      	ldr	r3, [r7, #8]
 8000f1a:	2b00      	cmp	r3, #0
 8000f1c:	f003 0301 	and.w	r3, r3, #1
 8000f20:	bfb8      	it	lt
 8000f22:	425b      	neglt	r3, r3
 8000f24:	60bb      	str	r3, [r7, #8]

        //sprintf(uartData, " %d ",temp);
		//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);

        *(bin_byte_out+i) = temp;
 8000f26:	68fb      	ldr	r3, [r7, #12]
 8000f28:	683a      	ldr	r2, [r7, #0]
 8000f2a:	4413      	add	r3, r2
 8000f2c:	68ba      	ldr	r2, [r7, #8]
 8000f2e:	2a00      	cmp	r2, #0
 8000f30:	bf14      	ite	ne
 8000f32:	2201      	movne	r2, #1
 8000f34:	2200      	moveq	r2, #0
 8000f36:	b2d2      	uxtb	r2, r2
 8000f38:	701a      	strb	r2, [r3, #0]
    for(int i = 0; i < 8; i++){
 8000f3a:	68fb      	ldr	r3, [r7, #12]
 8000f3c:	3301      	adds	r3, #1
 8000f3e:	60fb      	str	r3, [r7, #12]
 8000f40:	68fb      	ldr	r3, [r7, #12]
 8000f42:	2b07      	cmp	r3, #7
 8000f44:	dde3      	ble.n	8000f0e <conv_HEX_to_BIN+0x12>
    }

    //sprintf(uartData, "\n");
	//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
}
 8000f46:	bf00      	nop
 8000f48:	3714      	adds	r7, #20
 8000f4a:	46bd      	mov	sp, r7
 8000f4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f50:	4770      	bx	lr
	...

08000f54 <init_AX25>:
	return acc;
}

//General Program
//****************************************************************************************************************
void init_AX25(){
 8000f54:	b580      	push	{r7, lr}
 8000f56:	af00      	add	r7, sp, #0
	HAL_UART_Receive_IT(&huart2, &(UART_packet.input), UART_RX_IT_CNT);
 8000f58:	2201      	movs	r2, #1
 8000f5a:	4909      	ldr	r1, [pc, #36]	; (8000f80 <init_AX25+0x2c>)
 8000f5c:	4809      	ldr	r0, [pc, #36]	; (8000f84 <init_AX25+0x30>)
 8000f5e:	f004 fc0f 	bl	8005780 <HAL_UART_Receive_IT>
	UART_packet.flags = 0;
 8000f62:	4b09      	ldr	r3, [pc, #36]	; (8000f88 <init_AX25+0x34>)
 8000f64:	2200      	movs	r2, #0
 8000f66:	609a      	str	r2, [r3, #8]
	UART_packet.got_packet = false;
 8000f68:	4b07      	ldr	r3, [pc, #28]	; (8000f88 <init_AX25+0x34>)
 8000f6a:	2200      	movs	r2, #0
 8000f6c:	735a      	strb	r2, [r3, #13]
	UART_packet.rx_cnt = 0;
 8000f6e:	4b06      	ldr	r3, [pc, #24]	; (8000f88 <init_AX25+0x34>)
 8000f70:	2200      	movs	r2, #0
 8000f72:	601a      	str	r2, [r3, #0]
	UART_packet.received_byte_cnt = 0;
 8000f74:	4b04      	ldr	r3, [pc, #16]	; (8000f88 <init_AX25+0x34>)
 8000f76:	2200      	movs	r2, #0
 8000f78:	605a      	str	r2, [r3, #4]
}
 8000f7a:	bf00      	nop
 8000f7c:	bd80      	pop	{r7, pc}
 8000f7e:	bf00      	nop
 8000f80:	20001418 	.word	0x20001418
 8000f84:	20003d60 	.word	0x20003d60
 8000f88:	2000140c 	.word	0x2000140c

08000f8c <tx_rx>:

void tx_rx() {
 8000f8c:	b580      	push	{r7, lr}
 8000f8e:	b082      	sub	sp, #8
 8000f90:	af00      	add	r7, sp, #0
	if (changeMode) {
 8000f92:	4b19      	ldr	r3, [pc, #100]	; (8000ff8 <tx_rx+0x6c>)
 8000f94:	781b      	ldrb	r3, [r3, #0]
 8000f96:	2b00      	cmp	r3, #0
 8000f98:	d004      	beq.n	8000fa4 <tx_rx+0x18>
		changeMode = 0;
 8000f9a:	4b17      	ldr	r3, [pc, #92]	; (8000ff8 <tx_rx+0x6c>)
 8000f9c:	2200      	movs	r2, #0
 8000f9e:	701a      	strb	r2, [r3, #0]
		toggleMode();
 8000fa0:	f000 fecc 	bl	8001d3c <toggleMode>
	}

	if (mode) {
 8000fa4:	4b15      	ldr	r3, [pc, #84]	; (8000ffc <tx_rx+0x70>)
 8000fa6:	781b      	ldrb	r3, [r3, #0]
 8000fa8:	2b00      	cmp	r3, #0
 8000faa:	d002      	beq.n	8000fb2 <tx_rx+0x26>

		receiving_KISS();
 8000fac:	f000 fc2a 	bl	8001804 <receiving_KISS>

			streamGet();
		}
		HAL_Delay(1000);
	}
}
 8000fb0:	e01d      	b.n	8000fee <tx_rx+0x62>
		for(int i = 0;i<10;i++){
 8000fb2:	2300      	movs	r3, #0
 8000fb4:	607b      	str	r3, [r7, #4]
 8000fb6:	e013      	b.n	8000fe0 <tx_rx+0x54>
			sprintf(uartData, "Running streamGet() %d time\r\n",i);
 8000fb8:	687a      	ldr	r2, [r7, #4]
 8000fba:	4911      	ldr	r1, [pc, #68]	; (8001000 <tx_rx+0x74>)
 8000fbc:	4811      	ldr	r0, [pc, #68]	; (8001004 <tx_rx+0x78>)
 8000fbe:	f005 fb37 	bl	8006630 <siprintf>
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8000fc2:	4810      	ldr	r0, [pc, #64]	; (8001004 <tx_rx+0x78>)
 8000fc4:	f7ff f924 	bl	8000210 <strlen>
 8000fc8:	4603      	mov	r3, r0
 8000fca:	b29a      	uxth	r2, r3
 8000fcc:	230a      	movs	r3, #10
 8000fce:	490d      	ldr	r1, [pc, #52]	; (8001004 <tx_rx+0x78>)
 8000fd0:	480d      	ldr	r0, [pc, #52]	; (8001008 <tx_rx+0x7c>)
 8000fd2:	f004 fb3c 	bl	800564e <HAL_UART_Transmit>
			streamGet();
 8000fd6:	f001 fa37 	bl	8002448 <streamGet>
		for(int i = 0;i<10;i++){
 8000fda:	687b      	ldr	r3, [r7, #4]
 8000fdc:	3301      	adds	r3, #1
 8000fde:	607b      	str	r3, [r7, #4]
 8000fe0:	687b      	ldr	r3, [r7, #4]
 8000fe2:	2b09      	cmp	r3, #9
 8000fe4:	dde8      	ble.n	8000fb8 <tx_rx+0x2c>
		HAL_Delay(1000);
 8000fe6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000fea:	f002 f851 	bl	8003090 <HAL_Delay>
}
 8000fee:	bf00      	nop
 8000ff0:	3708      	adds	r7, #8
 8000ff2:	46bd      	mov	sp, r7
 8000ff4:	bd80      	pop	{r7, pc}
 8000ff6:	bf00      	nop
 8000ff8:	20000099 	.word	0x20000099
 8000ffc:	20003d08 	.word	0x20003d08
 8001000:	08007cf8 	.word	0x08007cf8
 8001004:	20001f3c 	.word	0x20001f3c
 8001008:	20003d60 	.word	0x20003d60

0800100c <generate_address>:

void generate_address(){
 800100c:	b480      	push	{r7}
 800100e:	b083      	sub	sp, #12
 8001010:	af00      	add	r7, sp, #0
	for(int i = 0; i < address_len/2;i++){
 8001012:	2300      	movs	r3, #0
 8001014:	607b      	str	r3, [r7, #4]
 8001016:	e00f      	b.n	8001038 <generate_address+0x2c>
		local_address[i] = (i%2) ? true : false;
 8001018:	687b      	ldr	r3, [r7, #4]
 800101a:	f003 0301 	and.w	r3, r3, #1
 800101e:	2b00      	cmp	r3, #0
 8001020:	bf14      	ite	ne
 8001022:	2301      	movne	r3, #1
 8001024:	2300      	moveq	r3, #0
 8001026:	b2d9      	uxtb	r1, r3
 8001028:	4a08      	ldr	r2, [pc, #32]	; (800104c <generate_address+0x40>)
 800102a:	687b      	ldr	r3, [r7, #4]
 800102c:	4413      	add	r3, r2
 800102e:	460a      	mov	r2, r1
 8001030:	701a      	strb	r2, [r3, #0]
	for(int i = 0; i < address_len/2;i++){
 8001032:	687b      	ldr	r3, [r7, #4]
 8001034:	3301      	adds	r3, #1
 8001036:	607b      	str	r3, [r7, #4]
 8001038:	687b      	ldr	r3, [r7, #4]
 800103a:	2b37      	cmp	r3, #55	; 0x37
 800103c:	ddec      	ble.n	8001018 <generate_address+0xc>
	}
}
 800103e:	bf00      	nop
 8001040:	370c      	adds	r7, #12
 8001042:	46bd      	mov	sp, r7
 8001044:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001048:	4770      	bx	lr
 800104a:	bf00      	nop
 800104c:	200013d4 	.word	0x200013d4

08001050 <compare_address>:

bool compare_address(bool *addr){
 8001050:	b580      	push	{r7, lr}
 8001052:	b084      	sub	sp, #16
 8001054:	af00      	add	r7, sp, #0
 8001056:	6078      	str	r0, [r7, #4]
	generate_address();
 8001058:	f7ff ffd8 	bl	800100c <generate_address>
	for(int i = 0;i < address_len/2;i++){
 800105c:	2300      	movs	r3, #0
 800105e:	60fb      	str	r3, [r7, #12]
 8001060:	e00e      	b.n	8001080 <compare_address+0x30>
		if(addr[i] != local_address[i]){
 8001062:	68fb      	ldr	r3, [r7, #12]
 8001064:	687a      	ldr	r2, [r7, #4]
 8001066:	4413      	add	r3, r2
 8001068:	781a      	ldrb	r2, [r3, #0]
 800106a:	4909      	ldr	r1, [pc, #36]	; (8001090 <compare_address+0x40>)
 800106c:	68fb      	ldr	r3, [r7, #12]
 800106e:	440b      	add	r3, r1
 8001070:	781b      	ldrb	r3, [r3, #0]
 8001072:	429a      	cmp	r2, r3
 8001074:	d001      	beq.n	800107a <compare_address+0x2a>
			return false;
 8001076:	2300      	movs	r3, #0
 8001078:	e006      	b.n	8001088 <compare_address+0x38>
	for(int i = 0;i < address_len/2;i++){
 800107a:	68fb      	ldr	r3, [r7, #12]
 800107c:	3301      	adds	r3, #1
 800107e:	60fb      	str	r3, [r7, #12]
 8001080:	68fb      	ldr	r3, [r7, #12]
 8001082:	2b37      	cmp	r3, #55	; 0x37
 8001084:	dded      	ble.n	8001062 <compare_address+0x12>
		}
	}
	return true;
 8001086:	2301      	movs	r3, #1
}
 8001088:	4618      	mov	r0, r3
 800108a:	3710      	adds	r7, #16
 800108c:	46bd      	mov	sp, r7
 800108e:	bd80      	pop	{r7, pc}
 8001090:	200013d4 	.word	0x200013d4

08001094 <output_AX25>:
	output_AX25();

	HAL_GPIO_WritePin(PTT_GPIO_Port, PTT_Pin, GPIO_PIN_RESET); //stop transmitting
}

void output_AX25(){
 8001094:	b580      	push	{r7, lr}
 8001096:	b082      	sub	sp, #8
 8001098:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 800109a:	4b2c      	ldr	r3, [pc, #176]	; (800114c <output_AX25+0xb8>)
 800109c:	607b      	str	r3, [r7, #4]

	bitToAudio(AX25TBYTE, FLAG_SIZE,1); //start flag
 800109e:	2201      	movs	r2, #1
 80010a0:	2108      	movs	r1, #8
 80010a2:	482b      	ldr	r0, [pc, #172]	; (8001150 <output_AX25+0xbc>)
 80010a4:	f000 ff90 	bl	8001fc8 <bitToAudio>

	bitToAudio(local_packet->address, address_len,0); //lsb first
 80010a8:	687b      	ldr	r3, [r7, #4]
 80010aa:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80010ae:	3310      	adds	r3, #16
 80010b0:	681b      	ldr	r3, [r3, #0]
 80010b2:	2200      	movs	r2, #0
 80010b4:	2170      	movs	r1, #112	; 0x70
 80010b6:	4618      	mov	r0, r3
 80010b8:	f000 ff86 	bl	8001fc8 <bitToAudio>
	bitToAudio(local_packet->control,control_len,0);	//lsb first
 80010bc:	687b      	ldr	r3, [r7, #4]
 80010be:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80010c2:	3314      	adds	r3, #20
 80010c4:	681b      	ldr	r3, [r3, #0]
 80010c6:	2200      	movs	r2, #0
 80010c8:	2108      	movs	r1, #8
 80010ca:	4618      	mov	r0, r3
 80010cc:	f000 ff7c 	bl	8001fc8 <bitToAudio>
	bitToAudio(local_packet->PID,PID_len,0);			//lsb first
 80010d0:	687b      	ldr	r3, [r7, #4]
 80010d2:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80010d6:	3318      	adds	r3, #24
 80010d8:	681b      	ldr	r3, [r3, #0]
 80010da:	2200      	movs	r2, #0
 80010dc:	2108      	movs	r1, #8
 80010de:	4618      	mov	r0, r3
 80010e0:	f000 ff72 	bl	8001fc8 <bitToAudio>
	bitToAudio(local_packet->Info,local_packet->Info_Len + local_packet->stuffed_notFCS,0);		//lsb first
 80010e4:	687b      	ldr	r3, [r7, #4]
 80010e6:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80010ea:	331c      	adds	r3, #28
 80010ec:	6818      	ldr	r0, [r3, #0]
 80010ee:	687b      	ldr	r3, [r7, #4]
 80010f0:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80010f4:	681a      	ldr	r2, [r3, #0]
 80010f6:	687b      	ldr	r3, [r7, #4]
 80010f8:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80010fc:	3310      	adds	r3, #16
 80010fe:	681b      	ldr	r3, [r3, #0]
 8001100:	4413      	add	r3, r2
 8001102:	2200      	movs	r2, #0
 8001104:	4619      	mov	r1, r3
 8001106:	f000 ff5f 	bl	8001fc8 <bitToAudio>
	bitToAudio(local_packet->FCS,FCS_len + local_packet->stuffed_FCS,1);			//msb first
 800110a:	687b      	ldr	r3, [r7, #4]
 800110c:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001110:	3304      	adds	r3, #4
 8001112:	6818      	ldr	r0, [r3, #0]
 8001114:	687b      	ldr	r3, [r7, #4]
 8001116:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 800111a:	3314      	adds	r3, #20
 800111c:	681b      	ldr	r3, [r3, #0]
 800111e:	3310      	adds	r3, #16
 8001120:	2201      	movs	r2, #1
 8001122:	4619      	mov	r1, r3
 8001124:	f000 ff50 	bl	8001fc8 <bitToAudio>

	bitToAudio(AX25TBYTE, FLAG_SIZE,1);//stop flag
 8001128:	2201      	movs	r2, #1
 800112a:	2108      	movs	r1, #8
 800112c:	4808      	ldr	r0, [pc, #32]	; (8001150 <output_AX25+0xbc>)
 800112e:	f000 ff4b 	bl	8001fc8 <bitToAudio>

	free(local_packet->FCS);		   //deallocate memory for FCS Field
 8001132:	687b      	ldr	r3, [r7, #4]
 8001134:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001138:	3304      	adds	r3, #4
 800113a:	681b      	ldr	r3, [r3, #0]
 800113c:	4618      	mov	r0, r3
 800113e:	f005 f9a3 	bl	8006488 <free>
}
 8001142:	bf00      	nop
 8001144:	3708      	adds	r7, #8
 8001146:	46bd      	mov	sp, r7
 8001148:	bd80      	pop	{r7, pc}
 800114a:	bf00      	nop
 800114c:	200000b0 	.word	0x200000b0
 8001150:	20000000 	.word	0x20000000

08001154 <print_KISS>:
	struct UART_INPUT* local_UART_packet = &global_packet;

	HAL_UART_Transmit(&huart2, local_UART_packet->HEX_KISS_PACKET, KISS_SIZE, 10);
}

void print_KISS(){
 8001154:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001156:	b08d      	sub	sp, #52	; 0x34
 8001158:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 800115a:	4bad      	ldr	r3, [pc, #692]	; (8001410 <print_KISS+0x2bc>)
 800115c:	60bb      	str	r3, [r7, #8]
	int bytecnt = local_packet->byte_cnt;
 800115e:	68bb      	ldr	r3, [r7, #8]
 8001160:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001164:	330c      	adds	r3, #12
 8001166:	681b      	ldr	r3, [r3, #0]
 8001168:	607b      	str	r3, [r7, #4]
	bool *curr_mem;
	sprintf(uartData, "\nPrinting KISS_PACKET... All fields printed [MSB:LSB]\n");
 800116a:	4baa      	ldr	r3, [pc, #680]	; (8001414 <print_KISS+0x2c0>)
 800116c:	4aaa      	ldr	r2, [pc, #680]	; (8001418 <print_KISS+0x2c4>)
 800116e:	4614      	mov	r4, r2
 8001170:	469c      	mov	ip, r3
 8001172:	f104 0e30 	add.w	lr, r4, #48	; 0x30
 8001176:	4665      	mov	r5, ip
 8001178:	4626      	mov	r6, r4
 800117a:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800117c:	6028      	str	r0, [r5, #0]
 800117e:	6069      	str	r1, [r5, #4]
 8001180:	60aa      	str	r2, [r5, #8]
 8001182:	60eb      	str	r3, [r5, #12]
 8001184:	3410      	adds	r4, #16
 8001186:	f10c 0c10 	add.w	ip, ip, #16
 800118a:	4574      	cmp	r4, lr
 800118c:	d1f3      	bne.n	8001176 <print_KISS+0x22>
 800118e:	4663      	mov	r3, ip
 8001190:	4622      	mov	r2, r4
 8001192:	6810      	ldr	r0, [r2, #0]
 8001194:	6018      	str	r0, [r3, #0]
 8001196:	8891      	ldrh	r1, [r2, #4]
 8001198:	7992      	ldrb	r2, [r2, #6]
 800119a:	8099      	strh	r1, [r3, #4]
 800119c:	719a      	strb	r2, [r3, #6]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800119e:	489d      	ldr	r0, [pc, #628]	; (8001414 <print_KISS+0x2c0>)
 80011a0:	f7ff f836 	bl	8000210 <strlen>
 80011a4:	4603      	mov	r3, r0
 80011a6:	b29a      	uxth	r2, r3
 80011a8:	230a      	movs	r3, #10
 80011aa:	499a      	ldr	r1, [pc, #616]	; (8001414 <print_KISS+0x2c0>)
 80011ac:	489b      	ldr	r0, [pc, #620]	; (800141c <print_KISS+0x2c8>)
 80011ae:	f004 fa4e 	bl	800564e <HAL_UART_Transmit>

	//Print Start Flag
	curr_mem = (local_packet->address-16);//Subtract 16 to start at the flag start
 80011b2:	68bb      	ldr	r3, [r7, #8]
 80011b4:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80011b8:	3310      	adds	r3, #16
 80011ba:	681b      	ldr	r3, [r3, #0]
 80011bc:	3b10      	subs	r3, #16
 80011be:	62fb      	str	r3, [r7, #44]	; 0x2c
	sprintf(uartData, "Start flag      =");
 80011c0:	4a94      	ldr	r2, [pc, #592]	; (8001414 <print_KISS+0x2c0>)
 80011c2:	4b97      	ldr	r3, [pc, #604]	; (8001420 <print_KISS+0x2cc>)
 80011c4:	4615      	mov	r5, r2
 80011c6:	461c      	mov	r4, r3
 80011c8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80011ca:	6028      	str	r0, [r5, #0]
 80011cc:	6069      	str	r1, [r5, #4]
 80011ce:	60aa      	str	r2, [r5, #8]
 80011d0:	60eb      	str	r3, [r5, #12]
 80011d2:	8823      	ldrh	r3, [r4, #0]
 80011d4:	822b      	strh	r3, [r5, #16]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80011d6:	488f      	ldr	r0, [pc, #572]	; (8001414 <print_KISS+0x2c0>)
 80011d8:	f7ff f81a 	bl	8000210 <strlen>
 80011dc:	4603      	mov	r3, r0
 80011de:	b29a      	uxth	r2, r3
 80011e0:	230a      	movs	r3, #10
 80011e2:	498c      	ldr	r1, [pc, #560]	; (8001414 <print_KISS+0x2c0>)
 80011e4:	488d      	ldr	r0, [pc, #564]	; (800141c <print_KISS+0x2c8>)
 80011e6:	f004 fa32 	bl	800564e <HAL_UART_Transmit>

	for(int i = 0;i<8;i++){
 80011ea:	2300      	movs	r3, #0
 80011ec:	62bb      	str	r3, [r7, #40]	; 0x28
 80011ee:	e017      	b.n	8001220 <print_KISS+0xcc>
		sprintf(uartData, " %d ",*(curr_mem+8-i-1));
 80011f0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80011f2:	f1c3 0307 	rsb	r3, r3, #7
 80011f6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80011f8:	4413      	add	r3, r2
 80011fa:	781b      	ldrb	r3, [r3, #0]
 80011fc:	461a      	mov	r2, r3
 80011fe:	4989      	ldr	r1, [pc, #548]	; (8001424 <print_KISS+0x2d0>)
 8001200:	4884      	ldr	r0, [pc, #528]	; (8001414 <print_KISS+0x2c0>)
 8001202:	f005 fa15 	bl	8006630 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001206:	4883      	ldr	r0, [pc, #524]	; (8001414 <print_KISS+0x2c0>)
 8001208:	f7ff f802 	bl	8000210 <strlen>
 800120c:	4603      	mov	r3, r0
 800120e:	b29a      	uxth	r2, r3
 8001210:	230a      	movs	r3, #10
 8001212:	4980      	ldr	r1, [pc, #512]	; (8001414 <print_KISS+0x2c0>)
 8001214:	4881      	ldr	r0, [pc, #516]	; (800141c <print_KISS+0x2c8>)
 8001216:	f004 fa1a 	bl	800564e <HAL_UART_Transmit>
	for(int i = 0;i<8;i++){
 800121a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800121c:	3301      	adds	r3, #1
 800121e:	62bb      	str	r3, [r7, #40]	; 0x28
 8001220:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001222:	2b07      	cmp	r3, #7
 8001224:	dde4      	ble.n	80011f0 <print_KISS+0x9c>
	}
	sprintf(uartData, "\n");
 8001226:	4a7b      	ldr	r2, [pc, #492]	; (8001414 <print_KISS+0x2c0>)
 8001228:	4b7f      	ldr	r3, [pc, #508]	; (8001428 <print_KISS+0x2d4>)
 800122a:	881b      	ldrh	r3, [r3, #0]
 800122c:	8013      	strh	r3, [r2, #0]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800122e:	4879      	ldr	r0, [pc, #484]	; (8001414 <print_KISS+0x2c0>)
 8001230:	f7fe ffee 	bl	8000210 <strlen>
 8001234:	4603      	mov	r3, r0
 8001236:	b29a      	uxth	r2, r3
 8001238:	230a      	movs	r3, #10
 800123a:	4976      	ldr	r1, [pc, #472]	; (8001414 <print_KISS+0x2c0>)
 800123c:	4877      	ldr	r0, [pc, #476]	; (800141c <print_KISS+0x2c8>)
 800123e:	f004 fa06 	bl	800564e <HAL_UART_Transmit>

	//Print Address Field
	curr_mem = (local_packet->address);
 8001242:	68bb      	ldr	r3, [r7, #8]
 8001244:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001248:	3310      	adds	r3, #16
 800124a:	681b      	ldr	r3, [r3, #0]
 800124c:	62fb      	str	r3, [r7, #44]	; 0x2c
	for(int i = 0;i<address_len/8;i++){
 800124e:	2300      	movs	r3, #0
 8001250:	627b      	str	r3, [r7, #36]	; 0x24
 8001252:	e042      	b.n	80012da <print_KISS+0x186>
		sprintf(uartData, "Address Field %d =",i+1);
 8001254:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001256:	3301      	adds	r3, #1
 8001258:	461a      	mov	r2, r3
 800125a:	4974      	ldr	r1, [pc, #464]	; (800142c <print_KISS+0x2d8>)
 800125c:	486d      	ldr	r0, [pc, #436]	; (8001414 <print_KISS+0x2c0>)
 800125e:	f005 f9e7 	bl	8006630 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001262:	486c      	ldr	r0, [pc, #432]	; (8001414 <print_KISS+0x2c0>)
 8001264:	f7fe ffd4 	bl	8000210 <strlen>
 8001268:	4603      	mov	r3, r0
 800126a:	b29a      	uxth	r2, r3
 800126c:	230a      	movs	r3, #10
 800126e:	4969      	ldr	r1, [pc, #420]	; (8001414 <print_KISS+0x2c0>)
 8001270:	486a      	ldr	r0, [pc, #424]	; (800141c <print_KISS+0x2c8>)
 8001272:	f004 f9ec 	bl	800564e <HAL_UART_Transmit>

		for(int j = 0;j<8;j++){
 8001276:	2300      	movs	r3, #0
 8001278:	623b      	str	r3, [r7, #32]
 800127a:	e017      	b.n	80012ac <print_KISS+0x158>
			sprintf(uartData, " %d ",*(curr_mem+8-j-1));
 800127c:	6a3b      	ldr	r3, [r7, #32]
 800127e:	f1c3 0307 	rsb	r3, r3, #7
 8001282:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001284:	4413      	add	r3, r2
 8001286:	781b      	ldrb	r3, [r3, #0]
 8001288:	461a      	mov	r2, r3
 800128a:	4966      	ldr	r1, [pc, #408]	; (8001424 <print_KISS+0x2d0>)
 800128c:	4861      	ldr	r0, [pc, #388]	; (8001414 <print_KISS+0x2c0>)
 800128e:	f005 f9cf 	bl	8006630 <siprintf>
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001292:	4860      	ldr	r0, [pc, #384]	; (8001414 <print_KISS+0x2c0>)
 8001294:	f7fe ffbc 	bl	8000210 <strlen>
 8001298:	4603      	mov	r3, r0
 800129a:	b29a      	uxth	r2, r3
 800129c:	230a      	movs	r3, #10
 800129e:	495d      	ldr	r1, [pc, #372]	; (8001414 <print_KISS+0x2c0>)
 80012a0:	485e      	ldr	r0, [pc, #376]	; (800141c <print_KISS+0x2c8>)
 80012a2:	f004 f9d4 	bl	800564e <HAL_UART_Transmit>
		for(int j = 0;j<8;j++){
 80012a6:	6a3b      	ldr	r3, [r7, #32]
 80012a8:	3301      	adds	r3, #1
 80012aa:	623b      	str	r3, [r7, #32]
 80012ac:	6a3b      	ldr	r3, [r7, #32]
 80012ae:	2b07      	cmp	r3, #7
 80012b0:	dde4      	ble.n	800127c <print_KISS+0x128>
		}
		curr_mem += 8;
 80012b2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80012b4:	3308      	adds	r3, #8
 80012b6:	62fb      	str	r3, [r7, #44]	; 0x2c
		sprintf(uartData, "\n");
 80012b8:	4a56      	ldr	r2, [pc, #344]	; (8001414 <print_KISS+0x2c0>)
 80012ba:	4b5b      	ldr	r3, [pc, #364]	; (8001428 <print_KISS+0x2d4>)
 80012bc:	881b      	ldrh	r3, [r3, #0]
 80012be:	8013      	strh	r3, [r2, #0]
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80012c0:	4854      	ldr	r0, [pc, #336]	; (8001414 <print_KISS+0x2c0>)
 80012c2:	f7fe ffa5 	bl	8000210 <strlen>
 80012c6:	4603      	mov	r3, r0
 80012c8:	b29a      	uxth	r2, r3
 80012ca:	230a      	movs	r3, #10
 80012cc:	4951      	ldr	r1, [pc, #324]	; (8001414 <print_KISS+0x2c0>)
 80012ce:	4853      	ldr	r0, [pc, #332]	; (800141c <print_KISS+0x2c8>)
 80012d0:	f004 f9bd 	bl	800564e <HAL_UART_Transmit>
	for(int i = 0;i<address_len/8;i++){
 80012d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80012d6:	3301      	adds	r3, #1
 80012d8:	627b      	str	r3, [r7, #36]	; 0x24
 80012da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80012dc:	2b0d      	cmp	r3, #13
 80012de:	ddb9      	ble.n	8001254 <print_KISS+0x100>
	}

	//Print Control Field
	curr_mem = (local_packet->control);//Subtract 8 to start at the flag start
 80012e0:	68bb      	ldr	r3, [r7, #8]
 80012e2:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80012e6:	3314      	adds	r3, #20
 80012e8:	681b      	ldr	r3, [r3, #0]
 80012ea:	62fb      	str	r3, [r7, #44]	; 0x2c
	sprintf(uartData, "Control Field   =");
 80012ec:	4a49      	ldr	r2, [pc, #292]	; (8001414 <print_KISS+0x2c0>)
 80012ee:	4b50      	ldr	r3, [pc, #320]	; (8001430 <print_KISS+0x2dc>)
 80012f0:	4615      	mov	r5, r2
 80012f2:	461c      	mov	r4, r3
 80012f4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80012f6:	6028      	str	r0, [r5, #0]
 80012f8:	6069      	str	r1, [r5, #4]
 80012fa:	60aa      	str	r2, [r5, #8]
 80012fc:	60eb      	str	r3, [r5, #12]
 80012fe:	8823      	ldrh	r3, [r4, #0]
 8001300:	822b      	strh	r3, [r5, #16]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001302:	4844      	ldr	r0, [pc, #272]	; (8001414 <print_KISS+0x2c0>)
 8001304:	f7fe ff84 	bl	8000210 <strlen>
 8001308:	4603      	mov	r3, r0
 800130a:	b29a      	uxth	r2, r3
 800130c:	230a      	movs	r3, #10
 800130e:	4941      	ldr	r1, [pc, #260]	; (8001414 <print_KISS+0x2c0>)
 8001310:	4842      	ldr	r0, [pc, #264]	; (800141c <print_KISS+0x2c8>)
 8001312:	f004 f99c 	bl	800564e <HAL_UART_Transmit>

	for(int i = 0;i<8;i++){
 8001316:	2300      	movs	r3, #0
 8001318:	61fb      	str	r3, [r7, #28]
 800131a:	e017      	b.n	800134c <print_KISS+0x1f8>
		sprintf(uartData, " %d ",*(curr_mem+8-i-1));
 800131c:	69fb      	ldr	r3, [r7, #28]
 800131e:	f1c3 0307 	rsb	r3, r3, #7
 8001322:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001324:	4413      	add	r3, r2
 8001326:	781b      	ldrb	r3, [r3, #0]
 8001328:	461a      	mov	r2, r3
 800132a:	493e      	ldr	r1, [pc, #248]	; (8001424 <print_KISS+0x2d0>)
 800132c:	4839      	ldr	r0, [pc, #228]	; (8001414 <print_KISS+0x2c0>)
 800132e:	f005 f97f 	bl	8006630 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001332:	4838      	ldr	r0, [pc, #224]	; (8001414 <print_KISS+0x2c0>)
 8001334:	f7fe ff6c 	bl	8000210 <strlen>
 8001338:	4603      	mov	r3, r0
 800133a:	b29a      	uxth	r2, r3
 800133c:	230a      	movs	r3, #10
 800133e:	4935      	ldr	r1, [pc, #212]	; (8001414 <print_KISS+0x2c0>)
 8001340:	4836      	ldr	r0, [pc, #216]	; (800141c <print_KISS+0x2c8>)
 8001342:	f004 f984 	bl	800564e <HAL_UART_Transmit>
	for(int i = 0;i<8;i++){
 8001346:	69fb      	ldr	r3, [r7, #28]
 8001348:	3301      	adds	r3, #1
 800134a:	61fb      	str	r3, [r7, #28]
 800134c:	69fb      	ldr	r3, [r7, #28]
 800134e:	2b07      	cmp	r3, #7
 8001350:	dde4      	ble.n	800131c <print_KISS+0x1c8>
	}
	sprintf(uartData, "\n");
 8001352:	4a30      	ldr	r2, [pc, #192]	; (8001414 <print_KISS+0x2c0>)
 8001354:	4b34      	ldr	r3, [pc, #208]	; (8001428 <print_KISS+0x2d4>)
 8001356:	881b      	ldrh	r3, [r3, #0]
 8001358:	8013      	strh	r3, [r2, #0]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800135a:	482e      	ldr	r0, [pc, #184]	; (8001414 <print_KISS+0x2c0>)
 800135c:	f7fe ff58 	bl	8000210 <strlen>
 8001360:	4603      	mov	r3, r0
 8001362:	b29a      	uxth	r2, r3
 8001364:	230a      	movs	r3, #10
 8001366:	492b      	ldr	r1, [pc, #172]	; (8001414 <print_KISS+0x2c0>)
 8001368:	482c      	ldr	r0, [pc, #176]	; (800141c <print_KISS+0x2c8>)
 800136a:	f004 f970 	bl	800564e <HAL_UART_Transmit>

	//PID
	curr_mem = (local_packet->PID);//Subtract 8 to start at the flag start
 800136e:	68bb      	ldr	r3, [r7, #8]
 8001370:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001374:	3318      	adds	r3, #24
 8001376:	681b      	ldr	r3, [r3, #0]
 8001378:	62fb      	str	r3, [r7, #44]	; 0x2c
	sprintf(uartData, "PID Field       =");
 800137a:	4a26      	ldr	r2, [pc, #152]	; (8001414 <print_KISS+0x2c0>)
 800137c:	4b2d      	ldr	r3, [pc, #180]	; (8001434 <print_KISS+0x2e0>)
 800137e:	4615      	mov	r5, r2
 8001380:	461c      	mov	r4, r3
 8001382:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001384:	6028      	str	r0, [r5, #0]
 8001386:	6069      	str	r1, [r5, #4]
 8001388:	60aa      	str	r2, [r5, #8]
 800138a:	60eb      	str	r3, [r5, #12]
 800138c:	8823      	ldrh	r3, [r4, #0]
 800138e:	822b      	strh	r3, [r5, #16]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001390:	4820      	ldr	r0, [pc, #128]	; (8001414 <print_KISS+0x2c0>)
 8001392:	f7fe ff3d 	bl	8000210 <strlen>
 8001396:	4603      	mov	r3, r0
 8001398:	b29a      	uxth	r2, r3
 800139a:	230a      	movs	r3, #10
 800139c:	491d      	ldr	r1, [pc, #116]	; (8001414 <print_KISS+0x2c0>)
 800139e:	481f      	ldr	r0, [pc, #124]	; (800141c <print_KISS+0x2c8>)
 80013a0:	f004 f955 	bl	800564e <HAL_UART_Transmit>

	for(int i = 0;i<8;i++){
 80013a4:	2300      	movs	r3, #0
 80013a6:	61bb      	str	r3, [r7, #24]
 80013a8:	e017      	b.n	80013da <print_KISS+0x286>
		sprintf(uartData, " %d ",*(curr_mem+8-i-1));
 80013aa:	69bb      	ldr	r3, [r7, #24]
 80013ac:	f1c3 0307 	rsb	r3, r3, #7
 80013b0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80013b2:	4413      	add	r3, r2
 80013b4:	781b      	ldrb	r3, [r3, #0]
 80013b6:	461a      	mov	r2, r3
 80013b8:	491a      	ldr	r1, [pc, #104]	; (8001424 <print_KISS+0x2d0>)
 80013ba:	4816      	ldr	r0, [pc, #88]	; (8001414 <print_KISS+0x2c0>)
 80013bc:	f005 f938 	bl	8006630 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80013c0:	4814      	ldr	r0, [pc, #80]	; (8001414 <print_KISS+0x2c0>)
 80013c2:	f7fe ff25 	bl	8000210 <strlen>
 80013c6:	4603      	mov	r3, r0
 80013c8:	b29a      	uxth	r2, r3
 80013ca:	230a      	movs	r3, #10
 80013cc:	4911      	ldr	r1, [pc, #68]	; (8001414 <print_KISS+0x2c0>)
 80013ce:	4813      	ldr	r0, [pc, #76]	; (800141c <print_KISS+0x2c8>)
 80013d0:	f004 f93d 	bl	800564e <HAL_UART_Transmit>
	for(int i = 0;i<8;i++){
 80013d4:	69bb      	ldr	r3, [r7, #24]
 80013d6:	3301      	adds	r3, #1
 80013d8:	61bb      	str	r3, [r7, #24]
 80013da:	69bb      	ldr	r3, [r7, #24]
 80013dc:	2b07      	cmp	r3, #7
 80013de:	dde4      	ble.n	80013aa <print_KISS+0x256>
	}
	sprintf(uartData, "\n");
 80013e0:	4a0c      	ldr	r2, [pc, #48]	; (8001414 <print_KISS+0x2c0>)
 80013e2:	4b11      	ldr	r3, [pc, #68]	; (8001428 <print_KISS+0x2d4>)
 80013e4:	881b      	ldrh	r3, [r3, #0]
 80013e6:	8013      	strh	r3, [r2, #0]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80013e8:	480a      	ldr	r0, [pc, #40]	; (8001414 <print_KISS+0x2c0>)
 80013ea:	f7fe ff11 	bl	8000210 <strlen>
 80013ee:	4603      	mov	r3, r0
 80013f0:	b29a      	uxth	r2, r3
 80013f2:	230a      	movs	r3, #10
 80013f4:	4907      	ldr	r1, [pc, #28]	; (8001414 <print_KISS+0x2c0>)
 80013f6:	4809      	ldr	r0, [pc, #36]	; (800141c <print_KISS+0x2c8>)
 80013f8:	f004 f929 	bl	800564e <HAL_UART_Transmit>

	//Print Info Field
	curr_mem = (local_packet->Info);
 80013fc:	68bb      	ldr	r3, [r7, #8]
 80013fe:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001402:	331c      	adds	r3, #28
 8001404:	681b      	ldr	r3, [r3, #0]
 8001406:	62fb      	str	r3, [r7, #44]	; 0x2c
	for(int i = 0;i<(local_packet->Info_Len/8)-1;i++){
 8001408:	2300      	movs	r3, #0
 800140a:	617b      	str	r3, [r7, #20]
 800140c:	e057      	b.n	80014be <print_KISS+0x36a>
 800140e:	bf00      	nop
 8001410:	200000b0 	.word	0x200000b0
 8001414:	20001f3c 	.word	0x20001f3c
 8001418:	08007d18 	.word	0x08007d18
 800141c:	20003d60 	.word	0x20003d60
 8001420:	08007d50 	.word	0x08007d50
 8001424:	08007d64 	.word	0x08007d64
 8001428:	08007d6c 	.word	0x08007d6c
 800142c:	08007d70 	.word	0x08007d70
 8001430:	08007d84 	.word	0x08007d84
 8001434:	08007d98 	.word	0x08007d98
		sprintf(uartData, "Info Field %d    =",i+1)	;
 8001438:	697b      	ldr	r3, [r7, #20]
 800143a:	3301      	adds	r3, #1
 800143c:	461a      	mov	r2, r3
 800143e:	494e      	ldr	r1, [pc, #312]	; (8001578 <print_KISS+0x424>)
 8001440:	484e      	ldr	r0, [pc, #312]	; (800157c <print_KISS+0x428>)
 8001442:	f005 f8f5 	bl	8006630 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001446:	484d      	ldr	r0, [pc, #308]	; (800157c <print_KISS+0x428>)
 8001448:	f7fe fee2 	bl	8000210 <strlen>
 800144c:	4603      	mov	r3, r0
 800144e:	b29a      	uxth	r2, r3
 8001450:	230a      	movs	r3, #10
 8001452:	494a      	ldr	r1, [pc, #296]	; (800157c <print_KISS+0x428>)
 8001454:	484a      	ldr	r0, [pc, #296]	; (8001580 <print_KISS+0x42c>)
 8001456:	f004 f8fa 	bl	800564e <HAL_UART_Transmit>

		for(int j = 0;j<8;j++){
 800145a:	2300      	movs	r3, #0
 800145c:	613b      	str	r3, [r7, #16]
 800145e:	e017      	b.n	8001490 <print_KISS+0x33c>
			sprintf(uartData, " %d ",*(curr_mem+8-j-1));
 8001460:	693b      	ldr	r3, [r7, #16]
 8001462:	f1c3 0307 	rsb	r3, r3, #7
 8001466:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001468:	4413      	add	r3, r2
 800146a:	781b      	ldrb	r3, [r3, #0]
 800146c:	461a      	mov	r2, r3
 800146e:	4945      	ldr	r1, [pc, #276]	; (8001584 <print_KISS+0x430>)
 8001470:	4842      	ldr	r0, [pc, #264]	; (800157c <print_KISS+0x428>)
 8001472:	f005 f8dd 	bl	8006630 <siprintf>
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001476:	4841      	ldr	r0, [pc, #260]	; (800157c <print_KISS+0x428>)
 8001478:	f7fe feca 	bl	8000210 <strlen>
 800147c:	4603      	mov	r3, r0
 800147e:	b29a      	uxth	r2, r3
 8001480:	230a      	movs	r3, #10
 8001482:	493e      	ldr	r1, [pc, #248]	; (800157c <print_KISS+0x428>)
 8001484:	483e      	ldr	r0, [pc, #248]	; (8001580 <print_KISS+0x42c>)
 8001486:	f004 f8e2 	bl	800564e <HAL_UART_Transmit>
		for(int j = 0;j<8;j++){
 800148a:	693b      	ldr	r3, [r7, #16]
 800148c:	3301      	adds	r3, #1
 800148e:	613b      	str	r3, [r7, #16]
 8001490:	693b      	ldr	r3, [r7, #16]
 8001492:	2b07      	cmp	r3, #7
 8001494:	dde4      	ble.n	8001460 <print_KISS+0x30c>
		}
		curr_mem += 8;
 8001496:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001498:	3308      	adds	r3, #8
 800149a:	62fb      	str	r3, [r7, #44]	; 0x2c
		sprintf(uartData, "\n");
 800149c:	4a37      	ldr	r2, [pc, #220]	; (800157c <print_KISS+0x428>)
 800149e:	4b3a      	ldr	r3, [pc, #232]	; (8001588 <print_KISS+0x434>)
 80014a0:	881b      	ldrh	r3, [r3, #0]
 80014a2:	8013      	strh	r3, [r2, #0]
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80014a4:	4835      	ldr	r0, [pc, #212]	; (800157c <print_KISS+0x428>)
 80014a6:	f7fe feb3 	bl	8000210 <strlen>
 80014aa:	4603      	mov	r3, r0
 80014ac:	b29a      	uxth	r2, r3
 80014ae:	230a      	movs	r3, #10
 80014b0:	4932      	ldr	r1, [pc, #200]	; (800157c <print_KISS+0x428>)
 80014b2:	4833      	ldr	r0, [pc, #204]	; (8001580 <print_KISS+0x42c>)
 80014b4:	f004 f8cb 	bl	800564e <HAL_UART_Transmit>
	for(int i = 0;i<(local_packet->Info_Len/8)-1;i++){
 80014b8:	697b      	ldr	r3, [r7, #20]
 80014ba:	3301      	adds	r3, #1
 80014bc:	617b      	str	r3, [r7, #20]
 80014be:	68bb      	ldr	r3, [r7, #8]
 80014c0:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80014c4:	681b      	ldr	r3, [r3, #0]
 80014c6:	2b00      	cmp	r3, #0
 80014c8:	da00      	bge.n	80014cc <print_KISS+0x378>
 80014ca:	3307      	adds	r3, #7
 80014cc:	10db      	asrs	r3, r3, #3
 80014ce:	3b01      	subs	r3, #1
 80014d0:	697a      	ldr	r2, [r7, #20]
 80014d2:	429a      	cmp	r2, r3
 80014d4:	dbb0      	blt.n	8001438 <print_KISS+0x2e4>
	}

	//Print Stop Flag
	curr_mem = (local_packet->KISS_PACKET+(8*(local_packet->byte_cnt-1)));
 80014d6:	68bb      	ldr	r3, [r7, #8]
 80014d8:	f603 225f 	addw	r2, r3, #2655	; 0xa5f
 80014dc:	68bb      	ldr	r3, [r7, #8]
 80014de:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80014e2:	330c      	adds	r3, #12
 80014e4:	681b      	ldr	r3, [r3, #0]
 80014e6:	3b01      	subs	r3, #1
 80014e8:	00db      	lsls	r3, r3, #3
 80014ea:	4413      	add	r3, r2
 80014ec:	62fb      	str	r3, [r7, #44]	; 0x2c
	sprintf(uartData, "Stop flag       =");
 80014ee:	4a23      	ldr	r2, [pc, #140]	; (800157c <print_KISS+0x428>)
 80014f0:	4b26      	ldr	r3, [pc, #152]	; (800158c <print_KISS+0x438>)
 80014f2:	4615      	mov	r5, r2
 80014f4:	461c      	mov	r4, r3
 80014f6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80014f8:	6028      	str	r0, [r5, #0]
 80014fa:	6069      	str	r1, [r5, #4]
 80014fc:	60aa      	str	r2, [r5, #8]
 80014fe:	60eb      	str	r3, [r5, #12]
 8001500:	8823      	ldrh	r3, [r4, #0]
 8001502:	822b      	strh	r3, [r5, #16]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001504:	481d      	ldr	r0, [pc, #116]	; (800157c <print_KISS+0x428>)
 8001506:	f7fe fe83 	bl	8000210 <strlen>
 800150a:	4603      	mov	r3, r0
 800150c:	b29a      	uxth	r2, r3
 800150e:	230a      	movs	r3, #10
 8001510:	491a      	ldr	r1, [pc, #104]	; (800157c <print_KISS+0x428>)
 8001512:	481b      	ldr	r0, [pc, #108]	; (8001580 <print_KISS+0x42c>)
 8001514:	f004 f89b 	bl	800564e <HAL_UART_Transmit>

	for(int i = 0;i<8;i++){
 8001518:	2300      	movs	r3, #0
 800151a:	60fb      	str	r3, [r7, #12]
 800151c:	e017      	b.n	800154e <print_KISS+0x3fa>
		sprintf(uartData, " %d ",*(curr_mem+8-i-1));
 800151e:	68fb      	ldr	r3, [r7, #12]
 8001520:	f1c3 0307 	rsb	r3, r3, #7
 8001524:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001526:	4413      	add	r3, r2
 8001528:	781b      	ldrb	r3, [r3, #0]
 800152a:	461a      	mov	r2, r3
 800152c:	4915      	ldr	r1, [pc, #84]	; (8001584 <print_KISS+0x430>)
 800152e:	4813      	ldr	r0, [pc, #76]	; (800157c <print_KISS+0x428>)
 8001530:	f005 f87e 	bl	8006630 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001534:	4811      	ldr	r0, [pc, #68]	; (800157c <print_KISS+0x428>)
 8001536:	f7fe fe6b 	bl	8000210 <strlen>
 800153a:	4603      	mov	r3, r0
 800153c:	b29a      	uxth	r2, r3
 800153e:	230a      	movs	r3, #10
 8001540:	490e      	ldr	r1, [pc, #56]	; (800157c <print_KISS+0x428>)
 8001542:	480f      	ldr	r0, [pc, #60]	; (8001580 <print_KISS+0x42c>)
 8001544:	f004 f883 	bl	800564e <HAL_UART_Transmit>
	for(int i = 0;i<8;i++){
 8001548:	68fb      	ldr	r3, [r7, #12]
 800154a:	3301      	adds	r3, #1
 800154c:	60fb      	str	r3, [r7, #12]
 800154e:	68fb      	ldr	r3, [r7, #12]
 8001550:	2b07      	cmp	r3, #7
 8001552:	dde4      	ble.n	800151e <print_KISS+0x3ca>
	}
	sprintf(uartData, "\n");
 8001554:	4a09      	ldr	r2, [pc, #36]	; (800157c <print_KISS+0x428>)
 8001556:	4b0c      	ldr	r3, [pc, #48]	; (8001588 <print_KISS+0x434>)
 8001558:	881b      	ldrh	r3, [r3, #0]
 800155a:	8013      	strh	r3, [r2, #0]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800155c:	4807      	ldr	r0, [pc, #28]	; (800157c <print_KISS+0x428>)
 800155e:	f7fe fe57 	bl	8000210 <strlen>
 8001562:	4603      	mov	r3, r0
 8001564:	b29a      	uxth	r2, r3
 8001566:	230a      	movs	r3, #10
 8001568:	4904      	ldr	r1, [pc, #16]	; (800157c <print_KISS+0x428>)
 800156a:	4805      	ldr	r0, [pc, #20]	; (8001580 <print_KISS+0x42c>)
 800156c:	f004 f86f 	bl	800564e <HAL_UART_Transmit>

}
 8001570:	bf00      	nop
 8001572:	3734      	adds	r7, #52	; 0x34
 8001574:	46bd      	mov	sp, r7
 8001576:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001578:	08007dac 	.word	0x08007dac
 800157c:	20001f3c 	.word	0x20001f3c
 8001580:	20003d60 	.word	0x20003d60
 8001584:	08007d64 	.word	0x08007d64
 8001588:	08007d6c 	.word	0x08007d6c
 800158c:	08007dc0 	.word	0x08007dc0

08001590 <UART2_EXCEPTION_CALLBACK>:
//UART Handling data flow
//****************************************************************************************************************
void UART2_EXCEPTION_CALLBACK(){
 8001590:	b580      	push	{r7, lr}
 8001592:	af00      	add	r7, sp, #0
	HAL_UART_Receive_IT(&huart2, &(UART_packet.input), UART_RX_IT_CNT);//Reset
 8001594:	2201      	movs	r2, #1
 8001596:	4918      	ldr	r1, [pc, #96]	; (80015f8 <UART2_EXCEPTION_CALLBACK+0x68>)
 8001598:	4818      	ldr	r0, [pc, #96]	; (80015fc <UART2_EXCEPTION_CALLBACK+0x6c>)
 800159a:	f004 f8f1 	bl	8005780 <HAL_UART_Receive_IT>
	UART_packet.got_packet = false;
 800159e:	4b18      	ldr	r3, [pc, #96]	; (8001600 <UART2_EXCEPTION_CALLBACK+0x70>)
 80015a0:	2200      	movs	r2, #0
 80015a2:	735a      	strb	r2, [r3, #13]

	  if(UART_packet.input==0xc0){
 80015a4:	4b16      	ldr	r3, [pc, #88]	; (8001600 <UART2_EXCEPTION_CALLBACK+0x70>)
 80015a6:	7b1b      	ldrb	r3, [r3, #12]
 80015a8:	2bc0      	cmp	r3, #192	; 0xc0
 80015aa:	d104      	bne.n	80015b6 <UART2_EXCEPTION_CALLBACK+0x26>
		  UART_packet.flags++;
 80015ac:	4b14      	ldr	r3, [pc, #80]	; (8001600 <UART2_EXCEPTION_CALLBACK+0x70>)
 80015ae:	689b      	ldr	r3, [r3, #8]
 80015b0:	3301      	adds	r3, #1
 80015b2:	4a13      	ldr	r2, [pc, #76]	; (8001600 <UART2_EXCEPTION_CALLBACK+0x70>)
 80015b4:	6093      	str	r3, [r2, #8]
	  }

	  *(UART_packet.HEX_KISS_PACKET+UART_packet.rx_cnt) = UART_packet.input;
 80015b6:	4b12      	ldr	r3, [pc, #72]	; (8001600 <UART2_EXCEPTION_CALLBACK+0x70>)
 80015b8:	681b      	ldr	r3, [r3, #0]
 80015ba:	461a      	mov	r2, r3
 80015bc:	4b11      	ldr	r3, [pc, #68]	; (8001604 <UART2_EXCEPTION_CALLBACK+0x74>)
 80015be:	4413      	add	r3, r2
 80015c0:	4a0f      	ldr	r2, [pc, #60]	; (8001600 <UART2_EXCEPTION_CALLBACK+0x70>)
 80015c2:	7b12      	ldrb	r2, [r2, #12]
 80015c4:	701a      	strb	r2, [r3, #0]
	  UART_packet.rx_cnt++;
 80015c6:	4b0e      	ldr	r3, [pc, #56]	; (8001600 <UART2_EXCEPTION_CALLBACK+0x70>)
 80015c8:	681b      	ldr	r3, [r3, #0]
 80015ca:	3301      	adds	r3, #1
 80015cc:	4a0c      	ldr	r2, [pc, #48]	; (8001600 <UART2_EXCEPTION_CALLBACK+0x70>)
 80015ce:	6013      	str	r3, [r2, #0]

	  if(UART_packet.flags>=2){
 80015d0:	4b0b      	ldr	r3, [pc, #44]	; (8001600 <UART2_EXCEPTION_CALLBACK+0x70>)
 80015d2:	689b      	ldr	r3, [r3, #8]
 80015d4:	2b01      	cmp	r3, #1
 80015d6:	dd0c      	ble.n	80015f2 <UART2_EXCEPTION_CALLBACK+0x62>
		  UART_packet.flags = 0;
 80015d8:	4b09      	ldr	r3, [pc, #36]	; (8001600 <UART2_EXCEPTION_CALLBACK+0x70>)
 80015da:	2200      	movs	r2, #0
 80015dc:	609a      	str	r2, [r3, #8]
		  UART_packet.got_packet = true;
 80015de:	4b08      	ldr	r3, [pc, #32]	; (8001600 <UART2_EXCEPTION_CALLBACK+0x70>)
 80015e0:	2201      	movs	r2, #1
 80015e2:	735a      	strb	r2, [r3, #13]
		  UART_packet.received_byte_cnt = UART_packet.rx_cnt;
 80015e4:	4b06      	ldr	r3, [pc, #24]	; (8001600 <UART2_EXCEPTION_CALLBACK+0x70>)
 80015e6:	681b      	ldr	r3, [r3, #0]
 80015e8:	4a05      	ldr	r2, [pc, #20]	; (8001600 <UART2_EXCEPTION_CALLBACK+0x70>)
 80015ea:	6053      	str	r3, [r2, #4]
		  UART_packet.rx_cnt=0;
 80015ec:	4b04      	ldr	r3, [pc, #16]	; (8001600 <UART2_EXCEPTION_CALLBACK+0x70>)
 80015ee:	2200      	movs	r2, #0
 80015f0:	601a      	str	r2, [r3, #0]
	  }
}
 80015f2:	bf00      	nop
 80015f4:	bd80      	pop	{r7, pc}
 80015f6:	bf00      	nop
 80015f8:	20001418 	.word	0x20001418
 80015fc:	20003d60 	.word	0x20003d60
 8001600:	2000140c 	.word	0x2000140c
 8001604:	2000141a 	.word	0x2000141a

08001608 <reverse_array>:
	}

//	return true; //valid packet
}

void reverse_array(bool *array,int size){
 8001608:	b4b0      	push	{r4, r5, r7}
 800160a:	b087      	sub	sp, #28
 800160c:	af00      	add	r7, sp, #0
 800160e:	6078      	str	r0, [r7, #4]
 8001610:	6039      	str	r1, [r7, #0]
 8001612:	466b      	mov	r3, sp
 8001614:	461d      	mov	r5, r3
	bool temp[size];
 8001616:	6838      	ldr	r0, [r7, #0]
 8001618:	1e43      	subs	r3, r0, #1
 800161a:	60fb      	str	r3, [r7, #12]
 800161c:	4603      	mov	r3, r0
 800161e:	4619      	mov	r1, r3
 8001620:	f04f 0200 	mov.w	r2, #0
 8001624:	f04f 0300 	mov.w	r3, #0
 8001628:	f04f 0400 	mov.w	r4, #0
 800162c:	00d4      	lsls	r4, r2, #3
 800162e:	ea44 7451 	orr.w	r4, r4, r1, lsr #29
 8001632:	00cb      	lsls	r3, r1, #3
 8001634:	4603      	mov	r3, r0
 8001636:	4619      	mov	r1, r3
 8001638:	f04f 0200 	mov.w	r2, #0
 800163c:	f04f 0300 	mov.w	r3, #0
 8001640:	f04f 0400 	mov.w	r4, #0
 8001644:	00d4      	lsls	r4, r2, #3
 8001646:	ea44 7451 	orr.w	r4, r4, r1, lsr #29
 800164a:	00cb      	lsls	r3, r1, #3
 800164c:	4603      	mov	r3, r0
 800164e:	3307      	adds	r3, #7
 8001650:	08db      	lsrs	r3, r3, #3
 8001652:	00db      	lsls	r3, r3, #3
 8001654:	ebad 0d03 	sub.w	sp, sp, r3
 8001658:	466b      	mov	r3, sp
 800165a:	3300      	adds	r3, #0
 800165c:	60bb      	str	r3, [r7, #8]
	for(int i = 0;i < size; i++){
 800165e:	2300      	movs	r3, #0
 8001660:	613b      	str	r3, [r7, #16]
 8001662:	e00c      	b.n	800167e <reverse_array+0x76>
		temp[size-1-i] = array[i];
 8001664:	693b      	ldr	r3, [r7, #16]
 8001666:	687a      	ldr	r2, [r7, #4]
 8001668:	441a      	add	r2, r3
 800166a:	683b      	ldr	r3, [r7, #0]
 800166c:	1e59      	subs	r1, r3, #1
 800166e:	693b      	ldr	r3, [r7, #16]
 8001670:	1acb      	subs	r3, r1, r3
 8001672:	7811      	ldrb	r1, [r2, #0]
 8001674:	68ba      	ldr	r2, [r7, #8]
 8001676:	54d1      	strb	r1, [r2, r3]
	for(int i = 0;i < size; i++){
 8001678:	693b      	ldr	r3, [r7, #16]
 800167a:	3301      	adds	r3, #1
 800167c:	613b      	str	r3, [r7, #16]
 800167e:	693a      	ldr	r2, [r7, #16]
 8001680:	683b      	ldr	r3, [r7, #0]
 8001682:	429a      	cmp	r2, r3
 8001684:	dbee      	blt.n	8001664 <reverse_array+0x5c>
	}
	for(int i = 0; i <size; i++){
 8001686:	2300      	movs	r3, #0
 8001688:	617b      	str	r3, [r7, #20]
 800168a:	e00a      	b.n	80016a2 <reverse_array+0x9a>
		array[i] = temp[i];
 800168c:	697b      	ldr	r3, [r7, #20]
 800168e:	687a      	ldr	r2, [r7, #4]
 8001690:	4413      	add	r3, r2
 8001692:	68b9      	ldr	r1, [r7, #8]
 8001694:	697a      	ldr	r2, [r7, #20]
 8001696:	440a      	add	r2, r1
 8001698:	7812      	ldrb	r2, [r2, #0]
 800169a:	701a      	strb	r2, [r3, #0]
	for(int i = 0; i <size; i++){
 800169c:	697b      	ldr	r3, [r7, #20]
 800169e:	3301      	adds	r3, #1
 80016a0:	617b      	str	r3, [r7, #20]
 80016a2:	697a      	ldr	r2, [r7, #20]
 80016a4:	683b      	ldr	r3, [r7, #0]
 80016a6:	429a      	cmp	r2, r3
 80016a8:	dbf0      	blt.n	800168c <reverse_array+0x84>
 80016aa:	46ad      	mov	sp, r5
	}
}
 80016ac:	bf00      	nop
 80016ae:	371c      	adds	r7, #28
 80016b0:	46bd      	mov	sp, r7
 80016b2:	bcb0      	pop	{r4, r5, r7}
 80016b4:	4770      	bx	lr
	...

080016b8 <set_packet_pointer_AX25>:

void set_packet_pointer_AX25(){
 80016b8:	b590      	push	{r4, r7, lr}
 80016ba:	b085      	sub	sp, #20
 80016bc:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 80016be:	4b4d      	ldr	r3, [pc, #308]	; (80017f4 <set_packet_pointer_AX25+0x13c>)
 80016c0:	607b      	str	r3, [r7, #4]
	bool *curr_mem = &local_packet->AX25_PACKET; //keep track of what address to copy from
 80016c2:	687b      	ldr	r3, [r7, #4]
 80016c4:	60fb      	str	r3, [r7, #12]
	//this is assuming that the packet has all the subfields full
	int not_info = FCS_len; //number of bits in packet that aren't part of info field
 80016c6:	2310      	movs	r3, #16
 80016c8:	60bb      	str	r3, [r7, #8]
	sprintf(uartData,"Good Packet!");
 80016ca:	4a4b      	ldr	r2, [pc, #300]	; (80017f8 <set_packet_pointer_AX25+0x140>)
 80016cc:	4b4b      	ldr	r3, [pc, #300]	; (80017fc <set_packet_pointer_AX25+0x144>)
 80016ce:	4614      	mov	r4, r2
 80016d0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80016d2:	6020      	str	r0, [r4, #0]
 80016d4:	6061      	str	r1, [r4, #4]
 80016d6:	60a2      	str	r2, [r4, #8]
 80016d8:	781b      	ldrb	r3, [r3, #0]
 80016da:	7323      	strb	r3, [r4, #12]

	local_packet->address = curr_mem;
 80016dc:	687b      	ldr	r3, [r7, #4]
 80016de:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80016e2:	3310      	adds	r3, #16
 80016e4:	68fa      	ldr	r2, [r7, #12]
 80016e6:	601a      	str	r2, [r3, #0]
	reverse_array(local_packet->address,address_len);
 80016e8:	687b      	ldr	r3, [r7, #4]
 80016ea:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80016ee:	3310      	adds	r3, #16
 80016f0:	681b      	ldr	r3, [r3, #0]
 80016f2:	2170      	movs	r1, #112	; 0x70
 80016f4:	4618      	mov	r0, r3
 80016f6:	f7ff ff87 	bl	8001608 <reverse_array>
	if(!compare_address(local_packet->address)){
 80016fa:	687b      	ldr	r3, [r7, #4]
 80016fc:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001700:	3310      	adds	r3, #16
 8001702:	681b      	ldr	r3, [r3, #0]
 8001704:	4618      	mov	r0, r3
 8001706:	f7ff fca3 	bl	8001050 <compare_address>
 800170a:	4603      	mov	r3, r0
 800170c:	f083 0301 	eor.w	r3, r3, #1
 8001710:	b2db      	uxtb	r3, r3
 8001712:	2b00      	cmp	r3, #0
 8001714:	d16a      	bne.n	80017ec <set_packet_pointer_AX25+0x134>
		return false; //discard
	}
	curr_mem += address_len;
 8001716:	68fb      	ldr	r3, [r7, #12]
 8001718:	3370      	adds	r3, #112	; 0x70
 800171a:	60fb      	str	r3, [r7, #12]
	not_info += address_len;
 800171c:	68bb      	ldr	r3, [r7, #8]
 800171e:	3370      	adds	r3, #112	; 0x70
 8001720:	60bb      	str	r3, [r7, #8]

	local_packet->control = curr_mem;
 8001722:	687b      	ldr	r3, [r7, #4]
 8001724:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001728:	3314      	adds	r3, #20
 800172a:	68fa      	ldr	r2, [r7, #12]
 800172c:	601a      	str	r2, [r3, #0]
	reverse_array(local_packet->control,control_len);
 800172e:	687b      	ldr	r3, [r7, #4]
 8001730:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001734:	3314      	adds	r3, #20
 8001736:	681b      	ldr	r3, [r3, #0]
 8001738:	2108      	movs	r1, #8
 800173a:	4618      	mov	r0, r3
 800173c:	f7ff ff64 	bl	8001608 <reverse_array>
	curr_mem += control_len;
 8001740:	68fb      	ldr	r3, [r7, #12]
 8001742:	3308      	adds	r3, #8
 8001744:	60fb      	str	r3, [r7, #12]
	not_info += control_len;
 8001746:	68bb      	ldr	r3, [r7, #8]
 8001748:	3308      	adds	r3, #8
 800174a:	60bb      	str	r3, [r7, #8]

	if(local_packet->control[0] == 0){ // 0 == I frame, 01 == S frame, 11 == U Frame
 800174c:	687b      	ldr	r3, [r7, #4]
 800174e:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001752:	3314      	adds	r3, #20
 8001754:	681b      	ldr	r3, [r3, #0]
 8001756:	781b      	ldrb	r3, [r3, #0]
 8001758:	f083 0301 	eor.w	r3, r3, #1
 800175c:	b2db      	uxtb	r3, r3
 800175e:	2b00      	cmp	r3, #0
 8001760:	d01a      	beq.n	8001798 <set_packet_pointer_AX25+0xe0>
		local_packet->i_frame_packet = true;//Signal flag is of type i-frame
 8001762:	687b      	ldr	r3, [r7, #4]
 8001764:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001768:	3308      	adds	r3, #8
 800176a:	2201      	movs	r2, #1
 800176c:	701a      	strb	r2, [r3, #0]
		local_packet->PID = curr_mem;
 800176e:	687b      	ldr	r3, [r7, #4]
 8001770:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001774:	3318      	adds	r3, #24
 8001776:	68fa      	ldr	r2, [r7, #12]
 8001778:	601a      	str	r2, [r3, #0]
		reverse_array(local_packet->PID,PID_len);
 800177a:	687b      	ldr	r3, [r7, #4]
 800177c:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001780:	3318      	adds	r3, #24
 8001782:	681b      	ldr	r3, [r3, #0]
 8001784:	2108      	movs	r1, #8
 8001786:	4618      	mov	r0, r3
 8001788:	f7ff ff3e 	bl	8001608 <reverse_array>
		curr_mem += PID_len;
 800178c:	68fb      	ldr	r3, [r7, #12]
 800178e:	3308      	adds	r3, #8
 8001790:	60fb      	str	r3, [r7, #12]
		not_info += PID_len;
 8001792:	68bb      	ldr	r3, [r7, #8]
 8001794:	3308      	adds	r3, #8
 8001796:	60bb      	str	r3, [r7, #8]
	}


	local_packet->Info_Len = rxBit_count - not_info;
 8001798:	4b19      	ldr	r3, [pc, #100]	; (8001800 <set_packet_pointer_AX25+0x148>)
 800179a:	681a      	ldr	r2, [r3, #0]
 800179c:	68bb      	ldr	r3, [r7, #8]
 800179e:	1ad2      	subs	r2, r2, r3
 80017a0:	687b      	ldr	r3, [r7, #4]
 80017a2:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80017a6:	601a      	str	r2, [r3, #0]
	local_packet->Info = curr_mem;
 80017a8:	687b      	ldr	r3, [r7, #4]
 80017aa:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80017ae:	331c      	adds	r3, #28
 80017b0:	68fa      	ldr	r2, [r7, #12]
 80017b2:	601a      	str	r2, [r3, #0]
	reverse_array(local_packet->Info,local_packet->Info_Len);
 80017b4:	687b      	ldr	r3, [r7, #4]
 80017b6:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80017ba:	331c      	adds	r3, #28
 80017bc:	681a      	ldr	r2, [r3, #0]
 80017be:	687b      	ldr	r3, [r7, #4]
 80017c0:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80017c4:	681b      	ldr	r3, [r3, #0]
 80017c6:	4619      	mov	r1, r3
 80017c8:	4610      	mov	r0, r2
 80017ca:	f7ff ff1d 	bl	8001608 <reverse_array>
	curr_mem += local_packet->Info_Len;
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80017d4:	681b      	ldr	r3, [r3, #0]
 80017d6:	461a      	mov	r2, r3
 80017d8:	68fb      	ldr	r3, [r7, #12]
 80017da:	4413      	add	r3, r2
 80017dc:	60fb      	str	r3, [r7, #12]

	local_packet->FCS = curr_mem;
 80017de:	687b      	ldr	r3, [r7, #4]
 80017e0:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80017e4:	3304      	adds	r3, #4
 80017e6:	68fa      	ldr	r2, [r7, #12]
 80017e8:	601a      	str	r2, [r3, #0]
 80017ea:	e000      	b.n	80017ee <set_packet_pointer_AX25+0x136>
		return false; //discard
 80017ec:	bf00      	nop
}
 80017ee:	3714      	adds	r7, #20
 80017f0:	46bd      	mov	sp, r7
 80017f2:	bd90      	pop	{r4, r7, pc}
 80017f4:	200000b0 	.word	0x200000b0
 80017f8:	20001f3c 	.word	0x20001f3c
 80017fc:	08007ef4 	.word	0x08007ef4
 8001800:	20000094 	.word	0x20000094

08001804 <receiving_KISS>:
//****************************************************************************************************************
//END OF AX.25 to KISS data flow

//KISS to AX.25 data flow
//****************************************************************************************************************
bool receiving_KISS(){
 8001804:	b580      	push	{r7, lr}
 8001806:	b086      	sub	sp, #24
 8001808:	af00      	add	r7, sp, #0
	struct UART_INPUT* local_UART_packet = &UART_packet;
 800180a:	4b2b      	ldr	r3, [pc, #172]	; (80018b8 <receiving_KISS+0xb4>)
 800180c:	613b      	str	r3, [r7, #16]
	struct PACKET_STRUCT* local_packet = &global_packet;
 800180e:	4b2b      	ldr	r3, [pc, #172]	; (80018bc <receiving_KISS+0xb8>)
 8001810:	60fb      	str	r3, [r7, #12]

	//Got a packet bounded by c0 over uart
	if(local_UART_packet->got_packet){
 8001812:	693b      	ldr	r3, [r7, #16]
 8001814:	7b5b      	ldrb	r3, [r3, #13]
 8001816:	2b00      	cmp	r3, #0
 8001818:	d048      	beq.n	80018ac <receiving_KISS+0xa8>
		sprintf(uartData, "\nGot a packet via UART of size %d, printing now...\n",local_UART_packet->received_byte_cnt);
 800181a:	693b      	ldr	r3, [r7, #16]
 800181c:	685b      	ldr	r3, [r3, #4]
 800181e:	461a      	mov	r2, r3
 8001820:	4927      	ldr	r1, [pc, #156]	; (80018c0 <receiving_KISS+0xbc>)
 8001822:	4828      	ldr	r0, [pc, #160]	; (80018c4 <receiving_KISS+0xc0>)
 8001824:	f004 ff04 	bl	8006630 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001828:	4826      	ldr	r0, [pc, #152]	; (80018c4 <receiving_KISS+0xc0>)
 800182a:	f7fe fcf1 	bl	8000210 <strlen>
 800182e:	4603      	mov	r3, r0
 8001830:	b29a      	uxth	r2, r3
 8001832:	230a      	movs	r3, #10
 8001834:	4923      	ldr	r1, [pc, #140]	; (80018c4 <receiving_KISS+0xc0>)
 8001836:	4824      	ldr	r0, [pc, #144]	; (80018c8 <receiving_KISS+0xc4>)
 8001838:	f003 ff09 	bl	800564e <HAL_UART_Transmit>

		for(int i = 0;i<local_UART_packet->received_byte_cnt;i++){
 800183c:	2300      	movs	r3, #0
 800183e:	617b      	str	r3, [r7, #20]
 8001840:	e015      	b.n	800186e <receiving_KISS+0x6a>
			//Hex value from UART
			uint8_t hex_byte_val=local_UART_packet->HEX_KISS_PACKET[i];
 8001842:	693a      	ldr	r2, [r7, #16]
 8001844:	697b      	ldr	r3, [r7, #20]
 8001846:	4413      	add	r3, r2
 8001848:	330e      	adds	r3, #14
 800184a:	781b      	ldrb	r3, [r3, #0]
 800184c:	72fb      	strb	r3, [r7, #11]

			//Bool pointer for KISS array
			bool *bin_byte_ptr = &local_packet->KISS_PACKET[i*8];
 800184e:	697b      	ldr	r3, [r7, #20]
 8001850:	00db      	lsls	r3, r3, #3
 8001852:	f603 2358 	addw	r3, r3, #2648	; 0xa58
 8001856:	68fa      	ldr	r2, [r7, #12]
 8001858:	4413      	add	r3, r2
 800185a:	3307      	adds	r3, #7
 800185c:	607b      	str	r3, [r7, #4]

			//sprintf(uartData, "Byte[%d] = %d\n",i,hex_byte_val);
			//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);

			conv_HEX_to_BIN(hex_byte_val, bin_byte_ptr);
 800185e:	7afb      	ldrb	r3, [r7, #11]
 8001860:	6879      	ldr	r1, [r7, #4]
 8001862:	4618      	mov	r0, r3
 8001864:	f7ff fb4a 	bl	8000efc <conv_HEX_to_BIN>
		for(int i = 0;i<local_UART_packet->received_byte_cnt;i++){
 8001868:	697b      	ldr	r3, [r7, #20]
 800186a:	3301      	adds	r3, #1
 800186c:	617b      	str	r3, [r7, #20]
 800186e:	693b      	ldr	r3, [r7, #16]
 8001870:	685b      	ldr	r3, [r3, #4]
 8001872:	697a      	ldr	r2, [r7, #20]
 8001874:	429a      	cmp	r2, r3
 8001876:	dbe4      	blt.n	8001842 <receiving_KISS+0x3e>
		}
		local_packet->byte_cnt = local_UART_packet->received_byte_cnt;
 8001878:	693b      	ldr	r3, [r7, #16]
 800187a:	685a      	ldr	r2, [r3, #4]
 800187c:	68fb      	ldr	r3, [r7, #12]
 800187e:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001882:	330c      	adds	r3, #12
 8001884:	601a      	str	r2, [r3, #0]
		local_packet->Info_Len = (local_packet->byte_cnt-INFO_offset)*8;
 8001886:	68fb      	ldr	r3, [r7, #12]
 8001888:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 800188c:	330c      	adds	r3, #12
 800188e:	681b      	ldr	r3, [r3, #0]
 8001890:	3b12      	subs	r3, #18
 8001892:	00da      	lsls	r2, r3, #3
 8001894:	68fb      	ldr	r3, [r7, #12]
 8001896:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 800189a:	601a      	str	r2, [r3, #0]
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800189c:	b672      	cpsid	i

		//Convert KISS packet to AX.25 packet
	    /* Disable interrupts for memory allocation for FCS field */
	    __disable_irq();

		KISS_TO_AX25();
 800189e:	f000 f859 	bl	8001954 <KISS_TO_AX25>
		//Upon exit, have a perfectly good AX.25 packet

		//Output AFSK waveform for radio
		output_AX25();
 80018a2:	f7ff fbf7 	bl	8001094 <output_AX25>
  __ASM volatile ("cpsie i" : : : "memory");
 80018a6:	b662      	cpsie	i

		/* Enable interrupts */
	    __enable_irq();
		return true;
 80018a8:	2301      	movs	r3, #1
 80018aa:	e000      	b.n	80018ae <receiving_KISS+0xaa>
	}
	return false;
 80018ac:	2300      	movs	r3, #0
}
 80018ae:	4618      	mov	r0, r3
 80018b0:	3718      	adds	r7, #24
 80018b2:	46bd      	mov	sp, r7
 80018b4:	bd80      	pop	{r7, pc}
 80018b6:	bf00      	nop
 80018b8:	2000140c 	.word	0x2000140c
 80018bc:	200000b0 	.word	0x200000b0
 80018c0:	08007f04 	.word	0x08007f04
 80018c4:	20001f3c 	.word	0x20001f3c
 80018c8:	20003d60 	.word	0x20003d60

080018cc <set_packet_pointer_KISS>:

void set_packet_pointer_KISS(){
 80018cc:	b580      	push	{r7, lr}
 80018ce:	b082      	sub	sp, #8
 80018d0:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 80018d2:	4b1f      	ldr	r3, [pc, #124]	; (8001950 <set_packet_pointer_KISS+0x84>)
 80018d4:	607b      	str	r3, [r7, #4]

	bool *curr_mem = local_packet->KISS_PACKET+16;//+8 is to skip the flag since it does not have a pointer
 80018d6:	687b      	ldr	r3, [r7, #4]
 80018d8:	f603 235f 	addw	r3, r3, #2655	; 0xa5f
 80018dc:	3310      	adds	r3, #16
 80018de:	603b      	str	r3, [r7, #0]

	local_packet->address = curr_mem;
 80018e0:	687b      	ldr	r3, [r7, #4]
 80018e2:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80018e6:	3310      	adds	r3, #16
 80018e8:	683a      	ldr	r2, [r7, #0]
 80018ea:	601a      	str	r2, [r3, #0]
	curr_mem += address_len;
 80018ec:	683b      	ldr	r3, [r7, #0]
 80018ee:	3370      	adds	r3, #112	; 0x70
 80018f0:	603b      	str	r3, [r7, #0]

	local_packet->control = curr_mem;
 80018f2:	687b      	ldr	r3, [r7, #4]
 80018f4:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80018f8:	3314      	adds	r3, #20
 80018fa:	683a      	ldr	r2, [r7, #0]
 80018fc:	601a      	str	r2, [r3, #0]
	curr_mem += control_len;
 80018fe:	683b      	ldr	r3, [r7, #0]
 8001900:	3308      	adds	r3, #8
 8001902:	603b      	str	r3, [r7, #0]

	local_packet->PID = curr_mem;
 8001904:	687b      	ldr	r3, [r7, #4]
 8001906:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 800190a:	3318      	adds	r3, #24
 800190c:	683a      	ldr	r2, [r7, #0]
 800190e:	601a      	str	r2, [r3, #0]
	curr_mem += PID_len;
 8001910:	683b      	ldr	r3, [r7, #0]
 8001912:	3308      	adds	r3, #8
 8001914:	603b      	str	r3, [r7, #0]

	local_packet->Info = curr_mem;
 8001916:	687b      	ldr	r3, [r7, #4]
 8001918:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 800191c:	331c      	adds	r3, #28
 800191e:	683a      	ldr	r2, [r7, #0]
 8001920:	601a      	str	r2, [r3, #0]
	curr_mem += local_packet->Info_Len;
 8001922:	687b      	ldr	r3, [r7, #4]
 8001924:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001928:	681b      	ldr	r3, [r3, #0]
 800192a:	461a      	mov	r2, r3
 800192c:	683b      	ldr	r3, [r7, #0]
 800192e:	4413      	add	r3, r2
 8001930:	603b      	str	r3, [r7, #0]

	//allocate memory for FCS field since it is not apart of KISS packet
	local_packet->FCS = (bool *) malloc(FCS_len * bool_size);
 8001932:	2010      	movs	r0, #16
 8001934:	f004 fda0 	bl	8006478 <malloc>
 8001938:	4603      	mov	r3, r0
 800193a:	461a      	mov	r2, r3
 800193c:	687b      	ldr	r3, [r7, #4]
 800193e:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001942:	3304      	adds	r3, #4
 8001944:	601a      	str	r2, [r3, #0]
}
 8001946:	bf00      	nop
 8001948:	3708      	adds	r7, #8
 800194a:	46bd      	mov	sp, r7
 800194c:	bd80      	pop	{r7, pc}
 800194e:	bf00      	nop
 8001950:	200000b0 	.word	0x200000b0

08001954 <KISS_TO_AX25>:

void KISS_TO_AX25(){
 8001954:	b580      	push	{r7, lr}
 8001956:	b082      	sub	sp, #8
 8001958:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 800195a:	4b15      	ldr	r3, [pc, #84]	; (80019b0 <KISS_TO_AX25+0x5c>)
 800195c:	607b      	str	r3, [r7, #4]

	//Update packet pointers to point to KISS members
	set_packet_pointer_KISS();
 800195e:	f7ff ffb5 	bl	80018cc <set_packet_pointer_KISS>

	//Print the kiss packet
	print_KISS();//Verify packet look correct
 8001962:	f7ff fbf7 	bl	8001154 <print_KISS>

	if(!compare_address(local_packet->address)){
 8001966:	687b      	ldr	r3, [r7, #4]
 8001968:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 800196c:	3310      	adds	r3, #16
 800196e:	681b      	ldr	r3, [r3, #0]
 8001970:	4618      	mov	r0, r3
 8001972:	f7ff fb6d 	bl	8001050 <compare_address>
 8001976:	4603      	mov	r3, r0
 8001978:	f083 0301 	eor.w	r3, r3, #1
 800197c:	b2db      	uxtb	r3, r3
 800197e:	2b00      	cmp	r3, #0
 8001980:	d112      	bne.n	80019a8 <KISS_TO_AX25+0x54>
		curr_mem += PID_len;
		local_packet->Info_Len -= PID_len;
	}
	*/

	set_packet_pointer_AX25();
 8001982:	f7ff fe99 	bl	80016b8 <set_packet_pointer_AX25>

	//USE CRC HERE TO GENERATE FCS FIELD
	rxBit_count = address_len + control_len + PID_len + local_packet->Info_Len; //for crc generate and bitstuffing
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 800198c:	681b      	ldr	r3, [r3, #0]
 800198e:	3380      	adds	r3, #128	; 0x80
 8001990:	4a08      	ldr	r2, [pc, #32]	; (80019b4 <KISS_TO_AX25+0x60>)
 8001992:	6013      	str	r3, [r2, #0]
	crc_generate();
 8001994:	f000 f928 	bl	8001be8 <crc_generate>

	//BIT STUFFING NEEDED
	bitstuffing(local_packet);
 8001998:	6878      	ldr	r0, [r7, #4]
 800199a:	f000 f81f 	bl	80019dc <bitstuffing>
	rxBit_count = 0;
 800199e:	4b05      	ldr	r3, [pc, #20]	; (80019b4 <KISS_TO_AX25+0x60>)
 80019a0:	2200      	movs	r2, #0
 80019a2:	601a      	str	r2, [r3, #0]

	return true; //valid packet
 80019a4:	bf00      	nop
 80019a6:	e000      	b.n	80019aa <KISS_TO_AX25+0x56>
		return false; //discard
 80019a8:	bf00      	nop
}
 80019aa:	3708      	adds	r7, #8
 80019ac:	46bd      	mov	sp, r7
 80019ae:	bd80      	pop	{r7, pc}
 80019b0:	200000b0 	.word	0x200000b0
 80019b4:	20000094 	.word	0x20000094

080019b8 <bit_shift>:

void bit_shift(bool* array,int bits_left){
 80019b8:	b580      	push	{r7, lr}
 80019ba:	b082      	sub	sp, #8
 80019bc:	af00      	add	r7, sp, #0
 80019be:	6078      	str	r0, [r7, #4]
 80019c0:	6039      	str	r1, [r7, #0]
	memcpy(array+2,array+1,bits_left*bool_size);
 80019c2:	687b      	ldr	r3, [r7, #4]
 80019c4:	1c98      	adds	r0, r3, #2
 80019c6:	687b      	ldr	r3, [r7, #4]
 80019c8:	3301      	adds	r3, #1
 80019ca:	683a      	ldr	r2, [r7, #0]
 80019cc:	4619      	mov	r1, r3
 80019ce:	f004 fd63 	bl	8006498 <memcpy>
}
 80019d2:	bf00      	nop
 80019d4:	3708      	adds	r7, #8
 80019d6:	46bd      	mov	sp, r7
 80019d8:	bd80      	pop	{r7, pc}
	...

080019dc <bitstuffing>:

void bitstuffing(struct PACKET_STRUCT* packet){
 80019dc:	b580      	push	{r7, lr}
 80019de:	b088      	sub	sp, #32
 80019e0:	af00      	add	r7, sp, #0
 80019e2:	6078      	str	r0, [r7, #4]
	packet->stuffed_notFCS = 0;
 80019e4:	687b      	ldr	r3, [r7, #4]
 80019e6:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80019ea:	3310      	adds	r3, #16
 80019ec:	2200      	movs	r2, #0
 80019ee:	601a      	str	r2, [r3, #0]
	packet->stuffed_FCS = 0;
 80019f0:	687b      	ldr	r3, [r7, #4]
 80019f2:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80019f6:	3314      	adds	r3, #20
 80019f8:	2200      	movs	r2, #0
 80019fa:	601a      	str	r2, [r3, #0]

	int ones_count = 0;
 80019fc:	2300      	movs	r3, #0
 80019fe:	61fb      	str	r3, [r7, #28]
	int bits_left = rxBit_count + FCS_len; //keeps track of how many bits have been iterated through in the AX.25 packet
 8001a00:	4b47      	ldr	r3, [pc, #284]	; (8001b20 <bitstuffing+0x144>)
 8001a02:	681b      	ldr	r3, [r3, #0]
 8001a04:	3310      	adds	r3, #16
 8001a06:	61bb      	str	r3, [r7, #24]
	int bit_shifts = 0;			 //keeps track of how many bitstuffed zeros have been added
 8001a08:	2300      	movs	r3, #0
 8001a0a:	617b      	str	r3, [r7, #20]

	//bit stuff fields for AX25 excluding FCS
	for(int i = 0; i < rxBit_count+bit_shifts;i++){
 8001a0c:	2300      	movs	r3, #0
 8001a0e:	613b      	str	r3, [r7, #16]
 8001a10:	e037      	b.n	8001a82 <bitstuffing+0xa6>
		bits_left--;
 8001a12:	69bb      	ldr	r3, [r7, #24]
 8001a14:	3b01      	subs	r3, #1
 8001a16:	61bb      	str	r3, [r7, #24]
		if(packet->KISS_PACKET[i]){
 8001a18:	687a      	ldr	r2, [r7, #4]
 8001a1a:	693b      	ldr	r3, [r7, #16]
 8001a1c:	4413      	add	r3, r2
 8001a1e:	f603 235f 	addw	r3, r3, #2655	; 0xa5f
 8001a22:	781b      	ldrb	r3, [r3, #0]
 8001a24:	2b00      	cmp	r3, #0
 8001a26:	d029      	beq.n	8001a7c <bitstuffing+0xa0>
			ones_count++;
 8001a28:	69fb      	ldr	r3, [r7, #28]
 8001a2a:	3301      	adds	r3, #1
 8001a2c:	61fb      	str	r3, [r7, #28]
			//add bitstuffed zeros after 5 contigious 1's
			if(ones_count == 5){
 8001a2e:	69fb      	ldr	r3, [r7, #28]
 8001a30:	2b05      	cmp	r3, #5
 8001a32:	d123      	bne.n	8001a7c <bitstuffing+0xa0>
				bit_shift(&(packet->KISS_PACKET[i]),bits_left);
 8001a34:	693b      	ldr	r3, [r7, #16]
 8001a36:	f603 2358 	addw	r3, r3, #2648	; 0xa58
 8001a3a:	687a      	ldr	r2, [r7, #4]
 8001a3c:	4413      	add	r3, r2
 8001a3e:	3307      	adds	r3, #7
 8001a40:	69b9      	ldr	r1, [r7, #24]
 8001a42:	4618      	mov	r0, r3
 8001a44:	f7ff ffb8 	bl	80019b8 <bit_shift>
				packet->KISS_PACKET[i+1] = false;
 8001a48:	693b      	ldr	r3, [r7, #16]
 8001a4a:	3301      	adds	r3, #1
 8001a4c:	687a      	ldr	r2, [r7, #4]
 8001a4e:	4413      	add	r3, r2
 8001a50:	2200      	movs	r2, #0
 8001a52:	f883 2a5f 	strb.w	r2, [r3, #2655]	; 0xa5f
				bits_left++; //bitstuffed zero added
 8001a56:	69bb      	ldr	r3, [r7, #24]
 8001a58:	3301      	adds	r3, #1
 8001a5a:	61bb      	str	r3, [r7, #24]
				bit_shifts++;
 8001a5c:	697b      	ldr	r3, [r7, #20]
 8001a5e:	3301      	adds	r3, #1
 8001a60:	617b      	str	r3, [r7, #20]
				ones_count = 0;
 8001a62:	2300      	movs	r3, #0
 8001a64:	61fb      	str	r3, [r7, #28]
				packet->stuffed_notFCS++;
 8001a66:	687b      	ldr	r3, [r7, #4]
 8001a68:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001a6c:	3310      	adds	r3, #16
 8001a6e:	681b      	ldr	r3, [r3, #0]
 8001a70:	1c5a      	adds	r2, r3, #1
 8001a72:	687b      	ldr	r3, [r7, #4]
 8001a74:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001a78:	3310      	adds	r3, #16
 8001a7a:	601a      	str	r2, [r3, #0]
	for(int i = 0; i < rxBit_count+bit_shifts;i++){
 8001a7c:	693b      	ldr	r3, [r7, #16]
 8001a7e:	3301      	adds	r3, #1
 8001a80:	613b      	str	r3, [r7, #16]
 8001a82:	4b27      	ldr	r3, [pc, #156]	; (8001b20 <bitstuffing+0x144>)
 8001a84:	681a      	ldr	r2, [r3, #0]
 8001a86:	697b      	ldr	r3, [r7, #20]
 8001a88:	4413      	add	r3, r2
 8001a8a:	693a      	ldr	r2, [r7, #16]
 8001a8c:	429a      	cmp	r2, r3
 8001a8e:	dbc0      	blt.n	8001a12 <bitstuffing+0x36>
			}
		}
	}

	//bit stuff FCS field
	for(int i = 0; i < FCS_len;i++){
 8001a90:	2300      	movs	r3, #0
 8001a92:	60fb      	str	r3, [r7, #12]
 8001a94:	e03d      	b.n	8001b12 <bitstuffing+0x136>
		bits_left--;
 8001a96:	69bb      	ldr	r3, [r7, #24]
 8001a98:	3b01      	subs	r3, #1
 8001a9a:	61bb      	str	r3, [r7, #24]
		if(packet->FCS[i]){
 8001a9c:	687b      	ldr	r3, [r7, #4]
 8001a9e:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001aa2:	3304      	adds	r3, #4
 8001aa4:	681a      	ldr	r2, [r3, #0]
 8001aa6:	68fb      	ldr	r3, [r7, #12]
 8001aa8:	4413      	add	r3, r2
 8001aaa:	781b      	ldrb	r3, [r3, #0]
 8001aac:	2b00      	cmp	r3, #0
 8001aae:	d02d      	beq.n	8001b0c <bitstuffing+0x130>
			ones_count++;
 8001ab0:	69fb      	ldr	r3, [r7, #28]
 8001ab2:	3301      	adds	r3, #1
 8001ab4:	61fb      	str	r3, [r7, #28]
			//add bitstuffed zeros after 5 contigious 1's
			if(ones_count == 5){
 8001ab6:	69fb      	ldr	r3, [r7, #28]
 8001ab8:	2b05      	cmp	r3, #5
 8001aba:	d127      	bne.n	8001b0c <bitstuffing+0x130>
				bit_shift(&(packet->FCS[i]),bits_left);
 8001abc:	687b      	ldr	r3, [r7, #4]
 8001abe:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001ac2:	3304      	adds	r3, #4
 8001ac4:	681a      	ldr	r2, [r3, #0]
 8001ac6:	68fb      	ldr	r3, [r7, #12]
 8001ac8:	4413      	add	r3, r2
 8001aca:	69b9      	ldr	r1, [r7, #24]
 8001acc:	4618      	mov	r0, r3
 8001ace:	f7ff ff73 	bl	80019b8 <bit_shift>
				packet->FCS[i+1] = false;
 8001ad2:	687b      	ldr	r3, [r7, #4]
 8001ad4:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001ad8:	3304      	adds	r3, #4
 8001ada:	681a      	ldr	r2, [r3, #0]
 8001adc:	68fb      	ldr	r3, [r7, #12]
 8001ade:	3301      	adds	r3, #1
 8001ae0:	4413      	add	r3, r2
 8001ae2:	2200      	movs	r2, #0
 8001ae4:	701a      	strb	r2, [r3, #0]
				bits_left++; //bitstuffed zero added
 8001ae6:	69bb      	ldr	r3, [r7, #24]
 8001ae8:	3301      	adds	r3, #1
 8001aea:	61bb      	str	r3, [r7, #24]
				bit_shifts++;
 8001aec:	697b      	ldr	r3, [r7, #20]
 8001aee:	3301      	adds	r3, #1
 8001af0:	617b      	str	r3, [r7, #20]
				ones_count = 0;
 8001af2:	2300      	movs	r3, #0
 8001af4:	61fb      	str	r3, [r7, #28]
				packet->stuffed_FCS++;
 8001af6:	687b      	ldr	r3, [r7, #4]
 8001af8:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001afc:	3314      	adds	r3, #20
 8001afe:	681b      	ldr	r3, [r3, #0]
 8001b00:	1c5a      	adds	r2, r3, #1
 8001b02:	687b      	ldr	r3, [r7, #4]
 8001b04:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001b08:	3314      	adds	r3, #20
 8001b0a:	601a      	str	r2, [r3, #0]
	for(int i = 0; i < FCS_len;i++){
 8001b0c:	68fb      	ldr	r3, [r7, #12]
 8001b0e:	3301      	adds	r3, #1
 8001b10:	60fb      	str	r3, [r7, #12]
 8001b12:	68fb      	ldr	r3, [r7, #12]
 8001b14:	2b0f      	cmp	r3, #15
 8001b16:	ddbe      	ble.n	8001a96 <bitstuffing+0xba>
			}
		}
	}
}
 8001b18:	bf00      	nop
 8001b1a:	3720      	adds	r7, #32
 8001b1c:	46bd      	mov	sp, r7
 8001b1e:	bd80      	pop	{r7, pc}
 8001b20:	20000094 	.word	0x20000094

08001b24 <crc_calc>:
//END OF KISS to AX.25 data flow

//---------------------- FCS Generation -----------------------------------------------------------------------------------------------

//CRC Calculations
void crc_calc(int in_bit, int * crc_ptr_in, int * crc_count_ptr_in){
 8001b24:	b580      	push	{r7, lr}
 8001b26:	b088      	sub	sp, #32
 8001b28:	af00      	add	r7, sp, #0
 8001b2a:	60f8      	str	r0, [r7, #12]
 8001b2c:	60b9      	str	r1, [r7, #8]
 8001b2e:	607a      	str	r2, [r7, #4]
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001b30:	4b2b      	ldr	r3, [pc, #172]	; (8001be0 <crc_calc+0xbc>)
 8001b32:	61fb      	str	r3, [r7, #28]
	int out_bit;
    int poly = 0x8408;             			//reverse order of 0x1021
 8001b34:	f248 4308 	movw	r3, #33800	; 0x8408
 8001b38:	61bb      	str	r3, [r7, #24]

    out_bit = in_bit ^ (*crc_ptr_in%2); 		//xor lsb of current crc with input bit
 8001b3a:	68bb      	ldr	r3, [r7, #8]
 8001b3c:	681b      	ldr	r3, [r3, #0]
 8001b3e:	2b00      	cmp	r3, #0
 8001b40:	f003 0301 	and.w	r3, r3, #1
 8001b44:	bfb8      	it	lt
 8001b46:	425b      	neglt	r3, r3
 8001b48:	68fa      	ldr	r2, [r7, #12]
 8001b4a:	4053      	eors	r3, r2
 8001b4c:	617b      	str	r3, [r7, #20]
	*crc_ptr_in >>= 1;               	//right shift by 1
 8001b4e:	68bb      	ldr	r3, [r7, #8]
 8001b50:	681b      	ldr	r3, [r3, #0]
 8001b52:	105a      	asrs	r2, r3, #1
 8001b54:	68bb      	ldr	r3, [r7, #8]
 8001b56:	601a      	str	r2, [r3, #0]
	poly = (out_bit == 1) ? 0x8408 : 0;
 8001b58:	697b      	ldr	r3, [r7, #20]
 8001b5a:	2b01      	cmp	r3, #1
 8001b5c:	d102      	bne.n	8001b64 <crc_calc+0x40>
 8001b5e:	f248 4308 	movw	r3, #33800	; 0x8408
 8001b62:	e000      	b.n	8001b66 <crc_calc+0x42>
 8001b64:	2300      	movs	r3, #0
 8001b66:	61bb      	str	r3, [r7, #24]
	*crc_ptr_in ^= poly;
 8001b68:	68bb      	ldr	r3, [r7, #8]
 8001b6a:	681a      	ldr	r2, [r3, #0]
 8001b6c:	69bb      	ldr	r3, [r7, #24]
 8001b6e:	405a      	eors	r2, r3
 8001b70:	68bb      	ldr	r3, [r7, #8]
 8001b72:	601a      	str	r2, [r3, #0]
	*crc_count_ptr_in+=1;//Increment count
 8001b74:	687b      	ldr	r3, [r7, #4]
 8001b76:	681b      	ldr	r3, [r3, #0]
 8001b78:	1c5a      	adds	r2, r3, #1
 8001b7a:	687b      	ldr	r3, [r7, #4]
 8001b7c:	601a      	str	r2, [r3, #0]

    //End condition
	if(*crc_count_ptr_in >= rxBit_count){
 8001b7e:	687b      	ldr	r3, [r7, #4]
 8001b80:	681a      	ldr	r2, [r3, #0]
 8001b82:	4b18      	ldr	r3, [pc, #96]	; (8001be4 <crc_calc+0xc0>)
 8001b84:	681b      	ldr	r3, [r3, #0]
 8001b86:	429a      	cmp	r2, r3
 8001b88:	db25      	blt.n	8001bd6 <crc_calc+0xb2>
    	*crc_ptr_in ^= 0xFFFF;//Complete CRC by XOR with all ones (one's complement)
 8001b8a:	68bb      	ldr	r3, [r7, #8]
 8001b8c:	681b      	ldr	r3, [r3, #0]
 8001b8e:	f483 437f 	eor.w	r3, r3, #65280	; 0xff00
 8001b92:	f083 03ff 	eor.w	r3, r3, #255	; 0xff
 8001b96:	68ba      	ldr	r2, [r7, #8]
 8001b98:	6013      	str	r3, [r2, #0]
    	if(local_packet->check_crc == false){
 8001b9a:	69fb      	ldr	r3, [r7, #28]
 8001b9c:	f503 5399 	add.w	r3, r3, #4896	; 0x1320
 8001ba0:	781b      	ldrb	r3, [r3, #0]
 8001ba2:	f083 0301 	eor.w	r3, r3, #1
 8001ba6:	b2db      	uxtb	r3, r3
 8001ba8:	2b00      	cmp	r3, #0
 8001baa:	d014      	beq.n	8001bd6 <crc_calc+0xb2>

    		//REMEBER TO CHECK THIS CRC conversion FOR ACCURACY LATER
    		conv_HEX_to_BIN(local_packet->crc,&(local_packet->FCS));
 8001bac:	69fb      	ldr	r3, [r7, #28]
 8001bae:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001bb2:	3318      	adds	r3, #24
 8001bb4:	681b      	ldr	r3, [r3, #0]
 8001bb6:	b2da      	uxtb	r2, r3
 8001bb8:	69fb      	ldr	r3, [r7, #28]
 8001bba:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001bbe:	3304      	adds	r3, #4
 8001bc0:	4619      	mov	r1, r3
 8001bc2:	4610      	mov	r0, r2
 8001bc4:	f7ff f99a 	bl	8000efc <conv_HEX_to_BIN>
    		local_packet->crc = 0xFFFF;
 8001bc8:	69fb      	ldr	r3, [r7, #28]
 8001bca:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001bce:	3318      	adds	r3, #24
 8001bd0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001bd4:	601a      	str	r2, [r3, #0]
    	}
    }
}
 8001bd6:	bf00      	nop
 8001bd8:	3720      	adds	r7, #32
 8001bda:	46bd      	mov	sp, r7
 8001bdc:	bd80      	pop	{r7, pc}
 8001bde:	bf00      	nop
 8001be0:	200000b0 	.word	0x200000b0
 8001be4:	20000094 	.word	0x20000094

08001be8 <crc_generate>:

void crc_generate(){
 8001be8:	b580      	push	{r7, lr}
 8001bea:	b088      	sub	sp, #32
 8001bec:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001bee:	4b39      	ldr	r3, [pc, #228]	; (8001cd4 <crc_generate+0xec>)
 8001bf0:	60fb      	str	r3, [r7, #12]
	int * crc_ptr = &local_packet->crc;
 8001bf2:	68fb      	ldr	r3, [r7, #12]
 8001bf4:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001bf8:	3318      	adds	r3, #24
 8001bfa:	60bb      	str	r3, [r7, #8]
	int * crc_count_ptr = &local_packet->crc_count;
 8001bfc:	68fb      	ldr	r3, [r7, #12]
 8001bfe:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001c02:	331c      	adds	r3, #28
 8001c04:	607b      	str	r3, [r7, #4]

	*crc_ptr = 0xFFFF;
 8001c06:	68bb      	ldr	r3, [r7, #8]
 8001c08:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001c0c:	601a      	str	r2, [r3, #0]
	*crc_count_ptr = 0;
 8001c0e:	687b      	ldr	r3, [r7, #4]
 8001c10:	2200      	movs	r2, #0
 8001c12:	601a      	str	r2, [r3, #0]

	//Generate CRC from packet pointers of current packet type

	//have to be inserted in reverse order
	//Calculate CRC for info
	for(int i = local_packet->Info_Len-1; i >= 0;i--){
 8001c14:	68fb      	ldr	r3, [r7, #12]
 8001c16:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001c1a:	681b      	ldr	r3, [r3, #0]
 8001c1c:	3b01      	subs	r3, #1
 8001c1e:	61fb      	str	r3, [r7, #28]
 8001c20:	e00f      	b.n	8001c42 <crc_generate+0x5a>
		//Call crc_calc per bit
		crc_calc((int)local_packet->Info[i],crc_ptr,crc_count_ptr);
 8001c22:	68fb      	ldr	r3, [r7, #12]
 8001c24:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001c28:	331c      	adds	r3, #28
 8001c2a:	681a      	ldr	r2, [r3, #0]
 8001c2c:	69fb      	ldr	r3, [r7, #28]
 8001c2e:	4413      	add	r3, r2
 8001c30:	781b      	ldrb	r3, [r3, #0]
 8001c32:	687a      	ldr	r2, [r7, #4]
 8001c34:	68b9      	ldr	r1, [r7, #8]
 8001c36:	4618      	mov	r0, r3
 8001c38:	f7ff ff74 	bl	8001b24 <crc_calc>
	for(int i = local_packet->Info_Len-1; i >= 0;i--){
 8001c3c:	69fb      	ldr	r3, [r7, #28]
 8001c3e:	3b01      	subs	r3, #1
 8001c40:	61fb      	str	r3, [r7, #28]
 8001c42:	69fb      	ldr	r3, [r7, #28]
 8001c44:	2b00      	cmp	r3, #0
 8001c46:	daec      	bge.n	8001c22 <crc_generate+0x3a>
	}

	//Calculate CRC for PID (if packet is of type i-frame)
//	if(local_packet->i_frame_packet){
	for(int i = PID_len-1; i >= 0; i--){
 8001c48:	2307      	movs	r3, #7
 8001c4a:	61bb      	str	r3, [r7, #24]
 8001c4c:	e00f      	b.n	8001c6e <crc_generate+0x86>
		//Call crc_calc per bit
		crc_calc((int)local_packet->PID[i],crc_ptr,crc_count_ptr);
 8001c4e:	68fb      	ldr	r3, [r7, #12]
 8001c50:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001c54:	3318      	adds	r3, #24
 8001c56:	681a      	ldr	r2, [r3, #0]
 8001c58:	69bb      	ldr	r3, [r7, #24]
 8001c5a:	4413      	add	r3, r2
 8001c5c:	781b      	ldrb	r3, [r3, #0]
 8001c5e:	687a      	ldr	r2, [r7, #4]
 8001c60:	68b9      	ldr	r1, [r7, #8]
 8001c62:	4618      	mov	r0, r3
 8001c64:	f7ff ff5e 	bl	8001b24 <crc_calc>
	for(int i = PID_len-1; i >= 0; i--){
 8001c68:	69bb      	ldr	r3, [r7, #24]
 8001c6a:	3b01      	subs	r3, #1
 8001c6c:	61bb      	str	r3, [r7, #24]
 8001c6e:	69bb      	ldr	r3, [r7, #24]
 8001c70:	2b00      	cmp	r3, #0
 8001c72:	daec      	bge.n	8001c4e <crc_generate+0x66>
	}
//	}

	//Calculate CRC for control
	for(int i = control_len-1; i >= 0;i--){
 8001c74:	2307      	movs	r3, #7
 8001c76:	617b      	str	r3, [r7, #20]
 8001c78:	e00f      	b.n	8001c9a <crc_generate+0xb2>
		//Call crc_calc per bit
		crc_calc((int)local_packet->control[i],crc_ptr,crc_count_ptr);
 8001c7a:	68fb      	ldr	r3, [r7, #12]
 8001c7c:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001c80:	3314      	adds	r3, #20
 8001c82:	681a      	ldr	r2, [r3, #0]
 8001c84:	697b      	ldr	r3, [r7, #20]
 8001c86:	4413      	add	r3, r2
 8001c88:	781b      	ldrb	r3, [r3, #0]
 8001c8a:	687a      	ldr	r2, [r7, #4]
 8001c8c:	68b9      	ldr	r1, [r7, #8]
 8001c8e:	4618      	mov	r0, r3
 8001c90:	f7ff ff48 	bl	8001b24 <crc_calc>
	for(int i = control_len-1; i >= 0;i--){
 8001c94:	697b      	ldr	r3, [r7, #20]
 8001c96:	3b01      	subs	r3, #1
 8001c98:	617b      	str	r3, [r7, #20]
 8001c9a:	697b      	ldr	r3, [r7, #20]
 8001c9c:	2b00      	cmp	r3, #0
 8001c9e:	daec      	bge.n	8001c7a <crc_generate+0x92>
	}

		//Calculate CRC for address
	for(int i = address_len-1; i >= 0;i--){
 8001ca0:	236f      	movs	r3, #111	; 0x6f
 8001ca2:	613b      	str	r3, [r7, #16]
 8001ca4:	e00f      	b.n	8001cc6 <crc_generate+0xde>
		//Call crc_calc per bit
		crc_calc((int)local_packet->address[i],crc_ptr,crc_count_ptr);
 8001ca6:	68fb      	ldr	r3, [r7, #12]
 8001ca8:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001cac:	3310      	adds	r3, #16
 8001cae:	681a      	ldr	r2, [r3, #0]
 8001cb0:	693b      	ldr	r3, [r7, #16]
 8001cb2:	4413      	add	r3, r2
 8001cb4:	781b      	ldrb	r3, [r3, #0]
 8001cb6:	687a      	ldr	r2, [r7, #4]
 8001cb8:	68b9      	ldr	r1, [r7, #8]
 8001cba:	4618      	mov	r0, r3
 8001cbc:	f7ff ff32 	bl	8001b24 <crc_calc>
	for(int i = address_len-1; i >= 0;i--){
 8001cc0:	693b      	ldr	r3, [r7, #16]
 8001cc2:	3b01      	subs	r3, #1
 8001cc4:	613b      	str	r3, [r7, #16]
 8001cc6:	693b      	ldr	r3, [r7, #16]
 8001cc8:	2b00      	cmp	r3, #0
 8001cca:	daec      	bge.n	8001ca6 <crc_generate+0xbe>
	}
}
 8001ccc:	bf00      	nop
 8001cce:	3720      	adds	r7, #32
 8001cd0:	46bd      	mov	sp, r7
 8001cd2:	bd80      	pop	{r7, pc}
 8001cd4:	200000b0 	.word	0x200000b0

08001cd8 <initProgram>:
//****************************************************************************************************************
bool mode;
bool midbit = false;
bool changeMode = false;

void initProgram(bool modeStart) {
 8001cd8:	b580      	push	{r7, lr}
 8001cda:	b082      	sub	sp, #8
 8001cdc:	af00      	add	r7, sp, #0
 8001cde:	4603      	mov	r3, r0
 8001ce0:	71fb      	strb	r3, [r7, #7]
	initOUTData();
 8001ce2:	f000 fa49 	bl	8002178 <initOUTData>

	//Set hardware properly
	mode = modeStart;
 8001ce6:	4a12      	ldr	r2, [pc, #72]	; (8001d30 <initProgram+0x58>)
 8001ce8:	79fb      	ldrb	r3, [r7, #7]
 8001cea:	7013      	strb	r3, [r2, #0]
	toggleMode();
 8001cec:	f000 f826 	bl	8001d3c <toggleMode>
	toggleMode();
 8001cf0:	f000 f824 	bl	8001d3c <toggleMode>

	if (mode) {
 8001cf4:	4b0e      	ldr	r3, [pc, #56]	; (8001d30 <initProgram+0x58>)
 8001cf6:	781b      	ldrb	r3, [r3, #0]
 8001cf8:	2b00      	cmp	r3, #0
 8001cfa:	d009      	beq.n	8001d10 <initProgram+0x38>
		htim2.Instance->ARR = TIM2_AUTORELOAD_TX;
 8001cfc:	4b0d      	ldr	r3, [pc, #52]	; (8001d34 <initProgram+0x5c>)
 8001cfe:	681b      	ldr	r3, [r3, #0]
 8001d00:	2264      	movs	r2, #100	; 0x64
 8001d02:	62da      	str	r2, [r3, #44]	; 0x2c
		htim3.Instance->ARR = TIM3_AUTORELOAD_TX;
 8001d04:	4b0c      	ldr	r3, [pc, #48]	; (8001d38 <initProgram+0x60>)
 8001d06:	681b      	ldr	r3, [r3, #0]
 8001d08:	f240 323f 	movw	r2, #831	; 0x33f
 8001d0c:	62da      	str	r2, [r3, #44]	; 0x2c
 8001d0e:	e009      	b.n	8001d24 <initProgram+0x4c>
	} else {
		htim2.Instance->ARR = TIM2_AUTORELOAD_RX;
 8001d10:	4b08      	ldr	r3, [pc, #32]	; (8001d34 <initProgram+0x5c>)
 8001d12:	681b      	ldr	r3, [r3, #0]
 8001d14:	f242 7210 	movw	r2, #10000	; 0x2710
 8001d18:	62da      	str	r2, [r3, #44]	; 0x2c
		htim3.Instance->ARR = TIM3_AUTORELOAD_RX;
 8001d1a:	4b07      	ldr	r3, [pc, #28]	; (8001d38 <initProgram+0x60>)
 8001d1c:	681b      	ldr	r3, [r3, #0]
 8001d1e:	f44f 72d0 	mov.w	r2, #416	; 0x1a0
 8001d22:	62da      	str	r2, [r3, #44]	; 0x2c
	}

	init_AX25();
 8001d24:	f7ff f916 	bl	8000f54 <init_AX25>
}
 8001d28:	bf00      	nop
 8001d2a:	3708      	adds	r7, #8
 8001d2c:	46bd      	mov	sp, r7
 8001d2e:	bd80      	pop	{r7, pc}
 8001d30:	20003d08 	.word	0x20003d08
 8001d34:	20003d20 	.word	0x20003d20
 8001d38:	20002c68 	.word	0x20002c68

08001d3c <toggleMode>:



void toggleMode() {
 8001d3c:	b580      	push	{r7, lr}
 8001d3e:	af00      	add	r7, sp, #0
	//Disable HW interrupt
	HAL_NVIC_DisableIRQ(EXTI0_IRQn);
 8001d40:	2006      	movs	r0, #6
 8001d42:	f001 faee 	bl	8003322 <HAL_NVIC_DisableIRQ>

	//Stop DAC
	HAL_DAC_Stop_DMA(&hdac, DAC_CHANNEL_1);
 8001d46:	2100      	movs	r1, #0
 8001d48:	4824      	ldr	r0, [pc, #144]	; (8001ddc <toggleMode+0xa0>)
 8001d4a:	f001 fbd5 	bl	80034f8 <HAL_DAC_Stop_DMA>

	//Toggle mode
	mode = !mode;
 8001d4e:	4b24      	ldr	r3, [pc, #144]	; (8001de0 <toggleMode+0xa4>)
 8001d50:	781b      	ldrb	r3, [r3, #0]
 8001d52:	2b00      	cmp	r3, #0
 8001d54:	bf14      	ite	ne
 8001d56:	2301      	movne	r3, #1
 8001d58:	2300      	moveq	r3, #0
 8001d5a:	b2db      	uxtb	r3, r3
 8001d5c:	f083 0301 	eor.w	r3, r3, #1
 8001d60:	b2db      	uxtb	r3, r3
 8001d62:	f003 0301 	and.w	r3, r3, #1
 8001d66:	b2da      	uxtb	r2, r3
 8001d68:	4b1d      	ldr	r3, [pc, #116]	; (8001de0 <toggleMode+0xa4>)
 8001d6a:	701a      	strb	r2, [r3, #0]
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, mode);
 8001d6c:	4b1c      	ldr	r3, [pc, #112]	; (8001de0 <toggleMode+0xa4>)
 8001d6e:	781b      	ldrb	r3, [r3, #0]
 8001d70:	461a      	mov	r2, r3
 8001d72:	2120      	movs	r1, #32
 8001d74:	481b      	ldr	r0, [pc, #108]	; (8001de4 <toggleMode+0xa8>)
 8001d76:	f002 fa87 	bl	8004288 <HAL_GPIO_WritePin>
	midbit = false;
 8001d7a:	4b1b      	ldr	r3, [pc, #108]	; (8001de8 <toggleMode+0xac>)
 8001d7c:	2200      	movs	r2, #0
 8001d7e:	701a      	strb	r2, [r3, #0]

	//Stop timer and reset count
	HAL_TIM_Base_Stop(&htim3);
 8001d80:	481a      	ldr	r0, [pc, #104]	; (8001dec <toggleMode+0xb0>)
 8001d82:	f003 f816 	bl	8004db2 <HAL_TIM_Base_Stop>
	htim3.Instance->CNT = 0;
 8001d86:	4b19      	ldr	r3, [pc, #100]	; (8001dec <toggleMode+0xb0>)
 8001d88:	681b      	ldr	r3, [r3, #0]
 8001d8a:	2200      	movs	r2, #0
 8001d8c:	625a      	str	r2, [r3, #36]	; 0x24

	if (mode) {
 8001d8e:	4b14      	ldr	r3, [pc, #80]	; (8001de0 <toggleMode+0xa4>)
 8001d90:	781b      	ldrb	r3, [r3, #0]
 8001d92:	2b00      	cmp	r3, #0
 8001d94:	d009      	beq.n	8001daa <toggleMode+0x6e>
		//Set Timer periods
		htim2.Instance->ARR = TIM2_AUTORELOAD_TX;
 8001d96:	4b16      	ldr	r3, [pc, #88]	; (8001df0 <toggleMode+0xb4>)
 8001d98:	681b      	ldr	r3, [r3, #0]
 8001d9a:	2264      	movs	r2, #100	; 0x64
 8001d9c:	62da      	str	r2, [r3, #44]	; 0x2c
		htim3.Instance->ARR = TIM3_AUTORELOAD_TX;
 8001d9e:	4b13      	ldr	r3, [pc, #76]	; (8001dec <toggleMode+0xb0>)
 8001da0:	681b      	ldr	r3, [r3, #0]
 8001da2:	f240 323f 	movw	r2, #831	; 0x33f
 8001da6:	62da      	str	r2, [r3, #44]	; 0x2c
 8001da8:	e00f      	b.n	8001dca <toggleMode+0x8e>

	} else {
		//Set Timer Periods
		htim2.Instance->ARR = TIM2_AUTORELOAD_RX;
 8001daa:	4b11      	ldr	r3, [pc, #68]	; (8001df0 <toggleMode+0xb4>)
 8001dac:	681b      	ldr	r3, [r3, #0]
 8001dae:	f242 7210 	movw	r2, #10000	; 0x2710
 8001db2:	62da      	str	r2, [r3, #44]	; 0x2c
		htim3.Instance->ARR = TIM3_AUTORELOAD_RX;
 8001db4:	4b0d      	ldr	r3, [pc, #52]	; (8001dec <toggleMode+0xb0>)
 8001db6:	681b      	ldr	r3, [r3, #0]
 8001db8:	f44f 72d0 	mov.w	r2, #416	; 0x1a0
 8001dbc:	62da      	str	r2, [r3, #44]	; 0x2c

		//Enable tim3 interrupt
		HAL_TIM_Base_Start_IT(&htim3);
 8001dbe:	480b      	ldr	r0, [pc, #44]	; (8001dec <toggleMode+0xb0>)
 8001dc0:	f003 f822 	bl	8004e08 <HAL_TIM_Base_Start_IT>

		//Enable HW interrupt
		HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8001dc4:	2006      	movs	r0, #6
 8001dc6:	f001 fa9e 	bl	8003306 <HAL_NVIC_EnableIRQ>
	}

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, 0);
 8001dca:	2200      	movs	r2, #0
 8001dcc:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001dd0:	4804      	ldr	r0, [pc, #16]	; (8001de4 <toggleMode+0xa8>)
 8001dd2:	f002 fa59 	bl	8004288 <HAL_GPIO_WritePin>
}
 8001dd6:	bf00      	nop
 8001dd8:	bd80      	pop	{r7, pc}
 8001dda:	bf00      	nop
 8001ddc:	20003d0c 	.word	0x20003d0c
 8001de0:	20003d08 	.word	0x20003d08
 8001de4:	40020000 	.word	0x40020000
 8001de8:	20000098 	.word	0x20000098
 8001dec:	20002c68 	.word	0x20002c68
 8001df0:	20003d20 	.word	0x20003d20

08001df4 <loadPeriodBuffer>:

void loadPeriodBuffer(int timerCnt) {
 8001df4:	b480      	push	{r7}
 8001df6:	b083      	sub	sp, #12
 8001df8:	af00      	add	r7, sp, #0
 8001dfa:	6078      	str	r0, [r7, #4]
	periodBuffer[periodSaveCount] = timerCnt;
 8001dfc:	4b0d      	ldr	r3, [pc, #52]	; (8001e34 <loadPeriodBuffer+0x40>)
 8001dfe:	881b      	ldrh	r3, [r3, #0]
 8001e00:	4619      	mov	r1, r3
 8001e02:	687b      	ldr	r3, [r7, #4]
 8001e04:	4a0c      	ldr	r2, [pc, #48]	; (8001e38 <loadPeriodBuffer+0x44>)
 8001e06:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
	periodSaveCount++;
 8001e0a:	4b0a      	ldr	r3, [pc, #40]	; (8001e34 <loadPeriodBuffer+0x40>)
 8001e0c:	881b      	ldrh	r3, [r3, #0]
 8001e0e:	3301      	adds	r3, #1
 8001e10:	b29a      	uxth	r2, r3
 8001e12:	4b08      	ldr	r3, [pc, #32]	; (8001e34 <loadPeriodBuffer+0x40>)
 8001e14:	801a      	strh	r2, [r3, #0]
	if (periodSaveCount >= RX_BUFFERSIZE) {
 8001e16:	4b07      	ldr	r3, [pc, #28]	; (8001e34 <loadPeriodBuffer+0x40>)
 8001e18:	881b      	ldrh	r3, [r3, #0]
 8001e1a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001e1e:	d302      	bcc.n	8001e26 <loadPeriodBuffer+0x32>
		periodSaveCount = 0;
 8001e20:	4b04      	ldr	r3, [pc, #16]	; (8001e34 <loadPeriodBuffer+0x40>)
 8001e22:	2200      	movs	r2, #0
 8001e24:	801a      	strh	r2, [r3, #0]
	}
}
 8001e26:	bf00      	nop
 8001e28:	370c      	adds	r7, #12
 8001e2a:	46bd      	mov	sp, r7
 8001e2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e30:	4770      	bx	lr
 8001e32:	bf00      	nop
 8001e34:	2000009c 	.word	0x2000009c
 8001e38:	20002d08 	.word	0x20002d08

08001e3c <Tim3IT>:
void Tim3IT() {
 8001e3c:	b580      	push	{r7, lr}
 8001e3e:	af00      	add	r7, sp, #0
	if (mode) {
 8001e40:	4b0d      	ldr	r3, [pc, #52]	; (8001e78 <Tim3IT+0x3c>)
 8001e42:	781b      	ldrb	r3, [r3, #0]
 8001e44:	2b00      	cmp	r3, #0
 8001e46:	d007      	beq.n	8001e58 <Tim3IT+0x1c>
		HAL_DAC_Stop_DMA(&hdac, DAC_CHANNEL_1);
 8001e48:	2100      	movs	r1, #0
 8001e4a:	480c      	ldr	r0, [pc, #48]	; (8001e7c <Tim3IT+0x40>)
 8001e4c:	f001 fb54 	bl	80034f8 <HAL_DAC_Stop_DMA>
		midbit = false;
 8001e50:	4b0b      	ldr	r3, [pc, #44]	; (8001e80 <Tim3IT+0x44>)
 8001e52:	2200      	movs	r2, #0
 8001e54:	701a      	strb	r2, [r3, #0]
		if(sampusecount>SAMP_PER_BAUD){
			loadPeriodBuffer(0);
		}
		sampusecount++;
	}
}
 8001e56:	e00c      	b.n	8001e72 <Tim3IT+0x36>
		if(sampusecount>SAMP_PER_BAUD){
 8001e58:	4b0a      	ldr	r3, [pc, #40]	; (8001e84 <Tim3IT+0x48>)
 8001e5a:	781b      	ldrb	r3, [r3, #0]
 8001e5c:	2b02      	cmp	r3, #2
 8001e5e:	d902      	bls.n	8001e66 <Tim3IT+0x2a>
			loadPeriodBuffer(0);
 8001e60:	2000      	movs	r0, #0
 8001e62:	f7ff ffc7 	bl	8001df4 <loadPeriodBuffer>
		sampusecount++;
 8001e66:	4b07      	ldr	r3, [pc, #28]	; (8001e84 <Tim3IT+0x48>)
 8001e68:	781b      	ldrb	r3, [r3, #0]
 8001e6a:	3301      	adds	r3, #1
 8001e6c:	b2da      	uxtb	r2, r3
 8001e6e:	4b05      	ldr	r3, [pc, #20]	; (8001e84 <Tim3IT+0x48>)
 8001e70:	701a      	strb	r2, [r3, #0]
}
 8001e72:	bf00      	nop
 8001e74:	bd80      	pop	{r7, pc}
 8001e76:	bf00      	nop
 8001e78:	20003d08 	.word	0x20003d08
 8001e7c:	20003d0c 	.word	0x20003d0c
 8001e80:	20000098 	.word	0x20000098
 8001e84:	2000009a 	.word	0x2000009a

08001e88 <FreqCounterPinEXTI>:
void FreqCounterPinEXTI() {
 8001e88:	b580      	push	{r7, lr}
 8001e8a:	af00      	add	r7, sp, #0
	loadPeriodBuffer(htim2.Instance->CNT);
 8001e8c:	4b07      	ldr	r3, [pc, #28]	; (8001eac <FreqCounterPinEXTI+0x24>)
 8001e8e:	681b      	ldr	r3, [r3, #0]
 8001e90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e92:	4618      	mov	r0, r3
 8001e94:	f7ff ffae 	bl	8001df4 <loadPeriodBuffer>
	htim2.Instance->CNT = 0;
 8001e98:	4b04      	ldr	r3, [pc, #16]	; (8001eac <FreqCounterPinEXTI+0x24>)
 8001e9a:	681b      	ldr	r3, [r3, #0]
 8001e9c:	2200      	movs	r2, #0
 8001e9e:	625a      	str	r2, [r3, #36]	; 0x24
	sampusecount = 0;
 8001ea0:	4b03      	ldr	r3, [pc, #12]	; (8001eb0 <FreqCounterPinEXTI+0x28>)
 8001ea2:	2200      	movs	r2, #0
 8001ea4:	701a      	strb	r2, [r3, #0]
}
 8001ea6:	bf00      	nop
 8001ea8:	bd80      	pop	{r7, pc}
 8001eaa:	bf00      	nop
 8001eac:	20003d20 	.word	0x20003d20
 8001eb0:	2000009a 	.word	0x2000009a
 8001eb4:	00000000 	.word	0x00000000

08001eb8 <edit_sineval>:
bool bitStream[10];

uint32_t lowFrequency[2 * LOWF_SAMP];
uint32_t highFrequency[2 * HIGHF_SAMP];

void edit_sineval(uint32_t *sinArray, int arraySize, int waves, float shiftPercent) {
 8001eb8:	b5b0      	push	{r4, r5, r7, lr}
 8001eba:	b08c      	sub	sp, #48	; 0x30
 8001ebc:	af00      	add	r7, sp, #0
 8001ebe:	60f8      	str	r0, [r7, #12]
 8001ec0:	60b9      	str	r1, [r7, #8]
 8001ec2:	607a      	str	r2, [r7, #4]
 8001ec4:	ed87 0a00 	vstr	s0, [r7]
	double ampl 		= OUT_AMPL / 2;						//Amplitude of wave
 8001ec8:	f04f 0300 	mov.w	r3, #0
 8001ecc:	4c3c      	ldr	r4, [pc, #240]	; (8001fc0 <edit_sineval+0x108>)
 8001ece:	e9c7 3408 	strd	r3, r4, [r7, #32]
	double phaseShift 	= shiftPercent * 2 * PI;	//Desired phase shift
 8001ed2:	edd7 7a00 	vldr	s15, [r7]
 8001ed6:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8001eda:	ee17 0a90 	vmov	r0, s15
 8001ede:	f7fe fb53 	bl	8000588 <__aeabi_f2d>
 8001ee2:	a333      	add	r3, pc, #204	; (adr r3, 8001fb0 <edit_sineval+0xf8>)
 8001ee4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ee8:	f7fe fba6 	bl	8000638 <__aeabi_dmul>
 8001eec:	4603      	mov	r3, r0
 8001eee:	460c      	mov	r4, r1
 8001ef0:	e9c7 3406 	strd	r3, r4, [r7, #24]
	double w 			= 2 * PI  * waves / arraySize;
 8001ef4:	6878      	ldr	r0, [r7, #4]
 8001ef6:	f7fe fb35 	bl	8000564 <__aeabi_i2d>
 8001efa:	a32f      	add	r3, pc, #188	; (adr r3, 8001fb8 <edit_sineval+0x100>)
 8001efc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f00:	f7fe fb9a 	bl	8000638 <__aeabi_dmul>
 8001f04:	4603      	mov	r3, r0
 8001f06:	460c      	mov	r4, r1
 8001f08:	4625      	mov	r5, r4
 8001f0a:	461c      	mov	r4, r3
 8001f0c:	68b8      	ldr	r0, [r7, #8]
 8001f0e:	f7fe fb29 	bl	8000564 <__aeabi_i2d>
 8001f12:	4602      	mov	r2, r0
 8001f14:	460b      	mov	r3, r1
 8001f16:	4620      	mov	r0, r4
 8001f18:	4629      	mov	r1, r5
 8001f1a:	f7fe fcb7 	bl	800088c <__aeabi_ddiv>
 8001f1e:	4603      	mov	r3, r0
 8001f20:	460c      	mov	r4, r1
 8001f22:	e9c7 3404 	strd	r3, r4, [r7, #16]

	for (int i = 0; i < arraySize; i++) {
 8001f26:	2300      	movs	r3, #0
 8001f28:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001f2a:	e036      	b.n	8001f9a <edit_sineval+0xe2>
		//formula in DAC Document
		sinArray[i] = (sin((i * w) + phaseShift) + 1) * ampl;
 8001f2c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8001f2e:	f7fe fb19 	bl	8000564 <__aeabi_i2d>
 8001f32:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001f36:	f7fe fb7f 	bl	8000638 <__aeabi_dmul>
 8001f3a:	4603      	mov	r3, r0
 8001f3c:	460c      	mov	r4, r1
 8001f3e:	4618      	mov	r0, r3
 8001f40:	4621      	mov	r1, r4
 8001f42:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001f46:	f7fe f9c1 	bl	80002cc <__adddf3>
 8001f4a:	4603      	mov	r3, r0
 8001f4c:	460c      	mov	r4, r1
 8001f4e:	ec44 3b17 	vmov	d7, r3, r4
 8001f52:	eeb0 0a47 	vmov.f32	s0, s14
 8001f56:	eef0 0a67 	vmov.f32	s1, s15
 8001f5a:	f004 fead 	bl	8006cb8 <sin>
 8001f5e:	ec51 0b10 	vmov	r0, r1, d0
 8001f62:	f04f 0200 	mov.w	r2, #0
 8001f66:	4b17      	ldr	r3, [pc, #92]	; (8001fc4 <edit_sineval+0x10c>)
 8001f68:	f7fe f9b0 	bl	80002cc <__adddf3>
 8001f6c:	4603      	mov	r3, r0
 8001f6e:	460c      	mov	r4, r1
 8001f70:	4618      	mov	r0, r3
 8001f72:	4621      	mov	r1, r4
 8001f74:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8001f78:	f7fe fb5e 	bl	8000638 <__aeabi_dmul>
 8001f7c:	4603      	mov	r3, r0
 8001f7e:	460c      	mov	r4, r1
 8001f80:	4618      	mov	r0, r3
 8001f82:	4621      	mov	r1, r4
 8001f84:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001f86:	009b      	lsls	r3, r3, #2
 8001f88:	68fa      	ldr	r2, [r7, #12]
 8001f8a:	18d4      	adds	r4, r2, r3
 8001f8c:	f7fe fe16 	bl	8000bbc <__aeabi_d2uiz>
 8001f90:	4603      	mov	r3, r0
 8001f92:	6023      	str	r3, [r4, #0]
	for (int i = 0; i < arraySize; i++) {
 8001f94:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001f96:	3301      	adds	r3, #1
 8001f98:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001f9a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001f9c:	68bb      	ldr	r3, [r7, #8]
 8001f9e:	429a      	cmp	r2, r3
 8001fa0:	dbc4      	blt.n	8001f2c <edit_sineval+0x74>
	}
}
 8001fa2:	bf00      	nop
 8001fa4:	3730      	adds	r7, #48	; 0x30
 8001fa6:	46bd      	mov	sp, r7
 8001fa8:	bdb0      	pop	{r4, r5, r7, pc}
 8001faa:	bf00      	nop
 8001fac:	f3af 8000 	nop.w
 8001fb0:	4d12d84a 	.word	0x4d12d84a
 8001fb4:	400921fb 	.word	0x400921fb
 8001fb8:	4d12d84a 	.word	0x4d12d84a
 8001fbc:	401921fb 	.word	0x401921fb
 8001fc0:	406f8000 	.word	0x406f8000
 8001fc4:	3ff00000 	.word	0x3ff00000

08001fc8 <bitToAudio>:
void bitToAudio(bool *bitStream, int arraySize, bool direction) {
 8001fc8:	b580      	push	{r7, lr}
 8001fca:	b088      	sub	sp, #32
 8001fcc:	af02      	add	r7, sp, #8
 8001fce:	60f8      	str	r0, [r7, #12]
 8001fd0:	60b9      	str	r1, [r7, #8]
 8001fd2:	4613      	mov	r3, r2
 8001fd4:	71fb      	strb	r3, [r7, #7]
	if(direction){//transmitting lsb first
 8001fd6:	79fb      	ldrb	r3, [r7, #7]
 8001fd8:	2b00      	cmp	r3, #0
 8001fda:	d04a      	beq.n	8002072 <bitToAudio+0xaa>
		for (int i = 0; i < arraySize; i++) {
 8001fdc:	2300      	movs	r3, #0
 8001fde:	617b      	str	r3, [r7, #20]
 8001fe0:	e03f      	b.n	8002062 <bitToAudio+0x9a>
			if (bitStream[i]) {
 8001fe2:	697b      	ldr	r3, [r7, #20]
 8001fe4:	68fa      	ldr	r2, [r7, #12]
 8001fe6:	4413      	add	r3, r2
 8001fe8:	781b      	ldrb	r3, [r3, #0]
 8001fea:	2b00      	cmp	r3, #0
 8001fec:	d018      	beq.n	8002020 <bitToAudio+0x58>
				htim3.Instance->CNT = 0;
 8001fee:	4b48      	ldr	r3, [pc, #288]	; (8002110 <bitToAudio+0x148>)
 8001ff0:	681b      	ldr	r3, [r3, #0]
 8001ff2:	2200      	movs	r2, #0
 8001ff4:	625a      	str	r2, [r3, #36]	; 0x24
				HAL_DAC_Start_DMA(&hdac, DAC_CHANNEL_1, highFrequency, HIGHF_SAMP,
 8001ff6:	2300      	movs	r3, #0
 8001ff8:	9300      	str	r3, [sp, #0]
 8001ffa:	232d      	movs	r3, #45	; 0x2d
 8001ffc:	4a45      	ldr	r2, [pc, #276]	; (8002114 <bitToAudio+0x14c>)
 8001ffe:	2100      	movs	r1, #0
 8002000:	4845      	ldr	r0, [pc, #276]	; (8002118 <bitToAudio+0x150>)
 8002002:	f001 f9cb 	bl	800339c <HAL_DAC_Start_DMA>
						DAC_ALIGN_12B_R);
				HAL_TIM_Base_Start_IT(&htim3);
 8002006:	4842      	ldr	r0, [pc, #264]	; (8002110 <bitToAudio+0x148>)
 8002008:	f002 fefe 	bl	8004e08 <HAL_TIM_Base_Start_IT>
				HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, 1);
 800200c:	2201      	movs	r2, #1
 800200e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002012:	4842      	ldr	r0, [pc, #264]	; (800211c <bitToAudio+0x154>)
 8002014:	f002 f938 	bl	8004288 <HAL_GPIO_WritePin>
				midbit = true;
 8002018:	4b41      	ldr	r3, [pc, #260]	; (8002120 <bitToAudio+0x158>)
 800201a:	2201      	movs	r2, #1
 800201c:	701a      	strb	r2, [r3, #0]
 800201e:	e019      	b.n	8002054 <bitToAudio+0x8c>
			} else {
				htim3.Instance->CNT = 0;
 8002020:	4b3b      	ldr	r3, [pc, #236]	; (8002110 <bitToAudio+0x148>)
 8002022:	681b      	ldr	r3, [r3, #0]
 8002024:	2200      	movs	r2, #0
 8002026:	625a      	str	r2, [r3, #36]	; 0x24
				HAL_DAC_Start_DMA(&hdac, DAC_CHANNEL_1, lowFrequency, LOWF_SAMP,
 8002028:	2300      	movs	r3, #0
 800202a:	9300      	str	r3, [sp, #0]
 800202c:	2353      	movs	r3, #83	; 0x53
 800202e:	4a3d      	ldr	r2, [pc, #244]	; (8002124 <bitToAudio+0x15c>)
 8002030:	2100      	movs	r1, #0
 8002032:	4839      	ldr	r0, [pc, #228]	; (8002118 <bitToAudio+0x150>)
 8002034:	f001 f9b2 	bl	800339c <HAL_DAC_Start_DMA>
						DAC_ALIGN_12B_R);
				HAL_TIM_Base_Start_IT(&htim3);
 8002038:	4835      	ldr	r0, [pc, #212]	; (8002110 <bitToAudio+0x148>)
 800203a:	f002 fee5 	bl	8004e08 <HAL_TIM_Base_Start_IT>
				HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, 0);
 800203e:	2200      	movs	r2, #0
 8002040:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002044:	4835      	ldr	r0, [pc, #212]	; (800211c <bitToAudio+0x154>)
 8002046:	f002 f91f 	bl	8004288 <HAL_GPIO_WritePin>
				midbit = true;
 800204a:	4b35      	ldr	r3, [pc, #212]	; (8002120 <bitToAudio+0x158>)
 800204c:	2201      	movs	r2, #1
 800204e:	701a      	strb	r2, [r3, #0]
			}

			while (midbit)
 8002050:	e000      	b.n	8002054 <bitToAudio+0x8c>
				__NOP();		//Just wait for timer3 IT to go off.
 8002052:	bf00      	nop
			while (midbit)
 8002054:	4b32      	ldr	r3, [pc, #200]	; (8002120 <bitToAudio+0x158>)
 8002056:	781b      	ldrb	r3, [r3, #0]
 8002058:	2b00      	cmp	r3, #0
 800205a:	d1fa      	bne.n	8002052 <bitToAudio+0x8a>
		for (int i = 0; i < arraySize; i++) {
 800205c:	697b      	ldr	r3, [r7, #20]
 800205e:	3301      	adds	r3, #1
 8002060:	617b      	str	r3, [r7, #20]
 8002062:	697a      	ldr	r2, [r7, #20]
 8002064:	68bb      	ldr	r3, [r7, #8]
 8002066:	429a      	cmp	r2, r3
 8002068:	dbbb      	blt.n	8001fe2 <bitToAudio+0x1a>
		}
		HAL_TIM_Base_Stop(&htim3);
 800206a:	4829      	ldr	r0, [pc, #164]	; (8002110 <bitToAudio+0x148>)
 800206c:	f002 fea1 	bl	8004db2 <HAL_TIM_Base_Stop>
			while (midbit)
				__NOP();		//Just wait for timer3 IT to go off.
		}
		HAL_TIM_Base_Stop(&htim3);
	}
}
 8002070:	e049      	b.n	8002106 <bitToAudio+0x13e>
		for (int i = arraySize-1; i >= 0; i--) {
 8002072:	68bb      	ldr	r3, [r7, #8]
 8002074:	3b01      	subs	r3, #1
 8002076:	613b      	str	r3, [r7, #16]
 8002078:	e03f      	b.n	80020fa <bitToAudio+0x132>
			if (bitStream[i]) {
 800207a:	693b      	ldr	r3, [r7, #16]
 800207c:	68fa      	ldr	r2, [r7, #12]
 800207e:	4413      	add	r3, r2
 8002080:	781b      	ldrb	r3, [r3, #0]
 8002082:	2b00      	cmp	r3, #0
 8002084:	d018      	beq.n	80020b8 <bitToAudio+0xf0>
				htim3.Instance->CNT = 0;
 8002086:	4b22      	ldr	r3, [pc, #136]	; (8002110 <bitToAudio+0x148>)
 8002088:	681b      	ldr	r3, [r3, #0]
 800208a:	2200      	movs	r2, #0
 800208c:	625a      	str	r2, [r3, #36]	; 0x24
				HAL_DAC_Start_DMA(&hdac, DAC_CHANNEL_1, highFrequency, HIGHF_SAMP,
 800208e:	2300      	movs	r3, #0
 8002090:	9300      	str	r3, [sp, #0]
 8002092:	232d      	movs	r3, #45	; 0x2d
 8002094:	4a1f      	ldr	r2, [pc, #124]	; (8002114 <bitToAudio+0x14c>)
 8002096:	2100      	movs	r1, #0
 8002098:	481f      	ldr	r0, [pc, #124]	; (8002118 <bitToAudio+0x150>)
 800209a:	f001 f97f 	bl	800339c <HAL_DAC_Start_DMA>
				HAL_TIM_Base_Start_IT(&htim3);
 800209e:	481c      	ldr	r0, [pc, #112]	; (8002110 <bitToAudio+0x148>)
 80020a0:	f002 feb2 	bl	8004e08 <HAL_TIM_Base_Start_IT>
				HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, 1);
 80020a4:	2201      	movs	r2, #1
 80020a6:	f44f 7100 	mov.w	r1, #512	; 0x200
 80020aa:	481c      	ldr	r0, [pc, #112]	; (800211c <bitToAudio+0x154>)
 80020ac:	f002 f8ec 	bl	8004288 <HAL_GPIO_WritePin>
				midbit = true;
 80020b0:	4b1b      	ldr	r3, [pc, #108]	; (8002120 <bitToAudio+0x158>)
 80020b2:	2201      	movs	r2, #1
 80020b4:	701a      	strb	r2, [r3, #0]
 80020b6:	e019      	b.n	80020ec <bitToAudio+0x124>
				htim3.Instance->CNT = 0;
 80020b8:	4b15      	ldr	r3, [pc, #84]	; (8002110 <bitToAudio+0x148>)
 80020ba:	681b      	ldr	r3, [r3, #0]
 80020bc:	2200      	movs	r2, #0
 80020be:	625a      	str	r2, [r3, #36]	; 0x24
				HAL_DAC_Start_DMA(&hdac, DAC_CHANNEL_1, lowFrequency, LOWF_SAMP,
 80020c0:	2300      	movs	r3, #0
 80020c2:	9300      	str	r3, [sp, #0]
 80020c4:	2353      	movs	r3, #83	; 0x53
 80020c6:	4a17      	ldr	r2, [pc, #92]	; (8002124 <bitToAudio+0x15c>)
 80020c8:	2100      	movs	r1, #0
 80020ca:	4813      	ldr	r0, [pc, #76]	; (8002118 <bitToAudio+0x150>)
 80020cc:	f001 f966 	bl	800339c <HAL_DAC_Start_DMA>
				HAL_TIM_Base_Start_IT(&htim3);
 80020d0:	480f      	ldr	r0, [pc, #60]	; (8002110 <bitToAudio+0x148>)
 80020d2:	f002 fe99 	bl	8004e08 <HAL_TIM_Base_Start_IT>
				HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, 0);
 80020d6:	2200      	movs	r2, #0
 80020d8:	f44f 7100 	mov.w	r1, #512	; 0x200
 80020dc:	480f      	ldr	r0, [pc, #60]	; (800211c <bitToAudio+0x154>)
 80020de:	f002 f8d3 	bl	8004288 <HAL_GPIO_WritePin>
				midbit = true;
 80020e2:	4b0f      	ldr	r3, [pc, #60]	; (8002120 <bitToAudio+0x158>)
 80020e4:	2201      	movs	r2, #1
 80020e6:	701a      	strb	r2, [r3, #0]
			while (midbit)
 80020e8:	e000      	b.n	80020ec <bitToAudio+0x124>
				__NOP();		//Just wait for timer3 IT to go off.
 80020ea:	bf00      	nop
			while (midbit)
 80020ec:	4b0c      	ldr	r3, [pc, #48]	; (8002120 <bitToAudio+0x158>)
 80020ee:	781b      	ldrb	r3, [r3, #0]
 80020f0:	2b00      	cmp	r3, #0
 80020f2:	d1fa      	bne.n	80020ea <bitToAudio+0x122>
		for (int i = arraySize-1; i >= 0; i--) {
 80020f4:	693b      	ldr	r3, [r7, #16]
 80020f6:	3b01      	subs	r3, #1
 80020f8:	613b      	str	r3, [r7, #16]
 80020fa:	693b      	ldr	r3, [r7, #16]
 80020fc:	2b00      	cmp	r3, #0
 80020fe:	dabc      	bge.n	800207a <bitToAudio+0xb2>
		HAL_TIM_Base_Stop(&htim3);
 8002100:	4803      	ldr	r0, [pc, #12]	; (8002110 <bitToAudio+0x148>)
 8002102:	f002 fe56 	bl	8004db2 <HAL_TIM_Base_Stop>
}
 8002106:	bf00      	nop
 8002108:	3718      	adds	r7, #24
 800210a:	46bd      	mov	sp, r7
 800210c:	bd80      	pop	{r7, pc}
 800210e:	bf00      	nop
 8002110:	20002c68 	.word	0x20002c68
 8002114:	20002b00 	.word	0x20002b00
 8002118:	20003d0c 	.word	0x20003d0c
 800211c:	40020000 	.word	0x40020000
 8002120:	20000098 	.word	0x20000098
 8002124:	20001ca4 	.word	0x20001ca4

08002128 <generateBitstream>:
void generateBitstream() {
 8002128:	b480      	push	{r7}
 800212a:	af00      	add	r7, sp, #0
	bitStream[0] = 1;
 800212c:	4b11      	ldr	r3, [pc, #68]	; (8002174 <generateBitstream+0x4c>)
 800212e:	2201      	movs	r2, #1
 8002130:	701a      	strb	r2, [r3, #0]
	bitStream[1] = 1;
 8002132:	4b10      	ldr	r3, [pc, #64]	; (8002174 <generateBitstream+0x4c>)
 8002134:	2201      	movs	r2, #1
 8002136:	705a      	strb	r2, [r3, #1]
	bitStream[2] = 1;
 8002138:	4b0e      	ldr	r3, [pc, #56]	; (8002174 <generateBitstream+0x4c>)
 800213a:	2201      	movs	r2, #1
 800213c:	709a      	strb	r2, [r3, #2]
	bitStream[3] = 0;
 800213e:	4b0d      	ldr	r3, [pc, #52]	; (8002174 <generateBitstream+0x4c>)
 8002140:	2200      	movs	r2, #0
 8002142:	70da      	strb	r2, [r3, #3]
	bitStream[4] = 0;
 8002144:	4b0b      	ldr	r3, [pc, #44]	; (8002174 <generateBitstream+0x4c>)
 8002146:	2200      	movs	r2, #0
 8002148:	711a      	strb	r2, [r3, #4]
	bitStream[5] = 0;
 800214a:	4b0a      	ldr	r3, [pc, #40]	; (8002174 <generateBitstream+0x4c>)
 800214c:	2200      	movs	r2, #0
 800214e:	715a      	strb	r2, [r3, #5]
	bitStream[6] = 1;
 8002150:	4b08      	ldr	r3, [pc, #32]	; (8002174 <generateBitstream+0x4c>)
 8002152:	2201      	movs	r2, #1
 8002154:	719a      	strb	r2, [r3, #6]
	bitStream[7] = 0;
 8002156:	4b07      	ldr	r3, [pc, #28]	; (8002174 <generateBitstream+0x4c>)
 8002158:	2200      	movs	r2, #0
 800215a:	71da      	strb	r2, [r3, #7]
	bitStream[8] = 1;
 800215c:	4b05      	ldr	r3, [pc, #20]	; (8002174 <generateBitstream+0x4c>)
 800215e:	2201      	movs	r2, #1
 8002160:	721a      	strb	r2, [r3, #8]
	bitStream[9] = 0;
 8002162:	4b04      	ldr	r3, [pc, #16]	; (8002174 <generateBitstream+0x4c>)
 8002164:	2200      	movs	r2, #0
 8002166:	725a      	strb	r2, [r3, #9]

}
 8002168:	bf00      	nop
 800216a:	46bd      	mov	sp, r7
 800216c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002170:	4770      	bx	lr
 8002172:	bf00      	nop
 8002174:	20002af4 	.word	0x20002af4

08002178 <initOUTData>:
void initOUTData() {
 8002178:	b580      	push	{r7, lr}
 800217a:	af00      	add	r7, sp, #0
	edit_sineval(lowFrequency, 2 * LOWF_SAMP, 2, +0.995);
 800217c:	ed9f 0a08 	vldr	s0, [pc, #32]	; 80021a0 <initOUTData+0x28>
 8002180:	2202      	movs	r2, #2
 8002182:	21a6      	movs	r1, #166	; 0xa6
 8002184:	4807      	ldr	r0, [pc, #28]	; (80021a4 <initOUTData+0x2c>)
 8002186:	f7ff fe97 	bl	8001eb8 <edit_sineval>
	edit_sineval(highFrequency, 2 * HIGHF_SAMP, 2, +0.99);
 800218a:	ed9f 0a07 	vldr	s0, [pc, #28]	; 80021a8 <initOUTData+0x30>
 800218e:	2202      	movs	r2, #2
 8002190:	215a      	movs	r1, #90	; 0x5a
 8002192:	4806      	ldr	r0, [pc, #24]	; (80021ac <initOUTData+0x34>)
 8002194:	f7ff fe90 	bl	8001eb8 <edit_sineval>
	generateBitstream();
 8002198:	f7ff ffc6 	bl	8002128 <generateBitstream>
}
 800219c:	bf00      	nop
 800219e:	bd80      	pop	{r7, pc}
 80021a0:	3f7eb852 	.word	0x3f7eb852
 80021a4:	20001ca4 	.word	0x20001ca4
 80021a8:	3f7d70a4 	.word	0x3f7d70a4
 80021ac:	20002b00 	.word	0x20002b00

080021b0 <pertobit>:
uint8_t sampusecount = 0;
uint16_t periodSaveCount = 0;
uint16_t trackBit = 0;
uint16_t bitSaveCount = 0;

int pertobit(uint32_t inputPeriod) {
 80021b0:	b480      	push	{r7}
 80021b2:	b085      	sub	sp, #20
 80021b4:	af00      	add	r7, sp, #0
 80021b6:	6078      	str	r0, [r7, #4]
	int freq = PCONVERT / inputPeriod;
 80021b8:	4a10      	ldr	r2, [pc, #64]	; (80021fc <pertobit+0x4c>)
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	fbb2 f3f3 	udiv	r3, r2, r3
 80021c0:	60fb      	str	r3, [r7, #12]

	//sprintf(uartData, "Recieved frequency = %d\r\n",freq);
	//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);

	//return freq;
	if ((HIGHFREQ - FREQDEV < freq) && (freq < HIGHFREQ + FREQDEV))
 80021c2:	68fb      	ldr	r3, [r7, #12]
 80021c4:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 80021c8:	dd06      	ble.n	80021d8 <pertobit+0x28>
 80021ca:	68fb      	ldr	r3, [r7, #12]
 80021cc:	f640 2227 	movw	r2, #2599	; 0xa27
 80021d0:	4293      	cmp	r3, r2
 80021d2:	dc01      	bgt.n	80021d8 <pertobit+0x28>
		return 1;
 80021d4:	2301      	movs	r3, #1
 80021d6:	e00b      	b.n	80021f0 <pertobit+0x40>
	if ((LOWFREQ - FREQDEV < freq) && (freq < LOWFREQ + FREQDEV))
 80021d8:	68fb      	ldr	r3, [r7, #12]
 80021da:	f5b3 7f48 	cmp.w	r3, #800	; 0x320
 80021de:	dd05      	ble.n	80021ec <pertobit+0x3c>
 80021e0:	68fb      	ldr	r3, [r7, #12]
 80021e2:	f5b3 6fc8 	cmp.w	r3, #1600	; 0x640
 80021e6:	da01      	bge.n	80021ec <pertobit+0x3c>
		return 0;
 80021e8:	2300      	movs	r3, #0
 80021ea:	e001      	b.n	80021f0 <pertobit+0x40>
	else
		return -1;
 80021ec:	f04f 33ff 	mov.w	r3, #4294967295
}
 80021f0:	4618      	mov	r0, r3
 80021f2:	3714      	adds	r7, #20
 80021f4:	46bd      	mov	sp, r7
 80021f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021fa:	4770      	bx	lr
 80021fc:	00989680 	.word	0x00989680

08002200 <loadBit>:
int loadBit(){
 8002200:	b580      	push	{r7, lr}
 8002202:	b082      	sub	sp, #8
 8002204:	af00      	add	r7, sp, #0
	int currbit = 0;
 8002206:	2300      	movs	r3, #0
 8002208:	607b      	str	r3, [r7, #4]
	int nextbit = 0;
 800220a:	2300      	movs	r3, #0
 800220c:	603b      	str	r3, [r7, #0]

	currbit = pertobit(periodBuffer[trackBit]);
 800220e:	4b39      	ldr	r3, [pc, #228]	; (80022f4 <loadBit+0xf4>)
 8002210:	881b      	ldrh	r3, [r3, #0]
 8002212:	461a      	mov	r2, r3
 8002214:	4b38      	ldr	r3, [pc, #224]	; (80022f8 <loadBit+0xf8>)
 8002216:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800221a:	4618      	mov	r0, r3
 800221c:	f7ff ffc8 	bl	80021b0 <pertobit>
 8002220:	6078      	str	r0, [r7, #4]

	//Low frequency should have 1 bit per baud
	if(currbit==0){
 8002222:	687b      	ldr	r3, [r7, #4]
 8002224:	2b00      	cmp	r3, #0
 8002226:	d107      	bne.n	8002238 <loadBit+0x38>
		bitBuffer[bitSaveCount] = 0;
 8002228:	4b34      	ldr	r3, [pc, #208]	; (80022fc <loadBit+0xfc>)
 800222a:	881b      	ldrh	r3, [r3, #0]
 800222c:	4619      	mov	r1, r3
 800222e:	4b34      	ldr	r3, [pc, #208]	; (8002300 <loadBit+0x100>)
 8002230:	2200      	movs	r2, #0
 8002232:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8002236:	e03c      	b.n	80022b2 <loadBit+0xb2>
	}

	//High frequency should have 2 high bits per baud
	else if(currbit==1){
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	2b01      	cmp	r3, #1
 800223c:	d131      	bne.n	80022a2 <loadBit+0xa2>
		//Gather next bit
		//ternary assign: var = (cond)?if_true:if_false;
		nextbit = (trackBit!=RX_BUFFERSIZE-1)?pertobit(periodBuffer[trackBit+1]):pertobit(periodBuffer[0]);
 800223e:	4b2d      	ldr	r3, [pc, #180]	; (80022f4 <loadBit+0xf4>)
 8002240:	881b      	ldrh	r3, [r3, #0]
 8002242:	f240 32ff 	movw	r2, #1023	; 0x3ff
 8002246:	4293      	cmp	r3, r2
 8002248:	d00a      	beq.n	8002260 <loadBit+0x60>
 800224a:	4b2a      	ldr	r3, [pc, #168]	; (80022f4 <loadBit+0xf4>)
 800224c:	881b      	ldrh	r3, [r3, #0]
 800224e:	3301      	adds	r3, #1
 8002250:	4a29      	ldr	r2, [pc, #164]	; (80022f8 <loadBit+0xf8>)
 8002252:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002256:	4618      	mov	r0, r3
 8002258:	f7ff ffaa 	bl	80021b0 <pertobit>
 800225c:	4603      	mov	r3, r0
 800225e:	e005      	b.n	800226c <loadBit+0x6c>
 8002260:	4b25      	ldr	r3, [pc, #148]	; (80022f8 <loadBit+0xf8>)
 8002262:	681b      	ldr	r3, [r3, #0]
 8002264:	4618      	mov	r0, r3
 8002266:	f7ff ffa3 	bl	80021b0 <pertobit>
 800226a:	4603      	mov	r3, r0
 800226c:	603b      	str	r3, [r7, #0]

		if(nextbit==1){
 800226e:	683b      	ldr	r3, [r7, #0]
 8002270:	2b01      	cmp	r3, #1
 8002272:	d10d      	bne.n	8002290 <loadBit+0x90>
			//High frequency detected, skip next bit
			trackBit++;
 8002274:	4b1f      	ldr	r3, [pc, #124]	; (80022f4 <loadBit+0xf4>)
 8002276:	881b      	ldrh	r3, [r3, #0]
 8002278:	3301      	adds	r3, #1
 800227a:	b29a      	uxth	r2, r3
 800227c:	4b1d      	ldr	r3, [pc, #116]	; (80022f4 <loadBit+0xf4>)
 800227e:	801a      	strh	r2, [r3, #0]
			bitBuffer[bitSaveCount] = 1;
 8002280:	4b1e      	ldr	r3, [pc, #120]	; (80022fc <loadBit+0xfc>)
 8002282:	881b      	ldrh	r3, [r3, #0]
 8002284:	4619      	mov	r1, r3
 8002286:	4b1e      	ldr	r3, [pc, #120]	; (8002300 <loadBit+0x100>)
 8002288:	2201      	movs	r2, #1
 800228a:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 800228e:	e010      	b.n	80022b2 <loadBit+0xb2>
		}
		else {
			bitBuffer[bitSaveCount] = -1;
 8002290:	4b1a      	ldr	r3, [pc, #104]	; (80022fc <loadBit+0xfc>)
 8002292:	881b      	ldrh	r3, [r3, #0]
 8002294:	4619      	mov	r1, r3
 8002296:	4b1a      	ldr	r3, [pc, #104]	; (8002300 <loadBit+0x100>)
 8002298:	f04f 32ff 	mov.w	r2, #4294967295
 800229c:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 80022a0:	e007      	b.n	80022b2 <loadBit+0xb2>
		}
	}
	//Invalid bit
	else{
		bitBuffer[bitSaveCount] = -1;
 80022a2:	4b16      	ldr	r3, [pc, #88]	; (80022fc <loadBit+0xfc>)
 80022a4:	881b      	ldrh	r3, [r3, #0]
 80022a6:	4619      	mov	r1, r3
 80022a8:	4b15      	ldr	r3, [pc, #84]	; (8002300 <loadBit+0x100>)
 80022aa:	f04f 32ff 	mov.w	r2, #4294967295
 80022ae:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
	}

	//Increment trackBit
	trackBit++;
 80022b2:	4b10      	ldr	r3, [pc, #64]	; (80022f4 <loadBit+0xf4>)
 80022b4:	881b      	ldrh	r3, [r3, #0]
 80022b6:	3301      	adds	r3, #1
 80022b8:	b29a      	uxth	r2, r3
 80022ba:	4b0e      	ldr	r3, [pc, #56]	; (80022f4 <loadBit+0xf4>)
 80022bc:	801a      	strh	r2, [r3, #0]
	if (trackBit >= RX_BUFFERSIZE)
 80022be:	4b0d      	ldr	r3, [pc, #52]	; (80022f4 <loadBit+0xf4>)
 80022c0:	881b      	ldrh	r3, [r3, #0]
 80022c2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80022c6:	d302      	bcc.n	80022ce <loadBit+0xce>
		trackBit = 0;
 80022c8:	4b0a      	ldr	r3, [pc, #40]	; (80022f4 <loadBit+0xf4>)
 80022ca:	2200      	movs	r2, #0
 80022cc:	801a      	strh	r2, [r3, #0]

	//Increment bitSaveCount
	bitSaveCount++;
 80022ce:	4b0b      	ldr	r3, [pc, #44]	; (80022fc <loadBit+0xfc>)
 80022d0:	881b      	ldrh	r3, [r3, #0]
 80022d2:	3301      	adds	r3, #1
 80022d4:	b29a      	uxth	r2, r3
 80022d6:	4b09      	ldr	r3, [pc, #36]	; (80022fc <loadBit+0xfc>)
 80022d8:	801a      	strh	r2, [r3, #0]
	if (bitSaveCount >= RX_BUFFERSIZE)
 80022da:	4b08      	ldr	r3, [pc, #32]	; (80022fc <loadBit+0xfc>)
 80022dc:	881b      	ldrh	r3, [r3, #0]
 80022de:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80022e2:	d302      	bcc.n	80022ea <loadBit+0xea>
		bitSaveCount = 0;
 80022e4:	4b05      	ldr	r3, [pc, #20]	; (80022fc <loadBit+0xfc>)
 80022e6:	2200      	movs	r2, #0
 80022e8:	801a      	strh	r2, [r3, #0]

	return currbit;
 80022ea:	687b      	ldr	r3, [r7, #4]
}
 80022ec:	4618      	mov	r0, r3
 80022ee:	3708      	adds	r7, #8
 80022f0:	46bd      	mov	sp, r7
 80022f2:	bd80      	pop	{r7, pc}
 80022f4:	2000009e 	.word	0x2000009e
 80022f8:	20002d08 	.word	0x20002d08
 80022fc:	200000a0 	.word	0x200000a0
 8002300:	20003da0 	.word	0x20003da0

08002304 <loadOctet>:
int loadOctet(bool* bufferptr) {
 8002304:	b5b0      	push	{r4, r5, r7, lr}
 8002306:	b088      	sub	sp, #32
 8002308:	af00      	add	r7, sp, #0
 800230a:	6078      	str	r0, [r7, #4]
	int bit;
	bool myPtr[8];
	bool isFlag = true;
 800230c:	2301      	movs	r3, #1
 800230e:	77fb      	strb	r3, [r7, #31]

	for (int i = 0; i < 8; i++) {
 8002310:	2300      	movs	r3, #0
 8002312:	61bb      	str	r3, [r7, #24]
 8002314:	e024      	b.n	8002360 <loadOctet+0x5c>
		bit = loadBit();
 8002316:	f7ff ff73 	bl	8002200 <loadBit>
 800231a:	6138      	str	r0, [r7, #16]
        if(bit < 0){
 800231c:	693b      	ldr	r3, [r7, #16]
 800231e:	2b00      	cmp	r3, #0
 8002320:	da02      	bge.n	8002328 <loadOctet+0x24>
        	return -1;
 8002322:	f04f 33ff 	mov.w	r3, #4294967295
 8002326:	e07d      	b.n	8002424 <loadOctet+0x120>
        }
		myPtr[i] = bit;
 8002328:	693b      	ldr	r3, [r7, #16]
 800232a:	2b00      	cmp	r3, #0
 800232c:	bf14      	ite	ne
 800232e:	2301      	movne	r3, #1
 8002330:	2300      	moveq	r3, #0
 8002332:	b2d9      	uxtb	r1, r3
 8002334:	f107 0208 	add.w	r2, r7, #8
 8002338:	69bb      	ldr	r3, [r7, #24]
 800233a:	4413      	add	r3, r2
 800233c:	460a      	mov	r2, r1
 800233e:	701a      	strb	r2, [r3, #0]
        if(myPtr[i] != AX25TBYTE[i]){
 8002340:	f107 0208 	add.w	r2, r7, #8
 8002344:	69bb      	ldr	r3, [r7, #24]
 8002346:	4413      	add	r3, r2
 8002348:	781a      	ldrb	r2, [r3, #0]
 800234a:	4938      	ldr	r1, [pc, #224]	; (800242c <loadOctet+0x128>)
 800234c:	69bb      	ldr	r3, [r7, #24]
 800234e:	440b      	add	r3, r1
 8002350:	781b      	ldrb	r3, [r3, #0]
 8002352:	429a      	cmp	r2, r3
 8002354:	d001      	beq.n	800235a <loadOctet+0x56>
        	isFlag = false;
 8002356:	2300      	movs	r3, #0
 8002358:	77fb      	strb	r3, [r7, #31]
	for (int i = 0; i < 8; i++) {
 800235a:	69bb      	ldr	r3, [r7, #24]
 800235c:	3301      	adds	r3, #1
 800235e:	61bb      	str	r3, [r7, #24]
 8002360:	69bb      	ldr	r3, [r7, #24]
 8002362:	2b07      	cmp	r3, #7
 8002364:	ddd7      	ble.n	8002316 <loadOctet+0x12>
        }
    }
	//If this is not a flag, copy the values into the buffer pointer
	if(!isFlag){
 8002366:	7ffb      	ldrb	r3, [r7, #31]
 8002368:	f083 0301 	eor.w	r3, r3, #1
 800236c:	b2db      	uxtb	r3, r3
 800236e:	2b00      	cmp	r3, #0
 8002370:	d057      	beq.n	8002422 <loadOctet+0x11e>
		sprintf(uartData, "Printing octet = ");
 8002372:	4a2f      	ldr	r2, [pc, #188]	; (8002430 <loadOctet+0x12c>)
 8002374:	4b2f      	ldr	r3, [pc, #188]	; (8002434 <loadOctet+0x130>)
 8002376:	4615      	mov	r5, r2
 8002378:	461c      	mov	r4, r3
 800237a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800237c:	6028      	str	r0, [r5, #0]
 800237e:	6069      	str	r1, [r5, #4]
 8002380:	60aa      	str	r2, [r5, #8]
 8002382:	60eb      	str	r3, [r5, #12]
 8002384:	8823      	ldrh	r3, [r4, #0]
 8002386:	822b      	strh	r3, [r5, #16]
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8002388:	4829      	ldr	r0, [pc, #164]	; (8002430 <loadOctet+0x12c>)
 800238a:	f7fd ff41 	bl	8000210 <strlen>
 800238e:	4603      	mov	r3, r0
 8002390:	b29a      	uxth	r2, r3
 8002392:	230a      	movs	r3, #10
 8002394:	4926      	ldr	r1, [pc, #152]	; (8002430 <loadOctet+0x12c>)
 8002396:	4828      	ldr	r0, [pc, #160]	; (8002438 <loadOctet+0x134>)
 8002398:	f003 f959 	bl	800564e <HAL_UART_Transmit>

		for(int i = 0;i<8;i++){
 800239c:	2300      	movs	r3, #0
 800239e:	617b      	str	r3, [r7, #20]
 80023a0:	e02c      	b.n	80023fc <loadOctet+0xf8>
			bufferptr[7-i] = (myPtr[7-i]==1)?true:false;
 80023a2:	697b      	ldr	r3, [r7, #20]
 80023a4:	f1c3 0307 	rsb	r3, r3, #7
 80023a8:	f107 0220 	add.w	r2, r7, #32
 80023ac:	4413      	add	r3, r2
 80023ae:	f813 2c18 	ldrb.w	r2, [r3, #-24]
 80023b2:	697b      	ldr	r3, [r7, #20]
 80023b4:	f1c3 0307 	rsb	r3, r3, #7
 80023b8:	4619      	mov	r1, r3
 80023ba:	687b      	ldr	r3, [r7, #4]
 80023bc:	440b      	add	r3, r1
 80023be:	701a      	strb	r2, [r3, #0]
			rxBit_count++;
 80023c0:	4b1e      	ldr	r3, [pc, #120]	; (800243c <loadOctet+0x138>)
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	3301      	adds	r3, #1
 80023c6:	4a1d      	ldr	r2, [pc, #116]	; (800243c <loadOctet+0x138>)
 80023c8:	6013      	str	r3, [r2, #0]
			sprintf(uartData, " %d ",bufferptr[7-i]);
 80023ca:	697b      	ldr	r3, [r7, #20]
 80023cc:	f1c3 0307 	rsb	r3, r3, #7
 80023d0:	461a      	mov	r2, r3
 80023d2:	687b      	ldr	r3, [r7, #4]
 80023d4:	4413      	add	r3, r2
 80023d6:	781b      	ldrb	r3, [r3, #0]
 80023d8:	461a      	mov	r2, r3
 80023da:	4919      	ldr	r1, [pc, #100]	; (8002440 <loadOctet+0x13c>)
 80023dc:	4814      	ldr	r0, [pc, #80]	; (8002430 <loadOctet+0x12c>)
 80023de:	f004 f927 	bl	8006630 <siprintf>
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80023e2:	4813      	ldr	r0, [pc, #76]	; (8002430 <loadOctet+0x12c>)
 80023e4:	f7fd ff14 	bl	8000210 <strlen>
 80023e8:	4603      	mov	r3, r0
 80023ea:	b29a      	uxth	r2, r3
 80023ec:	230a      	movs	r3, #10
 80023ee:	4910      	ldr	r1, [pc, #64]	; (8002430 <loadOctet+0x12c>)
 80023f0:	4811      	ldr	r0, [pc, #68]	; (8002438 <loadOctet+0x134>)
 80023f2:	f003 f92c 	bl	800564e <HAL_UART_Transmit>
		for(int i = 0;i<8;i++){
 80023f6:	697b      	ldr	r3, [r7, #20]
 80023f8:	3301      	adds	r3, #1
 80023fa:	617b      	str	r3, [r7, #20]
 80023fc:	697b      	ldr	r3, [r7, #20]
 80023fe:	2b07      	cmp	r3, #7
 8002400:	ddcf      	ble.n	80023a2 <loadOctet+0x9e>
		}
		sprintf(uartData, "\r\n");
 8002402:	4b0b      	ldr	r3, [pc, #44]	; (8002430 <loadOctet+0x12c>)
 8002404:	4a0f      	ldr	r2, [pc, #60]	; (8002444 <loadOctet+0x140>)
 8002406:	8811      	ldrh	r1, [r2, #0]
 8002408:	7892      	ldrb	r2, [r2, #2]
 800240a:	8019      	strh	r1, [r3, #0]
 800240c:	709a      	strb	r2, [r3, #2]
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800240e:	4808      	ldr	r0, [pc, #32]	; (8002430 <loadOctet+0x12c>)
 8002410:	f7fd fefe 	bl	8000210 <strlen>
 8002414:	4603      	mov	r3, r0
 8002416:	b29a      	uxth	r2, r3
 8002418:	230a      	movs	r3, #10
 800241a:	4905      	ldr	r1, [pc, #20]	; (8002430 <loadOctet+0x12c>)
 800241c:	4806      	ldr	r0, [pc, #24]	; (8002438 <loadOctet+0x134>)
 800241e:	f003 f916 	bl	800564e <HAL_UART_Transmit>
	}
	return isFlag;
 8002422:	7ffb      	ldrb	r3, [r7, #31]
}
 8002424:	4618      	mov	r0, r3
 8002426:	3720      	adds	r7, #32
 8002428:	46bd      	mov	sp, r7
 800242a:	bdb0      	pop	{r4, r5, r7, pc}
 800242c:	20000000 	.word	0x20000000
 8002430:	20001f3c 	.word	0x20001f3c
 8002434:	08007f38 	.word	0x08007f38
 8002438:	20003d60 	.word	0x20003d60
 800243c:	20000094 	.word	0x20000094
 8002440:	08007f4c 	.word	0x08007f4c
 8002444:	08007f54 	.word	0x08007f54

08002448 <streamGet>:
int streamGet() {
 8002448:	b5b0      	push	{r4, r5, r7, lr}
 800244a:	b090      	sub	sp, #64	; 0x40
 800244c:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 800244e:	4b72      	ldr	r3, [pc, #456]	; (8002618 <streamGet+0x1d0>)
 8002450:	62bb      	str	r3, [r7, #40]	; 0x28

	int byteArray[8];
	int max_octets = (int)(AX25_PACKET_MAX)/8;
 8002452:	f240 134b 	movw	r3, #331	; 0x14b
 8002456:	627b      	str	r3, [r7, #36]	; 0x24
	int octet_count,good_octet;
	bool gotflag;

	//Just do this unless we need to toggle
	while(!changeMode){
 8002458:	e0cf      	b.n	80025fa <streamGet+0x1b2>
		gotflag = false;
 800245a:	2300      	movs	r3, #0
 800245c:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

		//Slide bits
		for(int i = 0; i < 7; i++){
 8002460:	2300      	movs	r3, #0
 8002462:	633b      	str	r3, [r7, #48]	; 0x30
 8002464:	e011      	b.n	800248a <streamGet+0x42>
			byteArray[i] = byteArray[i+1];
 8002466:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002468:	3301      	adds	r3, #1
 800246a:	009b      	lsls	r3, r3, #2
 800246c:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8002470:	4413      	add	r3, r2
 8002472:	f853 2c3c 	ldr.w	r2, [r3, #-60]
 8002476:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002478:	009b      	lsls	r3, r3, #2
 800247a:	f107 0140 	add.w	r1, r7, #64	; 0x40
 800247e:	440b      	add	r3, r1
 8002480:	f843 2c3c 	str.w	r2, [r3, #-60]
		for(int i = 0; i < 7; i++){
 8002484:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002486:	3301      	adds	r3, #1
 8002488:	633b      	str	r3, [r7, #48]	; 0x30
 800248a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800248c:	2b06      	cmp	r3, #6
 800248e:	ddea      	ble.n	8002466 <streamGet+0x1e>
		}
		byteArray[7] = loadBit();
 8002490:	f7ff feb6 	bl	8002200 <loadBit>
 8002494:	4603      	mov	r3, r0
 8002496:	623b      	str	r3, [r7, #32]
		//sprintf(uartData, "Got bit %d\r\n",byteArray[7]);
		//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);

		//Detect AX25 flag bytes
		for(int i = 0;i < 8; i++){
 8002498:	2300      	movs	r3, #0
 800249a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800249c:	e019      	b.n	80024d2 <streamGet+0x8a>
			//If the byte isn't lined up, break loop
			if(byteArray[i]!=AX25TBYTE[i]) {
 800249e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80024a0:	009b      	lsls	r3, r3, #2
 80024a2:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80024a6:	4413      	add	r3, r2
 80024a8:	f853 3c3c 	ldr.w	r3, [r3, #-60]
 80024ac:	495b      	ldr	r1, [pc, #364]	; (800261c <streamGet+0x1d4>)
 80024ae:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80024b0:	440a      	add	r2, r1
 80024b2:	7812      	ldrb	r2, [r2, #0]
 80024b4:	4293      	cmp	r3, r2
 80024b6:	d003      	beq.n	80024c0 <streamGet+0x78>
				gotflag = false;
 80024b8:	2300      	movs	r3, #0
 80024ba:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
				break;
 80024be:	e00b      	b.n	80024d8 <streamGet+0x90>
			}
			//If the loop makes it to the lowest bit, the flag should be lined up
			else if(i==7){
 80024c0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80024c2:	2b07      	cmp	r3, #7
 80024c4:	d102      	bne.n	80024cc <streamGet+0x84>
				gotflag = true;
 80024c6:	2301      	movs	r3, #1
 80024c8:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
		for(int i = 0;i < 8; i++){
 80024cc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80024ce:	3301      	adds	r3, #1
 80024d0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80024d2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80024d4:	2b07      	cmp	r3, #7
 80024d6:	dde2      	ble.n	800249e <streamGet+0x56>
			}
		}

		//Got flag
		if(gotflag){
 80024d8:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 80024dc:	2b00      	cmp	r3, #0
 80024de:	f000 808c 	beq.w	80025fa <streamGet+0x1b2>
			sprintf(uartData, "Start AX.25 Flag Detected\r\n");
 80024e2:	4a4f      	ldr	r2, [pc, #316]	; (8002620 <streamGet+0x1d8>)
 80024e4:	4b4f      	ldr	r3, [pc, #316]	; (8002624 <streamGet+0x1dc>)
 80024e6:	4615      	mov	r5, r2
 80024e8:	461c      	mov	r4, r3
 80024ea:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80024ec:	6028      	str	r0, [r5, #0]
 80024ee:	6069      	str	r1, [r5, #4]
 80024f0:	60aa      	str	r2, [r5, #8]
 80024f2:	60eb      	str	r3, [r5, #12]
 80024f4:	cc07      	ldmia	r4!, {r0, r1, r2}
 80024f6:	6128      	str	r0, [r5, #16]
 80024f8:	6169      	str	r1, [r5, #20]
 80024fa:	61aa      	str	r2, [r5, #24]
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80024fc:	4848      	ldr	r0, [pc, #288]	; (8002620 <streamGet+0x1d8>)
 80024fe:	f7fd fe87 	bl	8000210 <strlen>
 8002502:	4603      	mov	r3, r0
 8002504:	b29a      	uxth	r2, r3
 8002506:	230a      	movs	r3, #10
 8002508:	4945      	ldr	r1, [pc, #276]	; (8002620 <streamGet+0x1d8>)
 800250a:	4847      	ldr	r0, [pc, #284]	; (8002628 <streamGet+0x1e0>)
 800250c:	f003 f89f 	bl	800564e <HAL_UART_Transmit>
			octet_count  = 0;
 8002510:	2300      	movs	r3, #0
 8002512:	63fb      	str	r3, [r7, #60]	; 0x3c

			//Until AX.25 buffer overflows, continue reading octets
			good_octet = 0;
 8002514:	2300      	movs	r3, #0
 8002516:	63bb      	str	r3, [r7, #56]	; 0x38
			while( (good_octet==0) && (octet_count < max_octets) ){
 8002518:	e00a      	b.n	8002530 <streamGet+0xe8>
				good_octet = loadOctet(&local_packet->AX25_PACKET[octet_count*8]);
 800251a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800251c:	00db      	lsls	r3, r3, #3
 800251e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002520:	4413      	add	r3, r2
 8002522:	4618      	mov	r0, r3
 8002524:	f7ff feee 	bl	8002304 <loadOctet>
 8002528:	63b8      	str	r0, [r7, #56]	; 0x38
				//sprintf(uartData, "Loaded octet %d out of %d\r\n",octet_count,max_octets);
				//sprintf(uartData, "good_octet: %d\r\n",good_octet);
				//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);

				octet_count+=1;
 800252a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800252c:	3301      	adds	r3, #1
 800252e:	63fb      	str	r3, [r7, #60]	; 0x3c
			while( (good_octet==0) && (octet_count < max_octets) ){
 8002530:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002532:	2b00      	cmp	r3, #0
 8002534:	d103      	bne.n	800253e <streamGet+0xf6>
 8002536:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8002538:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800253a:	429a      	cmp	r2, r3
 800253c:	dbed      	blt.n	800251a <streamGet+0xd2>
			}

			//If ax.25 buffer overflows or an octet was bad, this was a bad packet
			if((octet_count >= max_octets) || (good_octet!=1)){
 800253e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8002540:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002542:	429a      	cmp	r2, r3
 8002544:	da02      	bge.n	800254c <streamGet+0x104>
 8002546:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002548:	2b01      	cmp	r3, #1
 800254a:	d00f      	beq.n	800256c <streamGet+0x124>
				sprintf(uartData, "Bad packet! Not enough octets\r\n\n",octet_count);
 800254c:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800254e:	4937      	ldr	r1, [pc, #220]	; (800262c <streamGet+0x1e4>)
 8002550:	4833      	ldr	r0, [pc, #204]	; (8002620 <streamGet+0x1d8>)
 8002552:	f004 f86d 	bl	8006630 <siprintf>
				HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8002556:	4832      	ldr	r0, [pc, #200]	; (8002620 <streamGet+0x1d8>)
 8002558:	f7fd fe5a 	bl	8000210 <strlen>
 800255c:	4603      	mov	r3, r0
 800255e:	b29a      	uxth	r2, r3
 8002560:	230a      	movs	r3, #10
 8002562:	492f      	ldr	r1, [pc, #188]	; (8002620 <streamGet+0x1d8>)
 8002564:	4830      	ldr	r0, [pc, #192]	; (8002628 <streamGet+0x1e0>)
 8002566:	f003 f872 	bl	800564e <HAL_UART_Transmit>
 800256a:	e046      	b.n	80025fa <streamGet+0x1b2>
			}
			//
			else if(octet_count == 1){
 800256c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800256e:	2b01      	cmp	r3, #1
 8002570:	d12a      	bne.n	80025c8 <streamGet+0x180>
				sprintf(uartData, "Stop AX.25 Flag Detected\r\n");
 8002572:	4a2b      	ldr	r2, [pc, #172]	; (8002620 <streamGet+0x1d8>)
 8002574:	4b2e      	ldr	r3, [pc, #184]	; (8002630 <streamGet+0x1e8>)
 8002576:	4615      	mov	r5, r2
 8002578:	461c      	mov	r4, r3
 800257a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800257c:	6028      	str	r0, [r5, #0]
 800257e:	6069      	str	r1, [r5, #4]
 8002580:	60aa      	str	r2, [r5, #8]
 8002582:	60eb      	str	r3, [r5, #12]
 8002584:	cc03      	ldmia	r4!, {r0, r1}
 8002586:	6128      	str	r0, [r5, #16]
 8002588:	6169      	str	r1, [r5, #20]
 800258a:	8823      	ldrh	r3, [r4, #0]
 800258c:	78a2      	ldrb	r2, [r4, #2]
 800258e:	832b      	strh	r3, [r5, #24]
 8002590:	4613      	mov	r3, r2
 8002592:	76ab      	strb	r3, [r5, #26]
				HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8002594:	4822      	ldr	r0, [pc, #136]	; (8002620 <streamGet+0x1d8>)
 8002596:	f7fd fe3b 	bl	8000210 <strlen>
 800259a:	4603      	mov	r3, r0
 800259c:	b29a      	uxth	r2, r3
 800259e:	230a      	movs	r3, #10
 80025a0:	491f      	ldr	r1, [pc, #124]	; (8002620 <streamGet+0x1d8>)
 80025a2:	4821      	ldr	r0, [pc, #132]	; (8002628 <streamGet+0x1e0>)
 80025a4:	f003 f853 	bl	800564e <HAL_UART_Transmit>
				sprintf(uartData, "Bad packet! Not enough octetes.\r\n\n",octet_count);
 80025a8:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80025aa:	4922      	ldr	r1, [pc, #136]	; (8002634 <streamGet+0x1ec>)
 80025ac:	481c      	ldr	r0, [pc, #112]	; (8002620 <streamGet+0x1d8>)
 80025ae:	f004 f83f 	bl	8006630 <siprintf>
				HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80025b2:	481b      	ldr	r0, [pc, #108]	; (8002620 <streamGet+0x1d8>)
 80025b4:	f7fd fe2c 	bl	8000210 <strlen>
 80025b8:	4603      	mov	r3, r0
 80025ba:	b29a      	uxth	r2, r3
 80025bc:	230a      	movs	r3, #10
 80025be:	4918      	ldr	r1, [pc, #96]	; (8002620 <streamGet+0x1d8>)
 80025c0:	4819      	ldr	r0, [pc, #100]	; (8002628 <streamGet+0x1e0>)
 80025c2:	f003 f844 	bl	800564e <HAL_UART_Transmit>
 80025c6:	e018      	b.n	80025fa <streamGet+0x1b2>
			}
			//If ax.25 buffer does not overflow, this was a good packet
			else {
				sprintf(uartData, "Stop AX.25 Flag Detected\r\n\n");
 80025c8:	4a15      	ldr	r2, [pc, #84]	; (8002620 <streamGet+0x1d8>)
 80025ca:	4b1b      	ldr	r3, [pc, #108]	; (8002638 <streamGet+0x1f0>)
 80025cc:	4615      	mov	r5, r2
 80025ce:	461c      	mov	r4, r3
 80025d0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80025d2:	6028      	str	r0, [r5, #0]
 80025d4:	6069      	str	r1, [r5, #4]
 80025d6:	60aa      	str	r2, [r5, #8]
 80025d8:	60eb      	str	r3, [r5, #12]
 80025da:	cc07      	ldmia	r4!, {r0, r1, r2}
 80025dc:	6128      	str	r0, [r5, #16]
 80025de:	6169      	str	r1, [r5, #20]
 80025e0:	61aa      	str	r2, [r5, #24]
				HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80025e2:	480f      	ldr	r0, [pc, #60]	; (8002620 <streamGet+0x1d8>)
 80025e4:	f7fd fe14 	bl	8000210 <strlen>
 80025e8:	4603      	mov	r3, r0
 80025ea:	b29a      	uxth	r2, r3
 80025ec:	230a      	movs	r3, #10
 80025ee:	490c      	ldr	r1, [pc, #48]	; (8002620 <streamGet+0x1d8>)
 80025f0:	480d      	ldr	r0, [pc, #52]	; (8002628 <streamGet+0x1e0>)
 80025f2:	f003 f82c 	bl	800564e <HAL_UART_Transmit>

				return 1;
 80025f6:	2301      	movs	r3, #1
 80025f8:	e009      	b.n	800260e <streamGet+0x1c6>
	while(!changeMode){
 80025fa:	4b10      	ldr	r3, [pc, #64]	; (800263c <streamGet+0x1f4>)
 80025fc:	781b      	ldrb	r3, [r3, #0]
 80025fe:	f083 0301 	eor.w	r3, r3, #1
 8002602:	b2db      	uxtb	r3, r3
 8002604:	2b00      	cmp	r3, #0
 8002606:	f47f af28 	bne.w	800245a <streamGet+0x12>
			//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
		}
	}
	//Break if mode needs to change
	if(toggleMode)
		return -1;
 800260a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800260e:	4618      	mov	r0, r3
 8002610:	3740      	adds	r7, #64	; 0x40
 8002612:	46bd      	mov	sp, r7
 8002614:	bdb0      	pop	{r4, r5, r7, pc}
 8002616:	bf00      	nop
 8002618:	200000b0 	.word	0x200000b0
 800261c:	20000000 	.word	0x20000000
 8002620:	20001f3c 	.word	0x20001f3c
 8002624:	08007f58 	.word	0x08007f58
 8002628:	20003d60 	.word	0x20003d60
 800262c:	08007f74 	.word	0x08007f74
 8002630:	08007f98 	.word	0x08007f98
 8002634:	08007fb4 	.word	0x08007fb4
 8002638:	08007fd8 	.word	0x08007fd8
 800263c:	20000099 	.word	0x20000099

08002640 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN PV */

/* This callback is called by the HAL_UART_IRQHandler when the given number of bytes are received */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8002640:	b580      	push	{r7, lr}
 8002642:	b082      	sub	sp, #8
 8002644:	af00      	add	r7, sp, #0
 8002646:	6078      	str	r0, [r7, #4]
  if (huart->Instance == USART2)
 8002648:	687b      	ldr	r3, [r7, #4]
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	4a04      	ldr	r2, [pc, #16]	; (8002660 <HAL_UART_RxCpltCallback+0x20>)
 800264e:	4293      	cmp	r3, r2
 8002650:	d101      	bne.n	8002656 <HAL_UART_RxCpltCallback+0x16>
  {
	  UART2_EXCEPTION_CALLBACK();
 8002652:	f7fe ff9d 	bl	8001590 <UART2_EXCEPTION_CALLBACK>
  }
}
 8002656:	bf00      	nop
 8002658:	3708      	adds	r7, #8
 800265a:	46bd      	mov	sp, r7
 800265c:	bd80      	pop	{r7, pc}
 800265e:	bf00      	nop
 8002660:	40004400 	.word	0x40004400

08002664 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002664:	b580      	push	{r7, lr}
 8002666:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002668:	f000 fca0 	bl	8002fac <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800266c:	f000 f81e 	bl	80026ac <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002670:	f000 f9a0 	bl	80029b4 <MX_GPIO_Init>
  MX_DMA_Init();
 8002674:	f000 f97e 	bl	8002974 <MX_DMA_Init>
  MX_DAC_Init();
 8002678:	f000 f886 	bl	8002788 <MX_DAC_Init>
  MX_TIM2_Init();
 800267c:	f000 f8ae 	bl	80027dc <MX_TIM2_Init>
  MX_TIM3_Init();
 8002680:	f000 f8f8 	bl	8002874 <MX_TIM3_Init>
  MX_USART2_UART_Init();
 8002684:	f000 f944 	bl	8002910 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
	HAL_TIM_Base_Start(&htim2);
 8002688:	4806      	ldr	r0, [pc, #24]	; (80026a4 <main+0x40>)
 800268a:	f002 fb6e 	bl	8004d6a <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start_IT(&htim3);
 800268e:	4806      	ldr	r0, [pc, #24]	; (80026a8 <main+0x44>)
 8002690:	f002 fbba 	bl	8004e08 <HAL_TIM_Base_Start_IT>

	uart_gpio_init();
 8002694:	f000 fa5c 	bl	8002b50 <uart_gpio_init>

	initProgram(true);
 8002698:	2001      	movs	r0, #1
 800269a:	f7ff fb1d 	bl	8001cd8 <initProgram>
  /* USER CODE BEGIN WHILE */
	while (1) {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
		tx_rx();
 800269e:	f7fe fc75 	bl	8000f8c <tx_rx>
 80026a2:	e7fc      	b.n	800269e <main+0x3a>
 80026a4:	20003d20 	.word	0x20003d20
 80026a8:	20002c68 	.word	0x20002c68

080026ac <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80026ac:	b580      	push	{r7, lr}
 80026ae:	b094      	sub	sp, #80	; 0x50
 80026b0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80026b2:	f107 031c 	add.w	r3, r7, #28
 80026b6:	2234      	movs	r2, #52	; 0x34
 80026b8:	2100      	movs	r1, #0
 80026ba:	4618      	mov	r0, r3
 80026bc:	f003 fef7 	bl	80064ae <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80026c0:	f107 0308 	add.w	r3, r7, #8
 80026c4:	2200      	movs	r2, #0
 80026c6:	601a      	str	r2, [r3, #0]
 80026c8:	605a      	str	r2, [r3, #4]
 80026ca:	609a      	str	r2, [r3, #8]
 80026cc:	60da      	str	r2, [r3, #12]
 80026ce:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80026d0:	2300      	movs	r3, #0
 80026d2:	607b      	str	r3, [r7, #4]
 80026d4:	4b2a      	ldr	r3, [pc, #168]	; (8002780 <SystemClock_Config+0xd4>)
 80026d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026d8:	4a29      	ldr	r2, [pc, #164]	; (8002780 <SystemClock_Config+0xd4>)
 80026da:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80026de:	6413      	str	r3, [r2, #64]	; 0x40
 80026e0:	4b27      	ldr	r3, [pc, #156]	; (8002780 <SystemClock_Config+0xd4>)
 80026e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026e4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80026e8:	607b      	str	r3, [r7, #4]
 80026ea:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 80026ec:	2300      	movs	r3, #0
 80026ee:	603b      	str	r3, [r7, #0]
 80026f0:	4b24      	ldr	r3, [pc, #144]	; (8002784 <SystemClock_Config+0xd8>)
 80026f2:	681b      	ldr	r3, [r3, #0]
 80026f4:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80026f8:	4a22      	ldr	r2, [pc, #136]	; (8002784 <SystemClock_Config+0xd8>)
 80026fa:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80026fe:	6013      	str	r3, [r2, #0]
 8002700:	4b20      	ldr	r3, [pc, #128]	; (8002784 <SystemClock_Config+0xd8>)
 8002702:	681b      	ldr	r3, [r3, #0]
 8002704:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8002708:	603b      	str	r3, [r7, #0]
 800270a:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800270c:	2301      	movs	r3, #1
 800270e:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002710:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8002714:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002716:	2302      	movs	r3, #2
 8002718:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800271a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800271e:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 8002720:	2304      	movs	r3, #4
 8002722:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 90;
 8002724:	235a      	movs	r3, #90	; 0x5a
 8002726:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8002728:	2302      	movs	r3, #2
 800272a:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800272c:	2302      	movs	r3, #2
 800272e:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8002730:	2302      	movs	r3, #2
 8002732:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002734:	f107 031c 	add.w	r3, r7, #28
 8002738:	4618      	mov	r0, r3
 800273a:	f002 f891 	bl	8004860 <HAL_RCC_OscConfig>
 800273e:	4603      	mov	r3, r0
 8002740:	2b00      	cmp	r3, #0
 8002742:	d001      	beq.n	8002748 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8002744:	f000 fa2c 	bl	8002ba0 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002748:	230f      	movs	r3, #15
 800274a:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800274c:	2302      	movs	r3, #2
 800274e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002750:	2300      	movs	r3, #0
 8002752:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8002754:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002758:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800275a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800275e:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8002760:	f107 0308 	add.w	r3, r7, #8
 8002764:	2102      	movs	r1, #2
 8002766:	4618      	mov	r0, r3
 8002768:	f001 fdc0 	bl	80042ec <HAL_RCC_ClockConfig>
 800276c:	4603      	mov	r3, r0
 800276e:	2b00      	cmp	r3, #0
 8002770:	d001      	beq.n	8002776 <SystemClock_Config+0xca>
  {
    Error_Handler();
 8002772:	f000 fa15 	bl	8002ba0 <Error_Handler>
  }
}
 8002776:	bf00      	nop
 8002778:	3750      	adds	r7, #80	; 0x50
 800277a:	46bd      	mov	sp, r7
 800277c:	bd80      	pop	{r7, pc}
 800277e:	bf00      	nop
 8002780:	40023800 	.word	0x40023800
 8002784:	40007000 	.word	0x40007000

08002788 <MX_DAC_Init>:
  * @brief DAC Initialization Function
  * @param None
  * @retval None
  */
static void MX_DAC_Init(void)
{
 8002788:	b580      	push	{r7, lr}
 800278a:	b082      	sub	sp, #8
 800278c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN DAC_Init 0 */

  /* USER CODE END DAC_Init 0 */

  DAC_ChannelConfTypeDef sConfig = {0};
 800278e:	463b      	mov	r3, r7
 8002790:	2200      	movs	r2, #0
 8002792:	601a      	str	r2, [r3, #0]
 8002794:	605a      	str	r2, [r3, #4]
  /* USER CODE BEGIN DAC_Init 1 */

  /* USER CODE END DAC_Init 1 */
  /** DAC Initialization
  */
  hdac.Instance = DAC;
 8002796:	4b0f      	ldr	r3, [pc, #60]	; (80027d4 <MX_DAC_Init+0x4c>)
 8002798:	4a0f      	ldr	r2, [pc, #60]	; (80027d8 <MX_DAC_Init+0x50>)
 800279a:	601a      	str	r2, [r3, #0]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 800279c:	480d      	ldr	r0, [pc, #52]	; (80027d4 <MX_DAC_Init+0x4c>)
 800279e:	f000 fdda 	bl	8003356 <HAL_DAC_Init>
 80027a2:	4603      	mov	r3, r0
 80027a4:	2b00      	cmp	r3, #0
 80027a6:	d001      	beq.n	80027ac <MX_DAC_Init+0x24>
  {
    Error_Handler();
 80027a8:	f000 f9fa 	bl	8002ba0 <Error_Handler>
  }
  /** DAC channel OUT1 config
  */
  sConfig.DAC_Trigger = DAC_TRIGGER_T2_TRGO;
 80027ac:	2324      	movs	r3, #36	; 0x24
 80027ae:	603b      	str	r3, [r7, #0]
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 80027b0:	2300      	movs	r3, #0
 80027b2:	607b      	str	r3, [r7, #4]
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 80027b4:	463b      	mov	r3, r7
 80027b6:	2200      	movs	r2, #0
 80027b8:	4619      	mov	r1, r3
 80027ba:	4806      	ldr	r0, [pc, #24]	; (80027d4 <MX_DAC_Init+0x4c>)
 80027bc:	f000 fefb 	bl	80035b6 <HAL_DAC_ConfigChannel>
 80027c0:	4603      	mov	r3, r0
 80027c2:	2b00      	cmp	r3, #0
 80027c4:	d001      	beq.n	80027ca <MX_DAC_Init+0x42>
  {
    Error_Handler();
 80027c6:	f000 f9eb 	bl	8002ba0 <Error_Handler>
  }
  /* USER CODE BEGIN DAC_Init 2 */

  /* USER CODE END DAC_Init 2 */

}
 80027ca:	bf00      	nop
 80027cc:	3708      	adds	r7, #8
 80027ce:	46bd      	mov	sp, r7
 80027d0:	bd80      	pop	{r7, pc}
 80027d2:	bf00      	nop
 80027d4:	20003d0c 	.word	0x20003d0c
 80027d8:	40007400 	.word	0x40007400

080027dc <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80027dc:	b580      	push	{r7, lr}
 80027de:	b086      	sub	sp, #24
 80027e0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80027e2:	f107 0308 	add.w	r3, r7, #8
 80027e6:	2200      	movs	r2, #0
 80027e8:	601a      	str	r2, [r3, #0]
 80027ea:	605a      	str	r2, [r3, #4]
 80027ec:	609a      	str	r2, [r3, #8]
 80027ee:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80027f0:	463b      	mov	r3, r7
 80027f2:	2200      	movs	r2, #0
 80027f4:	601a      	str	r2, [r3, #0]
 80027f6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80027f8:	4b1d      	ldr	r3, [pc, #116]	; (8002870 <MX_TIM2_Init+0x94>)
 80027fa:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80027fe:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 9-1;
 8002800:	4b1b      	ldr	r3, [pc, #108]	; (8002870 <MX_TIM2_Init+0x94>)
 8002802:	2208      	movs	r2, #8
 8002804:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002806:	4b1a      	ldr	r3, [pc, #104]	; (8002870 <MX_TIM2_Init+0x94>)
 8002808:	2200      	movs	r2, #0
 800280a:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 100-1;
 800280c:	4b18      	ldr	r3, [pc, #96]	; (8002870 <MX_TIM2_Init+0x94>)
 800280e:	2263      	movs	r2, #99	; 0x63
 8002810:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002812:	4b17      	ldr	r3, [pc, #92]	; (8002870 <MX_TIM2_Init+0x94>)
 8002814:	2200      	movs	r2, #0
 8002816:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8002818:	4b15      	ldr	r3, [pc, #84]	; (8002870 <MX_TIM2_Init+0x94>)
 800281a:	2280      	movs	r2, #128	; 0x80
 800281c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800281e:	4814      	ldr	r0, [pc, #80]	; (8002870 <MX_TIM2_Init+0x94>)
 8002820:	f002 fa78 	bl	8004d14 <HAL_TIM_Base_Init>
 8002824:	4603      	mov	r3, r0
 8002826:	2b00      	cmp	r3, #0
 8002828:	d001      	beq.n	800282e <MX_TIM2_Init+0x52>
  {
    Error_Handler();
 800282a:	f000 f9b9 	bl	8002ba0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800282e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002832:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8002834:	f107 0308 	add.w	r3, r7, #8
 8002838:	4619      	mov	r1, r3
 800283a:	480d      	ldr	r0, [pc, #52]	; (8002870 <MX_TIM2_Init+0x94>)
 800283c:	f002 fc10 	bl	8005060 <HAL_TIM_ConfigClockSource>
 8002840:	4603      	mov	r3, r0
 8002842:	2b00      	cmp	r3, #0
 8002844:	d001      	beq.n	800284a <MX_TIM2_Init+0x6e>
  {
    Error_Handler();
 8002846:	f000 f9ab 	bl	8002ba0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 800284a:	2320      	movs	r3, #32
 800284c:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800284e:	2300      	movs	r3, #0
 8002850:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002852:	463b      	mov	r3, r7
 8002854:	4619      	mov	r1, r3
 8002856:	4806      	ldr	r0, [pc, #24]	; (8002870 <MX_TIM2_Init+0x94>)
 8002858:	f002 fe1c 	bl	8005494 <HAL_TIMEx_MasterConfigSynchronization>
 800285c:	4603      	mov	r3, r0
 800285e:	2b00      	cmp	r3, #0
 8002860:	d001      	beq.n	8002866 <MX_TIM2_Init+0x8a>
  {
    Error_Handler();
 8002862:	f000 f99d 	bl	8002ba0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8002866:	bf00      	nop
 8002868:	3718      	adds	r7, #24
 800286a:	46bd      	mov	sp, r7
 800286c:	bd80      	pop	{r7, pc}
 800286e:	bf00      	nop
 8002870:	20003d20 	.word	0x20003d20

08002874 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8002874:	b580      	push	{r7, lr}
 8002876:	b086      	sub	sp, #24
 8002878:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800287a:	f107 0308 	add.w	r3, r7, #8
 800287e:	2200      	movs	r2, #0
 8002880:	601a      	str	r2, [r3, #0]
 8002882:	605a      	str	r2, [r3, #4]
 8002884:	609a      	str	r2, [r3, #8]
 8002886:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002888:	463b      	mov	r3, r7
 800288a:	2200      	movs	r2, #0
 800288c:	601a      	str	r2, [r3, #0]
 800288e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8002890:	4b1d      	ldr	r3, [pc, #116]	; (8002908 <MX_TIM3_Init+0x94>)
 8002892:	4a1e      	ldr	r2, [pc, #120]	; (800290c <MX_TIM3_Init+0x98>)
 8002894:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 90-1;
 8002896:	4b1c      	ldr	r3, [pc, #112]	; (8002908 <MX_TIM3_Init+0x94>)
 8002898:	2259      	movs	r2, #89	; 0x59
 800289a:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800289c:	4b1a      	ldr	r3, [pc, #104]	; (8002908 <MX_TIM3_Init+0x94>)
 800289e:	2200      	movs	r2, #0
 80028a0:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 833;
 80028a2:	4b19      	ldr	r3, [pc, #100]	; (8002908 <MX_TIM3_Init+0x94>)
 80028a4:	f240 3241 	movw	r2, #833	; 0x341
 80028a8:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80028aa:	4b17      	ldr	r3, [pc, #92]	; (8002908 <MX_TIM3_Init+0x94>)
 80028ac:	2200      	movs	r2, #0
 80028ae:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80028b0:	4b15      	ldr	r3, [pc, #84]	; (8002908 <MX_TIM3_Init+0x94>)
 80028b2:	2280      	movs	r2, #128	; 0x80
 80028b4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80028b6:	4814      	ldr	r0, [pc, #80]	; (8002908 <MX_TIM3_Init+0x94>)
 80028b8:	f002 fa2c 	bl	8004d14 <HAL_TIM_Base_Init>
 80028bc:	4603      	mov	r3, r0
 80028be:	2b00      	cmp	r3, #0
 80028c0:	d001      	beq.n	80028c6 <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 80028c2:	f000 f96d 	bl	8002ba0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80028c6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80028ca:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80028cc:	f107 0308 	add.w	r3, r7, #8
 80028d0:	4619      	mov	r1, r3
 80028d2:	480d      	ldr	r0, [pc, #52]	; (8002908 <MX_TIM3_Init+0x94>)
 80028d4:	f002 fbc4 	bl	8005060 <HAL_TIM_ConfigClockSource>
 80028d8:	4603      	mov	r3, r0
 80028da:	2b00      	cmp	r3, #0
 80028dc:	d001      	beq.n	80028e2 <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 80028de:	f000 f95f 	bl	8002ba0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80028e2:	2300      	movs	r3, #0
 80028e4:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80028e6:	2300      	movs	r3, #0
 80028e8:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80028ea:	463b      	mov	r3, r7
 80028ec:	4619      	mov	r1, r3
 80028ee:	4806      	ldr	r0, [pc, #24]	; (8002908 <MX_TIM3_Init+0x94>)
 80028f0:	f002 fdd0 	bl	8005494 <HAL_TIMEx_MasterConfigSynchronization>
 80028f4:	4603      	mov	r3, r0
 80028f6:	2b00      	cmp	r3, #0
 80028f8:	d001      	beq.n	80028fe <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 80028fa:	f000 f951 	bl	8002ba0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80028fe:	bf00      	nop
 8002900:	3718      	adds	r7, #24
 8002902:	46bd      	mov	sp, r7
 8002904:	bd80      	pop	{r7, pc}
 8002906:	bf00      	nop
 8002908:	20002c68 	.word	0x20002c68
 800290c:	40000400 	.word	0x40000400

08002910 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8002910:	b580      	push	{r7, lr}
 8002912:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002914:	4b15      	ldr	r3, [pc, #84]	; (800296c <MX_USART2_UART_Init+0x5c>)
 8002916:	4a16      	ldr	r2, [pc, #88]	; (8002970 <MX_USART2_UART_Init+0x60>)
 8002918:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 800291a:	4b14      	ldr	r3, [pc, #80]	; (800296c <MX_USART2_UART_Init+0x5c>)
 800291c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8002920:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002922:	4b12      	ldr	r3, [pc, #72]	; (800296c <MX_USART2_UART_Init+0x5c>)
 8002924:	2200      	movs	r2, #0
 8002926:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002928:	4b10      	ldr	r3, [pc, #64]	; (800296c <MX_USART2_UART_Init+0x5c>)
 800292a:	2200      	movs	r2, #0
 800292c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800292e:	4b0f      	ldr	r3, [pc, #60]	; (800296c <MX_USART2_UART_Init+0x5c>)
 8002930:	2200      	movs	r2, #0
 8002932:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002934:	4b0d      	ldr	r3, [pc, #52]	; (800296c <MX_USART2_UART_Init+0x5c>)
 8002936:	220c      	movs	r2, #12
 8002938:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800293a:	4b0c      	ldr	r3, [pc, #48]	; (800296c <MX_USART2_UART_Init+0x5c>)
 800293c:	2200      	movs	r2, #0
 800293e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002940:	4b0a      	ldr	r3, [pc, #40]	; (800296c <MX_USART2_UART_Init+0x5c>)
 8002942:	2200      	movs	r2, #0
 8002944:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002946:	4809      	ldr	r0, [pc, #36]	; (800296c <MX_USART2_UART_Init+0x5c>)
 8002948:	f002 fe34 	bl	80055b4 <HAL_UART_Init>
 800294c:	4603      	mov	r3, r0
 800294e:	2b00      	cmp	r3, #0
 8002950:	d001      	beq.n	8002956 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8002952:	f000 f925 	bl	8002ba0 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */
  HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8002956:	2200      	movs	r2, #0
 8002958:	2100      	movs	r1, #0
 800295a:	2026      	movs	r0, #38	; 0x26
 800295c:	f000 fcb7 	bl	80032ce <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002960:	2026      	movs	r0, #38	; 0x26
 8002962:	f000 fcd0 	bl	8003306 <HAL_NVIC_EnableIRQ>
  /* USER CODE END USART2_Init 2 */

}
 8002966:	bf00      	nop
 8002968:	bd80      	pop	{r7, pc}
 800296a:	bf00      	nop
 800296c:	20003d60 	.word	0x20003d60
 8002970:	40004400 	.word	0x40004400

08002974 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8002974:	b580      	push	{r7, lr}
 8002976:	b082      	sub	sp, #8
 8002978:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 800297a:	2300      	movs	r3, #0
 800297c:	607b      	str	r3, [r7, #4]
 800297e:	4b0c      	ldr	r3, [pc, #48]	; (80029b0 <MX_DMA_Init+0x3c>)
 8002980:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002982:	4a0b      	ldr	r2, [pc, #44]	; (80029b0 <MX_DMA_Init+0x3c>)
 8002984:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002988:	6313      	str	r3, [r2, #48]	; 0x30
 800298a:	4b09      	ldr	r3, [pc, #36]	; (80029b0 <MX_DMA_Init+0x3c>)
 800298c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800298e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002992:	607b      	str	r3, [r7, #4]
 8002994:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 8002996:	2200      	movs	r2, #0
 8002998:	2100      	movs	r1, #0
 800299a:	2010      	movs	r0, #16
 800299c:	f000 fc97 	bl	80032ce <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 80029a0:	2010      	movs	r0, #16
 80029a2:	f000 fcb0 	bl	8003306 <HAL_NVIC_EnableIRQ>

}
 80029a6:	bf00      	nop
 80029a8:	3708      	adds	r7, #8
 80029aa:	46bd      	mov	sp, r7
 80029ac:	bd80      	pop	{r7, pc}
 80029ae:	bf00      	nop
 80029b0:	40023800 	.word	0x40023800

080029b4 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80029b4:	b580      	push	{r7, lr}
 80029b6:	b08a      	sub	sp, #40	; 0x28
 80029b8:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80029ba:	f107 0314 	add.w	r3, r7, #20
 80029be:	2200      	movs	r2, #0
 80029c0:	601a      	str	r2, [r3, #0]
 80029c2:	605a      	str	r2, [r3, #4]
 80029c4:	609a      	str	r2, [r3, #8]
 80029c6:	60da      	str	r2, [r3, #12]
 80029c8:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80029ca:	2300      	movs	r3, #0
 80029cc:	613b      	str	r3, [r7, #16]
 80029ce:	4b45      	ldr	r3, [pc, #276]	; (8002ae4 <MX_GPIO_Init+0x130>)
 80029d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029d2:	4a44      	ldr	r2, [pc, #272]	; (8002ae4 <MX_GPIO_Init+0x130>)
 80029d4:	f043 0304 	orr.w	r3, r3, #4
 80029d8:	6313      	str	r3, [r2, #48]	; 0x30
 80029da:	4b42      	ldr	r3, [pc, #264]	; (8002ae4 <MX_GPIO_Init+0x130>)
 80029dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029de:	f003 0304 	and.w	r3, r3, #4
 80029e2:	613b      	str	r3, [r7, #16]
 80029e4:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80029e6:	2300      	movs	r3, #0
 80029e8:	60fb      	str	r3, [r7, #12]
 80029ea:	4b3e      	ldr	r3, [pc, #248]	; (8002ae4 <MX_GPIO_Init+0x130>)
 80029ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029ee:	4a3d      	ldr	r2, [pc, #244]	; (8002ae4 <MX_GPIO_Init+0x130>)
 80029f0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80029f4:	6313      	str	r3, [r2, #48]	; 0x30
 80029f6:	4b3b      	ldr	r3, [pc, #236]	; (8002ae4 <MX_GPIO_Init+0x130>)
 80029f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029fa:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80029fe:	60fb      	str	r3, [r7, #12]
 8002a00:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002a02:	2300      	movs	r3, #0
 8002a04:	60bb      	str	r3, [r7, #8]
 8002a06:	4b37      	ldr	r3, [pc, #220]	; (8002ae4 <MX_GPIO_Init+0x130>)
 8002a08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a0a:	4a36      	ldr	r2, [pc, #216]	; (8002ae4 <MX_GPIO_Init+0x130>)
 8002a0c:	f043 0301 	orr.w	r3, r3, #1
 8002a10:	6313      	str	r3, [r2, #48]	; 0x30
 8002a12:	4b34      	ldr	r3, [pc, #208]	; (8002ae4 <MX_GPIO_Init+0x130>)
 8002a14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a16:	f003 0301 	and.w	r3, r3, #1
 8002a1a:	60bb      	str	r3, [r7, #8]
 8002a1c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002a1e:	2300      	movs	r3, #0
 8002a20:	607b      	str	r3, [r7, #4]
 8002a22:	4b30      	ldr	r3, [pc, #192]	; (8002ae4 <MX_GPIO_Init+0x130>)
 8002a24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a26:	4a2f      	ldr	r2, [pc, #188]	; (8002ae4 <MX_GPIO_Init+0x130>)
 8002a28:	f043 0302 	orr.w	r3, r3, #2
 8002a2c:	6313      	str	r3, [r2, #48]	; 0x30
 8002a2e:	4b2d      	ldr	r3, [pc, #180]	; (8002ae4 <MX_GPIO_Init+0x130>)
 8002a30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a32:	f003 0302 	and.w	r3, r3, #2
 8002a36:	607b      	str	r3, [r7, #4]
 8002a38:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 8002a3a:	2200      	movs	r2, #0
 8002a3c:	f44f 7148 	mov.w	r1, #800	; 0x320
 8002a40:	4829      	ldr	r0, [pc, #164]	; (8002ae8 <MX_GPIO_Init+0x134>)
 8002a42:	f001 fc21 	bl	8004288 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(PTT_GPIO_Port, PTT_Pin, GPIO_PIN_RESET);
 8002a46:	2200      	movs	r2, #0
 8002a48:	2110      	movs	r1, #16
 8002a4a:	4828      	ldr	r0, [pc, #160]	; (8002aec <MX_GPIO_Init+0x138>)
 8002a4c:	f001 fc1c 	bl	8004288 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8002a50:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002a54:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8002a56:	4b26      	ldr	r3, [pc, #152]	; (8002af0 <MX_GPIO_Init+0x13c>)
 8002a58:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a5a:	2300      	movs	r3, #0
 8002a5c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8002a5e:	f107 0314 	add.w	r3, r7, #20
 8002a62:	4619      	mov	r1, r3
 8002a64:	4821      	ldr	r0, [pc, #132]	; (8002aec <MX_GPIO_Init+0x138>)
 8002a66:	f001 fa7d 	bl	8003f64 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002a6a:	2301      	movs	r3, #1
 8002a6c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002a6e:	4b21      	ldr	r3, [pc, #132]	; (8002af4 <MX_GPIO_Init+0x140>)
 8002a70:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a72:	2300      	movs	r3, #0
 8002a74:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a76:	f107 0314 	add.w	r3, r7, #20
 8002a7a:	4619      	mov	r1, r3
 8002a7c:	481a      	ldr	r0, [pc, #104]	; (8002ae8 <MX_GPIO_Init+0x134>)
 8002a7e:	f001 fa71 	bl	8003f64 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin PA8 PA9 */
  GPIO_InitStruct.Pin = LD2_Pin|GPIO_PIN_8|GPIO_PIN_9;
 8002a82:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002a86:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002a88:	2301      	movs	r3, #1
 8002a8a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a8c:	2300      	movs	r3, #0
 8002a8e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002a90:	2300      	movs	r3, #0
 8002a92:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a94:	f107 0314 	add.w	r3, r7, #20
 8002a98:	4619      	mov	r1, r3
 8002a9a:	4813      	ldr	r0, [pc, #76]	; (8002ae8 <MX_GPIO_Init+0x134>)
 8002a9c:	f001 fa62 	bl	8003f64 <HAL_GPIO_Init>

  /*Configure GPIO pin : PTT_Pin */
  GPIO_InitStruct.Pin = PTT_Pin;
 8002aa0:	2310      	movs	r3, #16
 8002aa2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002aa4:	2301      	movs	r3, #1
 8002aa6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002aa8:	2300      	movs	r3, #0
 8002aaa:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002aac:	2300      	movs	r3, #0
 8002aae:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(PTT_GPIO_Port, &GPIO_InitStruct);
 8002ab0:	f107 0314 	add.w	r3, r7, #20
 8002ab4:	4619      	mov	r1, r3
 8002ab6:	480d      	ldr	r0, [pc, #52]	; (8002aec <MX_GPIO_Init+0x138>)
 8002ab8:	f001 fa54 	bl	8003f64 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 8002abc:	2200      	movs	r2, #0
 8002abe:	2100      	movs	r1, #0
 8002ac0:	2006      	movs	r0, #6
 8002ac2:	f000 fc04 	bl	80032ce <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8002ac6:	2006      	movs	r0, #6
 8002ac8:	f000 fc1d 	bl	8003306 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8002acc:	2200      	movs	r2, #0
 8002ace:	2100      	movs	r1, #0
 8002ad0:	2028      	movs	r0, #40	; 0x28
 8002ad2:	f000 fbfc 	bl	80032ce <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8002ad6:	2028      	movs	r0, #40	; 0x28
 8002ad8:	f000 fc15 	bl	8003306 <HAL_NVIC_EnableIRQ>

}
 8002adc:	bf00      	nop
 8002ade:	3728      	adds	r7, #40	; 0x28
 8002ae0:	46bd      	mov	sp, r7
 8002ae2:	bd80      	pop	{r7, pc}
 8002ae4:	40023800 	.word	0x40023800
 8002ae8:	40020000 	.word	0x40020000
 8002aec:	40020800 	.word	0x40020800
 8002af0:	10210000 	.word	0x10210000
 8002af4:	10110000 	.word	0x10110000

08002af8 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 8002af8:	b580      	push	{r7, lr}
 8002afa:	b082      	sub	sp, #8
 8002afc:	af00      	add	r7, sp, #0
 8002afe:	6078      	str	r0, [r7, #4]
	if (htim == &htim3)
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	4a05      	ldr	r2, [pc, #20]	; (8002b18 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8002b04:	4293      	cmp	r3, r2
 8002b06:	d102      	bne.n	8002b0e <HAL_TIM_PeriodElapsedCallback+0x16>
		Tim3IT();
 8002b08:	f7ff f998 	bl	8001e3c <Tim3IT>
	else
		__NOP();
}
 8002b0c:	e000      	b.n	8002b10 <HAL_TIM_PeriodElapsedCallback+0x18>
		__NOP();
 8002b0e:	bf00      	nop
}
 8002b10:	bf00      	nop
 8002b12:	3708      	adds	r7, #8
 8002b14:	46bd      	mov	sp, r7
 8002b16:	bd80      	pop	{r7, pc}
 8002b18:	20002c68 	.word	0x20002c68

08002b1c <HAL_GPIO_EXTI_Callback>:
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 8002b1c:	b580      	push	{r7, lr}
 8002b1e:	b082      	sub	sp, #8
 8002b20:	af00      	add	r7, sp, #0
 8002b22:	4603      	mov	r3, r0
 8002b24:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin == GPIO_PIN_0) {
 8002b26:	88fb      	ldrh	r3, [r7, #6]
 8002b28:	2b01      	cmp	r3, #1
 8002b2a:	d101      	bne.n	8002b30 <HAL_GPIO_EXTI_Callback+0x14>
		FreqCounterPinEXTI();
 8002b2c:	f7ff f9ac 	bl	8001e88 <FreqCounterPinEXTI>
	}
	if (GPIO_Pin == B1_Pin) {
 8002b30:	88fb      	ldrh	r3, [r7, #6]
 8002b32:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002b36:	d103      	bne.n	8002b40 <HAL_GPIO_EXTI_Callback+0x24>
		changeMode = 1;
 8002b38:	4b04      	ldr	r3, [pc, #16]	; (8002b4c <HAL_GPIO_EXTI_Callback+0x30>)
 8002b3a:	2201      	movs	r2, #1
 8002b3c:	701a      	strb	r2, [r3, #0]
		sprintf(uartData, "Toggle Input Detected\r\n");
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
		*/
	} else
		__NOP();
}
 8002b3e:	e000      	b.n	8002b42 <HAL_GPIO_EXTI_Callback+0x26>
		__NOP();
 8002b40:	bf00      	nop
}
 8002b42:	bf00      	nop
 8002b44:	3708      	adds	r7, #8
 8002b46:	46bd      	mov	sp, r7
 8002b48:	bd80      	pop	{r7, pc}
 8002b4a:	bf00      	nop
 8002b4c:	20000099 	.word	0x20000099

08002b50 <uart_gpio_init>:


void uart_gpio_init()
{
 8002b50:	b580      	push	{r7, lr}
 8002b52:	b086      	sub	sp, #24
 8002b54:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct;

  __GPIOA_CLK_ENABLE();
 8002b56:	2300      	movs	r3, #0
 8002b58:	603b      	str	r3, [r7, #0]
 8002b5a:	4b0f      	ldr	r3, [pc, #60]	; (8002b98 <uart_gpio_init+0x48>)
 8002b5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b5e:	4a0e      	ldr	r2, [pc, #56]	; (8002b98 <uart_gpio_init+0x48>)
 8002b60:	f043 0301 	orr.w	r3, r3, #1
 8002b64:	6313      	str	r3, [r2, #48]	; 0x30
 8002b66:	4b0c      	ldr	r3, [pc, #48]	; (8002b98 <uart_gpio_init+0x48>)
 8002b68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b6a:	f003 0301 	and.w	r3, r3, #1
 8002b6e:	603b      	str	r3, [r7, #0]
 8002b70:	683b      	ldr	r3, [r7, #0]

  /**USART2 GPIO Configuration
  PA2     ------> USART2_TX
  PA3     ------> USART2_RX
  */
  GPIO_InitStruct.Pin = GPIO_PIN_2 | GPIO_PIN_3;
 8002b72:	230c      	movs	r3, #12
 8002b74:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b76:	2302      	movs	r3, #2
 8002b78:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002b7a:	2301      	movs	r3, #1
 8002b7c:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
 8002b7e:	2300      	movs	r3, #0
 8002b80:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8002b82:	2307      	movs	r3, #7
 8002b84:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002b86:	1d3b      	adds	r3, r7, #4
 8002b88:	4619      	mov	r1, r3
 8002b8a:	4804      	ldr	r0, [pc, #16]	; (8002b9c <uart_gpio_init+0x4c>)
 8002b8c:	f001 f9ea 	bl	8003f64 <HAL_GPIO_Init>
}
 8002b90:	bf00      	nop
 8002b92:	3718      	adds	r7, #24
 8002b94:	46bd      	mov	sp, r7
 8002b96:	bd80      	pop	{r7, pc}
 8002b98:	40023800 	.word	0x40023800
 8002b9c:	40020000 	.word	0x40020000

08002ba0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002ba0:	b480      	push	{r7}
 8002ba2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002ba4:	bf00      	nop
 8002ba6:	46bd      	mov	sp, r7
 8002ba8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bac:	4770      	bx	lr
	...

08002bb0 <HAL_MspInit>:
 8002bb0:	b580      	push	{r7, lr}
 8002bb2:	b082      	sub	sp, #8
 8002bb4:	af00      	add	r7, sp, #0
 8002bb6:	2300      	movs	r3, #0
 8002bb8:	607b      	str	r3, [r7, #4]
 8002bba:	4b10      	ldr	r3, [pc, #64]	; (8002bfc <HAL_MspInit+0x4c>)
 8002bbc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002bbe:	4a0f      	ldr	r2, [pc, #60]	; (8002bfc <HAL_MspInit+0x4c>)
 8002bc0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002bc4:	6453      	str	r3, [r2, #68]	; 0x44
 8002bc6:	4b0d      	ldr	r3, [pc, #52]	; (8002bfc <HAL_MspInit+0x4c>)
 8002bc8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002bca:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002bce:	607b      	str	r3, [r7, #4]
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	2300      	movs	r3, #0
 8002bd4:	603b      	str	r3, [r7, #0]
 8002bd6:	4b09      	ldr	r3, [pc, #36]	; (8002bfc <HAL_MspInit+0x4c>)
 8002bd8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bda:	4a08      	ldr	r2, [pc, #32]	; (8002bfc <HAL_MspInit+0x4c>)
 8002bdc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002be0:	6413      	str	r3, [r2, #64]	; 0x40
 8002be2:	4b06      	ldr	r3, [pc, #24]	; (8002bfc <HAL_MspInit+0x4c>)
 8002be4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002be6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002bea:	603b      	str	r3, [r7, #0]
 8002bec:	683b      	ldr	r3, [r7, #0]
 8002bee:	2007      	movs	r0, #7
 8002bf0:	f000 fb62 	bl	80032b8 <HAL_NVIC_SetPriorityGrouping>
 8002bf4:	bf00      	nop
 8002bf6:	3708      	adds	r7, #8
 8002bf8:	46bd      	mov	sp, r7
 8002bfa:	bd80      	pop	{r7, pc}
 8002bfc:	40023800 	.word	0x40023800

08002c00 <HAL_DAC_MspInit>:
 8002c00:	b580      	push	{r7, lr}
 8002c02:	b08a      	sub	sp, #40	; 0x28
 8002c04:	af00      	add	r7, sp, #0
 8002c06:	6078      	str	r0, [r7, #4]
 8002c08:	f107 0314 	add.w	r3, r7, #20
 8002c0c:	2200      	movs	r2, #0
 8002c0e:	601a      	str	r2, [r3, #0]
 8002c10:	605a      	str	r2, [r3, #4]
 8002c12:	609a      	str	r2, [r3, #8]
 8002c14:	60da      	str	r2, [r3, #12]
 8002c16:	611a      	str	r2, [r3, #16]
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	4a2f      	ldr	r2, [pc, #188]	; (8002cdc <HAL_DAC_MspInit+0xdc>)
 8002c1e:	4293      	cmp	r3, r2
 8002c20:	d158      	bne.n	8002cd4 <HAL_DAC_MspInit+0xd4>
 8002c22:	2300      	movs	r3, #0
 8002c24:	613b      	str	r3, [r7, #16]
 8002c26:	4b2e      	ldr	r3, [pc, #184]	; (8002ce0 <HAL_DAC_MspInit+0xe0>)
 8002c28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c2a:	4a2d      	ldr	r2, [pc, #180]	; (8002ce0 <HAL_DAC_MspInit+0xe0>)
 8002c2c:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8002c30:	6413      	str	r3, [r2, #64]	; 0x40
 8002c32:	4b2b      	ldr	r3, [pc, #172]	; (8002ce0 <HAL_DAC_MspInit+0xe0>)
 8002c34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c36:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8002c3a:	613b      	str	r3, [r7, #16]
 8002c3c:	693b      	ldr	r3, [r7, #16]
 8002c3e:	2300      	movs	r3, #0
 8002c40:	60fb      	str	r3, [r7, #12]
 8002c42:	4b27      	ldr	r3, [pc, #156]	; (8002ce0 <HAL_DAC_MspInit+0xe0>)
 8002c44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c46:	4a26      	ldr	r2, [pc, #152]	; (8002ce0 <HAL_DAC_MspInit+0xe0>)
 8002c48:	f043 0301 	orr.w	r3, r3, #1
 8002c4c:	6313      	str	r3, [r2, #48]	; 0x30
 8002c4e:	4b24      	ldr	r3, [pc, #144]	; (8002ce0 <HAL_DAC_MspInit+0xe0>)
 8002c50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c52:	f003 0301 	and.w	r3, r3, #1
 8002c56:	60fb      	str	r3, [r7, #12]
 8002c58:	68fb      	ldr	r3, [r7, #12]
 8002c5a:	2310      	movs	r3, #16
 8002c5c:	617b      	str	r3, [r7, #20]
 8002c5e:	2303      	movs	r3, #3
 8002c60:	61bb      	str	r3, [r7, #24]
 8002c62:	2300      	movs	r3, #0
 8002c64:	61fb      	str	r3, [r7, #28]
 8002c66:	f107 0314 	add.w	r3, r7, #20
 8002c6a:	4619      	mov	r1, r3
 8002c6c:	481d      	ldr	r0, [pc, #116]	; (8002ce4 <HAL_DAC_MspInit+0xe4>)
 8002c6e:	f001 f979 	bl	8003f64 <HAL_GPIO_Init>
 8002c72:	4b1d      	ldr	r3, [pc, #116]	; (8002ce8 <HAL_DAC_MspInit+0xe8>)
 8002c74:	4a1d      	ldr	r2, [pc, #116]	; (8002cec <HAL_DAC_MspInit+0xec>)
 8002c76:	601a      	str	r2, [r3, #0]
 8002c78:	4b1b      	ldr	r3, [pc, #108]	; (8002ce8 <HAL_DAC_MspInit+0xe8>)
 8002c7a:	f04f 6260 	mov.w	r2, #234881024	; 0xe000000
 8002c7e:	605a      	str	r2, [r3, #4]
 8002c80:	4b19      	ldr	r3, [pc, #100]	; (8002ce8 <HAL_DAC_MspInit+0xe8>)
 8002c82:	2240      	movs	r2, #64	; 0x40
 8002c84:	609a      	str	r2, [r3, #8]
 8002c86:	4b18      	ldr	r3, [pc, #96]	; (8002ce8 <HAL_DAC_MspInit+0xe8>)
 8002c88:	2200      	movs	r2, #0
 8002c8a:	60da      	str	r2, [r3, #12]
 8002c8c:	4b16      	ldr	r3, [pc, #88]	; (8002ce8 <HAL_DAC_MspInit+0xe8>)
 8002c8e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002c92:	611a      	str	r2, [r3, #16]
 8002c94:	4b14      	ldr	r3, [pc, #80]	; (8002ce8 <HAL_DAC_MspInit+0xe8>)
 8002c96:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002c9a:	615a      	str	r2, [r3, #20]
 8002c9c:	4b12      	ldr	r3, [pc, #72]	; (8002ce8 <HAL_DAC_MspInit+0xe8>)
 8002c9e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8002ca2:	619a      	str	r2, [r3, #24]
 8002ca4:	4b10      	ldr	r3, [pc, #64]	; (8002ce8 <HAL_DAC_MspInit+0xe8>)
 8002ca6:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002caa:	61da      	str	r2, [r3, #28]
 8002cac:	4b0e      	ldr	r3, [pc, #56]	; (8002ce8 <HAL_DAC_MspInit+0xe8>)
 8002cae:	2200      	movs	r2, #0
 8002cb0:	621a      	str	r2, [r3, #32]
 8002cb2:	4b0d      	ldr	r3, [pc, #52]	; (8002ce8 <HAL_DAC_MspInit+0xe8>)
 8002cb4:	2200      	movs	r2, #0
 8002cb6:	625a      	str	r2, [r3, #36]	; 0x24
 8002cb8:	480b      	ldr	r0, [pc, #44]	; (8002ce8 <HAL_DAC_MspInit+0xe8>)
 8002cba:	f000 fd53 	bl	8003764 <HAL_DMA_Init>
 8002cbe:	4603      	mov	r3, r0
 8002cc0:	2b00      	cmp	r3, #0
 8002cc2:	d001      	beq.n	8002cc8 <HAL_DAC_MspInit+0xc8>
 8002cc4:	f7ff ff6c 	bl	8002ba0 <Error_Handler>
 8002cc8:	687b      	ldr	r3, [r7, #4]
 8002cca:	4a07      	ldr	r2, [pc, #28]	; (8002ce8 <HAL_DAC_MspInit+0xe8>)
 8002ccc:	609a      	str	r2, [r3, #8]
 8002cce:	4a06      	ldr	r2, [pc, #24]	; (8002ce8 <HAL_DAC_MspInit+0xe8>)
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	6393      	str	r3, [r2, #56]	; 0x38
 8002cd4:	bf00      	nop
 8002cd6:	3728      	adds	r7, #40	; 0x28
 8002cd8:	46bd      	mov	sp, r7
 8002cda:	bd80      	pop	{r7, pc}
 8002cdc:	40007400 	.word	0x40007400
 8002ce0:	40023800 	.word	0x40023800
 8002ce4:	40020000 	.word	0x40020000
 8002ce8:	20002ca8 	.word	0x20002ca8
 8002cec:	40026088 	.word	0x40026088

08002cf0 <HAL_TIM_Base_MspInit>:
 8002cf0:	b580      	push	{r7, lr}
 8002cf2:	b084      	sub	sp, #16
 8002cf4:	af00      	add	r7, sp, #0
 8002cf6:	6078      	str	r0, [r7, #4]
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	681b      	ldr	r3, [r3, #0]
 8002cfc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002d00:	d10e      	bne.n	8002d20 <HAL_TIM_Base_MspInit+0x30>
 8002d02:	2300      	movs	r3, #0
 8002d04:	60fb      	str	r3, [r7, #12]
 8002d06:	4b16      	ldr	r3, [pc, #88]	; (8002d60 <HAL_TIM_Base_MspInit+0x70>)
 8002d08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d0a:	4a15      	ldr	r2, [pc, #84]	; (8002d60 <HAL_TIM_Base_MspInit+0x70>)
 8002d0c:	f043 0301 	orr.w	r3, r3, #1
 8002d10:	6413      	str	r3, [r2, #64]	; 0x40
 8002d12:	4b13      	ldr	r3, [pc, #76]	; (8002d60 <HAL_TIM_Base_MspInit+0x70>)
 8002d14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d16:	f003 0301 	and.w	r3, r3, #1
 8002d1a:	60fb      	str	r3, [r7, #12]
 8002d1c:	68fb      	ldr	r3, [r7, #12]
 8002d1e:	e01a      	b.n	8002d56 <HAL_TIM_Base_MspInit+0x66>
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	4a0f      	ldr	r2, [pc, #60]	; (8002d64 <HAL_TIM_Base_MspInit+0x74>)
 8002d26:	4293      	cmp	r3, r2
 8002d28:	d115      	bne.n	8002d56 <HAL_TIM_Base_MspInit+0x66>
 8002d2a:	2300      	movs	r3, #0
 8002d2c:	60bb      	str	r3, [r7, #8]
 8002d2e:	4b0c      	ldr	r3, [pc, #48]	; (8002d60 <HAL_TIM_Base_MspInit+0x70>)
 8002d30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d32:	4a0b      	ldr	r2, [pc, #44]	; (8002d60 <HAL_TIM_Base_MspInit+0x70>)
 8002d34:	f043 0302 	orr.w	r3, r3, #2
 8002d38:	6413      	str	r3, [r2, #64]	; 0x40
 8002d3a:	4b09      	ldr	r3, [pc, #36]	; (8002d60 <HAL_TIM_Base_MspInit+0x70>)
 8002d3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d3e:	f003 0302 	and.w	r3, r3, #2
 8002d42:	60bb      	str	r3, [r7, #8]
 8002d44:	68bb      	ldr	r3, [r7, #8]
 8002d46:	2200      	movs	r2, #0
 8002d48:	2100      	movs	r1, #0
 8002d4a:	201d      	movs	r0, #29
 8002d4c:	f000 fabf 	bl	80032ce <HAL_NVIC_SetPriority>
 8002d50:	201d      	movs	r0, #29
 8002d52:	f000 fad8 	bl	8003306 <HAL_NVIC_EnableIRQ>
 8002d56:	bf00      	nop
 8002d58:	3710      	adds	r7, #16
 8002d5a:	46bd      	mov	sp, r7
 8002d5c:	bd80      	pop	{r7, pc}
 8002d5e:	bf00      	nop
 8002d60:	40023800 	.word	0x40023800
 8002d64:	40000400 	.word	0x40000400

08002d68 <HAL_UART_MspInit>:
 8002d68:	b580      	push	{r7, lr}
 8002d6a:	b08a      	sub	sp, #40	; 0x28
 8002d6c:	af00      	add	r7, sp, #0
 8002d6e:	6078      	str	r0, [r7, #4]
 8002d70:	f107 0314 	add.w	r3, r7, #20
 8002d74:	2200      	movs	r2, #0
 8002d76:	601a      	str	r2, [r3, #0]
 8002d78:	605a      	str	r2, [r3, #4]
 8002d7a:	609a      	str	r2, [r3, #8]
 8002d7c:	60da      	str	r2, [r3, #12]
 8002d7e:	611a      	str	r2, [r3, #16]
 8002d80:	687b      	ldr	r3, [r7, #4]
 8002d82:	681b      	ldr	r3, [r3, #0]
 8002d84:	4a1d      	ldr	r2, [pc, #116]	; (8002dfc <HAL_UART_MspInit+0x94>)
 8002d86:	4293      	cmp	r3, r2
 8002d88:	d133      	bne.n	8002df2 <HAL_UART_MspInit+0x8a>
 8002d8a:	2300      	movs	r3, #0
 8002d8c:	613b      	str	r3, [r7, #16]
 8002d8e:	4b1c      	ldr	r3, [pc, #112]	; (8002e00 <HAL_UART_MspInit+0x98>)
 8002d90:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d92:	4a1b      	ldr	r2, [pc, #108]	; (8002e00 <HAL_UART_MspInit+0x98>)
 8002d94:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002d98:	6413      	str	r3, [r2, #64]	; 0x40
 8002d9a:	4b19      	ldr	r3, [pc, #100]	; (8002e00 <HAL_UART_MspInit+0x98>)
 8002d9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d9e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002da2:	613b      	str	r3, [r7, #16]
 8002da4:	693b      	ldr	r3, [r7, #16]
 8002da6:	2300      	movs	r3, #0
 8002da8:	60fb      	str	r3, [r7, #12]
 8002daa:	4b15      	ldr	r3, [pc, #84]	; (8002e00 <HAL_UART_MspInit+0x98>)
 8002dac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002dae:	4a14      	ldr	r2, [pc, #80]	; (8002e00 <HAL_UART_MspInit+0x98>)
 8002db0:	f043 0301 	orr.w	r3, r3, #1
 8002db4:	6313      	str	r3, [r2, #48]	; 0x30
 8002db6:	4b12      	ldr	r3, [pc, #72]	; (8002e00 <HAL_UART_MspInit+0x98>)
 8002db8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002dba:	f003 0301 	and.w	r3, r3, #1
 8002dbe:	60fb      	str	r3, [r7, #12]
 8002dc0:	68fb      	ldr	r3, [r7, #12]
 8002dc2:	230c      	movs	r3, #12
 8002dc4:	617b      	str	r3, [r7, #20]
 8002dc6:	2302      	movs	r3, #2
 8002dc8:	61bb      	str	r3, [r7, #24]
 8002dca:	2300      	movs	r3, #0
 8002dcc:	61fb      	str	r3, [r7, #28]
 8002dce:	2303      	movs	r3, #3
 8002dd0:	623b      	str	r3, [r7, #32]
 8002dd2:	2307      	movs	r3, #7
 8002dd4:	627b      	str	r3, [r7, #36]	; 0x24
 8002dd6:	f107 0314 	add.w	r3, r7, #20
 8002dda:	4619      	mov	r1, r3
 8002ddc:	4809      	ldr	r0, [pc, #36]	; (8002e04 <HAL_UART_MspInit+0x9c>)
 8002dde:	f001 f8c1 	bl	8003f64 <HAL_GPIO_Init>
 8002de2:	2200      	movs	r2, #0
 8002de4:	2100      	movs	r1, #0
 8002de6:	2026      	movs	r0, #38	; 0x26
 8002de8:	f000 fa71 	bl	80032ce <HAL_NVIC_SetPriority>
 8002dec:	2026      	movs	r0, #38	; 0x26
 8002dee:	f000 fa8a 	bl	8003306 <HAL_NVIC_EnableIRQ>
 8002df2:	bf00      	nop
 8002df4:	3728      	adds	r7, #40	; 0x28
 8002df6:	46bd      	mov	sp, r7
 8002df8:	bd80      	pop	{r7, pc}
 8002dfa:	bf00      	nop
 8002dfc:	40004400 	.word	0x40004400
 8002e00:	40023800 	.word	0x40023800
 8002e04:	40020000 	.word	0x40020000

08002e08 <NMI_Handler>:
 8002e08:	b480      	push	{r7}
 8002e0a:	af00      	add	r7, sp, #0
 8002e0c:	bf00      	nop
 8002e0e:	46bd      	mov	sp, r7
 8002e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e14:	4770      	bx	lr

08002e16 <HardFault_Handler>:
 8002e16:	b480      	push	{r7}
 8002e18:	af00      	add	r7, sp, #0
 8002e1a:	e7fe      	b.n	8002e1a <HardFault_Handler+0x4>

08002e1c <MemManage_Handler>:
 8002e1c:	b480      	push	{r7}
 8002e1e:	af00      	add	r7, sp, #0
 8002e20:	e7fe      	b.n	8002e20 <MemManage_Handler+0x4>

08002e22 <BusFault_Handler>:
 8002e22:	b480      	push	{r7}
 8002e24:	af00      	add	r7, sp, #0
 8002e26:	e7fe      	b.n	8002e26 <BusFault_Handler+0x4>

08002e28 <UsageFault_Handler>:
 8002e28:	b480      	push	{r7}
 8002e2a:	af00      	add	r7, sp, #0
 8002e2c:	e7fe      	b.n	8002e2c <UsageFault_Handler+0x4>

08002e2e <SVC_Handler>:
 8002e2e:	b480      	push	{r7}
 8002e30:	af00      	add	r7, sp, #0
 8002e32:	bf00      	nop
 8002e34:	46bd      	mov	sp, r7
 8002e36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e3a:	4770      	bx	lr

08002e3c <DebugMon_Handler>:
 8002e3c:	b480      	push	{r7}
 8002e3e:	af00      	add	r7, sp, #0
 8002e40:	bf00      	nop
 8002e42:	46bd      	mov	sp, r7
 8002e44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e48:	4770      	bx	lr

08002e4a <PendSV_Handler>:
 8002e4a:	b480      	push	{r7}
 8002e4c:	af00      	add	r7, sp, #0
 8002e4e:	bf00      	nop
 8002e50:	46bd      	mov	sp, r7
 8002e52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e56:	4770      	bx	lr

08002e58 <SysTick_Handler>:
 8002e58:	b580      	push	{r7, lr}
 8002e5a:	af00      	add	r7, sp, #0
 8002e5c:	f000 f8f8 	bl	8003050 <HAL_IncTick>
 8002e60:	bf00      	nop
 8002e62:	bd80      	pop	{r7, pc}

08002e64 <EXTI0_IRQHandler>:
 8002e64:	b580      	push	{r7, lr}
 8002e66:	af00      	add	r7, sp, #0
 8002e68:	2001      	movs	r0, #1
 8002e6a:	f001 fa27 	bl	80042bc <HAL_GPIO_EXTI_IRQHandler>
 8002e6e:	bf00      	nop
 8002e70:	bd80      	pop	{r7, pc}
	...

08002e74 <DMA1_Stream5_IRQHandler>:
 8002e74:	b580      	push	{r7, lr}
 8002e76:	af00      	add	r7, sp, #0
 8002e78:	4802      	ldr	r0, [pc, #8]	; (8002e84 <DMA1_Stream5_IRQHandler+0x10>)
 8002e7a:	f000 fe0b 	bl	8003a94 <HAL_DMA_IRQHandler>
 8002e7e:	bf00      	nop
 8002e80:	bd80      	pop	{r7, pc}
 8002e82:	bf00      	nop
 8002e84:	20002ca8 	.word	0x20002ca8

08002e88 <TIM3_IRQHandler>:
 8002e88:	b580      	push	{r7, lr}
 8002e8a:	af00      	add	r7, sp, #0
 8002e8c:	4802      	ldr	r0, [pc, #8]	; (8002e98 <TIM3_IRQHandler+0x10>)
 8002e8e:	f001 ffdf 	bl	8004e50 <HAL_TIM_IRQHandler>
 8002e92:	bf00      	nop
 8002e94:	bd80      	pop	{r7, pc}
 8002e96:	bf00      	nop
 8002e98:	20002c68 	.word	0x20002c68

08002e9c <USART2_IRQHandler>:
 8002e9c:	b580      	push	{r7, lr}
 8002e9e:	af00      	add	r7, sp, #0
 8002ea0:	4802      	ldr	r0, [pc, #8]	; (8002eac <USART2_IRQHandler+0x10>)
 8002ea2:	f002 fcc3 	bl	800582c <HAL_UART_IRQHandler>
 8002ea6:	bf00      	nop
 8002ea8:	bd80      	pop	{r7, pc}
 8002eaa:	bf00      	nop
 8002eac:	20003d60 	.word	0x20003d60

08002eb0 <EXTI15_10_IRQHandler>:
 8002eb0:	b580      	push	{r7, lr}
 8002eb2:	af00      	add	r7, sp, #0
 8002eb4:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8002eb8:	f001 fa00 	bl	80042bc <HAL_GPIO_EXTI_IRQHandler>
 8002ebc:	bf00      	nop
 8002ebe:	bd80      	pop	{r7, pc}

08002ec0 <_sbrk>:
 8002ec0:	b580      	push	{r7, lr}
 8002ec2:	b086      	sub	sp, #24
 8002ec4:	af00      	add	r7, sp, #0
 8002ec6:	6078      	str	r0, [r7, #4]
 8002ec8:	4a14      	ldr	r2, [pc, #80]	; (8002f1c <_sbrk+0x5c>)
 8002eca:	4b15      	ldr	r3, [pc, #84]	; (8002f20 <_sbrk+0x60>)
 8002ecc:	1ad3      	subs	r3, r2, r3
 8002ece:	617b      	str	r3, [r7, #20]
 8002ed0:	697b      	ldr	r3, [r7, #20]
 8002ed2:	613b      	str	r3, [r7, #16]
 8002ed4:	4b13      	ldr	r3, [pc, #76]	; (8002f24 <_sbrk+0x64>)
 8002ed6:	681b      	ldr	r3, [r3, #0]
 8002ed8:	2b00      	cmp	r3, #0
 8002eda:	d102      	bne.n	8002ee2 <_sbrk+0x22>
 8002edc:	4b11      	ldr	r3, [pc, #68]	; (8002f24 <_sbrk+0x64>)
 8002ede:	4a12      	ldr	r2, [pc, #72]	; (8002f28 <_sbrk+0x68>)
 8002ee0:	601a      	str	r2, [r3, #0]
 8002ee2:	4b10      	ldr	r3, [pc, #64]	; (8002f24 <_sbrk+0x64>)
 8002ee4:	681a      	ldr	r2, [r3, #0]
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	4413      	add	r3, r2
 8002eea:	693a      	ldr	r2, [r7, #16]
 8002eec:	429a      	cmp	r2, r3
 8002eee:	d207      	bcs.n	8002f00 <_sbrk+0x40>
 8002ef0:	f003 fa98 	bl	8006424 <__errno>
 8002ef4:	4602      	mov	r2, r0
 8002ef6:	230c      	movs	r3, #12
 8002ef8:	6013      	str	r3, [r2, #0]
 8002efa:	f04f 33ff 	mov.w	r3, #4294967295
 8002efe:	e009      	b.n	8002f14 <_sbrk+0x54>
 8002f00:	4b08      	ldr	r3, [pc, #32]	; (8002f24 <_sbrk+0x64>)
 8002f02:	681b      	ldr	r3, [r3, #0]
 8002f04:	60fb      	str	r3, [r7, #12]
 8002f06:	4b07      	ldr	r3, [pc, #28]	; (8002f24 <_sbrk+0x64>)
 8002f08:	681a      	ldr	r2, [r3, #0]
 8002f0a:	687b      	ldr	r3, [r7, #4]
 8002f0c:	4413      	add	r3, r2
 8002f0e:	4a05      	ldr	r2, [pc, #20]	; (8002f24 <_sbrk+0x64>)
 8002f10:	6013      	str	r3, [r2, #0]
 8002f12:	68fb      	ldr	r3, [r7, #12]
 8002f14:	4618      	mov	r0, r3
 8002f16:	3718      	adds	r7, #24
 8002f18:	46bd      	mov	sp, r7
 8002f1a:	bd80      	pop	{r7, pc}
 8002f1c:	20020000 	.word	0x20020000
 8002f20:	00000400 	.word	0x00000400
 8002f24:	200000a4 	.word	0x200000a4
 8002f28:	20004da8 	.word	0x20004da8

08002f2c <SystemInit>:
 8002f2c:	b480      	push	{r7}
 8002f2e:	af00      	add	r7, sp, #0
 8002f30:	4b08      	ldr	r3, [pc, #32]	; (8002f54 <SystemInit+0x28>)
 8002f32:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002f36:	4a07      	ldr	r2, [pc, #28]	; (8002f54 <SystemInit+0x28>)
 8002f38:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002f3c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002f40:	4b04      	ldr	r3, [pc, #16]	; (8002f54 <SystemInit+0x28>)
 8002f42:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8002f46:	609a      	str	r2, [r3, #8]
 8002f48:	bf00      	nop
 8002f4a:	46bd      	mov	sp, r7
 8002f4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f50:	4770      	bx	lr
 8002f52:	bf00      	nop
 8002f54:	e000ed00 	.word	0xe000ed00

08002f58 <Reset_Handler>:
 8002f58:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002f90 <LoopFillZerobss+0x14>
 8002f5c:	2100      	movs	r1, #0
 8002f5e:	e003      	b.n	8002f68 <LoopCopyDataInit>

08002f60 <CopyDataInit>:
 8002f60:	4b0c      	ldr	r3, [pc, #48]	; (8002f94 <LoopFillZerobss+0x18>)
 8002f62:	585b      	ldr	r3, [r3, r1]
 8002f64:	5043      	str	r3, [r0, r1]
 8002f66:	3104      	adds	r1, #4

08002f68 <LoopCopyDataInit>:
 8002f68:	480b      	ldr	r0, [pc, #44]	; (8002f98 <LoopFillZerobss+0x1c>)
 8002f6a:	4b0c      	ldr	r3, [pc, #48]	; (8002f9c <LoopFillZerobss+0x20>)
 8002f6c:	1842      	adds	r2, r0, r1
 8002f6e:	429a      	cmp	r2, r3
 8002f70:	d3f6      	bcc.n	8002f60 <CopyDataInit>
 8002f72:	4a0b      	ldr	r2, [pc, #44]	; (8002fa0 <LoopFillZerobss+0x24>)
 8002f74:	e002      	b.n	8002f7c <LoopFillZerobss>

08002f76 <FillZerobss>:
 8002f76:	2300      	movs	r3, #0
 8002f78:	f842 3b04 	str.w	r3, [r2], #4

08002f7c <LoopFillZerobss>:
 8002f7c:	4b09      	ldr	r3, [pc, #36]	; (8002fa4 <LoopFillZerobss+0x28>)
 8002f7e:	429a      	cmp	r2, r3
 8002f80:	d3f9      	bcc.n	8002f76 <FillZerobss>
 8002f82:	f7ff ffd3 	bl	8002f2c <SystemInit>
 8002f86:	f003 fa53 	bl	8006430 <__libc_init_array>
 8002f8a:	f7ff fb6b 	bl	8002664 <main>
 8002f8e:	4770      	bx	lr
 8002f90:	20020000 	.word	0x20020000
 8002f94:	08008230 	.word	0x08008230
 8002f98:	20000000 	.word	0x20000000
 8002f9c:	20000078 	.word	0x20000078
 8002fa0:	20000078 	.word	0x20000078
 8002fa4:	20004da8 	.word	0x20004da8

08002fa8 <ADC_IRQHandler>:
 8002fa8:	e7fe      	b.n	8002fa8 <ADC_IRQHandler>
	...

08002fac <HAL_Init>:
 8002fac:	b580      	push	{r7, lr}
 8002fae:	af00      	add	r7, sp, #0
 8002fb0:	4b0e      	ldr	r3, [pc, #56]	; (8002fec <HAL_Init+0x40>)
 8002fb2:	681b      	ldr	r3, [r3, #0]
 8002fb4:	4a0d      	ldr	r2, [pc, #52]	; (8002fec <HAL_Init+0x40>)
 8002fb6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002fba:	6013      	str	r3, [r2, #0]
 8002fbc:	4b0b      	ldr	r3, [pc, #44]	; (8002fec <HAL_Init+0x40>)
 8002fbe:	681b      	ldr	r3, [r3, #0]
 8002fc0:	4a0a      	ldr	r2, [pc, #40]	; (8002fec <HAL_Init+0x40>)
 8002fc2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002fc6:	6013      	str	r3, [r2, #0]
 8002fc8:	4b08      	ldr	r3, [pc, #32]	; (8002fec <HAL_Init+0x40>)
 8002fca:	681b      	ldr	r3, [r3, #0]
 8002fcc:	4a07      	ldr	r2, [pc, #28]	; (8002fec <HAL_Init+0x40>)
 8002fce:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002fd2:	6013      	str	r3, [r2, #0]
 8002fd4:	2003      	movs	r0, #3
 8002fd6:	f000 f96f 	bl	80032b8 <HAL_NVIC_SetPriorityGrouping>
 8002fda:	2000      	movs	r0, #0
 8002fdc:	f000 f808 	bl	8002ff0 <HAL_InitTick>
 8002fe0:	f7ff fde6 	bl	8002bb0 <HAL_MspInit>
 8002fe4:	2300      	movs	r3, #0
 8002fe6:	4618      	mov	r0, r3
 8002fe8:	bd80      	pop	{r7, pc}
 8002fea:	bf00      	nop
 8002fec:	40023c00 	.word	0x40023c00

08002ff0 <HAL_InitTick>:
 8002ff0:	b580      	push	{r7, lr}
 8002ff2:	b082      	sub	sp, #8
 8002ff4:	af00      	add	r7, sp, #0
 8002ff6:	6078      	str	r0, [r7, #4]
 8002ff8:	4b12      	ldr	r3, [pc, #72]	; (8003044 <HAL_InitTick+0x54>)
 8002ffa:	681a      	ldr	r2, [r3, #0]
 8002ffc:	4b12      	ldr	r3, [pc, #72]	; (8003048 <HAL_InitTick+0x58>)
 8002ffe:	781b      	ldrb	r3, [r3, #0]
 8003000:	4619      	mov	r1, r3
 8003002:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003006:	fbb3 f3f1 	udiv	r3, r3, r1
 800300a:	fbb2 f3f3 	udiv	r3, r2, r3
 800300e:	4618      	mov	r0, r3
 8003010:	f000 f995 	bl	800333e <HAL_SYSTICK_Config>
 8003014:	4603      	mov	r3, r0
 8003016:	2b00      	cmp	r3, #0
 8003018:	d001      	beq.n	800301e <HAL_InitTick+0x2e>
 800301a:	2301      	movs	r3, #1
 800301c:	e00e      	b.n	800303c <HAL_InitTick+0x4c>
 800301e:	687b      	ldr	r3, [r7, #4]
 8003020:	2b0f      	cmp	r3, #15
 8003022:	d80a      	bhi.n	800303a <HAL_InitTick+0x4a>
 8003024:	2200      	movs	r2, #0
 8003026:	6879      	ldr	r1, [r7, #4]
 8003028:	f04f 30ff 	mov.w	r0, #4294967295
 800302c:	f000 f94f 	bl	80032ce <HAL_NVIC_SetPriority>
 8003030:	4a06      	ldr	r2, [pc, #24]	; (800304c <HAL_InitTick+0x5c>)
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	6013      	str	r3, [r2, #0]
 8003036:	2300      	movs	r3, #0
 8003038:	e000      	b.n	800303c <HAL_InitTick+0x4c>
 800303a:	2301      	movs	r3, #1
 800303c:	4618      	mov	r0, r3
 800303e:	3708      	adds	r7, #8
 8003040:	46bd      	mov	sp, r7
 8003042:	bd80      	pop	{r7, pc}
 8003044:	20000008 	.word	0x20000008
 8003048:	20000010 	.word	0x20000010
 800304c:	2000000c 	.word	0x2000000c

08003050 <HAL_IncTick>:
 8003050:	b480      	push	{r7}
 8003052:	af00      	add	r7, sp, #0
 8003054:	4b06      	ldr	r3, [pc, #24]	; (8003070 <HAL_IncTick+0x20>)
 8003056:	781b      	ldrb	r3, [r3, #0]
 8003058:	461a      	mov	r2, r3
 800305a:	4b06      	ldr	r3, [pc, #24]	; (8003074 <HAL_IncTick+0x24>)
 800305c:	681b      	ldr	r3, [r3, #0]
 800305e:	4413      	add	r3, r2
 8003060:	4a04      	ldr	r2, [pc, #16]	; (8003074 <HAL_IncTick+0x24>)
 8003062:	6013      	str	r3, [r2, #0]
 8003064:	bf00      	nop
 8003066:	46bd      	mov	sp, r7
 8003068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800306c:	4770      	bx	lr
 800306e:	bf00      	nop
 8003070:	20000010 	.word	0x20000010
 8003074:	20004da0 	.word	0x20004da0

08003078 <HAL_GetTick>:
 8003078:	b480      	push	{r7}
 800307a:	af00      	add	r7, sp, #0
 800307c:	4b03      	ldr	r3, [pc, #12]	; (800308c <HAL_GetTick+0x14>)
 800307e:	681b      	ldr	r3, [r3, #0]
 8003080:	4618      	mov	r0, r3
 8003082:	46bd      	mov	sp, r7
 8003084:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003088:	4770      	bx	lr
 800308a:	bf00      	nop
 800308c:	20004da0 	.word	0x20004da0

08003090 <HAL_Delay>:
 8003090:	b580      	push	{r7, lr}
 8003092:	b084      	sub	sp, #16
 8003094:	af00      	add	r7, sp, #0
 8003096:	6078      	str	r0, [r7, #4]
 8003098:	f7ff ffee 	bl	8003078 <HAL_GetTick>
 800309c:	60b8      	str	r0, [r7, #8]
 800309e:	687b      	ldr	r3, [r7, #4]
 80030a0:	60fb      	str	r3, [r7, #12]
 80030a2:	68fb      	ldr	r3, [r7, #12]
 80030a4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80030a8:	d005      	beq.n	80030b6 <HAL_Delay+0x26>
 80030aa:	4b09      	ldr	r3, [pc, #36]	; (80030d0 <HAL_Delay+0x40>)
 80030ac:	781b      	ldrb	r3, [r3, #0]
 80030ae:	461a      	mov	r2, r3
 80030b0:	68fb      	ldr	r3, [r7, #12]
 80030b2:	4413      	add	r3, r2
 80030b4:	60fb      	str	r3, [r7, #12]
 80030b6:	bf00      	nop
 80030b8:	f7ff ffde 	bl	8003078 <HAL_GetTick>
 80030bc:	4602      	mov	r2, r0
 80030be:	68bb      	ldr	r3, [r7, #8]
 80030c0:	1ad3      	subs	r3, r2, r3
 80030c2:	68fa      	ldr	r2, [r7, #12]
 80030c4:	429a      	cmp	r2, r3
 80030c6:	d8f7      	bhi.n	80030b8 <HAL_Delay+0x28>
 80030c8:	bf00      	nop
 80030ca:	3710      	adds	r7, #16
 80030cc:	46bd      	mov	sp, r7
 80030ce:	bd80      	pop	{r7, pc}
 80030d0:	20000010 	.word	0x20000010

080030d4 <__NVIC_SetPriorityGrouping>:
 80030d4:	b480      	push	{r7}
 80030d6:	b085      	sub	sp, #20
 80030d8:	af00      	add	r7, sp, #0
 80030da:	6078      	str	r0, [r7, #4]
 80030dc:	687b      	ldr	r3, [r7, #4]
 80030de:	f003 0307 	and.w	r3, r3, #7
 80030e2:	60fb      	str	r3, [r7, #12]
 80030e4:	4b0c      	ldr	r3, [pc, #48]	; (8003118 <__NVIC_SetPriorityGrouping+0x44>)
 80030e6:	68db      	ldr	r3, [r3, #12]
 80030e8:	60bb      	str	r3, [r7, #8]
 80030ea:	68ba      	ldr	r2, [r7, #8]
 80030ec:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80030f0:	4013      	ands	r3, r2
 80030f2:	60bb      	str	r3, [r7, #8]
 80030f4:	68fb      	ldr	r3, [r7, #12]
 80030f6:	021a      	lsls	r2, r3, #8
 80030f8:	68bb      	ldr	r3, [r7, #8]
 80030fa:	4313      	orrs	r3, r2
 80030fc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003100:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003104:	60bb      	str	r3, [r7, #8]
 8003106:	4a04      	ldr	r2, [pc, #16]	; (8003118 <__NVIC_SetPriorityGrouping+0x44>)
 8003108:	68bb      	ldr	r3, [r7, #8]
 800310a:	60d3      	str	r3, [r2, #12]
 800310c:	bf00      	nop
 800310e:	3714      	adds	r7, #20
 8003110:	46bd      	mov	sp, r7
 8003112:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003116:	4770      	bx	lr
 8003118:	e000ed00 	.word	0xe000ed00

0800311c <__NVIC_GetPriorityGrouping>:
 800311c:	b480      	push	{r7}
 800311e:	af00      	add	r7, sp, #0
 8003120:	4b04      	ldr	r3, [pc, #16]	; (8003134 <__NVIC_GetPriorityGrouping+0x18>)
 8003122:	68db      	ldr	r3, [r3, #12]
 8003124:	0a1b      	lsrs	r3, r3, #8
 8003126:	f003 0307 	and.w	r3, r3, #7
 800312a:	4618      	mov	r0, r3
 800312c:	46bd      	mov	sp, r7
 800312e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003132:	4770      	bx	lr
 8003134:	e000ed00 	.word	0xe000ed00

08003138 <__NVIC_EnableIRQ>:
 8003138:	b480      	push	{r7}
 800313a:	b083      	sub	sp, #12
 800313c:	af00      	add	r7, sp, #0
 800313e:	4603      	mov	r3, r0
 8003140:	71fb      	strb	r3, [r7, #7]
 8003142:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003146:	2b00      	cmp	r3, #0
 8003148:	db0b      	blt.n	8003162 <__NVIC_EnableIRQ+0x2a>
 800314a:	79fb      	ldrb	r3, [r7, #7]
 800314c:	f003 021f 	and.w	r2, r3, #31
 8003150:	4907      	ldr	r1, [pc, #28]	; (8003170 <__NVIC_EnableIRQ+0x38>)
 8003152:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003156:	095b      	lsrs	r3, r3, #5
 8003158:	2001      	movs	r0, #1
 800315a:	fa00 f202 	lsl.w	r2, r0, r2
 800315e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003162:	bf00      	nop
 8003164:	370c      	adds	r7, #12
 8003166:	46bd      	mov	sp, r7
 8003168:	f85d 7b04 	ldr.w	r7, [sp], #4
 800316c:	4770      	bx	lr
 800316e:	bf00      	nop
 8003170:	e000e100 	.word	0xe000e100

08003174 <__NVIC_DisableIRQ>:
 8003174:	b480      	push	{r7}
 8003176:	b083      	sub	sp, #12
 8003178:	af00      	add	r7, sp, #0
 800317a:	4603      	mov	r3, r0
 800317c:	71fb      	strb	r3, [r7, #7]
 800317e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003182:	2b00      	cmp	r3, #0
 8003184:	db10      	blt.n	80031a8 <__NVIC_DisableIRQ+0x34>
 8003186:	79fb      	ldrb	r3, [r7, #7]
 8003188:	f003 021f 	and.w	r2, r3, #31
 800318c:	4909      	ldr	r1, [pc, #36]	; (80031b4 <__NVIC_DisableIRQ+0x40>)
 800318e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003192:	095b      	lsrs	r3, r3, #5
 8003194:	2001      	movs	r0, #1
 8003196:	fa00 f202 	lsl.w	r2, r0, r2
 800319a:	3320      	adds	r3, #32
 800319c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80031a0:	f3bf 8f4f 	dsb	sy
 80031a4:	f3bf 8f6f 	isb	sy
 80031a8:	bf00      	nop
 80031aa:	370c      	adds	r7, #12
 80031ac:	46bd      	mov	sp, r7
 80031ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031b2:	4770      	bx	lr
 80031b4:	e000e100 	.word	0xe000e100

080031b8 <__NVIC_SetPriority>:
 80031b8:	b480      	push	{r7}
 80031ba:	b083      	sub	sp, #12
 80031bc:	af00      	add	r7, sp, #0
 80031be:	4603      	mov	r3, r0
 80031c0:	6039      	str	r1, [r7, #0]
 80031c2:	71fb      	strb	r3, [r7, #7]
 80031c4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80031c8:	2b00      	cmp	r3, #0
 80031ca:	db0a      	blt.n	80031e2 <__NVIC_SetPriority+0x2a>
 80031cc:	683b      	ldr	r3, [r7, #0]
 80031ce:	b2da      	uxtb	r2, r3
 80031d0:	490c      	ldr	r1, [pc, #48]	; (8003204 <__NVIC_SetPriority+0x4c>)
 80031d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80031d6:	0112      	lsls	r2, r2, #4
 80031d8:	b2d2      	uxtb	r2, r2
 80031da:	440b      	add	r3, r1
 80031dc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80031e0:	e00a      	b.n	80031f8 <__NVIC_SetPriority+0x40>
 80031e2:	683b      	ldr	r3, [r7, #0]
 80031e4:	b2da      	uxtb	r2, r3
 80031e6:	4908      	ldr	r1, [pc, #32]	; (8003208 <__NVIC_SetPriority+0x50>)
 80031e8:	79fb      	ldrb	r3, [r7, #7]
 80031ea:	f003 030f 	and.w	r3, r3, #15
 80031ee:	3b04      	subs	r3, #4
 80031f0:	0112      	lsls	r2, r2, #4
 80031f2:	b2d2      	uxtb	r2, r2
 80031f4:	440b      	add	r3, r1
 80031f6:	761a      	strb	r2, [r3, #24]
 80031f8:	bf00      	nop
 80031fa:	370c      	adds	r7, #12
 80031fc:	46bd      	mov	sp, r7
 80031fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003202:	4770      	bx	lr
 8003204:	e000e100 	.word	0xe000e100
 8003208:	e000ed00 	.word	0xe000ed00

0800320c <NVIC_EncodePriority>:
 800320c:	b480      	push	{r7}
 800320e:	b089      	sub	sp, #36	; 0x24
 8003210:	af00      	add	r7, sp, #0
 8003212:	60f8      	str	r0, [r7, #12]
 8003214:	60b9      	str	r1, [r7, #8]
 8003216:	607a      	str	r2, [r7, #4]
 8003218:	68fb      	ldr	r3, [r7, #12]
 800321a:	f003 0307 	and.w	r3, r3, #7
 800321e:	61fb      	str	r3, [r7, #28]
 8003220:	69fb      	ldr	r3, [r7, #28]
 8003222:	f1c3 0307 	rsb	r3, r3, #7
 8003226:	2b04      	cmp	r3, #4
 8003228:	bf28      	it	cs
 800322a:	2304      	movcs	r3, #4
 800322c:	61bb      	str	r3, [r7, #24]
 800322e:	69fb      	ldr	r3, [r7, #28]
 8003230:	3304      	adds	r3, #4
 8003232:	2b06      	cmp	r3, #6
 8003234:	d902      	bls.n	800323c <NVIC_EncodePriority+0x30>
 8003236:	69fb      	ldr	r3, [r7, #28]
 8003238:	3b03      	subs	r3, #3
 800323a:	e000      	b.n	800323e <NVIC_EncodePriority+0x32>
 800323c:	2300      	movs	r3, #0
 800323e:	617b      	str	r3, [r7, #20]
 8003240:	f04f 32ff 	mov.w	r2, #4294967295
 8003244:	69bb      	ldr	r3, [r7, #24]
 8003246:	fa02 f303 	lsl.w	r3, r2, r3
 800324a:	43da      	mvns	r2, r3
 800324c:	68bb      	ldr	r3, [r7, #8]
 800324e:	401a      	ands	r2, r3
 8003250:	697b      	ldr	r3, [r7, #20]
 8003252:	409a      	lsls	r2, r3
 8003254:	f04f 31ff 	mov.w	r1, #4294967295
 8003258:	697b      	ldr	r3, [r7, #20]
 800325a:	fa01 f303 	lsl.w	r3, r1, r3
 800325e:	43d9      	mvns	r1, r3
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	400b      	ands	r3, r1
 8003264:	4313      	orrs	r3, r2
 8003266:	4618      	mov	r0, r3
 8003268:	3724      	adds	r7, #36	; 0x24
 800326a:	46bd      	mov	sp, r7
 800326c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003270:	4770      	bx	lr
	...

08003274 <SysTick_Config>:
 8003274:	b580      	push	{r7, lr}
 8003276:	b082      	sub	sp, #8
 8003278:	af00      	add	r7, sp, #0
 800327a:	6078      	str	r0, [r7, #4]
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	3b01      	subs	r3, #1
 8003280:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003284:	d301      	bcc.n	800328a <SysTick_Config+0x16>
 8003286:	2301      	movs	r3, #1
 8003288:	e00f      	b.n	80032aa <SysTick_Config+0x36>
 800328a:	4a0a      	ldr	r2, [pc, #40]	; (80032b4 <SysTick_Config+0x40>)
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	3b01      	subs	r3, #1
 8003290:	6053      	str	r3, [r2, #4]
 8003292:	210f      	movs	r1, #15
 8003294:	f04f 30ff 	mov.w	r0, #4294967295
 8003298:	f7ff ff8e 	bl	80031b8 <__NVIC_SetPriority>
 800329c:	4b05      	ldr	r3, [pc, #20]	; (80032b4 <SysTick_Config+0x40>)
 800329e:	2200      	movs	r2, #0
 80032a0:	609a      	str	r2, [r3, #8]
 80032a2:	4b04      	ldr	r3, [pc, #16]	; (80032b4 <SysTick_Config+0x40>)
 80032a4:	2207      	movs	r2, #7
 80032a6:	601a      	str	r2, [r3, #0]
 80032a8:	2300      	movs	r3, #0
 80032aa:	4618      	mov	r0, r3
 80032ac:	3708      	adds	r7, #8
 80032ae:	46bd      	mov	sp, r7
 80032b0:	bd80      	pop	{r7, pc}
 80032b2:	bf00      	nop
 80032b4:	e000e010 	.word	0xe000e010

080032b8 <HAL_NVIC_SetPriorityGrouping>:
 80032b8:	b580      	push	{r7, lr}
 80032ba:	b082      	sub	sp, #8
 80032bc:	af00      	add	r7, sp, #0
 80032be:	6078      	str	r0, [r7, #4]
 80032c0:	6878      	ldr	r0, [r7, #4]
 80032c2:	f7ff ff07 	bl	80030d4 <__NVIC_SetPriorityGrouping>
 80032c6:	bf00      	nop
 80032c8:	3708      	adds	r7, #8
 80032ca:	46bd      	mov	sp, r7
 80032cc:	bd80      	pop	{r7, pc}

080032ce <HAL_NVIC_SetPriority>:
 80032ce:	b580      	push	{r7, lr}
 80032d0:	b086      	sub	sp, #24
 80032d2:	af00      	add	r7, sp, #0
 80032d4:	4603      	mov	r3, r0
 80032d6:	60b9      	str	r1, [r7, #8]
 80032d8:	607a      	str	r2, [r7, #4]
 80032da:	73fb      	strb	r3, [r7, #15]
 80032dc:	2300      	movs	r3, #0
 80032de:	617b      	str	r3, [r7, #20]
 80032e0:	f7ff ff1c 	bl	800311c <__NVIC_GetPriorityGrouping>
 80032e4:	6178      	str	r0, [r7, #20]
 80032e6:	687a      	ldr	r2, [r7, #4]
 80032e8:	68b9      	ldr	r1, [r7, #8]
 80032ea:	6978      	ldr	r0, [r7, #20]
 80032ec:	f7ff ff8e 	bl	800320c <NVIC_EncodePriority>
 80032f0:	4602      	mov	r2, r0
 80032f2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80032f6:	4611      	mov	r1, r2
 80032f8:	4618      	mov	r0, r3
 80032fa:	f7ff ff5d 	bl	80031b8 <__NVIC_SetPriority>
 80032fe:	bf00      	nop
 8003300:	3718      	adds	r7, #24
 8003302:	46bd      	mov	sp, r7
 8003304:	bd80      	pop	{r7, pc}

08003306 <HAL_NVIC_EnableIRQ>:
 8003306:	b580      	push	{r7, lr}
 8003308:	b082      	sub	sp, #8
 800330a:	af00      	add	r7, sp, #0
 800330c:	4603      	mov	r3, r0
 800330e:	71fb      	strb	r3, [r7, #7]
 8003310:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003314:	4618      	mov	r0, r3
 8003316:	f7ff ff0f 	bl	8003138 <__NVIC_EnableIRQ>
 800331a:	bf00      	nop
 800331c:	3708      	adds	r7, #8
 800331e:	46bd      	mov	sp, r7
 8003320:	bd80      	pop	{r7, pc}

08003322 <HAL_NVIC_DisableIRQ>:
 8003322:	b580      	push	{r7, lr}
 8003324:	b082      	sub	sp, #8
 8003326:	af00      	add	r7, sp, #0
 8003328:	4603      	mov	r3, r0
 800332a:	71fb      	strb	r3, [r7, #7]
 800332c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003330:	4618      	mov	r0, r3
 8003332:	f7ff ff1f 	bl	8003174 <__NVIC_DisableIRQ>
 8003336:	bf00      	nop
 8003338:	3708      	adds	r7, #8
 800333a:	46bd      	mov	sp, r7
 800333c:	bd80      	pop	{r7, pc}

0800333e <HAL_SYSTICK_Config>:
 800333e:	b580      	push	{r7, lr}
 8003340:	b082      	sub	sp, #8
 8003342:	af00      	add	r7, sp, #0
 8003344:	6078      	str	r0, [r7, #4]
 8003346:	6878      	ldr	r0, [r7, #4]
 8003348:	f7ff ff94 	bl	8003274 <SysTick_Config>
 800334c:	4603      	mov	r3, r0
 800334e:	4618      	mov	r0, r3
 8003350:	3708      	adds	r7, #8
 8003352:	46bd      	mov	sp, r7
 8003354:	bd80      	pop	{r7, pc}

08003356 <HAL_DAC_Init>:
 8003356:	b580      	push	{r7, lr}
 8003358:	b082      	sub	sp, #8
 800335a:	af00      	add	r7, sp, #0
 800335c:	6078      	str	r0, [r7, #4]
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	2b00      	cmp	r3, #0
 8003362:	d101      	bne.n	8003368 <HAL_DAC_Init+0x12>
 8003364:	2301      	movs	r3, #1
 8003366:	e014      	b.n	8003392 <HAL_DAC_Init+0x3c>
 8003368:	687b      	ldr	r3, [r7, #4]
 800336a:	791b      	ldrb	r3, [r3, #4]
 800336c:	b2db      	uxtb	r3, r3
 800336e:	2b00      	cmp	r3, #0
 8003370:	d105      	bne.n	800337e <HAL_DAC_Init+0x28>
 8003372:	687b      	ldr	r3, [r7, #4]
 8003374:	2200      	movs	r2, #0
 8003376:	715a      	strb	r2, [r3, #5]
 8003378:	6878      	ldr	r0, [r7, #4]
 800337a:	f7ff fc41 	bl	8002c00 <HAL_DAC_MspInit>
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	2202      	movs	r2, #2
 8003382:	711a      	strb	r2, [r3, #4]
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	2200      	movs	r2, #0
 8003388:	611a      	str	r2, [r3, #16]
 800338a:	687b      	ldr	r3, [r7, #4]
 800338c:	2201      	movs	r2, #1
 800338e:	711a      	strb	r2, [r3, #4]
 8003390:	2300      	movs	r3, #0
 8003392:	4618      	mov	r0, r3
 8003394:	3708      	adds	r7, #8
 8003396:	46bd      	mov	sp, r7
 8003398:	bd80      	pop	{r7, pc}
	...

0800339c <HAL_DAC_Start_DMA>:
 800339c:	b580      	push	{r7, lr}
 800339e:	b086      	sub	sp, #24
 80033a0:	af00      	add	r7, sp, #0
 80033a2:	60f8      	str	r0, [r7, #12]
 80033a4:	60b9      	str	r1, [r7, #8]
 80033a6:	607a      	str	r2, [r7, #4]
 80033a8:	603b      	str	r3, [r7, #0]
 80033aa:	2300      	movs	r3, #0
 80033ac:	617b      	str	r3, [r7, #20]
 80033ae:	68fb      	ldr	r3, [r7, #12]
 80033b0:	795b      	ldrb	r3, [r3, #5]
 80033b2:	2b01      	cmp	r3, #1
 80033b4:	d101      	bne.n	80033ba <HAL_DAC_Start_DMA+0x1e>
 80033b6:	2302      	movs	r3, #2
 80033b8:	e08e      	b.n	80034d8 <HAL_DAC_Start_DMA+0x13c>
 80033ba:	68fb      	ldr	r3, [r7, #12]
 80033bc:	2201      	movs	r2, #1
 80033be:	715a      	strb	r2, [r3, #5]
 80033c0:	68fb      	ldr	r3, [r7, #12]
 80033c2:	2202      	movs	r2, #2
 80033c4:	711a      	strb	r2, [r3, #4]
 80033c6:	68bb      	ldr	r3, [r7, #8]
 80033c8:	2b00      	cmp	r3, #0
 80033ca:	d12a      	bne.n	8003422 <HAL_DAC_Start_DMA+0x86>
 80033cc:	68fb      	ldr	r3, [r7, #12]
 80033ce:	689b      	ldr	r3, [r3, #8]
 80033d0:	4a43      	ldr	r2, [pc, #268]	; (80034e0 <HAL_DAC_Start_DMA+0x144>)
 80033d2:	63da      	str	r2, [r3, #60]	; 0x3c
 80033d4:	68fb      	ldr	r3, [r7, #12]
 80033d6:	689b      	ldr	r3, [r3, #8]
 80033d8:	4a42      	ldr	r2, [pc, #264]	; (80034e4 <HAL_DAC_Start_DMA+0x148>)
 80033da:	641a      	str	r2, [r3, #64]	; 0x40
 80033dc:	68fb      	ldr	r3, [r7, #12]
 80033de:	689b      	ldr	r3, [r3, #8]
 80033e0:	4a41      	ldr	r2, [pc, #260]	; (80034e8 <HAL_DAC_Start_DMA+0x14c>)
 80033e2:	64da      	str	r2, [r3, #76]	; 0x4c
 80033e4:	68fb      	ldr	r3, [r7, #12]
 80033e6:	681b      	ldr	r3, [r3, #0]
 80033e8:	681a      	ldr	r2, [r3, #0]
 80033ea:	68fb      	ldr	r3, [r7, #12]
 80033ec:	681b      	ldr	r3, [r3, #0]
 80033ee:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80033f2:	601a      	str	r2, [r3, #0]
 80033f4:	6a3b      	ldr	r3, [r7, #32]
 80033f6:	2b04      	cmp	r3, #4
 80033f8:	d009      	beq.n	800340e <HAL_DAC_Start_DMA+0x72>
 80033fa:	2b08      	cmp	r3, #8
 80033fc:	d00c      	beq.n	8003418 <HAL_DAC_Start_DMA+0x7c>
 80033fe:	2b00      	cmp	r3, #0
 8003400:	d000      	beq.n	8003404 <HAL_DAC_Start_DMA+0x68>
 8003402:	e039      	b.n	8003478 <HAL_DAC_Start_DMA+0xdc>
 8003404:	68fb      	ldr	r3, [r7, #12]
 8003406:	681b      	ldr	r3, [r3, #0]
 8003408:	3308      	adds	r3, #8
 800340a:	617b      	str	r3, [r7, #20]
 800340c:	e034      	b.n	8003478 <HAL_DAC_Start_DMA+0xdc>
 800340e:	68fb      	ldr	r3, [r7, #12]
 8003410:	681b      	ldr	r3, [r3, #0]
 8003412:	330c      	adds	r3, #12
 8003414:	617b      	str	r3, [r7, #20]
 8003416:	e02f      	b.n	8003478 <HAL_DAC_Start_DMA+0xdc>
 8003418:	68fb      	ldr	r3, [r7, #12]
 800341a:	681b      	ldr	r3, [r3, #0]
 800341c:	3310      	adds	r3, #16
 800341e:	617b      	str	r3, [r7, #20]
 8003420:	e02a      	b.n	8003478 <HAL_DAC_Start_DMA+0xdc>
 8003422:	68fb      	ldr	r3, [r7, #12]
 8003424:	68db      	ldr	r3, [r3, #12]
 8003426:	4a31      	ldr	r2, [pc, #196]	; (80034ec <HAL_DAC_Start_DMA+0x150>)
 8003428:	63da      	str	r2, [r3, #60]	; 0x3c
 800342a:	68fb      	ldr	r3, [r7, #12]
 800342c:	68db      	ldr	r3, [r3, #12]
 800342e:	4a30      	ldr	r2, [pc, #192]	; (80034f0 <HAL_DAC_Start_DMA+0x154>)
 8003430:	641a      	str	r2, [r3, #64]	; 0x40
 8003432:	68fb      	ldr	r3, [r7, #12]
 8003434:	68db      	ldr	r3, [r3, #12]
 8003436:	4a2f      	ldr	r2, [pc, #188]	; (80034f4 <HAL_DAC_Start_DMA+0x158>)
 8003438:	64da      	str	r2, [r3, #76]	; 0x4c
 800343a:	68fb      	ldr	r3, [r7, #12]
 800343c:	681b      	ldr	r3, [r3, #0]
 800343e:	681a      	ldr	r2, [r3, #0]
 8003440:	68fb      	ldr	r3, [r7, #12]
 8003442:	681b      	ldr	r3, [r3, #0]
 8003444:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003448:	601a      	str	r2, [r3, #0]
 800344a:	6a3b      	ldr	r3, [r7, #32]
 800344c:	2b04      	cmp	r3, #4
 800344e:	d009      	beq.n	8003464 <HAL_DAC_Start_DMA+0xc8>
 8003450:	2b08      	cmp	r3, #8
 8003452:	d00c      	beq.n	800346e <HAL_DAC_Start_DMA+0xd2>
 8003454:	2b00      	cmp	r3, #0
 8003456:	d000      	beq.n	800345a <HAL_DAC_Start_DMA+0xbe>
 8003458:	e00e      	b.n	8003478 <HAL_DAC_Start_DMA+0xdc>
 800345a:	68fb      	ldr	r3, [r7, #12]
 800345c:	681b      	ldr	r3, [r3, #0]
 800345e:	3314      	adds	r3, #20
 8003460:	617b      	str	r3, [r7, #20]
 8003462:	e009      	b.n	8003478 <HAL_DAC_Start_DMA+0xdc>
 8003464:	68fb      	ldr	r3, [r7, #12]
 8003466:	681b      	ldr	r3, [r3, #0]
 8003468:	3318      	adds	r3, #24
 800346a:	617b      	str	r3, [r7, #20]
 800346c:	e004      	b.n	8003478 <HAL_DAC_Start_DMA+0xdc>
 800346e:	68fb      	ldr	r3, [r7, #12]
 8003470:	681b      	ldr	r3, [r3, #0]
 8003472:	331c      	adds	r3, #28
 8003474:	617b      	str	r3, [r7, #20]
 8003476:	bf00      	nop
 8003478:	68bb      	ldr	r3, [r7, #8]
 800347a:	2b00      	cmp	r3, #0
 800347c:	d10f      	bne.n	800349e <HAL_DAC_Start_DMA+0x102>
 800347e:	68fb      	ldr	r3, [r7, #12]
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	681a      	ldr	r2, [r3, #0]
 8003484:	68fb      	ldr	r3, [r7, #12]
 8003486:	681b      	ldr	r3, [r3, #0]
 8003488:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800348c:	601a      	str	r2, [r3, #0]
 800348e:	68fb      	ldr	r3, [r7, #12]
 8003490:	6898      	ldr	r0, [r3, #8]
 8003492:	6879      	ldr	r1, [r7, #4]
 8003494:	683b      	ldr	r3, [r7, #0]
 8003496:	697a      	ldr	r2, [r7, #20]
 8003498:	f000 fa12 	bl	80038c0 <HAL_DMA_Start_IT>
 800349c:	e00e      	b.n	80034bc <HAL_DAC_Start_DMA+0x120>
 800349e:	68fb      	ldr	r3, [r7, #12]
 80034a0:	681b      	ldr	r3, [r3, #0]
 80034a2:	681a      	ldr	r2, [r3, #0]
 80034a4:	68fb      	ldr	r3, [r7, #12]
 80034a6:	681b      	ldr	r3, [r3, #0]
 80034a8:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 80034ac:	601a      	str	r2, [r3, #0]
 80034ae:	68fb      	ldr	r3, [r7, #12]
 80034b0:	68d8      	ldr	r0, [r3, #12]
 80034b2:	6879      	ldr	r1, [r7, #4]
 80034b4:	683b      	ldr	r3, [r7, #0]
 80034b6:	697a      	ldr	r2, [r7, #20]
 80034b8:	f000 fa02 	bl	80038c0 <HAL_DMA_Start_IT>
 80034bc:	68fb      	ldr	r3, [r7, #12]
 80034be:	681b      	ldr	r3, [r3, #0]
 80034c0:	6819      	ldr	r1, [r3, #0]
 80034c2:	2201      	movs	r2, #1
 80034c4:	68bb      	ldr	r3, [r7, #8]
 80034c6:	409a      	lsls	r2, r3
 80034c8:	68fb      	ldr	r3, [r7, #12]
 80034ca:	681b      	ldr	r3, [r3, #0]
 80034cc:	430a      	orrs	r2, r1
 80034ce:	601a      	str	r2, [r3, #0]
 80034d0:	68fb      	ldr	r3, [r7, #12]
 80034d2:	2200      	movs	r2, #0
 80034d4:	715a      	strb	r2, [r3, #5]
 80034d6:	2300      	movs	r3, #0
 80034d8:	4618      	mov	r0, r3
 80034da:	3718      	adds	r7, #24
 80034dc:	46bd      	mov	sp, r7
 80034de:	bd80      	pop	{r7, pc}
 80034e0:	08003651 	.word	0x08003651
 80034e4:	08003673 	.word	0x08003673
 80034e8:	0800368f 	.word	0x0800368f
 80034ec:	080036f9 	.word	0x080036f9
 80034f0:	0800371b 	.word	0x0800371b
 80034f4:	08003737 	.word	0x08003737

080034f8 <HAL_DAC_Stop_DMA>:
 80034f8:	b580      	push	{r7, lr}
 80034fa:	b084      	sub	sp, #16
 80034fc:	af00      	add	r7, sp, #0
 80034fe:	6078      	str	r0, [r7, #4]
 8003500:	6039      	str	r1, [r7, #0]
 8003502:	2300      	movs	r3, #0
 8003504:	73fb      	strb	r3, [r7, #15]
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	681b      	ldr	r3, [r3, #0]
 800350a:	6819      	ldr	r1, [r3, #0]
 800350c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8003510:	683b      	ldr	r3, [r7, #0]
 8003512:	fa02 f303 	lsl.w	r3, r2, r3
 8003516:	43da      	mvns	r2, r3
 8003518:	687b      	ldr	r3, [r7, #4]
 800351a:	681b      	ldr	r3, [r3, #0]
 800351c:	400a      	ands	r2, r1
 800351e:	601a      	str	r2, [r3, #0]
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	681b      	ldr	r3, [r3, #0]
 8003524:	6819      	ldr	r1, [r3, #0]
 8003526:	2201      	movs	r2, #1
 8003528:	683b      	ldr	r3, [r7, #0]
 800352a:	fa02 f303 	lsl.w	r3, r2, r3
 800352e:	43da      	mvns	r2, r3
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	681b      	ldr	r3, [r3, #0]
 8003534:	400a      	ands	r2, r1
 8003536:	601a      	str	r2, [r3, #0]
 8003538:	683b      	ldr	r3, [r7, #0]
 800353a:	2b00      	cmp	r3, #0
 800353c:	d107      	bne.n	800354e <HAL_DAC_Stop_DMA+0x56>
 800353e:	687b      	ldr	r3, [r7, #4]
 8003540:	689b      	ldr	r3, [r3, #8]
 8003542:	4618      	mov	r0, r3
 8003544:	f000 fa14 	bl	8003970 <HAL_DMA_Abort>
 8003548:	4603      	mov	r3, r0
 800354a:	73fb      	strb	r3, [r7, #15]
 800354c:	e006      	b.n	800355c <HAL_DAC_Stop_DMA+0x64>
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	68db      	ldr	r3, [r3, #12]
 8003552:	4618      	mov	r0, r3
 8003554:	f000 fa0c 	bl	8003970 <HAL_DMA_Abort>
 8003558:	4603      	mov	r3, r0
 800355a:	73fb      	strb	r3, [r7, #15]
 800355c:	7bfb      	ldrb	r3, [r7, #15]
 800355e:	2b00      	cmp	r3, #0
 8003560:	d003      	beq.n	800356a <HAL_DAC_Stop_DMA+0x72>
 8003562:	687b      	ldr	r3, [r7, #4]
 8003564:	2204      	movs	r2, #4
 8003566:	711a      	strb	r2, [r3, #4]
 8003568:	e002      	b.n	8003570 <HAL_DAC_Stop_DMA+0x78>
 800356a:	687b      	ldr	r3, [r7, #4]
 800356c:	2201      	movs	r2, #1
 800356e:	711a      	strb	r2, [r3, #4]
 8003570:	7bfb      	ldrb	r3, [r7, #15]
 8003572:	4618      	mov	r0, r3
 8003574:	3710      	adds	r7, #16
 8003576:	46bd      	mov	sp, r7
 8003578:	bd80      	pop	{r7, pc}

0800357a <HAL_DAC_ConvCpltCallbackCh1>:
 800357a:	b480      	push	{r7}
 800357c:	b083      	sub	sp, #12
 800357e:	af00      	add	r7, sp, #0
 8003580:	6078      	str	r0, [r7, #4]
 8003582:	bf00      	nop
 8003584:	370c      	adds	r7, #12
 8003586:	46bd      	mov	sp, r7
 8003588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800358c:	4770      	bx	lr

0800358e <HAL_DAC_ConvHalfCpltCallbackCh1>:
 800358e:	b480      	push	{r7}
 8003590:	b083      	sub	sp, #12
 8003592:	af00      	add	r7, sp, #0
 8003594:	6078      	str	r0, [r7, #4]
 8003596:	bf00      	nop
 8003598:	370c      	adds	r7, #12
 800359a:	46bd      	mov	sp, r7
 800359c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035a0:	4770      	bx	lr

080035a2 <HAL_DAC_ErrorCallbackCh1>:
 80035a2:	b480      	push	{r7}
 80035a4:	b083      	sub	sp, #12
 80035a6:	af00      	add	r7, sp, #0
 80035a8:	6078      	str	r0, [r7, #4]
 80035aa:	bf00      	nop
 80035ac:	370c      	adds	r7, #12
 80035ae:	46bd      	mov	sp, r7
 80035b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035b4:	4770      	bx	lr

080035b6 <HAL_DAC_ConfigChannel>:
 80035b6:	b480      	push	{r7}
 80035b8:	b087      	sub	sp, #28
 80035ba:	af00      	add	r7, sp, #0
 80035bc:	60f8      	str	r0, [r7, #12]
 80035be:	60b9      	str	r1, [r7, #8]
 80035c0:	607a      	str	r2, [r7, #4]
 80035c2:	2300      	movs	r3, #0
 80035c4:	617b      	str	r3, [r7, #20]
 80035c6:	2300      	movs	r3, #0
 80035c8:	613b      	str	r3, [r7, #16]
 80035ca:	68fb      	ldr	r3, [r7, #12]
 80035cc:	795b      	ldrb	r3, [r3, #5]
 80035ce:	2b01      	cmp	r3, #1
 80035d0:	d101      	bne.n	80035d6 <HAL_DAC_ConfigChannel+0x20>
 80035d2:	2302      	movs	r3, #2
 80035d4:	e036      	b.n	8003644 <HAL_DAC_ConfigChannel+0x8e>
 80035d6:	68fb      	ldr	r3, [r7, #12]
 80035d8:	2201      	movs	r2, #1
 80035da:	715a      	strb	r2, [r3, #5]
 80035dc:	68fb      	ldr	r3, [r7, #12]
 80035de:	2202      	movs	r2, #2
 80035e0:	711a      	strb	r2, [r3, #4]
 80035e2:	68fb      	ldr	r3, [r7, #12]
 80035e4:	681b      	ldr	r3, [r3, #0]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	617b      	str	r3, [r7, #20]
 80035ea:	f640 72fe 	movw	r2, #4094	; 0xffe
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	fa02 f303 	lsl.w	r3, r2, r3
 80035f4:	43db      	mvns	r3, r3
 80035f6:	697a      	ldr	r2, [r7, #20]
 80035f8:	4013      	ands	r3, r2
 80035fa:	617b      	str	r3, [r7, #20]
 80035fc:	68bb      	ldr	r3, [r7, #8]
 80035fe:	681a      	ldr	r2, [r3, #0]
 8003600:	68bb      	ldr	r3, [r7, #8]
 8003602:	685b      	ldr	r3, [r3, #4]
 8003604:	4313      	orrs	r3, r2
 8003606:	613b      	str	r3, [r7, #16]
 8003608:	693a      	ldr	r2, [r7, #16]
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	fa02 f303 	lsl.w	r3, r2, r3
 8003610:	697a      	ldr	r2, [r7, #20]
 8003612:	4313      	orrs	r3, r2
 8003614:	617b      	str	r3, [r7, #20]
 8003616:	68fb      	ldr	r3, [r7, #12]
 8003618:	681b      	ldr	r3, [r3, #0]
 800361a:	697a      	ldr	r2, [r7, #20]
 800361c:	601a      	str	r2, [r3, #0]
 800361e:	68fb      	ldr	r3, [r7, #12]
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	6819      	ldr	r1, [r3, #0]
 8003624:	22c0      	movs	r2, #192	; 0xc0
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	fa02 f303 	lsl.w	r3, r2, r3
 800362c:	43da      	mvns	r2, r3
 800362e:	68fb      	ldr	r3, [r7, #12]
 8003630:	681b      	ldr	r3, [r3, #0]
 8003632:	400a      	ands	r2, r1
 8003634:	601a      	str	r2, [r3, #0]
 8003636:	68fb      	ldr	r3, [r7, #12]
 8003638:	2201      	movs	r2, #1
 800363a:	711a      	strb	r2, [r3, #4]
 800363c:	68fb      	ldr	r3, [r7, #12]
 800363e:	2200      	movs	r2, #0
 8003640:	715a      	strb	r2, [r3, #5]
 8003642:	2300      	movs	r3, #0
 8003644:	4618      	mov	r0, r3
 8003646:	371c      	adds	r7, #28
 8003648:	46bd      	mov	sp, r7
 800364a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800364e:	4770      	bx	lr

08003650 <DAC_DMAConvCpltCh1>:
 8003650:	b580      	push	{r7, lr}
 8003652:	b084      	sub	sp, #16
 8003654:	af00      	add	r7, sp, #0
 8003656:	6078      	str	r0, [r7, #4]
 8003658:	687b      	ldr	r3, [r7, #4]
 800365a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800365c:	60fb      	str	r3, [r7, #12]
 800365e:	68f8      	ldr	r0, [r7, #12]
 8003660:	f7ff ff8b 	bl	800357a <HAL_DAC_ConvCpltCallbackCh1>
 8003664:	68fb      	ldr	r3, [r7, #12]
 8003666:	2201      	movs	r2, #1
 8003668:	711a      	strb	r2, [r3, #4]
 800366a:	bf00      	nop
 800366c:	3710      	adds	r7, #16
 800366e:	46bd      	mov	sp, r7
 8003670:	bd80      	pop	{r7, pc}

08003672 <DAC_DMAHalfConvCpltCh1>:
 8003672:	b580      	push	{r7, lr}
 8003674:	b084      	sub	sp, #16
 8003676:	af00      	add	r7, sp, #0
 8003678:	6078      	str	r0, [r7, #4]
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800367e:	60fb      	str	r3, [r7, #12]
 8003680:	68f8      	ldr	r0, [r7, #12]
 8003682:	f7ff ff84 	bl	800358e <HAL_DAC_ConvHalfCpltCallbackCh1>
 8003686:	bf00      	nop
 8003688:	3710      	adds	r7, #16
 800368a:	46bd      	mov	sp, r7
 800368c:	bd80      	pop	{r7, pc}

0800368e <DAC_DMAErrorCh1>:
 800368e:	b580      	push	{r7, lr}
 8003690:	b084      	sub	sp, #16
 8003692:	af00      	add	r7, sp, #0
 8003694:	6078      	str	r0, [r7, #4]
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800369a:	60fb      	str	r3, [r7, #12]
 800369c:	68fb      	ldr	r3, [r7, #12]
 800369e:	691b      	ldr	r3, [r3, #16]
 80036a0:	f043 0204 	orr.w	r2, r3, #4
 80036a4:	68fb      	ldr	r3, [r7, #12]
 80036a6:	611a      	str	r2, [r3, #16]
 80036a8:	68f8      	ldr	r0, [r7, #12]
 80036aa:	f7ff ff7a 	bl	80035a2 <HAL_DAC_ErrorCallbackCh1>
 80036ae:	68fb      	ldr	r3, [r7, #12]
 80036b0:	2201      	movs	r2, #1
 80036b2:	711a      	strb	r2, [r3, #4]
 80036b4:	bf00      	nop
 80036b6:	3710      	adds	r7, #16
 80036b8:	46bd      	mov	sp, r7
 80036ba:	bd80      	pop	{r7, pc}

080036bc <HAL_DACEx_ConvCpltCallbackCh2>:
 80036bc:	b480      	push	{r7}
 80036be:	b083      	sub	sp, #12
 80036c0:	af00      	add	r7, sp, #0
 80036c2:	6078      	str	r0, [r7, #4]
 80036c4:	bf00      	nop
 80036c6:	370c      	adds	r7, #12
 80036c8:	46bd      	mov	sp, r7
 80036ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036ce:	4770      	bx	lr

080036d0 <HAL_DACEx_ConvHalfCpltCallbackCh2>:
 80036d0:	b480      	push	{r7}
 80036d2:	b083      	sub	sp, #12
 80036d4:	af00      	add	r7, sp, #0
 80036d6:	6078      	str	r0, [r7, #4]
 80036d8:	bf00      	nop
 80036da:	370c      	adds	r7, #12
 80036dc:	46bd      	mov	sp, r7
 80036de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036e2:	4770      	bx	lr

080036e4 <HAL_DACEx_ErrorCallbackCh2>:
 80036e4:	b480      	push	{r7}
 80036e6:	b083      	sub	sp, #12
 80036e8:	af00      	add	r7, sp, #0
 80036ea:	6078      	str	r0, [r7, #4]
 80036ec:	bf00      	nop
 80036ee:	370c      	adds	r7, #12
 80036f0:	46bd      	mov	sp, r7
 80036f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036f6:	4770      	bx	lr

080036f8 <DAC_DMAConvCpltCh2>:
 80036f8:	b580      	push	{r7, lr}
 80036fa:	b084      	sub	sp, #16
 80036fc:	af00      	add	r7, sp, #0
 80036fe:	6078      	str	r0, [r7, #4]
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003704:	60fb      	str	r3, [r7, #12]
 8003706:	68f8      	ldr	r0, [r7, #12]
 8003708:	f7ff ffd8 	bl	80036bc <HAL_DACEx_ConvCpltCallbackCh2>
 800370c:	68fb      	ldr	r3, [r7, #12]
 800370e:	2201      	movs	r2, #1
 8003710:	711a      	strb	r2, [r3, #4]
 8003712:	bf00      	nop
 8003714:	3710      	adds	r7, #16
 8003716:	46bd      	mov	sp, r7
 8003718:	bd80      	pop	{r7, pc}

0800371a <DAC_DMAHalfConvCpltCh2>:
 800371a:	b580      	push	{r7, lr}
 800371c:	b084      	sub	sp, #16
 800371e:	af00      	add	r7, sp, #0
 8003720:	6078      	str	r0, [r7, #4]
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003726:	60fb      	str	r3, [r7, #12]
 8003728:	68f8      	ldr	r0, [r7, #12]
 800372a:	f7ff ffd1 	bl	80036d0 <HAL_DACEx_ConvHalfCpltCallbackCh2>
 800372e:	bf00      	nop
 8003730:	3710      	adds	r7, #16
 8003732:	46bd      	mov	sp, r7
 8003734:	bd80      	pop	{r7, pc}

08003736 <DAC_DMAErrorCh2>:
 8003736:	b580      	push	{r7, lr}
 8003738:	b084      	sub	sp, #16
 800373a:	af00      	add	r7, sp, #0
 800373c:	6078      	str	r0, [r7, #4]
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003742:	60fb      	str	r3, [r7, #12]
 8003744:	68fb      	ldr	r3, [r7, #12]
 8003746:	691b      	ldr	r3, [r3, #16]
 8003748:	f043 0204 	orr.w	r2, r3, #4
 800374c:	68fb      	ldr	r3, [r7, #12]
 800374e:	611a      	str	r2, [r3, #16]
 8003750:	68f8      	ldr	r0, [r7, #12]
 8003752:	f7ff ffc7 	bl	80036e4 <HAL_DACEx_ErrorCallbackCh2>
 8003756:	68fb      	ldr	r3, [r7, #12]
 8003758:	2201      	movs	r2, #1
 800375a:	711a      	strb	r2, [r3, #4]
 800375c:	bf00      	nop
 800375e:	3710      	adds	r7, #16
 8003760:	46bd      	mov	sp, r7
 8003762:	bd80      	pop	{r7, pc}

08003764 <HAL_DMA_Init>:
 8003764:	b580      	push	{r7, lr}
 8003766:	b086      	sub	sp, #24
 8003768:	af00      	add	r7, sp, #0
 800376a:	6078      	str	r0, [r7, #4]
 800376c:	2300      	movs	r3, #0
 800376e:	617b      	str	r3, [r7, #20]
 8003770:	f7ff fc82 	bl	8003078 <HAL_GetTick>
 8003774:	6138      	str	r0, [r7, #16]
 8003776:	687b      	ldr	r3, [r7, #4]
 8003778:	2b00      	cmp	r3, #0
 800377a:	d101      	bne.n	8003780 <HAL_DMA_Init+0x1c>
 800377c:	2301      	movs	r3, #1
 800377e:	e099      	b.n	80038b4 <HAL_DMA_Init+0x150>
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	2200      	movs	r2, #0
 8003784:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	2202      	movs	r2, #2
 800378c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	681b      	ldr	r3, [r3, #0]
 8003794:	681a      	ldr	r2, [r3, #0]
 8003796:	687b      	ldr	r3, [r7, #4]
 8003798:	681b      	ldr	r3, [r3, #0]
 800379a:	f022 0201 	bic.w	r2, r2, #1
 800379e:	601a      	str	r2, [r3, #0]
 80037a0:	e00f      	b.n	80037c2 <HAL_DMA_Init+0x5e>
 80037a2:	f7ff fc69 	bl	8003078 <HAL_GetTick>
 80037a6:	4602      	mov	r2, r0
 80037a8:	693b      	ldr	r3, [r7, #16]
 80037aa:	1ad3      	subs	r3, r2, r3
 80037ac:	2b05      	cmp	r3, #5
 80037ae:	d908      	bls.n	80037c2 <HAL_DMA_Init+0x5e>
 80037b0:	687b      	ldr	r3, [r7, #4]
 80037b2:	2220      	movs	r2, #32
 80037b4:	655a      	str	r2, [r3, #84]	; 0x54
 80037b6:	687b      	ldr	r3, [r7, #4]
 80037b8:	2203      	movs	r2, #3
 80037ba:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80037be:	2303      	movs	r3, #3
 80037c0:	e078      	b.n	80038b4 <HAL_DMA_Init+0x150>
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	681b      	ldr	r3, [r3, #0]
 80037c6:	681b      	ldr	r3, [r3, #0]
 80037c8:	f003 0301 	and.w	r3, r3, #1
 80037cc:	2b00      	cmp	r3, #0
 80037ce:	d1e8      	bne.n	80037a2 <HAL_DMA_Init+0x3e>
 80037d0:	687b      	ldr	r3, [r7, #4]
 80037d2:	681b      	ldr	r3, [r3, #0]
 80037d4:	681b      	ldr	r3, [r3, #0]
 80037d6:	617b      	str	r3, [r7, #20]
 80037d8:	697a      	ldr	r2, [r7, #20]
 80037da:	4b38      	ldr	r3, [pc, #224]	; (80038bc <HAL_DMA_Init+0x158>)
 80037dc:	4013      	ands	r3, r2
 80037de:	617b      	str	r3, [r7, #20]
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	685a      	ldr	r2, [r3, #4]
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	689b      	ldr	r3, [r3, #8]
 80037e8:	431a      	orrs	r2, r3
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	68db      	ldr	r3, [r3, #12]
 80037ee:	431a      	orrs	r2, r3
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	691b      	ldr	r3, [r3, #16]
 80037f4:	431a      	orrs	r2, r3
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	695b      	ldr	r3, [r3, #20]
 80037fa:	431a      	orrs	r2, r3
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	699b      	ldr	r3, [r3, #24]
 8003800:	431a      	orrs	r2, r3
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	69db      	ldr	r3, [r3, #28]
 8003806:	431a      	orrs	r2, r3
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	6a1b      	ldr	r3, [r3, #32]
 800380c:	4313      	orrs	r3, r2
 800380e:	697a      	ldr	r2, [r7, #20]
 8003810:	4313      	orrs	r3, r2
 8003812:	617b      	str	r3, [r7, #20]
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003818:	2b04      	cmp	r3, #4
 800381a:	d107      	bne.n	800382c <HAL_DMA_Init+0xc8>
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003824:	4313      	orrs	r3, r2
 8003826:	697a      	ldr	r2, [r7, #20]
 8003828:	4313      	orrs	r3, r2
 800382a:	617b      	str	r3, [r7, #20]
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	681b      	ldr	r3, [r3, #0]
 8003830:	697a      	ldr	r2, [r7, #20]
 8003832:	601a      	str	r2, [r3, #0]
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	681b      	ldr	r3, [r3, #0]
 8003838:	695b      	ldr	r3, [r3, #20]
 800383a:	617b      	str	r3, [r7, #20]
 800383c:	697b      	ldr	r3, [r7, #20]
 800383e:	f023 0307 	bic.w	r3, r3, #7
 8003842:	617b      	str	r3, [r7, #20]
 8003844:	687b      	ldr	r3, [r7, #4]
 8003846:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003848:	697a      	ldr	r2, [r7, #20]
 800384a:	4313      	orrs	r3, r2
 800384c:	617b      	str	r3, [r7, #20]
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003852:	2b04      	cmp	r3, #4
 8003854:	d117      	bne.n	8003886 <HAL_DMA_Init+0x122>
 8003856:	687b      	ldr	r3, [r7, #4]
 8003858:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800385a:	697a      	ldr	r2, [r7, #20]
 800385c:	4313      	orrs	r3, r2
 800385e:	617b      	str	r3, [r7, #20]
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003864:	2b00      	cmp	r3, #0
 8003866:	d00e      	beq.n	8003886 <HAL_DMA_Init+0x122>
 8003868:	6878      	ldr	r0, [r7, #4]
 800386a:	f000 fb01 	bl	8003e70 <DMA_CheckFifoParam>
 800386e:	4603      	mov	r3, r0
 8003870:	2b00      	cmp	r3, #0
 8003872:	d008      	beq.n	8003886 <HAL_DMA_Init+0x122>
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	2240      	movs	r2, #64	; 0x40
 8003878:	655a      	str	r2, [r3, #84]	; 0x54
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	2201      	movs	r2, #1
 800387e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003882:	2301      	movs	r3, #1
 8003884:	e016      	b.n	80038b4 <HAL_DMA_Init+0x150>
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	681b      	ldr	r3, [r3, #0]
 800388a:	697a      	ldr	r2, [r7, #20]
 800388c:	615a      	str	r2, [r3, #20]
 800388e:	6878      	ldr	r0, [r7, #4]
 8003890:	f000 fab8 	bl	8003e04 <DMA_CalcBaseAndBitshift>
 8003894:	4603      	mov	r3, r0
 8003896:	60fb      	str	r3, [r7, #12]
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800389c:	223f      	movs	r2, #63	; 0x3f
 800389e:	409a      	lsls	r2, r3
 80038a0:	68fb      	ldr	r3, [r7, #12]
 80038a2:	609a      	str	r2, [r3, #8]
 80038a4:	687b      	ldr	r3, [r7, #4]
 80038a6:	2200      	movs	r2, #0
 80038a8:	655a      	str	r2, [r3, #84]	; 0x54
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	2201      	movs	r2, #1
 80038ae:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80038b2:	2300      	movs	r3, #0
 80038b4:	4618      	mov	r0, r3
 80038b6:	3718      	adds	r7, #24
 80038b8:	46bd      	mov	sp, r7
 80038ba:	bd80      	pop	{r7, pc}
 80038bc:	f010803f 	.word	0xf010803f

080038c0 <HAL_DMA_Start_IT>:
 80038c0:	b580      	push	{r7, lr}
 80038c2:	b086      	sub	sp, #24
 80038c4:	af00      	add	r7, sp, #0
 80038c6:	60f8      	str	r0, [r7, #12]
 80038c8:	60b9      	str	r1, [r7, #8]
 80038ca:	607a      	str	r2, [r7, #4]
 80038cc:	603b      	str	r3, [r7, #0]
 80038ce:	2300      	movs	r3, #0
 80038d0:	75fb      	strb	r3, [r7, #23]
 80038d2:	68fb      	ldr	r3, [r7, #12]
 80038d4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80038d6:	613b      	str	r3, [r7, #16]
 80038d8:	68fb      	ldr	r3, [r7, #12]
 80038da:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80038de:	2b01      	cmp	r3, #1
 80038e0:	d101      	bne.n	80038e6 <HAL_DMA_Start_IT+0x26>
 80038e2:	2302      	movs	r3, #2
 80038e4:	e040      	b.n	8003968 <HAL_DMA_Start_IT+0xa8>
 80038e6:	68fb      	ldr	r3, [r7, #12]
 80038e8:	2201      	movs	r2, #1
 80038ea:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80038ee:	68fb      	ldr	r3, [r7, #12]
 80038f0:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80038f4:	b2db      	uxtb	r3, r3
 80038f6:	2b01      	cmp	r3, #1
 80038f8:	d12f      	bne.n	800395a <HAL_DMA_Start_IT+0x9a>
 80038fa:	68fb      	ldr	r3, [r7, #12]
 80038fc:	2202      	movs	r2, #2
 80038fe:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003902:	68fb      	ldr	r3, [r7, #12]
 8003904:	2200      	movs	r2, #0
 8003906:	655a      	str	r2, [r3, #84]	; 0x54
 8003908:	683b      	ldr	r3, [r7, #0]
 800390a:	687a      	ldr	r2, [r7, #4]
 800390c:	68b9      	ldr	r1, [r7, #8]
 800390e:	68f8      	ldr	r0, [r7, #12]
 8003910:	f000 fa4a 	bl	8003da8 <DMA_SetConfig>
 8003914:	68fb      	ldr	r3, [r7, #12]
 8003916:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003918:	223f      	movs	r2, #63	; 0x3f
 800391a:	409a      	lsls	r2, r3
 800391c:	693b      	ldr	r3, [r7, #16]
 800391e:	609a      	str	r2, [r3, #8]
 8003920:	68fb      	ldr	r3, [r7, #12]
 8003922:	681b      	ldr	r3, [r3, #0]
 8003924:	681a      	ldr	r2, [r3, #0]
 8003926:	68fb      	ldr	r3, [r7, #12]
 8003928:	681b      	ldr	r3, [r3, #0]
 800392a:	f042 0216 	orr.w	r2, r2, #22
 800392e:	601a      	str	r2, [r3, #0]
 8003930:	68fb      	ldr	r3, [r7, #12]
 8003932:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003934:	2b00      	cmp	r3, #0
 8003936:	d007      	beq.n	8003948 <HAL_DMA_Start_IT+0x88>
 8003938:	68fb      	ldr	r3, [r7, #12]
 800393a:	681b      	ldr	r3, [r3, #0]
 800393c:	681a      	ldr	r2, [r3, #0]
 800393e:	68fb      	ldr	r3, [r7, #12]
 8003940:	681b      	ldr	r3, [r3, #0]
 8003942:	f042 0208 	orr.w	r2, r2, #8
 8003946:	601a      	str	r2, [r3, #0]
 8003948:	68fb      	ldr	r3, [r7, #12]
 800394a:	681b      	ldr	r3, [r3, #0]
 800394c:	681a      	ldr	r2, [r3, #0]
 800394e:	68fb      	ldr	r3, [r7, #12]
 8003950:	681b      	ldr	r3, [r3, #0]
 8003952:	f042 0201 	orr.w	r2, r2, #1
 8003956:	601a      	str	r2, [r3, #0]
 8003958:	e005      	b.n	8003966 <HAL_DMA_Start_IT+0xa6>
 800395a:	68fb      	ldr	r3, [r7, #12]
 800395c:	2200      	movs	r2, #0
 800395e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003962:	2302      	movs	r3, #2
 8003964:	75fb      	strb	r3, [r7, #23]
 8003966:	7dfb      	ldrb	r3, [r7, #23]
 8003968:	4618      	mov	r0, r3
 800396a:	3718      	adds	r7, #24
 800396c:	46bd      	mov	sp, r7
 800396e:	bd80      	pop	{r7, pc}

08003970 <HAL_DMA_Abort>:
 8003970:	b580      	push	{r7, lr}
 8003972:	b084      	sub	sp, #16
 8003974:	af00      	add	r7, sp, #0
 8003976:	6078      	str	r0, [r7, #4]
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800397c:	60fb      	str	r3, [r7, #12]
 800397e:	f7ff fb7b 	bl	8003078 <HAL_GetTick>
 8003982:	60b8      	str	r0, [r7, #8]
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800398a:	b2db      	uxtb	r3, r3
 800398c:	2b02      	cmp	r3, #2
 800398e:	d008      	beq.n	80039a2 <HAL_DMA_Abort+0x32>
 8003990:	687b      	ldr	r3, [r7, #4]
 8003992:	2280      	movs	r2, #128	; 0x80
 8003994:	655a      	str	r2, [r3, #84]	; 0x54
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	2200      	movs	r2, #0
 800399a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800399e:	2301      	movs	r3, #1
 80039a0:	e052      	b.n	8003a48 <HAL_DMA_Abort+0xd8>
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	681a      	ldr	r2, [r3, #0]
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	681b      	ldr	r3, [r3, #0]
 80039ac:	f022 0216 	bic.w	r2, r2, #22
 80039b0:	601a      	str	r2, [r3, #0]
 80039b2:	687b      	ldr	r3, [r7, #4]
 80039b4:	681b      	ldr	r3, [r3, #0]
 80039b6:	695a      	ldr	r2, [r3, #20]
 80039b8:	687b      	ldr	r3, [r7, #4]
 80039ba:	681b      	ldr	r3, [r3, #0]
 80039bc:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80039c0:	615a      	str	r2, [r3, #20]
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80039c6:	2b00      	cmp	r3, #0
 80039c8:	d103      	bne.n	80039d2 <HAL_DMA_Abort+0x62>
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80039ce:	2b00      	cmp	r3, #0
 80039d0:	d007      	beq.n	80039e2 <HAL_DMA_Abort+0x72>
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	681a      	ldr	r2, [r3, #0]
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	681b      	ldr	r3, [r3, #0]
 80039dc:	f022 0208 	bic.w	r2, r2, #8
 80039e0:	601a      	str	r2, [r3, #0]
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	681b      	ldr	r3, [r3, #0]
 80039e6:	681a      	ldr	r2, [r3, #0]
 80039e8:	687b      	ldr	r3, [r7, #4]
 80039ea:	681b      	ldr	r3, [r3, #0]
 80039ec:	f022 0201 	bic.w	r2, r2, #1
 80039f0:	601a      	str	r2, [r3, #0]
 80039f2:	e013      	b.n	8003a1c <HAL_DMA_Abort+0xac>
 80039f4:	f7ff fb40 	bl	8003078 <HAL_GetTick>
 80039f8:	4602      	mov	r2, r0
 80039fa:	68bb      	ldr	r3, [r7, #8]
 80039fc:	1ad3      	subs	r3, r2, r3
 80039fe:	2b05      	cmp	r3, #5
 8003a00:	d90c      	bls.n	8003a1c <HAL_DMA_Abort+0xac>
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	2220      	movs	r2, #32
 8003a06:	655a      	str	r2, [r3, #84]	; 0x54
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	2200      	movs	r2, #0
 8003a0c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	2203      	movs	r2, #3
 8003a14:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003a18:	2303      	movs	r3, #3
 8003a1a:	e015      	b.n	8003a48 <HAL_DMA_Abort+0xd8>
 8003a1c:	687b      	ldr	r3, [r7, #4]
 8003a1e:	681b      	ldr	r3, [r3, #0]
 8003a20:	681b      	ldr	r3, [r3, #0]
 8003a22:	f003 0301 	and.w	r3, r3, #1
 8003a26:	2b00      	cmp	r3, #0
 8003a28:	d1e4      	bne.n	80039f4 <HAL_DMA_Abort+0x84>
 8003a2a:	687b      	ldr	r3, [r7, #4]
 8003a2c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003a2e:	223f      	movs	r2, #63	; 0x3f
 8003a30:	409a      	lsls	r2, r3
 8003a32:	68fb      	ldr	r3, [r7, #12]
 8003a34:	609a      	str	r2, [r3, #8]
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	2200      	movs	r2, #0
 8003a3a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	2201      	movs	r2, #1
 8003a42:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003a46:	2300      	movs	r3, #0
 8003a48:	4618      	mov	r0, r3
 8003a4a:	3710      	adds	r7, #16
 8003a4c:	46bd      	mov	sp, r7
 8003a4e:	bd80      	pop	{r7, pc}

08003a50 <HAL_DMA_Abort_IT>:
 8003a50:	b480      	push	{r7}
 8003a52:	b083      	sub	sp, #12
 8003a54:	af00      	add	r7, sp, #0
 8003a56:	6078      	str	r0, [r7, #4]
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003a5e:	b2db      	uxtb	r3, r3
 8003a60:	2b02      	cmp	r3, #2
 8003a62:	d004      	beq.n	8003a6e <HAL_DMA_Abort_IT+0x1e>
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	2280      	movs	r2, #128	; 0x80
 8003a68:	655a      	str	r2, [r3, #84]	; 0x54
 8003a6a:	2301      	movs	r3, #1
 8003a6c:	e00c      	b.n	8003a88 <HAL_DMA_Abort_IT+0x38>
 8003a6e:	687b      	ldr	r3, [r7, #4]
 8003a70:	2205      	movs	r2, #5
 8003a72:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003a76:	687b      	ldr	r3, [r7, #4]
 8003a78:	681b      	ldr	r3, [r3, #0]
 8003a7a:	681a      	ldr	r2, [r3, #0]
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	681b      	ldr	r3, [r3, #0]
 8003a80:	f022 0201 	bic.w	r2, r2, #1
 8003a84:	601a      	str	r2, [r3, #0]
 8003a86:	2300      	movs	r3, #0
 8003a88:	4618      	mov	r0, r3
 8003a8a:	370c      	adds	r7, #12
 8003a8c:	46bd      	mov	sp, r7
 8003a8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a92:	4770      	bx	lr

08003a94 <HAL_DMA_IRQHandler>:
 8003a94:	b580      	push	{r7, lr}
 8003a96:	b086      	sub	sp, #24
 8003a98:	af00      	add	r7, sp, #0
 8003a9a:	6078      	str	r0, [r7, #4]
 8003a9c:	2300      	movs	r3, #0
 8003a9e:	60bb      	str	r3, [r7, #8]
 8003aa0:	4b92      	ldr	r3, [pc, #584]	; (8003cec <HAL_DMA_IRQHandler+0x258>)
 8003aa2:	681b      	ldr	r3, [r3, #0]
 8003aa4:	4a92      	ldr	r2, [pc, #584]	; (8003cf0 <HAL_DMA_IRQHandler+0x25c>)
 8003aa6:	fba2 2303 	umull	r2, r3, r2, r3
 8003aaa:	0a9b      	lsrs	r3, r3, #10
 8003aac:	617b      	str	r3, [r7, #20]
 8003aae:	687b      	ldr	r3, [r7, #4]
 8003ab0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003ab2:	613b      	str	r3, [r7, #16]
 8003ab4:	693b      	ldr	r3, [r7, #16]
 8003ab6:	681b      	ldr	r3, [r3, #0]
 8003ab8:	60fb      	str	r3, [r7, #12]
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003abe:	2208      	movs	r2, #8
 8003ac0:	409a      	lsls	r2, r3
 8003ac2:	68fb      	ldr	r3, [r7, #12]
 8003ac4:	4013      	ands	r3, r2
 8003ac6:	2b00      	cmp	r3, #0
 8003ac8:	d01a      	beq.n	8003b00 <HAL_DMA_IRQHandler+0x6c>
 8003aca:	687b      	ldr	r3, [r7, #4]
 8003acc:	681b      	ldr	r3, [r3, #0]
 8003ace:	681b      	ldr	r3, [r3, #0]
 8003ad0:	f003 0304 	and.w	r3, r3, #4
 8003ad4:	2b00      	cmp	r3, #0
 8003ad6:	d013      	beq.n	8003b00 <HAL_DMA_IRQHandler+0x6c>
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	681b      	ldr	r3, [r3, #0]
 8003adc:	681a      	ldr	r2, [r3, #0]
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	681b      	ldr	r3, [r3, #0]
 8003ae2:	f022 0204 	bic.w	r2, r2, #4
 8003ae6:	601a      	str	r2, [r3, #0]
 8003ae8:	687b      	ldr	r3, [r7, #4]
 8003aea:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003aec:	2208      	movs	r2, #8
 8003aee:	409a      	lsls	r2, r3
 8003af0:	693b      	ldr	r3, [r7, #16]
 8003af2:	609a      	str	r2, [r3, #8]
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003af8:	f043 0201 	orr.w	r2, r3, #1
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	655a      	str	r2, [r3, #84]	; 0x54
 8003b00:	687b      	ldr	r3, [r7, #4]
 8003b02:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003b04:	2201      	movs	r2, #1
 8003b06:	409a      	lsls	r2, r3
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	4013      	ands	r3, r2
 8003b0c:	2b00      	cmp	r3, #0
 8003b0e:	d012      	beq.n	8003b36 <HAL_DMA_IRQHandler+0xa2>
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	681b      	ldr	r3, [r3, #0]
 8003b14:	695b      	ldr	r3, [r3, #20]
 8003b16:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003b1a:	2b00      	cmp	r3, #0
 8003b1c:	d00b      	beq.n	8003b36 <HAL_DMA_IRQHandler+0xa2>
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003b22:	2201      	movs	r2, #1
 8003b24:	409a      	lsls	r2, r3
 8003b26:	693b      	ldr	r3, [r7, #16]
 8003b28:	609a      	str	r2, [r3, #8]
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003b2e:	f043 0202 	orr.w	r2, r3, #2
 8003b32:	687b      	ldr	r3, [r7, #4]
 8003b34:	655a      	str	r2, [r3, #84]	; 0x54
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003b3a:	2204      	movs	r2, #4
 8003b3c:	409a      	lsls	r2, r3
 8003b3e:	68fb      	ldr	r3, [r7, #12]
 8003b40:	4013      	ands	r3, r2
 8003b42:	2b00      	cmp	r3, #0
 8003b44:	d012      	beq.n	8003b6c <HAL_DMA_IRQHandler+0xd8>
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	681b      	ldr	r3, [r3, #0]
 8003b4a:	681b      	ldr	r3, [r3, #0]
 8003b4c:	f003 0302 	and.w	r3, r3, #2
 8003b50:	2b00      	cmp	r3, #0
 8003b52:	d00b      	beq.n	8003b6c <HAL_DMA_IRQHandler+0xd8>
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003b58:	2204      	movs	r2, #4
 8003b5a:	409a      	lsls	r2, r3
 8003b5c:	693b      	ldr	r3, [r7, #16]
 8003b5e:	609a      	str	r2, [r3, #8]
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003b64:	f043 0204 	orr.w	r2, r3, #4
 8003b68:	687b      	ldr	r3, [r7, #4]
 8003b6a:	655a      	str	r2, [r3, #84]	; 0x54
 8003b6c:	687b      	ldr	r3, [r7, #4]
 8003b6e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003b70:	2210      	movs	r2, #16
 8003b72:	409a      	lsls	r2, r3
 8003b74:	68fb      	ldr	r3, [r7, #12]
 8003b76:	4013      	ands	r3, r2
 8003b78:	2b00      	cmp	r3, #0
 8003b7a:	d043      	beq.n	8003c04 <HAL_DMA_IRQHandler+0x170>
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	681b      	ldr	r3, [r3, #0]
 8003b80:	681b      	ldr	r3, [r3, #0]
 8003b82:	f003 0308 	and.w	r3, r3, #8
 8003b86:	2b00      	cmp	r3, #0
 8003b88:	d03c      	beq.n	8003c04 <HAL_DMA_IRQHandler+0x170>
 8003b8a:	687b      	ldr	r3, [r7, #4]
 8003b8c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003b8e:	2210      	movs	r2, #16
 8003b90:	409a      	lsls	r2, r3
 8003b92:	693b      	ldr	r3, [r7, #16]
 8003b94:	609a      	str	r2, [r3, #8]
 8003b96:	687b      	ldr	r3, [r7, #4]
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003ba0:	2b00      	cmp	r3, #0
 8003ba2:	d018      	beq.n	8003bd6 <HAL_DMA_IRQHandler+0x142>
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	681b      	ldr	r3, [r3, #0]
 8003ba8:	681b      	ldr	r3, [r3, #0]
 8003baa:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003bae:	2b00      	cmp	r3, #0
 8003bb0:	d108      	bne.n	8003bc4 <HAL_DMA_IRQHandler+0x130>
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003bb6:	2b00      	cmp	r3, #0
 8003bb8:	d024      	beq.n	8003c04 <HAL_DMA_IRQHandler+0x170>
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003bbe:	6878      	ldr	r0, [r7, #4]
 8003bc0:	4798      	blx	r3
 8003bc2:	e01f      	b.n	8003c04 <HAL_DMA_IRQHandler+0x170>
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003bc8:	2b00      	cmp	r3, #0
 8003bca:	d01b      	beq.n	8003c04 <HAL_DMA_IRQHandler+0x170>
 8003bcc:	687b      	ldr	r3, [r7, #4]
 8003bce:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003bd0:	6878      	ldr	r0, [r7, #4]
 8003bd2:	4798      	blx	r3
 8003bd4:	e016      	b.n	8003c04 <HAL_DMA_IRQHandler+0x170>
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	681b      	ldr	r3, [r3, #0]
 8003bda:	681b      	ldr	r3, [r3, #0]
 8003bdc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003be0:	2b00      	cmp	r3, #0
 8003be2:	d107      	bne.n	8003bf4 <HAL_DMA_IRQHandler+0x160>
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	681b      	ldr	r3, [r3, #0]
 8003be8:	681a      	ldr	r2, [r3, #0]
 8003bea:	687b      	ldr	r3, [r7, #4]
 8003bec:	681b      	ldr	r3, [r3, #0]
 8003bee:	f022 0208 	bic.w	r2, r2, #8
 8003bf2:	601a      	str	r2, [r3, #0]
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003bf8:	2b00      	cmp	r3, #0
 8003bfa:	d003      	beq.n	8003c04 <HAL_DMA_IRQHandler+0x170>
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c00:	6878      	ldr	r0, [r7, #4]
 8003c02:	4798      	blx	r3
 8003c04:	687b      	ldr	r3, [r7, #4]
 8003c06:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003c08:	2220      	movs	r2, #32
 8003c0a:	409a      	lsls	r2, r3
 8003c0c:	68fb      	ldr	r3, [r7, #12]
 8003c0e:	4013      	ands	r3, r2
 8003c10:	2b00      	cmp	r3, #0
 8003c12:	f000 808e 	beq.w	8003d32 <HAL_DMA_IRQHandler+0x29e>
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	681b      	ldr	r3, [r3, #0]
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	f003 0310 	and.w	r3, r3, #16
 8003c20:	2b00      	cmp	r3, #0
 8003c22:	f000 8086 	beq.w	8003d32 <HAL_DMA_IRQHandler+0x29e>
 8003c26:	687b      	ldr	r3, [r7, #4]
 8003c28:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003c2a:	2220      	movs	r2, #32
 8003c2c:	409a      	lsls	r2, r3
 8003c2e:	693b      	ldr	r3, [r7, #16]
 8003c30:	609a      	str	r2, [r3, #8]
 8003c32:	687b      	ldr	r3, [r7, #4]
 8003c34:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003c38:	b2db      	uxtb	r3, r3
 8003c3a:	2b05      	cmp	r3, #5
 8003c3c:	d136      	bne.n	8003cac <HAL_DMA_IRQHandler+0x218>
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	681b      	ldr	r3, [r3, #0]
 8003c42:	681a      	ldr	r2, [r3, #0]
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	f022 0216 	bic.w	r2, r2, #22
 8003c4c:	601a      	str	r2, [r3, #0]
 8003c4e:	687b      	ldr	r3, [r7, #4]
 8003c50:	681b      	ldr	r3, [r3, #0]
 8003c52:	695a      	ldr	r2, [r3, #20]
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	681b      	ldr	r3, [r3, #0]
 8003c58:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003c5c:	615a      	str	r2, [r3, #20]
 8003c5e:	687b      	ldr	r3, [r7, #4]
 8003c60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c62:	2b00      	cmp	r3, #0
 8003c64:	d103      	bne.n	8003c6e <HAL_DMA_IRQHandler+0x1da>
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003c6a:	2b00      	cmp	r3, #0
 8003c6c:	d007      	beq.n	8003c7e <HAL_DMA_IRQHandler+0x1ea>
 8003c6e:	687b      	ldr	r3, [r7, #4]
 8003c70:	681b      	ldr	r3, [r3, #0]
 8003c72:	681a      	ldr	r2, [r3, #0]
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	f022 0208 	bic.w	r2, r2, #8
 8003c7c:	601a      	str	r2, [r3, #0]
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003c82:	223f      	movs	r2, #63	; 0x3f
 8003c84:	409a      	lsls	r2, r3
 8003c86:	693b      	ldr	r3, [r7, #16]
 8003c88:	609a      	str	r2, [r3, #8]
 8003c8a:	687b      	ldr	r3, [r7, #4]
 8003c8c:	2200      	movs	r2, #0
 8003c8e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003c92:	687b      	ldr	r3, [r7, #4]
 8003c94:	2201      	movs	r2, #1
 8003c96:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003c9e:	2b00      	cmp	r3, #0
 8003ca0:	d07d      	beq.n	8003d9e <HAL_DMA_IRQHandler+0x30a>
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003ca6:	6878      	ldr	r0, [r7, #4]
 8003ca8:	4798      	blx	r3
 8003caa:	e078      	b.n	8003d9e <HAL_DMA_IRQHandler+0x30a>
 8003cac:	687b      	ldr	r3, [r7, #4]
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003cb6:	2b00      	cmp	r3, #0
 8003cb8:	d01c      	beq.n	8003cf4 <HAL_DMA_IRQHandler+0x260>
 8003cba:	687b      	ldr	r3, [r7, #4]
 8003cbc:	681b      	ldr	r3, [r3, #0]
 8003cbe:	681b      	ldr	r3, [r3, #0]
 8003cc0:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003cc4:	2b00      	cmp	r3, #0
 8003cc6:	d108      	bne.n	8003cda <HAL_DMA_IRQHandler+0x246>
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003ccc:	2b00      	cmp	r3, #0
 8003cce:	d030      	beq.n	8003d32 <HAL_DMA_IRQHandler+0x29e>
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003cd4:	6878      	ldr	r0, [r7, #4]
 8003cd6:	4798      	blx	r3
 8003cd8:	e02b      	b.n	8003d32 <HAL_DMA_IRQHandler+0x29e>
 8003cda:	687b      	ldr	r3, [r7, #4]
 8003cdc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003cde:	2b00      	cmp	r3, #0
 8003ce0:	d027      	beq.n	8003d32 <HAL_DMA_IRQHandler+0x29e>
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003ce6:	6878      	ldr	r0, [r7, #4]
 8003ce8:	4798      	blx	r3
 8003cea:	e022      	b.n	8003d32 <HAL_DMA_IRQHandler+0x29e>
 8003cec:	20000008 	.word	0x20000008
 8003cf0:	1b4e81b5 	.word	0x1b4e81b5
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	681b      	ldr	r3, [r3, #0]
 8003cf8:	681b      	ldr	r3, [r3, #0]
 8003cfa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003cfe:	2b00      	cmp	r3, #0
 8003d00:	d10f      	bne.n	8003d22 <HAL_DMA_IRQHandler+0x28e>
 8003d02:	687b      	ldr	r3, [r7, #4]
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	681a      	ldr	r2, [r3, #0]
 8003d08:	687b      	ldr	r3, [r7, #4]
 8003d0a:	681b      	ldr	r3, [r3, #0]
 8003d0c:	f022 0210 	bic.w	r2, r2, #16
 8003d10:	601a      	str	r2, [r3, #0]
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	2200      	movs	r2, #0
 8003d16:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003d1a:	687b      	ldr	r3, [r7, #4]
 8003d1c:	2201      	movs	r2, #1
 8003d1e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003d22:	687b      	ldr	r3, [r7, #4]
 8003d24:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	d003      	beq.n	8003d32 <HAL_DMA_IRQHandler+0x29e>
 8003d2a:	687b      	ldr	r3, [r7, #4]
 8003d2c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003d2e:	6878      	ldr	r0, [r7, #4]
 8003d30:	4798      	blx	r3
 8003d32:	687b      	ldr	r3, [r7, #4]
 8003d34:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003d36:	2b00      	cmp	r3, #0
 8003d38:	d032      	beq.n	8003da0 <HAL_DMA_IRQHandler+0x30c>
 8003d3a:	687b      	ldr	r3, [r7, #4]
 8003d3c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003d3e:	f003 0301 	and.w	r3, r3, #1
 8003d42:	2b00      	cmp	r3, #0
 8003d44:	d022      	beq.n	8003d8c <HAL_DMA_IRQHandler+0x2f8>
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	2205      	movs	r2, #5
 8003d4a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	681a      	ldr	r2, [r3, #0]
 8003d54:	687b      	ldr	r3, [r7, #4]
 8003d56:	681b      	ldr	r3, [r3, #0]
 8003d58:	f022 0201 	bic.w	r2, r2, #1
 8003d5c:	601a      	str	r2, [r3, #0]
 8003d5e:	68bb      	ldr	r3, [r7, #8]
 8003d60:	3301      	adds	r3, #1
 8003d62:	60bb      	str	r3, [r7, #8]
 8003d64:	697a      	ldr	r2, [r7, #20]
 8003d66:	429a      	cmp	r2, r3
 8003d68:	d307      	bcc.n	8003d7a <HAL_DMA_IRQHandler+0x2e6>
 8003d6a:	687b      	ldr	r3, [r7, #4]
 8003d6c:	681b      	ldr	r3, [r3, #0]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	f003 0301 	and.w	r3, r3, #1
 8003d74:	2b00      	cmp	r3, #0
 8003d76:	d1f2      	bne.n	8003d5e <HAL_DMA_IRQHandler+0x2ca>
 8003d78:	e000      	b.n	8003d7c <HAL_DMA_IRQHandler+0x2e8>
 8003d7a:	bf00      	nop
 8003d7c:	687b      	ldr	r3, [r7, #4]
 8003d7e:	2200      	movs	r2, #0
 8003d80:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003d84:	687b      	ldr	r3, [r7, #4]
 8003d86:	2201      	movs	r2, #1
 8003d88:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003d90:	2b00      	cmp	r3, #0
 8003d92:	d005      	beq.n	8003da0 <HAL_DMA_IRQHandler+0x30c>
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003d98:	6878      	ldr	r0, [r7, #4]
 8003d9a:	4798      	blx	r3
 8003d9c:	e000      	b.n	8003da0 <HAL_DMA_IRQHandler+0x30c>
 8003d9e:	bf00      	nop
 8003da0:	3718      	adds	r7, #24
 8003da2:	46bd      	mov	sp, r7
 8003da4:	bd80      	pop	{r7, pc}
 8003da6:	bf00      	nop

08003da8 <DMA_SetConfig>:
 8003da8:	b480      	push	{r7}
 8003daa:	b085      	sub	sp, #20
 8003dac:	af00      	add	r7, sp, #0
 8003dae:	60f8      	str	r0, [r7, #12]
 8003db0:	60b9      	str	r1, [r7, #8]
 8003db2:	607a      	str	r2, [r7, #4]
 8003db4:	603b      	str	r3, [r7, #0]
 8003db6:	68fb      	ldr	r3, [r7, #12]
 8003db8:	681b      	ldr	r3, [r3, #0]
 8003dba:	681a      	ldr	r2, [r3, #0]
 8003dbc:	68fb      	ldr	r3, [r7, #12]
 8003dbe:	681b      	ldr	r3, [r3, #0]
 8003dc0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003dc4:	601a      	str	r2, [r3, #0]
 8003dc6:	68fb      	ldr	r3, [r7, #12]
 8003dc8:	681b      	ldr	r3, [r3, #0]
 8003dca:	683a      	ldr	r2, [r7, #0]
 8003dcc:	605a      	str	r2, [r3, #4]
 8003dce:	68fb      	ldr	r3, [r7, #12]
 8003dd0:	689b      	ldr	r3, [r3, #8]
 8003dd2:	2b40      	cmp	r3, #64	; 0x40
 8003dd4:	d108      	bne.n	8003de8 <DMA_SetConfig+0x40>
 8003dd6:	68fb      	ldr	r3, [r7, #12]
 8003dd8:	681b      	ldr	r3, [r3, #0]
 8003dda:	687a      	ldr	r2, [r7, #4]
 8003ddc:	609a      	str	r2, [r3, #8]
 8003dde:	68fb      	ldr	r3, [r7, #12]
 8003de0:	681b      	ldr	r3, [r3, #0]
 8003de2:	68ba      	ldr	r2, [r7, #8]
 8003de4:	60da      	str	r2, [r3, #12]
 8003de6:	e007      	b.n	8003df8 <DMA_SetConfig+0x50>
 8003de8:	68fb      	ldr	r3, [r7, #12]
 8003dea:	681b      	ldr	r3, [r3, #0]
 8003dec:	68ba      	ldr	r2, [r7, #8]
 8003dee:	609a      	str	r2, [r3, #8]
 8003df0:	68fb      	ldr	r3, [r7, #12]
 8003df2:	681b      	ldr	r3, [r3, #0]
 8003df4:	687a      	ldr	r2, [r7, #4]
 8003df6:	60da      	str	r2, [r3, #12]
 8003df8:	bf00      	nop
 8003dfa:	3714      	adds	r7, #20
 8003dfc:	46bd      	mov	sp, r7
 8003dfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e02:	4770      	bx	lr

08003e04 <DMA_CalcBaseAndBitshift>:
 8003e04:	b480      	push	{r7}
 8003e06:	b085      	sub	sp, #20
 8003e08:	af00      	add	r7, sp, #0
 8003e0a:	6078      	str	r0, [r7, #4]
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	b2db      	uxtb	r3, r3
 8003e12:	3b10      	subs	r3, #16
 8003e14:	4a14      	ldr	r2, [pc, #80]	; (8003e68 <DMA_CalcBaseAndBitshift+0x64>)
 8003e16:	fba2 2303 	umull	r2, r3, r2, r3
 8003e1a:	091b      	lsrs	r3, r3, #4
 8003e1c:	60fb      	str	r3, [r7, #12]
 8003e1e:	4a13      	ldr	r2, [pc, #76]	; (8003e6c <DMA_CalcBaseAndBitshift+0x68>)
 8003e20:	68fb      	ldr	r3, [r7, #12]
 8003e22:	4413      	add	r3, r2
 8003e24:	781b      	ldrb	r3, [r3, #0]
 8003e26:	461a      	mov	r2, r3
 8003e28:	687b      	ldr	r3, [r7, #4]
 8003e2a:	65da      	str	r2, [r3, #92]	; 0x5c
 8003e2c:	68fb      	ldr	r3, [r7, #12]
 8003e2e:	2b03      	cmp	r3, #3
 8003e30:	d909      	bls.n	8003e46 <DMA_CalcBaseAndBitshift+0x42>
 8003e32:	687b      	ldr	r3, [r7, #4]
 8003e34:	681b      	ldr	r3, [r3, #0]
 8003e36:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8003e3a:	f023 0303 	bic.w	r3, r3, #3
 8003e3e:	1d1a      	adds	r2, r3, #4
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	659a      	str	r2, [r3, #88]	; 0x58
 8003e44:	e007      	b.n	8003e56 <DMA_CalcBaseAndBitshift+0x52>
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	681b      	ldr	r3, [r3, #0]
 8003e4a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8003e4e:	f023 0303 	bic.w	r3, r3, #3
 8003e52:	687a      	ldr	r2, [r7, #4]
 8003e54:	6593      	str	r3, [r2, #88]	; 0x58
 8003e56:	687b      	ldr	r3, [r7, #4]
 8003e58:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003e5a:	4618      	mov	r0, r3
 8003e5c:	3714      	adds	r7, #20
 8003e5e:	46bd      	mov	sp, r7
 8003e60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e64:	4770      	bx	lr
 8003e66:	bf00      	nop
 8003e68:	aaaaaaab 	.word	0xaaaaaaab
 8003e6c:	0800800c 	.word	0x0800800c

08003e70 <DMA_CheckFifoParam>:
 8003e70:	b480      	push	{r7}
 8003e72:	b085      	sub	sp, #20
 8003e74:	af00      	add	r7, sp, #0
 8003e76:	6078      	str	r0, [r7, #4]
 8003e78:	2300      	movs	r3, #0
 8003e7a:	73fb      	strb	r3, [r7, #15]
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003e80:	60bb      	str	r3, [r7, #8]
 8003e82:	687b      	ldr	r3, [r7, #4]
 8003e84:	699b      	ldr	r3, [r3, #24]
 8003e86:	2b00      	cmp	r3, #0
 8003e88:	d11f      	bne.n	8003eca <DMA_CheckFifoParam+0x5a>
 8003e8a:	68bb      	ldr	r3, [r7, #8]
 8003e8c:	2b03      	cmp	r3, #3
 8003e8e:	d855      	bhi.n	8003f3c <DMA_CheckFifoParam+0xcc>
 8003e90:	a201      	add	r2, pc, #4	; (adr r2, 8003e98 <DMA_CheckFifoParam+0x28>)
 8003e92:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003e96:	bf00      	nop
 8003e98:	08003ea9 	.word	0x08003ea9
 8003e9c:	08003ebb 	.word	0x08003ebb
 8003ea0:	08003ea9 	.word	0x08003ea9
 8003ea4:	08003f3d 	.word	0x08003f3d
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003eac:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003eb0:	2b00      	cmp	r3, #0
 8003eb2:	d045      	beq.n	8003f40 <DMA_CheckFifoParam+0xd0>
 8003eb4:	2301      	movs	r3, #1
 8003eb6:	73fb      	strb	r3, [r7, #15]
 8003eb8:	e042      	b.n	8003f40 <DMA_CheckFifoParam+0xd0>
 8003eba:	687b      	ldr	r3, [r7, #4]
 8003ebc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003ebe:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8003ec2:	d13f      	bne.n	8003f44 <DMA_CheckFifoParam+0xd4>
 8003ec4:	2301      	movs	r3, #1
 8003ec6:	73fb      	strb	r3, [r7, #15]
 8003ec8:	e03c      	b.n	8003f44 <DMA_CheckFifoParam+0xd4>
 8003eca:	687b      	ldr	r3, [r7, #4]
 8003ecc:	699b      	ldr	r3, [r3, #24]
 8003ece:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003ed2:	d121      	bne.n	8003f18 <DMA_CheckFifoParam+0xa8>
 8003ed4:	68bb      	ldr	r3, [r7, #8]
 8003ed6:	2b03      	cmp	r3, #3
 8003ed8:	d836      	bhi.n	8003f48 <DMA_CheckFifoParam+0xd8>
 8003eda:	a201      	add	r2, pc, #4	; (adr r2, 8003ee0 <DMA_CheckFifoParam+0x70>)
 8003edc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003ee0:	08003ef1 	.word	0x08003ef1
 8003ee4:	08003ef7 	.word	0x08003ef7
 8003ee8:	08003ef1 	.word	0x08003ef1
 8003eec:	08003f09 	.word	0x08003f09
 8003ef0:	2301      	movs	r3, #1
 8003ef2:	73fb      	strb	r3, [r7, #15]
 8003ef4:	e02f      	b.n	8003f56 <DMA_CheckFifoParam+0xe6>
 8003ef6:	687b      	ldr	r3, [r7, #4]
 8003ef8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003efa:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003efe:	2b00      	cmp	r3, #0
 8003f00:	d024      	beq.n	8003f4c <DMA_CheckFifoParam+0xdc>
 8003f02:	2301      	movs	r3, #1
 8003f04:	73fb      	strb	r3, [r7, #15]
 8003f06:	e021      	b.n	8003f4c <DMA_CheckFifoParam+0xdc>
 8003f08:	687b      	ldr	r3, [r7, #4]
 8003f0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003f0c:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8003f10:	d11e      	bne.n	8003f50 <DMA_CheckFifoParam+0xe0>
 8003f12:	2301      	movs	r3, #1
 8003f14:	73fb      	strb	r3, [r7, #15]
 8003f16:	e01b      	b.n	8003f50 <DMA_CheckFifoParam+0xe0>
 8003f18:	68bb      	ldr	r3, [r7, #8]
 8003f1a:	2b02      	cmp	r3, #2
 8003f1c:	d902      	bls.n	8003f24 <DMA_CheckFifoParam+0xb4>
 8003f1e:	2b03      	cmp	r3, #3
 8003f20:	d003      	beq.n	8003f2a <DMA_CheckFifoParam+0xba>
 8003f22:	e018      	b.n	8003f56 <DMA_CheckFifoParam+0xe6>
 8003f24:	2301      	movs	r3, #1
 8003f26:	73fb      	strb	r3, [r7, #15]
 8003f28:	e015      	b.n	8003f56 <DMA_CheckFifoParam+0xe6>
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003f2e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003f32:	2b00      	cmp	r3, #0
 8003f34:	d00e      	beq.n	8003f54 <DMA_CheckFifoParam+0xe4>
 8003f36:	2301      	movs	r3, #1
 8003f38:	73fb      	strb	r3, [r7, #15]
 8003f3a:	e00b      	b.n	8003f54 <DMA_CheckFifoParam+0xe4>
 8003f3c:	bf00      	nop
 8003f3e:	e00a      	b.n	8003f56 <DMA_CheckFifoParam+0xe6>
 8003f40:	bf00      	nop
 8003f42:	e008      	b.n	8003f56 <DMA_CheckFifoParam+0xe6>
 8003f44:	bf00      	nop
 8003f46:	e006      	b.n	8003f56 <DMA_CheckFifoParam+0xe6>
 8003f48:	bf00      	nop
 8003f4a:	e004      	b.n	8003f56 <DMA_CheckFifoParam+0xe6>
 8003f4c:	bf00      	nop
 8003f4e:	e002      	b.n	8003f56 <DMA_CheckFifoParam+0xe6>
 8003f50:	bf00      	nop
 8003f52:	e000      	b.n	8003f56 <DMA_CheckFifoParam+0xe6>
 8003f54:	bf00      	nop
 8003f56:	7bfb      	ldrb	r3, [r7, #15]
 8003f58:	4618      	mov	r0, r3
 8003f5a:	3714      	adds	r7, #20
 8003f5c:	46bd      	mov	sp, r7
 8003f5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f62:	4770      	bx	lr

08003f64 <HAL_GPIO_Init>:
 8003f64:	b480      	push	{r7}
 8003f66:	b089      	sub	sp, #36	; 0x24
 8003f68:	af00      	add	r7, sp, #0
 8003f6a:	6078      	str	r0, [r7, #4]
 8003f6c:	6039      	str	r1, [r7, #0]
 8003f6e:	2300      	movs	r3, #0
 8003f70:	617b      	str	r3, [r7, #20]
 8003f72:	2300      	movs	r3, #0
 8003f74:	613b      	str	r3, [r7, #16]
 8003f76:	2300      	movs	r3, #0
 8003f78:	61bb      	str	r3, [r7, #24]
 8003f7a:	2300      	movs	r3, #0
 8003f7c:	61fb      	str	r3, [r7, #28]
 8003f7e:	e165      	b.n	800424c <HAL_GPIO_Init+0x2e8>
 8003f80:	2201      	movs	r2, #1
 8003f82:	69fb      	ldr	r3, [r7, #28]
 8003f84:	fa02 f303 	lsl.w	r3, r2, r3
 8003f88:	617b      	str	r3, [r7, #20]
 8003f8a:	683b      	ldr	r3, [r7, #0]
 8003f8c:	681b      	ldr	r3, [r3, #0]
 8003f8e:	697a      	ldr	r2, [r7, #20]
 8003f90:	4013      	ands	r3, r2
 8003f92:	613b      	str	r3, [r7, #16]
 8003f94:	693a      	ldr	r2, [r7, #16]
 8003f96:	697b      	ldr	r3, [r7, #20]
 8003f98:	429a      	cmp	r2, r3
 8003f9a:	f040 8154 	bne.w	8004246 <HAL_GPIO_Init+0x2e2>
 8003f9e:	683b      	ldr	r3, [r7, #0]
 8003fa0:	685b      	ldr	r3, [r3, #4]
 8003fa2:	2b01      	cmp	r3, #1
 8003fa4:	d00b      	beq.n	8003fbe <HAL_GPIO_Init+0x5a>
 8003fa6:	683b      	ldr	r3, [r7, #0]
 8003fa8:	685b      	ldr	r3, [r3, #4]
 8003faa:	2b02      	cmp	r3, #2
 8003fac:	d007      	beq.n	8003fbe <HAL_GPIO_Init+0x5a>
 8003fae:	683b      	ldr	r3, [r7, #0]
 8003fb0:	685b      	ldr	r3, [r3, #4]
 8003fb2:	2b11      	cmp	r3, #17
 8003fb4:	d003      	beq.n	8003fbe <HAL_GPIO_Init+0x5a>
 8003fb6:	683b      	ldr	r3, [r7, #0]
 8003fb8:	685b      	ldr	r3, [r3, #4]
 8003fba:	2b12      	cmp	r3, #18
 8003fbc:	d130      	bne.n	8004020 <HAL_GPIO_Init+0xbc>
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	689b      	ldr	r3, [r3, #8]
 8003fc2:	61bb      	str	r3, [r7, #24]
 8003fc4:	69fb      	ldr	r3, [r7, #28]
 8003fc6:	005b      	lsls	r3, r3, #1
 8003fc8:	2203      	movs	r2, #3
 8003fca:	fa02 f303 	lsl.w	r3, r2, r3
 8003fce:	43db      	mvns	r3, r3
 8003fd0:	69ba      	ldr	r2, [r7, #24]
 8003fd2:	4013      	ands	r3, r2
 8003fd4:	61bb      	str	r3, [r7, #24]
 8003fd6:	683b      	ldr	r3, [r7, #0]
 8003fd8:	68da      	ldr	r2, [r3, #12]
 8003fda:	69fb      	ldr	r3, [r7, #28]
 8003fdc:	005b      	lsls	r3, r3, #1
 8003fde:	fa02 f303 	lsl.w	r3, r2, r3
 8003fe2:	69ba      	ldr	r2, [r7, #24]
 8003fe4:	4313      	orrs	r3, r2
 8003fe6:	61bb      	str	r3, [r7, #24]
 8003fe8:	687b      	ldr	r3, [r7, #4]
 8003fea:	69ba      	ldr	r2, [r7, #24]
 8003fec:	609a      	str	r2, [r3, #8]
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	685b      	ldr	r3, [r3, #4]
 8003ff2:	61bb      	str	r3, [r7, #24]
 8003ff4:	2201      	movs	r2, #1
 8003ff6:	69fb      	ldr	r3, [r7, #28]
 8003ff8:	fa02 f303 	lsl.w	r3, r2, r3
 8003ffc:	43db      	mvns	r3, r3
 8003ffe:	69ba      	ldr	r2, [r7, #24]
 8004000:	4013      	ands	r3, r2
 8004002:	61bb      	str	r3, [r7, #24]
 8004004:	683b      	ldr	r3, [r7, #0]
 8004006:	685b      	ldr	r3, [r3, #4]
 8004008:	091b      	lsrs	r3, r3, #4
 800400a:	f003 0201 	and.w	r2, r3, #1
 800400e:	69fb      	ldr	r3, [r7, #28]
 8004010:	fa02 f303 	lsl.w	r3, r2, r3
 8004014:	69ba      	ldr	r2, [r7, #24]
 8004016:	4313      	orrs	r3, r2
 8004018:	61bb      	str	r3, [r7, #24]
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	69ba      	ldr	r2, [r7, #24]
 800401e:	605a      	str	r2, [r3, #4]
 8004020:	687b      	ldr	r3, [r7, #4]
 8004022:	68db      	ldr	r3, [r3, #12]
 8004024:	61bb      	str	r3, [r7, #24]
 8004026:	69fb      	ldr	r3, [r7, #28]
 8004028:	005b      	lsls	r3, r3, #1
 800402a:	2203      	movs	r2, #3
 800402c:	fa02 f303 	lsl.w	r3, r2, r3
 8004030:	43db      	mvns	r3, r3
 8004032:	69ba      	ldr	r2, [r7, #24]
 8004034:	4013      	ands	r3, r2
 8004036:	61bb      	str	r3, [r7, #24]
 8004038:	683b      	ldr	r3, [r7, #0]
 800403a:	689a      	ldr	r2, [r3, #8]
 800403c:	69fb      	ldr	r3, [r7, #28]
 800403e:	005b      	lsls	r3, r3, #1
 8004040:	fa02 f303 	lsl.w	r3, r2, r3
 8004044:	69ba      	ldr	r2, [r7, #24]
 8004046:	4313      	orrs	r3, r2
 8004048:	61bb      	str	r3, [r7, #24]
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	69ba      	ldr	r2, [r7, #24]
 800404e:	60da      	str	r2, [r3, #12]
 8004050:	683b      	ldr	r3, [r7, #0]
 8004052:	685b      	ldr	r3, [r3, #4]
 8004054:	2b02      	cmp	r3, #2
 8004056:	d003      	beq.n	8004060 <HAL_GPIO_Init+0xfc>
 8004058:	683b      	ldr	r3, [r7, #0]
 800405a:	685b      	ldr	r3, [r3, #4]
 800405c:	2b12      	cmp	r3, #18
 800405e:	d123      	bne.n	80040a8 <HAL_GPIO_Init+0x144>
 8004060:	69fb      	ldr	r3, [r7, #28]
 8004062:	08da      	lsrs	r2, r3, #3
 8004064:	687b      	ldr	r3, [r7, #4]
 8004066:	3208      	adds	r2, #8
 8004068:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800406c:	61bb      	str	r3, [r7, #24]
 800406e:	69fb      	ldr	r3, [r7, #28]
 8004070:	f003 0307 	and.w	r3, r3, #7
 8004074:	009b      	lsls	r3, r3, #2
 8004076:	220f      	movs	r2, #15
 8004078:	fa02 f303 	lsl.w	r3, r2, r3
 800407c:	43db      	mvns	r3, r3
 800407e:	69ba      	ldr	r2, [r7, #24]
 8004080:	4013      	ands	r3, r2
 8004082:	61bb      	str	r3, [r7, #24]
 8004084:	683b      	ldr	r3, [r7, #0]
 8004086:	691a      	ldr	r2, [r3, #16]
 8004088:	69fb      	ldr	r3, [r7, #28]
 800408a:	f003 0307 	and.w	r3, r3, #7
 800408e:	009b      	lsls	r3, r3, #2
 8004090:	fa02 f303 	lsl.w	r3, r2, r3
 8004094:	69ba      	ldr	r2, [r7, #24]
 8004096:	4313      	orrs	r3, r2
 8004098:	61bb      	str	r3, [r7, #24]
 800409a:	69fb      	ldr	r3, [r7, #28]
 800409c:	08da      	lsrs	r2, r3, #3
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	3208      	adds	r2, #8
 80040a2:	69b9      	ldr	r1, [r7, #24]
 80040a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80040a8:	687b      	ldr	r3, [r7, #4]
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	61bb      	str	r3, [r7, #24]
 80040ae:	69fb      	ldr	r3, [r7, #28]
 80040b0:	005b      	lsls	r3, r3, #1
 80040b2:	2203      	movs	r2, #3
 80040b4:	fa02 f303 	lsl.w	r3, r2, r3
 80040b8:	43db      	mvns	r3, r3
 80040ba:	69ba      	ldr	r2, [r7, #24]
 80040bc:	4013      	ands	r3, r2
 80040be:	61bb      	str	r3, [r7, #24]
 80040c0:	683b      	ldr	r3, [r7, #0]
 80040c2:	685b      	ldr	r3, [r3, #4]
 80040c4:	f003 0203 	and.w	r2, r3, #3
 80040c8:	69fb      	ldr	r3, [r7, #28]
 80040ca:	005b      	lsls	r3, r3, #1
 80040cc:	fa02 f303 	lsl.w	r3, r2, r3
 80040d0:	69ba      	ldr	r2, [r7, #24]
 80040d2:	4313      	orrs	r3, r2
 80040d4:	61bb      	str	r3, [r7, #24]
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	69ba      	ldr	r2, [r7, #24]
 80040da:	601a      	str	r2, [r3, #0]
 80040dc:	683b      	ldr	r3, [r7, #0]
 80040de:	685b      	ldr	r3, [r3, #4]
 80040e0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80040e4:	2b00      	cmp	r3, #0
 80040e6:	f000 80ae 	beq.w	8004246 <HAL_GPIO_Init+0x2e2>
 80040ea:	2300      	movs	r3, #0
 80040ec:	60fb      	str	r3, [r7, #12]
 80040ee:	4b5c      	ldr	r3, [pc, #368]	; (8004260 <HAL_GPIO_Init+0x2fc>)
 80040f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80040f2:	4a5b      	ldr	r2, [pc, #364]	; (8004260 <HAL_GPIO_Init+0x2fc>)
 80040f4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80040f8:	6453      	str	r3, [r2, #68]	; 0x44
 80040fa:	4b59      	ldr	r3, [pc, #356]	; (8004260 <HAL_GPIO_Init+0x2fc>)
 80040fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80040fe:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004102:	60fb      	str	r3, [r7, #12]
 8004104:	68fb      	ldr	r3, [r7, #12]
 8004106:	4a57      	ldr	r2, [pc, #348]	; (8004264 <HAL_GPIO_Init+0x300>)
 8004108:	69fb      	ldr	r3, [r7, #28]
 800410a:	089b      	lsrs	r3, r3, #2
 800410c:	3302      	adds	r3, #2
 800410e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004112:	61bb      	str	r3, [r7, #24]
 8004114:	69fb      	ldr	r3, [r7, #28]
 8004116:	f003 0303 	and.w	r3, r3, #3
 800411a:	009b      	lsls	r3, r3, #2
 800411c:	220f      	movs	r2, #15
 800411e:	fa02 f303 	lsl.w	r3, r2, r3
 8004122:	43db      	mvns	r3, r3
 8004124:	69ba      	ldr	r2, [r7, #24]
 8004126:	4013      	ands	r3, r2
 8004128:	61bb      	str	r3, [r7, #24]
 800412a:	687b      	ldr	r3, [r7, #4]
 800412c:	4a4e      	ldr	r2, [pc, #312]	; (8004268 <HAL_GPIO_Init+0x304>)
 800412e:	4293      	cmp	r3, r2
 8004130:	d025      	beq.n	800417e <HAL_GPIO_Init+0x21a>
 8004132:	687b      	ldr	r3, [r7, #4]
 8004134:	4a4d      	ldr	r2, [pc, #308]	; (800426c <HAL_GPIO_Init+0x308>)
 8004136:	4293      	cmp	r3, r2
 8004138:	d01f      	beq.n	800417a <HAL_GPIO_Init+0x216>
 800413a:	687b      	ldr	r3, [r7, #4]
 800413c:	4a4c      	ldr	r2, [pc, #304]	; (8004270 <HAL_GPIO_Init+0x30c>)
 800413e:	4293      	cmp	r3, r2
 8004140:	d019      	beq.n	8004176 <HAL_GPIO_Init+0x212>
 8004142:	687b      	ldr	r3, [r7, #4]
 8004144:	4a4b      	ldr	r2, [pc, #300]	; (8004274 <HAL_GPIO_Init+0x310>)
 8004146:	4293      	cmp	r3, r2
 8004148:	d013      	beq.n	8004172 <HAL_GPIO_Init+0x20e>
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	4a4a      	ldr	r2, [pc, #296]	; (8004278 <HAL_GPIO_Init+0x314>)
 800414e:	4293      	cmp	r3, r2
 8004150:	d00d      	beq.n	800416e <HAL_GPIO_Init+0x20a>
 8004152:	687b      	ldr	r3, [r7, #4]
 8004154:	4a49      	ldr	r2, [pc, #292]	; (800427c <HAL_GPIO_Init+0x318>)
 8004156:	4293      	cmp	r3, r2
 8004158:	d007      	beq.n	800416a <HAL_GPIO_Init+0x206>
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	4a48      	ldr	r2, [pc, #288]	; (8004280 <HAL_GPIO_Init+0x31c>)
 800415e:	4293      	cmp	r3, r2
 8004160:	d101      	bne.n	8004166 <HAL_GPIO_Init+0x202>
 8004162:	2306      	movs	r3, #6
 8004164:	e00c      	b.n	8004180 <HAL_GPIO_Init+0x21c>
 8004166:	2307      	movs	r3, #7
 8004168:	e00a      	b.n	8004180 <HAL_GPIO_Init+0x21c>
 800416a:	2305      	movs	r3, #5
 800416c:	e008      	b.n	8004180 <HAL_GPIO_Init+0x21c>
 800416e:	2304      	movs	r3, #4
 8004170:	e006      	b.n	8004180 <HAL_GPIO_Init+0x21c>
 8004172:	2303      	movs	r3, #3
 8004174:	e004      	b.n	8004180 <HAL_GPIO_Init+0x21c>
 8004176:	2302      	movs	r3, #2
 8004178:	e002      	b.n	8004180 <HAL_GPIO_Init+0x21c>
 800417a:	2301      	movs	r3, #1
 800417c:	e000      	b.n	8004180 <HAL_GPIO_Init+0x21c>
 800417e:	2300      	movs	r3, #0
 8004180:	69fa      	ldr	r2, [r7, #28]
 8004182:	f002 0203 	and.w	r2, r2, #3
 8004186:	0092      	lsls	r2, r2, #2
 8004188:	4093      	lsls	r3, r2
 800418a:	69ba      	ldr	r2, [r7, #24]
 800418c:	4313      	orrs	r3, r2
 800418e:	61bb      	str	r3, [r7, #24]
 8004190:	4934      	ldr	r1, [pc, #208]	; (8004264 <HAL_GPIO_Init+0x300>)
 8004192:	69fb      	ldr	r3, [r7, #28]
 8004194:	089b      	lsrs	r3, r3, #2
 8004196:	3302      	adds	r3, #2
 8004198:	69ba      	ldr	r2, [r7, #24]
 800419a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800419e:	4b39      	ldr	r3, [pc, #228]	; (8004284 <HAL_GPIO_Init+0x320>)
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	61bb      	str	r3, [r7, #24]
 80041a4:	693b      	ldr	r3, [r7, #16]
 80041a6:	43db      	mvns	r3, r3
 80041a8:	69ba      	ldr	r2, [r7, #24]
 80041aa:	4013      	ands	r3, r2
 80041ac:	61bb      	str	r3, [r7, #24]
 80041ae:	683b      	ldr	r3, [r7, #0]
 80041b0:	685b      	ldr	r3, [r3, #4]
 80041b2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80041b6:	2b00      	cmp	r3, #0
 80041b8:	d003      	beq.n	80041c2 <HAL_GPIO_Init+0x25e>
 80041ba:	69ba      	ldr	r2, [r7, #24]
 80041bc:	693b      	ldr	r3, [r7, #16]
 80041be:	4313      	orrs	r3, r2
 80041c0:	61bb      	str	r3, [r7, #24]
 80041c2:	4a30      	ldr	r2, [pc, #192]	; (8004284 <HAL_GPIO_Init+0x320>)
 80041c4:	69bb      	ldr	r3, [r7, #24]
 80041c6:	6013      	str	r3, [r2, #0]
 80041c8:	4b2e      	ldr	r3, [pc, #184]	; (8004284 <HAL_GPIO_Init+0x320>)
 80041ca:	685b      	ldr	r3, [r3, #4]
 80041cc:	61bb      	str	r3, [r7, #24]
 80041ce:	693b      	ldr	r3, [r7, #16]
 80041d0:	43db      	mvns	r3, r3
 80041d2:	69ba      	ldr	r2, [r7, #24]
 80041d4:	4013      	ands	r3, r2
 80041d6:	61bb      	str	r3, [r7, #24]
 80041d8:	683b      	ldr	r3, [r7, #0]
 80041da:	685b      	ldr	r3, [r3, #4]
 80041dc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80041e0:	2b00      	cmp	r3, #0
 80041e2:	d003      	beq.n	80041ec <HAL_GPIO_Init+0x288>
 80041e4:	69ba      	ldr	r2, [r7, #24]
 80041e6:	693b      	ldr	r3, [r7, #16]
 80041e8:	4313      	orrs	r3, r2
 80041ea:	61bb      	str	r3, [r7, #24]
 80041ec:	4a25      	ldr	r2, [pc, #148]	; (8004284 <HAL_GPIO_Init+0x320>)
 80041ee:	69bb      	ldr	r3, [r7, #24]
 80041f0:	6053      	str	r3, [r2, #4]
 80041f2:	4b24      	ldr	r3, [pc, #144]	; (8004284 <HAL_GPIO_Init+0x320>)
 80041f4:	689b      	ldr	r3, [r3, #8]
 80041f6:	61bb      	str	r3, [r7, #24]
 80041f8:	693b      	ldr	r3, [r7, #16]
 80041fa:	43db      	mvns	r3, r3
 80041fc:	69ba      	ldr	r2, [r7, #24]
 80041fe:	4013      	ands	r3, r2
 8004200:	61bb      	str	r3, [r7, #24]
 8004202:	683b      	ldr	r3, [r7, #0]
 8004204:	685b      	ldr	r3, [r3, #4]
 8004206:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800420a:	2b00      	cmp	r3, #0
 800420c:	d003      	beq.n	8004216 <HAL_GPIO_Init+0x2b2>
 800420e:	69ba      	ldr	r2, [r7, #24]
 8004210:	693b      	ldr	r3, [r7, #16]
 8004212:	4313      	orrs	r3, r2
 8004214:	61bb      	str	r3, [r7, #24]
 8004216:	4a1b      	ldr	r2, [pc, #108]	; (8004284 <HAL_GPIO_Init+0x320>)
 8004218:	69bb      	ldr	r3, [r7, #24]
 800421a:	6093      	str	r3, [r2, #8]
 800421c:	4b19      	ldr	r3, [pc, #100]	; (8004284 <HAL_GPIO_Init+0x320>)
 800421e:	68db      	ldr	r3, [r3, #12]
 8004220:	61bb      	str	r3, [r7, #24]
 8004222:	693b      	ldr	r3, [r7, #16]
 8004224:	43db      	mvns	r3, r3
 8004226:	69ba      	ldr	r2, [r7, #24]
 8004228:	4013      	ands	r3, r2
 800422a:	61bb      	str	r3, [r7, #24]
 800422c:	683b      	ldr	r3, [r7, #0]
 800422e:	685b      	ldr	r3, [r3, #4]
 8004230:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004234:	2b00      	cmp	r3, #0
 8004236:	d003      	beq.n	8004240 <HAL_GPIO_Init+0x2dc>
 8004238:	69ba      	ldr	r2, [r7, #24]
 800423a:	693b      	ldr	r3, [r7, #16]
 800423c:	4313      	orrs	r3, r2
 800423e:	61bb      	str	r3, [r7, #24]
 8004240:	4a10      	ldr	r2, [pc, #64]	; (8004284 <HAL_GPIO_Init+0x320>)
 8004242:	69bb      	ldr	r3, [r7, #24]
 8004244:	60d3      	str	r3, [r2, #12]
 8004246:	69fb      	ldr	r3, [r7, #28]
 8004248:	3301      	adds	r3, #1
 800424a:	61fb      	str	r3, [r7, #28]
 800424c:	69fb      	ldr	r3, [r7, #28]
 800424e:	2b0f      	cmp	r3, #15
 8004250:	f67f ae96 	bls.w	8003f80 <HAL_GPIO_Init+0x1c>
 8004254:	bf00      	nop
 8004256:	3724      	adds	r7, #36	; 0x24
 8004258:	46bd      	mov	sp, r7
 800425a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800425e:	4770      	bx	lr
 8004260:	40023800 	.word	0x40023800
 8004264:	40013800 	.word	0x40013800
 8004268:	40020000 	.word	0x40020000
 800426c:	40020400 	.word	0x40020400
 8004270:	40020800 	.word	0x40020800
 8004274:	40020c00 	.word	0x40020c00
 8004278:	40021000 	.word	0x40021000
 800427c:	40021400 	.word	0x40021400
 8004280:	40021800 	.word	0x40021800
 8004284:	40013c00 	.word	0x40013c00

08004288 <HAL_GPIO_WritePin>:
 8004288:	b480      	push	{r7}
 800428a:	b083      	sub	sp, #12
 800428c:	af00      	add	r7, sp, #0
 800428e:	6078      	str	r0, [r7, #4]
 8004290:	460b      	mov	r3, r1
 8004292:	807b      	strh	r3, [r7, #2]
 8004294:	4613      	mov	r3, r2
 8004296:	707b      	strb	r3, [r7, #1]
 8004298:	787b      	ldrb	r3, [r7, #1]
 800429a:	2b00      	cmp	r3, #0
 800429c:	d003      	beq.n	80042a6 <HAL_GPIO_WritePin+0x1e>
 800429e:	887a      	ldrh	r2, [r7, #2]
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	619a      	str	r2, [r3, #24]
 80042a4:	e003      	b.n	80042ae <HAL_GPIO_WritePin+0x26>
 80042a6:	887b      	ldrh	r3, [r7, #2]
 80042a8:	041a      	lsls	r2, r3, #16
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	619a      	str	r2, [r3, #24]
 80042ae:	bf00      	nop
 80042b0:	370c      	adds	r7, #12
 80042b2:	46bd      	mov	sp, r7
 80042b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042b8:	4770      	bx	lr
	...

080042bc <HAL_GPIO_EXTI_IRQHandler>:
 80042bc:	b580      	push	{r7, lr}
 80042be:	b082      	sub	sp, #8
 80042c0:	af00      	add	r7, sp, #0
 80042c2:	4603      	mov	r3, r0
 80042c4:	80fb      	strh	r3, [r7, #6]
 80042c6:	4b08      	ldr	r3, [pc, #32]	; (80042e8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80042c8:	695a      	ldr	r2, [r3, #20]
 80042ca:	88fb      	ldrh	r3, [r7, #6]
 80042cc:	4013      	ands	r3, r2
 80042ce:	2b00      	cmp	r3, #0
 80042d0:	d006      	beq.n	80042e0 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80042d2:	4a05      	ldr	r2, [pc, #20]	; (80042e8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80042d4:	88fb      	ldrh	r3, [r7, #6]
 80042d6:	6153      	str	r3, [r2, #20]
 80042d8:	88fb      	ldrh	r3, [r7, #6]
 80042da:	4618      	mov	r0, r3
 80042dc:	f7fe fc1e 	bl	8002b1c <HAL_GPIO_EXTI_Callback>
 80042e0:	bf00      	nop
 80042e2:	3708      	adds	r7, #8
 80042e4:	46bd      	mov	sp, r7
 80042e6:	bd80      	pop	{r7, pc}
 80042e8:	40013c00 	.word	0x40013c00

080042ec <HAL_RCC_ClockConfig>:
 80042ec:	b580      	push	{r7, lr}
 80042ee:	b084      	sub	sp, #16
 80042f0:	af00      	add	r7, sp, #0
 80042f2:	6078      	str	r0, [r7, #4]
 80042f4:	6039      	str	r1, [r7, #0]
 80042f6:	687b      	ldr	r3, [r7, #4]
 80042f8:	2b00      	cmp	r3, #0
 80042fa:	d101      	bne.n	8004300 <HAL_RCC_ClockConfig+0x14>
 80042fc:	2301      	movs	r3, #1
 80042fe:	e0cc      	b.n	800449a <HAL_RCC_ClockConfig+0x1ae>
 8004300:	4b68      	ldr	r3, [pc, #416]	; (80044a4 <HAL_RCC_ClockConfig+0x1b8>)
 8004302:	681b      	ldr	r3, [r3, #0]
 8004304:	f003 030f 	and.w	r3, r3, #15
 8004308:	683a      	ldr	r2, [r7, #0]
 800430a:	429a      	cmp	r2, r3
 800430c:	d90c      	bls.n	8004328 <HAL_RCC_ClockConfig+0x3c>
 800430e:	4b65      	ldr	r3, [pc, #404]	; (80044a4 <HAL_RCC_ClockConfig+0x1b8>)
 8004310:	683a      	ldr	r2, [r7, #0]
 8004312:	b2d2      	uxtb	r2, r2
 8004314:	701a      	strb	r2, [r3, #0]
 8004316:	4b63      	ldr	r3, [pc, #396]	; (80044a4 <HAL_RCC_ClockConfig+0x1b8>)
 8004318:	681b      	ldr	r3, [r3, #0]
 800431a:	f003 030f 	and.w	r3, r3, #15
 800431e:	683a      	ldr	r2, [r7, #0]
 8004320:	429a      	cmp	r2, r3
 8004322:	d001      	beq.n	8004328 <HAL_RCC_ClockConfig+0x3c>
 8004324:	2301      	movs	r3, #1
 8004326:	e0b8      	b.n	800449a <HAL_RCC_ClockConfig+0x1ae>
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	681b      	ldr	r3, [r3, #0]
 800432c:	f003 0302 	and.w	r3, r3, #2
 8004330:	2b00      	cmp	r3, #0
 8004332:	d020      	beq.n	8004376 <HAL_RCC_ClockConfig+0x8a>
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	681b      	ldr	r3, [r3, #0]
 8004338:	f003 0304 	and.w	r3, r3, #4
 800433c:	2b00      	cmp	r3, #0
 800433e:	d005      	beq.n	800434c <HAL_RCC_ClockConfig+0x60>
 8004340:	4b59      	ldr	r3, [pc, #356]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 8004342:	689b      	ldr	r3, [r3, #8]
 8004344:	4a58      	ldr	r2, [pc, #352]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 8004346:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800434a:	6093      	str	r3, [r2, #8]
 800434c:	687b      	ldr	r3, [r7, #4]
 800434e:	681b      	ldr	r3, [r3, #0]
 8004350:	f003 0308 	and.w	r3, r3, #8
 8004354:	2b00      	cmp	r3, #0
 8004356:	d005      	beq.n	8004364 <HAL_RCC_ClockConfig+0x78>
 8004358:	4b53      	ldr	r3, [pc, #332]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 800435a:	689b      	ldr	r3, [r3, #8]
 800435c:	4a52      	ldr	r2, [pc, #328]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 800435e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8004362:	6093      	str	r3, [r2, #8]
 8004364:	4b50      	ldr	r3, [pc, #320]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 8004366:	689b      	ldr	r3, [r3, #8]
 8004368:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	689b      	ldr	r3, [r3, #8]
 8004370:	494d      	ldr	r1, [pc, #308]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 8004372:	4313      	orrs	r3, r2
 8004374:	608b      	str	r3, [r1, #8]
 8004376:	687b      	ldr	r3, [r7, #4]
 8004378:	681b      	ldr	r3, [r3, #0]
 800437a:	f003 0301 	and.w	r3, r3, #1
 800437e:	2b00      	cmp	r3, #0
 8004380:	d044      	beq.n	800440c <HAL_RCC_ClockConfig+0x120>
 8004382:	687b      	ldr	r3, [r7, #4]
 8004384:	685b      	ldr	r3, [r3, #4]
 8004386:	2b01      	cmp	r3, #1
 8004388:	d107      	bne.n	800439a <HAL_RCC_ClockConfig+0xae>
 800438a:	4b47      	ldr	r3, [pc, #284]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 800438c:	681b      	ldr	r3, [r3, #0]
 800438e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004392:	2b00      	cmp	r3, #0
 8004394:	d119      	bne.n	80043ca <HAL_RCC_ClockConfig+0xde>
 8004396:	2301      	movs	r3, #1
 8004398:	e07f      	b.n	800449a <HAL_RCC_ClockConfig+0x1ae>
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	685b      	ldr	r3, [r3, #4]
 800439e:	2b02      	cmp	r3, #2
 80043a0:	d003      	beq.n	80043aa <HAL_RCC_ClockConfig+0xbe>
 80043a2:	687b      	ldr	r3, [r7, #4]
 80043a4:	685b      	ldr	r3, [r3, #4]
 80043a6:	2b03      	cmp	r3, #3
 80043a8:	d107      	bne.n	80043ba <HAL_RCC_ClockConfig+0xce>
 80043aa:	4b3f      	ldr	r3, [pc, #252]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 80043ac:	681b      	ldr	r3, [r3, #0]
 80043ae:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80043b2:	2b00      	cmp	r3, #0
 80043b4:	d109      	bne.n	80043ca <HAL_RCC_ClockConfig+0xde>
 80043b6:	2301      	movs	r3, #1
 80043b8:	e06f      	b.n	800449a <HAL_RCC_ClockConfig+0x1ae>
 80043ba:	4b3b      	ldr	r3, [pc, #236]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 80043bc:	681b      	ldr	r3, [r3, #0]
 80043be:	f003 0302 	and.w	r3, r3, #2
 80043c2:	2b00      	cmp	r3, #0
 80043c4:	d101      	bne.n	80043ca <HAL_RCC_ClockConfig+0xde>
 80043c6:	2301      	movs	r3, #1
 80043c8:	e067      	b.n	800449a <HAL_RCC_ClockConfig+0x1ae>
 80043ca:	4b37      	ldr	r3, [pc, #220]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 80043cc:	689b      	ldr	r3, [r3, #8]
 80043ce:	f023 0203 	bic.w	r2, r3, #3
 80043d2:	687b      	ldr	r3, [r7, #4]
 80043d4:	685b      	ldr	r3, [r3, #4]
 80043d6:	4934      	ldr	r1, [pc, #208]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 80043d8:	4313      	orrs	r3, r2
 80043da:	608b      	str	r3, [r1, #8]
 80043dc:	f7fe fe4c 	bl	8003078 <HAL_GetTick>
 80043e0:	60f8      	str	r0, [r7, #12]
 80043e2:	e00a      	b.n	80043fa <HAL_RCC_ClockConfig+0x10e>
 80043e4:	f7fe fe48 	bl	8003078 <HAL_GetTick>
 80043e8:	4602      	mov	r2, r0
 80043ea:	68fb      	ldr	r3, [r7, #12]
 80043ec:	1ad3      	subs	r3, r2, r3
 80043ee:	f241 3288 	movw	r2, #5000	; 0x1388
 80043f2:	4293      	cmp	r3, r2
 80043f4:	d901      	bls.n	80043fa <HAL_RCC_ClockConfig+0x10e>
 80043f6:	2303      	movs	r3, #3
 80043f8:	e04f      	b.n	800449a <HAL_RCC_ClockConfig+0x1ae>
 80043fa:	4b2b      	ldr	r3, [pc, #172]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 80043fc:	689b      	ldr	r3, [r3, #8]
 80043fe:	f003 020c 	and.w	r2, r3, #12
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	685b      	ldr	r3, [r3, #4]
 8004406:	009b      	lsls	r3, r3, #2
 8004408:	429a      	cmp	r2, r3
 800440a:	d1eb      	bne.n	80043e4 <HAL_RCC_ClockConfig+0xf8>
 800440c:	4b25      	ldr	r3, [pc, #148]	; (80044a4 <HAL_RCC_ClockConfig+0x1b8>)
 800440e:	681b      	ldr	r3, [r3, #0]
 8004410:	f003 030f 	and.w	r3, r3, #15
 8004414:	683a      	ldr	r2, [r7, #0]
 8004416:	429a      	cmp	r2, r3
 8004418:	d20c      	bcs.n	8004434 <HAL_RCC_ClockConfig+0x148>
 800441a:	4b22      	ldr	r3, [pc, #136]	; (80044a4 <HAL_RCC_ClockConfig+0x1b8>)
 800441c:	683a      	ldr	r2, [r7, #0]
 800441e:	b2d2      	uxtb	r2, r2
 8004420:	701a      	strb	r2, [r3, #0]
 8004422:	4b20      	ldr	r3, [pc, #128]	; (80044a4 <HAL_RCC_ClockConfig+0x1b8>)
 8004424:	681b      	ldr	r3, [r3, #0]
 8004426:	f003 030f 	and.w	r3, r3, #15
 800442a:	683a      	ldr	r2, [r7, #0]
 800442c:	429a      	cmp	r2, r3
 800442e:	d001      	beq.n	8004434 <HAL_RCC_ClockConfig+0x148>
 8004430:	2301      	movs	r3, #1
 8004432:	e032      	b.n	800449a <HAL_RCC_ClockConfig+0x1ae>
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	681b      	ldr	r3, [r3, #0]
 8004438:	f003 0304 	and.w	r3, r3, #4
 800443c:	2b00      	cmp	r3, #0
 800443e:	d008      	beq.n	8004452 <HAL_RCC_ClockConfig+0x166>
 8004440:	4b19      	ldr	r3, [pc, #100]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 8004442:	689b      	ldr	r3, [r3, #8]
 8004444:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8004448:	687b      	ldr	r3, [r7, #4]
 800444a:	68db      	ldr	r3, [r3, #12]
 800444c:	4916      	ldr	r1, [pc, #88]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 800444e:	4313      	orrs	r3, r2
 8004450:	608b      	str	r3, [r1, #8]
 8004452:	687b      	ldr	r3, [r7, #4]
 8004454:	681b      	ldr	r3, [r3, #0]
 8004456:	f003 0308 	and.w	r3, r3, #8
 800445a:	2b00      	cmp	r3, #0
 800445c:	d009      	beq.n	8004472 <HAL_RCC_ClockConfig+0x186>
 800445e:	4b12      	ldr	r3, [pc, #72]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 8004460:	689b      	ldr	r3, [r3, #8]
 8004462:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8004466:	687b      	ldr	r3, [r7, #4]
 8004468:	691b      	ldr	r3, [r3, #16]
 800446a:	00db      	lsls	r3, r3, #3
 800446c:	490e      	ldr	r1, [pc, #56]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 800446e:	4313      	orrs	r3, r2
 8004470:	608b      	str	r3, [r1, #8]
 8004472:	f000 f855 	bl	8004520 <HAL_RCC_GetSysClockFreq>
 8004476:	4601      	mov	r1, r0
 8004478:	4b0b      	ldr	r3, [pc, #44]	; (80044a8 <HAL_RCC_ClockConfig+0x1bc>)
 800447a:	689b      	ldr	r3, [r3, #8]
 800447c:	091b      	lsrs	r3, r3, #4
 800447e:	f003 030f 	and.w	r3, r3, #15
 8004482:	4a0a      	ldr	r2, [pc, #40]	; (80044ac <HAL_RCC_ClockConfig+0x1c0>)
 8004484:	5cd3      	ldrb	r3, [r2, r3]
 8004486:	fa21 f303 	lsr.w	r3, r1, r3
 800448a:	4a09      	ldr	r2, [pc, #36]	; (80044b0 <HAL_RCC_ClockConfig+0x1c4>)
 800448c:	6013      	str	r3, [r2, #0]
 800448e:	4b09      	ldr	r3, [pc, #36]	; (80044b4 <HAL_RCC_ClockConfig+0x1c8>)
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	4618      	mov	r0, r3
 8004494:	f7fe fdac 	bl	8002ff0 <HAL_InitTick>
 8004498:	2300      	movs	r3, #0
 800449a:	4618      	mov	r0, r3
 800449c:	3710      	adds	r7, #16
 800449e:	46bd      	mov	sp, r7
 80044a0:	bd80      	pop	{r7, pc}
 80044a2:	bf00      	nop
 80044a4:	40023c00 	.word	0x40023c00
 80044a8:	40023800 	.word	0x40023800
 80044ac:	08007ff4 	.word	0x08007ff4
 80044b0:	20000008 	.word	0x20000008
 80044b4:	2000000c 	.word	0x2000000c

080044b8 <HAL_RCC_GetHCLKFreq>:
 80044b8:	b480      	push	{r7}
 80044ba:	af00      	add	r7, sp, #0
 80044bc:	4b03      	ldr	r3, [pc, #12]	; (80044cc <HAL_RCC_GetHCLKFreq+0x14>)
 80044be:	681b      	ldr	r3, [r3, #0]
 80044c0:	4618      	mov	r0, r3
 80044c2:	46bd      	mov	sp, r7
 80044c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044c8:	4770      	bx	lr
 80044ca:	bf00      	nop
 80044cc:	20000008 	.word	0x20000008

080044d0 <HAL_RCC_GetPCLK1Freq>:
 80044d0:	b580      	push	{r7, lr}
 80044d2:	af00      	add	r7, sp, #0
 80044d4:	f7ff fff0 	bl	80044b8 <HAL_RCC_GetHCLKFreq>
 80044d8:	4601      	mov	r1, r0
 80044da:	4b05      	ldr	r3, [pc, #20]	; (80044f0 <HAL_RCC_GetPCLK1Freq+0x20>)
 80044dc:	689b      	ldr	r3, [r3, #8]
 80044de:	0a9b      	lsrs	r3, r3, #10
 80044e0:	f003 0307 	and.w	r3, r3, #7
 80044e4:	4a03      	ldr	r2, [pc, #12]	; (80044f4 <HAL_RCC_GetPCLK1Freq+0x24>)
 80044e6:	5cd3      	ldrb	r3, [r2, r3]
 80044e8:	fa21 f303 	lsr.w	r3, r1, r3
 80044ec:	4618      	mov	r0, r3
 80044ee:	bd80      	pop	{r7, pc}
 80044f0:	40023800 	.word	0x40023800
 80044f4:	08008004 	.word	0x08008004

080044f8 <HAL_RCC_GetPCLK2Freq>:
 80044f8:	b580      	push	{r7, lr}
 80044fa:	af00      	add	r7, sp, #0
 80044fc:	f7ff ffdc 	bl	80044b8 <HAL_RCC_GetHCLKFreq>
 8004500:	4601      	mov	r1, r0
 8004502:	4b05      	ldr	r3, [pc, #20]	; (8004518 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004504:	689b      	ldr	r3, [r3, #8]
 8004506:	0b5b      	lsrs	r3, r3, #13
 8004508:	f003 0307 	and.w	r3, r3, #7
 800450c:	4a03      	ldr	r2, [pc, #12]	; (800451c <HAL_RCC_GetPCLK2Freq+0x24>)
 800450e:	5cd3      	ldrb	r3, [r2, r3]
 8004510:	fa21 f303 	lsr.w	r3, r1, r3
 8004514:	4618      	mov	r0, r3
 8004516:	bd80      	pop	{r7, pc}
 8004518:	40023800 	.word	0x40023800
 800451c:	08008004 	.word	0x08008004

08004520 <HAL_RCC_GetSysClockFreq>:
 8004520:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004522:	b087      	sub	sp, #28
 8004524:	af00      	add	r7, sp, #0
 8004526:	2300      	movs	r3, #0
 8004528:	60fb      	str	r3, [r7, #12]
 800452a:	2300      	movs	r3, #0
 800452c:	617b      	str	r3, [r7, #20]
 800452e:	2300      	movs	r3, #0
 8004530:	60bb      	str	r3, [r7, #8]
 8004532:	2300      	movs	r3, #0
 8004534:	607b      	str	r3, [r7, #4]
 8004536:	2300      	movs	r3, #0
 8004538:	613b      	str	r3, [r7, #16]
 800453a:	4bc6      	ldr	r3, [pc, #792]	; (8004854 <HAL_RCC_GetSysClockFreq+0x334>)
 800453c:	689b      	ldr	r3, [r3, #8]
 800453e:	f003 030c 	and.w	r3, r3, #12
 8004542:	2b0c      	cmp	r3, #12
 8004544:	f200 817e 	bhi.w	8004844 <HAL_RCC_GetSysClockFreq+0x324>
 8004548:	a201      	add	r2, pc, #4	; (adr r2, 8004550 <HAL_RCC_GetSysClockFreq+0x30>)
 800454a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800454e:	bf00      	nop
 8004550:	08004585 	.word	0x08004585
 8004554:	08004845 	.word	0x08004845
 8004558:	08004845 	.word	0x08004845
 800455c:	08004845 	.word	0x08004845
 8004560:	0800458b 	.word	0x0800458b
 8004564:	08004845 	.word	0x08004845
 8004568:	08004845 	.word	0x08004845
 800456c:	08004845 	.word	0x08004845
 8004570:	08004591 	.word	0x08004591
 8004574:	08004845 	.word	0x08004845
 8004578:	08004845 	.word	0x08004845
 800457c:	08004845 	.word	0x08004845
 8004580:	080046ed 	.word	0x080046ed
 8004584:	4bb4      	ldr	r3, [pc, #720]	; (8004858 <HAL_RCC_GetSysClockFreq+0x338>)
 8004586:	613b      	str	r3, [r7, #16]
 8004588:	e15f      	b.n	800484a <HAL_RCC_GetSysClockFreq+0x32a>
 800458a:	4bb4      	ldr	r3, [pc, #720]	; (800485c <HAL_RCC_GetSysClockFreq+0x33c>)
 800458c:	613b      	str	r3, [r7, #16]
 800458e:	e15c      	b.n	800484a <HAL_RCC_GetSysClockFreq+0x32a>
 8004590:	4bb0      	ldr	r3, [pc, #704]	; (8004854 <HAL_RCC_GetSysClockFreq+0x334>)
 8004592:	685b      	ldr	r3, [r3, #4]
 8004594:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004598:	60fb      	str	r3, [r7, #12]
 800459a:	4bae      	ldr	r3, [pc, #696]	; (8004854 <HAL_RCC_GetSysClockFreq+0x334>)
 800459c:	685b      	ldr	r3, [r3, #4]
 800459e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80045a2:	2b00      	cmp	r3, #0
 80045a4:	d04a      	beq.n	800463c <HAL_RCC_GetSysClockFreq+0x11c>
 80045a6:	4bab      	ldr	r3, [pc, #684]	; (8004854 <HAL_RCC_GetSysClockFreq+0x334>)
 80045a8:	685b      	ldr	r3, [r3, #4]
 80045aa:	099b      	lsrs	r3, r3, #6
 80045ac:	f04f 0400 	mov.w	r4, #0
 80045b0:	f240 11ff 	movw	r1, #511	; 0x1ff
 80045b4:	f04f 0200 	mov.w	r2, #0
 80045b8:	ea03 0501 	and.w	r5, r3, r1
 80045bc:	ea04 0602 	and.w	r6, r4, r2
 80045c0:	4629      	mov	r1, r5
 80045c2:	4632      	mov	r2, r6
 80045c4:	f04f 0300 	mov.w	r3, #0
 80045c8:	f04f 0400 	mov.w	r4, #0
 80045cc:	0154      	lsls	r4, r2, #5
 80045ce:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 80045d2:	014b      	lsls	r3, r1, #5
 80045d4:	4619      	mov	r1, r3
 80045d6:	4622      	mov	r2, r4
 80045d8:	1b49      	subs	r1, r1, r5
 80045da:	eb62 0206 	sbc.w	r2, r2, r6
 80045de:	f04f 0300 	mov.w	r3, #0
 80045e2:	f04f 0400 	mov.w	r4, #0
 80045e6:	0194      	lsls	r4, r2, #6
 80045e8:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 80045ec:	018b      	lsls	r3, r1, #6
 80045ee:	1a5b      	subs	r3, r3, r1
 80045f0:	eb64 0402 	sbc.w	r4, r4, r2
 80045f4:	f04f 0100 	mov.w	r1, #0
 80045f8:	f04f 0200 	mov.w	r2, #0
 80045fc:	00e2      	lsls	r2, r4, #3
 80045fe:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8004602:	00d9      	lsls	r1, r3, #3
 8004604:	460b      	mov	r3, r1
 8004606:	4614      	mov	r4, r2
 8004608:	195b      	adds	r3, r3, r5
 800460a:	eb44 0406 	adc.w	r4, r4, r6
 800460e:	f04f 0100 	mov.w	r1, #0
 8004612:	f04f 0200 	mov.w	r2, #0
 8004616:	0262      	lsls	r2, r4, #9
 8004618:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
 800461c:	0259      	lsls	r1, r3, #9
 800461e:	460b      	mov	r3, r1
 8004620:	4614      	mov	r4, r2
 8004622:	4618      	mov	r0, r3
 8004624:	4621      	mov	r1, r4
 8004626:	68fb      	ldr	r3, [r7, #12]
 8004628:	f04f 0400 	mov.w	r4, #0
 800462c:	461a      	mov	r2, r3
 800462e:	4623      	mov	r3, r4
 8004630:	f7fc fae4 	bl	8000bfc <__aeabi_uldivmod>
 8004634:	4603      	mov	r3, r0
 8004636:	460c      	mov	r4, r1
 8004638:	617b      	str	r3, [r7, #20]
 800463a:	e049      	b.n	80046d0 <HAL_RCC_GetSysClockFreq+0x1b0>
 800463c:	4b85      	ldr	r3, [pc, #532]	; (8004854 <HAL_RCC_GetSysClockFreq+0x334>)
 800463e:	685b      	ldr	r3, [r3, #4]
 8004640:	099b      	lsrs	r3, r3, #6
 8004642:	f04f 0400 	mov.w	r4, #0
 8004646:	f240 11ff 	movw	r1, #511	; 0x1ff
 800464a:	f04f 0200 	mov.w	r2, #0
 800464e:	ea03 0501 	and.w	r5, r3, r1
 8004652:	ea04 0602 	and.w	r6, r4, r2
 8004656:	4629      	mov	r1, r5
 8004658:	4632      	mov	r2, r6
 800465a:	f04f 0300 	mov.w	r3, #0
 800465e:	f04f 0400 	mov.w	r4, #0
 8004662:	0154      	lsls	r4, r2, #5
 8004664:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8004668:	014b      	lsls	r3, r1, #5
 800466a:	4619      	mov	r1, r3
 800466c:	4622      	mov	r2, r4
 800466e:	1b49      	subs	r1, r1, r5
 8004670:	eb62 0206 	sbc.w	r2, r2, r6
 8004674:	f04f 0300 	mov.w	r3, #0
 8004678:	f04f 0400 	mov.w	r4, #0
 800467c:	0194      	lsls	r4, r2, #6
 800467e:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8004682:	018b      	lsls	r3, r1, #6
 8004684:	1a5b      	subs	r3, r3, r1
 8004686:	eb64 0402 	sbc.w	r4, r4, r2
 800468a:	f04f 0100 	mov.w	r1, #0
 800468e:	f04f 0200 	mov.w	r2, #0
 8004692:	00e2      	lsls	r2, r4, #3
 8004694:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8004698:	00d9      	lsls	r1, r3, #3
 800469a:	460b      	mov	r3, r1
 800469c:	4614      	mov	r4, r2
 800469e:	195b      	adds	r3, r3, r5
 80046a0:	eb44 0406 	adc.w	r4, r4, r6
 80046a4:	f04f 0100 	mov.w	r1, #0
 80046a8:	f04f 0200 	mov.w	r2, #0
 80046ac:	02a2      	lsls	r2, r4, #10
 80046ae:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 80046b2:	0299      	lsls	r1, r3, #10
 80046b4:	460b      	mov	r3, r1
 80046b6:	4614      	mov	r4, r2
 80046b8:	4618      	mov	r0, r3
 80046ba:	4621      	mov	r1, r4
 80046bc:	68fb      	ldr	r3, [r7, #12]
 80046be:	f04f 0400 	mov.w	r4, #0
 80046c2:	461a      	mov	r2, r3
 80046c4:	4623      	mov	r3, r4
 80046c6:	f7fc fa99 	bl	8000bfc <__aeabi_uldivmod>
 80046ca:	4603      	mov	r3, r0
 80046cc:	460c      	mov	r4, r1
 80046ce:	617b      	str	r3, [r7, #20]
 80046d0:	4b60      	ldr	r3, [pc, #384]	; (8004854 <HAL_RCC_GetSysClockFreq+0x334>)
 80046d2:	685b      	ldr	r3, [r3, #4]
 80046d4:	0c1b      	lsrs	r3, r3, #16
 80046d6:	f003 0303 	and.w	r3, r3, #3
 80046da:	3301      	adds	r3, #1
 80046dc:	005b      	lsls	r3, r3, #1
 80046de:	60bb      	str	r3, [r7, #8]
 80046e0:	697a      	ldr	r2, [r7, #20]
 80046e2:	68bb      	ldr	r3, [r7, #8]
 80046e4:	fbb2 f3f3 	udiv	r3, r2, r3
 80046e8:	613b      	str	r3, [r7, #16]
 80046ea:	e0ae      	b.n	800484a <HAL_RCC_GetSysClockFreq+0x32a>
 80046ec:	4b59      	ldr	r3, [pc, #356]	; (8004854 <HAL_RCC_GetSysClockFreq+0x334>)
 80046ee:	685b      	ldr	r3, [r3, #4]
 80046f0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80046f4:	60fb      	str	r3, [r7, #12]
 80046f6:	4b57      	ldr	r3, [pc, #348]	; (8004854 <HAL_RCC_GetSysClockFreq+0x334>)
 80046f8:	685b      	ldr	r3, [r3, #4]
 80046fa:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80046fe:	2b00      	cmp	r3, #0
 8004700:	d04a      	beq.n	8004798 <HAL_RCC_GetSysClockFreq+0x278>
 8004702:	4b54      	ldr	r3, [pc, #336]	; (8004854 <HAL_RCC_GetSysClockFreq+0x334>)
 8004704:	685b      	ldr	r3, [r3, #4]
 8004706:	099b      	lsrs	r3, r3, #6
 8004708:	f04f 0400 	mov.w	r4, #0
 800470c:	f240 11ff 	movw	r1, #511	; 0x1ff
 8004710:	f04f 0200 	mov.w	r2, #0
 8004714:	ea03 0501 	and.w	r5, r3, r1
 8004718:	ea04 0602 	and.w	r6, r4, r2
 800471c:	4629      	mov	r1, r5
 800471e:	4632      	mov	r2, r6
 8004720:	f04f 0300 	mov.w	r3, #0
 8004724:	f04f 0400 	mov.w	r4, #0
 8004728:	0154      	lsls	r4, r2, #5
 800472a:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 800472e:	014b      	lsls	r3, r1, #5
 8004730:	4619      	mov	r1, r3
 8004732:	4622      	mov	r2, r4
 8004734:	1b49      	subs	r1, r1, r5
 8004736:	eb62 0206 	sbc.w	r2, r2, r6
 800473a:	f04f 0300 	mov.w	r3, #0
 800473e:	f04f 0400 	mov.w	r4, #0
 8004742:	0194      	lsls	r4, r2, #6
 8004744:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8004748:	018b      	lsls	r3, r1, #6
 800474a:	1a5b      	subs	r3, r3, r1
 800474c:	eb64 0402 	sbc.w	r4, r4, r2
 8004750:	f04f 0100 	mov.w	r1, #0
 8004754:	f04f 0200 	mov.w	r2, #0
 8004758:	00e2      	lsls	r2, r4, #3
 800475a:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 800475e:	00d9      	lsls	r1, r3, #3
 8004760:	460b      	mov	r3, r1
 8004762:	4614      	mov	r4, r2
 8004764:	195b      	adds	r3, r3, r5
 8004766:	eb44 0406 	adc.w	r4, r4, r6
 800476a:	f04f 0100 	mov.w	r1, #0
 800476e:	f04f 0200 	mov.w	r2, #0
 8004772:	0262      	lsls	r2, r4, #9
 8004774:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
 8004778:	0259      	lsls	r1, r3, #9
 800477a:	460b      	mov	r3, r1
 800477c:	4614      	mov	r4, r2
 800477e:	4618      	mov	r0, r3
 8004780:	4621      	mov	r1, r4
 8004782:	68fb      	ldr	r3, [r7, #12]
 8004784:	f04f 0400 	mov.w	r4, #0
 8004788:	461a      	mov	r2, r3
 800478a:	4623      	mov	r3, r4
 800478c:	f7fc fa36 	bl	8000bfc <__aeabi_uldivmod>
 8004790:	4603      	mov	r3, r0
 8004792:	460c      	mov	r4, r1
 8004794:	617b      	str	r3, [r7, #20]
 8004796:	e049      	b.n	800482c <HAL_RCC_GetSysClockFreq+0x30c>
 8004798:	4b2e      	ldr	r3, [pc, #184]	; (8004854 <HAL_RCC_GetSysClockFreq+0x334>)
 800479a:	685b      	ldr	r3, [r3, #4]
 800479c:	099b      	lsrs	r3, r3, #6
 800479e:	f04f 0400 	mov.w	r4, #0
 80047a2:	f240 11ff 	movw	r1, #511	; 0x1ff
 80047a6:	f04f 0200 	mov.w	r2, #0
 80047aa:	ea03 0501 	and.w	r5, r3, r1
 80047ae:	ea04 0602 	and.w	r6, r4, r2
 80047b2:	4629      	mov	r1, r5
 80047b4:	4632      	mov	r2, r6
 80047b6:	f04f 0300 	mov.w	r3, #0
 80047ba:	f04f 0400 	mov.w	r4, #0
 80047be:	0154      	lsls	r4, r2, #5
 80047c0:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 80047c4:	014b      	lsls	r3, r1, #5
 80047c6:	4619      	mov	r1, r3
 80047c8:	4622      	mov	r2, r4
 80047ca:	1b49      	subs	r1, r1, r5
 80047cc:	eb62 0206 	sbc.w	r2, r2, r6
 80047d0:	f04f 0300 	mov.w	r3, #0
 80047d4:	f04f 0400 	mov.w	r4, #0
 80047d8:	0194      	lsls	r4, r2, #6
 80047da:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 80047de:	018b      	lsls	r3, r1, #6
 80047e0:	1a5b      	subs	r3, r3, r1
 80047e2:	eb64 0402 	sbc.w	r4, r4, r2
 80047e6:	f04f 0100 	mov.w	r1, #0
 80047ea:	f04f 0200 	mov.w	r2, #0
 80047ee:	00e2      	lsls	r2, r4, #3
 80047f0:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 80047f4:	00d9      	lsls	r1, r3, #3
 80047f6:	460b      	mov	r3, r1
 80047f8:	4614      	mov	r4, r2
 80047fa:	195b      	adds	r3, r3, r5
 80047fc:	eb44 0406 	adc.w	r4, r4, r6
 8004800:	f04f 0100 	mov.w	r1, #0
 8004804:	f04f 0200 	mov.w	r2, #0
 8004808:	02a2      	lsls	r2, r4, #10
 800480a:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 800480e:	0299      	lsls	r1, r3, #10
 8004810:	460b      	mov	r3, r1
 8004812:	4614      	mov	r4, r2
 8004814:	4618      	mov	r0, r3
 8004816:	4621      	mov	r1, r4
 8004818:	68fb      	ldr	r3, [r7, #12]
 800481a:	f04f 0400 	mov.w	r4, #0
 800481e:	461a      	mov	r2, r3
 8004820:	4623      	mov	r3, r4
 8004822:	f7fc f9eb 	bl	8000bfc <__aeabi_uldivmod>
 8004826:	4603      	mov	r3, r0
 8004828:	460c      	mov	r4, r1
 800482a:	617b      	str	r3, [r7, #20]
 800482c:	4b09      	ldr	r3, [pc, #36]	; (8004854 <HAL_RCC_GetSysClockFreq+0x334>)
 800482e:	685b      	ldr	r3, [r3, #4]
 8004830:	0f1b      	lsrs	r3, r3, #28
 8004832:	f003 0307 	and.w	r3, r3, #7
 8004836:	607b      	str	r3, [r7, #4]
 8004838:	697a      	ldr	r2, [r7, #20]
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	fbb2 f3f3 	udiv	r3, r2, r3
 8004840:	613b      	str	r3, [r7, #16]
 8004842:	e002      	b.n	800484a <HAL_RCC_GetSysClockFreq+0x32a>
 8004844:	4b04      	ldr	r3, [pc, #16]	; (8004858 <HAL_RCC_GetSysClockFreq+0x338>)
 8004846:	613b      	str	r3, [r7, #16]
 8004848:	bf00      	nop
 800484a:	693b      	ldr	r3, [r7, #16]
 800484c:	4618      	mov	r0, r3
 800484e:	371c      	adds	r7, #28
 8004850:	46bd      	mov	sp, r7
 8004852:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004854:	40023800 	.word	0x40023800
 8004858:	00f42400 	.word	0x00f42400
 800485c:	007a1200 	.word	0x007a1200

08004860 <HAL_RCC_OscConfig>:
 8004860:	b580      	push	{r7, lr}
 8004862:	b086      	sub	sp, #24
 8004864:	af00      	add	r7, sp, #0
 8004866:	6078      	str	r0, [r7, #4]
 8004868:	2300      	movs	r3, #0
 800486a:	613b      	str	r3, [r7, #16]
 800486c:	687b      	ldr	r3, [r7, #4]
 800486e:	681b      	ldr	r3, [r3, #0]
 8004870:	f003 0301 	and.w	r3, r3, #1
 8004874:	2b00      	cmp	r3, #0
 8004876:	f000 8083 	beq.w	8004980 <HAL_RCC_OscConfig+0x120>
 800487a:	4b95      	ldr	r3, [pc, #596]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 800487c:	689b      	ldr	r3, [r3, #8]
 800487e:	f003 030c 	and.w	r3, r3, #12
 8004882:	2b04      	cmp	r3, #4
 8004884:	d019      	beq.n	80048ba <HAL_RCC_OscConfig+0x5a>
 8004886:	4b92      	ldr	r3, [pc, #584]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 8004888:	689b      	ldr	r3, [r3, #8]
 800488a:	f003 030c 	and.w	r3, r3, #12
 800488e:	2b08      	cmp	r3, #8
 8004890:	d106      	bne.n	80048a0 <HAL_RCC_OscConfig+0x40>
 8004892:	4b8f      	ldr	r3, [pc, #572]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 8004894:	685b      	ldr	r3, [r3, #4]
 8004896:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800489a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800489e:	d00c      	beq.n	80048ba <HAL_RCC_OscConfig+0x5a>
 80048a0:	4b8b      	ldr	r3, [pc, #556]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 80048a2:	689b      	ldr	r3, [r3, #8]
 80048a4:	f003 030c 	and.w	r3, r3, #12
 80048a8:	2b0c      	cmp	r3, #12
 80048aa:	d112      	bne.n	80048d2 <HAL_RCC_OscConfig+0x72>
 80048ac:	4b88      	ldr	r3, [pc, #544]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 80048ae:	685b      	ldr	r3, [r3, #4]
 80048b0:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80048b4:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80048b8:	d10b      	bne.n	80048d2 <HAL_RCC_OscConfig+0x72>
 80048ba:	4b85      	ldr	r3, [pc, #532]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 80048bc:	681b      	ldr	r3, [r3, #0]
 80048be:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80048c2:	2b00      	cmp	r3, #0
 80048c4:	d05b      	beq.n	800497e <HAL_RCC_OscConfig+0x11e>
 80048c6:	687b      	ldr	r3, [r7, #4]
 80048c8:	685b      	ldr	r3, [r3, #4]
 80048ca:	2b00      	cmp	r3, #0
 80048cc:	d157      	bne.n	800497e <HAL_RCC_OscConfig+0x11e>
 80048ce:	2301      	movs	r3, #1
 80048d0:	e216      	b.n	8004d00 <HAL_RCC_OscConfig+0x4a0>
 80048d2:	687b      	ldr	r3, [r7, #4]
 80048d4:	685b      	ldr	r3, [r3, #4]
 80048d6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80048da:	d106      	bne.n	80048ea <HAL_RCC_OscConfig+0x8a>
 80048dc:	4b7c      	ldr	r3, [pc, #496]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 80048de:	681b      	ldr	r3, [r3, #0]
 80048e0:	4a7b      	ldr	r2, [pc, #492]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 80048e2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80048e6:	6013      	str	r3, [r2, #0]
 80048e8:	e01d      	b.n	8004926 <HAL_RCC_OscConfig+0xc6>
 80048ea:	687b      	ldr	r3, [r7, #4]
 80048ec:	685b      	ldr	r3, [r3, #4]
 80048ee:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80048f2:	d10c      	bne.n	800490e <HAL_RCC_OscConfig+0xae>
 80048f4:	4b76      	ldr	r3, [pc, #472]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 80048f6:	681b      	ldr	r3, [r3, #0]
 80048f8:	4a75      	ldr	r2, [pc, #468]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 80048fa:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80048fe:	6013      	str	r3, [r2, #0]
 8004900:	4b73      	ldr	r3, [pc, #460]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 8004902:	681b      	ldr	r3, [r3, #0]
 8004904:	4a72      	ldr	r2, [pc, #456]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 8004906:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800490a:	6013      	str	r3, [r2, #0]
 800490c:	e00b      	b.n	8004926 <HAL_RCC_OscConfig+0xc6>
 800490e:	4b70      	ldr	r3, [pc, #448]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 8004910:	681b      	ldr	r3, [r3, #0]
 8004912:	4a6f      	ldr	r2, [pc, #444]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 8004914:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004918:	6013      	str	r3, [r2, #0]
 800491a:	4b6d      	ldr	r3, [pc, #436]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 800491c:	681b      	ldr	r3, [r3, #0]
 800491e:	4a6c      	ldr	r2, [pc, #432]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 8004920:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004924:	6013      	str	r3, [r2, #0]
 8004926:	687b      	ldr	r3, [r7, #4]
 8004928:	685b      	ldr	r3, [r3, #4]
 800492a:	2b00      	cmp	r3, #0
 800492c:	d013      	beq.n	8004956 <HAL_RCC_OscConfig+0xf6>
 800492e:	f7fe fba3 	bl	8003078 <HAL_GetTick>
 8004932:	6138      	str	r0, [r7, #16]
 8004934:	e008      	b.n	8004948 <HAL_RCC_OscConfig+0xe8>
 8004936:	f7fe fb9f 	bl	8003078 <HAL_GetTick>
 800493a:	4602      	mov	r2, r0
 800493c:	693b      	ldr	r3, [r7, #16]
 800493e:	1ad3      	subs	r3, r2, r3
 8004940:	2b64      	cmp	r3, #100	; 0x64
 8004942:	d901      	bls.n	8004948 <HAL_RCC_OscConfig+0xe8>
 8004944:	2303      	movs	r3, #3
 8004946:	e1db      	b.n	8004d00 <HAL_RCC_OscConfig+0x4a0>
 8004948:	4b61      	ldr	r3, [pc, #388]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 800494a:	681b      	ldr	r3, [r3, #0]
 800494c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004950:	2b00      	cmp	r3, #0
 8004952:	d0f0      	beq.n	8004936 <HAL_RCC_OscConfig+0xd6>
 8004954:	e014      	b.n	8004980 <HAL_RCC_OscConfig+0x120>
 8004956:	f7fe fb8f 	bl	8003078 <HAL_GetTick>
 800495a:	6138      	str	r0, [r7, #16]
 800495c:	e008      	b.n	8004970 <HAL_RCC_OscConfig+0x110>
 800495e:	f7fe fb8b 	bl	8003078 <HAL_GetTick>
 8004962:	4602      	mov	r2, r0
 8004964:	693b      	ldr	r3, [r7, #16]
 8004966:	1ad3      	subs	r3, r2, r3
 8004968:	2b64      	cmp	r3, #100	; 0x64
 800496a:	d901      	bls.n	8004970 <HAL_RCC_OscConfig+0x110>
 800496c:	2303      	movs	r3, #3
 800496e:	e1c7      	b.n	8004d00 <HAL_RCC_OscConfig+0x4a0>
 8004970:	4b57      	ldr	r3, [pc, #348]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 8004972:	681b      	ldr	r3, [r3, #0]
 8004974:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004978:	2b00      	cmp	r3, #0
 800497a:	d1f0      	bne.n	800495e <HAL_RCC_OscConfig+0xfe>
 800497c:	e000      	b.n	8004980 <HAL_RCC_OscConfig+0x120>
 800497e:	bf00      	nop
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	681b      	ldr	r3, [r3, #0]
 8004984:	f003 0302 	and.w	r3, r3, #2
 8004988:	2b00      	cmp	r3, #0
 800498a:	d06f      	beq.n	8004a6c <HAL_RCC_OscConfig+0x20c>
 800498c:	4b50      	ldr	r3, [pc, #320]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 800498e:	689b      	ldr	r3, [r3, #8]
 8004990:	f003 030c 	and.w	r3, r3, #12
 8004994:	2b00      	cmp	r3, #0
 8004996:	d017      	beq.n	80049c8 <HAL_RCC_OscConfig+0x168>
 8004998:	4b4d      	ldr	r3, [pc, #308]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 800499a:	689b      	ldr	r3, [r3, #8]
 800499c:	f003 030c 	and.w	r3, r3, #12
 80049a0:	2b08      	cmp	r3, #8
 80049a2:	d105      	bne.n	80049b0 <HAL_RCC_OscConfig+0x150>
 80049a4:	4b4a      	ldr	r3, [pc, #296]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 80049a6:	685b      	ldr	r3, [r3, #4]
 80049a8:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80049ac:	2b00      	cmp	r3, #0
 80049ae:	d00b      	beq.n	80049c8 <HAL_RCC_OscConfig+0x168>
 80049b0:	4b47      	ldr	r3, [pc, #284]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 80049b2:	689b      	ldr	r3, [r3, #8]
 80049b4:	f003 030c 	and.w	r3, r3, #12
 80049b8:	2b0c      	cmp	r3, #12
 80049ba:	d11c      	bne.n	80049f6 <HAL_RCC_OscConfig+0x196>
 80049bc:	4b44      	ldr	r3, [pc, #272]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 80049be:	685b      	ldr	r3, [r3, #4]
 80049c0:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80049c4:	2b00      	cmp	r3, #0
 80049c6:	d116      	bne.n	80049f6 <HAL_RCC_OscConfig+0x196>
 80049c8:	4b41      	ldr	r3, [pc, #260]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 80049ca:	681b      	ldr	r3, [r3, #0]
 80049cc:	f003 0302 	and.w	r3, r3, #2
 80049d0:	2b00      	cmp	r3, #0
 80049d2:	d005      	beq.n	80049e0 <HAL_RCC_OscConfig+0x180>
 80049d4:	687b      	ldr	r3, [r7, #4]
 80049d6:	68db      	ldr	r3, [r3, #12]
 80049d8:	2b01      	cmp	r3, #1
 80049da:	d001      	beq.n	80049e0 <HAL_RCC_OscConfig+0x180>
 80049dc:	2301      	movs	r3, #1
 80049de:	e18f      	b.n	8004d00 <HAL_RCC_OscConfig+0x4a0>
 80049e0:	4b3b      	ldr	r3, [pc, #236]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 80049e2:	681b      	ldr	r3, [r3, #0]
 80049e4:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80049e8:	687b      	ldr	r3, [r7, #4]
 80049ea:	691b      	ldr	r3, [r3, #16]
 80049ec:	00db      	lsls	r3, r3, #3
 80049ee:	4938      	ldr	r1, [pc, #224]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 80049f0:	4313      	orrs	r3, r2
 80049f2:	600b      	str	r3, [r1, #0]
 80049f4:	e03a      	b.n	8004a6c <HAL_RCC_OscConfig+0x20c>
 80049f6:	687b      	ldr	r3, [r7, #4]
 80049f8:	68db      	ldr	r3, [r3, #12]
 80049fa:	2b00      	cmp	r3, #0
 80049fc:	d020      	beq.n	8004a40 <HAL_RCC_OscConfig+0x1e0>
 80049fe:	4b35      	ldr	r3, [pc, #212]	; (8004ad4 <HAL_RCC_OscConfig+0x274>)
 8004a00:	2201      	movs	r2, #1
 8004a02:	601a      	str	r2, [r3, #0]
 8004a04:	f7fe fb38 	bl	8003078 <HAL_GetTick>
 8004a08:	6138      	str	r0, [r7, #16]
 8004a0a:	e008      	b.n	8004a1e <HAL_RCC_OscConfig+0x1be>
 8004a0c:	f7fe fb34 	bl	8003078 <HAL_GetTick>
 8004a10:	4602      	mov	r2, r0
 8004a12:	693b      	ldr	r3, [r7, #16]
 8004a14:	1ad3      	subs	r3, r2, r3
 8004a16:	2b02      	cmp	r3, #2
 8004a18:	d901      	bls.n	8004a1e <HAL_RCC_OscConfig+0x1be>
 8004a1a:	2303      	movs	r3, #3
 8004a1c:	e170      	b.n	8004d00 <HAL_RCC_OscConfig+0x4a0>
 8004a1e:	4b2c      	ldr	r3, [pc, #176]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 8004a20:	681b      	ldr	r3, [r3, #0]
 8004a22:	f003 0302 	and.w	r3, r3, #2
 8004a26:	2b00      	cmp	r3, #0
 8004a28:	d0f0      	beq.n	8004a0c <HAL_RCC_OscConfig+0x1ac>
 8004a2a:	4b29      	ldr	r3, [pc, #164]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 8004a2c:	681b      	ldr	r3, [r3, #0]
 8004a2e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004a32:	687b      	ldr	r3, [r7, #4]
 8004a34:	691b      	ldr	r3, [r3, #16]
 8004a36:	00db      	lsls	r3, r3, #3
 8004a38:	4925      	ldr	r1, [pc, #148]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 8004a3a:	4313      	orrs	r3, r2
 8004a3c:	600b      	str	r3, [r1, #0]
 8004a3e:	e015      	b.n	8004a6c <HAL_RCC_OscConfig+0x20c>
 8004a40:	4b24      	ldr	r3, [pc, #144]	; (8004ad4 <HAL_RCC_OscConfig+0x274>)
 8004a42:	2200      	movs	r2, #0
 8004a44:	601a      	str	r2, [r3, #0]
 8004a46:	f7fe fb17 	bl	8003078 <HAL_GetTick>
 8004a4a:	6138      	str	r0, [r7, #16]
 8004a4c:	e008      	b.n	8004a60 <HAL_RCC_OscConfig+0x200>
 8004a4e:	f7fe fb13 	bl	8003078 <HAL_GetTick>
 8004a52:	4602      	mov	r2, r0
 8004a54:	693b      	ldr	r3, [r7, #16]
 8004a56:	1ad3      	subs	r3, r2, r3
 8004a58:	2b02      	cmp	r3, #2
 8004a5a:	d901      	bls.n	8004a60 <HAL_RCC_OscConfig+0x200>
 8004a5c:	2303      	movs	r3, #3
 8004a5e:	e14f      	b.n	8004d00 <HAL_RCC_OscConfig+0x4a0>
 8004a60:	4b1b      	ldr	r3, [pc, #108]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 8004a62:	681b      	ldr	r3, [r3, #0]
 8004a64:	f003 0302 	and.w	r3, r3, #2
 8004a68:	2b00      	cmp	r3, #0
 8004a6a:	d1f0      	bne.n	8004a4e <HAL_RCC_OscConfig+0x1ee>
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	681b      	ldr	r3, [r3, #0]
 8004a70:	f003 0308 	and.w	r3, r3, #8
 8004a74:	2b00      	cmp	r3, #0
 8004a76:	d037      	beq.n	8004ae8 <HAL_RCC_OscConfig+0x288>
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	695b      	ldr	r3, [r3, #20]
 8004a7c:	2b00      	cmp	r3, #0
 8004a7e:	d016      	beq.n	8004aae <HAL_RCC_OscConfig+0x24e>
 8004a80:	4b15      	ldr	r3, [pc, #84]	; (8004ad8 <HAL_RCC_OscConfig+0x278>)
 8004a82:	2201      	movs	r2, #1
 8004a84:	601a      	str	r2, [r3, #0]
 8004a86:	f7fe faf7 	bl	8003078 <HAL_GetTick>
 8004a8a:	6138      	str	r0, [r7, #16]
 8004a8c:	e008      	b.n	8004aa0 <HAL_RCC_OscConfig+0x240>
 8004a8e:	f7fe faf3 	bl	8003078 <HAL_GetTick>
 8004a92:	4602      	mov	r2, r0
 8004a94:	693b      	ldr	r3, [r7, #16]
 8004a96:	1ad3      	subs	r3, r2, r3
 8004a98:	2b02      	cmp	r3, #2
 8004a9a:	d901      	bls.n	8004aa0 <HAL_RCC_OscConfig+0x240>
 8004a9c:	2303      	movs	r3, #3
 8004a9e:	e12f      	b.n	8004d00 <HAL_RCC_OscConfig+0x4a0>
 8004aa0:	4b0b      	ldr	r3, [pc, #44]	; (8004ad0 <HAL_RCC_OscConfig+0x270>)
 8004aa2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004aa4:	f003 0302 	and.w	r3, r3, #2
 8004aa8:	2b00      	cmp	r3, #0
 8004aaa:	d0f0      	beq.n	8004a8e <HAL_RCC_OscConfig+0x22e>
 8004aac:	e01c      	b.n	8004ae8 <HAL_RCC_OscConfig+0x288>
 8004aae:	4b0a      	ldr	r3, [pc, #40]	; (8004ad8 <HAL_RCC_OscConfig+0x278>)
 8004ab0:	2200      	movs	r2, #0
 8004ab2:	601a      	str	r2, [r3, #0]
 8004ab4:	f7fe fae0 	bl	8003078 <HAL_GetTick>
 8004ab8:	6138      	str	r0, [r7, #16]
 8004aba:	e00f      	b.n	8004adc <HAL_RCC_OscConfig+0x27c>
 8004abc:	f7fe fadc 	bl	8003078 <HAL_GetTick>
 8004ac0:	4602      	mov	r2, r0
 8004ac2:	693b      	ldr	r3, [r7, #16]
 8004ac4:	1ad3      	subs	r3, r2, r3
 8004ac6:	2b02      	cmp	r3, #2
 8004ac8:	d908      	bls.n	8004adc <HAL_RCC_OscConfig+0x27c>
 8004aca:	2303      	movs	r3, #3
 8004acc:	e118      	b.n	8004d00 <HAL_RCC_OscConfig+0x4a0>
 8004ace:	bf00      	nop
 8004ad0:	40023800 	.word	0x40023800
 8004ad4:	42470000 	.word	0x42470000
 8004ad8:	42470e80 	.word	0x42470e80
 8004adc:	4b8a      	ldr	r3, [pc, #552]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004ade:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004ae0:	f003 0302 	and.w	r3, r3, #2
 8004ae4:	2b00      	cmp	r3, #0
 8004ae6:	d1e9      	bne.n	8004abc <HAL_RCC_OscConfig+0x25c>
 8004ae8:	687b      	ldr	r3, [r7, #4]
 8004aea:	681b      	ldr	r3, [r3, #0]
 8004aec:	f003 0304 	and.w	r3, r3, #4
 8004af0:	2b00      	cmp	r3, #0
 8004af2:	f000 8097 	beq.w	8004c24 <HAL_RCC_OscConfig+0x3c4>
 8004af6:	2300      	movs	r3, #0
 8004af8:	75fb      	strb	r3, [r7, #23]
 8004afa:	4b83      	ldr	r3, [pc, #524]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004afc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004afe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004b02:	2b00      	cmp	r3, #0
 8004b04:	d10f      	bne.n	8004b26 <HAL_RCC_OscConfig+0x2c6>
 8004b06:	2300      	movs	r3, #0
 8004b08:	60fb      	str	r3, [r7, #12]
 8004b0a:	4b7f      	ldr	r3, [pc, #508]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004b0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b0e:	4a7e      	ldr	r2, [pc, #504]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004b10:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004b14:	6413      	str	r3, [r2, #64]	; 0x40
 8004b16:	4b7c      	ldr	r3, [pc, #496]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004b18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b1a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004b1e:	60fb      	str	r3, [r7, #12]
 8004b20:	68fb      	ldr	r3, [r7, #12]
 8004b22:	2301      	movs	r3, #1
 8004b24:	75fb      	strb	r3, [r7, #23]
 8004b26:	4b79      	ldr	r3, [pc, #484]	; (8004d0c <HAL_RCC_OscConfig+0x4ac>)
 8004b28:	681b      	ldr	r3, [r3, #0]
 8004b2a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b2e:	2b00      	cmp	r3, #0
 8004b30:	d118      	bne.n	8004b64 <HAL_RCC_OscConfig+0x304>
 8004b32:	4b76      	ldr	r3, [pc, #472]	; (8004d0c <HAL_RCC_OscConfig+0x4ac>)
 8004b34:	681b      	ldr	r3, [r3, #0]
 8004b36:	4a75      	ldr	r2, [pc, #468]	; (8004d0c <HAL_RCC_OscConfig+0x4ac>)
 8004b38:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004b3c:	6013      	str	r3, [r2, #0]
 8004b3e:	f7fe fa9b 	bl	8003078 <HAL_GetTick>
 8004b42:	6138      	str	r0, [r7, #16]
 8004b44:	e008      	b.n	8004b58 <HAL_RCC_OscConfig+0x2f8>
 8004b46:	f7fe fa97 	bl	8003078 <HAL_GetTick>
 8004b4a:	4602      	mov	r2, r0
 8004b4c:	693b      	ldr	r3, [r7, #16]
 8004b4e:	1ad3      	subs	r3, r2, r3
 8004b50:	2b02      	cmp	r3, #2
 8004b52:	d901      	bls.n	8004b58 <HAL_RCC_OscConfig+0x2f8>
 8004b54:	2303      	movs	r3, #3
 8004b56:	e0d3      	b.n	8004d00 <HAL_RCC_OscConfig+0x4a0>
 8004b58:	4b6c      	ldr	r3, [pc, #432]	; (8004d0c <HAL_RCC_OscConfig+0x4ac>)
 8004b5a:	681b      	ldr	r3, [r3, #0]
 8004b5c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b60:	2b00      	cmp	r3, #0
 8004b62:	d0f0      	beq.n	8004b46 <HAL_RCC_OscConfig+0x2e6>
 8004b64:	687b      	ldr	r3, [r7, #4]
 8004b66:	689b      	ldr	r3, [r3, #8]
 8004b68:	2b01      	cmp	r3, #1
 8004b6a:	d106      	bne.n	8004b7a <HAL_RCC_OscConfig+0x31a>
 8004b6c:	4b66      	ldr	r3, [pc, #408]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004b6e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004b70:	4a65      	ldr	r2, [pc, #404]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004b72:	f043 0301 	orr.w	r3, r3, #1
 8004b76:	6713      	str	r3, [r2, #112]	; 0x70
 8004b78:	e01c      	b.n	8004bb4 <HAL_RCC_OscConfig+0x354>
 8004b7a:	687b      	ldr	r3, [r7, #4]
 8004b7c:	689b      	ldr	r3, [r3, #8]
 8004b7e:	2b05      	cmp	r3, #5
 8004b80:	d10c      	bne.n	8004b9c <HAL_RCC_OscConfig+0x33c>
 8004b82:	4b61      	ldr	r3, [pc, #388]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004b84:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004b86:	4a60      	ldr	r2, [pc, #384]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004b88:	f043 0304 	orr.w	r3, r3, #4
 8004b8c:	6713      	str	r3, [r2, #112]	; 0x70
 8004b8e:	4b5e      	ldr	r3, [pc, #376]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004b90:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004b92:	4a5d      	ldr	r2, [pc, #372]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004b94:	f043 0301 	orr.w	r3, r3, #1
 8004b98:	6713      	str	r3, [r2, #112]	; 0x70
 8004b9a:	e00b      	b.n	8004bb4 <HAL_RCC_OscConfig+0x354>
 8004b9c:	4b5a      	ldr	r3, [pc, #360]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004b9e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004ba0:	4a59      	ldr	r2, [pc, #356]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004ba2:	f023 0301 	bic.w	r3, r3, #1
 8004ba6:	6713      	str	r3, [r2, #112]	; 0x70
 8004ba8:	4b57      	ldr	r3, [pc, #348]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004baa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004bac:	4a56      	ldr	r2, [pc, #344]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004bae:	f023 0304 	bic.w	r3, r3, #4
 8004bb2:	6713      	str	r3, [r2, #112]	; 0x70
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	689b      	ldr	r3, [r3, #8]
 8004bb8:	2b00      	cmp	r3, #0
 8004bba:	d015      	beq.n	8004be8 <HAL_RCC_OscConfig+0x388>
 8004bbc:	f7fe fa5c 	bl	8003078 <HAL_GetTick>
 8004bc0:	6138      	str	r0, [r7, #16]
 8004bc2:	e00a      	b.n	8004bda <HAL_RCC_OscConfig+0x37a>
 8004bc4:	f7fe fa58 	bl	8003078 <HAL_GetTick>
 8004bc8:	4602      	mov	r2, r0
 8004bca:	693b      	ldr	r3, [r7, #16]
 8004bcc:	1ad3      	subs	r3, r2, r3
 8004bce:	f241 3288 	movw	r2, #5000	; 0x1388
 8004bd2:	4293      	cmp	r3, r2
 8004bd4:	d901      	bls.n	8004bda <HAL_RCC_OscConfig+0x37a>
 8004bd6:	2303      	movs	r3, #3
 8004bd8:	e092      	b.n	8004d00 <HAL_RCC_OscConfig+0x4a0>
 8004bda:	4b4b      	ldr	r3, [pc, #300]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004bdc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004bde:	f003 0302 	and.w	r3, r3, #2
 8004be2:	2b00      	cmp	r3, #0
 8004be4:	d0ee      	beq.n	8004bc4 <HAL_RCC_OscConfig+0x364>
 8004be6:	e014      	b.n	8004c12 <HAL_RCC_OscConfig+0x3b2>
 8004be8:	f7fe fa46 	bl	8003078 <HAL_GetTick>
 8004bec:	6138      	str	r0, [r7, #16]
 8004bee:	e00a      	b.n	8004c06 <HAL_RCC_OscConfig+0x3a6>
 8004bf0:	f7fe fa42 	bl	8003078 <HAL_GetTick>
 8004bf4:	4602      	mov	r2, r0
 8004bf6:	693b      	ldr	r3, [r7, #16]
 8004bf8:	1ad3      	subs	r3, r2, r3
 8004bfa:	f241 3288 	movw	r2, #5000	; 0x1388
 8004bfe:	4293      	cmp	r3, r2
 8004c00:	d901      	bls.n	8004c06 <HAL_RCC_OscConfig+0x3a6>
 8004c02:	2303      	movs	r3, #3
 8004c04:	e07c      	b.n	8004d00 <HAL_RCC_OscConfig+0x4a0>
 8004c06:	4b40      	ldr	r3, [pc, #256]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004c08:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004c0a:	f003 0302 	and.w	r3, r3, #2
 8004c0e:	2b00      	cmp	r3, #0
 8004c10:	d1ee      	bne.n	8004bf0 <HAL_RCC_OscConfig+0x390>
 8004c12:	7dfb      	ldrb	r3, [r7, #23]
 8004c14:	2b01      	cmp	r3, #1
 8004c16:	d105      	bne.n	8004c24 <HAL_RCC_OscConfig+0x3c4>
 8004c18:	4b3b      	ldr	r3, [pc, #236]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004c1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c1c:	4a3a      	ldr	r2, [pc, #232]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004c1e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004c22:	6413      	str	r3, [r2, #64]	; 0x40
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	699b      	ldr	r3, [r3, #24]
 8004c28:	2b00      	cmp	r3, #0
 8004c2a:	d068      	beq.n	8004cfe <HAL_RCC_OscConfig+0x49e>
 8004c2c:	4b36      	ldr	r3, [pc, #216]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004c2e:	689b      	ldr	r3, [r3, #8]
 8004c30:	f003 030c 	and.w	r3, r3, #12
 8004c34:	2b08      	cmp	r3, #8
 8004c36:	d060      	beq.n	8004cfa <HAL_RCC_OscConfig+0x49a>
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	699b      	ldr	r3, [r3, #24]
 8004c3c:	2b02      	cmp	r3, #2
 8004c3e:	d145      	bne.n	8004ccc <HAL_RCC_OscConfig+0x46c>
 8004c40:	4b33      	ldr	r3, [pc, #204]	; (8004d10 <HAL_RCC_OscConfig+0x4b0>)
 8004c42:	2200      	movs	r2, #0
 8004c44:	601a      	str	r2, [r3, #0]
 8004c46:	f7fe fa17 	bl	8003078 <HAL_GetTick>
 8004c4a:	6138      	str	r0, [r7, #16]
 8004c4c:	e008      	b.n	8004c60 <HAL_RCC_OscConfig+0x400>
 8004c4e:	f7fe fa13 	bl	8003078 <HAL_GetTick>
 8004c52:	4602      	mov	r2, r0
 8004c54:	693b      	ldr	r3, [r7, #16]
 8004c56:	1ad3      	subs	r3, r2, r3
 8004c58:	2b02      	cmp	r3, #2
 8004c5a:	d901      	bls.n	8004c60 <HAL_RCC_OscConfig+0x400>
 8004c5c:	2303      	movs	r3, #3
 8004c5e:	e04f      	b.n	8004d00 <HAL_RCC_OscConfig+0x4a0>
 8004c60:	4b29      	ldr	r3, [pc, #164]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004c62:	681b      	ldr	r3, [r3, #0]
 8004c64:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004c68:	2b00      	cmp	r3, #0
 8004c6a:	d1f0      	bne.n	8004c4e <HAL_RCC_OscConfig+0x3ee>
 8004c6c:	687b      	ldr	r3, [r7, #4]
 8004c6e:	69da      	ldr	r2, [r3, #28]
 8004c70:	687b      	ldr	r3, [r7, #4]
 8004c72:	6a1b      	ldr	r3, [r3, #32]
 8004c74:	431a      	orrs	r2, r3
 8004c76:	687b      	ldr	r3, [r7, #4]
 8004c78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c7a:	019b      	lsls	r3, r3, #6
 8004c7c:	431a      	orrs	r2, r3
 8004c7e:	687b      	ldr	r3, [r7, #4]
 8004c80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004c82:	085b      	lsrs	r3, r3, #1
 8004c84:	3b01      	subs	r3, #1
 8004c86:	041b      	lsls	r3, r3, #16
 8004c88:	431a      	orrs	r2, r3
 8004c8a:	687b      	ldr	r3, [r7, #4]
 8004c8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004c8e:	061b      	lsls	r3, r3, #24
 8004c90:	431a      	orrs	r2, r3
 8004c92:	687b      	ldr	r3, [r7, #4]
 8004c94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c96:	071b      	lsls	r3, r3, #28
 8004c98:	491b      	ldr	r1, [pc, #108]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004c9a:	4313      	orrs	r3, r2
 8004c9c:	604b      	str	r3, [r1, #4]
 8004c9e:	4b1c      	ldr	r3, [pc, #112]	; (8004d10 <HAL_RCC_OscConfig+0x4b0>)
 8004ca0:	2201      	movs	r2, #1
 8004ca2:	601a      	str	r2, [r3, #0]
 8004ca4:	f7fe f9e8 	bl	8003078 <HAL_GetTick>
 8004ca8:	6138      	str	r0, [r7, #16]
 8004caa:	e008      	b.n	8004cbe <HAL_RCC_OscConfig+0x45e>
 8004cac:	f7fe f9e4 	bl	8003078 <HAL_GetTick>
 8004cb0:	4602      	mov	r2, r0
 8004cb2:	693b      	ldr	r3, [r7, #16]
 8004cb4:	1ad3      	subs	r3, r2, r3
 8004cb6:	2b02      	cmp	r3, #2
 8004cb8:	d901      	bls.n	8004cbe <HAL_RCC_OscConfig+0x45e>
 8004cba:	2303      	movs	r3, #3
 8004cbc:	e020      	b.n	8004d00 <HAL_RCC_OscConfig+0x4a0>
 8004cbe:	4b12      	ldr	r3, [pc, #72]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004cc6:	2b00      	cmp	r3, #0
 8004cc8:	d0f0      	beq.n	8004cac <HAL_RCC_OscConfig+0x44c>
 8004cca:	e018      	b.n	8004cfe <HAL_RCC_OscConfig+0x49e>
 8004ccc:	4b10      	ldr	r3, [pc, #64]	; (8004d10 <HAL_RCC_OscConfig+0x4b0>)
 8004cce:	2200      	movs	r2, #0
 8004cd0:	601a      	str	r2, [r3, #0]
 8004cd2:	f7fe f9d1 	bl	8003078 <HAL_GetTick>
 8004cd6:	6138      	str	r0, [r7, #16]
 8004cd8:	e008      	b.n	8004cec <HAL_RCC_OscConfig+0x48c>
 8004cda:	f7fe f9cd 	bl	8003078 <HAL_GetTick>
 8004cde:	4602      	mov	r2, r0
 8004ce0:	693b      	ldr	r3, [r7, #16]
 8004ce2:	1ad3      	subs	r3, r2, r3
 8004ce4:	2b02      	cmp	r3, #2
 8004ce6:	d901      	bls.n	8004cec <HAL_RCC_OscConfig+0x48c>
 8004ce8:	2303      	movs	r3, #3
 8004cea:	e009      	b.n	8004d00 <HAL_RCC_OscConfig+0x4a0>
 8004cec:	4b06      	ldr	r3, [pc, #24]	; (8004d08 <HAL_RCC_OscConfig+0x4a8>)
 8004cee:	681b      	ldr	r3, [r3, #0]
 8004cf0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004cf4:	2b00      	cmp	r3, #0
 8004cf6:	d1f0      	bne.n	8004cda <HAL_RCC_OscConfig+0x47a>
 8004cf8:	e001      	b.n	8004cfe <HAL_RCC_OscConfig+0x49e>
 8004cfa:	2301      	movs	r3, #1
 8004cfc:	e000      	b.n	8004d00 <HAL_RCC_OscConfig+0x4a0>
 8004cfe:	2300      	movs	r3, #0
 8004d00:	4618      	mov	r0, r3
 8004d02:	3718      	adds	r7, #24
 8004d04:	46bd      	mov	sp, r7
 8004d06:	bd80      	pop	{r7, pc}
 8004d08:	40023800 	.word	0x40023800
 8004d0c:	40007000 	.word	0x40007000
 8004d10:	42470060 	.word	0x42470060

08004d14 <HAL_TIM_Base_Init>:
 8004d14:	b580      	push	{r7, lr}
 8004d16:	b082      	sub	sp, #8
 8004d18:	af00      	add	r7, sp, #0
 8004d1a:	6078      	str	r0, [r7, #4]
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	2b00      	cmp	r3, #0
 8004d20:	d101      	bne.n	8004d26 <HAL_TIM_Base_Init+0x12>
 8004d22:	2301      	movs	r3, #1
 8004d24:	e01d      	b.n	8004d62 <HAL_TIM_Base_Init+0x4e>
 8004d26:	687b      	ldr	r3, [r7, #4]
 8004d28:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004d2c:	b2db      	uxtb	r3, r3
 8004d2e:	2b00      	cmp	r3, #0
 8004d30:	d106      	bne.n	8004d40 <HAL_TIM_Base_Init+0x2c>
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	2200      	movs	r2, #0
 8004d36:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004d3a:	6878      	ldr	r0, [r7, #4]
 8004d3c:	f7fd ffd8 	bl	8002cf0 <HAL_TIM_Base_MspInit>
 8004d40:	687b      	ldr	r3, [r7, #4]
 8004d42:	2202      	movs	r2, #2
 8004d44:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	681a      	ldr	r2, [r3, #0]
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	3304      	adds	r3, #4
 8004d50:	4619      	mov	r1, r3
 8004d52:	4610      	mov	r0, r2
 8004d54:	f000 fa64 	bl	8005220 <TIM_Base_SetConfig>
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	2201      	movs	r2, #1
 8004d5c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004d60:	2300      	movs	r3, #0
 8004d62:	4618      	mov	r0, r3
 8004d64:	3708      	adds	r7, #8
 8004d66:	46bd      	mov	sp, r7
 8004d68:	bd80      	pop	{r7, pc}

08004d6a <HAL_TIM_Base_Start>:
 8004d6a:	b480      	push	{r7}
 8004d6c:	b085      	sub	sp, #20
 8004d6e:	af00      	add	r7, sp, #0
 8004d70:	6078      	str	r0, [r7, #4]
 8004d72:	687b      	ldr	r3, [r7, #4]
 8004d74:	2202      	movs	r2, #2
 8004d76:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004d7a:	687b      	ldr	r3, [r7, #4]
 8004d7c:	681b      	ldr	r3, [r3, #0]
 8004d7e:	689b      	ldr	r3, [r3, #8]
 8004d80:	f003 0307 	and.w	r3, r3, #7
 8004d84:	60fb      	str	r3, [r7, #12]
 8004d86:	68fb      	ldr	r3, [r7, #12]
 8004d88:	2b06      	cmp	r3, #6
 8004d8a:	d007      	beq.n	8004d9c <HAL_TIM_Base_Start+0x32>
 8004d8c:	687b      	ldr	r3, [r7, #4]
 8004d8e:	681b      	ldr	r3, [r3, #0]
 8004d90:	681a      	ldr	r2, [r3, #0]
 8004d92:	687b      	ldr	r3, [r7, #4]
 8004d94:	681b      	ldr	r3, [r3, #0]
 8004d96:	f042 0201 	orr.w	r2, r2, #1
 8004d9a:	601a      	str	r2, [r3, #0]
 8004d9c:	687b      	ldr	r3, [r7, #4]
 8004d9e:	2201      	movs	r2, #1
 8004da0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004da4:	2300      	movs	r3, #0
 8004da6:	4618      	mov	r0, r3
 8004da8:	3714      	adds	r7, #20
 8004daa:	46bd      	mov	sp, r7
 8004dac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004db0:	4770      	bx	lr

08004db2 <HAL_TIM_Base_Stop>:
 8004db2:	b480      	push	{r7}
 8004db4:	b083      	sub	sp, #12
 8004db6:	af00      	add	r7, sp, #0
 8004db8:	6078      	str	r0, [r7, #4]
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	2202      	movs	r2, #2
 8004dbe:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004dc2:	687b      	ldr	r3, [r7, #4]
 8004dc4:	681b      	ldr	r3, [r3, #0]
 8004dc6:	6a1a      	ldr	r2, [r3, #32]
 8004dc8:	f241 1311 	movw	r3, #4369	; 0x1111
 8004dcc:	4013      	ands	r3, r2
 8004dce:	2b00      	cmp	r3, #0
 8004dd0:	d10f      	bne.n	8004df2 <HAL_TIM_Base_Stop+0x40>
 8004dd2:	687b      	ldr	r3, [r7, #4]
 8004dd4:	681b      	ldr	r3, [r3, #0]
 8004dd6:	6a1a      	ldr	r2, [r3, #32]
 8004dd8:	f240 4344 	movw	r3, #1092	; 0x444
 8004ddc:	4013      	ands	r3, r2
 8004dde:	2b00      	cmp	r3, #0
 8004de0:	d107      	bne.n	8004df2 <HAL_TIM_Base_Stop+0x40>
 8004de2:	687b      	ldr	r3, [r7, #4]
 8004de4:	681b      	ldr	r3, [r3, #0]
 8004de6:	681a      	ldr	r2, [r3, #0]
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	681b      	ldr	r3, [r3, #0]
 8004dec:	f022 0201 	bic.w	r2, r2, #1
 8004df0:	601a      	str	r2, [r3, #0]
 8004df2:	687b      	ldr	r3, [r7, #4]
 8004df4:	2201      	movs	r2, #1
 8004df6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004dfa:	2300      	movs	r3, #0
 8004dfc:	4618      	mov	r0, r3
 8004dfe:	370c      	adds	r7, #12
 8004e00:	46bd      	mov	sp, r7
 8004e02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e06:	4770      	bx	lr

08004e08 <HAL_TIM_Base_Start_IT>:
 8004e08:	b480      	push	{r7}
 8004e0a:	b085      	sub	sp, #20
 8004e0c:	af00      	add	r7, sp, #0
 8004e0e:	6078      	str	r0, [r7, #4]
 8004e10:	687b      	ldr	r3, [r7, #4]
 8004e12:	681b      	ldr	r3, [r3, #0]
 8004e14:	68da      	ldr	r2, [r3, #12]
 8004e16:	687b      	ldr	r3, [r7, #4]
 8004e18:	681b      	ldr	r3, [r3, #0]
 8004e1a:	f042 0201 	orr.w	r2, r2, #1
 8004e1e:	60da      	str	r2, [r3, #12]
 8004e20:	687b      	ldr	r3, [r7, #4]
 8004e22:	681b      	ldr	r3, [r3, #0]
 8004e24:	689b      	ldr	r3, [r3, #8]
 8004e26:	f003 0307 	and.w	r3, r3, #7
 8004e2a:	60fb      	str	r3, [r7, #12]
 8004e2c:	68fb      	ldr	r3, [r7, #12]
 8004e2e:	2b06      	cmp	r3, #6
 8004e30:	d007      	beq.n	8004e42 <HAL_TIM_Base_Start_IT+0x3a>
 8004e32:	687b      	ldr	r3, [r7, #4]
 8004e34:	681b      	ldr	r3, [r3, #0]
 8004e36:	681a      	ldr	r2, [r3, #0]
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	681b      	ldr	r3, [r3, #0]
 8004e3c:	f042 0201 	orr.w	r2, r2, #1
 8004e40:	601a      	str	r2, [r3, #0]
 8004e42:	2300      	movs	r3, #0
 8004e44:	4618      	mov	r0, r3
 8004e46:	3714      	adds	r7, #20
 8004e48:	46bd      	mov	sp, r7
 8004e4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e4e:	4770      	bx	lr

08004e50 <HAL_TIM_IRQHandler>:
 8004e50:	b580      	push	{r7, lr}
 8004e52:	b082      	sub	sp, #8
 8004e54:	af00      	add	r7, sp, #0
 8004e56:	6078      	str	r0, [r7, #4]
 8004e58:	687b      	ldr	r3, [r7, #4]
 8004e5a:	681b      	ldr	r3, [r3, #0]
 8004e5c:	691b      	ldr	r3, [r3, #16]
 8004e5e:	f003 0302 	and.w	r3, r3, #2
 8004e62:	2b02      	cmp	r3, #2
 8004e64:	d122      	bne.n	8004eac <HAL_TIM_IRQHandler+0x5c>
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	681b      	ldr	r3, [r3, #0]
 8004e6a:	68db      	ldr	r3, [r3, #12]
 8004e6c:	f003 0302 	and.w	r3, r3, #2
 8004e70:	2b02      	cmp	r3, #2
 8004e72:	d11b      	bne.n	8004eac <HAL_TIM_IRQHandler+0x5c>
 8004e74:	687b      	ldr	r3, [r7, #4]
 8004e76:	681b      	ldr	r3, [r3, #0]
 8004e78:	f06f 0202 	mvn.w	r2, #2
 8004e7c:	611a      	str	r2, [r3, #16]
 8004e7e:	687b      	ldr	r3, [r7, #4]
 8004e80:	2201      	movs	r2, #1
 8004e82:	771a      	strb	r2, [r3, #28]
 8004e84:	687b      	ldr	r3, [r7, #4]
 8004e86:	681b      	ldr	r3, [r3, #0]
 8004e88:	699b      	ldr	r3, [r3, #24]
 8004e8a:	f003 0303 	and.w	r3, r3, #3
 8004e8e:	2b00      	cmp	r3, #0
 8004e90:	d003      	beq.n	8004e9a <HAL_TIM_IRQHandler+0x4a>
 8004e92:	6878      	ldr	r0, [r7, #4]
 8004e94:	f000 f9a5 	bl	80051e2 <HAL_TIM_IC_CaptureCallback>
 8004e98:	e005      	b.n	8004ea6 <HAL_TIM_IRQHandler+0x56>
 8004e9a:	6878      	ldr	r0, [r7, #4]
 8004e9c:	f000 f997 	bl	80051ce <HAL_TIM_OC_DelayElapsedCallback>
 8004ea0:	6878      	ldr	r0, [r7, #4]
 8004ea2:	f000 f9a8 	bl	80051f6 <HAL_TIM_PWM_PulseFinishedCallback>
 8004ea6:	687b      	ldr	r3, [r7, #4]
 8004ea8:	2200      	movs	r2, #0
 8004eaa:	771a      	strb	r2, [r3, #28]
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	681b      	ldr	r3, [r3, #0]
 8004eb0:	691b      	ldr	r3, [r3, #16]
 8004eb2:	f003 0304 	and.w	r3, r3, #4
 8004eb6:	2b04      	cmp	r3, #4
 8004eb8:	d122      	bne.n	8004f00 <HAL_TIM_IRQHandler+0xb0>
 8004eba:	687b      	ldr	r3, [r7, #4]
 8004ebc:	681b      	ldr	r3, [r3, #0]
 8004ebe:	68db      	ldr	r3, [r3, #12]
 8004ec0:	f003 0304 	and.w	r3, r3, #4
 8004ec4:	2b04      	cmp	r3, #4
 8004ec6:	d11b      	bne.n	8004f00 <HAL_TIM_IRQHandler+0xb0>
 8004ec8:	687b      	ldr	r3, [r7, #4]
 8004eca:	681b      	ldr	r3, [r3, #0]
 8004ecc:	f06f 0204 	mvn.w	r2, #4
 8004ed0:	611a      	str	r2, [r3, #16]
 8004ed2:	687b      	ldr	r3, [r7, #4]
 8004ed4:	2202      	movs	r2, #2
 8004ed6:	771a      	strb	r2, [r3, #28]
 8004ed8:	687b      	ldr	r3, [r7, #4]
 8004eda:	681b      	ldr	r3, [r3, #0]
 8004edc:	699b      	ldr	r3, [r3, #24]
 8004ede:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004ee2:	2b00      	cmp	r3, #0
 8004ee4:	d003      	beq.n	8004eee <HAL_TIM_IRQHandler+0x9e>
 8004ee6:	6878      	ldr	r0, [r7, #4]
 8004ee8:	f000 f97b 	bl	80051e2 <HAL_TIM_IC_CaptureCallback>
 8004eec:	e005      	b.n	8004efa <HAL_TIM_IRQHandler+0xaa>
 8004eee:	6878      	ldr	r0, [r7, #4]
 8004ef0:	f000 f96d 	bl	80051ce <HAL_TIM_OC_DelayElapsedCallback>
 8004ef4:	6878      	ldr	r0, [r7, #4]
 8004ef6:	f000 f97e 	bl	80051f6 <HAL_TIM_PWM_PulseFinishedCallback>
 8004efa:	687b      	ldr	r3, [r7, #4]
 8004efc:	2200      	movs	r2, #0
 8004efe:	771a      	strb	r2, [r3, #28]
 8004f00:	687b      	ldr	r3, [r7, #4]
 8004f02:	681b      	ldr	r3, [r3, #0]
 8004f04:	691b      	ldr	r3, [r3, #16]
 8004f06:	f003 0308 	and.w	r3, r3, #8
 8004f0a:	2b08      	cmp	r3, #8
 8004f0c:	d122      	bne.n	8004f54 <HAL_TIM_IRQHandler+0x104>
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	681b      	ldr	r3, [r3, #0]
 8004f12:	68db      	ldr	r3, [r3, #12]
 8004f14:	f003 0308 	and.w	r3, r3, #8
 8004f18:	2b08      	cmp	r3, #8
 8004f1a:	d11b      	bne.n	8004f54 <HAL_TIM_IRQHandler+0x104>
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	681b      	ldr	r3, [r3, #0]
 8004f20:	f06f 0208 	mvn.w	r2, #8
 8004f24:	611a      	str	r2, [r3, #16]
 8004f26:	687b      	ldr	r3, [r7, #4]
 8004f28:	2204      	movs	r2, #4
 8004f2a:	771a      	strb	r2, [r3, #28]
 8004f2c:	687b      	ldr	r3, [r7, #4]
 8004f2e:	681b      	ldr	r3, [r3, #0]
 8004f30:	69db      	ldr	r3, [r3, #28]
 8004f32:	f003 0303 	and.w	r3, r3, #3
 8004f36:	2b00      	cmp	r3, #0
 8004f38:	d003      	beq.n	8004f42 <HAL_TIM_IRQHandler+0xf2>
 8004f3a:	6878      	ldr	r0, [r7, #4]
 8004f3c:	f000 f951 	bl	80051e2 <HAL_TIM_IC_CaptureCallback>
 8004f40:	e005      	b.n	8004f4e <HAL_TIM_IRQHandler+0xfe>
 8004f42:	6878      	ldr	r0, [r7, #4]
 8004f44:	f000 f943 	bl	80051ce <HAL_TIM_OC_DelayElapsedCallback>
 8004f48:	6878      	ldr	r0, [r7, #4]
 8004f4a:	f000 f954 	bl	80051f6 <HAL_TIM_PWM_PulseFinishedCallback>
 8004f4e:	687b      	ldr	r3, [r7, #4]
 8004f50:	2200      	movs	r2, #0
 8004f52:	771a      	strb	r2, [r3, #28]
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	681b      	ldr	r3, [r3, #0]
 8004f58:	691b      	ldr	r3, [r3, #16]
 8004f5a:	f003 0310 	and.w	r3, r3, #16
 8004f5e:	2b10      	cmp	r3, #16
 8004f60:	d122      	bne.n	8004fa8 <HAL_TIM_IRQHandler+0x158>
 8004f62:	687b      	ldr	r3, [r7, #4]
 8004f64:	681b      	ldr	r3, [r3, #0]
 8004f66:	68db      	ldr	r3, [r3, #12]
 8004f68:	f003 0310 	and.w	r3, r3, #16
 8004f6c:	2b10      	cmp	r3, #16
 8004f6e:	d11b      	bne.n	8004fa8 <HAL_TIM_IRQHandler+0x158>
 8004f70:	687b      	ldr	r3, [r7, #4]
 8004f72:	681b      	ldr	r3, [r3, #0]
 8004f74:	f06f 0210 	mvn.w	r2, #16
 8004f78:	611a      	str	r2, [r3, #16]
 8004f7a:	687b      	ldr	r3, [r7, #4]
 8004f7c:	2208      	movs	r2, #8
 8004f7e:	771a      	strb	r2, [r3, #28]
 8004f80:	687b      	ldr	r3, [r7, #4]
 8004f82:	681b      	ldr	r3, [r3, #0]
 8004f84:	69db      	ldr	r3, [r3, #28]
 8004f86:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004f8a:	2b00      	cmp	r3, #0
 8004f8c:	d003      	beq.n	8004f96 <HAL_TIM_IRQHandler+0x146>
 8004f8e:	6878      	ldr	r0, [r7, #4]
 8004f90:	f000 f927 	bl	80051e2 <HAL_TIM_IC_CaptureCallback>
 8004f94:	e005      	b.n	8004fa2 <HAL_TIM_IRQHandler+0x152>
 8004f96:	6878      	ldr	r0, [r7, #4]
 8004f98:	f000 f919 	bl	80051ce <HAL_TIM_OC_DelayElapsedCallback>
 8004f9c:	6878      	ldr	r0, [r7, #4]
 8004f9e:	f000 f92a 	bl	80051f6 <HAL_TIM_PWM_PulseFinishedCallback>
 8004fa2:	687b      	ldr	r3, [r7, #4]
 8004fa4:	2200      	movs	r2, #0
 8004fa6:	771a      	strb	r2, [r3, #28]
 8004fa8:	687b      	ldr	r3, [r7, #4]
 8004faa:	681b      	ldr	r3, [r3, #0]
 8004fac:	691b      	ldr	r3, [r3, #16]
 8004fae:	f003 0301 	and.w	r3, r3, #1
 8004fb2:	2b01      	cmp	r3, #1
 8004fb4:	d10e      	bne.n	8004fd4 <HAL_TIM_IRQHandler+0x184>
 8004fb6:	687b      	ldr	r3, [r7, #4]
 8004fb8:	681b      	ldr	r3, [r3, #0]
 8004fba:	68db      	ldr	r3, [r3, #12]
 8004fbc:	f003 0301 	and.w	r3, r3, #1
 8004fc0:	2b01      	cmp	r3, #1
 8004fc2:	d107      	bne.n	8004fd4 <HAL_TIM_IRQHandler+0x184>
 8004fc4:	687b      	ldr	r3, [r7, #4]
 8004fc6:	681b      	ldr	r3, [r3, #0]
 8004fc8:	f06f 0201 	mvn.w	r2, #1
 8004fcc:	611a      	str	r2, [r3, #16]
 8004fce:	6878      	ldr	r0, [r7, #4]
 8004fd0:	f7fd fd92 	bl	8002af8 <HAL_TIM_PeriodElapsedCallback>
 8004fd4:	687b      	ldr	r3, [r7, #4]
 8004fd6:	681b      	ldr	r3, [r3, #0]
 8004fd8:	691b      	ldr	r3, [r3, #16]
 8004fda:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004fde:	2b80      	cmp	r3, #128	; 0x80
 8004fe0:	d10e      	bne.n	8005000 <HAL_TIM_IRQHandler+0x1b0>
 8004fe2:	687b      	ldr	r3, [r7, #4]
 8004fe4:	681b      	ldr	r3, [r3, #0]
 8004fe6:	68db      	ldr	r3, [r3, #12]
 8004fe8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004fec:	2b80      	cmp	r3, #128	; 0x80
 8004fee:	d107      	bne.n	8005000 <HAL_TIM_IRQHandler+0x1b0>
 8004ff0:	687b      	ldr	r3, [r7, #4]
 8004ff2:	681b      	ldr	r3, [r3, #0]
 8004ff4:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8004ff8:	611a      	str	r2, [r3, #16]
 8004ffa:	6878      	ldr	r0, [r7, #4]
 8004ffc:	f000 fad0 	bl	80055a0 <HAL_TIMEx_BreakCallback>
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	681b      	ldr	r3, [r3, #0]
 8005004:	691b      	ldr	r3, [r3, #16]
 8005006:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800500a:	2b40      	cmp	r3, #64	; 0x40
 800500c:	d10e      	bne.n	800502c <HAL_TIM_IRQHandler+0x1dc>
 800500e:	687b      	ldr	r3, [r7, #4]
 8005010:	681b      	ldr	r3, [r3, #0]
 8005012:	68db      	ldr	r3, [r3, #12]
 8005014:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005018:	2b40      	cmp	r3, #64	; 0x40
 800501a:	d107      	bne.n	800502c <HAL_TIM_IRQHandler+0x1dc>
 800501c:	687b      	ldr	r3, [r7, #4]
 800501e:	681b      	ldr	r3, [r3, #0]
 8005020:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8005024:	611a      	str	r2, [r3, #16]
 8005026:	6878      	ldr	r0, [r7, #4]
 8005028:	f000 f8ef 	bl	800520a <HAL_TIM_TriggerCallback>
 800502c:	687b      	ldr	r3, [r7, #4]
 800502e:	681b      	ldr	r3, [r3, #0]
 8005030:	691b      	ldr	r3, [r3, #16]
 8005032:	f003 0320 	and.w	r3, r3, #32
 8005036:	2b20      	cmp	r3, #32
 8005038:	d10e      	bne.n	8005058 <HAL_TIM_IRQHandler+0x208>
 800503a:	687b      	ldr	r3, [r7, #4]
 800503c:	681b      	ldr	r3, [r3, #0]
 800503e:	68db      	ldr	r3, [r3, #12]
 8005040:	f003 0320 	and.w	r3, r3, #32
 8005044:	2b20      	cmp	r3, #32
 8005046:	d107      	bne.n	8005058 <HAL_TIM_IRQHandler+0x208>
 8005048:	687b      	ldr	r3, [r7, #4]
 800504a:	681b      	ldr	r3, [r3, #0]
 800504c:	f06f 0220 	mvn.w	r2, #32
 8005050:	611a      	str	r2, [r3, #16]
 8005052:	6878      	ldr	r0, [r7, #4]
 8005054:	f000 fa9a 	bl	800558c <HAL_TIMEx_CommutCallback>
 8005058:	bf00      	nop
 800505a:	3708      	adds	r7, #8
 800505c:	46bd      	mov	sp, r7
 800505e:	bd80      	pop	{r7, pc}

08005060 <HAL_TIM_ConfigClockSource>:
 8005060:	b580      	push	{r7, lr}
 8005062:	b084      	sub	sp, #16
 8005064:	af00      	add	r7, sp, #0
 8005066:	6078      	str	r0, [r7, #4]
 8005068:	6039      	str	r1, [r7, #0]
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005070:	2b01      	cmp	r3, #1
 8005072:	d101      	bne.n	8005078 <HAL_TIM_ConfigClockSource+0x18>
 8005074:	2302      	movs	r3, #2
 8005076:	e0a6      	b.n	80051c6 <HAL_TIM_ConfigClockSource+0x166>
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	2201      	movs	r2, #1
 800507c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	2202      	movs	r2, #2
 8005084:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005088:	687b      	ldr	r3, [r7, #4]
 800508a:	681b      	ldr	r3, [r3, #0]
 800508c:	689b      	ldr	r3, [r3, #8]
 800508e:	60fb      	str	r3, [r7, #12]
 8005090:	68fb      	ldr	r3, [r7, #12]
 8005092:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8005096:	60fb      	str	r3, [r7, #12]
 8005098:	68fb      	ldr	r3, [r7, #12]
 800509a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800509e:	60fb      	str	r3, [r7, #12]
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	681b      	ldr	r3, [r3, #0]
 80050a4:	68fa      	ldr	r2, [r7, #12]
 80050a6:	609a      	str	r2, [r3, #8]
 80050a8:	683b      	ldr	r3, [r7, #0]
 80050aa:	681b      	ldr	r3, [r3, #0]
 80050ac:	2b40      	cmp	r3, #64	; 0x40
 80050ae:	d067      	beq.n	8005180 <HAL_TIM_ConfigClockSource+0x120>
 80050b0:	2b40      	cmp	r3, #64	; 0x40
 80050b2:	d80b      	bhi.n	80050cc <HAL_TIM_ConfigClockSource+0x6c>
 80050b4:	2b10      	cmp	r3, #16
 80050b6:	d073      	beq.n	80051a0 <HAL_TIM_ConfigClockSource+0x140>
 80050b8:	2b10      	cmp	r3, #16
 80050ba:	d802      	bhi.n	80050c2 <HAL_TIM_ConfigClockSource+0x62>
 80050bc:	2b00      	cmp	r3, #0
 80050be:	d06f      	beq.n	80051a0 <HAL_TIM_ConfigClockSource+0x140>
 80050c0:	e078      	b.n	80051b4 <HAL_TIM_ConfigClockSource+0x154>
 80050c2:	2b20      	cmp	r3, #32
 80050c4:	d06c      	beq.n	80051a0 <HAL_TIM_ConfigClockSource+0x140>
 80050c6:	2b30      	cmp	r3, #48	; 0x30
 80050c8:	d06a      	beq.n	80051a0 <HAL_TIM_ConfigClockSource+0x140>
 80050ca:	e073      	b.n	80051b4 <HAL_TIM_ConfigClockSource+0x154>
 80050cc:	2b70      	cmp	r3, #112	; 0x70
 80050ce:	d00d      	beq.n	80050ec <HAL_TIM_ConfigClockSource+0x8c>
 80050d0:	2b70      	cmp	r3, #112	; 0x70
 80050d2:	d804      	bhi.n	80050de <HAL_TIM_ConfigClockSource+0x7e>
 80050d4:	2b50      	cmp	r3, #80	; 0x50
 80050d6:	d033      	beq.n	8005140 <HAL_TIM_ConfigClockSource+0xe0>
 80050d8:	2b60      	cmp	r3, #96	; 0x60
 80050da:	d041      	beq.n	8005160 <HAL_TIM_ConfigClockSource+0x100>
 80050dc:	e06a      	b.n	80051b4 <HAL_TIM_ConfigClockSource+0x154>
 80050de:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80050e2:	d066      	beq.n	80051b2 <HAL_TIM_ConfigClockSource+0x152>
 80050e4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80050e8:	d017      	beq.n	800511a <HAL_TIM_ConfigClockSource+0xba>
 80050ea:	e063      	b.n	80051b4 <HAL_TIM_ConfigClockSource+0x154>
 80050ec:	687b      	ldr	r3, [r7, #4]
 80050ee:	6818      	ldr	r0, [r3, #0]
 80050f0:	683b      	ldr	r3, [r7, #0]
 80050f2:	6899      	ldr	r1, [r3, #8]
 80050f4:	683b      	ldr	r3, [r7, #0]
 80050f6:	685a      	ldr	r2, [r3, #4]
 80050f8:	683b      	ldr	r3, [r7, #0]
 80050fa:	68db      	ldr	r3, [r3, #12]
 80050fc:	f000 f9aa 	bl	8005454 <TIM_ETR_SetConfig>
 8005100:	687b      	ldr	r3, [r7, #4]
 8005102:	681b      	ldr	r3, [r3, #0]
 8005104:	689b      	ldr	r3, [r3, #8]
 8005106:	60fb      	str	r3, [r7, #12]
 8005108:	68fb      	ldr	r3, [r7, #12]
 800510a:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800510e:	60fb      	str	r3, [r7, #12]
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	681b      	ldr	r3, [r3, #0]
 8005114:	68fa      	ldr	r2, [r7, #12]
 8005116:	609a      	str	r2, [r3, #8]
 8005118:	e04c      	b.n	80051b4 <HAL_TIM_ConfigClockSource+0x154>
 800511a:	687b      	ldr	r3, [r7, #4]
 800511c:	6818      	ldr	r0, [r3, #0]
 800511e:	683b      	ldr	r3, [r7, #0]
 8005120:	6899      	ldr	r1, [r3, #8]
 8005122:	683b      	ldr	r3, [r7, #0]
 8005124:	685a      	ldr	r2, [r3, #4]
 8005126:	683b      	ldr	r3, [r7, #0]
 8005128:	68db      	ldr	r3, [r3, #12]
 800512a:	f000 f993 	bl	8005454 <TIM_ETR_SetConfig>
 800512e:	687b      	ldr	r3, [r7, #4]
 8005130:	681b      	ldr	r3, [r3, #0]
 8005132:	689a      	ldr	r2, [r3, #8]
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	681b      	ldr	r3, [r3, #0]
 8005138:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800513c:	609a      	str	r2, [r3, #8]
 800513e:	e039      	b.n	80051b4 <HAL_TIM_ConfigClockSource+0x154>
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	6818      	ldr	r0, [r3, #0]
 8005144:	683b      	ldr	r3, [r7, #0]
 8005146:	6859      	ldr	r1, [r3, #4]
 8005148:	683b      	ldr	r3, [r7, #0]
 800514a:	68db      	ldr	r3, [r3, #12]
 800514c:	461a      	mov	r2, r3
 800514e:	f000 f907 	bl	8005360 <TIM_TI1_ConfigInputStage>
 8005152:	687b      	ldr	r3, [r7, #4]
 8005154:	681b      	ldr	r3, [r3, #0]
 8005156:	2150      	movs	r1, #80	; 0x50
 8005158:	4618      	mov	r0, r3
 800515a:	f000 f960 	bl	800541e <TIM_ITRx_SetConfig>
 800515e:	e029      	b.n	80051b4 <HAL_TIM_ConfigClockSource+0x154>
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	6818      	ldr	r0, [r3, #0]
 8005164:	683b      	ldr	r3, [r7, #0]
 8005166:	6859      	ldr	r1, [r3, #4]
 8005168:	683b      	ldr	r3, [r7, #0]
 800516a:	68db      	ldr	r3, [r3, #12]
 800516c:	461a      	mov	r2, r3
 800516e:	f000 f926 	bl	80053be <TIM_TI2_ConfigInputStage>
 8005172:	687b      	ldr	r3, [r7, #4]
 8005174:	681b      	ldr	r3, [r3, #0]
 8005176:	2160      	movs	r1, #96	; 0x60
 8005178:	4618      	mov	r0, r3
 800517a:	f000 f950 	bl	800541e <TIM_ITRx_SetConfig>
 800517e:	e019      	b.n	80051b4 <HAL_TIM_ConfigClockSource+0x154>
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	6818      	ldr	r0, [r3, #0]
 8005184:	683b      	ldr	r3, [r7, #0]
 8005186:	6859      	ldr	r1, [r3, #4]
 8005188:	683b      	ldr	r3, [r7, #0]
 800518a:	68db      	ldr	r3, [r3, #12]
 800518c:	461a      	mov	r2, r3
 800518e:	f000 f8e7 	bl	8005360 <TIM_TI1_ConfigInputStage>
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	681b      	ldr	r3, [r3, #0]
 8005196:	2140      	movs	r1, #64	; 0x40
 8005198:	4618      	mov	r0, r3
 800519a:	f000 f940 	bl	800541e <TIM_ITRx_SetConfig>
 800519e:	e009      	b.n	80051b4 <HAL_TIM_ConfigClockSource+0x154>
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	681a      	ldr	r2, [r3, #0]
 80051a4:	683b      	ldr	r3, [r7, #0]
 80051a6:	681b      	ldr	r3, [r3, #0]
 80051a8:	4619      	mov	r1, r3
 80051aa:	4610      	mov	r0, r2
 80051ac:	f000 f937 	bl	800541e <TIM_ITRx_SetConfig>
 80051b0:	e000      	b.n	80051b4 <HAL_TIM_ConfigClockSource+0x154>
 80051b2:	bf00      	nop
 80051b4:	687b      	ldr	r3, [r7, #4]
 80051b6:	2201      	movs	r2, #1
 80051b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80051bc:	687b      	ldr	r3, [r7, #4]
 80051be:	2200      	movs	r2, #0
 80051c0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80051c4:	2300      	movs	r3, #0
 80051c6:	4618      	mov	r0, r3
 80051c8:	3710      	adds	r7, #16
 80051ca:	46bd      	mov	sp, r7
 80051cc:	bd80      	pop	{r7, pc}

080051ce <HAL_TIM_OC_DelayElapsedCallback>:
 80051ce:	b480      	push	{r7}
 80051d0:	b083      	sub	sp, #12
 80051d2:	af00      	add	r7, sp, #0
 80051d4:	6078      	str	r0, [r7, #4]
 80051d6:	bf00      	nop
 80051d8:	370c      	adds	r7, #12
 80051da:	46bd      	mov	sp, r7
 80051dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051e0:	4770      	bx	lr

080051e2 <HAL_TIM_IC_CaptureCallback>:
 80051e2:	b480      	push	{r7}
 80051e4:	b083      	sub	sp, #12
 80051e6:	af00      	add	r7, sp, #0
 80051e8:	6078      	str	r0, [r7, #4]
 80051ea:	bf00      	nop
 80051ec:	370c      	adds	r7, #12
 80051ee:	46bd      	mov	sp, r7
 80051f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051f4:	4770      	bx	lr

080051f6 <HAL_TIM_PWM_PulseFinishedCallback>:
 80051f6:	b480      	push	{r7}
 80051f8:	b083      	sub	sp, #12
 80051fa:	af00      	add	r7, sp, #0
 80051fc:	6078      	str	r0, [r7, #4]
 80051fe:	bf00      	nop
 8005200:	370c      	adds	r7, #12
 8005202:	46bd      	mov	sp, r7
 8005204:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005208:	4770      	bx	lr

0800520a <HAL_TIM_TriggerCallback>:
 800520a:	b480      	push	{r7}
 800520c:	b083      	sub	sp, #12
 800520e:	af00      	add	r7, sp, #0
 8005210:	6078      	str	r0, [r7, #4]
 8005212:	bf00      	nop
 8005214:	370c      	adds	r7, #12
 8005216:	46bd      	mov	sp, r7
 8005218:	f85d 7b04 	ldr.w	r7, [sp], #4
 800521c:	4770      	bx	lr
	...

08005220 <TIM_Base_SetConfig>:
 8005220:	b480      	push	{r7}
 8005222:	b085      	sub	sp, #20
 8005224:	af00      	add	r7, sp, #0
 8005226:	6078      	str	r0, [r7, #4]
 8005228:	6039      	str	r1, [r7, #0]
 800522a:	687b      	ldr	r3, [r7, #4]
 800522c:	681b      	ldr	r3, [r3, #0]
 800522e:	60fb      	str	r3, [r7, #12]
 8005230:	687b      	ldr	r3, [r7, #4]
 8005232:	4a40      	ldr	r2, [pc, #256]	; (8005334 <TIM_Base_SetConfig+0x114>)
 8005234:	4293      	cmp	r3, r2
 8005236:	d013      	beq.n	8005260 <TIM_Base_SetConfig+0x40>
 8005238:	687b      	ldr	r3, [r7, #4]
 800523a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800523e:	d00f      	beq.n	8005260 <TIM_Base_SetConfig+0x40>
 8005240:	687b      	ldr	r3, [r7, #4]
 8005242:	4a3d      	ldr	r2, [pc, #244]	; (8005338 <TIM_Base_SetConfig+0x118>)
 8005244:	4293      	cmp	r3, r2
 8005246:	d00b      	beq.n	8005260 <TIM_Base_SetConfig+0x40>
 8005248:	687b      	ldr	r3, [r7, #4]
 800524a:	4a3c      	ldr	r2, [pc, #240]	; (800533c <TIM_Base_SetConfig+0x11c>)
 800524c:	4293      	cmp	r3, r2
 800524e:	d007      	beq.n	8005260 <TIM_Base_SetConfig+0x40>
 8005250:	687b      	ldr	r3, [r7, #4]
 8005252:	4a3b      	ldr	r2, [pc, #236]	; (8005340 <TIM_Base_SetConfig+0x120>)
 8005254:	4293      	cmp	r3, r2
 8005256:	d003      	beq.n	8005260 <TIM_Base_SetConfig+0x40>
 8005258:	687b      	ldr	r3, [r7, #4]
 800525a:	4a3a      	ldr	r2, [pc, #232]	; (8005344 <TIM_Base_SetConfig+0x124>)
 800525c:	4293      	cmp	r3, r2
 800525e:	d108      	bne.n	8005272 <TIM_Base_SetConfig+0x52>
 8005260:	68fb      	ldr	r3, [r7, #12]
 8005262:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005266:	60fb      	str	r3, [r7, #12]
 8005268:	683b      	ldr	r3, [r7, #0]
 800526a:	685b      	ldr	r3, [r3, #4]
 800526c:	68fa      	ldr	r2, [r7, #12]
 800526e:	4313      	orrs	r3, r2
 8005270:	60fb      	str	r3, [r7, #12]
 8005272:	687b      	ldr	r3, [r7, #4]
 8005274:	4a2f      	ldr	r2, [pc, #188]	; (8005334 <TIM_Base_SetConfig+0x114>)
 8005276:	4293      	cmp	r3, r2
 8005278:	d02b      	beq.n	80052d2 <TIM_Base_SetConfig+0xb2>
 800527a:	687b      	ldr	r3, [r7, #4]
 800527c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005280:	d027      	beq.n	80052d2 <TIM_Base_SetConfig+0xb2>
 8005282:	687b      	ldr	r3, [r7, #4]
 8005284:	4a2c      	ldr	r2, [pc, #176]	; (8005338 <TIM_Base_SetConfig+0x118>)
 8005286:	4293      	cmp	r3, r2
 8005288:	d023      	beq.n	80052d2 <TIM_Base_SetConfig+0xb2>
 800528a:	687b      	ldr	r3, [r7, #4]
 800528c:	4a2b      	ldr	r2, [pc, #172]	; (800533c <TIM_Base_SetConfig+0x11c>)
 800528e:	4293      	cmp	r3, r2
 8005290:	d01f      	beq.n	80052d2 <TIM_Base_SetConfig+0xb2>
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	4a2a      	ldr	r2, [pc, #168]	; (8005340 <TIM_Base_SetConfig+0x120>)
 8005296:	4293      	cmp	r3, r2
 8005298:	d01b      	beq.n	80052d2 <TIM_Base_SetConfig+0xb2>
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	4a29      	ldr	r2, [pc, #164]	; (8005344 <TIM_Base_SetConfig+0x124>)
 800529e:	4293      	cmp	r3, r2
 80052a0:	d017      	beq.n	80052d2 <TIM_Base_SetConfig+0xb2>
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	4a28      	ldr	r2, [pc, #160]	; (8005348 <TIM_Base_SetConfig+0x128>)
 80052a6:	4293      	cmp	r3, r2
 80052a8:	d013      	beq.n	80052d2 <TIM_Base_SetConfig+0xb2>
 80052aa:	687b      	ldr	r3, [r7, #4]
 80052ac:	4a27      	ldr	r2, [pc, #156]	; (800534c <TIM_Base_SetConfig+0x12c>)
 80052ae:	4293      	cmp	r3, r2
 80052b0:	d00f      	beq.n	80052d2 <TIM_Base_SetConfig+0xb2>
 80052b2:	687b      	ldr	r3, [r7, #4]
 80052b4:	4a26      	ldr	r2, [pc, #152]	; (8005350 <TIM_Base_SetConfig+0x130>)
 80052b6:	4293      	cmp	r3, r2
 80052b8:	d00b      	beq.n	80052d2 <TIM_Base_SetConfig+0xb2>
 80052ba:	687b      	ldr	r3, [r7, #4]
 80052bc:	4a25      	ldr	r2, [pc, #148]	; (8005354 <TIM_Base_SetConfig+0x134>)
 80052be:	4293      	cmp	r3, r2
 80052c0:	d007      	beq.n	80052d2 <TIM_Base_SetConfig+0xb2>
 80052c2:	687b      	ldr	r3, [r7, #4]
 80052c4:	4a24      	ldr	r2, [pc, #144]	; (8005358 <TIM_Base_SetConfig+0x138>)
 80052c6:	4293      	cmp	r3, r2
 80052c8:	d003      	beq.n	80052d2 <TIM_Base_SetConfig+0xb2>
 80052ca:	687b      	ldr	r3, [r7, #4]
 80052cc:	4a23      	ldr	r2, [pc, #140]	; (800535c <TIM_Base_SetConfig+0x13c>)
 80052ce:	4293      	cmp	r3, r2
 80052d0:	d108      	bne.n	80052e4 <TIM_Base_SetConfig+0xc4>
 80052d2:	68fb      	ldr	r3, [r7, #12]
 80052d4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80052d8:	60fb      	str	r3, [r7, #12]
 80052da:	683b      	ldr	r3, [r7, #0]
 80052dc:	68db      	ldr	r3, [r3, #12]
 80052de:	68fa      	ldr	r2, [r7, #12]
 80052e0:	4313      	orrs	r3, r2
 80052e2:	60fb      	str	r3, [r7, #12]
 80052e4:	68fb      	ldr	r3, [r7, #12]
 80052e6:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80052ea:	683b      	ldr	r3, [r7, #0]
 80052ec:	695b      	ldr	r3, [r3, #20]
 80052ee:	4313      	orrs	r3, r2
 80052f0:	60fb      	str	r3, [r7, #12]
 80052f2:	687b      	ldr	r3, [r7, #4]
 80052f4:	68fa      	ldr	r2, [r7, #12]
 80052f6:	601a      	str	r2, [r3, #0]
 80052f8:	683b      	ldr	r3, [r7, #0]
 80052fa:	689a      	ldr	r2, [r3, #8]
 80052fc:	687b      	ldr	r3, [r7, #4]
 80052fe:	62da      	str	r2, [r3, #44]	; 0x2c
 8005300:	683b      	ldr	r3, [r7, #0]
 8005302:	681a      	ldr	r2, [r3, #0]
 8005304:	687b      	ldr	r3, [r7, #4]
 8005306:	629a      	str	r2, [r3, #40]	; 0x28
 8005308:	687b      	ldr	r3, [r7, #4]
 800530a:	4a0a      	ldr	r2, [pc, #40]	; (8005334 <TIM_Base_SetConfig+0x114>)
 800530c:	4293      	cmp	r3, r2
 800530e:	d003      	beq.n	8005318 <TIM_Base_SetConfig+0xf8>
 8005310:	687b      	ldr	r3, [r7, #4]
 8005312:	4a0c      	ldr	r2, [pc, #48]	; (8005344 <TIM_Base_SetConfig+0x124>)
 8005314:	4293      	cmp	r3, r2
 8005316:	d103      	bne.n	8005320 <TIM_Base_SetConfig+0x100>
 8005318:	683b      	ldr	r3, [r7, #0]
 800531a:	691a      	ldr	r2, [r3, #16]
 800531c:	687b      	ldr	r3, [r7, #4]
 800531e:	631a      	str	r2, [r3, #48]	; 0x30
 8005320:	687b      	ldr	r3, [r7, #4]
 8005322:	2201      	movs	r2, #1
 8005324:	615a      	str	r2, [r3, #20]
 8005326:	bf00      	nop
 8005328:	3714      	adds	r7, #20
 800532a:	46bd      	mov	sp, r7
 800532c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005330:	4770      	bx	lr
 8005332:	bf00      	nop
 8005334:	40010000 	.word	0x40010000
 8005338:	40000400 	.word	0x40000400
 800533c:	40000800 	.word	0x40000800
 8005340:	40000c00 	.word	0x40000c00
 8005344:	40010400 	.word	0x40010400
 8005348:	40014000 	.word	0x40014000
 800534c:	40014400 	.word	0x40014400
 8005350:	40014800 	.word	0x40014800
 8005354:	40001800 	.word	0x40001800
 8005358:	40001c00 	.word	0x40001c00
 800535c:	40002000 	.word	0x40002000

08005360 <TIM_TI1_ConfigInputStage>:
 8005360:	b480      	push	{r7}
 8005362:	b087      	sub	sp, #28
 8005364:	af00      	add	r7, sp, #0
 8005366:	60f8      	str	r0, [r7, #12]
 8005368:	60b9      	str	r1, [r7, #8]
 800536a:	607a      	str	r2, [r7, #4]
 800536c:	68fb      	ldr	r3, [r7, #12]
 800536e:	6a1b      	ldr	r3, [r3, #32]
 8005370:	617b      	str	r3, [r7, #20]
 8005372:	68fb      	ldr	r3, [r7, #12]
 8005374:	6a1b      	ldr	r3, [r3, #32]
 8005376:	f023 0201 	bic.w	r2, r3, #1
 800537a:	68fb      	ldr	r3, [r7, #12]
 800537c:	621a      	str	r2, [r3, #32]
 800537e:	68fb      	ldr	r3, [r7, #12]
 8005380:	699b      	ldr	r3, [r3, #24]
 8005382:	613b      	str	r3, [r7, #16]
 8005384:	693b      	ldr	r3, [r7, #16]
 8005386:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800538a:	613b      	str	r3, [r7, #16]
 800538c:	687b      	ldr	r3, [r7, #4]
 800538e:	011b      	lsls	r3, r3, #4
 8005390:	693a      	ldr	r2, [r7, #16]
 8005392:	4313      	orrs	r3, r2
 8005394:	613b      	str	r3, [r7, #16]
 8005396:	697b      	ldr	r3, [r7, #20]
 8005398:	f023 030a 	bic.w	r3, r3, #10
 800539c:	617b      	str	r3, [r7, #20]
 800539e:	697a      	ldr	r2, [r7, #20]
 80053a0:	68bb      	ldr	r3, [r7, #8]
 80053a2:	4313      	orrs	r3, r2
 80053a4:	617b      	str	r3, [r7, #20]
 80053a6:	68fb      	ldr	r3, [r7, #12]
 80053a8:	693a      	ldr	r2, [r7, #16]
 80053aa:	619a      	str	r2, [r3, #24]
 80053ac:	68fb      	ldr	r3, [r7, #12]
 80053ae:	697a      	ldr	r2, [r7, #20]
 80053b0:	621a      	str	r2, [r3, #32]
 80053b2:	bf00      	nop
 80053b4:	371c      	adds	r7, #28
 80053b6:	46bd      	mov	sp, r7
 80053b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053bc:	4770      	bx	lr

080053be <TIM_TI2_ConfigInputStage>:
 80053be:	b480      	push	{r7}
 80053c0:	b087      	sub	sp, #28
 80053c2:	af00      	add	r7, sp, #0
 80053c4:	60f8      	str	r0, [r7, #12]
 80053c6:	60b9      	str	r1, [r7, #8]
 80053c8:	607a      	str	r2, [r7, #4]
 80053ca:	68fb      	ldr	r3, [r7, #12]
 80053cc:	6a1b      	ldr	r3, [r3, #32]
 80053ce:	f023 0210 	bic.w	r2, r3, #16
 80053d2:	68fb      	ldr	r3, [r7, #12]
 80053d4:	621a      	str	r2, [r3, #32]
 80053d6:	68fb      	ldr	r3, [r7, #12]
 80053d8:	699b      	ldr	r3, [r3, #24]
 80053da:	617b      	str	r3, [r7, #20]
 80053dc:	68fb      	ldr	r3, [r7, #12]
 80053de:	6a1b      	ldr	r3, [r3, #32]
 80053e0:	613b      	str	r3, [r7, #16]
 80053e2:	697b      	ldr	r3, [r7, #20]
 80053e4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80053e8:	617b      	str	r3, [r7, #20]
 80053ea:	687b      	ldr	r3, [r7, #4]
 80053ec:	031b      	lsls	r3, r3, #12
 80053ee:	697a      	ldr	r2, [r7, #20]
 80053f0:	4313      	orrs	r3, r2
 80053f2:	617b      	str	r3, [r7, #20]
 80053f4:	693b      	ldr	r3, [r7, #16]
 80053f6:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80053fa:	613b      	str	r3, [r7, #16]
 80053fc:	68bb      	ldr	r3, [r7, #8]
 80053fe:	011b      	lsls	r3, r3, #4
 8005400:	693a      	ldr	r2, [r7, #16]
 8005402:	4313      	orrs	r3, r2
 8005404:	613b      	str	r3, [r7, #16]
 8005406:	68fb      	ldr	r3, [r7, #12]
 8005408:	697a      	ldr	r2, [r7, #20]
 800540a:	619a      	str	r2, [r3, #24]
 800540c:	68fb      	ldr	r3, [r7, #12]
 800540e:	693a      	ldr	r2, [r7, #16]
 8005410:	621a      	str	r2, [r3, #32]
 8005412:	bf00      	nop
 8005414:	371c      	adds	r7, #28
 8005416:	46bd      	mov	sp, r7
 8005418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800541c:	4770      	bx	lr

0800541e <TIM_ITRx_SetConfig>:
 800541e:	b480      	push	{r7}
 8005420:	b085      	sub	sp, #20
 8005422:	af00      	add	r7, sp, #0
 8005424:	6078      	str	r0, [r7, #4]
 8005426:	6039      	str	r1, [r7, #0]
 8005428:	687b      	ldr	r3, [r7, #4]
 800542a:	689b      	ldr	r3, [r3, #8]
 800542c:	60fb      	str	r3, [r7, #12]
 800542e:	68fb      	ldr	r3, [r7, #12]
 8005430:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005434:	60fb      	str	r3, [r7, #12]
 8005436:	683a      	ldr	r2, [r7, #0]
 8005438:	68fb      	ldr	r3, [r7, #12]
 800543a:	4313      	orrs	r3, r2
 800543c:	f043 0307 	orr.w	r3, r3, #7
 8005440:	60fb      	str	r3, [r7, #12]
 8005442:	687b      	ldr	r3, [r7, #4]
 8005444:	68fa      	ldr	r2, [r7, #12]
 8005446:	609a      	str	r2, [r3, #8]
 8005448:	bf00      	nop
 800544a:	3714      	adds	r7, #20
 800544c:	46bd      	mov	sp, r7
 800544e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005452:	4770      	bx	lr

08005454 <TIM_ETR_SetConfig>:
 8005454:	b480      	push	{r7}
 8005456:	b087      	sub	sp, #28
 8005458:	af00      	add	r7, sp, #0
 800545a:	60f8      	str	r0, [r7, #12]
 800545c:	60b9      	str	r1, [r7, #8]
 800545e:	607a      	str	r2, [r7, #4]
 8005460:	603b      	str	r3, [r7, #0]
 8005462:	68fb      	ldr	r3, [r7, #12]
 8005464:	689b      	ldr	r3, [r3, #8]
 8005466:	617b      	str	r3, [r7, #20]
 8005468:	697b      	ldr	r3, [r7, #20]
 800546a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800546e:	617b      	str	r3, [r7, #20]
 8005470:	683b      	ldr	r3, [r7, #0]
 8005472:	021a      	lsls	r2, r3, #8
 8005474:	687b      	ldr	r3, [r7, #4]
 8005476:	431a      	orrs	r2, r3
 8005478:	68bb      	ldr	r3, [r7, #8]
 800547a:	4313      	orrs	r3, r2
 800547c:	697a      	ldr	r2, [r7, #20]
 800547e:	4313      	orrs	r3, r2
 8005480:	617b      	str	r3, [r7, #20]
 8005482:	68fb      	ldr	r3, [r7, #12]
 8005484:	697a      	ldr	r2, [r7, #20]
 8005486:	609a      	str	r2, [r3, #8]
 8005488:	bf00      	nop
 800548a:	371c      	adds	r7, #28
 800548c:	46bd      	mov	sp, r7
 800548e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005492:	4770      	bx	lr

08005494 <HAL_TIMEx_MasterConfigSynchronization>:
 8005494:	b480      	push	{r7}
 8005496:	b085      	sub	sp, #20
 8005498:	af00      	add	r7, sp, #0
 800549a:	6078      	str	r0, [r7, #4]
 800549c:	6039      	str	r1, [r7, #0]
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80054a4:	2b01      	cmp	r3, #1
 80054a6:	d101      	bne.n	80054ac <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80054a8:	2302      	movs	r3, #2
 80054aa:	e05a      	b.n	8005562 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 80054ac:	687b      	ldr	r3, [r7, #4]
 80054ae:	2201      	movs	r2, #1
 80054b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80054b4:	687b      	ldr	r3, [r7, #4]
 80054b6:	2202      	movs	r2, #2
 80054b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80054bc:	687b      	ldr	r3, [r7, #4]
 80054be:	681b      	ldr	r3, [r3, #0]
 80054c0:	685b      	ldr	r3, [r3, #4]
 80054c2:	60fb      	str	r3, [r7, #12]
 80054c4:	687b      	ldr	r3, [r7, #4]
 80054c6:	681b      	ldr	r3, [r3, #0]
 80054c8:	689b      	ldr	r3, [r3, #8]
 80054ca:	60bb      	str	r3, [r7, #8]
 80054cc:	68fb      	ldr	r3, [r7, #12]
 80054ce:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80054d2:	60fb      	str	r3, [r7, #12]
 80054d4:	683b      	ldr	r3, [r7, #0]
 80054d6:	681b      	ldr	r3, [r3, #0]
 80054d8:	68fa      	ldr	r2, [r7, #12]
 80054da:	4313      	orrs	r3, r2
 80054dc:	60fb      	str	r3, [r7, #12]
 80054de:	687b      	ldr	r3, [r7, #4]
 80054e0:	681b      	ldr	r3, [r3, #0]
 80054e2:	68fa      	ldr	r2, [r7, #12]
 80054e4:	605a      	str	r2, [r3, #4]
 80054e6:	687b      	ldr	r3, [r7, #4]
 80054e8:	681b      	ldr	r3, [r3, #0]
 80054ea:	4a21      	ldr	r2, [pc, #132]	; (8005570 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 80054ec:	4293      	cmp	r3, r2
 80054ee:	d022      	beq.n	8005536 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80054f0:	687b      	ldr	r3, [r7, #4]
 80054f2:	681b      	ldr	r3, [r3, #0]
 80054f4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80054f8:	d01d      	beq.n	8005536 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	681b      	ldr	r3, [r3, #0]
 80054fe:	4a1d      	ldr	r2, [pc, #116]	; (8005574 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8005500:	4293      	cmp	r3, r2
 8005502:	d018      	beq.n	8005536 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005504:	687b      	ldr	r3, [r7, #4]
 8005506:	681b      	ldr	r3, [r3, #0]
 8005508:	4a1b      	ldr	r2, [pc, #108]	; (8005578 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800550a:	4293      	cmp	r3, r2
 800550c:	d013      	beq.n	8005536 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	681b      	ldr	r3, [r3, #0]
 8005512:	4a1a      	ldr	r2, [pc, #104]	; (800557c <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8005514:	4293      	cmp	r3, r2
 8005516:	d00e      	beq.n	8005536 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005518:	687b      	ldr	r3, [r7, #4]
 800551a:	681b      	ldr	r3, [r3, #0]
 800551c:	4a18      	ldr	r2, [pc, #96]	; (8005580 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800551e:	4293      	cmp	r3, r2
 8005520:	d009      	beq.n	8005536 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005522:	687b      	ldr	r3, [r7, #4]
 8005524:	681b      	ldr	r3, [r3, #0]
 8005526:	4a17      	ldr	r2, [pc, #92]	; (8005584 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8005528:	4293      	cmp	r3, r2
 800552a:	d004      	beq.n	8005536 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800552c:	687b      	ldr	r3, [r7, #4]
 800552e:	681b      	ldr	r3, [r3, #0]
 8005530:	4a15      	ldr	r2, [pc, #84]	; (8005588 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8005532:	4293      	cmp	r3, r2
 8005534:	d10c      	bne.n	8005550 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8005536:	68bb      	ldr	r3, [r7, #8]
 8005538:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800553c:	60bb      	str	r3, [r7, #8]
 800553e:	683b      	ldr	r3, [r7, #0]
 8005540:	685b      	ldr	r3, [r3, #4]
 8005542:	68ba      	ldr	r2, [r7, #8]
 8005544:	4313      	orrs	r3, r2
 8005546:	60bb      	str	r3, [r7, #8]
 8005548:	687b      	ldr	r3, [r7, #4]
 800554a:	681b      	ldr	r3, [r3, #0]
 800554c:	68ba      	ldr	r2, [r7, #8]
 800554e:	609a      	str	r2, [r3, #8]
 8005550:	687b      	ldr	r3, [r7, #4]
 8005552:	2201      	movs	r2, #1
 8005554:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005558:	687b      	ldr	r3, [r7, #4]
 800555a:	2200      	movs	r2, #0
 800555c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005560:	2300      	movs	r3, #0
 8005562:	4618      	mov	r0, r3
 8005564:	3714      	adds	r7, #20
 8005566:	46bd      	mov	sp, r7
 8005568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800556c:	4770      	bx	lr
 800556e:	bf00      	nop
 8005570:	40010000 	.word	0x40010000
 8005574:	40000400 	.word	0x40000400
 8005578:	40000800 	.word	0x40000800
 800557c:	40000c00 	.word	0x40000c00
 8005580:	40010400 	.word	0x40010400
 8005584:	40014000 	.word	0x40014000
 8005588:	40001800 	.word	0x40001800

0800558c <HAL_TIMEx_CommutCallback>:
 800558c:	b480      	push	{r7}
 800558e:	b083      	sub	sp, #12
 8005590:	af00      	add	r7, sp, #0
 8005592:	6078      	str	r0, [r7, #4]
 8005594:	bf00      	nop
 8005596:	370c      	adds	r7, #12
 8005598:	46bd      	mov	sp, r7
 800559a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800559e:	4770      	bx	lr

080055a0 <HAL_TIMEx_BreakCallback>:
 80055a0:	b480      	push	{r7}
 80055a2:	b083      	sub	sp, #12
 80055a4:	af00      	add	r7, sp, #0
 80055a6:	6078      	str	r0, [r7, #4]
 80055a8:	bf00      	nop
 80055aa:	370c      	adds	r7, #12
 80055ac:	46bd      	mov	sp, r7
 80055ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055b2:	4770      	bx	lr

080055b4 <HAL_UART_Init>:
 80055b4:	b580      	push	{r7, lr}
 80055b6:	b082      	sub	sp, #8
 80055b8:	af00      	add	r7, sp, #0
 80055ba:	6078      	str	r0, [r7, #4]
 80055bc:	687b      	ldr	r3, [r7, #4]
 80055be:	2b00      	cmp	r3, #0
 80055c0:	d101      	bne.n	80055c6 <HAL_UART_Init+0x12>
 80055c2:	2301      	movs	r3, #1
 80055c4:	e03f      	b.n	8005646 <HAL_UART_Init+0x92>
 80055c6:	687b      	ldr	r3, [r7, #4]
 80055c8:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80055cc:	b2db      	uxtb	r3, r3
 80055ce:	2b00      	cmp	r3, #0
 80055d0:	d106      	bne.n	80055e0 <HAL_UART_Init+0x2c>
 80055d2:	687b      	ldr	r3, [r7, #4]
 80055d4:	2200      	movs	r2, #0
 80055d6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80055da:	6878      	ldr	r0, [r7, #4]
 80055dc:	f7fd fbc4 	bl	8002d68 <HAL_UART_MspInit>
 80055e0:	687b      	ldr	r3, [r7, #4]
 80055e2:	2224      	movs	r2, #36	; 0x24
 80055e4:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80055e8:	687b      	ldr	r3, [r7, #4]
 80055ea:	681b      	ldr	r3, [r3, #0]
 80055ec:	68da      	ldr	r2, [r3, #12]
 80055ee:	687b      	ldr	r3, [r7, #4]
 80055f0:	681b      	ldr	r3, [r3, #0]
 80055f2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80055f6:	60da      	str	r2, [r3, #12]
 80055f8:	6878      	ldr	r0, [r7, #4]
 80055fa:	f000 fb97 	bl	8005d2c <UART_SetConfig>
 80055fe:	687b      	ldr	r3, [r7, #4]
 8005600:	681b      	ldr	r3, [r3, #0]
 8005602:	691a      	ldr	r2, [r3, #16]
 8005604:	687b      	ldr	r3, [r7, #4]
 8005606:	681b      	ldr	r3, [r3, #0]
 8005608:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800560c:	611a      	str	r2, [r3, #16]
 800560e:	687b      	ldr	r3, [r7, #4]
 8005610:	681b      	ldr	r3, [r3, #0]
 8005612:	695a      	ldr	r2, [r3, #20]
 8005614:	687b      	ldr	r3, [r7, #4]
 8005616:	681b      	ldr	r3, [r3, #0]
 8005618:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800561c:	615a      	str	r2, [r3, #20]
 800561e:	687b      	ldr	r3, [r7, #4]
 8005620:	681b      	ldr	r3, [r3, #0]
 8005622:	68da      	ldr	r2, [r3, #12]
 8005624:	687b      	ldr	r3, [r7, #4]
 8005626:	681b      	ldr	r3, [r3, #0]
 8005628:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800562c:	60da      	str	r2, [r3, #12]
 800562e:	687b      	ldr	r3, [r7, #4]
 8005630:	2200      	movs	r2, #0
 8005632:	63da      	str	r2, [r3, #60]	; 0x3c
 8005634:	687b      	ldr	r3, [r7, #4]
 8005636:	2220      	movs	r2, #32
 8005638:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800563c:	687b      	ldr	r3, [r7, #4]
 800563e:	2220      	movs	r2, #32
 8005640:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8005644:	2300      	movs	r3, #0
 8005646:	4618      	mov	r0, r3
 8005648:	3708      	adds	r7, #8
 800564a:	46bd      	mov	sp, r7
 800564c:	bd80      	pop	{r7, pc}

0800564e <HAL_UART_Transmit>:
 800564e:	b580      	push	{r7, lr}
 8005650:	b088      	sub	sp, #32
 8005652:	af02      	add	r7, sp, #8
 8005654:	60f8      	str	r0, [r7, #12]
 8005656:	60b9      	str	r1, [r7, #8]
 8005658:	603b      	str	r3, [r7, #0]
 800565a:	4613      	mov	r3, r2
 800565c:	80fb      	strh	r3, [r7, #6]
 800565e:	2300      	movs	r3, #0
 8005660:	617b      	str	r3, [r7, #20]
 8005662:	68fb      	ldr	r3, [r7, #12]
 8005664:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8005668:	b2db      	uxtb	r3, r3
 800566a:	2b20      	cmp	r3, #32
 800566c:	f040 8083 	bne.w	8005776 <HAL_UART_Transmit+0x128>
 8005670:	68bb      	ldr	r3, [r7, #8]
 8005672:	2b00      	cmp	r3, #0
 8005674:	d002      	beq.n	800567c <HAL_UART_Transmit+0x2e>
 8005676:	88fb      	ldrh	r3, [r7, #6]
 8005678:	2b00      	cmp	r3, #0
 800567a:	d101      	bne.n	8005680 <HAL_UART_Transmit+0x32>
 800567c:	2301      	movs	r3, #1
 800567e:	e07b      	b.n	8005778 <HAL_UART_Transmit+0x12a>
 8005680:	68fb      	ldr	r3, [r7, #12]
 8005682:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8005686:	2b01      	cmp	r3, #1
 8005688:	d101      	bne.n	800568e <HAL_UART_Transmit+0x40>
 800568a:	2302      	movs	r3, #2
 800568c:	e074      	b.n	8005778 <HAL_UART_Transmit+0x12a>
 800568e:	68fb      	ldr	r3, [r7, #12]
 8005690:	2201      	movs	r2, #1
 8005692:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8005696:	68fb      	ldr	r3, [r7, #12]
 8005698:	2200      	movs	r2, #0
 800569a:	63da      	str	r2, [r3, #60]	; 0x3c
 800569c:	68fb      	ldr	r3, [r7, #12]
 800569e:	2221      	movs	r2, #33	; 0x21
 80056a0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80056a4:	f7fd fce8 	bl	8003078 <HAL_GetTick>
 80056a8:	6178      	str	r0, [r7, #20]
 80056aa:	68fb      	ldr	r3, [r7, #12]
 80056ac:	88fa      	ldrh	r2, [r7, #6]
 80056ae:	849a      	strh	r2, [r3, #36]	; 0x24
 80056b0:	68fb      	ldr	r3, [r7, #12]
 80056b2:	88fa      	ldrh	r2, [r7, #6]
 80056b4:	84da      	strh	r2, [r3, #38]	; 0x26
 80056b6:	68fb      	ldr	r3, [r7, #12]
 80056b8:	2200      	movs	r2, #0
 80056ba:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80056be:	e042      	b.n	8005746 <HAL_UART_Transmit+0xf8>
 80056c0:	68fb      	ldr	r3, [r7, #12]
 80056c2:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80056c4:	b29b      	uxth	r3, r3
 80056c6:	3b01      	subs	r3, #1
 80056c8:	b29a      	uxth	r2, r3
 80056ca:	68fb      	ldr	r3, [r7, #12]
 80056cc:	84da      	strh	r2, [r3, #38]	; 0x26
 80056ce:	68fb      	ldr	r3, [r7, #12]
 80056d0:	689b      	ldr	r3, [r3, #8]
 80056d2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80056d6:	d122      	bne.n	800571e <HAL_UART_Transmit+0xd0>
 80056d8:	683b      	ldr	r3, [r7, #0]
 80056da:	9300      	str	r3, [sp, #0]
 80056dc:	697b      	ldr	r3, [r7, #20]
 80056de:	2200      	movs	r2, #0
 80056e0:	2180      	movs	r1, #128	; 0x80
 80056e2:	68f8      	ldr	r0, [r7, #12]
 80056e4:	f000 f9b6 	bl	8005a54 <UART_WaitOnFlagUntilTimeout>
 80056e8:	4603      	mov	r3, r0
 80056ea:	2b00      	cmp	r3, #0
 80056ec:	d001      	beq.n	80056f2 <HAL_UART_Transmit+0xa4>
 80056ee:	2303      	movs	r3, #3
 80056f0:	e042      	b.n	8005778 <HAL_UART_Transmit+0x12a>
 80056f2:	68bb      	ldr	r3, [r7, #8]
 80056f4:	613b      	str	r3, [r7, #16]
 80056f6:	693b      	ldr	r3, [r7, #16]
 80056f8:	881b      	ldrh	r3, [r3, #0]
 80056fa:	461a      	mov	r2, r3
 80056fc:	68fb      	ldr	r3, [r7, #12]
 80056fe:	681b      	ldr	r3, [r3, #0]
 8005700:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005704:	605a      	str	r2, [r3, #4]
 8005706:	68fb      	ldr	r3, [r7, #12]
 8005708:	691b      	ldr	r3, [r3, #16]
 800570a:	2b00      	cmp	r3, #0
 800570c:	d103      	bne.n	8005716 <HAL_UART_Transmit+0xc8>
 800570e:	68bb      	ldr	r3, [r7, #8]
 8005710:	3302      	adds	r3, #2
 8005712:	60bb      	str	r3, [r7, #8]
 8005714:	e017      	b.n	8005746 <HAL_UART_Transmit+0xf8>
 8005716:	68bb      	ldr	r3, [r7, #8]
 8005718:	3301      	adds	r3, #1
 800571a:	60bb      	str	r3, [r7, #8]
 800571c:	e013      	b.n	8005746 <HAL_UART_Transmit+0xf8>
 800571e:	683b      	ldr	r3, [r7, #0]
 8005720:	9300      	str	r3, [sp, #0]
 8005722:	697b      	ldr	r3, [r7, #20]
 8005724:	2200      	movs	r2, #0
 8005726:	2180      	movs	r1, #128	; 0x80
 8005728:	68f8      	ldr	r0, [r7, #12]
 800572a:	f000 f993 	bl	8005a54 <UART_WaitOnFlagUntilTimeout>
 800572e:	4603      	mov	r3, r0
 8005730:	2b00      	cmp	r3, #0
 8005732:	d001      	beq.n	8005738 <HAL_UART_Transmit+0xea>
 8005734:	2303      	movs	r3, #3
 8005736:	e01f      	b.n	8005778 <HAL_UART_Transmit+0x12a>
 8005738:	68bb      	ldr	r3, [r7, #8]
 800573a:	1c5a      	adds	r2, r3, #1
 800573c:	60ba      	str	r2, [r7, #8]
 800573e:	781a      	ldrb	r2, [r3, #0]
 8005740:	68fb      	ldr	r3, [r7, #12]
 8005742:	681b      	ldr	r3, [r3, #0]
 8005744:	605a      	str	r2, [r3, #4]
 8005746:	68fb      	ldr	r3, [r7, #12]
 8005748:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800574a:	b29b      	uxth	r3, r3
 800574c:	2b00      	cmp	r3, #0
 800574e:	d1b7      	bne.n	80056c0 <HAL_UART_Transmit+0x72>
 8005750:	683b      	ldr	r3, [r7, #0]
 8005752:	9300      	str	r3, [sp, #0]
 8005754:	697b      	ldr	r3, [r7, #20]
 8005756:	2200      	movs	r2, #0
 8005758:	2140      	movs	r1, #64	; 0x40
 800575a:	68f8      	ldr	r0, [r7, #12]
 800575c:	f000 f97a 	bl	8005a54 <UART_WaitOnFlagUntilTimeout>
 8005760:	4603      	mov	r3, r0
 8005762:	2b00      	cmp	r3, #0
 8005764:	d001      	beq.n	800576a <HAL_UART_Transmit+0x11c>
 8005766:	2303      	movs	r3, #3
 8005768:	e006      	b.n	8005778 <HAL_UART_Transmit+0x12a>
 800576a:	68fb      	ldr	r3, [r7, #12]
 800576c:	2220      	movs	r2, #32
 800576e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005772:	2300      	movs	r3, #0
 8005774:	e000      	b.n	8005778 <HAL_UART_Transmit+0x12a>
 8005776:	2302      	movs	r3, #2
 8005778:	4618      	mov	r0, r3
 800577a:	3718      	adds	r7, #24
 800577c:	46bd      	mov	sp, r7
 800577e:	bd80      	pop	{r7, pc}

08005780 <HAL_UART_Receive_IT>:
 8005780:	b480      	push	{r7}
 8005782:	b085      	sub	sp, #20
 8005784:	af00      	add	r7, sp, #0
 8005786:	60f8      	str	r0, [r7, #12]
 8005788:	60b9      	str	r1, [r7, #8]
 800578a:	4613      	mov	r3, r2
 800578c:	80fb      	strh	r3, [r7, #6]
 800578e:	68fb      	ldr	r3, [r7, #12]
 8005790:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8005794:	b2db      	uxtb	r3, r3
 8005796:	2b20      	cmp	r3, #32
 8005798:	d140      	bne.n	800581c <HAL_UART_Receive_IT+0x9c>
 800579a:	68bb      	ldr	r3, [r7, #8]
 800579c:	2b00      	cmp	r3, #0
 800579e:	d002      	beq.n	80057a6 <HAL_UART_Receive_IT+0x26>
 80057a0:	88fb      	ldrh	r3, [r7, #6]
 80057a2:	2b00      	cmp	r3, #0
 80057a4:	d101      	bne.n	80057aa <HAL_UART_Receive_IT+0x2a>
 80057a6:	2301      	movs	r3, #1
 80057a8:	e039      	b.n	800581e <HAL_UART_Receive_IT+0x9e>
 80057aa:	68fb      	ldr	r3, [r7, #12]
 80057ac:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80057b0:	2b01      	cmp	r3, #1
 80057b2:	d101      	bne.n	80057b8 <HAL_UART_Receive_IT+0x38>
 80057b4:	2302      	movs	r3, #2
 80057b6:	e032      	b.n	800581e <HAL_UART_Receive_IT+0x9e>
 80057b8:	68fb      	ldr	r3, [r7, #12]
 80057ba:	2201      	movs	r2, #1
 80057bc:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80057c0:	68fb      	ldr	r3, [r7, #12]
 80057c2:	68ba      	ldr	r2, [r7, #8]
 80057c4:	629a      	str	r2, [r3, #40]	; 0x28
 80057c6:	68fb      	ldr	r3, [r7, #12]
 80057c8:	88fa      	ldrh	r2, [r7, #6]
 80057ca:	859a      	strh	r2, [r3, #44]	; 0x2c
 80057cc:	68fb      	ldr	r3, [r7, #12]
 80057ce:	88fa      	ldrh	r2, [r7, #6]
 80057d0:	85da      	strh	r2, [r3, #46]	; 0x2e
 80057d2:	68fb      	ldr	r3, [r7, #12]
 80057d4:	2200      	movs	r2, #0
 80057d6:	63da      	str	r2, [r3, #60]	; 0x3c
 80057d8:	68fb      	ldr	r3, [r7, #12]
 80057da:	2222      	movs	r2, #34	; 0x22
 80057dc:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80057e0:	68fb      	ldr	r3, [r7, #12]
 80057e2:	2200      	movs	r2, #0
 80057e4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80057e8:	68fb      	ldr	r3, [r7, #12]
 80057ea:	681b      	ldr	r3, [r3, #0]
 80057ec:	68da      	ldr	r2, [r3, #12]
 80057ee:	68fb      	ldr	r3, [r7, #12]
 80057f0:	681b      	ldr	r3, [r3, #0]
 80057f2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80057f6:	60da      	str	r2, [r3, #12]
 80057f8:	68fb      	ldr	r3, [r7, #12]
 80057fa:	681b      	ldr	r3, [r3, #0]
 80057fc:	695a      	ldr	r2, [r3, #20]
 80057fe:	68fb      	ldr	r3, [r7, #12]
 8005800:	681b      	ldr	r3, [r3, #0]
 8005802:	f042 0201 	orr.w	r2, r2, #1
 8005806:	615a      	str	r2, [r3, #20]
 8005808:	68fb      	ldr	r3, [r7, #12]
 800580a:	681b      	ldr	r3, [r3, #0]
 800580c:	68da      	ldr	r2, [r3, #12]
 800580e:	68fb      	ldr	r3, [r7, #12]
 8005810:	681b      	ldr	r3, [r3, #0]
 8005812:	f042 0220 	orr.w	r2, r2, #32
 8005816:	60da      	str	r2, [r3, #12]
 8005818:	2300      	movs	r3, #0
 800581a:	e000      	b.n	800581e <HAL_UART_Receive_IT+0x9e>
 800581c:	2302      	movs	r3, #2
 800581e:	4618      	mov	r0, r3
 8005820:	3714      	adds	r7, #20
 8005822:	46bd      	mov	sp, r7
 8005824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005828:	4770      	bx	lr
	...

0800582c <HAL_UART_IRQHandler>:
 800582c:	b580      	push	{r7, lr}
 800582e:	b088      	sub	sp, #32
 8005830:	af00      	add	r7, sp, #0
 8005832:	6078      	str	r0, [r7, #4]
 8005834:	687b      	ldr	r3, [r7, #4]
 8005836:	681b      	ldr	r3, [r3, #0]
 8005838:	681b      	ldr	r3, [r3, #0]
 800583a:	61fb      	str	r3, [r7, #28]
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	681b      	ldr	r3, [r3, #0]
 8005840:	68db      	ldr	r3, [r3, #12]
 8005842:	61bb      	str	r3, [r7, #24]
 8005844:	687b      	ldr	r3, [r7, #4]
 8005846:	681b      	ldr	r3, [r3, #0]
 8005848:	695b      	ldr	r3, [r3, #20]
 800584a:	617b      	str	r3, [r7, #20]
 800584c:	2300      	movs	r3, #0
 800584e:	613b      	str	r3, [r7, #16]
 8005850:	2300      	movs	r3, #0
 8005852:	60fb      	str	r3, [r7, #12]
 8005854:	69fb      	ldr	r3, [r7, #28]
 8005856:	f003 030f 	and.w	r3, r3, #15
 800585a:	613b      	str	r3, [r7, #16]
 800585c:	693b      	ldr	r3, [r7, #16]
 800585e:	2b00      	cmp	r3, #0
 8005860:	d10d      	bne.n	800587e <HAL_UART_IRQHandler+0x52>
 8005862:	69fb      	ldr	r3, [r7, #28]
 8005864:	f003 0320 	and.w	r3, r3, #32
 8005868:	2b00      	cmp	r3, #0
 800586a:	d008      	beq.n	800587e <HAL_UART_IRQHandler+0x52>
 800586c:	69bb      	ldr	r3, [r7, #24]
 800586e:	f003 0320 	and.w	r3, r3, #32
 8005872:	2b00      	cmp	r3, #0
 8005874:	d003      	beq.n	800587e <HAL_UART_IRQHandler+0x52>
 8005876:	6878      	ldr	r0, [r7, #4]
 8005878:	f000 f9d6 	bl	8005c28 <UART_Receive_IT>
 800587c:	e0d1      	b.n	8005a22 <HAL_UART_IRQHandler+0x1f6>
 800587e:	693b      	ldr	r3, [r7, #16]
 8005880:	2b00      	cmp	r3, #0
 8005882:	f000 80b0 	beq.w	80059e6 <HAL_UART_IRQHandler+0x1ba>
 8005886:	697b      	ldr	r3, [r7, #20]
 8005888:	f003 0301 	and.w	r3, r3, #1
 800588c:	2b00      	cmp	r3, #0
 800588e:	d105      	bne.n	800589c <HAL_UART_IRQHandler+0x70>
 8005890:	69bb      	ldr	r3, [r7, #24]
 8005892:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8005896:	2b00      	cmp	r3, #0
 8005898:	f000 80a5 	beq.w	80059e6 <HAL_UART_IRQHandler+0x1ba>
 800589c:	69fb      	ldr	r3, [r7, #28]
 800589e:	f003 0301 	and.w	r3, r3, #1
 80058a2:	2b00      	cmp	r3, #0
 80058a4:	d00a      	beq.n	80058bc <HAL_UART_IRQHandler+0x90>
 80058a6:	69bb      	ldr	r3, [r7, #24]
 80058a8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80058ac:	2b00      	cmp	r3, #0
 80058ae:	d005      	beq.n	80058bc <HAL_UART_IRQHandler+0x90>
 80058b0:	687b      	ldr	r3, [r7, #4]
 80058b2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80058b4:	f043 0201 	orr.w	r2, r3, #1
 80058b8:	687b      	ldr	r3, [r7, #4]
 80058ba:	63da      	str	r2, [r3, #60]	; 0x3c
 80058bc:	69fb      	ldr	r3, [r7, #28]
 80058be:	f003 0304 	and.w	r3, r3, #4
 80058c2:	2b00      	cmp	r3, #0
 80058c4:	d00a      	beq.n	80058dc <HAL_UART_IRQHandler+0xb0>
 80058c6:	697b      	ldr	r3, [r7, #20]
 80058c8:	f003 0301 	and.w	r3, r3, #1
 80058cc:	2b00      	cmp	r3, #0
 80058ce:	d005      	beq.n	80058dc <HAL_UART_IRQHandler+0xb0>
 80058d0:	687b      	ldr	r3, [r7, #4]
 80058d2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80058d4:	f043 0202 	orr.w	r2, r3, #2
 80058d8:	687b      	ldr	r3, [r7, #4]
 80058da:	63da      	str	r2, [r3, #60]	; 0x3c
 80058dc:	69fb      	ldr	r3, [r7, #28]
 80058de:	f003 0302 	and.w	r3, r3, #2
 80058e2:	2b00      	cmp	r3, #0
 80058e4:	d00a      	beq.n	80058fc <HAL_UART_IRQHandler+0xd0>
 80058e6:	697b      	ldr	r3, [r7, #20]
 80058e8:	f003 0301 	and.w	r3, r3, #1
 80058ec:	2b00      	cmp	r3, #0
 80058ee:	d005      	beq.n	80058fc <HAL_UART_IRQHandler+0xd0>
 80058f0:	687b      	ldr	r3, [r7, #4]
 80058f2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80058f4:	f043 0204 	orr.w	r2, r3, #4
 80058f8:	687b      	ldr	r3, [r7, #4]
 80058fa:	63da      	str	r2, [r3, #60]	; 0x3c
 80058fc:	69fb      	ldr	r3, [r7, #28]
 80058fe:	f003 0308 	and.w	r3, r3, #8
 8005902:	2b00      	cmp	r3, #0
 8005904:	d00f      	beq.n	8005926 <HAL_UART_IRQHandler+0xfa>
 8005906:	69bb      	ldr	r3, [r7, #24]
 8005908:	f003 0320 	and.w	r3, r3, #32
 800590c:	2b00      	cmp	r3, #0
 800590e:	d104      	bne.n	800591a <HAL_UART_IRQHandler+0xee>
 8005910:	697b      	ldr	r3, [r7, #20]
 8005912:	f003 0301 	and.w	r3, r3, #1
 8005916:	2b00      	cmp	r3, #0
 8005918:	d005      	beq.n	8005926 <HAL_UART_IRQHandler+0xfa>
 800591a:	687b      	ldr	r3, [r7, #4]
 800591c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800591e:	f043 0208 	orr.w	r2, r3, #8
 8005922:	687b      	ldr	r3, [r7, #4]
 8005924:	63da      	str	r2, [r3, #60]	; 0x3c
 8005926:	687b      	ldr	r3, [r7, #4]
 8005928:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800592a:	2b00      	cmp	r3, #0
 800592c:	d078      	beq.n	8005a20 <HAL_UART_IRQHandler+0x1f4>
 800592e:	69fb      	ldr	r3, [r7, #28]
 8005930:	f003 0320 	and.w	r3, r3, #32
 8005934:	2b00      	cmp	r3, #0
 8005936:	d007      	beq.n	8005948 <HAL_UART_IRQHandler+0x11c>
 8005938:	69bb      	ldr	r3, [r7, #24]
 800593a:	f003 0320 	and.w	r3, r3, #32
 800593e:	2b00      	cmp	r3, #0
 8005940:	d002      	beq.n	8005948 <HAL_UART_IRQHandler+0x11c>
 8005942:	6878      	ldr	r0, [r7, #4]
 8005944:	f000 f970 	bl	8005c28 <UART_Receive_IT>
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	695b      	ldr	r3, [r3, #20]
 800594e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005952:	2b40      	cmp	r3, #64	; 0x40
 8005954:	bf0c      	ite	eq
 8005956:	2301      	moveq	r3, #1
 8005958:	2300      	movne	r3, #0
 800595a:	b2db      	uxtb	r3, r3
 800595c:	60fb      	str	r3, [r7, #12]
 800595e:	687b      	ldr	r3, [r7, #4]
 8005960:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005962:	f003 0308 	and.w	r3, r3, #8
 8005966:	2b00      	cmp	r3, #0
 8005968:	d102      	bne.n	8005970 <HAL_UART_IRQHandler+0x144>
 800596a:	68fb      	ldr	r3, [r7, #12]
 800596c:	2b00      	cmp	r3, #0
 800596e:	d031      	beq.n	80059d4 <HAL_UART_IRQHandler+0x1a8>
 8005970:	6878      	ldr	r0, [r7, #4]
 8005972:	f000 f8b9 	bl	8005ae8 <UART_EndRxTransfer>
 8005976:	687b      	ldr	r3, [r7, #4]
 8005978:	681b      	ldr	r3, [r3, #0]
 800597a:	695b      	ldr	r3, [r3, #20]
 800597c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005980:	2b40      	cmp	r3, #64	; 0x40
 8005982:	d123      	bne.n	80059cc <HAL_UART_IRQHandler+0x1a0>
 8005984:	687b      	ldr	r3, [r7, #4]
 8005986:	681b      	ldr	r3, [r3, #0]
 8005988:	695a      	ldr	r2, [r3, #20]
 800598a:	687b      	ldr	r3, [r7, #4]
 800598c:	681b      	ldr	r3, [r3, #0]
 800598e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005992:	615a      	str	r2, [r3, #20]
 8005994:	687b      	ldr	r3, [r7, #4]
 8005996:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005998:	2b00      	cmp	r3, #0
 800599a:	d013      	beq.n	80059c4 <HAL_UART_IRQHandler+0x198>
 800599c:	687b      	ldr	r3, [r7, #4]
 800599e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80059a0:	4a21      	ldr	r2, [pc, #132]	; (8005a28 <HAL_UART_IRQHandler+0x1fc>)
 80059a2:	651a      	str	r2, [r3, #80]	; 0x50
 80059a4:	687b      	ldr	r3, [r7, #4]
 80059a6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80059a8:	4618      	mov	r0, r3
 80059aa:	f7fe f851 	bl	8003a50 <HAL_DMA_Abort_IT>
 80059ae:	4603      	mov	r3, r0
 80059b0:	2b00      	cmp	r3, #0
 80059b2:	d016      	beq.n	80059e2 <HAL_UART_IRQHandler+0x1b6>
 80059b4:	687b      	ldr	r3, [r7, #4]
 80059b6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80059b8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80059ba:	687a      	ldr	r2, [r7, #4]
 80059bc:	6b52      	ldr	r2, [r2, #52]	; 0x34
 80059be:	4610      	mov	r0, r2
 80059c0:	4798      	blx	r3
 80059c2:	e00e      	b.n	80059e2 <HAL_UART_IRQHandler+0x1b6>
 80059c4:	6878      	ldr	r0, [r7, #4]
 80059c6:	f000 f83b 	bl	8005a40 <HAL_UART_ErrorCallback>
 80059ca:	e00a      	b.n	80059e2 <HAL_UART_IRQHandler+0x1b6>
 80059cc:	6878      	ldr	r0, [r7, #4]
 80059ce:	f000 f837 	bl	8005a40 <HAL_UART_ErrorCallback>
 80059d2:	e006      	b.n	80059e2 <HAL_UART_IRQHandler+0x1b6>
 80059d4:	6878      	ldr	r0, [r7, #4]
 80059d6:	f000 f833 	bl	8005a40 <HAL_UART_ErrorCallback>
 80059da:	687b      	ldr	r3, [r7, #4]
 80059dc:	2200      	movs	r2, #0
 80059de:	63da      	str	r2, [r3, #60]	; 0x3c
 80059e0:	e01e      	b.n	8005a20 <HAL_UART_IRQHandler+0x1f4>
 80059e2:	bf00      	nop
 80059e4:	e01c      	b.n	8005a20 <HAL_UART_IRQHandler+0x1f4>
 80059e6:	69fb      	ldr	r3, [r7, #28]
 80059e8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80059ec:	2b00      	cmp	r3, #0
 80059ee:	d008      	beq.n	8005a02 <HAL_UART_IRQHandler+0x1d6>
 80059f0:	69bb      	ldr	r3, [r7, #24]
 80059f2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80059f6:	2b00      	cmp	r3, #0
 80059f8:	d003      	beq.n	8005a02 <HAL_UART_IRQHandler+0x1d6>
 80059fa:	6878      	ldr	r0, [r7, #4]
 80059fc:	f000 f8a6 	bl	8005b4c <UART_Transmit_IT>
 8005a00:	e00f      	b.n	8005a22 <HAL_UART_IRQHandler+0x1f6>
 8005a02:	69fb      	ldr	r3, [r7, #28]
 8005a04:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005a08:	2b00      	cmp	r3, #0
 8005a0a:	d00a      	beq.n	8005a22 <HAL_UART_IRQHandler+0x1f6>
 8005a0c:	69bb      	ldr	r3, [r7, #24]
 8005a0e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005a12:	2b00      	cmp	r3, #0
 8005a14:	d005      	beq.n	8005a22 <HAL_UART_IRQHandler+0x1f6>
 8005a16:	6878      	ldr	r0, [r7, #4]
 8005a18:	f000 f8ee 	bl	8005bf8 <UART_EndTransmit_IT>
 8005a1c:	bf00      	nop
 8005a1e:	e000      	b.n	8005a22 <HAL_UART_IRQHandler+0x1f6>
 8005a20:	bf00      	nop
 8005a22:	3720      	adds	r7, #32
 8005a24:	46bd      	mov	sp, r7
 8005a26:	bd80      	pop	{r7, pc}
 8005a28:	08005b25 	.word	0x08005b25

08005a2c <HAL_UART_TxCpltCallback>:
 8005a2c:	b480      	push	{r7}
 8005a2e:	b083      	sub	sp, #12
 8005a30:	af00      	add	r7, sp, #0
 8005a32:	6078      	str	r0, [r7, #4]
 8005a34:	bf00      	nop
 8005a36:	370c      	adds	r7, #12
 8005a38:	46bd      	mov	sp, r7
 8005a3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a3e:	4770      	bx	lr

08005a40 <HAL_UART_ErrorCallback>:
 8005a40:	b480      	push	{r7}
 8005a42:	b083      	sub	sp, #12
 8005a44:	af00      	add	r7, sp, #0
 8005a46:	6078      	str	r0, [r7, #4]
 8005a48:	bf00      	nop
 8005a4a:	370c      	adds	r7, #12
 8005a4c:	46bd      	mov	sp, r7
 8005a4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a52:	4770      	bx	lr

08005a54 <UART_WaitOnFlagUntilTimeout>:
 8005a54:	b580      	push	{r7, lr}
 8005a56:	b084      	sub	sp, #16
 8005a58:	af00      	add	r7, sp, #0
 8005a5a:	60f8      	str	r0, [r7, #12]
 8005a5c:	60b9      	str	r1, [r7, #8]
 8005a5e:	603b      	str	r3, [r7, #0]
 8005a60:	4613      	mov	r3, r2
 8005a62:	71fb      	strb	r3, [r7, #7]
 8005a64:	e02c      	b.n	8005ac0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8005a66:	69bb      	ldr	r3, [r7, #24]
 8005a68:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005a6c:	d028      	beq.n	8005ac0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8005a6e:	69bb      	ldr	r3, [r7, #24]
 8005a70:	2b00      	cmp	r3, #0
 8005a72:	d007      	beq.n	8005a84 <UART_WaitOnFlagUntilTimeout+0x30>
 8005a74:	f7fd fb00 	bl	8003078 <HAL_GetTick>
 8005a78:	4602      	mov	r2, r0
 8005a7a:	683b      	ldr	r3, [r7, #0]
 8005a7c:	1ad3      	subs	r3, r2, r3
 8005a7e:	69ba      	ldr	r2, [r7, #24]
 8005a80:	429a      	cmp	r2, r3
 8005a82:	d21d      	bcs.n	8005ac0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8005a84:	68fb      	ldr	r3, [r7, #12]
 8005a86:	681b      	ldr	r3, [r3, #0]
 8005a88:	68da      	ldr	r2, [r3, #12]
 8005a8a:	68fb      	ldr	r3, [r7, #12]
 8005a8c:	681b      	ldr	r3, [r3, #0]
 8005a8e:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8005a92:	60da      	str	r2, [r3, #12]
 8005a94:	68fb      	ldr	r3, [r7, #12]
 8005a96:	681b      	ldr	r3, [r3, #0]
 8005a98:	695a      	ldr	r2, [r3, #20]
 8005a9a:	68fb      	ldr	r3, [r7, #12]
 8005a9c:	681b      	ldr	r3, [r3, #0]
 8005a9e:	f022 0201 	bic.w	r2, r2, #1
 8005aa2:	615a      	str	r2, [r3, #20]
 8005aa4:	68fb      	ldr	r3, [r7, #12]
 8005aa6:	2220      	movs	r2, #32
 8005aa8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005aac:	68fb      	ldr	r3, [r7, #12]
 8005aae:	2220      	movs	r2, #32
 8005ab0:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8005ab4:	68fb      	ldr	r3, [r7, #12]
 8005ab6:	2200      	movs	r2, #0
 8005ab8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8005abc:	2303      	movs	r3, #3
 8005abe:	e00f      	b.n	8005ae0 <UART_WaitOnFlagUntilTimeout+0x8c>
 8005ac0:	68fb      	ldr	r3, [r7, #12]
 8005ac2:	681b      	ldr	r3, [r3, #0]
 8005ac4:	681a      	ldr	r2, [r3, #0]
 8005ac6:	68bb      	ldr	r3, [r7, #8]
 8005ac8:	4013      	ands	r3, r2
 8005aca:	68ba      	ldr	r2, [r7, #8]
 8005acc:	429a      	cmp	r2, r3
 8005ace:	bf0c      	ite	eq
 8005ad0:	2301      	moveq	r3, #1
 8005ad2:	2300      	movne	r3, #0
 8005ad4:	b2db      	uxtb	r3, r3
 8005ad6:	461a      	mov	r2, r3
 8005ad8:	79fb      	ldrb	r3, [r7, #7]
 8005ada:	429a      	cmp	r2, r3
 8005adc:	d0c3      	beq.n	8005a66 <UART_WaitOnFlagUntilTimeout+0x12>
 8005ade:	2300      	movs	r3, #0
 8005ae0:	4618      	mov	r0, r3
 8005ae2:	3710      	adds	r7, #16
 8005ae4:	46bd      	mov	sp, r7
 8005ae6:	bd80      	pop	{r7, pc}

08005ae8 <UART_EndRxTransfer>:
 8005ae8:	b480      	push	{r7}
 8005aea:	b083      	sub	sp, #12
 8005aec:	af00      	add	r7, sp, #0
 8005aee:	6078      	str	r0, [r7, #4]
 8005af0:	687b      	ldr	r3, [r7, #4]
 8005af2:	681b      	ldr	r3, [r3, #0]
 8005af4:	68da      	ldr	r2, [r3, #12]
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	681b      	ldr	r3, [r3, #0]
 8005afa:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8005afe:	60da      	str	r2, [r3, #12]
 8005b00:	687b      	ldr	r3, [r7, #4]
 8005b02:	681b      	ldr	r3, [r3, #0]
 8005b04:	695a      	ldr	r2, [r3, #20]
 8005b06:	687b      	ldr	r3, [r7, #4]
 8005b08:	681b      	ldr	r3, [r3, #0]
 8005b0a:	f022 0201 	bic.w	r2, r2, #1
 8005b0e:	615a      	str	r2, [r3, #20]
 8005b10:	687b      	ldr	r3, [r7, #4]
 8005b12:	2220      	movs	r2, #32
 8005b14:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8005b18:	bf00      	nop
 8005b1a:	370c      	adds	r7, #12
 8005b1c:	46bd      	mov	sp, r7
 8005b1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b22:	4770      	bx	lr

08005b24 <UART_DMAAbortOnError>:
 8005b24:	b580      	push	{r7, lr}
 8005b26:	b084      	sub	sp, #16
 8005b28:	af00      	add	r7, sp, #0
 8005b2a:	6078      	str	r0, [r7, #4]
 8005b2c:	687b      	ldr	r3, [r7, #4]
 8005b2e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005b30:	60fb      	str	r3, [r7, #12]
 8005b32:	68fb      	ldr	r3, [r7, #12]
 8005b34:	2200      	movs	r2, #0
 8005b36:	85da      	strh	r2, [r3, #46]	; 0x2e
 8005b38:	68fb      	ldr	r3, [r7, #12]
 8005b3a:	2200      	movs	r2, #0
 8005b3c:	84da      	strh	r2, [r3, #38]	; 0x26
 8005b3e:	68f8      	ldr	r0, [r7, #12]
 8005b40:	f7ff ff7e 	bl	8005a40 <HAL_UART_ErrorCallback>
 8005b44:	bf00      	nop
 8005b46:	3710      	adds	r7, #16
 8005b48:	46bd      	mov	sp, r7
 8005b4a:	bd80      	pop	{r7, pc}

08005b4c <UART_Transmit_IT>:
 8005b4c:	b480      	push	{r7}
 8005b4e:	b085      	sub	sp, #20
 8005b50:	af00      	add	r7, sp, #0
 8005b52:	6078      	str	r0, [r7, #4]
 8005b54:	687b      	ldr	r3, [r7, #4]
 8005b56:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8005b5a:	b2db      	uxtb	r3, r3
 8005b5c:	2b21      	cmp	r3, #33	; 0x21
 8005b5e:	d144      	bne.n	8005bea <UART_Transmit_IT+0x9e>
 8005b60:	687b      	ldr	r3, [r7, #4]
 8005b62:	689b      	ldr	r3, [r3, #8]
 8005b64:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005b68:	d11a      	bne.n	8005ba0 <UART_Transmit_IT+0x54>
 8005b6a:	687b      	ldr	r3, [r7, #4]
 8005b6c:	6a1b      	ldr	r3, [r3, #32]
 8005b6e:	60fb      	str	r3, [r7, #12]
 8005b70:	68fb      	ldr	r3, [r7, #12]
 8005b72:	881b      	ldrh	r3, [r3, #0]
 8005b74:	461a      	mov	r2, r3
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	681b      	ldr	r3, [r3, #0]
 8005b7a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005b7e:	605a      	str	r2, [r3, #4]
 8005b80:	687b      	ldr	r3, [r7, #4]
 8005b82:	691b      	ldr	r3, [r3, #16]
 8005b84:	2b00      	cmp	r3, #0
 8005b86:	d105      	bne.n	8005b94 <UART_Transmit_IT+0x48>
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	6a1b      	ldr	r3, [r3, #32]
 8005b8c:	1c9a      	adds	r2, r3, #2
 8005b8e:	687b      	ldr	r3, [r7, #4]
 8005b90:	621a      	str	r2, [r3, #32]
 8005b92:	e00e      	b.n	8005bb2 <UART_Transmit_IT+0x66>
 8005b94:	687b      	ldr	r3, [r7, #4]
 8005b96:	6a1b      	ldr	r3, [r3, #32]
 8005b98:	1c5a      	adds	r2, r3, #1
 8005b9a:	687b      	ldr	r3, [r7, #4]
 8005b9c:	621a      	str	r2, [r3, #32]
 8005b9e:	e008      	b.n	8005bb2 <UART_Transmit_IT+0x66>
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	6a1b      	ldr	r3, [r3, #32]
 8005ba4:	1c59      	adds	r1, r3, #1
 8005ba6:	687a      	ldr	r2, [r7, #4]
 8005ba8:	6211      	str	r1, [r2, #32]
 8005baa:	781a      	ldrb	r2, [r3, #0]
 8005bac:	687b      	ldr	r3, [r7, #4]
 8005bae:	681b      	ldr	r3, [r3, #0]
 8005bb0:	605a      	str	r2, [r3, #4]
 8005bb2:	687b      	ldr	r3, [r7, #4]
 8005bb4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8005bb6:	b29b      	uxth	r3, r3
 8005bb8:	3b01      	subs	r3, #1
 8005bba:	b29b      	uxth	r3, r3
 8005bbc:	687a      	ldr	r2, [r7, #4]
 8005bbe:	4619      	mov	r1, r3
 8005bc0:	84d1      	strh	r1, [r2, #38]	; 0x26
 8005bc2:	2b00      	cmp	r3, #0
 8005bc4:	d10f      	bne.n	8005be6 <UART_Transmit_IT+0x9a>
 8005bc6:	687b      	ldr	r3, [r7, #4]
 8005bc8:	681b      	ldr	r3, [r3, #0]
 8005bca:	68da      	ldr	r2, [r3, #12]
 8005bcc:	687b      	ldr	r3, [r7, #4]
 8005bce:	681b      	ldr	r3, [r3, #0]
 8005bd0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005bd4:	60da      	str	r2, [r3, #12]
 8005bd6:	687b      	ldr	r3, [r7, #4]
 8005bd8:	681b      	ldr	r3, [r3, #0]
 8005bda:	68da      	ldr	r2, [r3, #12]
 8005bdc:	687b      	ldr	r3, [r7, #4]
 8005bde:	681b      	ldr	r3, [r3, #0]
 8005be0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005be4:	60da      	str	r2, [r3, #12]
 8005be6:	2300      	movs	r3, #0
 8005be8:	e000      	b.n	8005bec <UART_Transmit_IT+0xa0>
 8005bea:	2302      	movs	r3, #2
 8005bec:	4618      	mov	r0, r3
 8005bee:	3714      	adds	r7, #20
 8005bf0:	46bd      	mov	sp, r7
 8005bf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bf6:	4770      	bx	lr

08005bf8 <UART_EndTransmit_IT>:
 8005bf8:	b580      	push	{r7, lr}
 8005bfa:	b082      	sub	sp, #8
 8005bfc:	af00      	add	r7, sp, #0
 8005bfe:	6078      	str	r0, [r7, #4]
 8005c00:	687b      	ldr	r3, [r7, #4]
 8005c02:	681b      	ldr	r3, [r3, #0]
 8005c04:	68da      	ldr	r2, [r3, #12]
 8005c06:	687b      	ldr	r3, [r7, #4]
 8005c08:	681b      	ldr	r3, [r3, #0]
 8005c0a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005c0e:	60da      	str	r2, [r3, #12]
 8005c10:	687b      	ldr	r3, [r7, #4]
 8005c12:	2220      	movs	r2, #32
 8005c14:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005c18:	6878      	ldr	r0, [r7, #4]
 8005c1a:	f7ff ff07 	bl	8005a2c <HAL_UART_TxCpltCallback>
 8005c1e:	2300      	movs	r3, #0
 8005c20:	4618      	mov	r0, r3
 8005c22:	3708      	adds	r7, #8
 8005c24:	46bd      	mov	sp, r7
 8005c26:	bd80      	pop	{r7, pc}

08005c28 <UART_Receive_IT>:
 8005c28:	b580      	push	{r7, lr}
 8005c2a:	b084      	sub	sp, #16
 8005c2c:	af00      	add	r7, sp, #0
 8005c2e:	6078      	str	r0, [r7, #4]
 8005c30:	687b      	ldr	r3, [r7, #4]
 8005c32:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8005c36:	b2db      	uxtb	r3, r3
 8005c38:	2b22      	cmp	r3, #34	; 0x22
 8005c3a:	d171      	bne.n	8005d20 <UART_Receive_IT+0xf8>
 8005c3c:	687b      	ldr	r3, [r7, #4]
 8005c3e:	689b      	ldr	r3, [r3, #8]
 8005c40:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005c44:	d123      	bne.n	8005c8e <UART_Receive_IT+0x66>
 8005c46:	687b      	ldr	r3, [r7, #4]
 8005c48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005c4a:	60fb      	str	r3, [r7, #12]
 8005c4c:	687b      	ldr	r3, [r7, #4]
 8005c4e:	691b      	ldr	r3, [r3, #16]
 8005c50:	2b00      	cmp	r3, #0
 8005c52:	d10e      	bne.n	8005c72 <UART_Receive_IT+0x4a>
 8005c54:	687b      	ldr	r3, [r7, #4]
 8005c56:	681b      	ldr	r3, [r3, #0]
 8005c58:	685b      	ldr	r3, [r3, #4]
 8005c5a:	b29b      	uxth	r3, r3
 8005c5c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005c60:	b29a      	uxth	r2, r3
 8005c62:	68fb      	ldr	r3, [r7, #12]
 8005c64:	801a      	strh	r2, [r3, #0]
 8005c66:	687b      	ldr	r3, [r7, #4]
 8005c68:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005c6a:	1c9a      	adds	r2, r3, #2
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	629a      	str	r2, [r3, #40]	; 0x28
 8005c70:	e029      	b.n	8005cc6 <UART_Receive_IT+0x9e>
 8005c72:	687b      	ldr	r3, [r7, #4]
 8005c74:	681b      	ldr	r3, [r3, #0]
 8005c76:	685b      	ldr	r3, [r3, #4]
 8005c78:	b29b      	uxth	r3, r3
 8005c7a:	b2db      	uxtb	r3, r3
 8005c7c:	b29a      	uxth	r2, r3
 8005c7e:	68fb      	ldr	r3, [r7, #12]
 8005c80:	801a      	strh	r2, [r3, #0]
 8005c82:	687b      	ldr	r3, [r7, #4]
 8005c84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005c86:	1c5a      	adds	r2, r3, #1
 8005c88:	687b      	ldr	r3, [r7, #4]
 8005c8a:	629a      	str	r2, [r3, #40]	; 0x28
 8005c8c:	e01b      	b.n	8005cc6 <UART_Receive_IT+0x9e>
 8005c8e:	687b      	ldr	r3, [r7, #4]
 8005c90:	691b      	ldr	r3, [r3, #16]
 8005c92:	2b00      	cmp	r3, #0
 8005c94:	d10a      	bne.n	8005cac <UART_Receive_IT+0x84>
 8005c96:	687b      	ldr	r3, [r7, #4]
 8005c98:	681b      	ldr	r3, [r3, #0]
 8005c9a:	6858      	ldr	r0, [r3, #4]
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005ca0:	1c59      	adds	r1, r3, #1
 8005ca2:	687a      	ldr	r2, [r7, #4]
 8005ca4:	6291      	str	r1, [r2, #40]	; 0x28
 8005ca6:	b2c2      	uxtb	r2, r0
 8005ca8:	701a      	strb	r2, [r3, #0]
 8005caa:	e00c      	b.n	8005cc6 <UART_Receive_IT+0x9e>
 8005cac:	687b      	ldr	r3, [r7, #4]
 8005cae:	681b      	ldr	r3, [r3, #0]
 8005cb0:	685b      	ldr	r3, [r3, #4]
 8005cb2:	b2da      	uxtb	r2, r3
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005cb8:	1c58      	adds	r0, r3, #1
 8005cba:	6879      	ldr	r1, [r7, #4]
 8005cbc:	6288      	str	r0, [r1, #40]	; 0x28
 8005cbe:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8005cc2:	b2d2      	uxtb	r2, r2
 8005cc4:	701a      	strb	r2, [r3, #0]
 8005cc6:	687b      	ldr	r3, [r7, #4]
 8005cc8:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8005cca:	b29b      	uxth	r3, r3
 8005ccc:	3b01      	subs	r3, #1
 8005cce:	b29b      	uxth	r3, r3
 8005cd0:	687a      	ldr	r2, [r7, #4]
 8005cd2:	4619      	mov	r1, r3
 8005cd4:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8005cd6:	2b00      	cmp	r3, #0
 8005cd8:	d120      	bne.n	8005d1c <UART_Receive_IT+0xf4>
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	681b      	ldr	r3, [r3, #0]
 8005cde:	68da      	ldr	r2, [r3, #12]
 8005ce0:	687b      	ldr	r3, [r7, #4]
 8005ce2:	681b      	ldr	r3, [r3, #0]
 8005ce4:	f022 0220 	bic.w	r2, r2, #32
 8005ce8:	60da      	str	r2, [r3, #12]
 8005cea:	687b      	ldr	r3, [r7, #4]
 8005cec:	681b      	ldr	r3, [r3, #0]
 8005cee:	68da      	ldr	r2, [r3, #12]
 8005cf0:	687b      	ldr	r3, [r7, #4]
 8005cf2:	681b      	ldr	r3, [r3, #0]
 8005cf4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005cf8:	60da      	str	r2, [r3, #12]
 8005cfa:	687b      	ldr	r3, [r7, #4]
 8005cfc:	681b      	ldr	r3, [r3, #0]
 8005cfe:	695a      	ldr	r2, [r3, #20]
 8005d00:	687b      	ldr	r3, [r7, #4]
 8005d02:	681b      	ldr	r3, [r3, #0]
 8005d04:	f022 0201 	bic.w	r2, r2, #1
 8005d08:	615a      	str	r2, [r3, #20]
 8005d0a:	687b      	ldr	r3, [r7, #4]
 8005d0c:	2220      	movs	r2, #32
 8005d0e:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8005d12:	6878      	ldr	r0, [r7, #4]
 8005d14:	f7fc fc94 	bl	8002640 <HAL_UART_RxCpltCallback>
 8005d18:	2300      	movs	r3, #0
 8005d1a:	e002      	b.n	8005d22 <UART_Receive_IT+0xfa>
 8005d1c:	2300      	movs	r3, #0
 8005d1e:	e000      	b.n	8005d22 <UART_Receive_IT+0xfa>
 8005d20:	2302      	movs	r3, #2
 8005d22:	4618      	mov	r0, r3
 8005d24:	3710      	adds	r7, #16
 8005d26:	46bd      	mov	sp, r7
 8005d28:	bd80      	pop	{r7, pc}
	...

08005d2c <UART_SetConfig>:
 8005d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d30:	b085      	sub	sp, #20
 8005d32:	af00      	add	r7, sp, #0
 8005d34:	6078      	str	r0, [r7, #4]
 8005d36:	687b      	ldr	r3, [r7, #4]
 8005d38:	681b      	ldr	r3, [r3, #0]
 8005d3a:	691b      	ldr	r3, [r3, #16]
 8005d3c:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	68da      	ldr	r2, [r3, #12]
 8005d44:	687b      	ldr	r3, [r7, #4]
 8005d46:	681b      	ldr	r3, [r3, #0]
 8005d48:	430a      	orrs	r2, r1
 8005d4a:	611a      	str	r2, [r3, #16]
 8005d4c:	687b      	ldr	r3, [r7, #4]
 8005d4e:	689a      	ldr	r2, [r3, #8]
 8005d50:	687b      	ldr	r3, [r7, #4]
 8005d52:	691b      	ldr	r3, [r3, #16]
 8005d54:	431a      	orrs	r2, r3
 8005d56:	687b      	ldr	r3, [r7, #4]
 8005d58:	695b      	ldr	r3, [r3, #20]
 8005d5a:	431a      	orrs	r2, r3
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	69db      	ldr	r3, [r3, #28]
 8005d60:	4313      	orrs	r3, r2
 8005d62:	60fb      	str	r3, [r7, #12]
 8005d64:	687b      	ldr	r3, [r7, #4]
 8005d66:	681b      	ldr	r3, [r3, #0]
 8005d68:	68db      	ldr	r3, [r3, #12]
 8005d6a:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 8005d6e:	f023 030c 	bic.w	r3, r3, #12
 8005d72:	687a      	ldr	r2, [r7, #4]
 8005d74:	6812      	ldr	r2, [r2, #0]
 8005d76:	68f9      	ldr	r1, [r7, #12]
 8005d78:	430b      	orrs	r3, r1
 8005d7a:	60d3      	str	r3, [r2, #12]
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	681b      	ldr	r3, [r3, #0]
 8005d80:	695b      	ldr	r3, [r3, #20]
 8005d82:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8005d86:	687b      	ldr	r3, [r7, #4]
 8005d88:	699a      	ldr	r2, [r3, #24]
 8005d8a:	687b      	ldr	r3, [r7, #4]
 8005d8c:	681b      	ldr	r3, [r3, #0]
 8005d8e:	430a      	orrs	r2, r1
 8005d90:	615a      	str	r2, [r3, #20]
 8005d92:	687b      	ldr	r3, [r7, #4]
 8005d94:	69db      	ldr	r3, [r3, #28]
 8005d96:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005d9a:	f040 818b 	bne.w	80060b4 <UART_SetConfig+0x388>
 8005d9e:	687b      	ldr	r3, [r7, #4]
 8005da0:	681b      	ldr	r3, [r3, #0]
 8005da2:	4ac1      	ldr	r2, [pc, #772]	; (80060a8 <UART_SetConfig+0x37c>)
 8005da4:	4293      	cmp	r3, r2
 8005da6:	d005      	beq.n	8005db4 <UART_SetConfig+0x88>
 8005da8:	687b      	ldr	r3, [r7, #4]
 8005daa:	681b      	ldr	r3, [r3, #0]
 8005dac:	4abf      	ldr	r2, [pc, #764]	; (80060ac <UART_SetConfig+0x380>)
 8005dae:	4293      	cmp	r3, r2
 8005db0:	f040 80bd 	bne.w	8005f2e <UART_SetConfig+0x202>
 8005db4:	f7fe fba0 	bl	80044f8 <HAL_RCC_GetPCLK2Freq>
 8005db8:	60b8      	str	r0, [r7, #8]
 8005dba:	68bb      	ldr	r3, [r7, #8]
 8005dbc:	461d      	mov	r5, r3
 8005dbe:	f04f 0600 	mov.w	r6, #0
 8005dc2:	46a8      	mov	r8, r5
 8005dc4:	46b1      	mov	r9, r6
 8005dc6:	eb18 0308 	adds.w	r3, r8, r8
 8005dca:	eb49 0409 	adc.w	r4, r9, r9
 8005dce:	4698      	mov	r8, r3
 8005dd0:	46a1      	mov	r9, r4
 8005dd2:	eb18 0805 	adds.w	r8, r8, r5
 8005dd6:	eb49 0906 	adc.w	r9, r9, r6
 8005dda:	f04f 0100 	mov.w	r1, #0
 8005dde:	f04f 0200 	mov.w	r2, #0
 8005de2:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8005de6:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8005dea:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8005dee:	4688      	mov	r8, r1
 8005df0:	4691      	mov	r9, r2
 8005df2:	eb18 0005 	adds.w	r0, r8, r5
 8005df6:	eb49 0106 	adc.w	r1, r9, r6
 8005dfa:	687b      	ldr	r3, [r7, #4]
 8005dfc:	685b      	ldr	r3, [r3, #4]
 8005dfe:	461d      	mov	r5, r3
 8005e00:	f04f 0600 	mov.w	r6, #0
 8005e04:	196b      	adds	r3, r5, r5
 8005e06:	eb46 0406 	adc.w	r4, r6, r6
 8005e0a:	461a      	mov	r2, r3
 8005e0c:	4623      	mov	r3, r4
 8005e0e:	f7fa fef5 	bl	8000bfc <__aeabi_uldivmod>
 8005e12:	4603      	mov	r3, r0
 8005e14:	460c      	mov	r4, r1
 8005e16:	461a      	mov	r2, r3
 8005e18:	4ba5      	ldr	r3, [pc, #660]	; (80060b0 <UART_SetConfig+0x384>)
 8005e1a:	fba3 2302 	umull	r2, r3, r3, r2
 8005e1e:	095b      	lsrs	r3, r3, #5
 8005e20:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8005e24:	68bb      	ldr	r3, [r7, #8]
 8005e26:	461d      	mov	r5, r3
 8005e28:	f04f 0600 	mov.w	r6, #0
 8005e2c:	46a9      	mov	r9, r5
 8005e2e:	46b2      	mov	sl, r6
 8005e30:	eb19 0309 	adds.w	r3, r9, r9
 8005e34:	eb4a 040a 	adc.w	r4, sl, sl
 8005e38:	4699      	mov	r9, r3
 8005e3a:	46a2      	mov	sl, r4
 8005e3c:	eb19 0905 	adds.w	r9, r9, r5
 8005e40:	eb4a 0a06 	adc.w	sl, sl, r6
 8005e44:	f04f 0100 	mov.w	r1, #0
 8005e48:	f04f 0200 	mov.w	r2, #0
 8005e4c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005e50:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8005e54:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8005e58:	4689      	mov	r9, r1
 8005e5a:	4692      	mov	sl, r2
 8005e5c:	eb19 0005 	adds.w	r0, r9, r5
 8005e60:	eb4a 0106 	adc.w	r1, sl, r6
 8005e64:	687b      	ldr	r3, [r7, #4]
 8005e66:	685b      	ldr	r3, [r3, #4]
 8005e68:	461d      	mov	r5, r3
 8005e6a:	f04f 0600 	mov.w	r6, #0
 8005e6e:	196b      	adds	r3, r5, r5
 8005e70:	eb46 0406 	adc.w	r4, r6, r6
 8005e74:	461a      	mov	r2, r3
 8005e76:	4623      	mov	r3, r4
 8005e78:	f7fa fec0 	bl	8000bfc <__aeabi_uldivmod>
 8005e7c:	4603      	mov	r3, r0
 8005e7e:	460c      	mov	r4, r1
 8005e80:	461a      	mov	r2, r3
 8005e82:	4b8b      	ldr	r3, [pc, #556]	; (80060b0 <UART_SetConfig+0x384>)
 8005e84:	fba3 1302 	umull	r1, r3, r3, r2
 8005e88:	095b      	lsrs	r3, r3, #5
 8005e8a:	2164      	movs	r1, #100	; 0x64
 8005e8c:	fb01 f303 	mul.w	r3, r1, r3
 8005e90:	1ad3      	subs	r3, r2, r3
 8005e92:	00db      	lsls	r3, r3, #3
 8005e94:	3332      	adds	r3, #50	; 0x32
 8005e96:	4a86      	ldr	r2, [pc, #536]	; (80060b0 <UART_SetConfig+0x384>)
 8005e98:	fba2 2303 	umull	r2, r3, r2, r3
 8005e9c:	095b      	lsrs	r3, r3, #5
 8005e9e:	005b      	lsls	r3, r3, #1
 8005ea0:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8005ea4:	4498      	add	r8, r3
 8005ea6:	68bb      	ldr	r3, [r7, #8]
 8005ea8:	461d      	mov	r5, r3
 8005eaa:	f04f 0600 	mov.w	r6, #0
 8005eae:	46a9      	mov	r9, r5
 8005eb0:	46b2      	mov	sl, r6
 8005eb2:	eb19 0309 	adds.w	r3, r9, r9
 8005eb6:	eb4a 040a 	adc.w	r4, sl, sl
 8005eba:	4699      	mov	r9, r3
 8005ebc:	46a2      	mov	sl, r4
 8005ebe:	eb19 0905 	adds.w	r9, r9, r5
 8005ec2:	eb4a 0a06 	adc.w	sl, sl, r6
 8005ec6:	f04f 0100 	mov.w	r1, #0
 8005eca:	f04f 0200 	mov.w	r2, #0
 8005ece:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005ed2:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8005ed6:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8005eda:	4689      	mov	r9, r1
 8005edc:	4692      	mov	sl, r2
 8005ede:	eb19 0005 	adds.w	r0, r9, r5
 8005ee2:	eb4a 0106 	adc.w	r1, sl, r6
 8005ee6:	687b      	ldr	r3, [r7, #4]
 8005ee8:	685b      	ldr	r3, [r3, #4]
 8005eea:	461d      	mov	r5, r3
 8005eec:	f04f 0600 	mov.w	r6, #0
 8005ef0:	196b      	adds	r3, r5, r5
 8005ef2:	eb46 0406 	adc.w	r4, r6, r6
 8005ef6:	461a      	mov	r2, r3
 8005ef8:	4623      	mov	r3, r4
 8005efa:	f7fa fe7f 	bl	8000bfc <__aeabi_uldivmod>
 8005efe:	4603      	mov	r3, r0
 8005f00:	460c      	mov	r4, r1
 8005f02:	461a      	mov	r2, r3
 8005f04:	4b6a      	ldr	r3, [pc, #424]	; (80060b0 <UART_SetConfig+0x384>)
 8005f06:	fba3 1302 	umull	r1, r3, r3, r2
 8005f0a:	095b      	lsrs	r3, r3, #5
 8005f0c:	2164      	movs	r1, #100	; 0x64
 8005f0e:	fb01 f303 	mul.w	r3, r1, r3
 8005f12:	1ad3      	subs	r3, r2, r3
 8005f14:	00db      	lsls	r3, r3, #3
 8005f16:	3332      	adds	r3, #50	; 0x32
 8005f18:	4a65      	ldr	r2, [pc, #404]	; (80060b0 <UART_SetConfig+0x384>)
 8005f1a:	fba2 2303 	umull	r2, r3, r2, r3
 8005f1e:	095b      	lsrs	r3, r3, #5
 8005f20:	f003 0207 	and.w	r2, r3, #7
 8005f24:	687b      	ldr	r3, [r7, #4]
 8005f26:	681b      	ldr	r3, [r3, #0]
 8005f28:	4442      	add	r2, r8
 8005f2a:	609a      	str	r2, [r3, #8]
 8005f2c:	e26f      	b.n	800640e <UART_SetConfig+0x6e2>
 8005f2e:	f7fe facf 	bl	80044d0 <HAL_RCC_GetPCLK1Freq>
 8005f32:	60b8      	str	r0, [r7, #8]
 8005f34:	68bb      	ldr	r3, [r7, #8]
 8005f36:	461d      	mov	r5, r3
 8005f38:	f04f 0600 	mov.w	r6, #0
 8005f3c:	46a8      	mov	r8, r5
 8005f3e:	46b1      	mov	r9, r6
 8005f40:	eb18 0308 	adds.w	r3, r8, r8
 8005f44:	eb49 0409 	adc.w	r4, r9, r9
 8005f48:	4698      	mov	r8, r3
 8005f4a:	46a1      	mov	r9, r4
 8005f4c:	eb18 0805 	adds.w	r8, r8, r5
 8005f50:	eb49 0906 	adc.w	r9, r9, r6
 8005f54:	f04f 0100 	mov.w	r1, #0
 8005f58:	f04f 0200 	mov.w	r2, #0
 8005f5c:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8005f60:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8005f64:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8005f68:	4688      	mov	r8, r1
 8005f6a:	4691      	mov	r9, r2
 8005f6c:	eb18 0005 	adds.w	r0, r8, r5
 8005f70:	eb49 0106 	adc.w	r1, r9, r6
 8005f74:	687b      	ldr	r3, [r7, #4]
 8005f76:	685b      	ldr	r3, [r3, #4]
 8005f78:	461d      	mov	r5, r3
 8005f7a:	f04f 0600 	mov.w	r6, #0
 8005f7e:	196b      	adds	r3, r5, r5
 8005f80:	eb46 0406 	adc.w	r4, r6, r6
 8005f84:	461a      	mov	r2, r3
 8005f86:	4623      	mov	r3, r4
 8005f88:	f7fa fe38 	bl	8000bfc <__aeabi_uldivmod>
 8005f8c:	4603      	mov	r3, r0
 8005f8e:	460c      	mov	r4, r1
 8005f90:	461a      	mov	r2, r3
 8005f92:	4b47      	ldr	r3, [pc, #284]	; (80060b0 <UART_SetConfig+0x384>)
 8005f94:	fba3 2302 	umull	r2, r3, r3, r2
 8005f98:	095b      	lsrs	r3, r3, #5
 8005f9a:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8005f9e:	68bb      	ldr	r3, [r7, #8]
 8005fa0:	461d      	mov	r5, r3
 8005fa2:	f04f 0600 	mov.w	r6, #0
 8005fa6:	46a9      	mov	r9, r5
 8005fa8:	46b2      	mov	sl, r6
 8005faa:	eb19 0309 	adds.w	r3, r9, r9
 8005fae:	eb4a 040a 	adc.w	r4, sl, sl
 8005fb2:	4699      	mov	r9, r3
 8005fb4:	46a2      	mov	sl, r4
 8005fb6:	eb19 0905 	adds.w	r9, r9, r5
 8005fba:	eb4a 0a06 	adc.w	sl, sl, r6
 8005fbe:	f04f 0100 	mov.w	r1, #0
 8005fc2:	f04f 0200 	mov.w	r2, #0
 8005fc6:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005fca:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8005fce:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8005fd2:	4689      	mov	r9, r1
 8005fd4:	4692      	mov	sl, r2
 8005fd6:	eb19 0005 	adds.w	r0, r9, r5
 8005fda:	eb4a 0106 	adc.w	r1, sl, r6
 8005fde:	687b      	ldr	r3, [r7, #4]
 8005fe0:	685b      	ldr	r3, [r3, #4]
 8005fe2:	461d      	mov	r5, r3
 8005fe4:	f04f 0600 	mov.w	r6, #0
 8005fe8:	196b      	adds	r3, r5, r5
 8005fea:	eb46 0406 	adc.w	r4, r6, r6
 8005fee:	461a      	mov	r2, r3
 8005ff0:	4623      	mov	r3, r4
 8005ff2:	f7fa fe03 	bl	8000bfc <__aeabi_uldivmod>
 8005ff6:	4603      	mov	r3, r0
 8005ff8:	460c      	mov	r4, r1
 8005ffa:	461a      	mov	r2, r3
 8005ffc:	4b2c      	ldr	r3, [pc, #176]	; (80060b0 <UART_SetConfig+0x384>)
 8005ffe:	fba3 1302 	umull	r1, r3, r3, r2
 8006002:	095b      	lsrs	r3, r3, #5
 8006004:	2164      	movs	r1, #100	; 0x64
 8006006:	fb01 f303 	mul.w	r3, r1, r3
 800600a:	1ad3      	subs	r3, r2, r3
 800600c:	00db      	lsls	r3, r3, #3
 800600e:	3332      	adds	r3, #50	; 0x32
 8006010:	4a27      	ldr	r2, [pc, #156]	; (80060b0 <UART_SetConfig+0x384>)
 8006012:	fba2 2303 	umull	r2, r3, r2, r3
 8006016:	095b      	lsrs	r3, r3, #5
 8006018:	005b      	lsls	r3, r3, #1
 800601a:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800601e:	4498      	add	r8, r3
 8006020:	68bb      	ldr	r3, [r7, #8]
 8006022:	461d      	mov	r5, r3
 8006024:	f04f 0600 	mov.w	r6, #0
 8006028:	46a9      	mov	r9, r5
 800602a:	46b2      	mov	sl, r6
 800602c:	eb19 0309 	adds.w	r3, r9, r9
 8006030:	eb4a 040a 	adc.w	r4, sl, sl
 8006034:	4699      	mov	r9, r3
 8006036:	46a2      	mov	sl, r4
 8006038:	eb19 0905 	adds.w	r9, r9, r5
 800603c:	eb4a 0a06 	adc.w	sl, sl, r6
 8006040:	f04f 0100 	mov.w	r1, #0
 8006044:	f04f 0200 	mov.w	r2, #0
 8006048:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800604c:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8006050:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8006054:	4689      	mov	r9, r1
 8006056:	4692      	mov	sl, r2
 8006058:	eb19 0005 	adds.w	r0, r9, r5
 800605c:	eb4a 0106 	adc.w	r1, sl, r6
 8006060:	687b      	ldr	r3, [r7, #4]
 8006062:	685b      	ldr	r3, [r3, #4]
 8006064:	461d      	mov	r5, r3
 8006066:	f04f 0600 	mov.w	r6, #0
 800606a:	196b      	adds	r3, r5, r5
 800606c:	eb46 0406 	adc.w	r4, r6, r6
 8006070:	461a      	mov	r2, r3
 8006072:	4623      	mov	r3, r4
 8006074:	f7fa fdc2 	bl	8000bfc <__aeabi_uldivmod>
 8006078:	4603      	mov	r3, r0
 800607a:	460c      	mov	r4, r1
 800607c:	461a      	mov	r2, r3
 800607e:	4b0c      	ldr	r3, [pc, #48]	; (80060b0 <UART_SetConfig+0x384>)
 8006080:	fba3 1302 	umull	r1, r3, r3, r2
 8006084:	095b      	lsrs	r3, r3, #5
 8006086:	2164      	movs	r1, #100	; 0x64
 8006088:	fb01 f303 	mul.w	r3, r1, r3
 800608c:	1ad3      	subs	r3, r2, r3
 800608e:	00db      	lsls	r3, r3, #3
 8006090:	3332      	adds	r3, #50	; 0x32
 8006092:	4a07      	ldr	r2, [pc, #28]	; (80060b0 <UART_SetConfig+0x384>)
 8006094:	fba2 2303 	umull	r2, r3, r2, r3
 8006098:	095b      	lsrs	r3, r3, #5
 800609a:	f003 0207 	and.w	r2, r3, #7
 800609e:	687b      	ldr	r3, [r7, #4]
 80060a0:	681b      	ldr	r3, [r3, #0]
 80060a2:	4442      	add	r2, r8
 80060a4:	609a      	str	r2, [r3, #8]
 80060a6:	e1b2      	b.n	800640e <UART_SetConfig+0x6e2>
 80060a8:	40011000 	.word	0x40011000
 80060ac:	40011400 	.word	0x40011400
 80060b0:	51eb851f 	.word	0x51eb851f
 80060b4:	687b      	ldr	r3, [r7, #4]
 80060b6:	681b      	ldr	r3, [r3, #0]
 80060b8:	4ad7      	ldr	r2, [pc, #860]	; (8006418 <UART_SetConfig+0x6ec>)
 80060ba:	4293      	cmp	r3, r2
 80060bc:	d005      	beq.n	80060ca <UART_SetConfig+0x39e>
 80060be:	687b      	ldr	r3, [r7, #4]
 80060c0:	681b      	ldr	r3, [r3, #0]
 80060c2:	4ad6      	ldr	r2, [pc, #856]	; (800641c <UART_SetConfig+0x6f0>)
 80060c4:	4293      	cmp	r3, r2
 80060c6:	f040 80d1 	bne.w	800626c <UART_SetConfig+0x540>
 80060ca:	f7fe fa15 	bl	80044f8 <HAL_RCC_GetPCLK2Freq>
 80060ce:	60b8      	str	r0, [r7, #8]
 80060d0:	68bb      	ldr	r3, [r7, #8]
 80060d2:	469a      	mov	sl, r3
 80060d4:	f04f 0b00 	mov.w	fp, #0
 80060d8:	46d0      	mov	r8, sl
 80060da:	46d9      	mov	r9, fp
 80060dc:	eb18 0308 	adds.w	r3, r8, r8
 80060e0:	eb49 0409 	adc.w	r4, r9, r9
 80060e4:	4698      	mov	r8, r3
 80060e6:	46a1      	mov	r9, r4
 80060e8:	eb18 080a 	adds.w	r8, r8, sl
 80060ec:	eb49 090b 	adc.w	r9, r9, fp
 80060f0:	f04f 0100 	mov.w	r1, #0
 80060f4:	f04f 0200 	mov.w	r2, #0
 80060f8:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 80060fc:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8006100:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8006104:	4688      	mov	r8, r1
 8006106:	4691      	mov	r9, r2
 8006108:	eb1a 0508 	adds.w	r5, sl, r8
 800610c:	eb4b 0609 	adc.w	r6, fp, r9
 8006110:	687b      	ldr	r3, [r7, #4]
 8006112:	685b      	ldr	r3, [r3, #4]
 8006114:	4619      	mov	r1, r3
 8006116:	f04f 0200 	mov.w	r2, #0
 800611a:	f04f 0300 	mov.w	r3, #0
 800611e:	f04f 0400 	mov.w	r4, #0
 8006122:	0094      	lsls	r4, r2, #2
 8006124:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8006128:	008b      	lsls	r3, r1, #2
 800612a:	461a      	mov	r2, r3
 800612c:	4623      	mov	r3, r4
 800612e:	4628      	mov	r0, r5
 8006130:	4631      	mov	r1, r6
 8006132:	f7fa fd63 	bl	8000bfc <__aeabi_uldivmod>
 8006136:	4603      	mov	r3, r0
 8006138:	460c      	mov	r4, r1
 800613a:	461a      	mov	r2, r3
 800613c:	4bb8      	ldr	r3, [pc, #736]	; (8006420 <UART_SetConfig+0x6f4>)
 800613e:	fba3 2302 	umull	r2, r3, r3, r2
 8006142:	095b      	lsrs	r3, r3, #5
 8006144:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8006148:	68bb      	ldr	r3, [r7, #8]
 800614a:	469b      	mov	fp, r3
 800614c:	f04f 0c00 	mov.w	ip, #0
 8006150:	46d9      	mov	r9, fp
 8006152:	46e2      	mov	sl, ip
 8006154:	eb19 0309 	adds.w	r3, r9, r9
 8006158:	eb4a 040a 	adc.w	r4, sl, sl
 800615c:	4699      	mov	r9, r3
 800615e:	46a2      	mov	sl, r4
 8006160:	eb19 090b 	adds.w	r9, r9, fp
 8006164:	eb4a 0a0c 	adc.w	sl, sl, ip
 8006168:	f04f 0100 	mov.w	r1, #0
 800616c:	f04f 0200 	mov.w	r2, #0
 8006170:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006174:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8006178:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800617c:	4689      	mov	r9, r1
 800617e:	4692      	mov	sl, r2
 8006180:	eb1b 0509 	adds.w	r5, fp, r9
 8006184:	eb4c 060a 	adc.w	r6, ip, sl
 8006188:	687b      	ldr	r3, [r7, #4]
 800618a:	685b      	ldr	r3, [r3, #4]
 800618c:	4619      	mov	r1, r3
 800618e:	f04f 0200 	mov.w	r2, #0
 8006192:	f04f 0300 	mov.w	r3, #0
 8006196:	f04f 0400 	mov.w	r4, #0
 800619a:	0094      	lsls	r4, r2, #2
 800619c:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 80061a0:	008b      	lsls	r3, r1, #2
 80061a2:	461a      	mov	r2, r3
 80061a4:	4623      	mov	r3, r4
 80061a6:	4628      	mov	r0, r5
 80061a8:	4631      	mov	r1, r6
 80061aa:	f7fa fd27 	bl	8000bfc <__aeabi_uldivmod>
 80061ae:	4603      	mov	r3, r0
 80061b0:	460c      	mov	r4, r1
 80061b2:	461a      	mov	r2, r3
 80061b4:	4b9a      	ldr	r3, [pc, #616]	; (8006420 <UART_SetConfig+0x6f4>)
 80061b6:	fba3 1302 	umull	r1, r3, r3, r2
 80061ba:	095b      	lsrs	r3, r3, #5
 80061bc:	2164      	movs	r1, #100	; 0x64
 80061be:	fb01 f303 	mul.w	r3, r1, r3
 80061c2:	1ad3      	subs	r3, r2, r3
 80061c4:	011b      	lsls	r3, r3, #4
 80061c6:	3332      	adds	r3, #50	; 0x32
 80061c8:	4a95      	ldr	r2, [pc, #596]	; (8006420 <UART_SetConfig+0x6f4>)
 80061ca:	fba2 2303 	umull	r2, r3, r2, r3
 80061ce:	095b      	lsrs	r3, r3, #5
 80061d0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80061d4:	4498      	add	r8, r3
 80061d6:	68bb      	ldr	r3, [r7, #8]
 80061d8:	469b      	mov	fp, r3
 80061da:	f04f 0c00 	mov.w	ip, #0
 80061de:	46d9      	mov	r9, fp
 80061e0:	46e2      	mov	sl, ip
 80061e2:	eb19 0309 	adds.w	r3, r9, r9
 80061e6:	eb4a 040a 	adc.w	r4, sl, sl
 80061ea:	4699      	mov	r9, r3
 80061ec:	46a2      	mov	sl, r4
 80061ee:	eb19 090b 	adds.w	r9, r9, fp
 80061f2:	eb4a 0a0c 	adc.w	sl, sl, ip
 80061f6:	f04f 0100 	mov.w	r1, #0
 80061fa:	f04f 0200 	mov.w	r2, #0
 80061fe:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006202:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8006206:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800620a:	4689      	mov	r9, r1
 800620c:	4692      	mov	sl, r2
 800620e:	eb1b 0509 	adds.w	r5, fp, r9
 8006212:	eb4c 060a 	adc.w	r6, ip, sl
 8006216:	687b      	ldr	r3, [r7, #4]
 8006218:	685b      	ldr	r3, [r3, #4]
 800621a:	4619      	mov	r1, r3
 800621c:	f04f 0200 	mov.w	r2, #0
 8006220:	f04f 0300 	mov.w	r3, #0
 8006224:	f04f 0400 	mov.w	r4, #0
 8006228:	0094      	lsls	r4, r2, #2
 800622a:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800622e:	008b      	lsls	r3, r1, #2
 8006230:	461a      	mov	r2, r3
 8006232:	4623      	mov	r3, r4
 8006234:	4628      	mov	r0, r5
 8006236:	4631      	mov	r1, r6
 8006238:	f7fa fce0 	bl	8000bfc <__aeabi_uldivmod>
 800623c:	4603      	mov	r3, r0
 800623e:	460c      	mov	r4, r1
 8006240:	461a      	mov	r2, r3
 8006242:	4b77      	ldr	r3, [pc, #476]	; (8006420 <UART_SetConfig+0x6f4>)
 8006244:	fba3 1302 	umull	r1, r3, r3, r2
 8006248:	095b      	lsrs	r3, r3, #5
 800624a:	2164      	movs	r1, #100	; 0x64
 800624c:	fb01 f303 	mul.w	r3, r1, r3
 8006250:	1ad3      	subs	r3, r2, r3
 8006252:	011b      	lsls	r3, r3, #4
 8006254:	3332      	adds	r3, #50	; 0x32
 8006256:	4a72      	ldr	r2, [pc, #456]	; (8006420 <UART_SetConfig+0x6f4>)
 8006258:	fba2 2303 	umull	r2, r3, r2, r3
 800625c:	095b      	lsrs	r3, r3, #5
 800625e:	f003 020f 	and.w	r2, r3, #15
 8006262:	687b      	ldr	r3, [r7, #4]
 8006264:	681b      	ldr	r3, [r3, #0]
 8006266:	4442      	add	r2, r8
 8006268:	609a      	str	r2, [r3, #8]
 800626a:	e0d0      	b.n	800640e <UART_SetConfig+0x6e2>
 800626c:	f7fe f930 	bl	80044d0 <HAL_RCC_GetPCLK1Freq>
 8006270:	60b8      	str	r0, [r7, #8]
 8006272:	68bb      	ldr	r3, [r7, #8]
 8006274:	469a      	mov	sl, r3
 8006276:	f04f 0b00 	mov.w	fp, #0
 800627a:	46d0      	mov	r8, sl
 800627c:	46d9      	mov	r9, fp
 800627e:	eb18 0308 	adds.w	r3, r8, r8
 8006282:	eb49 0409 	adc.w	r4, r9, r9
 8006286:	4698      	mov	r8, r3
 8006288:	46a1      	mov	r9, r4
 800628a:	eb18 080a 	adds.w	r8, r8, sl
 800628e:	eb49 090b 	adc.w	r9, r9, fp
 8006292:	f04f 0100 	mov.w	r1, #0
 8006296:	f04f 0200 	mov.w	r2, #0
 800629a:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 800629e:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 80062a2:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80062a6:	4688      	mov	r8, r1
 80062a8:	4691      	mov	r9, r2
 80062aa:	eb1a 0508 	adds.w	r5, sl, r8
 80062ae:	eb4b 0609 	adc.w	r6, fp, r9
 80062b2:	687b      	ldr	r3, [r7, #4]
 80062b4:	685b      	ldr	r3, [r3, #4]
 80062b6:	4619      	mov	r1, r3
 80062b8:	f04f 0200 	mov.w	r2, #0
 80062bc:	f04f 0300 	mov.w	r3, #0
 80062c0:	f04f 0400 	mov.w	r4, #0
 80062c4:	0094      	lsls	r4, r2, #2
 80062c6:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 80062ca:	008b      	lsls	r3, r1, #2
 80062cc:	461a      	mov	r2, r3
 80062ce:	4623      	mov	r3, r4
 80062d0:	4628      	mov	r0, r5
 80062d2:	4631      	mov	r1, r6
 80062d4:	f7fa fc92 	bl	8000bfc <__aeabi_uldivmod>
 80062d8:	4603      	mov	r3, r0
 80062da:	460c      	mov	r4, r1
 80062dc:	461a      	mov	r2, r3
 80062de:	4b50      	ldr	r3, [pc, #320]	; (8006420 <UART_SetConfig+0x6f4>)
 80062e0:	fba3 2302 	umull	r2, r3, r3, r2
 80062e4:	095b      	lsrs	r3, r3, #5
 80062e6:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80062ea:	68bb      	ldr	r3, [r7, #8]
 80062ec:	469b      	mov	fp, r3
 80062ee:	f04f 0c00 	mov.w	ip, #0
 80062f2:	46d9      	mov	r9, fp
 80062f4:	46e2      	mov	sl, ip
 80062f6:	eb19 0309 	adds.w	r3, r9, r9
 80062fa:	eb4a 040a 	adc.w	r4, sl, sl
 80062fe:	4699      	mov	r9, r3
 8006300:	46a2      	mov	sl, r4
 8006302:	eb19 090b 	adds.w	r9, r9, fp
 8006306:	eb4a 0a0c 	adc.w	sl, sl, ip
 800630a:	f04f 0100 	mov.w	r1, #0
 800630e:	f04f 0200 	mov.w	r2, #0
 8006312:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006316:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800631a:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800631e:	4689      	mov	r9, r1
 8006320:	4692      	mov	sl, r2
 8006322:	eb1b 0509 	adds.w	r5, fp, r9
 8006326:	eb4c 060a 	adc.w	r6, ip, sl
 800632a:	687b      	ldr	r3, [r7, #4]
 800632c:	685b      	ldr	r3, [r3, #4]
 800632e:	4619      	mov	r1, r3
 8006330:	f04f 0200 	mov.w	r2, #0
 8006334:	f04f 0300 	mov.w	r3, #0
 8006338:	f04f 0400 	mov.w	r4, #0
 800633c:	0094      	lsls	r4, r2, #2
 800633e:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8006342:	008b      	lsls	r3, r1, #2
 8006344:	461a      	mov	r2, r3
 8006346:	4623      	mov	r3, r4
 8006348:	4628      	mov	r0, r5
 800634a:	4631      	mov	r1, r6
 800634c:	f7fa fc56 	bl	8000bfc <__aeabi_uldivmod>
 8006350:	4603      	mov	r3, r0
 8006352:	460c      	mov	r4, r1
 8006354:	461a      	mov	r2, r3
 8006356:	4b32      	ldr	r3, [pc, #200]	; (8006420 <UART_SetConfig+0x6f4>)
 8006358:	fba3 1302 	umull	r1, r3, r3, r2
 800635c:	095b      	lsrs	r3, r3, #5
 800635e:	2164      	movs	r1, #100	; 0x64
 8006360:	fb01 f303 	mul.w	r3, r1, r3
 8006364:	1ad3      	subs	r3, r2, r3
 8006366:	011b      	lsls	r3, r3, #4
 8006368:	3332      	adds	r3, #50	; 0x32
 800636a:	4a2d      	ldr	r2, [pc, #180]	; (8006420 <UART_SetConfig+0x6f4>)
 800636c:	fba2 2303 	umull	r2, r3, r2, r3
 8006370:	095b      	lsrs	r3, r3, #5
 8006372:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8006376:	4498      	add	r8, r3
 8006378:	68bb      	ldr	r3, [r7, #8]
 800637a:	469b      	mov	fp, r3
 800637c:	f04f 0c00 	mov.w	ip, #0
 8006380:	46d9      	mov	r9, fp
 8006382:	46e2      	mov	sl, ip
 8006384:	eb19 0309 	adds.w	r3, r9, r9
 8006388:	eb4a 040a 	adc.w	r4, sl, sl
 800638c:	4699      	mov	r9, r3
 800638e:	46a2      	mov	sl, r4
 8006390:	eb19 090b 	adds.w	r9, r9, fp
 8006394:	eb4a 0a0c 	adc.w	sl, sl, ip
 8006398:	f04f 0100 	mov.w	r1, #0
 800639c:	f04f 0200 	mov.w	r2, #0
 80063a0:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80063a4:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80063a8:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80063ac:	4689      	mov	r9, r1
 80063ae:	4692      	mov	sl, r2
 80063b0:	eb1b 0509 	adds.w	r5, fp, r9
 80063b4:	eb4c 060a 	adc.w	r6, ip, sl
 80063b8:	687b      	ldr	r3, [r7, #4]
 80063ba:	685b      	ldr	r3, [r3, #4]
 80063bc:	4619      	mov	r1, r3
 80063be:	f04f 0200 	mov.w	r2, #0
 80063c2:	f04f 0300 	mov.w	r3, #0
 80063c6:	f04f 0400 	mov.w	r4, #0
 80063ca:	0094      	lsls	r4, r2, #2
 80063cc:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 80063d0:	008b      	lsls	r3, r1, #2
 80063d2:	461a      	mov	r2, r3
 80063d4:	4623      	mov	r3, r4
 80063d6:	4628      	mov	r0, r5
 80063d8:	4631      	mov	r1, r6
 80063da:	f7fa fc0f 	bl	8000bfc <__aeabi_uldivmod>
 80063de:	4603      	mov	r3, r0
 80063e0:	460c      	mov	r4, r1
 80063e2:	461a      	mov	r2, r3
 80063e4:	4b0e      	ldr	r3, [pc, #56]	; (8006420 <UART_SetConfig+0x6f4>)
 80063e6:	fba3 1302 	umull	r1, r3, r3, r2
 80063ea:	095b      	lsrs	r3, r3, #5
 80063ec:	2164      	movs	r1, #100	; 0x64
 80063ee:	fb01 f303 	mul.w	r3, r1, r3
 80063f2:	1ad3      	subs	r3, r2, r3
 80063f4:	011b      	lsls	r3, r3, #4
 80063f6:	3332      	adds	r3, #50	; 0x32
 80063f8:	4a09      	ldr	r2, [pc, #36]	; (8006420 <UART_SetConfig+0x6f4>)
 80063fa:	fba2 2303 	umull	r2, r3, r2, r3
 80063fe:	095b      	lsrs	r3, r3, #5
 8006400:	f003 020f 	and.w	r2, r3, #15
 8006404:	687b      	ldr	r3, [r7, #4]
 8006406:	681b      	ldr	r3, [r3, #0]
 8006408:	4442      	add	r2, r8
 800640a:	609a      	str	r2, [r3, #8]
 800640c:	e7ff      	b.n	800640e <UART_SetConfig+0x6e2>
 800640e:	bf00      	nop
 8006410:	3714      	adds	r7, #20
 8006412:	46bd      	mov	sp, r7
 8006414:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006418:	40011000 	.word	0x40011000
 800641c:	40011400 	.word	0x40011400
 8006420:	51eb851f 	.word	0x51eb851f

08006424 <__errno>:
 8006424:	4b01      	ldr	r3, [pc, #4]	; (800642c <__errno+0x8>)
 8006426:	6818      	ldr	r0, [r3, #0]
 8006428:	4770      	bx	lr
 800642a:	bf00      	nop
 800642c:	20000014 	.word	0x20000014

08006430 <__libc_init_array>:
 8006430:	b570      	push	{r4, r5, r6, lr}
 8006432:	4e0d      	ldr	r6, [pc, #52]	; (8006468 <__libc_init_array+0x38>)
 8006434:	4c0d      	ldr	r4, [pc, #52]	; (800646c <__libc_init_array+0x3c>)
 8006436:	1ba4      	subs	r4, r4, r6
 8006438:	10a4      	asrs	r4, r4, #2
 800643a:	2500      	movs	r5, #0
 800643c:	42a5      	cmp	r5, r4
 800643e:	d109      	bne.n	8006454 <__libc_init_array+0x24>
 8006440:	4e0b      	ldr	r6, [pc, #44]	; (8006470 <__libc_init_array+0x40>)
 8006442:	4c0c      	ldr	r4, [pc, #48]	; (8006474 <__libc_init_array+0x44>)
 8006444:	f001 fc4a 	bl	8007cdc <_init>
 8006448:	1ba4      	subs	r4, r4, r6
 800644a:	10a4      	asrs	r4, r4, #2
 800644c:	2500      	movs	r5, #0
 800644e:	42a5      	cmp	r5, r4
 8006450:	d105      	bne.n	800645e <__libc_init_array+0x2e>
 8006452:	bd70      	pop	{r4, r5, r6, pc}
 8006454:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006458:	4798      	blx	r3
 800645a:	3501      	adds	r5, #1
 800645c:	e7ee      	b.n	800643c <__libc_init_array+0xc>
 800645e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006462:	4798      	blx	r3
 8006464:	3501      	adds	r5, #1
 8006466:	e7f2      	b.n	800644e <__libc_init_array+0x1e>
 8006468:	08008228 	.word	0x08008228
 800646c:	08008228 	.word	0x08008228
 8006470:	08008228 	.word	0x08008228
 8006474:	0800822c 	.word	0x0800822c

08006478 <malloc>:
 8006478:	4b02      	ldr	r3, [pc, #8]	; (8006484 <malloc+0xc>)
 800647a:	4601      	mov	r1, r0
 800647c:	6818      	ldr	r0, [r3, #0]
 800647e:	f000 b86d 	b.w	800655c <_malloc_r>
 8006482:	bf00      	nop
 8006484:	20000014 	.word	0x20000014

08006488 <free>:
 8006488:	4b02      	ldr	r3, [pc, #8]	; (8006494 <free+0xc>)
 800648a:	4601      	mov	r1, r0
 800648c:	6818      	ldr	r0, [r3, #0]
 800648e:	f000 b817 	b.w	80064c0 <_free_r>
 8006492:	bf00      	nop
 8006494:	20000014 	.word	0x20000014

08006498 <memcpy>:
 8006498:	b510      	push	{r4, lr}
 800649a:	1e43      	subs	r3, r0, #1
 800649c:	440a      	add	r2, r1
 800649e:	4291      	cmp	r1, r2
 80064a0:	d100      	bne.n	80064a4 <memcpy+0xc>
 80064a2:	bd10      	pop	{r4, pc}
 80064a4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80064a8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80064ac:	e7f7      	b.n	800649e <memcpy+0x6>

080064ae <memset>:
 80064ae:	4402      	add	r2, r0
 80064b0:	4603      	mov	r3, r0
 80064b2:	4293      	cmp	r3, r2
 80064b4:	d100      	bne.n	80064b8 <memset+0xa>
 80064b6:	4770      	bx	lr
 80064b8:	f803 1b01 	strb.w	r1, [r3], #1
 80064bc:	e7f9      	b.n	80064b2 <memset+0x4>
	...

080064c0 <_free_r>:
 80064c0:	b538      	push	{r3, r4, r5, lr}
 80064c2:	4605      	mov	r5, r0
 80064c4:	2900      	cmp	r1, #0
 80064c6:	d045      	beq.n	8006554 <_free_r+0x94>
 80064c8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80064cc:	1f0c      	subs	r4, r1, #4
 80064ce:	2b00      	cmp	r3, #0
 80064d0:	bfb8      	it	lt
 80064d2:	18e4      	addlt	r4, r4, r3
 80064d4:	f000 f8cc 	bl	8006670 <__malloc_lock>
 80064d8:	4a1f      	ldr	r2, [pc, #124]	; (8006558 <_free_r+0x98>)
 80064da:	6813      	ldr	r3, [r2, #0]
 80064dc:	4610      	mov	r0, r2
 80064de:	b933      	cbnz	r3, 80064ee <_free_r+0x2e>
 80064e0:	6063      	str	r3, [r4, #4]
 80064e2:	6014      	str	r4, [r2, #0]
 80064e4:	4628      	mov	r0, r5
 80064e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80064ea:	f000 b8c2 	b.w	8006672 <__malloc_unlock>
 80064ee:	42a3      	cmp	r3, r4
 80064f0:	d90c      	bls.n	800650c <_free_r+0x4c>
 80064f2:	6821      	ldr	r1, [r4, #0]
 80064f4:	1862      	adds	r2, r4, r1
 80064f6:	4293      	cmp	r3, r2
 80064f8:	bf04      	itt	eq
 80064fa:	681a      	ldreq	r2, [r3, #0]
 80064fc:	685b      	ldreq	r3, [r3, #4]
 80064fe:	6063      	str	r3, [r4, #4]
 8006500:	bf04      	itt	eq
 8006502:	1852      	addeq	r2, r2, r1
 8006504:	6022      	streq	r2, [r4, #0]
 8006506:	6004      	str	r4, [r0, #0]
 8006508:	e7ec      	b.n	80064e4 <_free_r+0x24>
 800650a:	4613      	mov	r3, r2
 800650c:	685a      	ldr	r2, [r3, #4]
 800650e:	b10a      	cbz	r2, 8006514 <_free_r+0x54>
 8006510:	42a2      	cmp	r2, r4
 8006512:	d9fa      	bls.n	800650a <_free_r+0x4a>
 8006514:	6819      	ldr	r1, [r3, #0]
 8006516:	1858      	adds	r0, r3, r1
 8006518:	42a0      	cmp	r0, r4
 800651a:	d10b      	bne.n	8006534 <_free_r+0x74>
 800651c:	6820      	ldr	r0, [r4, #0]
 800651e:	4401      	add	r1, r0
 8006520:	1858      	adds	r0, r3, r1
 8006522:	4282      	cmp	r2, r0
 8006524:	6019      	str	r1, [r3, #0]
 8006526:	d1dd      	bne.n	80064e4 <_free_r+0x24>
 8006528:	6810      	ldr	r0, [r2, #0]
 800652a:	6852      	ldr	r2, [r2, #4]
 800652c:	605a      	str	r2, [r3, #4]
 800652e:	4401      	add	r1, r0
 8006530:	6019      	str	r1, [r3, #0]
 8006532:	e7d7      	b.n	80064e4 <_free_r+0x24>
 8006534:	d902      	bls.n	800653c <_free_r+0x7c>
 8006536:	230c      	movs	r3, #12
 8006538:	602b      	str	r3, [r5, #0]
 800653a:	e7d3      	b.n	80064e4 <_free_r+0x24>
 800653c:	6820      	ldr	r0, [r4, #0]
 800653e:	1821      	adds	r1, r4, r0
 8006540:	428a      	cmp	r2, r1
 8006542:	bf04      	itt	eq
 8006544:	6811      	ldreq	r1, [r2, #0]
 8006546:	6852      	ldreq	r2, [r2, #4]
 8006548:	6062      	str	r2, [r4, #4]
 800654a:	bf04      	itt	eq
 800654c:	1809      	addeq	r1, r1, r0
 800654e:	6021      	streq	r1, [r4, #0]
 8006550:	605c      	str	r4, [r3, #4]
 8006552:	e7c7      	b.n	80064e4 <_free_r+0x24>
 8006554:	bd38      	pop	{r3, r4, r5, pc}
 8006556:	bf00      	nop
 8006558:	200000a8 	.word	0x200000a8

0800655c <_malloc_r>:
 800655c:	b570      	push	{r4, r5, r6, lr}
 800655e:	1ccd      	adds	r5, r1, #3
 8006560:	f025 0503 	bic.w	r5, r5, #3
 8006564:	3508      	adds	r5, #8
 8006566:	2d0c      	cmp	r5, #12
 8006568:	bf38      	it	cc
 800656a:	250c      	movcc	r5, #12
 800656c:	2d00      	cmp	r5, #0
 800656e:	4606      	mov	r6, r0
 8006570:	db01      	blt.n	8006576 <_malloc_r+0x1a>
 8006572:	42a9      	cmp	r1, r5
 8006574:	d903      	bls.n	800657e <_malloc_r+0x22>
 8006576:	230c      	movs	r3, #12
 8006578:	6033      	str	r3, [r6, #0]
 800657a:	2000      	movs	r0, #0
 800657c:	bd70      	pop	{r4, r5, r6, pc}
 800657e:	f000 f877 	bl	8006670 <__malloc_lock>
 8006582:	4a21      	ldr	r2, [pc, #132]	; (8006608 <_malloc_r+0xac>)
 8006584:	6814      	ldr	r4, [r2, #0]
 8006586:	4621      	mov	r1, r4
 8006588:	b991      	cbnz	r1, 80065b0 <_malloc_r+0x54>
 800658a:	4c20      	ldr	r4, [pc, #128]	; (800660c <_malloc_r+0xb0>)
 800658c:	6823      	ldr	r3, [r4, #0]
 800658e:	b91b      	cbnz	r3, 8006598 <_malloc_r+0x3c>
 8006590:	4630      	mov	r0, r6
 8006592:	f000 f83d 	bl	8006610 <_sbrk_r>
 8006596:	6020      	str	r0, [r4, #0]
 8006598:	4629      	mov	r1, r5
 800659a:	4630      	mov	r0, r6
 800659c:	f000 f838 	bl	8006610 <_sbrk_r>
 80065a0:	1c43      	adds	r3, r0, #1
 80065a2:	d124      	bne.n	80065ee <_malloc_r+0x92>
 80065a4:	230c      	movs	r3, #12
 80065a6:	6033      	str	r3, [r6, #0]
 80065a8:	4630      	mov	r0, r6
 80065aa:	f000 f862 	bl	8006672 <__malloc_unlock>
 80065ae:	e7e4      	b.n	800657a <_malloc_r+0x1e>
 80065b0:	680b      	ldr	r3, [r1, #0]
 80065b2:	1b5b      	subs	r3, r3, r5
 80065b4:	d418      	bmi.n	80065e8 <_malloc_r+0x8c>
 80065b6:	2b0b      	cmp	r3, #11
 80065b8:	d90f      	bls.n	80065da <_malloc_r+0x7e>
 80065ba:	600b      	str	r3, [r1, #0]
 80065bc:	50cd      	str	r5, [r1, r3]
 80065be:	18cc      	adds	r4, r1, r3
 80065c0:	4630      	mov	r0, r6
 80065c2:	f000 f856 	bl	8006672 <__malloc_unlock>
 80065c6:	f104 000b 	add.w	r0, r4, #11
 80065ca:	1d23      	adds	r3, r4, #4
 80065cc:	f020 0007 	bic.w	r0, r0, #7
 80065d0:	1ac3      	subs	r3, r0, r3
 80065d2:	d0d3      	beq.n	800657c <_malloc_r+0x20>
 80065d4:	425a      	negs	r2, r3
 80065d6:	50e2      	str	r2, [r4, r3]
 80065d8:	e7d0      	b.n	800657c <_malloc_r+0x20>
 80065da:	428c      	cmp	r4, r1
 80065dc:	684b      	ldr	r3, [r1, #4]
 80065de:	bf16      	itet	ne
 80065e0:	6063      	strne	r3, [r4, #4]
 80065e2:	6013      	streq	r3, [r2, #0]
 80065e4:	460c      	movne	r4, r1
 80065e6:	e7eb      	b.n	80065c0 <_malloc_r+0x64>
 80065e8:	460c      	mov	r4, r1
 80065ea:	6849      	ldr	r1, [r1, #4]
 80065ec:	e7cc      	b.n	8006588 <_malloc_r+0x2c>
 80065ee:	1cc4      	adds	r4, r0, #3
 80065f0:	f024 0403 	bic.w	r4, r4, #3
 80065f4:	42a0      	cmp	r0, r4
 80065f6:	d005      	beq.n	8006604 <_malloc_r+0xa8>
 80065f8:	1a21      	subs	r1, r4, r0
 80065fa:	4630      	mov	r0, r6
 80065fc:	f000 f808 	bl	8006610 <_sbrk_r>
 8006600:	3001      	adds	r0, #1
 8006602:	d0cf      	beq.n	80065a4 <_malloc_r+0x48>
 8006604:	6025      	str	r5, [r4, #0]
 8006606:	e7db      	b.n	80065c0 <_malloc_r+0x64>
 8006608:	200000a8 	.word	0x200000a8
 800660c:	200000ac 	.word	0x200000ac

08006610 <_sbrk_r>:
 8006610:	b538      	push	{r3, r4, r5, lr}
 8006612:	4c06      	ldr	r4, [pc, #24]	; (800662c <_sbrk_r+0x1c>)
 8006614:	2300      	movs	r3, #0
 8006616:	4605      	mov	r5, r0
 8006618:	4608      	mov	r0, r1
 800661a:	6023      	str	r3, [r4, #0]
 800661c:	f7fc fc50 	bl	8002ec0 <_sbrk>
 8006620:	1c43      	adds	r3, r0, #1
 8006622:	d102      	bne.n	800662a <_sbrk_r+0x1a>
 8006624:	6823      	ldr	r3, [r4, #0]
 8006626:	b103      	cbz	r3, 800662a <_sbrk_r+0x1a>
 8006628:	602b      	str	r3, [r5, #0]
 800662a:	bd38      	pop	{r3, r4, r5, pc}
 800662c:	20004da4 	.word	0x20004da4

08006630 <siprintf>:
 8006630:	b40e      	push	{r1, r2, r3}
 8006632:	b500      	push	{lr}
 8006634:	b09c      	sub	sp, #112	; 0x70
 8006636:	ab1d      	add	r3, sp, #116	; 0x74
 8006638:	9002      	str	r0, [sp, #8]
 800663a:	9006      	str	r0, [sp, #24]
 800663c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8006640:	4809      	ldr	r0, [pc, #36]	; (8006668 <siprintf+0x38>)
 8006642:	9107      	str	r1, [sp, #28]
 8006644:	9104      	str	r1, [sp, #16]
 8006646:	4909      	ldr	r1, [pc, #36]	; (800666c <siprintf+0x3c>)
 8006648:	f853 2b04 	ldr.w	r2, [r3], #4
 800664c:	9105      	str	r1, [sp, #20]
 800664e:	6800      	ldr	r0, [r0, #0]
 8006650:	9301      	str	r3, [sp, #4]
 8006652:	a902      	add	r1, sp, #8
 8006654:	f000 f868 	bl	8006728 <_svfiprintf_r>
 8006658:	9b02      	ldr	r3, [sp, #8]
 800665a:	2200      	movs	r2, #0
 800665c:	701a      	strb	r2, [r3, #0]
 800665e:	b01c      	add	sp, #112	; 0x70
 8006660:	f85d eb04 	ldr.w	lr, [sp], #4
 8006664:	b003      	add	sp, #12
 8006666:	4770      	bx	lr
 8006668:	20000014 	.word	0x20000014
 800666c:	ffff0208 	.word	0xffff0208

08006670 <__malloc_lock>:
 8006670:	4770      	bx	lr

08006672 <__malloc_unlock>:
 8006672:	4770      	bx	lr

08006674 <__ssputs_r>:
 8006674:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006678:	688e      	ldr	r6, [r1, #8]
 800667a:	429e      	cmp	r6, r3
 800667c:	4682      	mov	sl, r0
 800667e:	460c      	mov	r4, r1
 8006680:	4690      	mov	r8, r2
 8006682:	4699      	mov	r9, r3
 8006684:	d837      	bhi.n	80066f6 <__ssputs_r+0x82>
 8006686:	898a      	ldrh	r2, [r1, #12]
 8006688:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800668c:	d031      	beq.n	80066f2 <__ssputs_r+0x7e>
 800668e:	6825      	ldr	r5, [r4, #0]
 8006690:	6909      	ldr	r1, [r1, #16]
 8006692:	1a6f      	subs	r7, r5, r1
 8006694:	6965      	ldr	r5, [r4, #20]
 8006696:	2302      	movs	r3, #2
 8006698:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800669c:	fb95 f5f3 	sdiv	r5, r5, r3
 80066a0:	f109 0301 	add.w	r3, r9, #1
 80066a4:	443b      	add	r3, r7
 80066a6:	429d      	cmp	r5, r3
 80066a8:	bf38      	it	cc
 80066aa:	461d      	movcc	r5, r3
 80066ac:	0553      	lsls	r3, r2, #21
 80066ae:	d530      	bpl.n	8006712 <__ssputs_r+0x9e>
 80066b0:	4629      	mov	r1, r5
 80066b2:	f7ff ff53 	bl	800655c <_malloc_r>
 80066b6:	4606      	mov	r6, r0
 80066b8:	b950      	cbnz	r0, 80066d0 <__ssputs_r+0x5c>
 80066ba:	230c      	movs	r3, #12
 80066bc:	f8ca 3000 	str.w	r3, [sl]
 80066c0:	89a3      	ldrh	r3, [r4, #12]
 80066c2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80066c6:	81a3      	strh	r3, [r4, #12]
 80066c8:	f04f 30ff 	mov.w	r0, #4294967295
 80066cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80066d0:	463a      	mov	r2, r7
 80066d2:	6921      	ldr	r1, [r4, #16]
 80066d4:	f7ff fee0 	bl	8006498 <memcpy>
 80066d8:	89a3      	ldrh	r3, [r4, #12]
 80066da:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80066de:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80066e2:	81a3      	strh	r3, [r4, #12]
 80066e4:	6126      	str	r6, [r4, #16]
 80066e6:	6165      	str	r5, [r4, #20]
 80066e8:	443e      	add	r6, r7
 80066ea:	1bed      	subs	r5, r5, r7
 80066ec:	6026      	str	r6, [r4, #0]
 80066ee:	60a5      	str	r5, [r4, #8]
 80066f0:	464e      	mov	r6, r9
 80066f2:	454e      	cmp	r6, r9
 80066f4:	d900      	bls.n	80066f8 <__ssputs_r+0x84>
 80066f6:	464e      	mov	r6, r9
 80066f8:	4632      	mov	r2, r6
 80066fa:	4641      	mov	r1, r8
 80066fc:	6820      	ldr	r0, [r4, #0]
 80066fe:	f000 fa93 	bl	8006c28 <memmove>
 8006702:	68a3      	ldr	r3, [r4, #8]
 8006704:	1b9b      	subs	r3, r3, r6
 8006706:	60a3      	str	r3, [r4, #8]
 8006708:	6823      	ldr	r3, [r4, #0]
 800670a:	441e      	add	r6, r3
 800670c:	6026      	str	r6, [r4, #0]
 800670e:	2000      	movs	r0, #0
 8006710:	e7dc      	b.n	80066cc <__ssputs_r+0x58>
 8006712:	462a      	mov	r2, r5
 8006714:	f000 faa1 	bl	8006c5a <_realloc_r>
 8006718:	4606      	mov	r6, r0
 800671a:	2800      	cmp	r0, #0
 800671c:	d1e2      	bne.n	80066e4 <__ssputs_r+0x70>
 800671e:	6921      	ldr	r1, [r4, #16]
 8006720:	4650      	mov	r0, sl
 8006722:	f7ff fecd 	bl	80064c0 <_free_r>
 8006726:	e7c8      	b.n	80066ba <__ssputs_r+0x46>

08006728 <_svfiprintf_r>:
 8006728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800672c:	461d      	mov	r5, r3
 800672e:	898b      	ldrh	r3, [r1, #12]
 8006730:	061f      	lsls	r7, r3, #24
 8006732:	b09d      	sub	sp, #116	; 0x74
 8006734:	4680      	mov	r8, r0
 8006736:	460c      	mov	r4, r1
 8006738:	4616      	mov	r6, r2
 800673a:	d50f      	bpl.n	800675c <_svfiprintf_r+0x34>
 800673c:	690b      	ldr	r3, [r1, #16]
 800673e:	b96b      	cbnz	r3, 800675c <_svfiprintf_r+0x34>
 8006740:	2140      	movs	r1, #64	; 0x40
 8006742:	f7ff ff0b 	bl	800655c <_malloc_r>
 8006746:	6020      	str	r0, [r4, #0]
 8006748:	6120      	str	r0, [r4, #16]
 800674a:	b928      	cbnz	r0, 8006758 <_svfiprintf_r+0x30>
 800674c:	230c      	movs	r3, #12
 800674e:	f8c8 3000 	str.w	r3, [r8]
 8006752:	f04f 30ff 	mov.w	r0, #4294967295
 8006756:	e0c8      	b.n	80068ea <_svfiprintf_r+0x1c2>
 8006758:	2340      	movs	r3, #64	; 0x40
 800675a:	6163      	str	r3, [r4, #20]
 800675c:	2300      	movs	r3, #0
 800675e:	9309      	str	r3, [sp, #36]	; 0x24
 8006760:	2320      	movs	r3, #32
 8006762:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006766:	2330      	movs	r3, #48	; 0x30
 8006768:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800676c:	9503      	str	r5, [sp, #12]
 800676e:	f04f 0b01 	mov.w	fp, #1
 8006772:	4637      	mov	r7, r6
 8006774:	463d      	mov	r5, r7
 8006776:	f815 3b01 	ldrb.w	r3, [r5], #1
 800677a:	b10b      	cbz	r3, 8006780 <_svfiprintf_r+0x58>
 800677c:	2b25      	cmp	r3, #37	; 0x25
 800677e:	d13e      	bne.n	80067fe <_svfiprintf_r+0xd6>
 8006780:	ebb7 0a06 	subs.w	sl, r7, r6
 8006784:	d00b      	beq.n	800679e <_svfiprintf_r+0x76>
 8006786:	4653      	mov	r3, sl
 8006788:	4632      	mov	r2, r6
 800678a:	4621      	mov	r1, r4
 800678c:	4640      	mov	r0, r8
 800678e:	f7ff ff71 	bl	8006674 <__ssputs_r>
 8006792:	3001      	adds	r0, #1
 8006794:	f000 80a4 	beq.w	80068e0 <_svfiprintf_r+0x1b8>
 8006798:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800679a:	4453      	add	r3, sl
 800679c:	9309      	str	r3, [sp, #36]	; 0x24
 800679e:	783b      	ldrb	r3, [r7, #0]
 80067a0:	2b00      	cmp	r3, #0
 80067a2:	f000 809d 	beq.w	80068e0 <_svfiprintf_r+0x1b8>
 80067a6:	2300      	movs	r3, #0
 80067a8:	f04f 32ff 	mov.w	r2, #4294967295
 80067ac:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80067b0:	9304      	str	r3, [sp, #16]
 80067b2:	9307      	str	r3, [sp, #28]
 80067b4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80067b8:	931a      	str	r3, [sp, #104]	; 0x68
 80067ba:	462f      	mov	r7, r5
 80067bc:	2205      	movs	r2, #5
 80067be:	f817 1b01 	ldrb.w	r1, [r7], #1
 80067c2:	4850      	ldr	r0, [pc, #320]	; (8006904 <_svfiprintf_r+0x1dc>)
 80067c4:	f7f9 fd2c 	bl	8000220 <memchr>
 80067c8:	9b04      	ldr	r3, [sp, #16]
 80067ca:	b9d0      	cbnz	r0, 8006802 <_svfiprintf_r+0xda>
 80067cc:	06d9      	lsls	r1, r3, #27
 80067ce:	bf44      	itt	mi
 80067d0:	2220      	movmi	r2, #32
 80067d2:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80067d6:	071a      	lsls	r2, r3, #28
 80067d8:	bf44      	itt	mi
 80067da:	222b      	movmi	r2, #43	; 0x2b
 80067dc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80067e0:	782a      	ldrb	r2, [r5, #0]
 80067e2:	2a2a      	cmp	r2, #42	; 0x2a
 80067e4:	d015      	beq.n	8006812 <_svfiprintf_r+0xea>
 80067e6:	9a07      	ldr	r2, [sp, #28]
 80067e8:	462f      	mov	r7, r5
 80067ea:	2000      	movs	r0, #0
 80067ec:	250a      	movs	r5, #10
 80067ee:	4639      	mov	r1, r7
 80067f0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80067f4:	3b30      	subs	r3, #48	; 0x30
 80067f6:	2b09      	cmp	r3, #9
 80067f8:	d94d      	bls.n	8006896 <_svfiprintf_r+0x16e>
 80067fa:	b1b8      	cbz	r0, 800682c <_svfiprintf_r+0x104>
 80067fc:	e00f      	b.n	800681e <_svfiprintf_r+0xf6>
 80067fe:	462f      	mov	r7, r5
 8006800:	e7b8      	b.n	8006774 <_svfiprintf_r+0x4c>
 8006802:	4a40      	ldr	r2, [pc, #256]	; (8006904 <_svfiprintf_r+0x1dc>)
 8006804:	1a80      	subs	r0, r0, r2
 8006806:	fa0b f000 	lsl.w	r0, fp, r0
 800680a:	4318      	orrs	r0, r3
 800680c:	9004      	str	r0, [sp, #16]
 800680e:	463d      	mov	r5, r7
 8006810:	e7d3      	b.n	80067ba <_svfiprintf_r+0x92>
 8006812:	9a03      	ldr	r2, [sp, #12]
 8006814:	1d11      	adds	r1, r2, #4
 8006816:	6812      	ldr	r2, [r2, #0]
 8006818:	9103      	str	r1, [sp, #12]
 800681a:	2a00      	cmp	r2, #0
 800681c:	db01      	blt.n	8006822 <_svfiprintf_r+0xfa>
 800681e:	9207      	str	r2, [sp, #28]
 8006820:	e004      	b.n	800682c <_svfiprintf_r+0x104>
 8006822:	4252      	negs	r2, r2
 8006824:	f043 0302 	orr.w	r3, r3, #2
 8006828:	9207      	str	r2, [sp, #28]
 800682a:	9304      	str	r3, [sp, #16]
 800682c:	783b      	ldrb	r3, [r7, #0]
 800682e:	2b2e      	cmp	r3, #46	; 0x2e
 8006830:	d10c      	bne.n	800684c <_svfiprintf_r+0x124>
 8006832:	787b      	ldrb	r3, [r7, #1]
 8006834:	2b2a      	cmp	r3, #42	; 0x2a
 8006836:	d133      	bne.n	80068a0 <_svfiprintf_r+0x178>
 8006838:	9b03      	ldr	r3, [sp, #12]
 800683a:	1d1a      	adds	r2, r3, #4
 800683c:	681b      	ldr	r3, [r3, #0]
 800683e:	9203      	str	r2, [sp, #12]
 8006840:	2b00      	cmp	r3, #0
 8006842:	bfb8      	it	lt
 8006844:	f04f 33ff 	movlt.w	r3, #4294967295
 8006848:	3702      	adds	r7, #2
 800684a:	9305      	str	r3, [sp, #20]
 800684c:	4d2e      	ldr	r5, [pc, #184]	; (8006908 <_svfiprintf_r+0x1e0>)
 800684e:	7839      	ldrb	r1, [r7, #0]
 8006850:	2203      	movs	r2, #3
 8006852:	4628      	mov	r0, r5
 8006854:	f7f9 fce4 	bl	8000220 <memchr>
 8006858:	b138      	cbz	r0, 800686a <_svfiprintf_r+0x142>
 800685a:	2340      	movs	r3, #64	; 0x40
 800685c:	1b40      	subs	r0, r0, r5
 800685e:	fa03 f000 	lsl.w	r0, r3, r0
 8006862:	9b04      	ldr	r3, [sp, #16]
 8006864:	4303      	orrs	r3, r0
 8006866:	3701      	adds	r7, #1
 8006868:	9304      	str	r3, [sp, #16]
 800686a:	7839      	ldrb	r1, [r7, #0]
 800686c:	4827      	ldr	r0, [pc, #156]	; (800690c <_svfiprintf_r+0x1e4>)
 800686e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006872:	2206      	movs	r2, #6
 8006874:	1c7e      	adds	r6, r7, #1
 8006876:	f7f9 fcd3 	bl	8000220 <memchr>
 800687a:	2800      	cmp	r0, #0
 800687c:	d038      	beq.n	80068f0 <_svfiprintf_r+0x1c8>
 800687e:	4b24      	ldr	r3, [pc, #144]	; (8006910 <_svfiprintf_r+0x1e8>)
 8006880:	bb13      	cbnz	r3, 80068c8 <_svfiprintf_r+0x1a0>
 8006882:	9b03      	ldr	r3, [sp, #12]
 8006884:	3307      	adds	r3, #7
 8006886:	f023 0307 	bic.w	r3, r3, #7
 800688a:	3308      	adds	r3, #8
 800688c:	9303      	str	r3, [sp, #12]
 800688e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006890:	444b      	add	r3, r9
 8006892:	9309      	str	r3, [sp, #36]	; 0x24
 8006894:	e76d      	b.n	8006772 <_svfiprintf_r+0x4a>
 8006896:	fb05 3202 	mla	r2, r5, r2, r3
 800689a:	2001      	movs	r0, #1
 800689c:	460f      	mov	r7, r1
 800689e:	e7a6      	b.n	80067ee <_svfiprintf_r+0xc6>
 80068a0:	2300      	movs	r3, #0
 80068a2:	3701      	adds	r7, #1
 80068a4:	9305      	str	r3, [sp, #20]
 80068a6:	4619      	mov	r1, r3
 80068a8:	250a      	movs	r5, #10
 80068aa:	4638      	mov	r0, r7
 80068ac:	f810 2b01 	ldrb.w	r2, [r0], #1
 80068b0:	3a30      	subs	r2, #48	; 0x30
 80068b2:	2a09      	cmp	r2, #9
 80068b4:	d903      	bls.n	80068be <_svfiprintf_r+0x196>
 80068b6:	2b00      	cmp	r3, #0
 80068b8:	d0c8      	beq.n	800684c <_svfiprintf_r+0x124>
 80068ba:	9105      	str	r1, [sp, #20]
 80068bc:	e7c6      	b.n	800684c <_svfiprintf_r+0x124>
 80068be:	fb05 2101 	mla	r1, r5, r1, r2
 80068c2:	2301      	movs	r3, #1
 80068c4:	4607      	mov	r7, r0
 80068c6:	e7f0      	b.n	80068aa <_svfiprintf_r+0x182>
 80068c8:	ab03      	add	r3, sp, #12
 80068ca:	9300      	str	r3, [sp, #0]
 80068cc:	4622      	mov	r2, r4
 80068ce:	4b11      	ldr	r3, [pc, #68]	; (8006914 <_svfiprintf_r+0x1ec>)
 80068d0:	a904      	add	r1, sp, #16
 80068d2:	4640      	mov	r0, r8
 80068d4:	f3af 8000 	nop.w
 80068d8:	f1b0 3fff 	cmp.w	r0, #4294967295
 80068dc:	4681      	mov	r9, r0
 80068de:	d1d6      	bne.n	800688e <_svfiprintf_r+0x166>
 80068e0:	89a3      	ldrh	r3, [r4, #12]
 80068e2:	065b      	lsls	r3, r3, #25
 80068e4:	f53f af35 	bmi.w	8006752 <_svfiprintf_r+0x2a>
 80068e8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80068ea:	b01d      	add	sp, #116	; 0x74
 80068ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80068f0:	ab03      	add	r3, sp, #12
 80068f2:	9300      	str	r3, [sp, #0]
 80068f4:	4622      	mov	r2, r4
 80068f6:	4b07      	ldr	r3, [pc, #28]	; (8006914 <_svfiprintf_r+0x1ec>)
 80068f8:	a904      	add	r1, sp, #16
 80068fa:	4640      	mov	r0, r8
 80068fc:	f000 f882 	bl	8006a04 <_printf_i>
 8006900:	e7ea      	b.n	80068d8 <_svfiprintf_r+0x1b0>
 8006902:	bf00      	nop
 8006904:	08008014 	.word	0x08008014
 8006908:	0800801a 	.word	0x0800801a
 800690c:	0800801e 	.word	0x0800801e
 8006910:	00000000 	.word	0x00000000
 8006914:	08006675 	.word	0x08006675

08006918 <_printf_common>:
 8006918:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800691c:	4691      	mov	r9, r2
 800691e:	461f      	mov	r7, r3
 8006920:	688a      	ldr	r2, [r1, #8]
 8006922:	690b      	ldr	r3, [r1, #16]
 8006924:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8006928:	4293      	cmp	r3, r2
 800692a:	bfb8      	it	lt
 800692c:	4613      	movlt	r3, r2
 800692e:	f8c9 3000 	str.w	r3, [r9]
 8006932:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8006936:	4606      	mov	r6, r0
 8006938:	460c      	mov	r4, r1
 800693a:	b112      	cbz	r2, 8006942 <_printf_common+0x2a>
 800693c:	3301      	adds	r3, #1
 800693e:	f8c9 3000 	str.w	r3, [r9]
 8006942:	6823      	ldr	r3, [r4, #0]
 8006944:	0699      	lsls	r1, r3, #26
 8006946:	bf42      	ittt	mi
 8006948:	f8d9 3000 	ldrmi.w	r3, [r9]
 800694c:	3302      	addmi	r3, #2
 800694e:	f8c9 3000 	strmi.w	r3, [r9]
 8006952:	6825      	ldr	r5, [r4, #0]
 8006954:	f015 0506 	ands.w	r5, r5, #6
 8006958:	d107      	bne.n	800696a <_printf_common+0x52>
 800695a:	f104 0a19 	add.w	sl, r4, #25
 800695e:	68e3      	ldr	r3, [r4, #12]
 8006960:	f8d9 2000 	ldr.w	r2, [r9]
 8006964:	1a9b      	subs	r3, r3, r2
 8006966:	42ab      	cmp	r3, r5
 8006968:	dc28      	bgt.n	80069bc <_printf_common+0xa4>
 800696a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 800696e:	6822      	ldr	r2, [r4, #0]
 8006970:	3300      	adds	r3, #0
 8006972:	bf18      	it	ne
 8006974:	2301      	movne	r3, #1
 8006976:	0692      	lsls	r2, r2, #26
 8006978:	d42d      	bmi.n	80069d6 <_printf_common+0xbe>
 800697a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800697e:	4639      	mov	r1, r7
 8006980:	4630      	mov	r0, r6
 8006982:	47c0      	blx	r8
 8006984:	3001      	adds	r0, #1
 8006986:	d020      	beq.n	80069ca <_printf_common+0xb2>
 8006988:	6823      	ldr	r3, [r4, #0]
 800698a:	68e5      	ldr	r5, [r4, #12]
 800698c:	f8d9 2000 	ldr.w	r2, [r9]
 8006990:	f003 0306 	and.w	r3, r3, #6
 8006994:	2b04      	cmp	r3, #4
 8006996:	bf08      	it	eq
 8006998:	1aad      	subeq	r5, r5, r2
 800699a:	68a3      	ldr	r3, [r4, #8]
 800699c:	6922      	ldr	r2, [r4, #16]
 800699e:	bf0c      	ite	eq
 80069a0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80069a4:	2500      	movne	r5, #0
 80069a6:	4293      	cmp	r3, r2
 80069a8:	bfc4      	itt	gt
 80069aa:	1a9b      	subgt	r3, r3, r2
 80069ac:	18ed      	addgt	r5, r5, r3
 80069ae:	f04f 0900 	mov.w	r9, #0
 80069b2:	341a      	adds	r4, #26
 80069b4:	454d      	cmp	r5, r9
 80069b6:	d11a      	bne.n	80069ee <_printf_common+0xd6>
 80069b8:	2000      	movs	r0, #0
 80069ba:	e008      	b.n	80069ce <_printf_common+0xb6>
 80069bc:	2301      	movs	r3, #1
 80069be:	4652      	mov	r2, sl
 80069c0:	4639      	mov	r1, r7
 80069c2:	4630      	mov	r0, r6
 80069c4:	47c0      	blx	r8
 80069c6:	3001      	adds	r0, #1
 80069c8:	d103      	bne.n	80069d2 <_printf_common+0xba>
 80069ca:	f04f 30ff 	mov.w	r0, #4294967295
 80069ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80069d2:	3501      	adds	r5, #1
 80069d4:	e7c3      	b.n	800695e <_printf_common+0x46>
 80069d6:	18e1      	adds	r1, r4, r3
 80069d8:	1c5a      	adds	r2, r3, #1
 80069da:	2030      	movs	r0, #48	; 0x30
 80069dc:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80069e0:	4422      	add	r2, r4
 80069e2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80069e6:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80069ea:	3302      	adds	r3, #2
 80069ec:	e7c5      	b.n	800697a <_printf_common+0x62>
 80069ee:	2301      	movs	r3, #1
 80069f0:	4622      	mov	r2, r4
 80069f2:	4639      	mov	r1, r7
 80069f4:	4630      	mov	r0, r6
 80069f6:	47c0      	blx	r8
 80069f8:	3001      	adds	r0, #1
 80069fa:	d0e6      	beq.n	80069ca <_printf_common+0xb2>
 80069fc:	f109 0901 	add.w	r9, r9, #1
 8006a00:	e7d8      	b.n	80069b4 <_printf_common+0x9c>
	...

08006a04 <_printf_i>:
 8006a04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006a08:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8006a0c:	460c      	mov	r4, r1
 8006a0e:	7e09      	ldrb	r1, [r1, #24]
 8006a10:	b085      	sub	sp, #20
 8006a12:	296e      	cmp	r1, #110	; 0x6e
 8006a14:	4617      	mov	r7, r2
 8006a16:	4606      	mov	r6, r0
 8006a18:	4698      	mov	r8, r3
 8006a1a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006a1c:	f000 80b3 	beq.w	8006b86 <_printf_i+0x182>
 8006a20:	d822      	bhi.n	8006a68 <_printf_i+0x64>
 8006a22:	2963      	cmp	r1, #99	; 0x63
 8006a24:	d036      	beq.n	8006a94 <_printf_i+0x90>
 8006a26:	d80a      	bhi.n	8006a3e <_printf_i+0x3a>
 8006a28:	2900      	cmp	r1, #0
 8006a2a:	f000 80b9 	beq.w	8006ba0 <_printf_i+0x19c>
 8006a2e:	2958      	cmp	r1, #88	; 0x58
 8006a30:	f000 8083 	beq.w	8006b3a <_printf_i+0x136>
 8006a34:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006a38:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8006a3c:	e032      	b.n	8006aa4 <_printf_i+0xa0>
 8006a3e:	2964      	cmp	r1, #100	; 0x64
 8006a40:	d001      	beq.n	8006a46 <_printf_i+0x42>
 8006a42:	2969      	cmp	r1, #105	; 0x69
 8006a44:	d1f6      	bne.n	8006a34 <_printf_i+0x30>
 8006a46:	6820      	ldr	r0, [r4, #0]
 8006a48:	6813      	ldr	r3, [r2, #0]
 8006a4a:	0605      	lsls	r5, r0, #24
 8006a4c:	f103 0104 	add.w	r1, r3, #4
 8006a50:	d52a      	bpl.n	8006aa8 <_printf_i+0xa4>
 8006a52:	681b      	ldr	r3, [r3, #0]
 8006a54:	6011      	str	r1, [r2, #0]
 8006a56:	2b00      	cmp	r3, #0
 8006a58:	da03      	bge.n	8006a62 <_printf_i+0x5e>
 8006a5a:	222d      	movs	r2, #45	; 0x2d
 8006a5c:	425b      	negs	r3, r3
 8006a5e:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8006a62:	486f      	ldr	r0, [pc, #444]	; (8006c20 <_printf_i+0x21c>)
 8006a64:	220a      	movs	r2, #10
 8006a66:	e039      	b.n	8006adc <_printf_i+0xd8>
 8006a68:	2973      	cmp	r1, #115	; 0x73
 8006a6a:	f000 809d 	beq.w	8006ba8 <_printf_i+0x1a4>
 8006a6e:	d808      	bhi.n	8006a82 <_printf_i+0x7e>
 8006a70:	296f      	cmp	r1, #111	; 0x6f
 8006a72:	d020      	beq.n	8006ab6 <_printf_i+0xb2>
 8006a74:	2970      	cmp	r1, #112	; 0x70
 8006a76:	d1dd      	bne.n	8006a34 <_printf_i+0x30>
 8006a78:	6823      	ldr	r3, [r4, #0]
 8006a7a:	f043 0320 	orr.w	r3, r3, #32
 8006a7e:	6023      	str	r3, [r4, #0]
 8006a80:	e003      	b.n	8006a8a <_printf_i+0x86>
 8006a82:	2975      	cmp	r1, #117	; 0x75
 8006a84:	d017      	beq.n	8006ab6 <_printf_i+0xb2>
 8006a86:	2978      	cmp	r1, #120	; 0x78
 8006a88:	d1d4      	bne.n	8006a34 <_printf_i+0x30>
 8006a8a:	2378      	movs	r3, #120	; 0x78
 8006a8c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8006a90:	4864      	ldr	r0, [pc, #400]	; (8006c24 <_printf_i+0x220>)
 8006a92:	e055      	b.n	8006b40 <_printf_i+0x13c>
 8006a94:	6813      	ldr	r3, [r2, #0]
 8006a96:	1d19      	adds	r1, r3, #4
 8006a98:	681b      	ldr	r3, [r3, #0]
 8006a9a:	6011      	str	r1, [r2, #0]
 8006a9c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006aa0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006aa4:	2301      	movs	r3, #1
 8006aa6:	e08c      	b.n	8006bc2 <_printf_i+0x1be>
 8006aa8:	681b      	ldr	r3, [r3, #0]
 8006aaa:	6011      	str	r1, [r2, #0]
 8006aac:	f010 0f40 	tst.w	r0, #64	; 0x40
 8006ab0:	bf18      	it	ne
 8006ab2:	b21b      	sxthne	r3, r3
 8006ab4:	e7cf      	b.n	8006a56 <_printf_i+0x52>
 8006ab6:	6813      	ldr	r3, [r2, #0]
 8006ab8:	6825      	ldr	r5, [r4, #0]
 8006aba:	1d18      	adds	r0, r3, #4
 8006abc:	6010      	str	r0, [r2, #0]
 8006abe:	0628      	lsls	r0, r5, #24
 8006ac0:	d501      	bpl.n	8006ac6 <_printf_i+0xc2>
 8006ac2:	681b      	ldr	r3, [r3, #0]
 8006ac4:	e002      	b.n	8006acc <_printf_i+0xc8>
 8006ac6:	0668      	lsls	r0, r5, #25
 8006ac8:	d5fb      	bpl.n	8006ac2 <_printf_i+0xbe>
 8006aca:	881b      	ldrh	r3, [r3, #0]
 8006acc:	4854      	ldr	r0, [pc, #336]	; (8006c20 <_printf_i+0x21c>)
 8006ace:	296f      	cmp	r1, #111	; 0x6f
 8006ad0:	bf14      	ite	ne
 8006ad2:	220a      	movne	r2, #10
 8006ad4:	2208      	moveq	r2, #8
 8006ad6:	2100      	movs	r1, #0
 8006ad8:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8006adc:	6865      	ldr	r5, [r4, #4]
 8006ade:	60a5      	str	r5, [r4, #8]
 8006ae0:	2d00      	cmp	r5, #0
 8006ae2:	f2c0 8095 	blt.w	8006c10 <_printf_i+0x20c>
 8006ae6:	6821      	ldr	r1, [r4, #0]
 8006ae8:	f021 0104 	bic.w	r1, r1, #4
 8006aec:	6021      	str	r1, [r4, #0]
 8006aee:	2b00      	cmp	r3, #0
 8006af0:	d13d      	bne.n	8006b6e <_printf_i+0x16a>
 8006af2:	2d00      	cmp	r5, #0
 8006af4:	f040 808e 	bne.w	8006c14 <_printf_i+0x210>
 8006af8:	4665      	mov	r5, ip
 8006afa:	2a08      	cmp	r2, #8
 8006afc:	d10b      	bne.n	8006b16 <_printf_i+0x112>
 8006afe:	6823      	ldr	r3, [r4, #0]
 8006b00:	07db      	lsls	r3, r3, #31
 8006b02:	d508      	bpl.n	8006b16 <_printf_i+0x112>
 8006b04:	6923      	ldr	r3, [r4, #16]
 8006b06:	6862      	ldr	r2, [r4, #4]
 8006b08:	429a      	cmp	r2, r3
 8006b0a:	bfde      	ittt	le
 8006b0c:	2330      	movle	r3, #48	; 0x30
 8006b0e:	f805 3c01 	strble.w	r3, [r5, #-1]
 8006b12:	f105 35ff 	addle.w	r5, r5, #4294967295
 8006b16:	ebac 0305 	sub.w	r3, ip, r5
 8006b1a:	6123      	str	r3, [r4, #16]
 8006b1c:	f8cd 8000 	str.w	r8, [sp]
 8006b20:	463b      	mov	r3, r7
 8006b22:	aa03      	add	r2, sp, #12
 8006b24:	4621      	mov	r1, r4
 8006b26:	4630      	mov	r0, r6
 8006b28:	f7ff fef6 	bl	8006918 <_printf_common>
 8006b2c:	3001      	adds	r0, #1
 8006b2e:	d14d      	bne.n	8006bcc <_printf_i+0x1c8>
 8006b30:	f04f 30ff 	mov.w	r0, #4294967295
 8006b34:	b005      	add	sp, #20
 8006b36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006b3a:	4839      	ldr	r0, [pc, #228]	; (8006c20 <_printf_i+0x21c>)
 8006b3c:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8006b40:	6813      	ldr	r3, [r2, #0]
 8006b42:	6821      	ldr	r1, [r4, #0]
 8006b44:	1d1d      	adds	r5, r3, #4
 8006b46:	681b      	ldr	r3, [r3, #0]
 8006b48:	6015      	str	r5, [r2, #0]
 8006b4a:	060a      	lsls	r2, r1, #24
 8006b4c:	d50b      	bpl.n	8006b66 <_printf_i+0x162>
 8006b4e:	07ca      	lsls	r2, r1, #31
 8006b50:	bf44      	itt	mi
 8006b52:	f041 0120 	orrmi.w	r1, r1, #32
 8006b56:	6021      	strmi	r1, [r4, #0]
 8006b58:	b91b      	cbnz	r3, 8006b62 <_printf_i+0x15e>
 8006b5a:	6822      	ldr	r2, [r4, #0]
 8006b5c:	f022 0220 	bic.w	r2, r2, #32
 8006b60:	6022      	str	r2, [r4, #0]
 8006b62:	2210      	movs	r2, #16
 8006b64:	e7b7      	b.n	8006ad6 <_printf_i+0xd2>
 8006b66:	064d      	lsls	r5, r1, #25
 8006b68:	bf48      	it	mi
 8006b6a:	b29b      	uxthmi	r3, r3
 8006b6c:	e7ef      	b.n	8006b4e <_printf_i+0x14a>
 8006b6e:	4665      	mov	r5, ip
 8006b70:	fbb3 f1f2 	udiv	r1, r3, r2
 8006b74:	fb02 3311 	mls	r3, r2, r1, r3
 8006b78:	5cc3      	ldrb	r3, [r0, r3]
 8006b7a:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8006b7e:	460b      	mov	r3, r1
 8006b80:	2900      	cmp	r1, #0
 8006b82:	d1f5      	bne.n	8006b70 <_printf_i+0x16c>
 8006b84:	e7b9      	b.n	8006afa <_printf_i+0xf6>
 8006b86:	6813      	ldr	r3, [r2, #0]
 8006b88:	6825      	ldr	r5, [r4, #0]
 8006b8a:	6961      	ldr	r1, [r4, #20]
 8006b8c:	1d18      	adds	r0, r3, #4
 8006b8e:	6010      	str	r0, [r2, #0]
 8006b90:	0628      	lsls	r0, r5, #24
 8006b92:	681b      	ldr	r3, [r3, #0]
 8006b94:	d501      	bpl.n	8006b9a <_printf_i+0x196>
 8006b96:	6019      	str	r1, [r3, #0]
 8006b98:	e002      	b.n	8006ba0 <_printf_i+0x19c>
 8006b9a:	066a      	lsls	r2, r5, #25
 8006b9c:	d5fb      	bpl.n	8006b96 <_printf_i+0x192>
 8006b9e:	8019      	strh	r1, [r3, #0]
 8006ba0:	2300      	movs	r3, #0
 8006ba2:	6123      	str	r3, [r4, #16]
 8006ba4:	4665      	mov	r5, ip
 8006ba6:	e7b9      	b.n	8006b1c <_printf_i+0x118>
 8006ba8:	6813      	ldr	r3, [r2, #0]
 8006baa:	1d19      	adds	r1, r3, #4
 8006bac:	6011      	str	r1, [r2, #0]
 8006bae:	681d      	ldr	r5, [r3, #0]
 8006bb0:	6862      	ldr	r2, [r4, #4]
 8006bb2:	2100      	movs	r1, #0
 8006bb4:	4628      	mov	r0, r5
 8006bb6:	f7f9 fb33 	bl	8000220 <memchr>
 8006bba:	b108      	cbz	r0, 8006bc0 <_printf_i+0x1bc>
 8006bbc:	1b40      	subs	r0, r0, r5
 8006bbe:	6060      	str	r0, [r4, #4]
 8006bc0:	6863      	ldr	r3, [r4, #4]
 8006bc2:	6123      	str	r3, [r4, #16]
 8006bc4:	2300      	movs	r3, #0
 8006bc6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006bca:	e7a7      	b.n	8006b1c <_printf_i+0x118>
 8006bcc:	6923      	ldr	r3, [r4, #16]
 8006bce:	462a      	mov	r2, r5
 8006bd0:	4639      	mov	r1, r7
 8006bd2:	4630      	mov	r0, r6
 8006bd4:	47c0      	blx	r8
 8006bd6:	3001      	adds	r0, #1
 8006bd8:	d0aa      	beq.n	8006b30 <_printf_i+0x12c>
 8006bda:	6823      	ldr	r3, [r4, #0]
 8006bdc:	079b      	lsls	r3, r3, #30
 8006bde:	d413      	bmi.n	8006c08 <_printf_i+0x204>
 8006be0:	68e0      	ldr	r0, [r4, #12]
 8006be2:	9b03      	ldr	r3, [sp, #12]
 8006be4:	4298      	cmp	r0, r3
 8006be6:	bfb8      	it	lt
 8006be8:	4618      	movlt	r0, r3
 8006bea:	e7a3      	b.n	8006b34 <_printf_i+0x130>
 8006bec:	2301      	movs	r3, #1
 8006bee:	464a      	mov	r2, r9
 8006bf0:	4639      	mov	r1, r7
 8006bf2:	4630      	mov	r0, r6
 8006bf4:	47c0      	blx	r8
 8006bf6:	3001      	adds	r0, #1
 8006bf8:	d09a      	beq.n	8006b30 <_printf_i+0x12c>
 8006bfa:	3501      	adds	r5, #1
 8006bfc:	68e3      	ldr	r3, [r4, #12]
 8006bfe:	9a03      	ldr	r2, [sp, #12]
 8006c00:	1a9b      	subs	r3, r3, r2
 8006c02:	42ab      	cmp	r3, r5
 8006c04:	dcf2      	bgt.n	8006bec <_printf_i+0x1e8>
 8006c06:	e7eb      	b.n	8006be0 <_printf_i+0x1dc>
 8006c08:	2500      	movs	r5, #0
 8006c0a:	f104 0919 	add.w	r9, r4, #25
 8006c0e:	e7f5      	b.n	8006bfc <_printf_i+0x1f8>
 8006c10:	2b00      	cmp	r3, #0
 8006c12:	d1ac      	bne.n	8006b6e <_printf_i+0x16a>
 8006c14:	7803      	ldrb	r3, [r0, #0]
 8006c16:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006c1a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006c1e:	e76c      	b.n	8006afa <_printf_i+0xf6>
 8006c20:	08008025 	.word	0x08008025
 8006c24:	08008036 	.word	0x08008036

08006c28 <memmove>:
 8006c28:	4288      	cmp	r0, r1
 8006c2a:	b510      	push	{r4, lr}
 8006c2c:	eb01 0302 	add.w	r3, r1, r2
 8006c30:	d807      	bhi.n	8006c42 <memmove+0x1a>
 8006c32:	1e42      	subs	r2, r0, #1
 8006c34:	4299      	cmp	r1, r3
 8006c36:	d00a      	beq.n	8006c4e <memmove+0x26>
 8006c38:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006c3c:	f802 4f01 	strb.w	r4, [r2, #1]!
 8006c40:	e7f8      	b.n	8006c34 <memmove+0xc>
 8006c42:	4283      	cmp	r3, r0
 8006c44:	d9f5      	bls.n	8006c32 <memmove+0xa>
 8006c46:	1881      	adds	r1, r0, r2
 8006c48:	1ad2      	subs	r2, r2, r3
 8006c4a:	42d3      	cmn	r3, r2
 8006c4c:	d100      	bne.n	8006c50 <memmove+0x28>
 8006c4e:	bd10      	pop	{r4, pc}
 8006c50:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8006c54:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8006c58:	e7f7      	b.n	8006c4a <memmove+0x22>

08006c5a <_realloc_r>:
 8006c5a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c5c:	4607      	mov	r7, r0
 8006c5e:	4614      	mov	r4, r2
 8006c60:	460e      	mov	r6, r1
 8006c62:	b921      	cbnz	r1, 8006c6e <_realloc_r+0x14>
 8006c64:	4611      	mov	r1, r2
 8006c66:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8006c6a:	f7ff bc77 	b.w	800655c <_malloc_r>
 8006c6e:	b922      	cbnz	r2, 8006c7a <_realloc_r+0x20>
 8006c70:	f7ff fc26 	bl	80064c0 <_free_r>
 8006c74:	4625      	mov	r5, r4
 8006c76:	4628      	mov	r0, r5
 8006c78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006c7a:	f000 f814 	bl	8006ca6 <_malloc_usable_size_r>
 8006c7e:	42a0      	cmp	r0, r4
 8006c80:	d20f      	bcs.n	8006ca2 <_realloc_r+0x48>
 8006c82:	4621      	mov	r1, r4
 8006c84:	4638      	mov	r0, r7
 8006c86:	f7ff fc69 	bl	800655c <_malloc_r>
 8006c8a:	4605      	mov	r5, r0
 8006c8c:	2800      	cmp	r0, #0
 8006c8e:	d0f2      	beq.n	8006c76 <_realloc_r+0x1c>
 8006c90:	4631      	mov	r1, r6
 8006c92:	4622      	mov	r2, r4
 8006c94:	f7ff fc00 	bl	8006498 <memcpy>
 8006c98:	4631      	mov	r1, r6
 8006c9a:	4638      	mov	r0, r7
 8006c9c:	f7ff fc10 	bl	80064c0 <_free_r>
 8006ca0:	e7e9      	b.n	8006c76 <_realloc_r+0x1c>
 8006ca2:	4635      	mov	r5, r6
 8006ca4:	e7e7      	b.n	8006c76 <_realloc_r+0x1c>

08006ca6 <_malloc_usable_size_r>:
 8006ca6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006caa:	1f18      	subs	r0, r3, #4
 8006cac:	2b00      	cmp	r3, #0
 8006cae:	bfbc      	itt	lt
 8006cb0:	580b      	ldrlt	r3, [r1, r0]
 8006cb2:	18c0      	addlt	r0, r0, r3
 8006cb4:	4770      	bx	lr
	...

08006cb8 <sin>:
 8006cb8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006cba:	ec51 0b10 	vmov	r0, r1, d0
 8006cbe:	4a20      	ldr	r2, [pc, #128]	; (8006d40 <sin+0x88>)
 8006cc0:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8006cc4:	4293      	cmp	r3, r2
 8006cc6:	dc07      	bgt.n	8006cd8 <sin+0x20>
 8006cc8:	ed9f 1b1b 	vldr	d1, [pc, #108]	; 8006d38 <sin+0x80>
 8006ccc:	2000      	movs	r0, #0
 8006cce:	f000 fe37 	bl	8007940 <__kernel_sin>
 8006cd2:	ec51 0b10 	vmov	r0, r1, d0
 8006cd6:	e007      	b.n	8006ce8 <sin+0x30>
 8006cd8:	4a1a      	ldr	r2, [pc, #104]	; (8006d44 <sin+0x8c>)
 8006cda:	4293      	cmp	r3, r2
 8006cdc:	dd09      	ble.n	8006cf2 <sin+0x3a>
 8006cde:	ee10 2a10 	vmov	r2, s0
 8006ce2:	460b      	mov	r3, r1
 8006ce4:	f7f9 faf0 	bl	80002c8 <__aeabi_dsub>
 8006ce8:	ec41 0b10 	vmov	d0, r0, r1
 8006cec:	b005      	add	sp, #20
 8006cee:	f85d fb04 	ldr.w	pc, [sp], #4
 8006cf2:	4668      	mov	r0, sp
 8006cf4:	f000 f828 	bl	8006d48 <__ieee754_rem_pio2>
 8006cf8:	f000 0003 	and.w	r0, r0, #3
 8006cfc:	2801      	cmp	r0, #1
 8006cfe:	ed9d 1b02 	vldr	d1, [sp, #8]
 8006d02:	ed9d 0b00 	vldr	d0, [sp]
 8006d06:	d004      	beq.n	8006d12 <sin+0x5a>
 8006d08:	2802      	cmp	r0, #2
 8006d0a:	d005      	beq.n	8006d18 <sin+0x60>
 8006d0c:	b970      	cbnz	r0, 8006d2c <sin+0x74>
 8006d0e:	2001      	movs	r0, #1
 8006d10:	e7dd      	b.n	8006cce <sin+0x16>
 8006d12:	f000 fa0d 	bl	8007130 <__kernel_cos>
 8006d16:	e7dc      	b.n	8006cd2 <sin+0x1a>
 8006d18:	2001      	movs	r0, #1
 8006d1a:	f000 fe11 	bl	8007940 <__kernel_sin>
 8006d1e:	ec53 2b10 	vmov	r2, r3, d0
 8006d22:	ee10 0a10 	vmov	r0, s0
 8006d26:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8006d2a:	e7dd      	b.n	8006ce8 <sin+0x30>
 8006d2c:	f000 fa00 	bl	8007130 <__kernel_cos>
 8006d30:	e7f5      	b.n	8006d1e <sin+0x66>
 8006d32:	bf00      	nop
 8006d34:	f3af 8000 	nop.w
	...
 8006d40:	3fe921fb 	.word	0x3fe921fb
 8006d44:	7fefffff 	.word	0x7fefffff

08006d48 <__ieee754_rem_pio2>:
 8006d48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006d4c:	ec57 6b10 	vmov	r6, r7, d0
 8006d50:	4bc3      	ldr	r3, [pc, #780]	; (8007060 <__ieee754_rem_pio2+0x318>)
 8006d52:	b08d      	sub	sp, #52	; 0x34
 8006d54:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 8006d58:	4598      	cmp	r8, r3
 8006d5a:	4604      	mov	r4, r0
 8006d5c:	9704      	str	r7, [sp, #16]
 8006d5e:	dc07      	bgt.n	8006d70 <__ieee754_rem_pio2+0x28>
 8006d60:	2200      	movs	r2, #0
 8006d62:	2300      	movs	r3, #0
 8006d64:	ed84 0b00 	vstr	d0, [r4]
 8006d68:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8006d6c:	2500      	movs	r5, #0
 8006d6e:	e027      	b.n	8006dc0 <__ieee754_rem_pio2+0x78>
 8006d70:	4bbc      	ldr	r3, [pc, #752]	; (8007064 <__ieee754_rem_pio2+0x31c>)
 8006d72:	4598      	cmp	r8, r3
 8006d74:	dc75      	bgt.n	8006e62 <__ieee754_rem_pio2+0x11a>
 8006d76:	9b04      	ldr	r3, [sp, #16]
 8006d78:	4dbb      	ldr	r5, [pc, #748]	; (8007068 <__ieee754_rem_pio2+0x320>)
 8006d7a:	2b00      	cmp	r3, #0
 8006d7c:	ee10 0a10 	vmov	r0, s0
 8006d80:	a3a9      	add	r3, pc, #676	; (adr r3, 8007028 <__ieee754_rem_pio2+0x2e0>)
 8006d82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d86:	4639      	mov	r1, r7
 8006d88:	dd36      	ble.n	8006df8 <__ieee754_rem_pio2+0xb0>
 8006d8a:	f7f9 fa9d 	bl	80002c8 <__aeabi_dsub>
 8006d8e:	45a8      	cmp	r8, r5
 8006d90:	4606      	mov	r6, r0
 8006d92:	460f      	mov	r7, r1
 8006d94:	d018      	beq.n	8006dc8 <__ieee754_rem_pio2+0x80>
 8006d96:	a3a6      	add	r3, pc, #664	; (adr r3, 8007030 <__ieee754_rem_pio2+0x2e8>)
 8006d98:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d9c:	f7f9 fa94 	bl	80002c8 <__aeabi_dsub>
 8006da0:	4602      	mov	r2, r0
 8006da2:	460b      	mov	r3, r1
 8006da4:	e9c4 2300 	strd	r2, r3, [r4]
 8006da8:	4630      	mov	r0, r6
 8006daa:	4639      	mov	r1, r7
 8006dac:	f7f9 fa8c 	bl	80002c8 <__aeabi_dsub>
 8006db0:	a39f      	add	r3, pc, #636	; (adr r3, 8007030 <__ieee754_rem_pio2+0x2e8>)
 8006db2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006db6:	f7f9 fa87 	bl	80002c8 <__aeabi_dsub>
 8006dba:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8006dbe:	2501      	movs	r5, #1
 8006dc0:	4628      	mov	r0, r5
 8006dc2:	b00d      	add	sp, #52	; 0x34
 8006dc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006dc8:	a39b      	add	r3, pc, #620	; (adr r3, 8007038 <__ieee754_rem_pio2+0x2f0>)
 8006dca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006dce:	f7f9 fa7b 	bl	80002c8 <__aeabi_dsub>
 8006dd2:	a39b      	add	r3, pc, #620	; (adr r3, 8007040 <__ieee754_rem_pio2+0x2f8>)
 8006dd4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006dd8:	4606      	mov	r6, r0
 8006dda:	460f      	mov	r7, r1
 8006ddc:	f7f9 fa74 	bl	80002c8 <__aeabi_dsub>
 8006de0:	4602      	mov	r2, r0
 8006de2:	460b      	mov	r3, r1
 8006de4:	e9c4 2300 	strd	r2, r3, [r4]
 8006de8:	4630      	mov	r0, r6
 8006dea:	4639      	mov	r1, r7
 8006dec:	f7f9 fa6c 	bl	80002c8 <__aeabi_dsub>
 8006df0:	a393      	add	r3, pc, #588	; (adr r3, 8007040 <__ieee754_rem_pio2+0x2f8>)
 8006df2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006df6:	e7de      	b.n	8006db6 <__ieee754_rem_pio2+0x6e>
 8006df8:	f7f9 fa68 	bl	80002cc <__adddf3>
 8006dfc:	45a8      	cmp	r8, r5
 8006dfe:	4606      	mov	r6, r0
 8006e00:	460f      	mov	r7, r1
 8006e02:	d016      	beq.n	8006e32 <__ieee754_rem_pio2+0xea>
 8006e04:	a38a      	add	r3, pc, #552	; (adr r3, 8007030 <__ieee754_rem_pio2+0x2e8>)
 8006e06:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006e0a:	f7f9 fa5f 	bl	80002cc <__adddf3>
 8006e0e:	4602      	mov	r2, r0
 8006e10:	460b      	mov	r3, r1
 8006e12:	e9c4 2300 	strd	r2, r3, [r4]
 8006e16:	4630      	mov	r0, r6
 8006e18:	4639      	mov	r1, r7
 8006e1a:	f7f9 fa55 	bl	80002c8 <__aeabi_dsub>
 8006e1e:	a384      	add	r3, pc, #528	; (adr r3, 8007030 <__ieee754_rem_pio2+0x2e8>)
 8006e20:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006e24:	f7f9 fa52 	bl	80002cc <__adddf3>
 8006e28:	f04f 35ff 	mov.w	r5, #4294967295
 8006e2c:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8006e30:	e7c6      	b.n	8006dc0 <__ieee754_rem_pio2+0x78>
 8006e32:	a381      	add	r3, pc, #516	; (adr r3, 8007038 <__ieee754_rem_pio2+0x2f0>)
 8006e34:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006e38:	f7f9 fa48 	bl	80002cc <__adddf3>
 8006e3c:	a380      	add	r3, pc, #512	; (adr r3, 8007040 <__ieee754_rem_pio2+0x2f8>)
 8006e3e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006e42:	4606      	mov	r6, r0
 8006e44:	460f      	mov	r7, r1
 8006e46:	f7f9 fa41 	bl	80002cc <__adddf3>
 8006e4a:	4602      	mov	r2, r0
 8006e4c:	460b      	mov	r3, r1
 8006e4e:	e9c4 2300 	strd	r2, r3, [r4]
 8006e52:	4630      	mov	r0, r6
 8006e54:	4639      	mov	r1, r7
 8006e56:	f7f9 fa37 	bl	80002c8 <__aeabi_dsub>
 8006e5a:	a379      	add	r3, pc, #484	; (adr r3, 8007040 <__ieee754_rem_pio2+0x2f8>)
 8006e5c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006e60:	e7e0      	b.n	8006e24 <__ieee754_rem_pio2+0xdc>
 8006e62:	4b82      	ldr	r3, [pc, #520]	; (800706c <__ieee754_rem_pio2+0x324>)
 8006e64:	4598      	cmp	r8, r3
 8006e66:	f300 80d0 	bgt.w	800700a <__ieee754_rem_pio2+0x2c2>
 8006e6a:	f000 fe23 	bl	8007ab4 <fabs>
 8006e6e:	ec57 6b10 	vmov	r6, r7, d0
 8006e72:	ee10 0a10 	vmov	r0, s0
 8006e76:	a374      	add	r3, pc, #464	; (adr r3, 8007048 <__ieee754_rem_pio2+0x300>)
 8006e78:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006e7c:	4639      	mov	r1, r7
 8006e7e:	f7f9 fbdb 	bl	8000638 <__aeabi_dmul>
 8006e82:	2200      	movs	r2, #0
 8006e84:	4b7a      	ldr	r3, [pc, #488]	; (8007070 <__ieee754_rem_pio2+0x328>)
 8006e86:	f7f9 fa21 	bl	80002cc <__adddf3>
 8006e8a:	f7f9 fe6f 	bl	8000b6c <__aeabi_d2iz>
 8006e8e:	4605      	mov	r5, r0
 8006e90:	f7f9 fb68 	bl	8000564 <__aeabi_i2d>
 8006e94:	a364      	add	r3, pc, #400	; (adr r3, 8007028 <__ieee754_rem_pio2+0x2e0>)
 8006e96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006e9a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006e9e:	f7f9 fbcb 	bl	8000638 <__aeabi_dmul>
 8006ea2:	4602      	mov	r2, r0
 8006ea4:	460b      	mov	r3, r1
 8006ea6:	4630      	mov	r0, r6
 8006ea8:	4639      	mov	r1, r7
 8006eaa:	f7f9 fa0d 	bl	80002c8 <__aeabi_dsub>
 8006eae:	a360      	add	r3, pc, #384	; (adr r3, 8007030 <__ieee754_rem_pio2+0x2e8>)
 8006eb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006eb4:	4682      	mov	sl, r0
 8006eb6:	468b      	mov	fp, r1
 8006eb8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006ebc:	f7f9 fbbc 	bl	8000638 <__aeabi_dmul>
 8006ec0:	2d1f      	cmp	r5, #31
 8006ec2:	4606      	mov	r6, r0
 8006ec4:	460f      	mov	r7, r1
 8006ec6:	dc0c      	bgt.n	8006ee2 <__ieee754_rem_pio2+0x19a>
 8006ec8:	1e6a      	subs	r2, r5, #1
 8006eca:	4b6a      	ldr	r3, [pc, #424]	; (8007074 <__ieee754_rem_pio2+0x32c>)
 8006ecc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006ed0:	4543      	cmp	r3, r8
 8006ed2:	d006      	beq.n	8006ee2 <__ieee754_rem_pio2+0x19a>
 8006ed4:	4632      	mov	r2, r6
 8006ed6:	463b      	mov	r3, r7
 8006ed8:	4650      	mov	r0, sl
 8006eda:	4659      	mov	r1, fp
 8006edc:	f7f9 f9f4 	bl	80002c8 <__aeabi_dsub>
 8006ee0:	e00e      	b.n	8006f00 <__ieee754_rem_pio2+0x1b8>
 8006ee2:	4632      	mov	r2, r6
 8006ee4:	463b      	mov	r3, r7
 8006ee6:	4650      	mov	r0, sl
 8006ee8:	4659      	mov	r1, fp
 8006eea:	f7f9 f9ed 	bl	80002c8 <__aeabi_dsub>
 8006eee:	ea4f 5328 	mov.w	r3, r8, asr #20
 8006ef2:	9305      	str	r3, [sp, #20]
 8006ef4:	9a05      	ldr	r2, [sp, #20]
 8006ef6:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8006efa:	1ad3      	subs	r3, r2, r3
 8006efc:	2b10      	cmp	r3, #16
 8006efe:	dc02      	bgt.n	8006f06 <__ieee754_rem_pio2+0x1be>
 8006f00:	e9c4 0100 	strd	r0, r1, [r4]
 8006f04:	e039      	b.n	8006f7a <__ieee754_rem_pio2+0x232>
 8006f06:	a34c      	add	r3, pc, #304	; (adr r3, 8007038 <__ieee754_rem_pio2+0x2f0>)
 8006f08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f0c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006f10:	f7f9 fb92 	bl	8000638 <__aeabi_dmul>
 8006f14:	4606      	mov	r6, r0
 8006f16:	460f      	mov	r7, r1
 8006f18:	4602      	mov	r2, r0
 8006f1a:	460b      	mov	r3, r1
 8006f1c:	4650      	mov	r0, sl
 8006f1e:	4659      	mov	r1, fp
 8006f20:	f7f9 f9d2 	bl	80002c8 <__aeabi_dsub>
 8006f24:	4602      	mov	r2, r0
 8006f26:	460b      	mov	r3, r1
 8006f28:	4680      	mov	r8, r0
 8006f2a:	4689      	mov	r9, r1
 8006f2c:	4650      	mov	r0, sl
 8006f2e:	4659      	mov	r1, fp
 8006f30:	f7f9 f9ca 	bl	80002c8 <__aeabi_dsub>
 8006f34:	4632      	mov	r2, r6
 8006f36:	463b      	mov	r3, r7
 8006f38:	f7f9 f9c6 	bl	80002c8 <__aeabi_dsub>
 8006f3c:	a340      	add	r3, pc, #256	; (adr r3, 8007040 <__ieee754_rem_pio2+0x2f8>)
 8006f3e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f42:	4606      	mov	r6, r0
 8006f44:	460f      	mov	r7, r1
 8006f46:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006f4a:	f7f9 fb75 	bl	8000638 <__aeabi_dmul>
 8006f4e:	4632      	mov	r2, r6
 8006f50:	463b      	mov	r3, r7
 8006f52:	f7f9 f9b9 	bl	80002c8 <__aeabi_dsub>
 8006f56:	4602      	mov	r2, r0
 8006f58:	460b      	mov	r3, r1
 8006f5a:	4606      	mov	r6, r0
 8006f5c:	460f      	mov	r7, r1
 8006f5e:	4640      	mov	r0, r8
 8006f60:	4649      	mov	r1, r9
 8006f62:	f7f9 f9b1 	bl	80002c8 <__aeabi_dsub>
 8006f66:	9a05      	ldr	r2, [sp, #20]
 8006f68:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8006f6c:	1ad3      	subs	r3, r2, r3
 8006f6e:	2b31      	cmp	r3, #49	; 0x31
 8006f70:	dc20      	bgt.n	8006fb4 <__ieee754_rem_pio2+0x26c>
 8006f72:	e9c4 0100 	strd	r0, r1, [r4]
 8006f76:	46c2      	mov	sl, r8
 8006f78:	46cb      	mov	fp, r9
 8006f7a:	e9d4 8900 	ldrd	r8, r9, [r4]
 8006f7e:	4650      	mov	r0, sl
 8006f80:	4642      	mov	r2, r8
 8006f82:	464b      	mov	r3, r9
 8006f84:	4659      	mov	r1, fp
 8006f86:	f7f9 f99f 	bl	80002c8 <__aeabi_dsub>
 8006f8a:	463b      	mov	r3, r7
 8006f8c:	4632      	mov	r2, r6
 8006f8e:	f7f9 f99b 	bl	80002c8 <__aeabi_dsub>
 8006f92:	9b04      	ldr	r3, [sp, #16]
 8006f94:	2b00      	cmp	r3, #0
 8006f96:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8006f9a:	f6bf af11 	bge.w	8006dc0 <__ieee754_rem_pio2+0x78>
 8006f9e:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8006fa2:	6063      	str	r3, [r4, #4]
 8006fa4:	f8c4 8000 	str.w	r8, [r4]
 8006fa8:	60a0      	str	r0, [r4, #8]
 8006faa:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8006fae:	60e3      	str	r3, [r4, #12]
 8006fb0:	426d      	negs	r5, r5
 8006fb2:	e705      	b.n	8006dc0 <__ieee754_rem_pio2+0x78>
 8006fb4:	a326      	add	r3, pc, #152	; (adr r3, 8007050 <__ieee754_rem_pio2+0x308>)
 8006fb6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006fba:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006fbe:	f7f9 fb3b 	bl	8000638 <__aeabi_dmul>
 8006fc2:	4606      	mov	r6, r0
 8006fc4:	460f      	mov	r7, r1
 8006fc6:	4602      	mov	r2, r0
 8006fc8:	460b      	mov	r3, r1
 8006fca:	4640      	mov	r0, r8
 8006fcc:	4649      	mov	r1, r9
 8006fce:	f7f9 f97b 	bl	80002c8 <__aeabi_dsub>
 8006fd2:	4602      	mov	r2, r0
 8006fd4:	460b      	mov	r3, r1
 8006fd6:	4682      	mov	sl, r0
 8006fd8:	468b      	mov	fp, r1
 8006fda:	4640      	mov	r0, r8
 8006fdc:	4649      	mov	r1, r9
 8006fde:	f7f9 f973 	bl	80002c8 <__aeabi_dsub>
 8006fe2:	4632      	mov	r2, r6
 8006fe4:	463b      	mov	r3, r7
 8006fe6:	f7f9 f96f 	bl	80002c8 <__aeabi_dsub>
 8006fea:	a31b      	add	r3, pc, #108	; (adr r3, 8007058 <__ieee754_rem_pio2+0x310>)
 8006fec:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ff0:	4606      	mov	r6, r0
 8006ff2:	460f      	mov	r7, r1
 8006ff4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006ff8:	f7f9 fb1e 	bl	8000638 <__aeabi_dmul>
 8006ffc:	4632      	mov	r2, r6
 8006ffe:	463b      	mov	r3, r7
 8007000:	f7f9 f962 	bl	80002c8 <__aeabi_dsub>
 8007004:	4606      	mov	r6, r0
 8007006:	460f      	mov	r7, r1
 8007008:	e764      	b.n	8006ed4 <__ieee754_rem_pio2+0x18c>
 800700a:	4b1b      	ldr	r3, [pc, #108]	; (8007078 <__ieee754_rem_pio2+0x330>)
 800700c:	4598      	cmp	r8, r3
 800700e:	dd35      	ble.n	800707c <__ieee754_rem_pio2+0x334>
 8007010:	ee10 2a10 	vmov	r2, s0
 8007014:	463b      	mov	r3, r7
 8007016:	4630      	mov	r0, r6
 8007018:	4639      	mov	r1, r7
 800701a:	f7f9 f955 	bl	80002c8 <__aeabi_dsub>
 800701e:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8007022:	e9c4 0100 	strd	r0, r1, [r4]
 8007026:	e6a1      	b.n	8006d6c <__ieee754_rem_pio2+0x24>
 8007028:	54400000 	.word	0x54400000
 800702c:	3ff921fb 	.word	0x3ff921fb
 8007030:	1a626331 	.word	0x1a626331
 8007034:	3dd0b461 	.word	0x3dd0b461
 8007038:	1a600000 	.word	0x1a600000
 800703c:	3dd0b461 	.word	0x3dd0b461
 8007040:	2e037073 	.word	0x2e037073
 8007044:	3ba3198a 	.word	0x3ba3198a
 8007048:	6dc9c883 	.word	0x6dc9c883
 800704c:	3fe45f30 	.word	0x3fe45f30
 8007050:	2e000000 	.word	0x2e000000
 8007054:	3ba3198a 	.word	0x3ba3198a
 8007058:	252049c1 	.word	0x252049c1
 800705c:	397b839a 	.word	0x397b839a
 8007060:	3fe921fb 	.word	0x3fe921fb
 8007064:	4002d97b 	.word	0x4002d97b
 8007068:	3ff921fb 	.word	0x3ff921fb
 800706c:	413921fb 	.word	0x413921fb
 8007070:	3fe00000 	.word	0x3fe00000
 8007074:	08008048 	.word	0x08008048
 8007078:	7fefffff 	.word	0x7fefffff
 800707c:	ea4f 5528 	mov.w	r5, r8, asr #20
 8007080:	f2a5 4516 	subw	r5, r5, #1046	; 0x416
 8007084:	eba8 5105 	sub.w	r1, r8, r5, lsl #20
 8007088:	4630      	mov	r0, r6
 800708a:	460f      	mov	r7, r1
 800708c:	f7f9 fd6e 	bl	8000b6c <__aeabi_d2iz>
 8007090:	f7f9 fa68 	bl	8000564 <__aeabi_i2d>
 8007094:	4602      	mov	r2, r0
 8007096:	460b      	mov	r3, r1
 8007098:	4630      	mov	r0, r6
 800709a:	4639      	mov	r1, r7
 800709c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80070a0:	f7f9 f912 	bl	80002c8 <__aeabi_dsub>
 80070a4:	2200      	movs	r2, #0
 80070a6:	4b1f      	ldr	r3, [pc, #124]	; (8007124 <__ieee754_rem_pio2+0x3dc>)
 80070a8:	f7f9 fac6 	bl	8000638 <__aeabi_dmul>
 80070ac:	460f      	mov	r7, r1
 80070ae:	4606      	mov	r6, r0
 80070b0:	f7f9 fd5c 	bl	8000b6c <__aeabi_d2iz>
 80070b4:	f7f9 fa56 	bl	8000564 <__aeabi_i2d>
 80070b8:	4602      	mov	r2, r0
 80070ba:	460b      	mov	r3, r1
 80070bc:	4630      	mov	r0, r6
 80070be:	4639      	mov	r1, r7
 80070c0:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80070c4:	f7f9 f900 	bl	80002c8 <__aeabi_dsub>
 80070c8:	2200      	movs	r2, #0
 80070ca:	4b16      	ldr	r3, [pc, #88]	; (8007124 <__ieee754_rem_pio2+0x3dc>)
 80070cc:	f7f9 fab4 	bl	8000638 <__aeabi_dmul>
 80070d0:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80070d4:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 80070d8:	f04f 0803 	mov.w	r8, #3
 80070dc:	2600      	movs	r6, #0
 80070de:	2700      	movs	r7, #0
 80070e0:	4632      	mov	r2, r6
 80070e2:	463b      	mov	r3, r7
 80070e4:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 80070e8:	f108 3aff 	add.w	sl, r8, #4294967295
 80070ec:	f7f9 fd0c 	bl	8000b08 <__aeabi_dcmpeq>
 80070f0:	b9b0      	cbnz	r0, 8007120 <__ieee754_rem_pio2+0x3d8>
 80070f2:	4b0d      	ldr	r3, [pc, #52]	; (8007128 <__ieee754_rem_pio2+0x3e0>)
 80070f4:	9301      	str	r3, [sp, #4]
 80070f6:	2302      	movs	r3, #2
 80070f8:	9300      	str	r3, [sp, #0]
 80070fa:	462a      	mov	r2, r5
 80070fc:	4643      	mov	r3, r8
 80070fe:	4621      	mov	r1, r4
 8007100:	a806      	add	r0, sp, #24
 8007102:	f000 f8dd 	bl	80072c0 <__kernel_rem_pio2>
 8007106:	9b04      	ldr	r3, [sp, #16]
 8007108:	2b00      	cmp	r3, #0
 800710a:	4605      	mov	r5, r0
 800710c:	f6bf ae58 	bge.w	8006dc0 <__ieee754_rem_pio2+0x78>
 8007110:	6863      	ldr	r3, [r4, #4]
 8007112:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8007116:	6063      	str	r3, [r4, #4]
 8007118:	68e3      	ldr	r3, [r4, #12]
 800711a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 800711e:	e746      	b.n	8006fae <__ieee754_rem_pio2+0x266>
 8007120:	46d0      	mov	r8, sl
 8007122:	e7dd      	b.n	80070e0 <__ieee754_rem_pio2+0x398>
 8007124:	41700000 	.word	0x41700000
 8007128:	080080c8 	.word	0x080080c8
 800712c:	00000000 	.word	0x00000000

08007130 <__kernel_cos>:
 8007130:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007134:	ec59 8b10 	vmov	r8, r9, d0
 8007138:	f029 4600 	bic.w	r6, r9, #2147483648	; 0x80000000
 800713c:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
 8007140:	ed2d 8b02 	vpush	{d8}
 8007144:	eeb0 8a41 	vmov.f32	s16, s2
 8007148:	eef0 8a61 	vmov.f32	s17, s3
 800714c:	da07      	bge.n	800715e <__kernel_cos+0x2e>
 800714e:	ee10 0a10 	vmov	r0, s0
 8007152:	4649      	mov	r1, r9
 8007154:	f7f9 fd0a 	bl	8000b6c <__aeabi_d2iz>
 8007158:	2800      	cmp	r0, #0
 800715a:	f000 8089 	beq.w	8007270 <__kernel_cos+0x140>
 800715e:	4642      	mov	r2, r8
 8007160:	464b      	mov	r3, r9
 8007162:	4640      	mov	r0, r8
 8007164:	4649      	mov	r1, r9
 8007166:	f7f9 fa67 	bl	8000638 <__aeabi_dmul>
 800716a:	2200      	movs	r2, #0
 800716c:	4b4e      	ldr	r3, [pc, #312]	; (80072a8 <__kernel_cos+0x178>)
 800716e:	4604      	mov	r4, r0
 8007170:	460d      	mov	r5, r1
 8007172:	f7f9 fa61 	bl	8000638 <__aeabi_dmul>
 8007176:	a340      	add	r3, pc, #256	; (adr r3, 8007278 <__kernel_cos+0x148>)
 8007178:	e9d3 2300 	ldrd	r2, r3, [r3]
 800717c:	4682      	mov	sl, r0
 800717e:	468b      	mov	fp, r1
 8007180:	4620      	mov	r0, r4
 8007182:	4629      	mov	r1, r5
 8007184:	f7f9 fa58 	bl	8000638 <__aeabi_dmul>
 8007188:	a33d      	add	r3, pc, #244	; (adr r3, 8007280 <__kernel_cos+0x150>)
 800718a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800718e:	f7f9 f89d 	bl	80002cc <__adddf3>
 8007192:	4622      	mov	r2, r4
 8007194:	462b      	mov	r3, r5
 8007196:	f7f9 fa4f 	bl	8000638 <__aeabi_dmul>
 800719a:	a33b      	add	r3, pc, #236	; (adr r3, 8007288 <__kernel_cos+0x158>)
 800719c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071a0:	f7f9 f892 	bl	80002c8 <__aeabi_dsub>
 80071a4:	4622      	mov	r2, r4
 80071a6:	462b      	mov	r3, r5
 80071a8:	f7f9 fa46 	bl	8000638 <__aeabi_dmul>
 80071ac:	a338      	add	r3, pc, #224	; (adr r3, 8007290 <__kernel_cos+0x160>)
 80071ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071b2:	f7f9 f88b 	bl	80002cc <__adddf3>
 80071b6:	4622      	mov	r2, r4
 80071b8:	462b      	mov	r3, r5
 80071ba:	f7f9 fa3d 	bl	8000638 <__aeabi_dmul>
 80071be:	a336      	add	r3, pc, #216	; (adr r3, 8007298 <__kernel_cos+0x168>)
 80071c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071c4:	f7f9 f880 	bl	80002c8 <__aeabi_dsub>
 80071c8:	4622      	mov	r2, r4
 80071ca:	462b      	mov	r3, r5
 80071cc:	f7f9 fa34 	bl	8000638 <__aeabi_dmul>
 80071d0:	a333      	add	r3, pc, #204	; (adr r3, 80072a0 <__kernel_cos+0x170>)
 80071d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071d6:	f7f9 f879 	bl	80002cc <__adddf3>
 80071da:	4622      	mov	r2, r4
 80071dc:	462b      	mov	r3, r5
 80071de:	f7f9 fa2b 	bl	8000638 <__aeabi_dmul>
 80071e2:	4622      	mov	r2, r4
 80071e4:	462b      	mov	r3, r5
 80071e6:	f7f9 fa27 	bl	8000638 <__aeabi_dmul>
 80071ea:	ec53 2b18 	vmov	r2, r3, d8
 80071ee:	4604      	mov	r4, r0
 80071f0:	460d      	mov	r5, r1
 80071f2:	4640      	mov	r0, r8
 80071f4:	4649      	mov	r1, r9
 80071f6:	f7f9 fa1f 	bl	8000638 <__aeabi_dmul>
 80071fa:	460b      	mov	r3, r1
 80071fc:	4602      	mov	r2, r0
 80071fe:	4629      	mov	r1, r5
 8007200:	4620      	mov	r0, r4
 8007202:	f7f9 f861 	bl	80002c8 <__aeabi_dsub>
 8007206:	4b29      	ldr	r3, [pc, #164]	; (80072ac <__kernel_cos+0x17c>)
 8007208:	429e      	cmp	r6, r3
 800720a:	4680      	mov	r8, r0
 800720c:	4689      	mov	r9, r1
 800720e:	dc11      	bgt.n	8007234 <__kernel_cos+0x104>
 8007210:	4602      	mov	r2, r0
 8007212:	460b      	mov	r3, r1
 8007214:	4650      	mov	r0, sl
 8007216:	4659      	mov	r1, fp
 8007218:	f7f9 f856 	bl	80002c8 <__aeabi_dsub>
 800721c:	460b      	mov	r3, r1
 800721e:	4924      	ldr	r1, [pc, #144]	; (80072b0 <__kernel_cos+0x180>)
 8007220:	4602      	mov	r2, r0
 8007222:	2000      	movs	r0, #0
 8007224:	f7f9 f850 	bl	80002c8 <__aeabi_dsub>
 8007228:	ecbd 8b02 	vpop	{d8}
 800722c:	ec41 0b10 	vmov	d0, r0, r1
 8007230:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007234:	4b1f      	ldr	r3, [pc, #124]	; (80072b4 <__kernel_cos+0x184>)
 8007236:	491e      	ldr	r1, [pc, #120]	; (80072b0 <__kernel_cos+0x180>)
 8007238:	429e      	cmp	r6, r3
 800723a:	bfcc      	ite	gt
 800723c:	4d1e      	ldrgt	r5, [pc, #120]	; (80072b8 <__kernel_cos+0x188>)
 800723e:	f5a6 1500 	suble.w	r5, r6, #2097152	; 0x200000
 8007242:	2400      	movs	r4, #0
 8007244:	4622      	mov	r2, r4
 8007246:	462b      	mov	r3, r5
 8007248:	2000      	movs	r0, #0
 800724a:	f7f9 f83d 	bl	80002c8 <__aeabi_dsub>
 800724e:	4622      	mov	r2, r4
 8007250:	4606      	mov	r6, r0
 8007252:	460f      	mov	r7, r1
 8007254:	462b      	mov	r3, r5
 8007256:	4650      	mov	r0, sl
 8007258:	4659      	mov	r1, fp
 800725a:	f7f9 f835 	bl	80002c8 <__aeabi_dsub>
 800725e:	4642      	mov	r2, r8
 8007260:	464b      	mov	r3, r9
 8007262:	f7f9 f831 	bl	80002c8 <__aeabi_dsub>
 8007266:	4602      	mov	r2, r0
 8007268:	460b      	mov	r3, r1
 800726a:	4630      	mov	r0, r6
 800726c:	4639      	mov	r1, r7
 800726e:	e7d9      	b.n	8007224 <__kernel_cos+0xf4>
 8007270:	2000      	movs	r0, #0
 8007272:	490f      	ldr	r1, [pc, #60]	; (80072b0 <__kernel_cos+0x180>)
 8007274:	e7d8      	b.n	8007228 <__kernel_cos+0xf8>
 8007276:	bf00      	nop
 8007278:	be8838d4 	.word	0xbe8838d4
 800727c:	bda8fae9 	.word	0xbda8fae9
 8007280:	bdb4b1c4 	.word	0xbdb4b1c4
 8007284:	3e21ee9e 	.word	0x3e21ee9e
 8007288:	809c52ad 	.word	0x809c52ad
 800728c:	3e927e4f 	.word	0x3e927e4f
 8007290:	19cb1590 	.word	0x19cb1590
 8007294:	3efa01a0 	.word	0x3efa01a0
 8007298:	16c15177 	.word	0x16c15177
 800729c:	3f56c16c 	.word	0x3f56c16c
 80072a0:	5555554c 	.word	0x5555554c
 80072a4:	3fa55555 	.word	0x3fa55555
 80072a8:	3fe00000 	.word	0x3fe00000
 80072ac:	3fd33332 	.word	0x3fd33332
 80072b0:	3ff00000 	.word	0x3ff00000
 80072b4:	3fe90000 	.word	0x3fe90000
 80072b8:	3fd20000 	.word	0x3fd20000
 80072bc:	00000000 	.word	0x00000000

080072c0 <__kernel_rem_pio2>:
 80072c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80072c4:	ed2d 8b02 	vpush	{d8}
 80072c8:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 80072cc:	1ed4      	subs	r4, r2, #3
 80072ce:	9308      	str	r3, [sp, #32]
 80072d0:	9101      	str	r1, [sp, #4]
 80072d2:	4bc5      	ldr	r3, [pc, #788]	; (80075e8 <__kernel_rem_pio2+0x328>)
 80072d4:	99a6      	ldr	r1, [sp, #664]	; 0x298
 80072d6:	9009      	str	r0, [sp, #36]	; 0x24
 80072d8:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80072dc:	9304      	str	r3, [sp, #16]
 80072de:	9b08      	ldr	r3, [sp, #32]
 80072e0:	3b01      	subs	r3, #1
 80072e2:	9307      	str	r3, [sp, #28]
 80072e4:	2318      	movs	r3, #24
 80072e6:	fb94 f4f3 	sdiv	r4, r4, r3
 80072ea:	f06f 0317 	mvn.w	r3, #23
 80072ee:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 80072f2:	fb04 3303 	mla	r3, r4, r3, r3
 80072f6:	eb03 0a02 	add.w	sl, r3, r2
 80072fa:	9b04      	ldr	r3, [sp, #16]
 80072fc:	9a07      	ldr	r2, [sp, #28]
 80072fe:	ed9f 8bb6 	vldr	d8, [pc, #728]	; 80075d8 <__kernel_rem_pio2+0x318>
 8007302:	eb03 0802 	add.w	r8, r3, r2
 8007306:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8007308:	1aa7      	subs	r7, r4, r2
 800730a:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 800730e:	ae22      	add	r6, sp, #136	; 0x88
 8007310:	2500      	movs	r5, #0
 8007312:	4545      	cmp	r5, r8
 8007314:	dd13      	ble.n	800733e <__kernel_rem_pio2+0x7e>
 8007316:	ed9f 8bb0 	vldr	d8, [pc, #704]	; 80075d8 <__kernel_rem_pio2+0x318>
 800731a:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 800731e:	2600      	movs	r6, #0
 8007320:	9b04      	ldr	r3, [sp, #16]
 8007322:	429e      	cmp	r6, r3
 8007324:	dc32      	bgt.n	800738c <__kernel_rem_pio2+0xcc>
 8007326:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007328:	9302      	str	r3, [sp, #8]
 800732a:	9b08      	ldr	r3, [sp, #32]
 800732c:	199d      	adds	r5, r3, r6
 800732e:	ab22      	add	r3, sp, #136	; 0x88
 8007330:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8007334:	9306      	str	r3, [sp, #24]
 8007336:	ec59 8b18 	vmov	r8, r9, d8
 800733a:	2700      	movs	r7, #0
 800733c:	e01f      	b.n	800737e <__kernel_rem_pio2+0xbe>
 800733e:	42ef      	cmn	r7, r5
 8007340:	d407      	bmi.n	8007352 <__kernel_rem_pio2+0x92>
 8007342:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8007346:	f7f9 f90d 	bl	8000564 <__aeabi_i2d>
 800734a:	e8e6 0102 	strd	r0, r1, [r6], #8
 800734e:	3501      	adds	r5, #1
 8007350:	e7df      	b.n	8007312 <__kernel_rem_pio2+0x52>
 8007352:	ec51 0b18 	vmov	r0, r1, d8
 8007356:	e7f8      	b.n	800734a <__kernel_rem_pio2+0x8a>
 8007358:	9906      	ldr	r1, [sp, #24]
 800735a:	9d02      	ldr	r5, [sp, #8]
 800735c:	e971 2302 	ldrd	r2, r3, [r1, #-8]!
 8007360:	9106      	str	r1, [sp, #24]
 8007362:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 8007366:	9502      	str	r5, [sp, #8]
 8007368:	f7f9 f966 	bl	8000638 <__aeabi_dmul>
 800736c:	4602      	mov	r2, r0
 800736e:	460b      	mov	r3, r1
 8007370:	4640      	mov	r0, r8
 8007372:	4649      	mov	r1, r9
 8007374:	f7f8 ffaa 	bl	80002cc <__adddf3>
 8007378:	3701      	adds	r7, #1
 800737a:	4680      	mov	r8, r0
 800737c:	4689      	mov	r9, r1
 800737e:	9b07      	ldr	r3, [sp, #28]
 8007380:	429f      	cmp	r7, r3
 8007382:	dde9      	ble.n	8007358 <__kernel_rem_pio2+0x98>
 8007384:	e8eb 8902 	strd	r8, r9, [fp], #8
 8007388:	3601      	adds	r6, #1
 800738a:	e7c9      	b.n	8007320 <__kernel_rem_pio2+0x60>
 800738c:	9b04      	ldr	r3, [sp, #16]
 800738e:	aa0e      	add	r2, sp, #56	; 0x38
 8007390:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8007394:	930c      	str	r3, [sp, #48]	; 0x30
 8007396:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8007398:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 800739c:	9c04      	ldr	r4, [sp, #16]
 800739e:	930b      	str	r3, [sp, #44]	; 0x2c
 80073a0:	ab9a      	add	r3, sp, #616	; 0x268
 80073a2:	f104 5b00 	add.w	fp, r4, #536870912	; 0x20000000
 80073a6:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80073aa:	f10b 3bff 	add.w	fp, fp, #4294967295
 80073ae:	e953 8928 	ldrd	r8, r9, [r3, #-160]	; 0xa0
 80073b2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80073b6:	ab9a      	add	r3, sp, #616	; 0x268
 80073b8:	445b      	add	r3, fp
 80073ba:	f1a3 0698 	sub.w	r6, r3, #152	; 0x98
 80073be:	2500      	movs	r5, #0
 80073c0:	1b63      	subs	r3, r4, r5
 80073c2:	2b00      	cmp	r3, #0
 80073c4:	dc78      	bgt.n	80074b8 <__kernel_rem_pio2+0x1f8>
 80073c6:	4650      	mov	r0, sl
 80073c8:	ec49 8b10 	vmov	d0, r8, r9
 80073cc:	f000 fc00 	bl	8007bd0 <scalbn>
 80073d0:	ec57 6b10 	vmov	r6, r7, d0
 80073d4:	2200      	movs	r2, #0
 80073d6:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 80073da:	ee10 0a10 	vmov	r0, s0
 80073de:	4639      	mov	r1, r7
 80073e0:	f7f9 f92a 	bl	8000638 <__aeabi_dmul>
 80073e4:	ec41 0b10 	vmov	d0, r0, r1
 80073e8:	f000 fb6e 	bl	8007ac8 <floor>
 80073ec:	2200      	movs	r2, #0
 80073ee:	ec51 0b10 	vmov	r0, r1, d0
 80073f2:	4b7e      	ldr	r3, [pc, #504]	; (80075ec <__kernel_rem_pio2+0x32c>)
 80073f4:	f7f9 f920 	bl	8000638 <__aeabi_dmul>
 80073f8:	4602      	mov	r2, r0
 80073fa:	460b      	mov	r3, r1
 80073fc:	4630      	mov	r0, r6
 80073fe:	4639      	mov	r1, r7
 8007400:	f7f8 ff62 	bl	80002c8 <__aeabi_dsub>
 8007404:	460f      	mov	r7, r1
 8007406:	4606      	mov	r6, r0
 8007408:	f7f9 fbb0 	bl	8000b6c <__aeabi_d2iz>
 800740c:	9006      	str	r0, [sp, #24]
 800740e:	f7f9 f8a9 	bl	8000564 <__aeabi_i2d>
 8007412:	4602      	mov	r2, r0
 8007414:	460b      	mov	r3, r1
 8007416:	4630      	mov	r0, r6
 8007418:	4639      	mov	r1, r7
 800741a:	f7f8 ff55 	bl	80002c8 <__aeabi_dsub>
 800741e:	f1ba 0f00 	cmp.w	sl, #0
 8007422:	4606      	mov	r6, r0
 8007424:	460f      	mov	r7, r1
 8007426:	dd6c      	ble.n	8007502 <__kernel_rem_pio2+0x242>
 8007428:	1e62      	subs	r2, r4, #1
 800742a:	ab0e      	add	r3, sp, #56	; 0x38
 800742c:	f1ca 0118 	rsb	r1, sl, #24
 8007430:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8007434:	9d06      	ldr	r5, [sp, #24]
 8007436:	fa40 f301 	asr.w	r3, r0, r1
 800743a:	441d      	add	r5, r3
 800743c:	408b      	lsls	r3, r1
 800743e:	1ac0      	subs	r0, r0, r3
 8007440:	ab0e      	add	r3, sp, #56	; 0x38
 8007442:	9506      	str	r5, [sp, #24]
 8007444:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8007448:	f1ca 0317 	rsb	r3, sl, #23
 800744c:	fa40 f303 	asr.w	r3, r0, r3
 8007450:	9302      	str	r3, [sp, #8]
 8007452:	9b02      	ldr	r3, [sp, #8]
 8007454:	2b00      	cmp	r3, #0
 8007456:	dd62      	ble.n	800751e <__kernel_rem_pio2+0x25e>
 8007458:	9b06      	ldr	r3, [sp, #24]
 800745a:	2200      	movs	r2, #0
 800745c:	3301      	adds	r3, #1
 800745e:	9306      	str	r3, [sp, #24]
 8007460:	4615      	mov	r5, r2
 8007462:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8007466:	4294      	cmp	r4, r2
 8007468:	f300 8095 	bgt.w	8007596 <__kernel_rem_pio2+0x2d6>
 800746c:	f1ba 0f00 	cmp.w	sl, #0
 8007470:	dd07      	ble.n	8007482 <__kernel_rem_pio2+0x1c2>
 8007472:	f1ba 0f01 	cmp.w	sl, #1
 8007476:	f000 80a2 	beq.w	80075be <__kernel_rem_pio2+0x2fe>
 800747a:	f1ba 0f02 	cmp.w	sl, #2
 800747e:	f000 80c1 	beq.w	8007604 <__kernel_rem_pio2+0x344>
 8007482:	9b02      	ldr	r3, [sp, #8]
 8007484:	2b02      	cmp	r3, #2
 8007486:	d14a      	bne.n	800751e <__kernel_rem_pio2+0x25e>
 8007488:	4632      	mov	r2, r6
 800748a:	463b      	mov	r3, r7
 800748c:	2000      	movs	r0, #0
 800748e:	4958      	ldr	r1, [pc, #352]	; (80075f0 <__kernel_rem_pio2+0x330>)
 8007490:	f7f8 ff1a 	bl	80002c8 <__aeabi_dsub>
 8007494:	4606      	mov	r6, r0
 8007496:	460f      	mov	r7, r1
 8007498:	2d00      	cmp	r5, #0
 800749a:	d040      	beq.n	800751e <__kernel_rem_pio2+0x25e>
 800749c:	4650      	mov	r0, sl
 800749e:	ed9f 0b50 	vldr	d0, [pc, #320]	; 80075e0 <__kernel_rem_pio2+0x320>
 80074a2:	f000 fb95 	bl	8007bd0 <scalbn>
 80074a6:	4630      	mov	r0, r6
 80074a8:	4639      	mov	r1, r7
 80074aa:	ec53 2b10 	vmov	r2, r3, d0
 80074ae:	f7f8 ff0b 	bl	80002c8 <__aeabi_dsub>
 80074b2:	4606      	mov	r6, r0
 80074b4:	460f      	mov	r7, r1
 80074b6:	e032      	b.n	800751e <__kernel_rem_pio2+0x25e>
 80074b8:	2200      	movs	r2, #0
 80074ba:	4b4e      	ldr	r3, [pc, #312]	; (80075f4 <__kernel_rem_pio2+0x334>)
 80074bc:	4640      	mov	r0, r8
 80074be:	4649      	mov	r1, r9
 80074c0:	f7f9 f8ba 	bl	8000638 <__aeabi_dmul>
 80074c4:	f7f9 fb52 	bl	8000b6c <__aeabi_d2iz>
 80074c8:	f7f9 f84c 	bl	8000564 <__aeabi_i2d>
 80074cc:	2200      	movs	r2, #0
 80074ce:	4b4a      	ldr	r3, [pc, #296]	; (80075f8 <__kernel_rem_pio2+0x338>)
 80074d0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80074d4:	f7f9 f8b0 	bl	8000638 <__aeabi_dmul>
 80074d8:	4602      	mov	r2, r0
 80074da:	460b      	mov	r3, r1
 80074dc:	4640      	mov	r0, r8
 80074de:	4649      	mov	r1, r9
 80074e0:	f7f8 fef2 	bl	80002c8 <__aeabi_dsub>
 80074e4:	f7f9 fb42 	bl	8000b6c <__aeabi_d2iz>
 80074e8:	ab0e      	add	r3, sp, #56	; 0x38
 80074ea:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 80074ee:	e976 2302 	ldrd	r2, r3, [r6, #-8]!
 80074f2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80074f6:	f7f8 fee9 	bl	80002cc <__adddf3>
 80074fa:	3501      	adds	r5, #1
 80074fc:	4680      	mov	r8, r0
 80074fe:	4689      	mov	r9, r1
 8007500:	e75e      	b.n	80073c0 <__kernel_rem_pio2+0x100>
 8007502:	d105      	bne.n	8007510 <__kernel_rem_pio2+0x250>
 8007504:	1e63      	subs	r3, r4, #1
 8007506:	aa0e      	add	r2, sp, #56	; 0x38
 8007508:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800750c:	15c3      	asrs	r3, r0, #23
 800750e:	e79f      	b.n	8007450 <__kernel_rem_pio2+0x190>
 8007510:	2200      	movs	r2, #0
 8007512:	4b3a      	ldr	r3, [pc, #232]	; (80075fc <__kernel_rem_pio2+0x33c>)
 8007514:	f7f9 fb16 	bl	8000b44 <__aeabi_dcmpge>
 8007518:	2800      	cmp	r0, #0
 800751a:	d139      	bne.n	8007590 <__kernel_rem_pio2+0x2d0>
 800751c:	9002      	str	r0, [sp, #8]
 800751e:	2200      	movs	r2, #0
 8007520:	2300      	movs	r3, #0
 8007522:	4630      	mov	r0, r6
 8007524:	4639      	mov	r1, r7
 8007526:	f7f9 faef 	bl	8000b08 <__aeabi_dcmpeq>
 800752a:	2800      	cmp	r0, #0
 800752c:	f000 80c7 	beq.w	80076be <__kernel_rem_pio2+0x3fe>
 8007530:	1e65      	subs	r5, r4, #1
 8007532:	462b      	mov	r3, r5
 8007534:	2200      	movs	r2, #0
 8007536:	9904      	ldr	r1, [sp, #16]
 8007538:	428b      	cmp	r3, r1
 800753a:	da6a      	bge.n	8007612 <__kernel_rem_pio2+0x352>
 800753c:	2a00      	cmp	r2, #0
 800753e:	f000 8088 	beq.w	8007652 <__kernel_rem_pio2+0x392>
 8007542:	ab0e      	add	r3, sp, #56	; 0x38
 8007544:	f1aa 0a18 	sub.w	sl, sl, #24
 8007548:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800754c:	2b00      	cmp	r3, #0
 800754e:	f000 80b4 	beq.w	80076ba <__kernel_rem_pio2+0x3fa>
 8007552:	4650      	mov	r0, sl
 8007554:	ed9f 0b22 	vldr	d0, [pc, #136]	; 80075e0 <__kernel_rem_pio2+0x320>
 8007558:	f000 fb3a 	bl	8007bd0 <scalbn>
 800755c:	00ec      	lsls	r4, r5, #3
 800755e:	ab72      	add	r3, sp, #456	; 0x1c8
 8007560:	191e      	adds	r6, r3, r4
 8007562:	ec59 8b10 	vmov	r8, r9, d0
 8007566:	f106 0a08 	add.w	sl, r6, #8
 800756a:	462f      	mov	r7, r5
 800756c:	2f00      	cmp	r7, #0
 800756e:	f280 80df 	bge.w	8007730 <__kernel_rem_pio2+0x470>
 8007572:	ed9f 8b19 	vldr	d8, [pc, #100]	; 80075d8 <__kernel_rem_pio2+0x318>
 8007576:	f04f 0a00 	mov.w	sl, #0
 800757a:	eba5 030a 	sub.w	r3, r5, sl
 800757e:	2b00      	cmp	r3, #0
 8007580:	f2c0 810a 	blt.w	8007798 <__kernel_rem_pio2+0x4d8>
 8007584:	f8df b078 	ldr.w	fp, [pc, #120]	; 8007600 <__kernel_rem_pio2+0x340>
 8007588:	ec59 8b18 	vmov	r8, r9, d8
 800758c:	2700      	movs	r7, #0
 800758e:	e0f5      	b.n	800777c <__kernel_rem_pio2+0x4bc>
 8007590:	2302      	movs	r3, #2
 8007592:	9302      	str	r3, [sp, #8]
 8007594:	e760      	b.n	8007458 <__kernel_rem_pio2+0x198>
 8007596:	ab0e      	add	r3, sp, #56	; 0x38
 8007598:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800759c:	b94d      	cbnz	r5, 80075b2 <__kernel_rem_pio2+0x2f2>
 800759e:	b12b      	cbz	r3, 80075ac <__kernel_rem_pio2+0x2ec>
 80075a0:	a80e      	add	r0, sp, #56	; 0x38
 80075a2:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 80075a6:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 80075aa:	2301      	movs	r3, #1
 80075ac:	3201      	adds	r2, #1
 80075ae:	461d      	mov	r5, r3
 80075b0:	e759      	b.n	8007466 <__kernel_rem_pio2+0x1a6>
 80075b2:	a80e      	add	r0, sp, #56	; 0x38
 80075b4:	1acb      	subs	r3, r1, r3
 80075b6:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 80075ba:	462b      	mov	r3, r5
 80075bc:	e7f6      	b.n	80075ac <__kernel_rem_pio2+0x2ec>
 80075be:	1e62      	subs	r2, r4, #1
 80075c0:	ab0e      	add	r3, sp, #56	; 0x38
 80075c2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80075c6:	f3c3 0316 	ubfx	r3, r3, #0, #23
 80075ca:	a90e      	add	r1, sp, #56	; 0x38
 80075cc:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 80075d0:	e757      	b.n	8007482 <__kernel_rem_pio2+0x1c2>
 80075d2:	bf00      	nop
 80075d4:	f3af 8000 	nop.w
	...
 80075e4:	3ff00000 	.word	0x3ff00000
 80075e8:	08008210 	.word	0x08008210
 80075ec:	40200000 	.word	0x40200000
 80075f0:	3ff00000 	.word	0x3ff00000
 80075f4:	3e700000 	.word	0x3e700000
 80075f8:	41700000 	.word	0x41700000
 80075fc:	3fe00000 	.word	0x3fe00000
 8007600:	080081d0 	.word	0x080081d0
 8007604:	1e62      	subs	r2, r4, #1
 8007606:	ab0e      	add	r3, sp, #56	; 0x38
 8007608:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800760c:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8007610:	e7db      	b.n	80075ca <__kernel_rem_pio2+0x30a>
 8007612:	a90e      	add	r1, sp, #56	; 0x38
 8007614:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8007618:	3b01      	subs	r3, #1
 800761a:	430a      	orrs	r2, r1
 800761c:	e78b      	b.n	8007536 <__kernel_rem_pio2+0x276>
 800761e:	3301      	adds	r3, #1
 8007620:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8007624:	2900      	cmp	r1, #0
 8007626:	d0fa      	beq.n	800761e <__kernel_rem_pio2+0x35e>
 8007628:	9a08      	ldr	r2, [sp, #32]
 800762a:	4422      	add	r2, r4
 800762c:	00d2      	lsls	r2, r2, #3
 800762e:	a922      	add	r1, sp, #136	; 0x88
 8007630:	18e3      	adds	r3, r4, r3
 8007632:	9206      	str	r2, [sp, #24]
 8007634:	440a      	add	r2, r1
 8007636:	9302      	str	r3, [sp, #8]
 8007638:	f10b 0108 	add.w	r1, fp, #8
 800763c:	f102 0308 	add.w	r3, r2, #8
 8007640:	1c66      	adds	r6, r4, #1
 8007642:	910a      	str	r1, [sp, #40]	; 0x28
 8007644:	2500      	movs	r5, #0
 8007646:	930d      	str	r3, [sp, #52]	; 0x34
 8007648:	9b02      	ldr	r3, [sp, #8]
 800764a:	42b3      	cmp	r3, r6
 800764c:	da04      	bge.n	8007658 <__kernel_rem_pio2+0x398>
 800764e:	461c      	mov	r4, r3
 8007650:	e6a6      	b.n	80073a0 <__kernel_rem_pio2+0xe0>
 8007652:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007654:	2301      	movs	r3, #1
 8007656:	e7e3      	b.n	8007620 <__kernel_rem_pio2+0x360>
 8007658:	9b06      	ldr	r3, [sp, #24]
 800765a:	18ef      	adds	r7, r5, r3
 800765c:	ab22      	add	r3, sp, #136	; 0x88
 800765e:	441f      	add	r7, r3
 8007660:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007662:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8007666:	f7f8 ff7d 	bl	8000564 <__aeabi_i2d>
 800766a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800766c:	461c      	mov	r4, r3
 800766e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007670:	e9c7 0100 	strd	r0, r1, [r7]
 8007674:	eb03 0b05 	add.w	fp, r3, r5
 8007678:	2700      	movs	r7, #0
 800767a:	f04f 0800 	mov.w	r8, #0
 800767e:	f04f 0900 	mov.w	r9, #0
 8007682:	9b07      	ldr	r3, [sp, #28]
 8007684:	429f      	cmp	r7, r3
 8007686:	dd08      	ble.n	800769a <__kernel_rem_pio2+0x3da>
 8007688:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800768a:	aa72      	add	r2, sp, #456	; 0x1c8
 800768c:	18eb      	adds	r3, r5, r3
 800768e:	4413      	add	r3, r2
 8007690:	e9c3 8902 	strd	r8, r9, [r3, #8]
 8007694:	3601      	adds	r6, #1
 8007696:	3508      	adds	r5, #8
 8007698:	e7d6      	b.n	8007648 <__kernel_rem_pio2+0x388>
 800769a:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 800769e:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 80076a2:	f7f8 ffc9 	bl	8000638 <__aeabi_dmul>
 80076a6:	4602      	mov	r2, r0
 80076a8:	460b      	mov	r3, r1
 80076aa:	4640      	mov	r0, r8
 80076ac:	4649      	mov	r1, r9
 80076ae:	f7f8 fe0d 	bl	80002cc <__adddf3>
 80076b2:	3701      	adds	r7, #1
 80076b4:	4680      	mov	r8, r0
 80076b6:	4689      	mov	r9, r1
 80076b8:	e7e3      	b.n	8007682 <__kernel_rem_pio2+0x3c2>
 80076ba:	3d01      	subs	r5, #1
 80076bc:	e741      	b.n	8007542 <__kernel_rem_pio2+0x282>
 80076be:	f1ca 0000 	rsb	r0, sl, #0
 80076c2:	ec47 6b10 	vmov	d0, r6, r7
 80076c6:	f000 fa83 	bl	8007bd0 <scalbn>
 80076ca:	ec57 6b10 	vmov	r6, r7, d0
 80076ce:	2200      	movs	r2, #0
 80076d0:	4b99      	ldr	r3, [pc, #612]	; (8007938 <__kernel_rem_pio2+0x678>)
 80076d2:	ee10 0a10 	vmov	r0, s0
 80076d6:	4639      	mov	r1, r7
 80076d8:	f7f9 fa34 	bl	8000b44 <__aeabi_dcmpge>
 80076dc:	b1f8      	cbz	r0, 800771e <__kernel_rem_pio2+0x45e>
 80076de:	2200      	movs	r2, #0
 80076e0:	4b96      	ldr	r3, [pc, #600]	; (800793c <__kernel_rem_pio2+0x67c>)
 80076e2:	4630      	mov	r0, r6
 80076e4:	4639      	mov	r1, r7
 80076e6:	f7f8 ffa7 	bl	8000638 <__aeabi_dmul>
 80076ea:	f7f9 fa3f 	bl	8000b6c <__aeabi_d2iz>
 80076ee:	4680      	mov	r8, r0
 80076f0:	f7f8 ff38 	bl	8000564 <__aeabi_i2d>
 80076f4:	2200      	movs	r2, #0
 80076f6:	4b90      	ldr	r3, [pc, #576]	; (8007938 <__kernel_rem_pio2+0x678>)
 80076f8:	f7f8 ff9e 	bl	8000638 <__aeabi_dmul>
 80076fc:	460b      	mov	r3, r1
 80076fe:	4602      	mov	r2, r0
 8007700:	4639      	mov	r1, r7
 8007702:	4630      	mov	r0, r6
 8007704:	f7f8 fde0 	bl	80002c8 <__aeabi_dsub>
 8007708:	f7f9 fa30 	bl	8000b6c <__aeabi_d2iz>
 800770c:	1c65      	adds	r5, r4, #1
 800770e:	ab0e      	add	r3, sp, #56	; 0x38
 8007710:	f10a 0a18 	add.w	sl, sl, #24
 8007714:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8007718:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 800771c:	e719      	b.n	8007552 <__kernel_rem_pio2+0x292>
 800771e:	4630      	mov	r0, r6
 8007720:	4639      	mov	r1, r7
 8007722:	f7f9 fa23 	bl	8000b6c <__aeabi_d2iz>
 8007726:	ab0e      	add	r3, sp, #56	; 0x38
 8007728:	4625      	mov	r5, r4
 800772a:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800772e:	e710      	b.n	8007552 <__kernel_rem_pio2+0x292>
 8007730:	ab0e      	add	r3, sp, #56	; 0x38
 8007732:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8007736:	f7f8 ff15 	bl	8000564 <__aeabi_i2d>
 800773a:	4642      	mov	r2, r8
 800773c:	464b      	mov	r3, r9
 800773e:	f7f8 ff7b 	bl	8000638 <__aeabi_dmul>
 8007742:	2200      	movs	r2, #0
 8007744:	e96a 0102 	strd	r0, r1, [sl, #-8]!
 8007748:	4b7c      	ldr	r3, [pc, #496]	; (800793c <__kernel_rem_pio2+0x67c>)
 800774a:	4640      	mov	r0, r8
 800774c:	4649      	mov	r1, r9
 800774e:	f7f8 ff73 	bl	8000638 <__aeabi_dmul>
 8007752:	3f01      	subs	r7, #1
 8007754:	4680      	mov	r8, r0
 8007756:	4689      	mov	r9, r1
 8007758:	e708      	b.n	800756c <__kernel_rem_pio2+0x2ac>
 800775a:	eb06 03c7 	add.w	r3, r6, r7, lsl #3
 800775e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007762:	e8fb 0102 	ldrd	r0, r1, [fp], #8
 8007766:	f7f8 ff67 	bl	8000638 <__aeabi_dmul>
 800776a:	4602      	mov	r2, r0
 800776c:	460b      	mov	r3, r1
 800776e:	4640      	mov	r0, r8
 8007770:	4649      	mov	r1, r9
 8007772:	f7f8 fdab 	bl	80002cc <__adddf3>
 8007776:	3701      	adds	r7, #1
 8007778:	4680      	mov	r8, r0
 800777a:	4689      	mov	r9, r1
 800777c:	9b04      	ldr	r3, [sp, #16]
 800777e:	429f      	cmp	r7, r3
 8007780:	dc01      	bgt.n	8007786 <__kernel_rem_pio2+0x4c6>
 8007782:	45ba      	cmp	sl, r7
 8007784:	dae9      	bge.n	800775a <__kernel_rem_pio2+0x49a>
 8007786:	ab4a      	add	r3, sp, #296	; 0x128
 8007788:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800778c:	e9c3 8900 	strd	r8, r9, [r3]
 8007790:	f10a 0a01 	add.w	sl, sl, #1
 8007794:	3e08      	subs	r6, #8
 8007796:	e6f0      	b.n	800757a <__kernel_rem_pio2+0x2ba>
 8007798:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800779a:	2b03      	cmp	r3, #3
 800779c:	d85b      	bhi.n	8007856 <__kernel_rem_pio2+0x596>
 800779e:	e8df f003 	tbb	[pc, r3]
 80077a2:	264a      	.short	0x264a
 80077a4:	0226      	.short	0x0226
 80077a6:	ab9a      	add	r3, sp, #616	; 0x268
 80077a8:	441c      	add	r4, r3
 80077aa:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 80077ae:	46a2      	mov	sl, r4
 80077b0:	46ab      	mov	fp, r5
 80077b2:	f1bb 0f00 	cmp.w	fp, #0
 80077b6:	dc6c      	bgt.n	8007892 <__kernel_rem_pio2+0x5d2>
 80077b8:	46a2      	mov	sl, r4
 80077ba:	46ab      	mov	fp, r5
 80077bc:	f1bb 0f01 	cmp.w	fp, #1
 80077c0:	f300 8086 	bgt.w	80078d0 <__kernel_rem_pio2+0x610>
 80077c4:	2000      	movs	r0, #0
 80077c6:	2100      	movs	r1, #0
 80077c8:	2d01      	cmp	r5, #1
 80077ca:	f300 80a0 	bgt.w	800790e <__kernel_rem_pio2+0x64e>
 80077ce:	9b02      	ldr	r3, [sp, #8]
 80077d0:	e9dd 784a 	ldrd	r7, r8, [sp, #296]	; 0x128
 80077d4:	e9dd 564c 	ldrd	r5, r6, [sp, #304]	; 0x130
 80077d8:	2b00      	cmp	r3, #0
 80077da:	f040 809e 	bne.w	800791a <__kernel_rem_pio2+0x65a>
 80077de:	9b01      	ldr	r3, [sp, #4]
 80077e0:	e9c3 7800 	strd	r7, r8, [r3]
 80077e4:	e9c3 5602 	strd	r5, r6, [r3, #8]
 80077e8:	e9c3 0104 	strd	r0, r1, [r3, #16]
 80077ec:	e033      	b.n	8007856 <__kernel_rem_pio2+0x596>
 80077ee:	3408      	adds	r4, #8
 80077f0:	ab4a      	add	r3, sp, #296	; 0x128
 80077f2:	441c      	add	r4, r3
 80077f4:	462e      	mov	r6, r5
 80077f6:	2000      	movs	r0, #0
 80077f8:	2100      	movs	r1, #0
 80077fa:	2e00      	cmp	r6, #0
 80077fc:	da3a      	bge.n	8007874 <__kernel_rem_pio2+0x5b4>
 80077fe:	9b02      	ldr	r3, [sp, #8]
 8007800:	2b00      	cmp	r3, #0
 8007802:	d03d      	beq.n	8007880 <__kernel_rem_pio2+0x5c0>
 8007804:	4602      	mov	r2, r0
 8007806:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800780a:	9c01      	ldr	r4, [sp, #4]
 800780c:	e9c4 2300 	strd	r2, r3, [r4]
 8007810:	4602      	mov	r2, r0
 8007812:	460b      	mov	r3, r1
 8007814:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 8007818:	f7f8 fd56 	bl	80002c8 <__aeabi_dsub>
 800781c:	ae4c      	add	r6, sp, #304	; 0x130
 800781e:	2401      	movs	r4, #1
 8007820:	42a5      	cmp	r5, r4
 8007822:	da30      	bge.n	8007886 <__kernel_rem_pio2+0x5c6>
 8007824:	9b02      	ldr	r3, [sp, #8]
 8007826:	b113      	cbz	r3, 800782e <__kernel_rem_pio2+0x56e>
 8007828:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800782c:	4619      	mov	r1, r3
 800782e:	9b01      	ldr	r3, [sp, #4]
 8007830:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8007834:	e00f      	b.n	8007856 <__kernel_rem_pio2+0x596>
 8007836:	ab9a      	add	r3, sp, #616	; 0x268
 8007838:	441c      	add	r4, r3
 800783a:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 800783e:	2000      	movs	r0, #0
 8007840:	2100      	movs	r1, #0
 8007842:	2d00      	cmp	r5, #0
 8007844:	da10      	bge.n	8007868 <__kernel_rem_pio2+0x5a8>
 8007846:	9b02      	ldr	r3, [sp, #8]
 8007848:	b113      	cbz	r3, 8007850 <__kernel_rem_pio2+0x590>
 800784a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800784e:	4619      	mov	r1, r3
 8007850:	9b01      	ldr	r3, [sp, #4]
 8007852:	e9c3 0100 	strd	r0, r1, [r3]
 8007856:	9b06      	ldr	r3, [sp, #24]
 8007858:	f003 0007 	and.w	r0, r3, #7
 800785c:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 8007860:	ecbd 8b02 	vpop	{d8}
 8007864:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007868:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800786c:	f7f8 fd2e 	bl	80002cc <__adddf3>
 8007870:	3d01      	subs	r5, #1
 8007872:	e7e6      	b.n	8007842 <__kernel_rem_pio2+0x582>
 8007874:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8007878:	f7f8 fd28 	bl	80002cc <__adddf3>
 800787c:	3e01      	subs	r6, #1
 800787e:	e7bc      	b.n	80077fa <__kernel_rem_pio2+0x53a>
 8007880:	4602      	mov	r2, r0
 8007882:	460b      	mov	r3, r1
 8007884:	e7c1      	b.n	800780a <__kernel_rem_pio2+0x54a>
 8007886:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 800788a:	f7f8 fd1f 	bl	80002cc <__adddf3>
 800788e:	3401      	adds	r4, #1
 8007890:	e7c6      	b.n	8007820 <__kernel_rem_pio2+0x560>
 8007892:	e95a 8904 	ldrd	r8, r9, [sl, #-16]
 8007896:	ed3a 7b02 	vldmdb	sl!, {d7}
 800789a:	4640      	mov	r0, r8
 800789c:	ec53 2b17 	vmov	r2, r3, d7
 80078a0:	4649      	mov	r1, r9
 80078a2:	ed8d 7b04 	vstr	d7, [sp, #16]
 80078a6:	f7f8 fd11 	bl	80002cc <__adddf3>
 80078aa:	4602      	mov	r2, r0
 80078ac:	460b      	mov	r3, r1
 80078ae:	4606      	mov	r6, r0
 80078b0:	460f      	mov	r7, r1
 80078b2:	4640      	mov	r0, r8
 80078b4:	4649      	mov	r1, r9
 80078b6:	f7f8 fd07 	bl	80002c8 <__aeabi_dsub>
 80078ba:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80078be:	f7f8 fd05 	bl	80002cc <__adddf3>
 80078c2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80078c6:	e9ca 0100 	strd	r0, r1, [sl]
 80078ca:	e94a 6702 	strd	r6, r7, [sl, #-8]
 80078ce:	e770      	b.n	80077b2 <__kernel_rem_pio2+0x4f2>
 80078d0:	e95a 6704 	ldrd	r6, r7, [sl, #-16]
 80078d4:	ed3a 7b02 	vldmdb	sl!, {d7}
 80078d8:	4630      	mov	r0, r6
 80078da:	ec53 2b17 	vmov	r2, r3, d7
 80078de:	4639      	mov	r1, r7
 80078e0:	ed8d 7b04 	vstr	d7, [sp, #16]
 80078e4:	f7f8 fcf2 	bl	80002cc <__adddf3>
 80078e8:	4602      	mov	r2, r0
 80078ea:	460b      	mov	r3, r1
 80078ec:	4680      	mov	r8, r0
 80078ee:	4689      	mov	r9, r1
 80078f0:	4630      	mov	r0, r6
 80078f2:	4639      	mov	r1, r7
 80078f4:	f7f8 fce8 	bl	80002c8 <__aeabi_dsub>
 80078f8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80078fc:	f7f8 fce6 	bl	80002cc <__adddf3>
 8007900:	f10b 3bff 	add.w	fp, fp, #4294967295
 8007904:	e9ca 0100 	strd	r0, r1, [sl]
 8007908:	e94a 8902 	strd	r8, r9, [sl, #-8]
 800790c:	e756      	b.n	80077bc <__kernel_rem_pio2+0x4fc>
 800790e:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8007912:	f7f8 fcdb 	bl	80002cc <__adddf3>
 8007916:	3d01      	subs	r5, #1
 8007918:	e756      	b.n	80077c8 <__kernel_rem_pio2+0x508>
 800791a:	9b01      	ldr	r3, [sp, #4]
 800791c:	9a01      	ldr	r2, [sp, #4]
 800791e:	601f      	str	r7, [r3, #0]
 8007920:	f108 4400 	add.w	r4, r8, #2147483648	; 0x80000000
 8007924:	605c      	str	r4, [r3, #4]
 8007926:	609d      	str	r5, [r3, #8]
 8007928:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800792c:	60d3      	str	r3, [r2, #12]
 800792e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8007932:	6110      	str	r0, [r2, #16]
 8007934:	6153      	str	r3, [r2, #20]
 8007936:	e78e      	b.n	8007856 <__kernel_rem_pio2+0x596>
 8007938:	41700000 	.word	0x41700000
 800793c:	3e700000 	.word	0x3e700000

08007940 <__kernel_sin>:
 8007940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007944:	ec55 4b10 	vmov	r4, r5, d0
 8007948:	b085      	sub	sp, #20
 800794a:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800794e:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 8007952:	ed8d 1b00 	vstr	d1, [sp]
 8007956:	9002      	str	r0, [sp, #8]
 8007958:	da06      	bge.n	8007968 <__kernel_sin+0x28>
 800795a:	ee10 0a10 	vmov	r0, s0
 800795e:	4629      	mov	r1, r5
 8007960:	f7f9 f904 	bl	8000b6c <__aeabi_d2iz>
 8007964:	2800      	cmp	r0, #0
 8007966:	d051      	beq.n	8007a0c <__kernel_sin+0xcc>
 8007968:	4622      	mov	r2, r4
 800796a:	462b      	mov	r3, r5
 800796c:	4620      	mov	r0, r4
 800796e:	4629      	mov	r1, r5
 8007970:	f7f8 fe62 	bl	8000638 <__aeabi_dmul>
 8007974:	4682      	mov	sl, r0
 8007976:	468b      	mov	fp, r1
 8007978:	4602      	mov	r2, r0
 800797a:	460b      	mov	r3, r1
 800797c:	4620      	mov	r0, r4
 800797e:	4629      	mov	r1, r5
 8007980:	f7f8 fe5a 	bl	8000638 <__aeabi_dmul>
 8007984:	a341      	add	r3, pc, #260	; (adr r3, 8007a8c <__kernel_sin+0x14c>)
 8007986:	e9d3 2300 	ldrd	r2, r3, [r3]
 800798a:	4680      	mov	r8, r0
 800798c:	4689      	mov	r9, r1
 800798e:	4650      	mov	r0, sl
 8007990:	4659      	mov	r1, fp
 8007992:	f7f8 fe51 	bl	8000638 <__aeabi_dmul>
 8007996:	a33f      	add	r3, pc, #252	; (adr r3, 8007a94 <__kernel_sin+0x154>)
 8007998:	e9d3 2300 	ldrd	r2, r3, [r3]
 800799c:	f7f8 fc94 	bl	80002c8 <__aeabi_dsub>
 80079a0:	4652      	mov	r2, sl
 80079a2:	465b      	mov	r3, fp
 80079a4:	f7f8 fe48 	bl	8000638 <__aeabi_dmul>
 80079a8:	a33c      	add	r3, pc, #240	; (adr r3, 8007a9c <__kernel_sin+0x15c>)
 80079aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079ae:	f7f8 fc8d 	bl	80002cc <__adddf3>
 80079b2:	4652      	mov	r2, sl
 80079b4:	465b      	mov	r3, fp
 80079b6:	f7f8 fe3f 	bl	8000638 <__aeabi_dmul>
 80079ba:	a33a      	add	r3, pc, #232	; (adr r3, 8007aa4 <__kernel_sin+0x164>)
 80079bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079c0:	f7f8 fc82 	bl	80002c8 <__aeabi_dsub>
 80079c4:	4652      	mov	r2, sl
 80079c6:	465b      	mov	r3, fp
 80079c8:	f7f8 fe36 	bl	8000638 <__aeabi_dmul>
 80079cc:	a337      	add	r3, pc, #220	; (adr r3, 8007aac <__kernel_sin+0x16c>)
 80079ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079d2:	f7f8 fc7b 	bl	80002cc <__adddf3>
 80079d6:	9b02      	ldr	r3, [sp, #8]
 80079d8:	4606      	mov	r6, r0
 80079da:	460f      	mov	r7, r1
 80079dc:	b9db      	cbnz	r3, 8007a16 <__kernel_sin+0xd6>
 80079de:	4602      	mov	r2, r0
 80079e0:	460b      	mov	r3, r1
 80079e2:	4650      	mov	r0, sl
 80079e4:	4659      	mov	r1, fp
 80079e6:	f7f8 fe27 	bl	8000638 <__aeabi_dmul>
 80079ea:	a325      	add	r3, pc, #148	; (adr r3, 8007a80 <__kernel_sin+0x140>)
 80079ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079f0:	f7f8 fc6a 	bl	80002c8 <__aeabi_dsub>
 80079f4:	4642      	mov	r2, r8
 80079f6:	464b      	mov	r3, r9
 80079f8:	f7f8 fe1e 	bl	8000638 <__aeabi_dmul>
 80079fc:	4602      	mov	r2, r0
 80079fe:	460b      	mov	r3, r1
 8007a00:	4620      	mov	r0, r4
 8007a02:	4629      	mov	r1, r5
 8007a04:	f7f8 fc62 	bl	80002cc <__adddf3>
 8007a08:	4604      	mov	r4, r0
 8007a0a:	460d      	mov	r5, r1
 8007a0c:	ec45 4b10 	vmov	d0, r4, r5
 8007a10:	b005      	add	sp, #20
 8007a12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a16:	2200      	movs	r2, #0
 8007a18:	4b1b      	ldr	r3, [pc, #108]	; (8007a88 <__kernel_sin+0x148>)
 8007a1a:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007a1e:	f7f8 fe0b 	bl	8000638 <__aeabi_dmul>
 8007a22:	4632      	mov	r2, r6
 8007a24:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007a28:	463b      	mov	r3, r7
 8007a2a:	4640      	mov	r0, r8
 8007a2c:	4649      	mov	r1, r9
 8007a2e:	f7f8 fe03 	bl	8000638 <__aeabi_dmul>
 8007a32:	4602      	mov	r2, r0
 8007a34:	460b      	mov	r3, r1
 8007a36:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007a3a:	f7f8 fc45 	bl	80002c8 <__aeabi_dsub>
 8007a3e:	4652      	mov	r2, sl
 8007a40:	465b      	mov	r3, fp
 8007a42:	f7f8 fdf9 	bl	8000638 <__aeabi_dmul>
 8007a46:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007a4a:	f7f8 fc3d 	bl	80002c8 <__aeabi_dsub>
 8007a4e:	a30c      	add	r3, pc, #48	; (adr r3, 8007a80 <__kernel_sin+0x140>)
 8007a50:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a54:	4606      	mov	r6, r0
 8007a56:	460f      	mov	r7, r1
 8007a58:	4640      	mov	r0, r8
 8007a5a:	4649      	mov	r1, r9
 8007a5c:	f7f8 fdec 	bl	8000638 <__aeabi_dmul>
 8007a60:	4602      	mov	r2, r0
 8007a62:	460b      	mov	r3, r1
 8007a64:	4630      	mov	r0, r6
 8007a66:	4639      	mov	r1, r7
 8007a68:	f7f8 fc30 	bl	80002cc <__adddf3>
 8007a6c:	4602      	mov	r2, r0
 8007a6e:	460b      	mov	r3, r1
 8007a70:	4620      	mov	r0, r4
 8007a72:	4629      	mov	r1, r5
 8007a74:	f7f8 fc28 	bl	80002c8 <__aeabi_dsub>
 8007a78:	e7c6      	b.n	8007a08 <__kernel_sin+0xc8>
 8007a7a:	bf00      	nop
 8007a7c:	f3af 8000 	nop.w
 8007a80:	55555549 	.word	0x55555549
 8007a84:	3fc55555 	.word	0x3fc55555
 8007a88:	3fe00000 	.word	0x3fe00000
 8007a8c:	5acfd57c 	.word	0x5acfd57c
 8007a90:	3de5d93a 	.word	0x3de5d93a
 8007a94:	8a2b9ceb 	.word	0x8a2b9ceb
 8007a98:	3e5ae5e6 	.word	0x3e5ae5e6
 8007a9c:	57b1fe7d 	.word	0x57b1fe7d
 8007aa0:	3ec71de3 	.word	0x3ec71de3
 8007aa4:	19c161d5 	.word	0x19c161d5
 8007aa8:	3f2a01a0 	.word	0x3f2a01a0
 8007aac:	1110f8a6 	.word	0x1110f8a6
 8007ab0:	3f811111 	.word	0x3f811111

08007ab4 <fabs>:
 8007ab4:	ec51 0b10 	vmov	r0, r1, d0
 8007ab8:	ee10 2a10 	vmov	r2, s0
 8007abc:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8007ac0:	ec43 2b10 	vmov	d0, r2, r3
 8007ac4:	4770      	bx	lr
	...

08007ac8 <floor>:
 8007ac8:	ec51 0b10 	vmov	r0, r1, d0
 8007acc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007ad0:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8007ad4:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8007ad8:	2e13      	cmp	r6, #19
 8007ada:	460c      	mov	r4, r1
 8007adc:	ee10 5a10 	vmov	r5, s0
 8007ae0:	4680      	mov	r8, r0
 8007ae2:	dc34      	bgt.n	8007b4e <floor+0x86>
 8007ae4:	2e00      	cmp	r6, #0
 8007ae6:	da16      	bge.n	8007b16 <floor+0x4e>
 8007ae8:	a335      	add	r3, pc, #212	; (adr r3, 8007bc0 <floor+0xf8>)
 8007aea:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007aee:	f7f8 fbed 	bl	80002cc <__adddf3>
 8007af2:	2200      	movs	r2, #0
 8007af4:	2300      	movs	r3, #0
 8007af6:	f7f9 f82f 	bl	8000b58 <__aeabi_dcmpgt>
 8007afa:	b148      	cbz	r0, 8007b10 <floor+0x48>
 8007afc:	2c00      	cmp	r4, #0
 8007afe:	da59      	bge.n	8007bb4 <floor+0xec>
 8007b00:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8007b04:	4a30      	ldr	r2, [pc, #192]	; (8007bc8 <floor+0x100>)
 8007b06:	432b      	orrs	r3, r5
 8007b08:	2500      	movs	r5, #0
 8007b0a:	42ab      	cmp	r3, r5
 8007b0c:	bf18      	it	ne
 8007b0e:	4614      	movne	r4, r2
 8007b10:	4621      	mov	r1, r4
 8007b12:	4628      	mov	r0, r5
 8007b14:	e025      	b.n	8007b62 <floor+0x9a>
 8007b16:	4f2d      	ldr	r7, [pc, #180]	; (8007bcc <floor+0x104>)
 8007b18:	4137      	asrs	r7, r6
 8007b1a:	ea01 0307 	and.w	r3, r1, r7
 8007b1e:	4303      	orrs	r3, r0
 8007b20:	d01f      	beq.n	8007b62 <floor+0x9a>
 8007b22:	a327      	add	r3, pc, #156	; (adr r3, 8007bc0 <floor+0xf8>)
 8007b24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b28:	f7f8 fbd0 	bl	80002cc <__adddf3>
 8007b2c:	2200      	movs	r2, #0
 8007b2e:	2300      	movs	r3, #0
 8007b30:	f7f9 f812 	bl	8000b58 <__aeabi_dcmpgt>
 8007b34:	2800      	cmp	r0, #0
 8007b36:	d0eb      	beq.n	8007b10 <floor+0x48>
 8007b38:	2c00      	cmp	r4, #0
 8007b3a:	bfbe      	ittt	lt
 8007b3c:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8007b40:	fa43 f606 	asrlt.w	r6, r3, r6
 8007b44:	19a4      	addlt	r4, r4, r6
 8007b46:	ea24 0407 	bic.w	r4, r4, r7
 8007b4a:	2500      	movs	r5, #0
 8007b4c:	e7e0      	b.n	8007b10 <floor+0x48>
 8007b4e:	2e33      	cmp	r6, #51	; 0x33
 8007b50:	dd0b      	ble.n	8007b6a <floor+0xa2>
 8007b52:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8007b56:	d104      	bne.n	8007b62 <floor+0x9a>
 8007b58:	ee10 2a10 	vmov	r2, s0
 8007b5c:	460b      	mov	r3, r1
 8007b5e:	f7f8 fbb5 	bl	80002cc <__adddf3>
 8007b62:	ec41 0b10 	vmov	d0, r0, r1
 8007b66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007b6a:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8007b6e:	f04f 33ff 	mov.w	r3, #4294967295
 8007b72:	fa23 f707 	lsr.w	r7, r3, r7
 8007b76:	4207      	tst	r7, r0
 8007b78:	d0f3      	beq.n	8007b62 <floor+0x9a>
 8007b7a:	a311      	add	r3, pc, #68	; (adr r3, 8007bc0 <floor+0xf8>)
 8007b7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b80:	f7f8 fba4 	bl	80002cc <__adddf3>
 8007b84:	2200      	movs	r2, #0
 8007b86:	2300      	movs	r3, #0
 8007b88:	f7f8 ffe6 	bl	8000b58 <__aeabi_dcmpgt>
 8007b8c:	2800      	cmp	r0, #0
 8007b8e:	d0bf      	beq.n	8007b10 <floor+0x48>
 8007b90:	2c00      	cmp	r4, #0
 8007b92:	da02      	bge.n	8007b9a <floor+0xd2>
 8007b94:	2e14      	cmp	r6, #20
 8007b96:	d103      	bne.n	8007ba0 <floor+0xd8>
 8007b98:	3401      	adds	r4, #1
 8007b9a:	ea25 0507 	bic.w	r5, r5, r7
 8007b9e:	e7b7      	b.n	8007b10 <floor+0x48>
 8007ba0:	2301      	movs	r3, #1
 8007ba2:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8007ba6:	fa03 f606 	lsl.w	r6, r3, r6
 8007baa:	4435      	add	r5, r6
 8007bac:	4545      	cmp	r5, r8
 8007bae:	bf38      	it	cc
 8007bb0:	18e4      	addcc	r4, r4, r3
 8007bb2:	e7f2      	b.n	8007b9a <floor+0xd2>
 8007bb4:	2500      	movs	r5, #0
 8007bb6:	462c      	mov	r4, r5
 8007bb8:	e7aa      	b.n	8007b10 <floor+0x48>
 8007bba:	bf00      	nop
 8007bbc:	f3af 8000 	nop.w
 8007bc0:	8800759c 	.word	0x8800759c
 8007bc4:	7e37e43c 	.word	0x7e37e43c
 8007bc8:	bff00000 	.word	0xbff00000
 8007bcc:	000fffff 	.word	0x000fffff

08007bd0 <scalbn>:
 8007bd0:	b570      	push	{r4, r5, r6, lr}
 8007bd2:	ec55 4b10 	vmov	r4, r5, d0
 8007bd6:	f3c5 520a 	ubfx	r2, r5, #20, #11
 8007bda:	4606      	mov	r6, r0
 8007bdc:	462b      	mov	r3, r5
 8007bde:	b9aa      	cbnz	r2, 8007c0c <scalbn+0x3c>
 8007be0:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8007be4:	4323      	orrs	r3, r4
 8007be6:	d03b      	beq.n	8007c60 <scalbn+0x90>
 8007be8:	4b31      	ldr	r3, [pc, #196]	; (8007cb0 <scalbn+0xe0>)
 8007bea:	4629      	mov	r1, r5
 8007bec:	2200      	movs	r2, #0
 8007bee:	ee10 0a10 	vmov	r0, s0
 8007bf2:	f7f8 fd21 	bl	8000638 <__aeabi_dmul>
 8007bf6:	4b2f      	ldr	r3, [pc, #188]	; (8007cb4 <scalbn+0xe4>)
 8007bf8:	429e      	cmp	r6, r3
 8007bfa:	4604      	mov	r4, r0
 8007bfc:	460d      	mov	r5, r1
 8007bfe:	da12      	bge.n	8007c26 <scalbn+0x56>
 8007c00:	a327      	add	r3, pc, #156	; (adr r3, 8007ca0 <scalbn+0xd0>)
 8007c02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c06:	f7f8 fd17 	bl	8000638 <__aeabi_dmul>
 8007c0a:	e009      	b.n	8007c20 <scalbn+0x50>
 8007c0c:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8007c10:	428a      	cmp	r2, r1
 8007c12:	d10c      	bne.n	8007c2e <scalbn+0x5e>
 8007c14:	ee10 2a10 	vmov	r2, s0
 8007c18:	4620      	mov	r0, r4
 8007c1a:	4629      	mov	r1, r5
 8007c1c:	f7f8 fb56 	bl	80002cc <__adddf3>
 8007c20:	4604      	mov	r4, r0
 8007c22:	460d      	mov	r5, r1
 8007c24:	e01c      	b.n	8007c60 <scalbn+0x90>
 8007c26:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8007c2a:	460b      	mov	r3, r1
 8007c2c:	3a36      	subs	r2, #54	; 0x36
 8007c2e:	4432      	add	r2, r6
 8007c30:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8007c34:	428a      	cmp	r2, r1
 8007c36:	dd0b      	ble.n	8007c50 <scalbn+0x80>
 8007c38:	ec45 4b11 	vmov	d1, r4, r5
 8007c3c:	ed9f 0b1a 	vldr	d0, [pc, #104]	; 8007ca8 <scalbn+0xd8>
 8007c40:	f000 f83c 	bl	8007cbc <copysign>
 8007c44:	a318      	add	r3, pc, #96	; (adr r3, 8007ca8 <scalbn+0xd8>)
 8007c46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c4a:	ec51 0b10 	vmov	r0, r1, d0
 8007c4e:	e7da      	b.n	8007c06 <scalbn+0x36>
 8007c50:	2a00      	cmp	r2, #0
 8007c52:	dd08      	ble.n	8007c66 <scalbn+0x96>
 8007c54:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8007c58:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8007c5c:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8007c60:	ec45 4b10 	vmov	d0, r4, r5
 8007c64:	bd70      	pop	{r4, r5, r6, pc}
 8007c66:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8007c6a:	da0d      	bge.n	8007c88 <scalbn+0xb8>
 8007c6c:	f24c 3350 	movw	r3, #50000	; 0xc350
 8007c70:	429e      	cmp	r6, r3
 8007c72:	ec45 4b11 	vmov	d1, r4, r5
 8007c76:	dce1      	bgt.n	8007c3c <scalbn+0x6c>
 8007c78:	ed9f 0b09 	vldr	d0, [pc, #36]	; 8007ca0 <scalbn+0xd0>
 8007c7c:	f000 f81e 	bl	8007cbc <copysign>
 8007c80:	a307      	add	r3, pc, #28	; (adr r3, 8007ca0 <scalbn+0xd0>)
 8007c82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c86:	e7e0      	b.n	8007c4a <scalbn+0x7a>
 8007c88:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8007c8c:	3236      	adds	r2, #54	; 0x36
 8007c8e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8007c92:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8007c96:	4620      	mov	r0, r4
 8007c98:	4629      	mov	r1, r5
 8007c9a:	2200      	movs	r2, #0
 8007c9c:	4b06      	ldr	r3, [pc, #24]	; (8007cb8 <scalbn+0xe8>)
 8007c9e:	e7b2      	b.n	8007c06 <scalbn+0x36>
 8007ca0:	c2f8f359 	.word	0xc2f8f359
 8007ca4:	01a56e1f 	.word	0x01a56e1f
 8007ca8:	8800759c 	.word	0x8800759c
 8007cac:	7e37e43c 	.word	0x7e37e43c
 8007cb0:	43500000 	.word	0x43500000
 8007cb4:	ffff3cb0 	.word	0xffff3cb0
 8007cb8:	3c900000 	.word	0x3c900000

08007cbc <copysign>:
 8007cbc:	ec51 0b10 	vmov	r0, r1, d0
 8007cc0:	ee11 0a90 	vmov	r0, s3
 8007cc4:	ee10 2a10 	vmov	r2, s0
 8007cc8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8007ccc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007cd0:	ea41 0300 	orr.w	r3, r1, r0
 8007cd4:	ec43 2b10 	vmov	d0, r2, r3
 8007cd8:	4770      	bx	lr
	...

08007cdc <_init>:
 8007cdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007cde:	bf00      	nop
 8007ce0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007ce2:	bc08      	pop	{r3}
 8007ce4:	469e      	mov	lr, r3
 8007ce6:	4770      	bx	lr

08007ce8 <_fini>:
 8007ce8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007cea:	bf00      	nop
 8007cec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007cee:	bc08      	pop	{r3}
 8007cf0:	469e      	mov	lr, r3
 8007cf2:	4770      	bx	lr
