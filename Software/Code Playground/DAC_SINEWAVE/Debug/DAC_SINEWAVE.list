
DAC_SINEWAVE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007624  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000678  080077f8  080077f8  000177f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007e70  08007e70  00020078  2**0
                  CONTENTS
  4 .ARM          00000008  08007e70  08007e70  00017e70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007e78  08007e78  00020078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007e78  08007e78  00017e78  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007e7c  08007e7c  00017e7c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000078  20000000  08007e80  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00004d30  20000078  08007ef8  00020078  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20004da8  08007ef8  00024da8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020078  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001129b  00000000  00000000  000200a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000024fe  00000000  00000000  00031343  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000eb0  00000000  00000000  00033848  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000db0  00000000  00000000  000346f8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00022e83  00000000  00000000  000354a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000ba71  00000000  00000000  0005832b  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000d26a3  00000000  00000000  00063d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0013643f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000449c  00000000  00000000  001364bc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000078 	.word	0x20000078
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080077dc 	.word	0x080077dc

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	2000007c 	.word	0x2000007c
 800020c:	080077dc 	.word	0x080077dc

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003fe:	f1a4 0401 	sub.w	r4, r4, #1
 8000402:	d1e9      	bne.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_d2iz>:
 8000b6c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b70:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b74:	d215      	bcs.n	8000ba2 <__aeabi_d2iz+0x36>
 8000b76:	d511      	bpl.n	8000b9c <__aeabi_d2iz+0x30>
 8000b78:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b7c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b80:	d912      	bls.n	8000ba8 <__aeabi_d2iz+0x3c>
 8000b82:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b86:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b8a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b92:	fa23 f002 	lsr.w	r0, r3, r2
 8000b96:	bf18      	it	ne
 8000b98:	4240      	negne	r0, r0
 8000b9a:	4770      	bx	lr
 8000b9c:	f04f 0000 	mov.w	r0, #0
 8000ba0:	4770      	bx	lr
 8000ba2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba6:	d105      	bne.n	8000bb4 <__aeabi_d2iz+0x48>
 8000ba8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bac:	bf08      	it	eq
 8000bae:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bb2:	4770      	bx	lr
 8000bb4:	f04f 0000 	mov.w	r0, #0
 8000bb8:	4770      	bx	lr
 8000bba:	bf00      	nop

08000bbc <__aeabi_d2uiz>:
 8000bbc:	004a      	lsls	r2, r1, #1
 8000bbe:	d211      	bcs.n	8000be4 <__aeabi_d2uiz+0x28>
 8000bc0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bc4:	d211      	bcs.n	8000bea <__aeabi_d2uiz+0x2e>
 8000bc6:	d50d      	bpl.n	8000be4 <__aeabi_d2uiz+0x28>
 8000bc8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bcc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bd0:	d40e      	bmi.n	8000bf0 <__aeabi_d2uiz+0x34>
 8000bd2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bda:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bde:	fa23 f002 	lsr.w	r0, r3, r2
 8000be2:	4770      	bx	lr
 8000be4:	f04f 0000 	mov.w	r0, #0
 8000be8:	4770      	bx	lr
 8000bea:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bee:	d102      	bne.n	8000bf6 <__aeabi_d2uiz+0x3a>
 8000bf0:	f04f 30ff 	mov.w	r0, #4294967295
 8000bf4:	4770      	bx	lr
 8000bf6:	f04f 0000 	mov.w	r0, #0
 8000bfa:	4770      	bx	lr

08000bfc <__aeabi_uldivmod>:
 8000bfc:	b953      	cbnz	r3, 8000c14 <__aeabi_uldivmod+0x18>
 8000bfe:	b94a      	cbnz	r2, 8000c14 <__aeabi_uldivmod+0x18>
 8000c00:	2900      	cmp	r1, #0
 8000c02:	bf08      	it	eq
 8000c04:	2800      	cmpeq	r0, #0
 8000c06:	bf1c      	itt	ne
 8000c08:	f04f 31ff 	movne.w	r1, #4294967295
 8000c0c:	f04f 30ff 	movne.w	r0, #4294967295
 8000c10:	f000 b972 	b.w	8000ef8 <__aeabi_idiv0>
 8000c14:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c18:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c1c:	f000 f806 	bl	8000c2c <__udivmoddi4>
 8000c20:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c28:	b004      	add	sp, #16
 8000c2a:	4770      	bx	lr

08000c2c <__udivmoddi4>:
 8000c2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c30:	9e08      	ldr	r6, [sp, #32]
 8000c32:	4604      	mov	r4, r0
 8000c34:	4688      	mov	r8, r1
 8000c36:	2b00      	cmp	r3, #0
 8000c38:	d14b      	bne.n	8000cd2 <__udivmoddi4+0xa6>
 8000c3a:	428a      	cmp	r2, r1
 8000c3c:	4615      	mov	r5, r2
 8000c3e:	d967      	bls.n	8000d10 <__udivmoddi4+0xe4>
 8000c40:	fab2 f282 	clz	r2, r2
 8000c44:	b14a      	cbz	r2, 8000c5a <__udivmoddi4+0x2e>
 8000c46:	f1c2 0720 	rsb	r7, r2, #32
 8000c4a:	fa01 f302 	lsl.w	r3, r1, r2
 8000c4e:	fa20 f707 	lsr.w	r7, r0, r7
 8000c52:	4095      	lsls	r5, r2
 8000c54:	ea47 0803 	orr.w	r8, r7, r3
 8000c58:	4094      	lsls	r4, r2
 8000c5a:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000c5e:	0c23      	lsrs	r3, r4, #16
 8000c60:	fbb8 f7fe 	udiv	r7, r8, lr
 8000c64:	fa1f fc85 	uxth.w	ip, r5
 8000c68:	fb0e 8817 	mls	r8, lr, r7, r8
 8000c6c:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000c70:	fb07 f10c 	mul.w	r1, r7, ip
 8000c74:	4299      	cmp	r1, r3
 8000c76:	d909      	bls.n	8000c8c <__udivmoddi4+0x60>
 8000c78:	18eb      	adds	r3, r5, r3
 8000c7a:	f107 30ff 	add.w	r0, r7, #4294967295
 8000c7e:	f080 811b 	bcs.w	8000eb8 <__udivmoddi4+0x28c>
 8000c82:	4299      	cmp	r1, r3
 8000c84:	f240 8118 	bls.w	8000eb8 <__udivmoddi4+0x28c>
 8000c88:	3f02      	subs	r7, #2
 8000c8a:	442b      	add	r3, r5
 8000c8c:	1a5b      	subs	r3, r3, r1
 8000c8e:	b2a4      	uxth	r4, r4
 8000c90:	fbb3 f0fe 	udiv	r0, r3, lr
 8000c94:	fb0e 3310 	mls	r3, lr, r0, r3
 8000c98:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c9c:	fb00 fc0c 	mul.w	ip, r0, ip
 8000ca0:	45a4      	cmp	ip, r4
 8000ca2:	d909      	bls.n	8000cb8 <__udivmoddi4+0x8c>
 8000ca4:	192c      	adds	r4, r5, r4
 8000ca6:	f100 33ff 	add.w	r3, r0, #4294967295
 8000caa:	f080 8107 	bcs.w	8000ebc <__udivmoddi4+0x290>
 8000cae:	45a4      	cmp	ip, r4
 8000cb0:	f240 8104 	bls.w	8000ebc <__udivmoddi4+0x290>
 8000cb4:	3802      	subs	r0, #2
 8000cb6:	442c      	add	r4, r5
 8000cb8:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000cbc:	eba4 040c 	sub.w	r4, r4, ip
 8000cc0:	2700      	movs	r7, #0
 8000cc2:	b11e      	cbz	r6, 8000ccc <__udivmoddi4+0xa0>
 8000cc4:	40d4      	lsrs	r4, r2
 8000cc6:	2300      	movs	r3, #0
 8000cc8:	e9c6 4300 	strd	r4, r3, [r6]
 8000ccc:	4639      	mov	r1, r7
 8000cce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cd2:	428b      	cmp	r3, r1
 8000cd4:	d909      	bls.n	8000cea <__udivmoddi4+0xbe>
 8000cd6:	2e00      	cmp	r6, #0
 8000cd8:	f000 80eb 	beq.w	8000eb2 <__udivmoddi4+0x286>
 8000cdc:	2700      	movs	r7, #0
 8000cde:	e9c6 0100 	strd	r0, r1, [r6]
 8000ce2:	4638      	mov	r0, r7
 8000ce4:	4639      	mov	r1, r7
 8000ce6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cea:	fab3 f783 	clz	r7, r3
 8000cee:	2f00      	cmp	r7, #0
 8000cf0:	d147      	bne.n	8000d82 <__udivmoddi4+0x156>
 8000cf2:	428b      	cmp	r3, r1
 8000cf4:	d302      	bcc.n	8000cfc <__udivmoddi4+0xd0>
 8000cf6:	4282      	cmp	r2, r0
 8000cf8:	f200 80fa 	bhi.w	8000ef0 <__udivmoddi4+0x2c4>
 8000cfc:	1a84      	subs	r4, r0, r2
 8000cfe:	eb61 0303 	sbc.w	r3, r1, r3
 8000d02:	2001      	movs	r0, #1
 8000d04:	4698      	mov	r8, r3
 8000d06:	2e00      	cmp	r6, #0
 8000d08:	d0e0      	beq.n	8000ccc <__udivmoddi4+0xa0>
 8000d0a:	e9c6 4800 	strd	r4, r8, [r6]
 8000d0e:	e7dd      	b.n	8000ccc <__udivmoddi4+0xa0>
 8000d10:	b902      	cbnz	r2, 8000d14 <__udivmoddi4+0xe8>
 8000d12:	deff      	udf	#255	; 0xff
 8000d14:	fab2 f282 	clz	r2, r2
 8000d18:	2a00      	cmp	r2, #0
 8000d1a:	f040 808f 	bne.w	8000e3c <__udivmoddi4+0x210>
 8000d1e:	1b49      	subs	r1, r1, r5
 8000d20:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000d24:	fa1f f885 	uxth.w	r8, r5
 8000d28:	2701      	movs	r7, #1
 8000d2a:	fbb1 fcfe 	udiv	ip, r1, lr
 8000d2e:	0c23      	lsrs	r3, r4, #16
 8000d30:	fb0e 111c 	mls	r1, lr, ip, r1
 8000d34:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d38:	fb08 f10c 	mul.w	r1, r8, ip
 8000d3c:	4299      	cmp	r1, r3
 8000d3e:	d907      	bls.n	8000d50 <__udivmoddi4+0x124>
 8000d40:	18eb      	adds	r3, r5, r3
 8000d42:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000d46:	d202      	bcs.n	8000d4e <__udivmoddi4+0x122>
 8000d48:	4299      	cmp	r1, r3
 8000d4a:	f200 80cd 	bhi.w	8000ee8 <__udivmoddi4+0x2bc>
 8000d4e:	4684      	mov	ip, r0
 8000d50:	1a59      	subs	r1, r3, r1
 8000d52:	b2a3      	uxth	r3, r4
 8000d54:	fbb1 f0fe 	udiv	r0, r1, lr
 8000d58:	fb0e 1410 	mls	r4, lr, r0, r1
 8000d5c:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000d60:	fb08 f800 	mul.w	r8, r8, r0
 8000d64:	45a0      	cmp	r8, r4
 8000d66:	d907      	bls.n	8000d78 <__udivmoddi4+0x14c>
 8000d68:	192c      	adds	r4, r5, r4
 8000d6a:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d6e:	d202      	bcs.n	8000d76 <__udivmoddi4+0x14a>
 8000d70:	45a0      	cmp	r8, r4
 8000d72:	f200 80b6 	bhi.w	8000ee2 <__udivmoddi4+0x2b6>
 8000d76:	4618      	mov	r0, r3
 8000d78:	eba4 0408 	sub.w	r4, r4, r8
 8000d7c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000d80:	e79f      	b.n	8000cc2 <__udivmoddi4+0x96>
 8000d82:	f1c7 0c20 	rsb	ip, r7, #32
 8000d86:	40bb      	lsls	r3, r7
 8000d88:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000d8c:	ea4e 0e03 	orr.w	lr, lr, r3
 8000d90:	fa01 f407 	lsl.w	r4, r1, r7
 8000d94:	fa20 f50c 	lsr.w	r5, r0, ip
 8000d98:	fa21 f30c 	lsr.w	r3, r1, ip
 8000d9c:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000da0:	4325      	orrs	r5, r4
 8000da2:	fbb3 f9f8 	udiv	r9, r3, r8
 8000da6:	0c2c      	lsrs	r4, r5, #16
 8000da8:	fb08 3319 	mls	r3, r8, r9, r3
 8000dac:	fa1f fa8e 	uxth.w	sl, lr
 8000db0:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000db4:	fb09 f40a 	mul.w	r4, r9, sl
 8000db8:	429c      	cmp	r4, r3
 8000dba:	fa02 f207 	lsl.w	r2, r2, r7
 8000dbe:	fa00 f107 	lsl.w	r1, r0, r7
 8000dc2:	d90b      	bls.n	8000ddc <__udivmoddi4+0x1b0>
 8000dc4:	eb1e 0303 	adds.w	r3, lr, r3
 8000dc8:	f109 30ff 	add.w	r0, r9, #4294967295
 8000dcc:	f080 8087 	bcs.w	8000ede <__udivmoddi4+0x2b2>
 8000dd0:	429c      	cmp	r4, r3
 8000dd2:	f240 8084 	bls.w	8000ede <__udivmoddi4+0x2b2>
 8000dd6:	f1a9 0902 	sub.w	r9, r9, #2
 8000dda:	4473      	add	r3, lr
 8000ddc:	1b1b      	subs	r3, r3, r4
 8000dde:	b2ad      	uxth	r5, r5
 8000de0:	fbb3 f0f8 	udiv	r0, r3, r8
 8000de4:	fb08 3310 	mls	r3, r8, r0, r3
 8000de8:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000dec:	fb00 fa0a 	mul.w	sl, r0, sl
 8000df0:	45a2      	cmp	sl, r4
 8000df2:	d908      	bls.n	8000e06 <__udivmoddi4+0x1da>
 8000df4:	eb1e 0404 	adds.w	r4, lr, r4
 8000df8:	f100 33ff 	add.w	r3, r0, #4294967295
 8000dfc:	d26b      	bcs.n	8000ed6 <__udivmoddi4+0x2aa>
 8000dfe:	45a2      	cmp	sl, r4
 8000e00:	d969      	bls.n	8000ed6 <__udivmoddi4+0x2aa>
 8000e02:	3802      	subs	r0, #2
 8000e04:	4474      	add	r4, lr
 8000e06:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000e0a:	fba0 8902 	umull	r8, r9, r0, r2
 8000e0e:	eba4 040a 	sub.w	r4, r4, sl
 8000e12:	454c      	cmp	r4, r9
 8000e14:	46c2      	mov	sl, r8
 8000e16:	464b      	mov	r3, r9
 8000e18:	d354      	bcc.n	8000ec4 <__udivmoddi4+0x298>
 8000e1a:	d051      	beq.n	8000ec0 <__udivmoddi4+0x294>
 8000e1c:	2e00      	cmp	r6, #0
 8000e1e:	d069      	beq.n	8000ef4 <__udivmoddi4+0x2c8>
 8000e20:	ebb1 050a 	subs.w	r5, r1, sl
 8000e24:	eb64 0403 	sbc.w	r4, r4, r3
 8000e28:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000e2c:	40fd      	lsrs	r5, r7
 8000e2e:	40fc      	lsrs	r4, r7
 8000e30:	ea4c 0505 	orr.w	r5, ip, r5
 8000e34:	e9c6 5400 	strd	r5, r4, [r6]
 8000e38:	2700      	movs	r7, #0
 8000e3a:	e747      	b.n	8000ccc <__udivmoddi4+0xa0>
 8000e3c:	f1c2 0320 	rsb	r3, r2, #32
 8000e40:	fa20 f703 	lsr.w	r7, r0, r3
 8000e44:	4095      	lsls	r5, r2
 8000e46:	fa01 f002 	lsl.w	r0, r1, r2
 8000e4a:	fa21 f303 	lsr.w	r3, r1, r3
 8000e4e:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000e52:	4338      	orrs	r0, r7
 8000e54:	0c01      	lsrs	r1, r0, #16
 8000e56:	fbb3 f7fe 	udiv	r7, r3, lr
 8000e5a:	fa1f f885 	uxth.w	r8, r5
 8000e5e:	fb0e 3317 	mls	r3, lr, r7, r3
 8000e62:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e66:	fb07 f308 	mul.w	r3, r7, r8
 8000e6a:	428b      	cmp	r3, r1
 8000e6c:	fa04 f402 	lsl.w	r4, r4, r2
 8000e70:	d907      	bls.n	8000e82 <__udivmoddi4+0x256>
 8000e72:	1869      	adds	r1, r5, r1
 8000e74:	f107 3cff 	add.w	ip, r7, #4294967295
 8000e78:	d22f      	bcs.n	8000eda <__udivmoddi4+0x2ae>
 8000e7a:	428b      	cmp	r3, r1
 8000e7c:	d92d      	bls.n	8000eda <__udivmoddi4+0x2ae>
 8000e7e:	3f02      	subs	r7, #2
 8000e80:	4429      	add	r1, r5
 8000e82:	1acb      	subs	r3, r1, r3
 8000e84:	b281      	uxth	r1, r0
 8000e86:	fbb3 f0fe 	udiv	r0, r3, lr
 8000e8a:	fb0e 3310 	mls	r3, lr, r0, r3
 8000e8e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e92:	fb00 f308 	mul.w	r3, r0, r8
 8000e96:	428b      	cmp	r3, r1
 8000e98:	d907      	bls.n	8000eaa <__udivmoddi4+0x27e>
 8000e9a:	1869      	adds	r1, r5, r1
 8000e9c:	f100 3cff 	add.w	ip, r0, #4294967295
 8000ea0:	d217      	bcs.n	8000ed2 <__udivmoddi4+0x2a6>
 8000ea2:	428b      	cmp	r3, r1
 8000ea4:	d915      	bls.n	8000ed2 <__udivmoddi4+0x2a6>
 8000ea6:	3802      	subs	r0, #2
 8000ea8:	4429      	add	r1, r5
 8000eaa:	1ac9      	subs	r1, r1, r3
 8000eac:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000eb0:	e73b      	b.n	8000d2a <__udivmoddi4+0xfe>
 8000eb2:	4637      	mov	r7, r6
 8000eb4:	4630      	mov	r0, r6
 8000eb6:	e709      	b.n	8000ccc <__udivmoddi4+0xa0>
 8000eb8:	4607      	mov	r7, r0
 8000eba:	e6e7      	b.n	8000c8c <__udivmoddi4+0x60>
 8000ebc:	4618      	mov	r0, r3
 8000ebe:	e6fb      	b.n	8000cb8 <__udivmoddi4+0x8c>
 8000ec0:	4541      	cmp	r1, r8
 8000ec2:	d2ab      	bcs.n	8000e1c <__udivmoddi4+0x1f0>
 8000ec4:	ebb8 0a02 	subs.w	sl, r8, r2
 8000ec8:	eb69 020e 	sbc.w	r2, r9, lr
 8000ecc:	3801      	subs	r0, #1
 8000ece:	4613      	mov	r3, r2
 8000ed0:	e7a4      	b.n	8000e1c <__udivmoddi4+0x1f0>
 8000ed2:	4660      	mov	r0, ip
 8000ed4:	e7e9      	b.n	8000eaa <__udivmoddi4+0x27e>
 8000ed6:	4618      	mov	r0, r3
 8000ed8:	e795      	b.n	8000e06 <__udivmoddi4+0x1da>
 8000eda:	4667      	mov	r7, ip
 8000edc:	e7d1      	b.n	8000e82 <__udivmoddi4+0x256>
 8000ede:	4681      	mov	r9, r0
 8000ee0:	e77c      	b.n	8000ddc <__udivmoddi4+0x1b0>
 8000ee2:	3802      	subs	r0, #2
 8000ee4:	442c      	add	r4, r5
 8000ee6:	e747      	b.n	8000d78 <__udivmoddi4+0x14c>
 8000ee8:	f1ac 0c02 	sub.w	ip, ip, #2
 8000eec:	442b      	add	r3, r5
 8000eee:	e72f      	b.n	8000d50 <__udivmoddi4+0x124>
 8000ef0:	4638      	mov	r0, r7
 8000ef2:	e708      	b.n	8000d06 <__udivmoddi4+0xda>
 8000ef4:	4637      	mov	r7, r6
 8000ef6:	e6e9      	b.n	8000ccc <__udivmoddi4+0xa0>

08000ef8 <__aeabi_idiv0>:
 8000ef8:	4770      	bx	lr
 8000efa:	bf00      	nop

08000efc <conv_HEX_to_BIN>:

//**************** KISS *************************************************************************************************************
bool KISS_FLAG[FLAG_SIZE] = { 1, 1, 0, 0, 0, 0, 0, 0 };

//Conversion functions
void conv_HEX_to_BIN(uint8_t hex_byte_in, bool *bin_byte_out,bool select_8_16){
 8000efc:	b480      	push	{r7}
 8000efe:	b087      	sub	sp, #28
 8000f00:	af00      	add	r7, sp, #0
 8000f02:	4603      	mov	r3, r0
 8000f04:	6039      	str	r1, [r7, #0]
 8000f06:	71fb      	strb	r3, [r7, #7]
 8000f08:	4613      	mov	r3, r2
 8000f0a:	71bb      	strb	r3, [r7, #6]
    int temp;

    //sprintf(uartData, "\nByte value            = %d\nBinary value[LSB:MSB] =",hex_byte_in);
	//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
    if(select_8_16){
 8000f0c:	79bb      	ldrb	r3, [r7, #6]
 8000f0e:	2b00      	cmp	r3, #0
 8000f10:	d01f      	beq.n	8000f52 <conv_HEX_to_BIN+0x56>
		for(int i = 0; i < 8; i++){
 8000f12:	2300      	movs	r3, #0
 8000f14:	617b      	str	r3, [r7, #20]
 8000f16:	e018      	b.n	8000f4a <conv_HEX_to_BIN+0x4e>
			temp = hex_byte_in >> i;
 8000f18:	79fa      	ldrb	r2, [r7, #7]
 8000f1a:	697b      	ldr	r3, [r7, #20]
 8000f1c:	fa42 f303 	asr.w	r3, r2, r3
 8000f20:	60fb      	str	r3, [r7, #12]
			temp = temp%2;
 8000f22:	68fb      	ldr	r3, [r7, #12]
 8000f24:	2b00      	cmp	r3, #0
 8000f26:	f003 0301 	and.w	r3, r3, #1
 8000f2a:	bfb8      	it	lt
 8000f2c:	425b      	neglt	r3, r3
 8000f2e:	60fb      	str	r3, [r7, #12]

			//sprintf(uartData, " %d ",temp);
			//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);

			*(bin_byte_out+i) = temp;
 8000f30:	697b      	ldr	r3, [r7, #20]
 8000f32:	683a      	ldr	r2, [r7, #0]
 8000f34:	4413      	add	r3, r2
 8000f36:	68fa      	ldr	r2, [r7, #12]
 8000f38:	2a00      	cmp	r2, #0
 8000f3a:	bf14      	ite	ne
 8000f3c:	2201      	movne	r2, #1
 8000f3e:	2200      	moveq	r2, #0
 8000f40:	b2d2      	uxtb	r2, r2
 8000f42:	701a      	strb	r2, [r3, #0]
		for(int i = 0; i < 8; i++){
 8000f44:	697b      	ldr	r3, [r7, #20]
 8000f46:	3301      	adds	r3, #1
 8000f48:	617b      	str	r3, [r7, #20]
 8000f4a:	697b      	ldr	r3, [r7, #20]
 8000f4c:	2b07      	cmp	r3, #7
 8000f4e:	dde3      	ble.n	8000f18 <conv_HEX_to_BIN+0x1c>
		}
    }

    //sprintf(uartData, "\n");
	//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
}
 8000f50:	e01e      	b.n	8000f90 <conv_HEX_to_BIN+0x94>
		for(int i = 0; i < 16; i++){
 8000f52:	2300      	movs	r3, #0
 8000f54:	613b      	str	r3, [r7, #16]
 8000f56:	e018      	b.n	8000f8a <conv_HEX_to_BIN+0x8e>
			temp = hex_byte_in >> i;
 8000f58:	79fa      	ldrb	r2, [r7, #7]
 8000f5a:	693b      	ldr	r3, [r7, #16]
 8000f5c:	fa42 f303 	asr.w	r3, r2, r3
 8000f60:	60fb      	str	r3, [r7, #12]
			temp = temp%2;
 8000f62:	68fb      	ldr	r3, [r7, #12]
 8000f64:	2b00      	cmp	r3, #0
 8000f66:	f003 0301 	and.w	r3, r3, #1
 8000f6a:	bfb8      	it	lt
 8000f6c:	425b      	neglt	r3, r3
 8000f6e:	60fb      	str	r3, [r7, #12]
			*(bin_byte_out+i) = temp;
 8000f70:	693b      	ldr	r3, [r7, #16]
 8000f72:	683a      	ldr	r2, [r7, #0]
 8000f74:	4413      	add	r3, r2
 8000f76:	68fa      	ldr	r2, [r7, #12]
 8000f78:	2a00      	cmp	r2, #0
 8000f7a:	bf14      	ite	ne
 8000f7c:	2201      	movne	r2, #1
 8000f7e:	2200      	moveq	r2, #0
 8000f80:	b2d2      	uxtb	r2, r2
 8000f82:	701a      	strb	r2, [r3, #0]
		for(int i = 0; i < 16; i++){
 8000f84:	693b      	ldr	r3, [r7, #16]
 8000f86:	3301      	adds	r3, #1
 8000f88:	613b      	str	r3, [r7, #16]
 8000f8a:	693b      	ldr	r3, [r7, #16]
 8000f8c:	2b0f      	cmp	r3, #15
 8000f8e:	dde3      	ble.n	8000f58 <conv_HEX_to_BIN+0x5c>
}
 8000f90:	bf00      	nop
 8000f92:	371c      	adds	r7, #28
 8000f94:	46bd      	mov	sp, r7
 8000f96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f9a:	4770      	bx	lr

08000f9c <init_AX25>:
	return acc;
}

//General Program
//****************************************************************************************************************
void init_AX25(){
 8000f9c:	b580      	push	{r7, lr}
 8000f9e:	af00      	add	r7, sp, #0
	HAL_UART_Receive_IT(&huart2, &(UART_packet.input), UART_RX_IT_CNT);
 8000fa0:	2201      	movs	r2, #1
 8000fa2:	4909      	ldr	r1, [pc, #36]	; (8000fc8 <init_AX25+0x2c>)
 8000fa4:	4809      	ldr	r0, [pc, #36]	; (8000fcc <init_AX25+0x30>)
 8000fa6:	f004 f973 	bl	8005290 <HAL_UART_Receive_IT>
	UART_packet.flags = 0;
 8000faa:	4b09      	ldr	r3, [pc, #36]	; (8000fd0 <init_AX25+0x34>)
 8000fac:	2200      	movs	r2, #0
 8000fae:	609a      	str	r2, [r3, #8]
	UART_packet.got_packet = false;
 8000fb0:	4b07      	ldr	r3, [pc, #28]	; (8000fd0 <init_AX25+0x34>)
 8000fb2:	2200      	movs	r2, #0
 8000fb4:	735a      	strb	r2, [r3, #13]
	UART_packet.rx_cnt = 0;
 8000fb6:	4b06      	ldr	r3, [pc, #24]	; (8000fd0 <init_AX25+0x34>)
 8000fb8:	2200      	movs	r2, #0
 8000fba:	601a      	str	r2, [r3, #0]
	UART_packet.received_byte_cnt = 0;
 8000fbc:	4b04      	ldr	r3, [pc, #16]	; (8000fd0 <init_AX25+0x34>)
 8000fbe:	2200      	movs	r2, #0
 8000fc0:	605a      	str	r2, [r3, #4]
}
 8000fc2:	bf00      	nop
 8000fc4:	bd80      	pop	{r7, pc}
 8000fc6:	bf00      	nop
 8000fc8:	20001418 	.word	0x20001418
 8000fcc:	20003d60 	.word	0x20003d60
 8000fd0:	2000140c 	.word	0x2000140c

08000fd4 <tx_rx>:

void tx_rx() {
 8000fd4:	b580      	push	{r7, lr}
 8000fd6:	b082      	sub	sp, #8
 8000fd8:	af00      	add	r7, sp, #0
	if (changeMode) {
 8000fda:	4b19      	ldr	r3, [pc, #100]	; (8001040 <tx_rx+0x6c>)
 8000fdc:	781b      	ldrb	r3, [r3, #0]
 8000fde:	2b00      	cmp	r3, #0
 8000fe0:	d004      	beq.n	8000fec <tx_rx+0x18>
		changeMode = 0;
 8000fe2:	4b17      	ldr	r3, [pc, #92]	; (8001040 <tx_rx+0x6c>)
 8000fe4:	2200      	movs	r2, #0
 8000fe6:	701a      	strb	r2, [r3, #0]
		toggleMode();
 8000fe8:	f000 febc 	bl	8001d64 <toggleMode>
	}

	if (mode) {
 8000fec:	4b15      	ldr	r3, [pc, #84]	; (8001044 <tx_rx+0x70>)
 8000fee:	781b      	ldrb	r3, [r3, #0]
 8000ff0:	2b00      	cmp	r3, #0
 8000ff2:	d002      	beq.n	8000ffa <tx_rx+0x26>
		receiving_KISS();
 8000ff4:	f000 fd3a 	bl	8001a6c <receiving_KISS>

			streamGet();
		}
		HAL_Delay(1000);
	}
}
 8000ff8:	e01d      	b.n	8001036 <tx_rx+0x62>
		for(int i = 0;i<10;i++){
 8000ffa:	2300      	movs	r3, #0
 8000ffc:	607b      	str	r3, [r7, #4]
 8000ffe:	e013      	b.n	8001028 <tx_rx+0x54>
			sprintf(uartData, "Running streamGet() %d time\r\n",i);
 8001000:	687a      	ldr	r2, [r7, #4]
 8001002:	4911      	ldr	r1, [pc, #68]	; (8001048 <tx_rx+0x74>)
 8001004:	4811      	ldr	r0, [pc, #68]	; (800104c <tx_rx+0x78>)
 8001006:	f005 f893 	bl	8006130 <siprintf>
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800100a:	4810      	ldr	r0, [pc, #64]	; (800104c <tx_rx+0x78>)
 800100c:	f7ff f900 	bl	8000210 <strlen>
 8001010:	4603      	mov	r3, r0
 8001012:	b29a      	uxth	r2, r3
 8001014:	230a      	movs	r3, #10
 8001016:	490d      	ldr	r1, [pc, #52]	; (800104c <tx_rx+0x78>)
 8001018:	480d      	ldr	r0, [pc, #52]	; (8001050 <tx_rx+0x7c>)
 800101a:	f004 f8a0 	bl	800515e <HAL_UART_Transmit>
			streamGet();
 800101e:	f001 f977 	bl	8002310 <streamGet>
		for(int i = 0;i<10;i++){
 8001022:	687b      	ldr	r3, [r7, #4]
 8001024:	3301      	adds	r3, #1
 8001026:	607b      	str	r3, [r7, #4]
 8001028:	687b      	ldr	r3, [r7, #4]
 800102a:	2b09      	cmp	r3, #9
 800102c:	dde8      	ble.n	8001000 <tx_rx+0x2c>
		HAL_Delay(1000);
 800102e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001032:	f001 ff91 	bl	8002f58 <HAL_Delay>
}
 8001036:	bf00      	nop
 8001038:	3708      	adds	r7, #8
 800103a:	46bd      	mov	sp, r7
 800103c:	bd80      	pop	{r7, pc}
 800103e:	bf00      	nop
 8001040:	20000099 	.word	0x20000099
 8001044:	20003d08 	.word	0x20003d08
 8001048:	080077f8 	.word	0x080077f8
 800104c:	20001f3c 	.word	0x20001f3c
 8001050:	20003d60 	.word	0x20003d60

08001054 <print_AX25>:
	HAL_GPIO_WritePin(PTT_GPIO_Port, PTT_Pin, GPIO_PIN_RESET); //stop transmitting

	sprintf(uartData, "Ending AFSK transmission\n");
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
}
void print_AX25(){
 8001054:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001056:	b08b      	sub	sp, #44	; 0x2c
 8001058:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 800105a:	4b93      	ldr	r3, [pc, #588]	; (80012a8 <print_AX25+0x254>)
 800105c:	60bb      	str	r3, [r7, #8]
	int bytecnt = local_packet->byte_cnt;
 800105e:	68bb      	ldr	r3, [r7, #8]
 8001060:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001064:	330c      	adds	r3, #12
 8001066:	681b      	ldr	r3, [r3, #0]
 8001068:	607b      	str	r3, [r7, #4]
	bool *curr_mem;
	sprintf(uartData, "\nPrinting AX25_PACKET... All fields printed [MSB:LSB]\n");
 800106a:	4b90      	ldr	r3, [pc, #576]	; (80012ac <print_AX25+0x258>)
 800106c:	4a90      	ldr	r2, [pc, #576]	; (80012b0 <print_AX25+0x25c>)
 800106e:	4614      	mov	r4, r2
 8001070:	469c      	mov	ip, r3
 8001072:	f104 0e30 	add.w	lr, r4, #48	; 0x30
 8001076:	4665      	mov	r5, ip
 8001078:	4626      	mov	r6, r4
 800107a:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800107c:	6028      	str	r0, [r5, #0]
 800107e:	6069      	str	r1, [r5, #4]
 8001080:	60aa      	str	r2, [r5, #8]
 8001082:	60eb      	str	r3, [r5, #12]
 8001084:	3410      	adds	r4, #16
 8001086:	f10c 0c10 	add.w	ip, ip, #16
 800108a:	4574      	cmp	r4, lr
 800108c:	d1f3      	bne.n	8001076 <print_AX25+0x22>
 800108e:	4663      	mov	r3, ip
 8001090:	4622      	mov	r2, r4
 8001092:	6810      	ldr	r0, [r2, #0]
 8001094:	6018      	str	r0, [r3, #0]
 8001096:	8891      	ldrh	r1, [r2, #4]
 8001098:	7992      	ldrb	r2, [r2, #6]
 800109a:	8099      	strh	r1, [r3, #4]
 800109c:	719a      	strb	r2, [r3, #6]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800109e:	4883      	ldr	r0, [pc, #524]	; (80012ac <print_AX25+0x258>)
 80010a0:	f7ff f8b6 	bl	8000210 <strlen>
 80010a4:	4603      	mov	r3, r0
 80010a6:	b29a      	uxth	r2, r3
 80010a8:	230a      	movs	r3, #10
 80010aa:	4980      	ldr	r1, [pc, #512]	; (80012ac <print_AX25+0x258>)
 80010ac:	4881      	ldr	r0, [pc, #516]	; (80012b4 <print_AX25+0x260>)
 80010ae:	f004 f856 	bl	800515e <HAL_UART_Transmit>

	//Print Address Field
	curr_mem = (local_packet->address);
 80010b2:	68bb      	ldr	r3, [r7, #8]
 80010b4:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80010b8:	3310      	adds	r3, #16
 80010ba:	681b      	ldr	r3, [r3, #0]
 80010bc:	627b      	str	r3, [r7, #36]	; 0x24
	for(int i = 0;i<address_len/8;i++){
 80010be:	2300      	movs	r3, #0
 80010c0:	623b      	str	r3, [r7, #32]
 80010c2:	e042      	b.n	800114a <print_AX25+0xf6>
		sprintf(uartData, "Address Field %d =",i+1);
 80010c4:	6a3b      	ldr	r3, [r7, #32]
 80010c6:	3301      	adds	r3, #1
 80010c8:	461a      	mov	r2, r3
 80010ca:	497b      	ldr	r1, [pc, #492]	; (80012b8 <print_AX25+0x264>)
 80010cc:	4877      	ldr	r0, [pc, #476]	; (80012ac <print_AX25+0x258>)
 80010ce:	f005 f82f 	bl	8006130 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80010d2:	4876      	ldr	r0, [pc, #472]	; (80012ac <print_AX25+0x258>)
 80010d4:	f7ff f89c 	bl	8000210 <strlen>
 80010d8:	4603      	mov	r3, r0
 80010da:	b29a      	uxth	r2, r3
 80010dc:	230a      	movs	r3, #10
 80010de:	4973      	ldr	r1, [pc, #460]	; (80012ac <print_AX25+0x258>)
 80010e0:	4874      	ldr	r0, [pc, #464]	; (80012b4 <print_AX25+0x260>)
 80010e2:	f004 f83c 	bl	800515e <HAL_UART_Transmit>

		for(int j = 0;j<8;j++){
 80010e6:	2300      	movs	r3, #0
 80010e8:	61fb      	str	r3, [r7, #28]
 80010ea:	e017      	b.n	800111c <print_AX25+0xc8>
			sprintf(uartData, " %d ",*(curr_mem+8-j-1));
 80010ec:	69fb      	ldr	r3, [r7, #28]
 80010ee:	f1c3 0307 	rsb	r3, r3, #7
 80010f2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80010f4:	4413      	add	r3, r2
 80010f6:	781b      	ldrb	r3, [r3, #0]
 80010f8:	461a      	mov	r2, r3
 80010fa:	4970      	ldr	r1, [pc, #448]	; (80012bc <print_AX25+0x268>)
 80010fc:	486b      	ldr	r0, [pc, #428]	; (80012ac <print_AX25+0x258>)
 80010fe:	f005 f817 	bl	8006130 <siprintf>
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001102:	486a      	ldr	r0, [pc, #424]	; (80012ac <print_AX25+0x258>)
 8001104:	f7ff f884 	bl	8000210 <strlen>
 8001108:	4603      	mov	r3, r0
 800110a:	b29a      	uxth	r2, r3
 800110c:	230a      	movs	r3, #10
 800110e:	4967      	ldr	r1, [pc, #412]	; (80012ac <print_AX25+0x258>)
 8001110:	4868      	ldr	r0, [pc, #416]	; (80012b4 <print_AX25+0x260>)
 8001112:	f004 f824 	bl	800515e <HAL_UART_Transmit>
		for(int j = 0;j<8;j++){
 8001116:	69fb      	ldr	r3, [r7, #28]
 8001118:	3301      	adds	r3, #1
 800111a:	61fb      	str	r3, [r7, #28]
 800111c:	69fb      	ldr	r3, [r7, #28]
 800111e:	2b07      	cmp	r3, #7
 8001120:	dde4      	ble.n	80010ec <print_AX25+0x98>
		}
		curr_mem += 8;
 8001122:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001124:	3308      	adds	r3, #8
 8001126:	627b      	str	r3, [r7, #36]	; 0x24
		sprintf(uartData, "\n");
 8001128:	4a60      	ldr	r2, [pc, #384]	; (80012ac <print_AX25+0x258>)
 800112a:	4b65      	ldr	r3, [pc, #404]	; (80012c0 <print_AX25+0x26c>)
 800112c:	881b      	ldrh	r3, [r3, #0]
 800112e:	8013      	strh	r3, [r2, #0]
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001130:	485e      	ldr	r0, [pc, #376]	; (80012ac <print_AX25+0x258>)
 8001132:	f7ff f86d 	bl	8000210 <strlen>
 8001136:	4603      	mov	r3, r0
 8001138:	b29a      	uxth	r2, r3
 800113a:	230a      	movs	r3, #10
 800113c:	495b      	ldr	r1, [pc, #364]	; (80012ac <print_AX25+0x258>)
 800113e:	485d      	ldr	r0, [pc, #372]	; (80012b4 <print_AX25+0x260>)
 8001140:	f004 f80d 	bl	800515e <HAL_UART_Transmit>
	for(int i = 0;i<address_len/8;i++){
 8001144:	6a3b      	ldr	r3, [r7, #32]
 8001146:	3301      	adds	r3, #1
 8001148:	623b      	str	r3, [r7, #32]
 800114a:	6a3b      	ldr	r3, [r7, #32]
 800114c:	2b0d      	cmp	r3, #13
 800114e:	ddb9      	ble.n	80010c4 <print_AX25+0x70>
	}

	//Print Control Field
	curr_mem = (local_packet->control);//Subtract 8 to start at the flag start
 8001150:	68bb      	ldr	r3, [r7, #8]
 8001152:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001156:	3314      	adds	r3, #20
 8001158:	681b      	ldr	r3, [r3, #0]
 800115a:	627b      	str	r3, [r7, #36]	; 0x24
	sprintf(uartData, "Control Field   =");
 800115c:	4a53      	ldr	r2, [pc, #332]	; (80012ac <print_AX25+0x258>)
 800115e:	4b59      	ldr	r3, [pc, #356]	; (80012c4 <print_AX25+0x270>)
 8001160:	4615      	mov	r5, r2
 8001162:	461c      	mov	r4, r3
 8001164:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001166:	6028      	str	r0, [r5, #0]
 8001168:	6069      	str	r1, [r5, #4]
 800116a:	60aa      	str	r2, [r5, #8]
 800116c:	60eb      	str	r3, [r5, #12]
 800116e:	8823      	ldrh	r3, [r4, #0]
 8001170:	822b      	strh	r3, [r5, #16]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001172:	484e      	ldr	r0, [pc, #312]	; (80012ac <print_AX25+0x258>)
 8001174:	f7ff f84c 	bl	8000210 <strlen>
 8001178:	4603      	mov	r3, r0
 800117a:	b29a      	uxth	r2, r3
 800117c:	230a      	movs	r3, #10
 800117e:	494b      	ldr	r1, [pc, #300]	; (80012ac <print_AX25+0x258>)
 8001180:	484c      	ldr	r0, [pc, #304]	; (80012b4 <print_AX25+0x260>)
 8001182:	f003 ffec 	bl	800515e <HAL_UART_Transmit>

	for(int i = 0;i<8;i++){
 8001186:	2300      	movs	r3, #0
 8001188:	61bb      	str	r3, [r7, #24]
 800118a:	e017      	b.n	80011bc <print_AX25+0x168>
		sprintf(uartData, " %d ",*(curr_mem+8-i-1));
 800118c:	69bb      	ldr	r3, [r7, #24]
 800118e:	f1c3 0307 	rsb	r3, r3, #7
 8001192:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001194:	4413      	add	r3, r2
 8001196:	781b      	ldrb	r3, [r3, #0]
 8001198:	461a      	mov	r2, r3
 800119a:	4948      	ldr	r1, [pc, #288]	; (80012bc <print_AX25+0x268>)
 800119c:	4843      	ldr	r0, [pc, #268]	; (80012ac <print_AX25+0x258>)
 800119e:	f004 ffc7 	bl	8006130 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80011a2:	4842      	ldr	r0, [pc, #264]	; (80012ac <print_AX25+0x258>)
 80011a4:	f7ff f834 	bl	8000210 <strlen>
 80011a8:	4603      	mov	r3, r0
 80011aa:	b29a      	uxth	r2, r3
 80011ac:	230a      	movs	r3, #10
 80011ae:	493f      	ldr	r1, [pc, #252]	; (80012ac <print_AX25+0x258>)
 80011b0:	4840      	ldr	r0, [pc, #256]	; (80012b4 <print_AX25+0x260>)
 80011b2:	f003 ffd4 	bl	800515e <HAL_UART_Transmit>
	for(int i = 0;i<8;i++){
 80011b6:	69bb      	ldr	r3, [r7, #24]
 80011b8:	3301      	adds	r3, #1
 80011ba:	61bb      	str	r3, [r7, #24]
 80011bc:	69bb      	ldr	r3, [r7, #24]
 80011be:	2b07      	cmp	r3, #7
 80011c0:	dde4      	ble.n	800118c <print_AX25+0x138>
	}
	sprintf(uartData, "\n");
 80011c2:	4a3a      	ldr	r2, [pc, #232]	; (80012ac <print_AX25+0x258>)
 80011c4:	4b3e      	ldr	r3, [pc, #248]	; (80012c0 <print_AX25+0x26c>)
 80011c6:	881b      	ldrh	r3, [r3, #0]
 80011c8:	8013      	strh	r3, [r2, #0]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80011ca:	4838      	ldr	r0, [pc, #224]	; (80012ac <print_AX25+0x258>)
 80011cc:	f7ff f820 	bl	8000210 <strlen>
 80011d0:	4603      	mov	r3, r0
 80011d2:	b29a      	uxth	r2, r3
 80011d4:	230a      	movs	r3, #10
 80011d6:	4935      	ldr	r1, [pc, #212]	; (80012ac <print_AX25+0x258>)
 80011d8:	4836      	ldr	r0, [pc, #216]	; (80012b4 <print_AX25+0x260>)
 80011da:	f003 ffc0 	bl	800515e <HAL_UART_Transmit>

	//PID
	curr_mem = (local_packet->PID);//Subtract 8 to start at the flag start
 80011de:	68bb      	ldr	r3, [r7, #8]
 80011e0:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80011e4:	3318      	adds	r3, #24
 80011e6:	681b      	ldr	r3, [r3, #0]
 80011e8:	627b      	str	r3, [r7, #36]	; 0x24
	sprintf(uartData, "PID Field       =");
 80011ea:	4a30      	ldr	r2, [pc, #192]	; (80012ac <print_AX25+0x258>)
 80011ec:	4b36      	ldr	r3, [pc, #216]	; (80012c8 <print_AX25+0x274>)
 80011ee:	4615      	mov	r5, r2
 80011f0:	461c      	mov	r4, r3
 80011f2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80011f4:	6028      	str	r0, [r5, #0]
 80011f6:	6069      	str	r1, [r5, #4]
 80011f8:	60aa      	str	r2, [r5, #8]
 80011fa:	60eb      	str	r3, [r5, #12]
 80011fc:	8823      	ldrh	r3, [r4, #0]
 80011fe:	822b      	strh	r3, [r5, #16]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001200:	482a      	ldr	r0, [pc, #168]	; (80012ac <print_AX25+0x258>)
 8001202:	f7ff f805 	bl	8000210 <strlen>
 8001206:	4603      	mov	r3, r0
 8001208:	b29a      	uxth	r2, r3
 800120a:	230a      	movs	r3, #10
 800120c:	4927      	ldr	r1, [pc, #156]	; (80012ac <print_AX25+0x258>)
 800120e:	4829      	ldr	r0, [pc, #164]	; (80012b4 <print_AX25+0x260>)
 8001210:	f003 ffa5 	bl	800515e <HAL_UART_Transmit>

	for(int i = 0;i<8;i++){
 8001214:	2300      	movs	r3, #0
 8001216:	617b      	str	r3, [r7, #20]
 8001218:	e017      	b.n	800124a <print_AX25+0x1f6>
		sprintf(uartData, " %d ",*(curr_mem+8-i-1));
 800121a:	697b      	ldr	r3, [r7, #20]
 800121c:	f1c3 0307 	rsb	r3, r3, #7
 8001220:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001222:	4413      	add	r3, r2
 8001224:	781b      	ldrb	r3, [r3, #0]
 8001226:	461a      	mov	r2, r3
 8001228:	4924      	ldr	r1, [pc, #144]	; (80012bc <print_AX25+0x268>)
 800122a:	4820      	ldr	r0, [pc, #128]	; (80012ac <print_AX25+0x258>)
 800122c:	f004 ff80 	bl	8006130 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001230:	481e      	ldr	r0, [pc, #120]	; (80012ac <print_AX25+0x258>)
 8001232:	f7fe ffed 	bl	8000210 <strlen>
 8001236:	4603      	mov	r3, r0
 8001238:	b29a      	uxth	r2, r3
 800123a:	230a      	movs	r3, #10
 800123c:	491b      	ldr	r1, [pc, #108]	; (80012ac <print_AX25+0x258>)
 800123e:	481d      	ldr	r0, [pc, #116]	; (80012b4 <print_AX25+0x260>)
 8001240:	f003 ff8d 	bl	800515e <HAL_UART_Transmit>
	for(int i = 0;i<8;i++){
 8001244:	697b      	ldr	r3, [r7, #20]
 8001246:	3301      	adds	r3, #1
 8001248:	617b      	str	r3, [r7, #20]
 800124a:	697b      	ldr	r3, [r7, #20]
 800124c:	2b07      	cmp	r3, #7
 800124e:	dde4      	ble.n	800121a <print_AX25+0x1c6>
	}
	sprintf(uartData, "\n");
 8001250:	4a16      	ldr	r2, [pc, #88]	; (80012ac <print_AX25+0x258>)
 8001252:	4b1b      	ldr	r3, [pc, #108]	; (80012c0 <print_AX25+0x26c>)
 8001254:	881b      	ldrh	r3, [r3, #0]
 8001256:	8013      	strh	r3, [r2, #0]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001258:	4814      	ldr	r0, [pc, #80]	; (80012ac <print_AX25+0x258>)
 800125a:	f7fe ffd9 	bl	8000210 <strlen>
 800125e:	4603      	mov	r3, r0
 8001260:	b29a      	uxth	r2, r3
 8001262:	230a      	movs	r3, #10
 8001264:	4911      	ldr	r1, [pc, #68]	; (80012ac <print_AX25+0x258>)
 8001266:	4813      	ldr	r0, [pc, #76]	; (80012b4 <print_AX25+0x260>)
 8001268:	f003 ff79 	bl	800515e <HAL_UART_Transmit>

	//Print Info Field
	curr_mem = (local_packet->Info);
 800126c:	68bb      	ldr	r3, [r7, #8]
 800126e:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001272:	331c      	adds	r3, #28
 8001274:	681b      	ldr	r3, [r3, #0]
 8001276:	627b      	str	r3, [r7, #36]	; 0x24
	for(int i = 0;i<(local_packet->Info_Len/8)-1;i++){
 8001278:	2300      	movs	r3, #0
 800127a:	613b      	str	r3, [r7, #16]
 800127c:	e057      	b.n	800132e <print_AX25+0x2da>
		sprintf(uartData, "Info Field %d    =",i+1)	;
 800127e:	693b      	ldr	r3, [r7, #16]
 8001280:	3301      	adds	r3, #1
 8001282:	461a      	mov	r2, r3
 8001284:	4911      	ldr	r1, [pc, #68]	; (80012cc <print_AX25+0x278>)
 8001286:	4809      	ldr	r0, [pc, #36]	; (80012ac <print_AX25+0x258>)
 8001288:	f004 ff52 	bl	8006130 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800128c:	4807      	ldr	r0, [pc, #28]	; (80012ac <print_AX25+0x258>)
 800128e:	f7fe ffbf 	bl	8000210 <strlen>
 8001292:	4603      	mov	r3, r0
 8001294:	b29a      	uxth	r2, r3
 8001296:	230a      	movs	r3, #10
 8001298:	4904      	ldr	r1, [pc, #16]	; (80012ac <print_AX25+0x258>)
 800129a:	4806      	ldr	r0, [pc, #24]	; (80012b4 <print_AX25+0x260>)
 800129c:	f003 ff5f 	bl	800515e <HAL_UART_Transmit>

		for(int j = 0;j<8;j++){
 80012a0:	2300      	movs	r3, #0
 80012a2:	60fb      	str	r3, [r7, #12]
 80012a4:	e02c      	b.n	8001300 <print_AX25+0x2ac>
 80012a6:	bf00      	nop
 80012a8:	200000b0 	.word	0x200000b0
 80012ac:	20001f3c 	.word	0x20001f3c
 80012b0:	08007854 	.word	0x08007854
 80012b4:	20003d60 	.word	0x20003d60
 80012b8:	0800788c 	.word	0x0800788c
 80012bc:	080078a0 	.word	0x080078a0
 80012c0:	080078a8 	.word	0x080078a8
 80012c4:	080078ac 	.word	0x080078ac
 80012c8:	080078c0 	.word	0x080078c0
 80012cc:	080078d4 	.word	0x080078d4
			sprintf(uartData, " %d ",*(curr_mem+8-j-1));
 80012d0:	68fb      	ldr	r3, [r7, #12]
 80012d2:	f1c3 0307 	rsb	r3, r3, #7
 80012d6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80012d8:	4413      	add	r3, r2
 80012da:	781b      	ldrb	r3, [r3, #0]
 80012dc:	461a      	mov	r2, r3
 80012de:	491c      	ldr	r1, [pc, #112]	; (8001350 <print_AX25+0x2fc>)
 80012e0:	481c      	ldr	r0, [pc, #112]	; (8001354 <print_AX25+0x300>)
 80012e2:	f004 ff25 	bl	8006130 <siprintf>
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80012e6:	481b      	ldr	r0, [pc, #108]	; (8001354 <print_AX25+0x300>)
 80012e8:	f7fe ff92 	bl	8000210 <strlen>
 80012ec:	4603      	mov	r3, r0
 80012ee:	b29a      	uxth	r2, r3
 80012f0:	230a      	movs	r3, #10
 80012f2:	4918      	ldr	r1, [pc, #96]	; (8001354 <print_AX25+0x300>)
 80012f4:	4818      	ldr	r0, [pc, #96]	; (8001358 <print_AX25+0x304>)
 80012f6:	f003 ff32 	bl	800515e <HAL_UART_Transmit>
		for(int j = 0;j<8;j++){
 80012fa:	68fb      	ldr	r3, [r7, #12]
 80012fc:	3301      	adds	r3, #1
 80012fe:	60fb      	str	r3, [r7, #12]
 8001300:	68fb      	ldr	r3, [r7, #12]
 8001302:	2b07      	cmp	r3, #7
 8001304:	dde4      	ble.n	80012d0 <print_AX25+0x27c>
		}
		curr_mem += 8;
 8001306:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001308:	3308      	adds	r3, #8
 800130a:	627b      	str	r3, [r7, #36]	; 0x24
		sprintf(uartData, "\n");
 800130c:	4a11      	ldr	r2, [pc, #68]	; (8001354 <print_AX25+0x300>)
 800130e:	4b13      	ldr	r3, [pc, #76]	; (800135c <print_AX25+0x308>)
 8001310:	881b      	ldrh	r3, [r3, #0]
 8001312:	8013      	strh	r3, [r2, #0]
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001314:	480f      	ldr	r0, [pc, #60]	; (8001354 <print_AX25+0x300>)
 8001316:	f7fe ff7b 	bl	8000210 <strlen>
 800131a:	4603      	mov	r3, r0
 800131c:	b29a      	uxth	r2, r3
 800131e:	230a      	movs	r3, #10
 8001320:	490c      	ldr	r1, [pc, #48]	; (8001354 <print_AX25+0x300>)
 8001322:	480d      	ldr	r0, [pc, #52]	; (8001358 <print_AX25+0x304>)
 8001324:	f003 ff1b 	bl	800515e <HAL_UART_Transmit>
	for(int i = 0;i<(local_packet->Info_Len/8)-1;i++){
 8001328:	693b      	ldr	r3, [r7, #16]
 800132a:	3301      	adds	r3, #1
 800132c:	613b      	str	r3, [r7, #16]
 800132e:	68bb      	ldr	r3, [r7, #8]
 8001330:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001334:	681b      	ldr	r3, [r3, #0]
 8001336:	2b00      	cmp	r3, #0
 8001338:	da00      	bge.n	800133c <print_AX25+0x2e8>
 800133a:	3307      	adds	r3, #7
 800133c:	10db      	asrs	r3, r3, #3
 800133e:	3b01      	subs	r3, #1
 8001340:	693a      	ldr	r2, [r7, #16]
 8001342:	429a      	cmp	r2, r3
 8001344:	db9b      	blt.n	800127e <print_AX25+0x22a>
//		}
//		curr_mem += 8;
//		sprintf(uartData, "\n");
//		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
//	}
}
 8001346:	bf00      	nop
 8001348:	372c      	adds	r7, #44	; 0x2c
 800134a:	46bd      	mov	sp, r7
 800134c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800134e:	bf00      	nop
 8001350:	080078a0 	.word	0x080078a0
 8001354:	20001f3c 	.word	0x20001f3c
 8001358:	20003d60 	.word	0x20003d60
 800135c:	080078a8 	.word	0x080078a8

08001360 <print_KISS>:
	struct UART_INPUT* local_UART_packet = &global_packet;

	HAL_UART_Transmit(&huart2, local_UART_packet->HEX_KISS_PACKET, KISS_SIZE, 10);
}

void print_KISS(){
 8001360:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001362:	b08d      	sub	sp, #52	; 0x34
 8001364:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001366:	4bad      	ldr	r3, [pc, #692]	; (800161c <print_KISS+0x2bc>)
 8001368:	60bb      	str	r3, [r7, #8]
	int bytecnt = local_packet->byte_cnt;
 800136a:	68bb      	ldr	r3, [r7, #8]
 800136c:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001370:	330c      	adds	r3, #12
 8001372:	681b      	ldr	r3, [r3, #0]
 8001374:	607b      	str	r3, [r7, #4]
	bool *curr_mem;
	sprintf(uartData, "\nPrinting KISS_PACKET... All fields printed [MSB:LSB]\n");
 8001376:	4baa      	ldr	r3, [pc, #680]	; (8001620 <print_KISS+0x2c0>)
 8001378:	4aaa      	ldr	r2, [pc, #680]	; (8001624 <print_KISS+0x2c4>)
 800137a:	4614      	mov	r4, r2
 800137c:	469c      	mov	ip, r3
 800137e:	f104 0e30 	add.w	lr, r4, #48	; 0x30
 8001382:	4665      	mov	r5, ip
 8001384:	4626      	mov	r6, r4
 8001386:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8001388:	6028      	str	r0, [r5, #0]
 800138a:	6069      	str	r1, [r5, #4]
 800138c:	60aa      	str	r2, [r5, #8]
 800138e:	60eb      	str	r3, [r5, #12]
 8001390:	3410      	adds	r4, #16
 8001392:	f10c 0c10 	add.w	ip, ip, #16
 8001396:	4574      	cmp	r4, lr
 8001398:	d1f3      	bne.n	8001382 <print_KISS+0x22>
 800139a:	4663      	mov	r3, ip
 800139c:	4622      	mov	r2, r4
 800139e:	6810      	ldr	r0, [r2, #0]
 80013a0:	6018      	str	r0, [r3, #0]
 80013a2:	8891      	ldrh	r1, [r2, #4]
 80013a4:	7992      	ldrb	r2, [r2, #6]
 80013a6:	8099      	strh	r1, [r3, #4]
 80013a8:	719a      	strb	r2, [r3, #6]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80013aa:	489d      	ldr	r0, [pc, #628]	; (8001620 <print_KISS+0x2c0>)
 80013ac:	f7fe ff30 	bl	8000210 <strlen>
 80013b0:	4603      	mov	r3, r0
 80013b2:	b29a      	uxth	r2, r3
 80013b4:	230a      	movs	r3, #10
 80013b6:	499a      	ldr	r1, [pc, #616]	; (8001620 <print_KISS+0x2c0>)
 80013b8:	489b      	ldr	r0, [pc, #620]	; (8001628 <print_KISS+0x2c8>)
 80013ba:	f003 fed0 	bl	800515e <HAL_UART_Transmit>

	//Print Start Flag
	curr_mem = (local_packet->address-16);//Subtract 16 to start at the flag start
 80013be:	68bb      	ldr	r3, [r7, #8]
 80013c0:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80013c4:	3310      	adds	r3, #16
 80013c6:	681b      	ldr	r3, [r3, #0]
 80013c8:	3b10      	subs	r3, #16
 80013ca:	62fb      	str	r3, [r7, #44]	; 0x2c
	sprintf(uartData, "Start flag      =");
 80013cc:	4a94      	ldr	r2, [pc, #592]	; (8001620 <print_KISS+0x2c0>)
 80013ce:	4b97      	ldr	r3, [pc, #604]	; (800162c <print_KISS+0x2cc>)
 80013d0:	4615      	mov	r5, r2
 80013d2:	461c      	mov	r4, r3
 80013d4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80013d6:	6028      	str	r0, [r5, #0]
 80013d8:	6069      	str	r1, [r5, #4]
 80013da:	60aa      	str	r2, [r5, #8]
 80013dc:	60eb      	str	r3, [r5, #12]
 80013de:	8823      	ldrh	r3, [r4, #0]
 80013e0:	822b      	strh	r3, [r5, #16]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80013e2:	488f      	ldr	r0, [pc, #572]	; (8001620 <print_KISS+0x2c0>)
 80013e4:	f7fe ff14 	bl	8000210 <strlen>
 80013e8:	4603      	mov	r3, r0
 80013ea:	b29a      	uxth	r2, r3
 80013ec:	230a      	movs	r3, #10
 80013ee:	498c      	ldr	r1, [pc, #560]	; (8001620 <print_KISS+0x2c0>)
 80013f0:	488d      	ldr	r0, [pc, #564]	; (8001628 <print_KISS+0x2c8>)
 80013f2:	f003 feb4 	bl	800515e <HAL_UART_Transmit>

	for(int i = 0;i<8;i++){
 80013f6:	2300      	movs	r3, #0
 80013f8:	62bb      	str	r3, [r7, #40]	; 0x28
 80013fa:	e017      	b.n	800142c <print_KISS+0xcc>
		sprintf(uartData, " %d ",*(curr_mem+8-i-1));
 80013fc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80013fe:	f1c3 0307 	rsb	r3, r3, #7
 8001402:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001404:	4413      	add	r3, r2
 8001406:	781b      	ldrb	r3, [r3, #0]
 8001408:	461a      	mov	r2, r3
 800140a:	4989      	ldr	r1, [pc, #548]	; (8001630 <print_KISS+0x2d0>)
 800140c:	4884      	ldr	r0, [pc, #528]	; (8001620 <print_KISS+0x2c0>)
 800140e:	f004 fe8f 	bl	8006130 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001412:	4883      	ldr	r0, [pc, #524]	; (8001620 <print_KISS+0x2c0>)
 8001414:	f7fe fefc 	bl	8000210 <strlen>
 8001418:	4603      	mov	r3, r0
 800141a:	b29a      	uxth	r2, r3
 800141c:	230a      	movs	r3, #10
 800141e:	4980      	ldr	r1, [pc, #512]	; (8001620 <print_KISS+0x2c0>)
 8001420:	4881      	ldr	r0, [pc, #516]	; (8001628 <print_KISS+0x2c8>)
 8001422:	f003 fe9c 	bl	800515e <HAL_UART_Transmit>
	for(int i = 0;i<8;i++){
 8001426:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001428:	3301      	adds	r3, #1
 800142a:	62bb      	str	r3, [r7, #40]	; 0x28
 800142c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800142e:	2b07      	cmp	r3, #7
 8001430:	dde4      	ble.n	80013fc <print_KISS+0x9c>
	}
	sprintf(uartData, "\n");
 8001432:	4a7b      	ldr	r2, [pc, #492]	; (8001620 <print_KISS+0x2c0>)
 8001434:	4b7f      	ldr	r3, [pc, #508]	; (8001634 <print_KISS+0x2d4>)
 8001436:	881b      	ldrh	r3, [r3, #0]
 8001438:	8013      	strh	r3, [r2, #0]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800143a:	4879      	ldr	r0, [pc, #484]	; (8001620 <print_KISS+0x2c0>)
 800143c:	f7fe fee8 	bl	8000210 <strlen>
 8001440:	4603      	mov	r3, r0
 8001442:	b29a      	uxth	r2, r3
 8001444:	230a      	movs	r3, #10
 8001446:	4976      	ldr	r1, [pc, #472]	; (8001620 <print_KISS+0x2c0>)
 8001448:	4877      	ldr	r0, [pc, #476]	; (8001628 <print_KISS+0x2c8>)
 800144a:	f003 fe88 	bl	800515e <HAL_UART_Transmit>

	//Print Address Field
	curr_mem = (local_packet->address);
 800144e:	68bb      	ldr	r3, [r7, #8]
 8001450:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001454:	3310      	adds	r3, #16
 8001456:	681b      	ldr	r3, [r3, #0]
 8001458:	62fb      	str	r3, [r7, #44]	; 0x2c
	for(int i = 0;i<address_len/8;i++){
 800145a:	2300      	movs	r3, #0
 800145c:	627b      	str	r3, [r7, #36]	; 0x24
 800145e:	e042      	b.n	80014e6 <print_KISS+0x186>
		sprintf(uartData, "Address Field %d =",i+1);
 8001460:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001462:	3301      	adds	r3, #1
 8001464:	461a      	mov	r2, r3
 8001466:	4974      	ldr	r1, [pc, #464]	; (8001638 <print_KISS+0x2d8>)
 8001468:	486d      	ldr	r0, [pc, #436]	; (8001620 <print_KISS+0x2c0>)
 800146a:	f004 fe61 	bl	8006130 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800146e:	486c      	ldr	r0, [pc, #432]	; (8001620 <print_KISS+0x2c0>)
 8001470:	f7fe fece 	bl	8000210 <strlen>
 8001474:	4603      	mov	r3, r0
 8001476:	b29a      	uxth	r2, r3
 8001478:	230a      	movs	r3, #10
 800147a:	4969      	ldr	r1, [pc, #420]	; (8001620 <print_KISS+0x2c0>)
 800147c:	486a      	ldr	r0, [pc, #424]	; (8001628 <print_KISS+0x2c8>)
 800147e:	f003 fe6e 	bl	800515e <HAL_UART_Transmit>

		for(int j = 0;j<8;j++){
 8001482:	2300      	movs	r3, #0
 8001484:	623b      	str	r3, [r7, #32]
 8001486:	e017      	b.n	80014b8 <print_KISS+0x158>
			sprintf(uartData, " %d ",*(curr_mem+8-j-1));
 8001488:	6a3b      	ldr	r3, [r7, #32]
 800148a:	f1c3 0307 	rsb	r3, r3, #7
 800148e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001490:	4413      	add	r3, r2
 8001492:	781b      	ldrb	r3, [r3, #0]
 8001494:	461a      	mov	r2, r3
 8001496:	4966      	ldr	r1, [pc, #408]	; (8001630 <print_KISS+0x2d0>)
 8001498:	4861      	ldr	r0, [pc, #388]	; (8001620 <print_KISS+0x2c0>)
 800149a:	f004 fe49 	bl	8006130 <siprintf>
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800149e:	4860      	ldr	r0, [pc, #384]	; (8001620 <print_KISS+0x2c0>)
 80014a0:	f7fe feb6 	bl	8000210 <strlen>
 80014a4:	4603      	mov	r3, r0
 80014a6:	b29a      	uxth	r2, r3
 80014a8:	230a      	movs	r3, #10
 80014aa:	495d      	ldr	r1, [pc, #372]	; (8001620 <print_KISS+0x2c0>)
 80014ac:	485e      	ldr	r0, [pc, #376]	; (8001628 <print_KISS+0x2c8>)
 80014ae:	f003 fe56 	bl	800515e <HAL_UART_Transmit>
		for(int j = 0;j<8;j++){
 80014b2:	6a3b      	ldr	r3, [r7, #32]
 80014b4:	3301      	adds	r3, #1
 80014b6:	623b      	str	r3, [r7, #32]
 80014b8:	6a3b      	ldr	r3, [r7, #32]
 80014ba:	2b07      	cmp	r3, #7
 80014bc:	dde4      	ble.n	8001488 <print_KISS+0x128>
		}
		curr_mem += 8;
 80014be:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80014c0:	3308      	adds	r3, #8
 80014c2:	62fb      	str	r3, [r7, #44]	; 0x2c
		sprintf(uartData, "\n");
 80014c4:	4a56      	ldr	r2, [pc, #344]	; (8001620 <print_KISS+0x2c0>)
 80014c6:	4b5b      	ldr	r3, [pc, #364]	; (8001634 <print_KISS+0x2d4>)
 80014c8:	881b      	ldrh	r3, [r3, #0]
 80014ca:	8013      	strh	r3, [r2, #0]
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80014cc:	4854      	ldr	r0, [pc, #336]	; (8001620 <print_KISS+0x2c0>)
 80014ce:	f7fe fe9f 	bl	8000210 <strlen>
 80014d2:	4603      	mov	r3, r0
 80014d4:	b29a      	uxth	r2, r3
 80014d6:	230a      	movs	r3, #10
 80014d8:	4951      	ldr	r1, [pc, #324]	; (8001620 <print_KISS+0x2c0>)
 80014da:	4853      	ldr	r0, [pc, #332]	; (8001628 <print_KISS+0x2c8>)
 80014dc:	f003 fe3f 	bl	800515e <HAL_UART_Transmit>
	for(int i = 0;i<address_len/8;i++){
 80014e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014e2:	3301      	adds	r3, #1
 80014e4:	627b      	str	r3, [r7, #36]	; 0x24
 80014e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014e8:	2b0d      	cmp	r3, #13
 80014ea:	ddb9      	ble.n	8001460 <print_KISS+0x100>
	}

	//Print Control Field
	curr_mem = (local_packet->control);//Subtract 8 to start at the flag start
 80014ec:	68bb      	ldr	r3, [r7, #8]
 80014ee:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80014f2:	3314      	adds	r3, #20
 80014f4:	681b      	ldr	r3, [r3, #0]
 80014f6:	62fb      	str	r3, [r7, #44]	; 0x2c
	sprintf(uartData, "Control Field   =");
 80014f8:	4a49      	ldr	r2, [pc, #292]	; (8001620 <print_KISS+0x2c0>)
 80014fa:	4b50      	ldr	r3, [pc, #320]	; (800163c <print_KISS+0x2dc>)
 80014fc:	4615      	mov	r5, r2
 80014fe:	461c      	mov	r4, r3
 8001500:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001502:	6028      	str	r0, [r5, #0]
 8001504:	6069      	str	r1, [r5, #4]
 8001506:	60aa      	str	r2, [r5, #8]
 8001508:	60eb      	str	r3, [r5, #12]
 800150a:	8823      	ldrh	r3, [r4, #0]
 800150c:	822b      	strh	r3, [r5, #16]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800150e:	4844      	ldr	r0, [pc, #272]	; (8001620 <print_KISS+0x2c0>)
 8001510:	f7fe fe7e 	bl	8000210 <strlen>
 8001514:	4603      	mov	r3, r0
 8001516:	b29a      	uxth	r2, r3
 8001518:	230a      	movs	r3, #10
 800151a:	4941      	ldr	r1, [pc, #260]	; (8001620 <print_KISS+0x2c0>)
 800151c:	4842      	ldr	r0, [pc, #264]	; (8001628 <print_KISS+0x2c8>)
 800151e:	f003 fe1e 	bl	800515e <HAL_UART_Transmit>

	for(int i = 0;i<8;i++){
 8001522:	2300      	movs	r3, #0
 8001524:	61fb      	str	r3, [r7, #28]
 8001526:	e017      	b.n	8001558 <print_KISS+0x1f8>
		sprintf(uartData, " %d ",*(curr_mem+8-i-1));
 8001528:	69fb      	ldr	r3, [r7, #28]
 800152a:	f1c3 0307 	rsb	r3, r3, #7
 800152e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001530:	4413      	add	r3, r2
 8001532:	781b      	ldrb	r3, [r3, #0]
 8001534:	461a      	mov	r2, r3
 8001536:	493e      	ldr	r1, [pc, #248]	; (8001630 <print_KISS+0x2d0>)
 8001538:	4839      	ldr	r0, [pc, #228]	; (8001620 <print_KISS+0x2c0>)
 800153a:	f004 fdf9 	bl	8006130 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800153e:	4838      	ldr	r0, [pc, #224]	; (8001620 <print_KISS+0x2c0>)
 8001540:	f7fe fe66 	bl	8000210 <strlen>
 8001544:	4603      	mov	r3, r0
 8001546:	b29a      	uxth	r2, r3
 8001548:	230a      	movs	r3, #10
 800154a:	4935      	ldr	r1, [pc, #212]	; (8001620 <print_KISS+0x2c0>)
 800154c:	4836      	ldr	r0, [pc, #216]	; (8001628 <print_KISS+0x2c8>)
 800154e:	f003 fe06 	bl	800515e <HAL_UART_Transmit>
	for(int i = 0;i<8;i++){
 8001552:	69fb      	ldr	r3, [r7, #28]
 8001554:	3301      	adds	r3, #1
 8001556:	61fb      	str	r3, [r7, #28]
 8001558:	69fb      	ldr	r3, [r7, #28]
 800155a:	2b07      	cmp	r3, #7
 800155c:	dde4      	ble.n	8001528 <print_KISS+0x1c8>
	}
	sprintf(uartData, "\n");
 800155e:	4a30      	ldr	r2, [pc, #192]	; (8001620 <print_KISS+0x2c0>)
 8001560:	4b34      	ldr	r3, [pc, #208]	; (8001634 <print_KISS+0x2d4>)
 8001562:	881b      	ldrh	r3, [r3, #0]
 8001564:	8013      	strh	r3, [r2, #0]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001566:	482e      	ldr	r0, [pc, #184]	; (8001620 <print_KISS+0x2c0>)
 8001568:	f7fe fe52 	bl	8000210 <strlen>
 800156c:	4603      	mov	r3, r0
 800156e:	b29a      	uxth	r2, r3
 8001570:	230a      	movs	r3, #10
 8001572:	492b      	ldr	r1, [pc, #172]	; (8001620 <print_KISS+0x2c0>)
 8001574:	482c      	ldr	r0, [pc, #176]	; (8001628 <print_KISS+0x2c8>)
 8001576:	f003 fdf2 	bl	800515e <HAL_UART_Transmit>

	//PID
	curr_mem = (local_packet->PID);//Subtract 8 to start at the flag start
 800157a:	68bb      	ldr	r3, [r7, #8]
 800157c:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001580:	3318      	adds	r3, #24
 8001582:	681b      	ldr	r3, [r3, #0]
 8001584:	62fb      	str	r3, [r7, #44]	; 0x2c
	sprintf(uartData, "PID Field       =");
 8001586:	4a26      	ldr	r2, [pc, #152]	; (8001620 <print_KISS+0x2c0>)
 8001588:	4b2d      	ldr	r3, [pc, #180]	; (8001640 <print_KISS+0x2e0>)
 800158a:	4615      	mov	r5, r2
 800158c:	461c      	mov	r4, r3
 800158e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001590:	6028      	str	r0, [r5, #0]
 8001592:	6069      	str	r1, [r5, #4]
 8001594:	60aa      	str	r2, [r5, #8]
 8001596:	60eb      	str	r3, [r5, #12]
 8001598:	8823      	ldrh	r3, [r4, #0]
 800159a:	822b      	strh	r3, [r5, #16]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800159c:	4820      	ldr	r0, [pc, #128]	; (8001620 <print_KISS+0x2c0>)
 800159e:	f7fe fe37 	bl	8000210 <strlen>
 80015a2:	4603      	mov	r3, r0
 80015a4:	b29a      	uxth	r2, r3
 80015a6:	230a      	movs	r3, #10
 80015a8:	491d      	ldr	r1, [pc, #116]	; (8001620 <print_KISS+0x2c0>)
 80015aa:	481f      	ldr	r0, [pc, #124]	; (8001628 <print_KISS+0x2c8>)
 80015ac:	f003 fdd7 	bl	800515e <HAL_UART_Transmit>

	for(int i = 0;i<8;i++){
 80015b0:	2300      	movs	r3, #0
 80015b2:	61bb      	str	r3, [r7, #24]
 80015b4:	e017      	b.n	80015e6 <print_KISS+0x286>
		sprintf(uartData, " %d ",*(curr_mem+8-i-1));
 80015b6:	69bb      	ldr	r3, [r7, #24]
 80015b8:	f1c3 0307 	rsb	r3, r3, #7
 80015bc:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80015be:	4413      	add	r3, r2
 80015c0:	781b      	ldrb	r3, [r3, #0]
 80015c2:	461a      	mov	r2, r3
 80015c4:	491a      	ldr	r1, [pc, #104]	; (8001630 <print_KISS+0x2d0>)
 80015c6:	4816      	ldr	r0, [pc, #88]	; (8001620 <print_KISS+0x2c0>)
 80015c8:	f004 fdb2 	bl	8006130 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80015cc:	4814      	ldr	r0, [pc, #80]	; (8001620 <print_KISS+0x2c0>)
 80015ce:	f7fe fe1f 	bl	8000210 <strlen>
 80015d2:	4603      	mov	r3, r0
 80015d4:	b29a      	uxth	r2, r3
 80015d6:	230a      	movs	r3, #10
 80015d8:	4911      	ldr	r1, [pc, #68]	; (8001620 <print_KISS+0x2c0>)
 80015da:	4813      	ldr	r0, [pc, #76]	; (8001628 <print_KISS+0x2c8>)
 80015dc:	f003 fdbf 	bl	800515e <HAL_UART_Transmit>
	for(int i = 0;i<8;i++){
 80015e0:	69bb      	ldr	r3, [r7, #24]
 80015e2:	3301      	adds	r3, #1
 80015e4:	61bb      	str	r3, [r7, #24]
 80015e6:	69bb      	ldr	r3, [r7, #24]
 80015e8:	2b07      	cmp	r3, #7
 80015ea:	dde4      	ble.n	80015b6 <print_KISS+0x256>
	}
	sprintf(uartData, "\n");
 80015ec:	4a0c      	ldr	r2, [pc, #48]	; (8001620 <print_KISS+0x2c0>)
 80015ee:	4b11      	ldr	r3, [pc, #68]	; (8001634 <print_KISS+0x2d4>)
 80015f0:	881b      	ldrh	r3, [r3, #0]
 80015f2:	8013      	strh	r3, [r2, #0]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80015f4:	480a      	ldr	r0, [pc, #40]	; (8001620 <print_KISS+0x2c0>)
 80015f6:	f7fe fe0b 	bl	8000210 <strlen>
 80015fa:	4603      	mov	r3, r0
 80015fc:	b29a      	uxth	r2, r3
 80015fe:	230a      	movs	r3, #10
 8001600:	4907      	ldr	r1, [pc, #28]	; (8001620 <print_KISS+0x2c0>)
 8001602:	4809      	ldr	r0, [pc, #36]	; (8001628 <print_KISS+0x2c8>)
 8001604:	f003 fdab 	bl	800515e <HAL_UART_Transmit>

	//Print Info Field
	curr_mem = (local_packet->Info);
 8001608:	68bb      	ldr	r3, [r7, #8]
 800160a:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 800160e:	331c      	adds	r3, #28
 8001610:	681b      	ldr	r3, [r3, #0]
 8001612:	62fb      	str	r3, [r7, #44]	; 0x2c
	for(int i = 0;i<(local_packet->Info_Len/8)-1;i++){
 8001614:	2300      	movs	r3, #0
 8001616:	617b      	str	r3, [r7, #20]
 8001618:	e057      	b.n	80016ca <print_KISS+0x36a>
 800161a:	bf00      	nop
 800161c:	200000b0 	.word	0x200000b0
 8001620:	20001f3c 	.word	0x20001f3c
 8001624:	080078e8 	.word	0x080078e8
 8001628:	20003d60 	.word	0x20003d60
 800162c:	08007920 	.word	0x08007920
 8001630:	080078a0 	.word	0x080078a0
 8001634:	080078a8 	.word	0x080078a8
 8001638:	0800788c 	.word	0x0800788c
 800163c:	080078ac 	.word	0x080078ac
 8001640:	080078c0 	.word	0x080078c0
		sprintf(uartData, "Info Field %d    =",i+1)	;
 8001644:	697b      	ldr	r3, [r7, #20]
 8001646:	3301      	adds	r3, #1
 8001648:	461a      	mov	r2, r3
 800164a:	494e      	ldr	r1, [pc, #312]	; (8001784 <print_KISS+0x424>)
 800164c:	484e      	ldr	r0, [pc, #312]	; (8001788 <print_KISS+0x428>)
 800164e:	f004 fd6f 	bl	8006130 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001652:	484d      	ldr	r0, [pc, #308]	; (8001788 <print_KISS+0x428>)
 8001654:	f7fe fddc 	bl	8000210 <strlen>
 8001658:	4603      	mov	r3, r0
 800165a:	b29a      	uxth	r2, r3
 800165c:	230a      	movs	r3, #10
 800165e:	494a      	ldr	r1, [pc, #296]	; (8001788 <print_KISS+0x428>)
 8001660:	484a      	ldr	r0, [pc, #296]	; (800178c <print_KISS+0x42c>)
 8001662:	f003 fd7c 	bl	800515e <HAL_UART_Transmit>

		for(int j = 0;j<8;j++){
 8001666:	2300      	movs	r3, #0
 8001668:	613b      	str	r3, [r7, #16]
 800166a:	e017      	b.n	800169c <print_KISS+0x33c>
			sprintf(uartData, " %d ",*(curr_mem+8-j-1));
 800166c:	693b      	ldr	r3, [r7, #16]
 800166e:	f1c3 0307 	rsb	r3, r3, #7
 8001672:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001674:	4413      	add	r3, r2
 8001676:	781b      	ldrb	r3, [r3, #0]
 8001678:	461a      	mov	r2, r3
 800167a:	4945      	ldr	r1, [pc, #276]	; (8001790 <print_KISS+0x430>)
 800167c:	4842      	ldr	r0, [pc, #264]	; (8001788 <print_KISS+0x428>)
 800167e:	f004 fd57 	bl	8006130 <siprintf>
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001682:	4841      	ldr	r0, [pc, #260]	; (8001788 <print_KISS+0x428>)
 8001684:	f7fe fdc4 	bl	8000210 <strlen>
 8001688:	4603      	mov	r3, r0
 800168a:	b29a      	uxth	r2, r3
 800168c:	230a      	movs	r3, #10
 800168e:	493e      	ldr	r1, [pc, #248]	; (8001788 <print_KISS+0x428>)
 8001690:	483e      	ldr	r0, [pc, #248]	; (800178c <print_KISS+0x42c>)
 8001692:	f003 fd64 	bl	800515e <HAL_UART_Transmit>
		for(int j = 0;j<8;j++){
 8001696:	693b      	ldr	r3, [r7, #16]
 8001698:	3301      	adds	r3, #1
 800169a:	613b      	str	r3, [r7, #16]
 800169c:	693b      	ldr	r3, [r7, #16]
 800169e:	2b07      	cmp	r3, #7
 80016a0:	dde4      	ble.n	800166c <print_KISS+0x30c>
		}
		curr_mem += 8;
 80016a2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80016a4:	3308      	adds	r3, #8
 80016a6:	62fb      	str	r3, [r7, #44]	; 0x2c
		sprintf(uartData, "\n");
 80016a8:	4a37      	ldr	r2, [pc, #220]	; (8001788 <print_KISS+0x428>)
 80016aa:	4b3a      	ldr	r3, [pc, #232]	; (8001794 <print_KISS+0x434>)
 80016ac:	881b      	ldrh	r3, [r3, #0]
 80016ae:	8013      	strh	r3, [r2, #0]
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80016b0:	4835      	ldr	r0, [pc, #212]	; (8001788 <print_KISS+0x428>)
 80016b2:	f7fe fdad 	bl	8000210 <strlen>
 80016b6:	4603      	mov	r3, r0
 80016b8:	b29a      	uxth	r2, r3
 80016ba:	230a      	movs	r3, #10
 80016bc:	4932      	ldr	r1, [pc, #200]	; (8001788 <print_KISS+0x428>)
 80016be:	4833      	ldr	r0, [pc, #204]	; (800178c <print_KISS+0x42c>)
 80016c0:	f003 fd4d 	bl	800515e <HAL_UART_Transmit>
	for(int i = 0;i<(local_packet->Info_Len/8)-1;i++){
 80016c4:	697b      	ldr	r3, [r7, #20]
 80016c6:	3301      	adds	r3, #1
 80016c8:	617b      	str	r3, [r7, #20]
 80016ca:	68bb      	ldr	r3, [r7, #8]
 80016cc:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80016d0:	681b      	ldr	r3, [r3, #0]
 80016d2:	2b00      	cmp	r3, #0
 80016d4:	da00      	bge.n	80016d8 <print_KISS+0x378>
 80016d6:	3307      	adds	r3, #7
 80016d8:	10db      	asrs	r3, r3, #3
 80016da:	3b01      	subs	r3, #1
 80016dc:	697a      	ldr	r2, [r7, #20]
 80016de:	429a      	cmp	r2, r3
 80016e0:	dbb0      	blt.n	8001644 <print_KISS+0x2e4>
	}

	//Print Stop Flag
	curr_mem = (local_packet->KISS_PACKET+(8*(local_packet->byte_cnt-1)));
 80016e2:	68bb      	ldr	r3, [r7, #8]
 80016e4:	f603 225f 	addw	r2, r3, #2655	; 0xa5f
 80016e8:	68bb      	ldr	r3, [r7, #8]
 80016ea:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80016ee:	330c      	adds	r3, #12
 80016f0:	681b      	ldr	r3, [r3, #0]
 80016f2:	3b01      	subs	r3, #1
 80016f4:	00db      	lsls	r3, r3, #3
 80016f6:	4413      	add	r3, r2
 80016f8:	62fb      	str	r3, [r7, #44]	; 0x2c
	sprintf(uartData, "Stop flag       =");
 80016fa:	4a23      	ldr	r2, [pc, #140]	; (8001788 <print_KISS+0x428>)
 80016fc:	4b26      	ldr	r3, [pc, #152]	; (8001798 <print_KISS+0x438>)
 80016fe:	4615      	mov	r5, r2
 8001700:	461c      	mov	r4, r3
 8001702:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001704:	6028      	str	r0, [r5, #0]
 8001706:	6069      	str	r1, [r5, #4]
 8001708:	60aa      	str	r2, [r5, #8]
 800170a:	60eb      	str	r3, [r5, #12]
 800170c:	8823      	ldrh	r3, [r4, #0]
 800170e:	822b      	strh	r3, [r5, #16]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001710:	481d      	ldr	r0, [pc, #116]	; (8001788 <print_KISS+0x428>)
 8001712:	f7fe fd7d 	bl	8000210 <strlen>
 8001716:	4603      	mov	r3, r0
 8001718:	b29a      	uxth	r2, r3
 800171a:	230a      	movs	r3, #10
 800171c:	491a      	ldr	r1, [pc, #104]	; (8001788 <print_KISS+0x428>)
 800171e:	481b      	ldr	r0, [pc, #108]	; (800178c <print_KISS+0x42c>)
 8001720:	f003 fd1d 	bl	800515e <HAL_UART_Transmit>

	for(int i = 0;i<8;i++){
 8001724:	2300      	movs	r3, #0
 8001726:	60fb      	str	r3, [r7, #12]
 8001728:	e017      	b.n	800175a <print_KISS+0x3fa>
		sprintf(uartData, " %d ",*(curr_mem+8-i-1));
 800172a:	68fb      	ldr	r3, [r7, #12]
 800172c:	f1c3 0307 	rsb	r3, r3, #7
 8001730:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001732:	4413      	add	r3, r2
 8001734:	781b      	ldrb	r3, [r3, #0]
 8001736:	461a      	mov	r2, r3
 8001738:	4915      	ldr	r1, [pc, #84]	; (8001790 <print_KISS+0x430>)
 800173a:	4813      	ldr	r0, [pc, #76]	; (8001788 <print_KISS+0x428>)
 800173c:	f004 fcf8 	bl	8006130 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001740:	4811      	ldr	r0, [pc, #68]	; (8001788 <print_KISS+0x428>)
 8001742:	f7fe fd65 	bl	8000210 <strlen>
 8001746:	4603      	mov	r3, r0
 8001748:	b29a      	uxth	r2, r3
 800174a:	230a      	movs	r3, #10
 800174c:	490e      	ldr	r1, [pc, #56]	; (8001788 <print_KISS+0x428>)
 800174e:	480f      	ldr	r0, [pc, #60]	; (800178c <print_KISS+0x42c>)
 8001750:	f003 fd05 	bl	800515e <HAL_UART_Transmit>
	for(int i = 0;i<8;i++){
 8001754:	68fb      	ldr	r3, [r7, #12]
 8001756:	3301      	adds	r3, #1
 8001758:	60fb      	str	r3, [r7, #12]
 800175a:	68fb      	ldr	r3, [r7, #12]
 800175c:	2b07      	cmp	r3, #7
 800175e:	dde4      	ble.n	800172a <print_KISS+0x3ca>
	}
	sprintf(uartData, "\n");
 8001760:	4a09      	ldr	r2, [pc, #36]	; (8001788 <print_KISS+0x428>)
 8001762:	4b0c      	ldr	r3, [pc, #48]	; (8001794 <print_KISS+0x434>)
 8001764:	881b      	ldrh	r3, [r3, #0]
 8001766:	8013      	strh	r3, [r2, #0]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001768:	4807      	ldr	r0, [pc, #28]	; (8001788 <print_KISS+0x428>)
 800176a:	f7fe fd51 	bl	8000210 <strlen>
 800176e:	4603      	mov	r3, r0
 8001770:	b29a      	uxth	r2, r3
 8001772:	230a      	movs	r3, #10
 8001774:	4904      	ldr	r1, [pc, #16]	; (8001788 <print_KISS+0x428>)
 8001776:	4805      	ldr	r0, [pc, #20]	; (800178c <print_KISS+0x42c>)
 8001778:	f003 fcf1 	bl	800515e <HAL_UART_Transmit>

}
 800177c:	bf00      	nop
 800177e:	3734      	adds	r7, #52	; 0x34
 8001780:	46bd      	mov	sp, r7
 8001782:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001784:	080078d4 	.word	0x080078d4
 8001788:	20001f3c 	.word	0x20001f3c
 800178c:	20003d60 	.word	0x20003d60
 8001790:	080078a0 	.word	0x080078a0
 8001794:	080078a8 	.word	0x080078a8
 8001798:	08007934 	.word	0x08007934

0800179c <UART2_EXCEPTION_CALLBACK>:
//UART Handling data flow
//****************************************************************************************************************
void UART2_EXCEPTION_CALLBACK(){
 800179c:	b580      	push	{r7, lr}
 800179e:	af00      	add	r7, sp, #0
	HAL_UART_Receive_IT(&huart2, &(UART_packet.input), UART_RX_IT_CNT);//Reset
 80017a0:	2201      	movs	r2, #1
 80017a2:	491d      	ldr	r1, [pc, #116]	; (8001818 <UART2_EXCEPTION_CALLBACK+0x7c>)
 80017a4:	481d      	ldr	r0, [pc, #116]	; (800181c <UART2_EXCEPTION_CALLBACK+0x80>)
 80017a6:	f003 fd73 	bl	8005290 <HAL_UART_Receive_IT>
	UART_packet.got_packet = false;
 80017aa:	4b1d      	ldr	r3, [pc, #116]	; (8001820 <UART2_EXCEPTION_CALLBACK+0x84>)
 80017ac:	2200      	movs	r2, #0
 80017ae:	735a      	strb	r2, [r3, #13]

	  if(UART_packet.input==0xc0){
 80017b0:	4b1b      	ldr	r3, [pc, #108]	; (8001820 <UART2_EXCEPTION_CALLBACK+0x84>)
 80017b2:	7b1b      	ldrb	r3, [r3, #12]
 80017b4:	2bc0      	cmp	r3, #192	; 0xc0
 80017b6:	d104      	bne.n	80017c2 <UART2_EXCEPTION_CALLBACK+0x26>
		  UART_packet.flags++;
 80017b8:	4b19      	ldr	r3, [pc, #100]	; (8001820 <UART2_EXCEPTION_CALLBACK+0x84>)
 80017ba:	689b      	ldr	r3, [r3, #8]
 80017bc:	3301      	adds	r3, #1
 80017be:	4a18      	ldr	r2, [pc, #96]	; (8001820 <UART2_EXCEPTION_CALLBACK+0x84>)
 80017c0:	6093      	str	r3, [r2, #8]
	  }

	  *(UART_packet.HEX_KISS_PACKET+UART_packet.rx_cnt) = UART_packet.input;
 80017c2:	4b17      	ldr	r3, [pc, #92]	; (8001820 <UART2_EXCEPTION_CALLBACK+0x84>)
 80017c4:	681b      	ldr	r3, [r3, #0]
 80017c6:	461a      	mov	r2, r3
 80017c8:	4b16      	ldr	r3, [pc, #88]	; (8001824 <UART2_EXCEPTION_CALLBACK+0x88>)
 80017ca:	4413      	add	r3, r2
 80017cc:	4a14      	ldr	r2, [pc, #80]	; (8001820 <UART2_EXCEPTION_CALLBACK+0x84>)
 80017ce:	7b12      	ldrb	r2, [r2, #12]
 80017d0:	701a      	strb	r2, [r3, #0]
	  UART_packet.rx_cnt++;
 80017d2:	4b13      	ldr	r3, [pc, #76]	; (8001820 <UART2_EXCEPTION_CALLBACK+0x84>)
 80017d4:	681b      	ldr	r3, [r3, #0]
 80017d6:	3301      	adds	r3, #1
 80017d8:	4a11      	ldr	r2, [pc, #68]	; (8001820 <UART2_EXCEPTION_CALLBACK+0x84>)
 80017da:	6013      	str	r3, [r2, #0]

	  if(UART_packet.flags>=2){
 80017dc:	4b10      	ldr	r3, [pc, #64]	; (8001820 <UART2_EXCEPTION_CALLBACK+0x84>)
 80017de:	689b      	ldr	r3, [r3, #8]
 80017e0:	2b01      	cmp	r3, #1
 80017e2:	dd16      	ble.n	8001812 <UART2_EXCEPTION_CALLBACK+0x76>
		  if(!mode){
 80017e4:	4b10      	ldr	r3, [pc, #64]	; (8001828 <UART2_EXCEPTION_CALLBACK+0x8c>)
 80017e6:	781b      	ldrb	r3, [r3, #0]
 80017e8:	f083 0301 	eor.w	r3, r3, #1
 80017ec:	b2db      	uxtb	r3, r3
 80017ee:	2b00      	cmp	r3, #0
 80017f0:	d002      	beq.n	80017f8 <UART2_EXCEPTION_CALLBACK+0x5c>
			  changeMode = true;
 80017f2:	4b0e      	ldr	r3, [pc, #56]	; (800182c <UART2_EXCEPTION_CALLBACK+0x90>)
 80017f4:	2201      	movs	r2, #1
 80017f6:	701a      	strb	r2, [r3, #0]
		  }
		  UART_packet.flags = 0;
 80017f8:	4b09      	ldr	r3, [pc, #36]	; (8001820 <UART2_EXCEPTION_CALLBACK+0x84>)
 80017fa:	2200      	movs	r2, #0
 80017fc:	609a      	str	r2, [r3, #8]
		  UART_packet.got_packet = true;
 80017fe:	4b08      	ldr	r3, [pc, #32]	; (8001820 <UART2_EXCEPTION_CALLBACK+0x84>)
 8001800:	2201      	movs	r2, #1
 8001802:	735a      	strb	r2, [r3, #13]
		  UART_packet.received_byte_cnt = UART_packet.rx_cnt;
 8001804:	4b06      	ldr	r3, [pc, #24]	; (8001820 <UART2_EXCEPTION_CALLBACK+0x84>)
 8001806:	681b      	ldr	r3, [r3, #0]
 8001808:	4a05      	ldr	r2, [pc, #20]	; (8001820 <UART2_EXCEPTION_CALLBACK+0x84>)
 800180a:	6053      	str	r3, [r2, #4]
		  UART_packet.rx_cnt=0;
 800180c:	4b04      	ldr	r3, [pc, #16]	; (8001820 <UART2_EXCEPTION_CALLBACK+0x84>)
 800180e:	2200      	movs	r2, #0
 8001810:	601a      	str	r2, [r3, #0]

	  }
}
 8001812:	bf00      	nop
 8001814:	bd80      	pop	{r7, pc}
 8001816:	bf00      	nop
 8001818:	20001418 	.word	0x20001418
 800181c:	20003d60 	.word	0x20003d60
 8001820:	2000140c 	.word	0x2000140c
 8001824:	2000141a 	.word	0x2000141a
 8001828:	20003d08 	.word	0x20003d08
 800182c:	20000099 	.word	0x20000099

08001830 <set_packet_pointer_AX25>:
	}

//	return true; //valid packet
}

void set_packet_pointer_AX25(){
 8001830:	b5b0      	push	{r4, r5, r7, lr}
 8001832:	b084      	sub	sp, #16
 8001834:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001836:	4b66      	ldr	r3, [pc, #408]	; (80019d0 <set_packet_pointer_AX25+0x1a0>)
 8001838:	60fb      	str	r3, [r7, #12]
	int not_info = FCS_len;
 800183a:	2310      	movs	r3, #16
 800183c:	60bb      	str	r3, [r7, #8]

	sprintf(uartData, "Setting pointer to AX25\n");
 800183e:	4a65      	ldr	r2, [pc, #404]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 8001840:	4b65      	ldr	r3, [pc, #404]	; (80019d8 <set_packet_pointer_AX25+0x1a8>)
 8001842:	4615      	mov	r5, r2
 8001844:	461c      	mov	r4, r3
 8001846:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001848:	6028      	str	r0, [r5, #0]
 800184a:	6069      	str	r1, [r5, #4]
 800184c:	60aa      	str	r2, [r5, #8]
 800184e:	60eb      	str	r3, [r5, #12]
 8001850:	cc03      	ldmia	r4!, {r0, r1}
 8001852:	6128      	str	r0, [r5, #16]
 8001854:	6169      	str	r1, [r5, #20]
 8001856:	7823      	ldrb	r3, [r4, #0]
 8001858:	762b      	strb	r3, [r5, #24]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800185a:	485e      	ldr	r0, [pc, #376]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 800185c:	f7fe fcd8 	bl	8000210 <strlen>
 8001860:	4603      	mov	r3, r0
 8001862:	b29a      	uxth	r2, r3
 8001864:	230a      	movs	r3, #10
 8001866:	495b      	ldr	r1, [pc, #364]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 8001868:	485c      	ldr	r0, [pc, #368]	; (80019dc <set_packet_pointer_AX25+0x1ac>)
 800186a:	f003 fc78 	bl	800515e <HAL_UART_Transmit>
	bool *curr_mem = &local_packet->AX25_PACKET;
 800186e:	68fb      	ldr	r3, [r7, #12]
 8001870:	607b      	str	r3, [r7, #4]

	sprintf(uartData, "Setting pointer to address\n");
 8001872:	4a58      	ldr	r2, [pc, #352]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 8001874:	4b5a      	ldr	r3, [pc, #360]	; (80019e0 <set_packet_pointer_AX25+0x1b0>)
 8001876:	4615      	mov	r5, r2
 8001878:	461c      	mov	r4, r3
 800187a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800187c:	6028      	str	r0, [r5, #0]
 800187e:	6069      	str	r1, [r5, #4]
 8001880:	60aa      	str	r2, [r5, #8]
 8001882:	60eb      	str	r3, [r5, #12]
 8001884:	cc07      	ldmia	r4!, {r0, r1, r2}
 8001886:	6128      	str	r0, [r5, #16]
 8001888:	6169      	str	r1, [r5, #20]
 800188a:	61aa      	str	r2, [r5, #24]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800188c:	4851      	ldr	r0, [pc, #324]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 800188e:	f7fe fcbf 	bl	8000210 <strlen>
 8001892:	4603      	mov	r3, r0
 8001894:	b29a      	uxth	r2, r3
 8001896:	230a      	movs	r3, #10
 8001898:	494e      	ldr	r1, [pc, #312]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 800189a:	4850      	ldr	r0, [pc, #320]	; (80019dc <set_packet_pointer_AX25+0x1ac>)
 800189c:	f003 fc5f 	bl	800515e <HAL_UART_Transmit>
	local_packet->address = curr_mem;
 80018a0:	68fb      	ldr	r3, [r7, #12]
 80018a2:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80018a6:	3310      	adds	r3, #16
 80018a8:	687a      	ldr	r2, [r7, #4]
 80018aa:	601a      	str	r2, [r3, #0]
	curr_mem += address_len;
 80018ac:	687b      	ldr	r3, [r7, #4]
 80018ae:	3370      	adds	r3, #112	; 0x70
 80018b0:	607b      	str	r3, [r7, #4]
	not_info += address_len;
 80018b2:	68bb      	ldr	r3, [r7, #8]
 80018b4:	3370      	adds	r3, #112	; 0x70
 80018b6:	60bb      	str	r3, [r7, #8]

	sprintf(uartData, "Setting pointer to control\n");
 80018b8:	4a46      	ldr	r2, [pc, #280]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 80018ba:	4b4a      	ldr	r3, [pc, #296]	; (80019e4 <set_packet_pointer_AX25+0x1b4>)
 80018bc:	4615      	mov	r5, r2
 80018be:	461c      	mov	r4, r3
 80018c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80018c2:	6028      	str	r0, [r5, #0]
 80018c4:	6069      	str	r1, [r5, #4]
 80018c6:	60aa      	str	r2, [r5, #8]
 80018c8:	60eb      	str	r3, [r5, #12]
 80018ca:	cc07      	ldmia	r4!, {r0, r1, r2}
 80018cc:	6128      	str	r0, [r5, #16]
 80018ce:	6169      	str	r1, [r5, #20]
 80018d0:	61aa      	str	r2, [r5, #24]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80018d2:	4840      	ldr	r0, [pc, #256]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 80018d4:	f7fe fc9c 	bl	8000210 <strlen>
 80018d8:	4603      	mov	r3, r0
 80018da:	b29a      	uxth	r2, r3
 80018dc:	230a      	movs	r3, #10
 80018de:	493d      	ldr	r1, [pc, #244]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 80018e0:	483e      	ldr	r0, [pc, #248]	; (80019dc <set_packet_pointer_AX25+0x1ac>)
 80018e2:	f003 fc3c 	bl	800515e <HAL_UART_Transmit>
	local_packet->control = curr_mem;
 80018e6:	68fb      	ldr	r3, [r7, #12]
 80018e8:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80018ec:	3314      	adds	r3, #20
 80018ee:	687a      	ldr	r2, [r7, #4]
 80018f0:	601a      	str	r2, [r3, #0]
	curr_mem += control_len;
 80018f2:	687b      	ldr	r3, [r7, #4]
 80018f4:	3308      	adds	r3, #8
 80018f6:	607b      	str	r3, [r7, #4]
	not_info += control_len;
 80018f8:	68bb      	ldr	r3, [r7, #8]
 80018fa:	3308      	adds	r3, #8
 80018fc:	60bb      	str	r3, [r7, #8]

	sprintf(uartData, "Setting pointer to PID\n");
 80018fe:	4a35      	ldr	r2, [pc, #212]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 8001900:	4b39      	ldr	r3, [pc, #228]	; (80019e8 <set_packet_pointer_AX25+0x1b8>)
 8001902:	4615      	mov	r5, r2
 8001904:	461c      	mov	r4, r3
 8001906:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001908:	6028      	str	r0, [r5, #0]
 800190a:	6069      	str	r1, [r5, #4]
 800190c:	60aa      	str	r2, [r5, #8]
 800190e:	60eb      	str	r3, [r5, #12]
 8001910:	cc03      	ldmia	r4!, {r0, r1}
 8001912:	6128      	str	r0, [r5, #16]
 8001914:	6169      	str	r1, [r5, #20]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001916:	482f      	ldr	r0, [pc, #188]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 8001918:	f7fe fc7a 	bl	8000210 <strlen>
 800191c:	4603      	mov	r3, r0
 800191e:	b29a      	uxth	r2, r3
 8001920:	230a      	movs	r3, #10
 8001922:	492c      	ldr	r1, [pc, #176]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 8001924:	482d      	ldr	r0, [pc, #180]	; (80019dc <set_packet_pointer_AX25+0x1ac>)
 8001926:	f003 fc1a 	bl	800515e <HAL_UART_Transmit>
	local_packet->PID = curr_mem;
 800192a:	68fb      	ldr	r3, [r7, #12]
 800192c:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001930:	3318      	adds	r3, #24
 8001932:	687a      	ldr	r2, [r7, #4]
 8001934:	601a      	str	r2, [r3, #0]
	curr_mem += PID_len;
 8001936:	687b      	ldr	r3, [r7, #4]
 8001938:	3308      	adds	r3, #8
 800193a:	607b      	str	r3, [r7, #4]
	not_info += PID_len;
 800193c:	68bb      	ldr	r3, [r7, #8]
 800193e:	3308      	adds	r3, #8
 8001940:	60bb      	str	r3, [r7, #8]

	sprintf(uartData, "Setting pointer to Info\n");
 8001942:	4a24      	ldr	r2, [pc, #144]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 8001944:	4b29      	ldr	r3, [pc, #164]	; (80019ec <set_packet_pointer_AX25+0x1bc>)
 8001946:	4615      	mov	r5, r2
 8001948:	461c      	mov	r4, r3
 800194a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800194c:	6028      	str	r0, [r5, #0]
 800194e:	6069      	str	r1, [r5, #4]
 8001950:	60aa      	str	r2, [r5, #8]
 8001952:	60eb      	str	r3, [r5, #12]
 8001954:	cc03      	ldmia	r4!, {r0, r1}
 8001956:	6128      	str	r0, [r5, #16]
 8001958:	6169      	str	r1, [r5, #20]
 800195a:	7823      	ldrb	r3, [r4, #0]
 800195c:	762b      	strb	r3, [r5, #24]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800195e:	481d      	ldr	r0, [pc, #116]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 8001960:	f7fe fc56 	bl	8000210 <strlen>
 8001964:	4603      	mov	r3, r0
 8001966:	b29a      	uxth	r2, r3
 8001968:	230a      	movs	r3, #10
 800196a:	491a      	ldr	r1, [pc, #104]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 800196c:	481b      	ldr	r0, [pc, #108]	; (80019dc <set_packet_pointer_AX25+0x1ac>)
 800196e:	f003 fbf6 	bl	800515e <HAL_UART_Transmit>
	local_packet->Info = curr_mem;
 8001972:	68fb      	ldr	r3, [r7, #12]
 8001974:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001978:	331c      	adds	r3, #28
 800197a:	687a      	ldr	r2, [r7, #4]
 800197c:	601a      	str	r2, [r3, #0]
	curr_mem += local_packet->Info_Len;
 800197e:	68fb      	ldr	r3, [r7, #12]
 8001980:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001984:	681b      	ldr	r3, [r3, #0]
 8001986:	461a      	mov	r2, r3
 8001988:	687b      	ldr	r3, [r7, #4]
 800198a:	4413      	add	r3, r2
 800198c:	607b      	str	r3, [r7, #4]

	sprintf(uartData, "Setting pointer to PID\n");
 800198e:	4a11      	ldr	r2, [pc, #68]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 8001990:	4b15      	ldr	r3, [pc, #84]	; (80019e8 <set_packet_pointer_AX25+0x1b8>)
 8001992:	4615      	mov	r5, r2
 8001994:	461c      	mov	r4, r3
 8001996:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001998:	6028      	str	r0, [r5, #0]
 800199a:	6069      	str	r1, [r5, #4]
 800199c:	60aa      	str	r2, [r5, #8]
 800199e:	60eb      	str	r3, [r5, #12]
 80019a0:	cc03      	ldmia	r4!, {r0, r1}
 80019a2:	6128      	str	r0, [r5, #16]
 80019a4:	6169      	str	r1, [r5, #20]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80019a6:	480b      	ldr	r0, [pc, #44]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 80019a8:	f7fe fc32 	bl	8000210 <strlen>
 80019ac:	4603      	mov	r3, r0
 80019ae:	b29a      	uxth	r2, r3
 80019b0:	230a      	movs	r3, #10
 80019b2:	4908      	ldr	r1, [pc, #32]	; (80019d4 <set_packet_pointer_AX25+0x1a4>)
 80019b4:	4809      	ldr	r0, [pc, #36]	; (80019dc <set_packet_pointer_AX25+0x1ac>)
 80019b6:	f003 fbd2 	bl	800515e <HAL_UART_Transmit>
	local_packet->FCS = curr_mem;
 80019ba:	68fb      	ldr	r3, [r7, #12]
 80019bc:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80019c0:	3304      	adds	r3, #4
 80019c2:	687a      	ldr	r2, [r7, #4]
 80019c4:	601a      	str	r2, [r3, #0]
}
 80019c6:	bf00      	nop
 80019c8:	3710      	adds	r7, #16
 80019ca:	46bd      	mov	sp, r7
 80019cc:	bdb0      	pop	{r4, r5, r7, pc}
 80019ce:	bf00      	nop
 80019d0:	200000b0 	.word	0x200000b0
 80019d4:	20001f3c 	.word	0x20001f3c
 80019d8:	08007a68 	.word	0x08007a68
 80019dc:	20003d60 	.word	0x20003d60
 80019e0:	08007a84 	.word	0x08007a84
 80019e4:	08007aa0 	.word	0x08007aa0
 80019e8:	08007abc 	.word	0x08007abc
 80019ec:	08007ad4 	.word	0x08007ad4

080019f0 <clear_AX25>:

	KISS_TO_HEX();


}
void clear_AX25(){
 80019f0:	b5b0      	push	{r4, r5, r7, lr}
 80019f2:	b082      	sub	sp, #8
 80019f4:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 80019f6:	4b19      	ldr	r3, [pc, #100]	; (8001a5c <clear_AX25+0x6c>)
 80019f8:	607b      	str	r3, [r7, #4]
	sprintf(uartData, "Clearing AX.25 packet info\n");
 80019fa:	4a19      	ldr	r2, [pc, #100]	; (8001a60 <clear_AX25+0x70>)
 80019fc:	4b19      	ldr	r3, [pc, #100]	; (8001a64 <clear_AX25+0x74>)
 80019fe:	4615      	mov	r5, r2
 8001a00:	461c      	mov	r4, r3
 8001a02:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001a04:	6028      	str	r0, [r5, #0]
 8001a06:	6069      	str	r1, [r5, #4]
 8001a08:	60aa      	str	r2, [r5, #8]
 8001a0a:	60eb      	str	r3, [r5, #12]
 8001a0c:	cc07      	ldmia	r4!, {r0, r1, r2}
 8001a0e:	6128      	str	r0, [r5, #16]
 8001a10:	6169      	str	r1, [r5, #20]
 8001a12:	61aa      	str	r2, [r5, #24]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001a14:	4812      	ldr	r0, [pc, #72]	; (8001a60 <clear_AX25+0x70>)
 8001a16:	f7fe fbfb 	bl	8000210 <strlen>
 8001a1a:	4603      	mov	r3, r0
 8001a1c:	b29a      	uxth	r2, r3
 8001a1e:	230a      	movs	r3, #10
 8001a20:	490f      	ldr	r1, [pc, #60]	; (8001a60 <clear_AX25+0x70>)
 8001a22:	4811      	ldr	r0, [pc, #68]	; (8001a68 <clear_AX25+0x78>)
 8001a24:	f003 fb9b 	bl	800515e <HAL_UART_Transmit>

	free(local_packet->FCS);		   //deallocate memory for FCS Field
 8001a28:	687b      	ldr	r3, [r7, #4]
 8001a2a:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001a2e:	3304      	adds	r3, #4
 8001a30:	681b      	ldr	r3, [r3, #0]
 8001a32:	4618      	mov	r0, r3
 8001a34:	f004 faa8 	bl	8005f88 <free>
	memcpy(local_packet->AX25_PACKET,0,AX25_PACKET_MAX);
 8001a38:	687b      	ldr	r3, [r7, #4]
 8001a3a:	f640 225f 	movw	r2, #2655	; 0xa5f
 8001a3e:	2100      	movs	r1, #0
 8001a40:	4618      	mov	r0, r3
 8001a42:	f004 faa9 	bl	8005f98 <memcpy>
	local_packet->got_packet = false;
 8001a46:	687b      	ldr	r3, [r7, #4]
 8001a48:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001a4c:	3309      	adds	r3, #9
 8001a4e:	2200      	movs	r2, #0
 8001a50:	701a      	strb	r2, [r3, #0]
}
 8001a52:	bf00      	nop
 8001a54:	3708      	adds	r7, #8
 8001a56:	46bd      	mov	sp, r7
 8001a58:	bdb0      	pop	{r4, r5, r7, pc}
 8001a5a:	bf00      	nop
 8001a5c:	200000b0 	.word	0x200000b0
 8001a60:	20001f3c 	.word	0x20001f3c
 8001a64:	08007af0 	.word	0x08007af0
 8001a68:	20003d60 	.word	0x20003d60

08001a6c <receiving_KISS>:
//****************************************************************************************************************
//END OF AX.25 to KISS data flow

//KISS to AX.25 data flow
//****************************************************************************************************************
bool receiving_KISS(){
 8001a6c:	b580      	push	{r7, lr}
 8001a6e:	b086      	sub	sp, #24
 8001a70:	af00      	add	r7, sp, #0
	struct UART_INPUT* local_UART_packet = &UART_packet;
 8001a72:	4b31      	ldr	r3, [pc, #196]	; (8001b38 <receiving_KISS+0xcc>)
 8001a74:	613b      	str	r3, [r7, #16]
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001a76:	4b31      	ldr	r3, [pc, #196]	; (8001b3c <receiving_KISS+0xd0>)
 8001a78:	60fb      	str	r3, [r7, #12]

	//Got a packet bounded by c0 over uart
	if(local_UART_packet->got_packet){
 8001a7a:	693b      	ldr	r3, [r7, #16]
 8001a7c:	7b5b      	ldrb	r3, [r3, #13]
 8001a7e:	2b00      	cmp	r3, #0
 8001a80:	d054      	beq.n	8001b2c <receiving_KISS+0xc0>
		sprintf(uartData, "\nGot a packet via UART of size %d, printing now...\n",local_UART_packet->received_byte_cnt);
 8001a82:	693b      	ldr	r3, [r7, #16]
 8001a84:	685b      	ldr	r3, [r3, #4]
 8001a86:	461a      	mov	r2, r3
 8001a88:	492d      	ldr	r1, [pc, #180]	; (8001b40 <receiving_KISS+0xd4>)
 8001a8a:	482e      	ldr	r0, [pc, #184]	; (8001b44 <receiving_KISS+0xd8>)
 8001a8c:	f004 fb50 	bl	8006130 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001a90:	482c      	ldr	r0, [pc, #176]	; (8001b44 <receiving_KISS+0xd8>)
 8001a92:	f7fe fbbd 	bl	8000210 <strlen>
 8001a96:	4603      	mov	r3, r0
 8001a98:	b29a      	uxth	r2, r3
 8001a9a:	230a      	movs	r3, #10
 8001a9c:	4929      	ldr	r1, [pc, #164]	; (8001b44 <receiving_KISS+0xd8>)
 8001a9e:	482a      	ldr	r0, [pc, #168]	; (8001b48 <receiving_KISS+0xdc>)
 8001aa0:	f003 fb5d 	bl	800515e <HAL_UART_Transmit>

		for(int i = 0;i<local_UART_packet->received_byte_cnt;i++){
 8001aa4:	2300      	movs	r3, #0
 8001aa6:	617b      	str	r3, [r7, #20]
 8001aa8:	e01c      	b.n	8001ae4 <receiving_KISS+0x78>
			//Hex value from UART
			uint8_t hex_byte_val=local_UART_packet->HEX_KISS_PACKET[i];
 8001aaa:	693a      	ldr	r2, [r7, #16]
 8001aac:	697b      	ldr	r3, [r7, #20]
 8001aae:	4413      	add	r3, r2
 8001ab0:	330e      	adds	r3, #14
 8001ab2:	781b      	ldrb	r3, [r3, #0]
 8001ab4:	72bb      	strb	r3, [r7, #10]

			//Bool pointer for KISS array
			bool *bin_byte_ptr = &local_packet->KISS_PACKET[i*8];
 8001ab6:	697b      	ldr	r3, [r7, #20]
 8001ab8:	00db      	lsls	r3, r3, #3
 8001aba:	f603 2358 	addw	r3, r3, #2648	; 0xa58
 8001abe:	68fa      	ldr	r2, [r7, #12]
 8001ac0:	4413      	add	r3, r2
 8001ac2:	3307      	adds	r3, #7
 8001ac4:	607b      	str	r3, [r7, #4]

			//sprintf(uartData, "Byte[%d] = %d\n",i,hex_byte_val);
			//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);

			conv_HEX_to_BIN(hex_byte_val, bin_byte_ptr,true);
 8001ac6:	7abb      	ldrb	r3, [r7, #10]
 8001ac8:	2201      	movs	r2, #1
 8001aca:	6879      	ldr	r1, [r7, #4]
 8001acc:	4618      	mov	r0, r3
 8001ace:	f7ff fa15 	bl	8000efc <conv_HEX_to_BIN>

//			local_UART_packet->got_packet = false;
			local_packet->got_packet = true;
 8001ad2:	68fb      	ldr	r3, [r7, #12]
 8001ad4:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001ad8:	3309      	adds	r3, #9
 8001ada:	2201      	movs	r2, #1
 8001adc:	701a      	strb	r2, [r3, #0]
		for(int i = 0;i<local_UART_packet->received_byte_cnt;i++){
 8001ade:	697b      	ldr	r3, [r7, #20]
 8001ae0:	3301      	adds	r3, #1
 8001ae2:	617b      	str	r3, [r7, #20]
 8001ae4:	693b      	ldr	r3, [r7, #16]
 8001ae6:	685b      	ldr	r3, [r3, #4]
 8001ae8:	697a      	ldr	r2, [r7, #20]
 8001aea:	429a      	cmp	r2, r3
 8001aec:	dbdd      	blt.n	8001aaa <receiving_KISS+0x3e>
		}
		local_packet->byte_cnt = local_UART_packet->received_byte_cnt;
 8001aee:	693b      	ldr	r3, [r7, #16]
 8001af0:	685a      	ldr	r2, [r3, #4]
 8001af2:	68fb      	ldr	r3, [r7, #12]
 8001af4:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001af8:	330c      	adds	r3, #12
 8001afa:	601a      	str	r2, [r3, #0]
		local_packet->Info_Len = (local_packet->byte_cnt-INFO_offset)*8;
 8001afc:	68fb      	ldr	r3, [r7, #12]
 8001afe:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001b02:	330c      	adds	r3, #12
 8001b04:	681b      	ldr	r3, [r3, #0]
 8001b06:	3b12      	subs	r3, #18
 8001b08:	00da      	lsls	r2, r3, #3
 8001b0a:	68fb      	ldr	r3, [r7, #12]
 8001b0c:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001b10:	601a      	str	r2, [r3, #0]

		//Convert KISS packet to AX.25 packet
		bool success = KISS_TO_AX25();
 8001b12:	f000 f873 	bl	8001bfc <KISS_TO_AX25>
 8001b16:	4603      	mov	r3, r0
 8001b18:	72fb      	strb	r3, [r7, #11]
		//Upon exit, have a perfectly good AX.25 packet

		//Output AFSK waveform for radio
		if(success) {
 8001b1a:	7afb      	ldrb	r3, [r7, #11]
 8001b1c:	2b00      	cmp	r3, #0
 8001b1e:	d001      	beq.n	8001b24 <receiving_KISS+0xb8>
//			output_AX25();
			print_AX25();
 8001b20:	f7ff fa98 	bl	8001054 <print_AX25>
		}
		clear_AX25();
 8001b24:	f7ff ff64 	bl	80019f0 <clear_AX25>
		return success;
 8001b28:	7afb      	ldrb	r3, [r7, #11]
 8001b2a:	e000      	b.n	8001b2e <receiving_KISS+0xc2>
	}
	return false;
 8001b2c:	2300      	movs	r3, #0
}
 8001b2e:	4618      	mov	r0, r3
 8001b30:	3718      	adds	r7, #24
 8001b32:	46bd      	mov	sp, r7
 8001b34:	bd80      	pop	{r7, pc}
 8001b36:	bf00      	nop
 8001b38:	2000140c 	.word	0x2000140c
 8001b3c:	200000b0 	.word	0x200000b0
 8001b40:	08007b0c 	.word	0x08007b0c
 8001b44:	20001f3c 	.word	0x20001f3c
 8001b48:	20003d60 	.word	0x20003d60

08001b4c <set_packet_pointer_KISS>:

void set_packet_pointer_KISS(){
 8001b4c:	b5b0      	push	{r4, r5, r7, lr}
 8001b4e:	b082      	sub	sp, #8
 8001b50:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001b52:	4b26      	ldr	r3, [pc, #152]	; (8001bec <set_packet_pointer_KISS+0xa0>)
 8001b54:	607b      	str	r3, [r7, #4]
	sprintf(uartData, "Setting packet pointer to KISS\n");
 8001b56:	4a26      	ldr	r2, [pc, #152]	; (8001bf0 <set_packet_pointer_KISS+0xa4>)
 8001b58:	4b26      	ldr	r3, [pc, #152]	; (8001bf4 <set_packet_pointer_KISS+0xa8>)
 8001b5a:	4614      	mov	r4, r2
 8001b5c:	461d      	mov	r5, r3
 8001b5e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001b60:	6020      	str	r0, [r4, #0]
 8001b62:	6061      	str	r1, [r4, #4]
 8001b64:	60a2      	str	r2, [r4, #8]
 8001b66:	60e3      	str	r3, [r4, #12]
 8001b68:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001b6a:	6120      	str	r0, [r4, #16]
 8001b6c:	6161      	str	r1, [r4, #20]
 8001b6e:	61a2      	str	r2, [r4, #24]
 8001b70:	61e3      	str	r3, [r4, #28]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001b72:	481f      	ldr	r0, [pc, #124]	; (8001bf0 <set_packet_pointer_KISS+0xa4>)
 8001b74:	f7fe fb4c 	bl	8000210 <strlen>
 8001b78:	4603      	mov	r3, r0
 8001b7a:	b29a      	uxth	r2, r3
 8001b7c:	230a      	movs	r3, #10
 8001b7e:	491c      	ldr	r1, [pc, #112]	; (8001bf0 <set_packet_pointer_KISS+0xa4>)
 8001b80:	481d      	ldr	r0, [pc, #116]	; (8001bf8 <set_packet_pointer_KISS+0xac>)
 8001b82:	f003 faec 	bl	800515e <HAL_UART_Transmit>

	bool *curr_mem = local_packet->KISS_PACKET+16;//+8 is to skip the flag since it does not have a pointer
 8001b86:	687b      	ldr	r3, [r7, #4]
 8001b88:	f603 235f 	addw	r3, r3, #2655	; 0xa5f
 8001b8c:	3310      	adds	r3, #16
 8001b8e:	603b      	str	r3, [r7, #0]

	local_packet->address = curr_mem;
 8001b90:	687b      	ldr	r3, [r7, #4]
 8001b92:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001b96:	3310      	adds	r3, #16
 8001b98:	683a      	ldr	r2, [r7, #0]
 8001b9a:	601a      	str	r2, [r3, #0]
	curr_mem += address_len;
 8001b9c:	683b      	ldr	r3, [r7, #0]
 8001b9e:	3370      	adds	r3, #112	; 0x70
 8001ba0:	603b      	str	r3, [r7, #0]

	local_packet->control = curr_mem;
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001ba8:	3314      	adds	r3, #20
 8001baa:	683a      	ldr	r2, [r7, #0]
 8001bac:	601a      	str	r2, [r3, #0]
	curr_mem += control_len;
 8001bae:	683b      	ldr	r3, [r7, #0]
 8001bb0:	3308      	adds	r3, #8
 8001bb2:	603b      	str	r3, [r7, #0]

	local_packet->PID = curr_mem;
 8001bb4:	687b      	ldr	r3, [r7, #4]
 8001bb6:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001bba:	3318      	adds	r3, #24
 8001bbc:	683a      	ldr	r2, [r7, #0]
 8001bbe:	601a      	str	r2, [r3, #0]
	curr_mem += PID_len;
 8001bc0:	683b      	ldr	r3, [r7, #0]
 8001bc2:	3308      	adds	r3, #8
 8001bc4:	603b      	str	r3, [r7, #0]

	local_packet->Info = curr_mem;
 8001bc6:	687b      	ldr	r3, [r7, #4]
 8001bc8:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001bcc:	331c      	adds	r3, #28
 8001bce:	683a      	ldr	r2, [r7, #0]
 8001bd0:	601a      	str	r2, [r3, #0]
	curr_mem += local_packet->Info_Len;
 8001bd2:	687b      	ldr	r3, [r7, #4]
 8001bd4:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001bd8:	681b      	ldr	r3, [r3, #0]
 8001bda:	461a      	mov	r2, r3
 8001bdc:	683b      	ldr	r3, [r7, #0]
 8001bde:	4413      	add	r3, r2
 8001be0:	603b      	str	r3, [r7, #0]


}
 8001be2:	bf00      	nop
 8001be4:	3708      	adds	r7, #8
 8001be6:	46bd      	mov	sp, r7
 8001be8:	bdb0      	pop	{r4, r5, r7, pc}
 8001bea:	bf00      	nop
 8001bec:	200000b0 	.word	0x200000b0
 8001bf0:	20001f3c 	.word	0x20001f3c
 8001bf4:	08007b40 	.word	0x08007b40
 8001bf8:	20003d60 	.word	0x20003d60

08001bfc <KISS_TO_AX25>:

bool KISS_TO_AX25(){
 8001bfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001bfe:	b083      	sub	sp, #12
 8001c00:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001c02:	4b3a      	ldr	r3, [pc, #232]	; (8001cec <KISS_TO_AX25+0xf0>)
 8001c04:	607b      	str	r3, [r7, #4]

	sprintf(uartData, "Before KISS -> AX.25 conversion\n");
 8001c06:	4b3a      	ldr	r3, [pc, #232]	; (8001cf0 <KISS_TO_AX25+0xf4>)
 8001c08:	4a3a      	ldr	r2, [pc, #232]	; (8001cf4 <KISS_TO_AX25+0xf8>)
 8001c0a:	4614      	mov	r4, r2
 8001c0c:	469c      	mov	ip, r3
 8001c0e:	f104 0e20 	add.w	lr, r4, #32
 8001c12:	4665      	mov	r5, ip
 8001c14:	4626      	mov	r6, r4
 8001c16:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8001c18:	6028      	str	r0, [r5, #0]
 8001c1a:	6069      	str	r1, [r5, #4]
 8001c1c:	60aa      	str	r2, [r5, #8]
 8001c1e:	60eb      	str	r3, [r5, #12]
 8001c20:	3410      	adds	r4, #16
 8001c22:	f10c 0c10 	add.w	ip, ip, #16
 8001c26:	4574      	cmp	r4, lr
 8001c28:	d1f3      	bne.n	8001c12 <KISS_TO_AX25+0x16>
 8001c2a:	4663      	mov	r3, ip
 8001c2c:	4622      	mov	r2, r4
 8001c2e:	7812      	ldrb	r2, [r2, #0]
 8001c30:	701a      	strb	r2, [r3, #0]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001c32:	482f      	ldr	r0, [pc, #188]	; (8001cf0 <KISS_TO_AX25+0xf4>)
 8001c34:	f7fe faec 	bl	8000210 <strlen>
 8001c38:	4603      	mov	r3, r0
 8001c3a:	b29a      	uxth	r2, r3
 8001c3c:	230a      	movs	r3, #10
 8001c3e:	492c      	ldr	r1, [pc, #176]	; (8001cf0 <KISS_TO_AX25+0xf4>)
 8001c40:	482d      	ldr	r0, [pc, #180]	; (8001cf8 <KISS_TO_AX25+0xfc>)
 8001c42:	f003 fa8c 	bl	800515e <HAL_UART_Transmit>

	set_packet_pointer_KISS();
 8001c46:	f7ff ff81 	bl	8001b4c <set_packet_pointer_KISS>
	print_KISS();
 8001c4a:	f7ff fb89 	bl	8001360 <print_KISS>

	bool* cpy_from_ptr = (local_packet->KISS_PACKET+16);//starting kiss packet skipping 2 bytes
 8001c4e:	687b      	ldr	r3, [r7, #4]
 8001c50:	f603 235f 	addw	r3, r3, #2655	; 0xa5f
 8001c54:	3310      	adds	r3, #16
 8001c56:	603b      	str	r3, [r7, #0]

	//Update packet pointers to AX25 members
	set_packet_pointer_AX25();
 8001c58:	f7ff fdea 	bl	8001830 <set_packet_pointer_AX25>

	memcpy(local_packet->address,cpy_from_ptr,address_len);
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001c62:	3310      	adds	r3, #16
 8001c64:	681b      	ldr	r3, [r3, #0]
 8001c66:	2270      	movs	r2, #112	; 0x70
 8001c68:	6839      	ldr	r1, [r7, #0]
 8001c6a:	4618      	mov	r0, r3
 8001c6c:	f004 f994 	bl	8005f98 <memcpy>
	cpy_from_ptr += address_len;
 8001c70:	683b      	ldr	r3, [r7, #0]
 8001c72:	3370      	adds	r3, #112	; 0x70
 8001c74:	603b      	str	r3, [r7, #0]

	memcpy(local_packet->control,cpy_from_ptr,control_len);
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001c7c:	3314      	adds	r3, #20
 8001c7e:	681b      	ldr	r3, [r3, #0]
 8001c80:	2208      	movs	r2, #8
 8001c82:	6839      	ldr	r1, [r7, #0]
 8001c84:	4618      	mov	r0, r3
 8001c86:	f004 f987 	bl	8005f98 <memcpy>
	cpy_from_ptr += control_len;
 8001c8a:	683b      	ldr	r3, [r7, #0]
 8001c8c:	3308      	adds	r3, #8
 8001c8e:	603b      	str	r3, [r7, #0]

	memcpy(local_packet->PID,cpy_from_ptr,PID_len);
 8001c90:	687b      	ldr	r3, [r7, #4]
 8001c92:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001c96:	3318      	adds	r3, #24
 8001c98:	681b      	ldr	r3, [r3, #0]
 8001c9a:	2208      	movs	r2, #8
 8001c9c:	6839      	ldr	r1, [r7, #0]
 8001c9e:	4618      	mov	r0, r3
 8001ca0:	f004 f97a 	bl	8005f98 <memcpy>
	cpy_from_ptr += PID_len;
 8001ca4:	683b      	ldr	r3, [r7, #0]
 8001ca6:	3308      	adds	r3, #8
 8001ca8:	603b      	str	r3, [r7, #0]

	memcpy(local_packet->Info,cpy_from_ptr,local_packet->Info_Len);
 8001caa:	687b      	ldr	r3, [r7, #4]
 8001cac:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001cb0:	331c      	adds	r3, #28
 8001cb2:	6818      	ldr	r0, [r3, #0]
 8001cb4:	687b      	ldr	r3, [r7, #4]
 8001cb6:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001cba:	681b      	ldr	r3, [r3, #0]
 8001cbc:	461a      	mov	r2, r3
 8001cbe:	6839      	ldr	r1, [r7, #0]
 8001cc0:	f004 f96a 	bl	8005f98 <memcpy>

	//USE CRC HERE TO GENERATE FCS FIELD
	rxBit_count = (local_packet->byte_cnt*8) - 16;
 8001cc4:	687b      	ldr	r3, [r7, #4]
 8001cc6:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001cca:	330c      	adds	r3, #12
 8001ccc:	681b      	ldr	r3, [r3, #0]
 8001cce:	3b02      	subs	r3, #2
 8001cd0:	00db      	lsls	r3, r3, #3
 8001cd2:	4a0a      	ldr	r2, [pc, #40]	; (8001cfc <KISS_TO_AX25+0x100>)
 8001cd4:	6013      	str	r3, [r2, #0]
//	crc_generate();

	//BIT STUFFING NEEDED
//	bitstuffing(local_packet);
	rxBit_count = 0;
 8001cd6:	4b09      	ldr	r3, [pc, #36]	; (8001cfc <KISS_TO_AX25+0x100>)
 8001cd8:	2200      	movs	r2, #0
 8001cda:	601a      	str	r2, [r3, #0]

	//Print the ax25 packet
	print_AX25();
 8001cdc:	f7ff f9ba 	bl	8001054 <print_AX25>
	return true; //valid packet
 8001ce0:	2301      	movs	r3, #1
}
 8001ce2:	4618      	mov	r0, r3
 8001ce4:	370c      	adds	r7, #12
 8001ce6:	46bd      	mov	sp, r7
 8001ce8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cea:	bf00      	nop
 8001cec:	200000b0 	.word	0x200000b0
 8001cf0:	20001f3c 	.word	0x20001f3c
 8001cf4:	08007b60 	.word	0x08007b60
 8001cf8:	20003d60 	.word	0x20003d60
 8001cfc:	20000094 	.word	0x20000094

08001d00 <initProgram>:
//****************************************************************************************************************
bool mode;
bool midbit = false;
bool changeMode = false;

void initProgram(bool modeStart) {
 8001d00:	b580      	push	{r7, lr}
 8001d02:	b082      	sub	sp, #8
 8001d04:	af00      	add	r7, sp, #0
 8001d06:	4603      	mov	r3, r0
 8001d08:	71fb      	strb	r3, [r7, #7]
	initOUTData();
 8001d0a:	f000 f999 	bl	8002040 <initOUTData>

	//Set hardware properly
	mode = modeStart;
 8001d0e:	4a12      	ldr	r2, [pc, #72]	; (8001d58 <initProgram+0x58>)
 8001d10:	79fb      	ldrb	r3, [r7, #7]
 8001d12:	7013      	strb	r3, [r2, #0]
	toggleMode();
 8001d14:	f000 f826 	bl	8001d64 <toggleMode>
	toggleMode();
 8001d18:	f000 f824 	bl	8001d64 <toggleMode>

	if (mode) {
 8001d1c:	4b0e      	ldr	r3, [pc, #56]	; (8001d58 <initProgram+0x58>)
 8001d1e:	781b      	ldrb	r3, [r3, #0]
 8001d20:	2b00      	cmp	r3, #0
 8001d22:	d009      	beq.n	8001d38 <initProgram+0x38>
		htim2.Instance->ARR = TIM2_AUTORELOAD_TX;
 8001d24:	4b0d      	ldr	r3, [pc, #52]	; (8001d5c <initProgram+0x5c>)
 8001d26:	681b      	ldr	r3, [r3, #0]
 8001d28:	2264      	movs	r2, #100	; 0x64
 8001d2a:	62da      	str	r2, [r3, #44]	; 0x2c
		htim3.Instance->ARR = TIM3_AUTORELOAD_TX;
 8001d2c:	4b0c      	ldr	r3, [pc, #48]	; (8001d60 <initProgram+0x60>)
 8001d2e:	681b      	ldr	r3, [r3, #0]
 8001d30:	f240 323f 	movw	r2, #831	; 0x33f
 8001d34:	62da      	str	r2, [r3, #44]	; 0x2c
 8001d36:	e009      	b.n	8001d4c <initProgram+0x4c>
	} else {
		htim2.Instance->ARR = TIM2_AUTORELOAD_RX;
 8001d38:	4b08      	ldr	r3, [pc, #32]	; (8001d5c <initProgram+0x5c>)
 8001d3a:	681b      	ldr	r3, [r3, #0]
 8001d3c:	f242 7210 	movw	r2, #10000	; 0x2710
 8001d40:	62da      	str	r2, [r3, #44]	; 0x2c
		htim3.Instance->ARR = TIM3_AUTORELOAD_RX;
 8001d42:	4b07      	ldr	r3, [pc, #28]	; (8001d60 <initProgram+0x60>)
 8001d44:	681b      	ldr	r3, [r3, #0]
 8001d46:	f44f 72d0 	mov.w	r2, #416	; 0x1a0
 8001d4a:	62da      	str	r2, [r3, #44]	; 0x2c
	}

	init_AX25();
 8001d4c:	f7ff f926 	bl	8000f9c <init_AX25>
}
 8001d50:	bf00      	nop
 8001d52:	3708      	adds	r7, #8
 8001d54:	46bd      	mov	sp, r7
 8001d56:	bd80      	pop	{r7, pc}
 8001d58:	20003d08 	.word	0x20003d08
 8001d5c:	20003d20 	.word	0x20003d20
 8001d60:	20002c68 	.word	0x20002c68

08001d64 <toggleMode>:



void toggleMode() {
 8001d64:	b580      	push	{r7, lr}
 8001d66:	af00      	add	r7, sp, #0
	//Disable HW interrupt
	HAL_NVIC_DisableIRQ(EXTI0_IRQn);
 8001d68:	2006      	movs	r0, #6
 8001d6a:	f001 fa3e 	bl	80031ea <HAL_NVIC_DisableIRQ>

	//Stop DAC
	HAL_DAC_Stop_DMA(&hdac, DAC_CHANNEL_1);
 8001d6e:	2100      	movs	r1, #0
 8001d70:	4824      	ldr	r0, [pc, #144]	; (8001e04 <toggleMode+0xa0>)
 8001d72:	f001 fa76 	bl	8003262 <HAL_DAC_Stop_DMA>

	//Toggle mode
	mode = !mode;
 8001d76:	4b24      	ldr	r3, [pc, #144]	; (8001e08 <toggleMode+0xa4>)
 8001d78:	781b      	ldrb	r3, [r3, #0]
 8001d7a:	2b00      	cmp	r3, #0
 8001d7c:	bf14      	ite	ne
 8001d7e:	2301      	movne	r3, #1
 8001d80:	2300      	moveq	r3, #0
 8001d82:	b2db      	uxtb	r3, r3
 8001d84:	f083 0301 	eor.w	r3, r3, #1
 8001d88:	b2db      	uxtb	r3, r3
 8001d8a:	f003 0301 	and.w	r3, r3, #1
 8001d8e:	b2da      	uxtb	r2, r3
 8001d90:	4b1d      	ldr	r3, [pc, #116]	; (8001e08 <toggleMode+0xa4>)
 8001d92:	701a      	strb	r2, [r3, #0]
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, mode);
 8001d94:	4b1c      	ldr	r3, [pc, #112]	; (8001e08 <toggleMode+0xa4>)
 8001d96:	781b      	ldrb	r3, [r3, #0]
 8001d98:	461a      	mov	r2, r3
 8001d9a:	2120      	movs	r1, #32
 8001d9c:	481b      	ldr	r0, [pc, #108]	; (8001e0c <toggleMode+0xa8>)
 8001d9e:	f001 fffb 	bl	8003d98 <HAL_GPIO_WritePin>
	midbit = false;
 8001da2:	4b1b      	ldr	r3, [pc, #108]	; (8001e10 <toggleMode+0xac>)
 8001da4:	2200      	movs	r2, #0
 8001da6:	701a      	strb	r2, [r3, #0]

	//Stop timer and reset count
	HAL_TIM_Base_Stop(&htim3);
 8001da8:	481a      	ldr	r0, [pc, #104]	; (8001e14 <toggleMode+0xb0>)
 8001daa:	f002 fd8a 	bl	80048c2 <HAL_TIM_Base_Stop>
	htim3.Instance->CNT = 0;
 8001dae:	4b19      	ldr	r3, [pc, #100]	; (8001e14 <toggleMode+0xb0>)
 8001db0:	681b      	ldr	r3, [r3, #0]
 8001db2:	2200      	movs	r2, #0
 8001db4:	625a      	str	r2, [r3, #36]	; 0x24

	if (mode) {
 8001db6:	4b14      	ldr	r3, [pc, #80]	; (8001e08 <toggleMode+0xa4>)
 8001db8:	781b      	ldrb	r3, [r3, #0]
 8001dba:	2b00      	cmp	r3, #0
 8001dbc:	d009      	beq.n	8001dd2 <toggleMode+0x6e>
		//Set Timer periods
		htim2.Instance->ARR = TIM2_AUTORELOAD_TX;
 8001dbe:	4b16      	ldr	r3, [pc, #88]	; (8001e18 <toggleMode+0xb4>)
 8001dc0:	681b      	ldr	r3, [r3, #0]
 8001dc2:	2264      	movs	r2, #100	; 0x64
 8001dc4:	62da      	str	r2, [r3, #44]	; 0x2c
		htim3.Instance->ARR = TIM3_AUTORELOAD_TX;
 8001dc6:	4b13      	ldr	r3, [pc, #76]	; (8001e14 <toggleMode+0xb0>)
 8001dc8:	681b      	ldr	r3, [r3, #0]
 8001dca:	f240 323f 	movw	r2, #831	; 0x33f
 8001dce:	62da      	str	r2, [r3, #44]	; 0x2c
 8001dd0:	e00f      	b.n	8001df2 <toggleMode+0x8e>

	} else {
		//Set Timer Periods
		htim2.Instance->ARR = TIM2_AUTORELOAD_RX;
 8001dd2:	4b11      	ldr	r3, [pc, #68]	; (8001e18 <toggleMode+0xb4>)
 8001dd4:	681b      	ldr	r3, [r3, #0]
 8001dd6:	f242 7210 	movw	r2, #10000	; 0x2710
 8001dda:	62da      	str	r2, [r3, #44]	; 0x2c
		htim3.Instance->ARR = TIM3_AUTORELOAD_RX;
 8001ddc:	4b0d      	ldr	r3, [pc, #52]	; (8001e14 <toggleMode+0xb0>)
 8001dde:	681b      	ldr	r3, [r3, #0]
 8001de0:	f44f 72d0 	mov.w	r2, #416	; 0x1a0
 8001de4:	62da      	str	r2, [r3, #44]	; 0x2c

		//Enable tim3 interrupt
		HAL_TIM_Base_Start_IT(&htim3);
 8001de6:	480b      	ldr	r0, [pc, #44]	; (8001e14 <toggleMode+0xb0>)
 8001de8:	f002 fd96 	bl	8004918 <HAL_TIM_Base_Start_IT>

		//Enable HW interrupt
		HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8001dec:	2006      	movs	r0, #6
 8001dee:	f001 f9ee 	bl	80031ce <HAL_NVIC_EnableIRQ>
	}

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, 0);
 8001df2:	2200      	movs	r2, #0
 8001df4:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001df8:	4804      	ldr	r0, [pc, #16]	; (8001e0c <toggleMode+0xa8>)
 8001dfa:	f001 ffcd 	bl	8003d98 <HAL_GPIO_WritePin>
}
 8001dfe:	bf00      	nop
 8001e00:	bd80      	pop	{r7, pc}
 8001e02:	bf00      	nop
 8001e04:	20003d0c 	.word	0x20003d0c
 8001e08:	20003d08 	.word	0x20003d08
 8001e0c:	40020000 	.word	0x40020000
 8001e10:	20000098 	.word	0x20000098
 8001e14:	20002c68 	.word	0x20002c68
 8001e18:	20003d20 	.word	0x20003d20

08001e1c <loadPeriodBuffer>:

void loadPeriodBuffer(int timerCnt) {
 8001e1c:	b480      	push	{r7}
 8001e1e:	b083      	sub	sp, #12
 8001e20:	af00      	add	r7, sp, #0
 8001e22:	6078      	str	r0, [r7, #4]
	periodBuffer[periodSaveCount] = timerCnt;
 8001e24:	4b0d      	ldr	r3, [pc, #52]	; (8001e5c <loadPeriodBuffer+0x40>)
 8001e26:	881b      	ldrh	r3, [r3, #0]
 8001e28:	4619      	mov	r1, r3
 8001e2a:	687b      	ldr	r3, [r7, #4]
 8001e2c:	4a0c      	ldr	r2, [pc, #48]	; (8001e60 <loadPeriodBuffer+0x44>)
 8001e2e:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
	periodSaveCount++;
 8001e32:	4b0a      	ldr	r3, [pc, #40]	; (8001e5c <loadPeriodBuffer+0x40>)
 8001e34:	881b      	ldrh	r3, [r3, #0]
 8001e36:	3301      	adds	r3, #1
 8001e38:	b29a      	uxth	r2, r3
 8001e3a:	4b08      	ldr	r3, [pc, #32]	; (8001e5c <loadPeriodBuffer+0x40>)
 8001e3c:	801a      	strh	r2, [r3, #0]
	if (periodSaveCount >= RX_BUFFERSIZE) {
 8001e3e:	4b07      	ldr	r3, [pc, #28]	; (8001e5c <loadPeriodBuffer+0x40>)
 8001e40:	881b      	ldrh	r3, [r3, #0]
 8001e42:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001e46:	d302      	bcc.n	8001e4e <loadPeriodBuffer+0x32>
		periodSaveCount = 0;
 8001e48:	4b04      	ldr	r3, [pc, #16]	; (8001e5c <loadPeriodBuffer+0x40>)
 8001e4a:	2200      	movs	r2, #0
 8001e4c:	801a      	strh	r2, [r3, #0]
	}
}
 8001e4e:	bf00      	nop
 8001e50:	370c      	adds	r7, #12
 8001e52:	46bd      	mov	sp, r7
 8001e54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e58:	4770      	bx	lr
 8001e5a:	bf00      	nop
 8001e5c:	2000009c 	.word	0x2000009c
 8001e60:	20002d08 	.word	0x20002d08

08001e64 <Tim3IT>:
void Tim3IT() {
 8001e64:	b580      	push	{r7, lr}
 8001e66:	af00      	add	r7, sp, #0
	if (mode) {
 8001e68:	4b0d      	ldr	r3, [pc, #52]	; (8001ea0 <Tim3IT+0x3c>)
 8001e6a:	781b      	ldrb	r3, [r3, #0]
 8001e6c:	2b00      	cmp	r3, #0
 8001e6e:	d007      	beq.n	8001e80 <Tim3IT+0x1c>
		HAL_DAC_Stop_DMA(&hdac, DAC_CHANNEL_1);
 8001e70:	2100      	movs	r1, #0
 8001e72:	480c      	ldr	r0, [pc, #48]	; (8001ea4 <Tim3IT+0x40>)
 8001e74:	f001 f9f5 	bl	8003262 <HAL_DAC_Stop_DMA>
		midbit = false;
 8001e78:	4b0b      	ldr	r3, [pc, #44]	; (8001ea8 <Tim3IT+0x44>)
 8001e7a:	2200      	movs	r2, #0
 8001e7c:	701a      	strb	r2, [r3, #0]
		if(sampusecount>SAMP_PER_BAUD){
			loadPeriodBuffer(0);
		}
		sampusecount++;
	}
}
 8001e7e:	e00c      	b.n	8001e9a <Tim3IT+0x36>
		if(sampusecount>SAMP_PER_BAUD){
 8001e80:	4b0a      	ldr	r3, [pc, #40]	; (8001eac <Tim3IT+0x48>)
 8001e82:	781b      	ldrb	r3, [r3, #0]
 8001e84:	2b02      	cmp	r3, #2
 8001e86:	d902      	bls.n	8001e8e <Tim3IT+0x2a>
			loadPeriodBuffer(0);
 8001e88:	2000      	movs	r0, #0
 8001e8a:	f7ff ffc7 	bl	8001e1c <loadPeriodBuffer>
		sampusecount++;
 8001e8e:	4b07      	ldr	r3, [pc, #28]	; (8001eac <Tim3IT+0x48>)
 8001e90:	781b      	ldrb	r3, [r3, #0]
 8001e92:	3301      	adds	r3, #1
 8001e94:	b2da      	uxtb	r2, r3
 8001e96:	4b05      	ldr	r3, [pc, #20]	; (8001eac <Tim3IT+0x48>)
 8001e98:	701a      	strb	r2, [r3, #0]
}
 8001e9a:	bf00      	nop
 8001e9c:	bd80      	pop	{r7, pc}
 8001e9e:	bf00      	nop
 8001ea0:	20003d08 	.word	0x20003d08
 8001ea4:	20003d0c 	.word	0x20003d0c
 8001ea8:	20000098 	.word	0x20000098
 8001eac:	2000009a 	.word	0x2000009a

08001eb0 <FreqCounterPinEXTI>:
void FreqCounterPinEXTI() {
 8001eb0:	b580      	push	{r7, lr}
 8001eb2:	af00      	add	r7, sp, #0
	loadPeriodBuffer(htim2.Instance->CNT);
 8001eb4:	4b07      	ldr	r3, [pc, #28]	; (8001ed4 <FreqCounterPinEXTI+0x24>)
 8001eb6:	681b      	ldr	r3, [r3, #0]
 8001eb8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001eba:	4618      	mov	r0, r3
 8001ebc:	f7ff ffae 	bl	8001e1c <loadPeriodBuffer>
	htim2.Instance->CNT = 0;
 8001ec0:	4b04      	ldr	r3, [pc, #16]	; (8001ed4 <FreqCounterPinEXTI+0x24>)
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	2200      	movs	r2, #0
 8001ec6:	625a      	str	r2, [r3, #36]	; 0x24
	sampusecount = 0;
 8001ec8:	4b03      	ldr	r3, [pc, #12]	; (8001ed8 <FreqCounterPinEXTI+0x28>)
 8001eca:	2200      	movs	r2, #0
 8001ecc:	701a      	strb	r2, [r3, #0]
}
 8001ece:	bf00      	nop
 8001ed0:	bd80      	pop	{r7, pc}
 8001ed2:	bf00      	nop
 8001ed4:	20003d20 	.word	0x20003d20
 8001ed8:	2000009a 	.word	0x2000009a
 8001edc:	00000000 	.word	0x00000000

08001ee0 <edit_sineval>:
bool bitStream[10];

uint32_t lowFrequency[2 * LOWF_SAMP];
uint32_t highFrequency[2 * HIGHF_SAMP];

void edit_sineval(uint32_t *sinArray, int arraySize, int waves, float shiftPercent) {
 8001ee0:	b5b0      	push	{r4, r5, r7, lr}
 8001ee2:	b08c      	sub	sp, #48	; 0x30
 8001ee4:	af00      	add	r7, sp, #0
 8001ee6:	60f8      	str	r0, [r7, #12]
 8001ee8:	60b9      	str	r1, [r7, #8]
 8001eea:	607a      	str	r2, [r7, #4]
 8001eec:	ed87 0a00 	vstr	s0, [r7]
	double ampl 		= OUT_AMPL / 2;						//Amplitude of wave
 8001ef0:	f04f 0300 	mov.w	r3, #0
 8001ef4:	4c3c      	ldr	r4, [pc, #240]	; (8001fe8 <edit_sineval+0x108>)
 8001ef6:	e9c7 3408 	strd	r3, r4, [r7, #32]
	double phaseShift 	= shiftPercent * 2 * PI;	//Desired phase shift
 8001efa:	edd7 7a00 	vldr	s15, [r7]
 8001efe:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8001f02:	ee17 0a90 	vmov	r0, s15
 8001f06:	f7fe fb3f 	bl	8000588 <__aeabi_f2d>
 8001f0a:	a333      	add	r3, pc, #204	; (adr r3, 8001fd8 <edit_sineval+0xf8>)
 8001f0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f10:	f7fe fb92 	bl	8000638 <__aeabi_dmul>
 8001f14:	4603      	mov	r3, r0
 8001f16:	460c      	mov	r4, r1
 8001f18:	e9c7 3406 	strd	r3, r4, [r7, #24]
	double w 			= 2 * PI  * waves / arraySize;
 8001f1c:	6878      	ldr	r0, [r7, #4]
 8001f1e:	f7fe fb21 	bl	8000564 <__aeabi_i2d>
 8001f22:	a32f      	add	r3, pc, #188	; (adr r3, 8001fe0 <edit_sineval+0x100>)
 8001f24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f28:	f7fe fb86 	bl	8000638 <__aeabi_dmul>
 8001f2c:	4603      	mov	r3, r0
 8001f2e:	460c      	mov	r4, r1
 8001f30:	4625      	mov	r5, r4
 8001f32:	461c      	mov	r4, r3
 8001f34:	68b8      	ldr	r0, [r7, #8]
 8001f36:	f7fe fb15 	bl	8000564 <__aeabi_i2d>
 8001f3a:	4602      	mov	r2, r0
 8001f3c:	460b      	mov	r3, r1
 8001f3e:	4620      	mov	r0, r4
 8001f40:	4629      	mov	r1, r5
 8001f42:	f7fe fca3 	bl	800088c <__aeabi_ddiv>
 8001f46:	4603      	mov	r3, r0
 8001f48:	460c      	mov	r4, r1
 8001f4a:	e9c7 3404 	strd	r3, r4, [r7, #16]

	for (int i = 0; i < arraySize; i++) {
 8001f4e:	2300      	movs	r3, #0
 8001f50:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001f52:	e036      	b.n	8001fc2 <edit_sineval+0xe2>
		//formula in DAC Document
		sinArray[i] = (sin((i * w) + phaseShift) + 1) * ampl;
 8001f54:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8001f56:	f7fe fb05 	bl	8000564 <__aeabi_i2d>
 8001f5a:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001f5e:	f7fe fb6b 	bl	8000638 <__aeabi_dmul>
 8001f62:	4603      	mov	r3, r0
 8001f64:	460c      	mov	r4, r1
 8001f66:	4618      	mov	r0, r3
 8001f68:	4621      	mov	r1, r4
 8001f6a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001f6e:	f7fe f9ad 	bl	80002cc <__adddf3>
 8001f72:	4603      	mov	r3, r0
 8001f74:	460c      	mov	r4, r1
 8001f76:	ec44 3b17 	vmov	d7, r3, r4
 8001f7a:	eeb0 0a47 	vmov.f32	s0, s14
 8001f7e:	eef0 0a67 	vmov.f32	s1, s15
 8001f82:	f004 fc19 	bl	80067b8 <sin>
 8001f86:	ec51 0b10 	vmov	r0, r1, d0
 8001f8a:	f04f 0200 	mov.w	r2, #0
 8001f8e:	4b17      	ldr	r3, [pc, #92]	; (8001fec <edit_sineval+0x10c>)
 8001f90:	f7fe f99c 	bl	80002cc <__adddf3>
 8001f94:	4603      	mov	r3, r0
 8001f96:	460c      	mov	r4, r1
 8001f98:	4618      	mov	r0, r3
 8001f9a:	4621      	mov	r1, r4
 8001f9c:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8001fa0:	f7fe fb4a 	bl	8000638 <__aeabi_dmul>
 8001fa4:	4603      	mov	r3, r0
 8001fa6:	460c      	mov	r4, r1
 8001fa8:	4618      	mov	r0, r3
 8001faa:	4621      	mov	r1, r4
 8001fac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001fae:	009b      	lsls	r3, r3, #2
 8001fb0:	68fa      	ldr	r2, [r7, #12]
 8001fb2:	18d4      	adds	r4, r2, r3
 8001fb4:	f7fe fe02 	bl	8000bbc <__aeabi_d2uiz>
 8001fb8:	4603      	mov	r3, r0
 8001fba:	6023      	str	r3, [r4, #0]
	for (int i = 0; i < arraySize; i++) {
 8001fbc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001fbe:	3301      	adds	r3, #1
 8001fc0:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001fc2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001fc4:	68bb      	ldr	r3, [r7, #8]
 8001fc6:	429a      	cmp	r2, r3
 8001fc8:	dbc4      	blt.n	8001f54 <edit_sineval+0x74>
	}
}
 8001fca:	bf00      	nop
 8001fcc:	3730      	adds	r7, #48	; 0x30
 8001fce:	46bd      	mov	sp, r7
 8001fd0:	bdb0      	pop	{r4, r5, r7, pc}
 8001fd2:	bf00      	nop
 8001fd4:	f3af 8000 	nop.w
 8001fd8:	4d12d84a 	.word	0x4d12d84a
 8001fdc:	400921fb 	.word	0x400921fb
 8001fe0:	4d12d84a 	.word	0x4d12d84a
 8001fe4:	401921fb 	.word	0x401921fb
 8001fe8:	406f8000 	.word	0x406f8000
 8001fec:	3ff00000 	.word	0x3ff00000

08001ff0 <generateBitstream>:
				__NOP();		//Just wait for timer3 IT to go off.
		}
		HAL_TIM_Base_Stop(&htim3);
	}
}
void generateBitstream() {
 8001ff0:	b480      	push	{r7}
 8001ff2:	af00      	add	r7, sp, #0
	bitStream[0] = 1;
 8001ff4:	4b11      	ldr	r3, [pc, #68]	; (800203c <generateBitstream+0x4c>)
 8001ff6:	2201      	movs	r2, #1
 8001ff8:	701a      	strb	r2, [r3, #0]
	bitStream[1] = 1;
 8001ffa:	4b10      	ldr	r3, [pc, #64]	; (800203c <generateBitstream+0x4c>)
 8001ffc:	2201      	movs	r2, #1
 8001ffe:	705a      	strb	r2, [r3, #1]
	bitStream[2] = 1;
 8002000:	4b0e      	ldr	r3, [pc, #56]	; (800203c <generateBitstream+0x4c>)
 8002002:	2201      	movs	r2, #1
 8002004:	709a      	strb	r2, [r3, #2]
	bitStream[3] = 0;
 8002006:	4b0d      	ldr	r3, [pc, #52]	; (800203c <generateBitstream+0x4c>)
 8002008:	2200      	movs	r2, #0
 800200a:	70da      	strb	r2, [r3, #3]
	bitStream[4] = 0;
 800200c:	4b0b      	ldr	r3, [pc, #44]	; (800203c <generateBitstream+0x4c>)
 800200e:	2200      	movs	r2, #0
 8002010:	711a      	strb	r2, [r3, #4]
	bitStream[5] = 0;
 8002012:	4b0a      	ldr	r3, [pc, #40]	; (800203c <generateBitstream+0x4c>)
 8002014:	2200      	movs	r2, #0
 8002016:	715a      	strb	r2, [r3, #5]
	bitStream[6] = 1;
 8002018:	4b08      	ldr	r3, [pc, #32]	; (800203c <generateBitstream+0x4c>)
 800201a:	2201      	movs	r2, #1
 800201c:	719a      	strb	r2, [r3, #6]
	bitStream[7] = 0;
 800201e:	4b07      	ldr	r3, [pc, #28]	; (800203c <generateBitstream+0x4c>)
 8002020:	2200      	movs	r2, #0
 8002022:	71da      	strb	r2, [r3, #7]
	bitStream[8] = 1;
 8002024:	4b05      	ldr	r3, [pc, #20]	; (800203c <generateBitstream+0x4c>)
 8002026:	2201      	movs	r2, #1
 8002028:	721a      	strb	r2, [r3, #8]
	bitStream[9] = 0;
 800202a:	4b04      	ldr	r3, [pc, #16]	; (800203c <generateBitstream+0x4c>)
 800202c:	2200      	movs	r2, #0
 800202e:	725a      	strb	r2, [r3, #9]

}
 8002030:	bf00      	nop
 8002032:	46bd      	mov	sp, r7
 8002034:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002038:	4770      	bx	lr
 800203a:	bf00      	nop
 800203c:	20002af4 	.word	0x20002af4

08002040 <initOUTData>:
void initOUTData() {
 8002040:	b580      	push	{r7, lr}
 8002042:	af00      	add	r7, sp, #0
	edit_sineval(lowFrequency, 2 * LOWF_SAMP, 2, +0.995);
 8002044:	ed9f 0a08 	vldr	s0, [pc, #32]	; 8002068 <initOUTData+0x28>
 8002048:	2202      	movs	r2, #2
 800204a:	21a6      	movs	r1, #166	; 0xa6
 800204c:	4807      	ldr	r0, [pc, #28]	; (800206c <initOUTData+0x2c>)
 800204e:	f7ff ff47 	bl	8001ee0 <edit_sineval>
	edit_sineval(highFrequency, 2 * HIGHF_SAMP, 2, +0.99);
 8002052:	ed9f 0a07 	vldr	s0, [pc, #28]	; 8002070 <initOUTData+0x30>
 8002056:	2202      	movs	r2, #2
 8002058:	215a      	movs	r1, #90	; 0x5a
 800205a:	4806      	ldr	r0, [pc, #24]	; (8002074 <initOUTData+0x34>)
 800205c:	f7ff ff40 	bl	8001ee0 <edit_sineval>
	generateBitstream();
 8002060:	f7ff ffc6 	bl	8001ff0 <generateBitstream>
}
 8002064:	bf00      	nop
 8002066:	bd80      	pop	{r7, pc}
 8002068:	3f7eb852 	.word	0x3f7eb852
 800206c:	20001ca4 	.word	0x20001ca4
 8002070:	3f7d70a4 	.word	0x3f7d70a4
 8002074:	20002b00 	.word	0x20002b00

08002078 <pertobit>:
uint8_t sampusecount = 0;
uint16_t periodSaveCount = 0;
uint16_t trackBit = 0;
uint16_t bitSaveCount = 0;

int pertobit(uint32_t inputPeriod) {
 8002078:	b480      	push	{r7}
 800207a:	b085      	sub	sp, #20
 800207c:	af00      	add	r7, sp, #0
 800207e:	6078      	str	r0, [r7, #4]
	int freq = PCONVERT / inputPeriod;
 8002080:	4a10      	ldr	r2, [pc, #64]	; (80020c4 <pertobit+0x4c>)
 8002082:	687b      	ldr	r3, [r7, #4]
 8002084:	fbb2 f3f3 	udiv	r3, r2, r3
 8002088:	60fb      	str	r3, [r7, #12]

	//sprintf(uartData, "Recieved frequency = %d\r\n",freq);
	//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);

	//return freq;
	if ((HIGHFREQ - FREQDEV < freq) && (freq < HIGHFREQ + FREQDEV))
 800208a:	68fb      	ldr	r3, [r7, #12]
 800208c:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 8002090:	dd06      	ble.n	80020a0 <pertobit+0x28>
 8002092:	68fb      	ldr	r3, [r7, #12]
 8002094:	f640 2227 	movw	r2, #2599	; 0xa27
 8002098:	4293      	cmp	r3, r2
 800209a:	dc01      	bgt.n	80020a0 <pertobit+0x28>
		return 1;
 800209c:	2301      	movs	r3, #1
 800209e:	e00b      	b.n	80020b8 <pertobit+0x40>
	if ((LOWFREQ - FREQDEV < freq) && (freq < LOWFREQ + FREQDEV))
 80020a0:	68fb      	ldr	r3, [r7, #12]
 80020a2:	f5b3 7f48 	cmp.w	r3, #800	; 0x320
 80020a6:	dd05      	ble.n	80020b4 <pertobit+0x3c>
 80020a8:	68fb      	ldr	r3, [r7, #12]
 80020aa:	f5b3 6fc8 	cmp.w	r3, #1600	; 0x640
 80020ae:	da01      	bge.n	80020b4 <pertobit+0x3c>
		return 0;
 80020b0:	2300      	movs	r3, #0
 80020b2:	e001      	b.n	80020b8 <pertobit+0x40>
	else
		return -1;
 80020b4:	f04f 33ff 	mov.w	r3, #4294967295
}
 80020b8:	4618      	mov	r0, r3
 80020ba:	3714      	adds	r7, #20
 80020bc:	46bd      	mov	sp, r7
 80020be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020c2:	4770      	bx	lr
 80020c4:	00989680 	.word	0x00989680

080020c8 <loadBit>:
int loadBit(){
 80020c8:	b580      	push	{r7, lr}
 80020ca:	b082      	sub	sp, #8
 80020cc:	af00      	add	r7, sp, #0
	int currbit = 0;
 80020ce:	2300      	movs	r3, #0
 80020d0:	607b      	str	r3, [r7, #4]
	int nextbit = 0;
 80020d2:	2300      	movs	r3, #0
 80020d4:	603b      	str	r3, [r7, #0]

	currbit = pertobit(periodBuffer[trackBit]);
 80020d6:	4b39      	ldr	r3, [pc, #228]	; (80021bc <loadBit+0xf4>)
 80020d8:	881b      	ldrh	r3, [r3, #0]
 80020da:	461a      	mov	r2, r3
 80020dc:	4b38      	ldr	r3, [pc, #224]	; (80021c0 <loadBit+0xf8>)
 80020de:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80020e2:	4618      	mov	r0, r3
 80020e4:	f7ff ffc8 	bl	8002078 <pertobit>
 80020e8:	6078      	str	r0, [r7, #4]

	//Low frequency should have 1 bit per baud
	if(currbit==0){
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	2b00      	cmp	r3, #0
 80020ee:	d107      	bne.n	8002100 <loadBit+0x38>
		bitBuffer[bitSaveCount] = 0;
 80020f0:	4b34      	ldr	r3, [pc, #208]	; (80021c4 <loadBit+0xfc>)
 80020f2:	881b      	ldrh	r3, [r3, #0]
 80020f4:	4619      	mov	r1, r3
 80020f6:	4b34      	ldr	r3, [pc, #208]	; (80021c8 <loadBit+0x100>)
 80020f8:	2200      	movs	r2, #0
 80020fa:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 80020fe:	e03c      	b.n	800217a <loadBit+0xb2>
	}

	//High frequency should have 2 high bits per baud
	else if(currbit==1){
 8002100:	687b      	ldr	r3, [r7, #4]
 8002102:	2b01      	cmp	r3, #1
 8002104:	d131      	bne.n	800216a <loadBit+0xa2>
		//Gather next bit
		//ternary assign: var = (cond)?if_true:if_false;
		nextbit = (trackBit!=RX_BUFFERSIZE-1)?pertobit(periodBuffer[trackBit+1]):pertobit(periodBuffer[0]);
 8002106:	4b2d      	ldr	r3, [pc, #180]	; (80021bc <loadBit+0xf4>)
 8002108:	881b      	ldrh	r3, [r3, #0]
 800210a:	f240 32ff 	movw	r2, #1023	; 0x3ff
 800210e:	4293      	cmp	r3, r2
 8002110:	d00a      	beq.n	8002128 <loadBit+0x60>
 8002112:	4b2a      	ldr	r3, [pc, #168]	; (80021bc <loadBit+0xf4>)
 8002114:	881b      	ldrh	r3, [r3, #0]
 8002116:	3301      	adds	r3, #1
 8002118:	4a29      	ldr	r2, [pc, #164]	; (80021c0 <loadBit+0xf8>)
 800211a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800211e:	4618      	mov	r0, r3
 8002120:	f7ff ffaa 	bl	8002078 <pertobit>
 8002124:	4603      	mov	r3, r0
 8002126:	e005      	b.n	8002134 <loadBit+0x6c>
 8002128:	4b25      	ldr	r3, [pc, #148]	; (80021c0 <loadBit+0xf8>)
 800212a:	681b      	ldr	r3, [r3, #0]
 800212c:	4618      	mov	r0, r3
 800212e:	f7ff ffa3 	bl	8002078 <pertobit>
 8002132:	4603      	mov	r3, r0
 8002134:	603b      	str	r3, [r7, #0]

		if(nextbit==1){
 8002136:	683b      	ldr	r3, [r7, #0]
 8002138:	2b01      	cmp	r3, #1
 800213a:	d10d      	bne.n	8002158 <loadBit+0x90>
			//High frequency detected, skip next bit
			trackBit++;
 800213c:	4b1f      	ldr	r3, [pc, #124]	; (80021bc <loadBit+0xf4>)
 800213e:	881b      	ldrh	r3, [r3, #0]
 8002140:	3301      	adds	r3, #1
 8002142:	b29a      	uxth	r2, r3
 8002144:	4b1d      	ldr	r3, [pc, #116]	; (80021bc <loadBit+0xf4>)
 8002146:	801a      	strh	r2, [r3, #0]
			bitBuffer[bitSaveCount] = 1;
 8002148:	4b1e      	ldr	r3, [pc, #120]	; (80021c4 <loadBit+0xfc>)
 800214a:	881b      	ldrh	r3, [r3, #0]
 800214c:	4619      	mov	r1, r3
 800214e:	4b1e      	ldr	r3, [pc, #120]	; (80021c8 <loadBit+0x100>)
 8002150:	2201      	movs	r2, #1
 8002152:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8002156:	e010      	b.n	800217a <loadBit+0xb2>
		}
		else {
			bitBuffer[bitSaveCount] = -1;
 8002158:	4b1a      	ldr	r3, [pc, #104]	; (80021c4 <loadBit+0xfc>)
 800215a:	881b      	ldrh	r3, [r3, #0]
 800215c:	4619      	mov	r1, r3
 800215e:	4b1a      	ldr	r3, [pc, #104]	; (80021c8 <loadBit+0x100>)
 8002160:	f04f 32ff 	mov.w	r2, #4294967295
 8002164:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8002168:	e007      	b.n	800217a <loadBit+0xb2>
		}
	}
	//Invalid bit
	else{
		bitBuffer[bitSaveCount] = -1;
 800216a:	4b16      	ldr	r3, [pc, #88]	; (80021c4 <loadBit+0xfc>)
 800216c:	881b      	ldrh	r3, [r3, #0]
 800216e:	4619      	mov	r1, r3
 8002170:	4b15      	ldr	r3, [pc, #84]	; (80021c8 <loadBit+0x100>)
 8002172:	f04f 32ff 	mov.w	r2, #4294967295
 8002176:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
	}

	//Increment trackBit
	trackBit++;
 800217a:	4b10      	ldr	r3, [pc, #64]	; (80021bc <loadBit+0xf4>)
 800217c:	881b      	ldrh	r3, [r3, #0]
 800217e:	3301      	adds	r3, #1
 8002180:	b29a      	uxth	r2, r3
 8002182:	4b0e      	ldr	r3, [pc, #56]	; (80021bc <loadBit+0xf4>)
 8002184:	801a      	strh	r2, [r3, #0]
	if (trackBit >= RX_BUFFERSIZE)
 8002186:	4b0d      	ldr	r3, [pc, #52]	; (80021bc <loadBit+0xf4>)
 8002188:	881b      	ldrh	r3, [r3, #0]
 800218a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800218e:	d302      	bcc.n	8002196 <loadBit+0xce>
		trackBit = 0;
 8002190:	4b0a      	ldr	r3, [pc, #40]	; (80021bc <loadBit+0xf4>)
 8002192:	2200      	movs	r2, #0
 8002194:	801a      	strh	r2, [r3, #0]

	//Increment bitSaveCount
	bitSaveCount++;
 8002196:	4b0b      	ldr	r3, [pc, #44]	; (80021c4 <loadBit+0xfc>)
 8002198:	881b      	ldrh	r3, [r3, #0]
 800219a:	3301      	adds	r3, #1
 800219c:	b29a      	uxth	r2, r3
 800219e:	4b09      	ldr	r3, [pc, #36]	; (80021c4 <loadBit+0xfc>)
 80021a0:	801a      	strh	r2, [r3, #0]
	if (bitSaveCount >= RX_BUFFERSIZE)
 80021a2:	4b08      	ldr	r3, [pc, #32]	; (80021c4 <loadBit+0xfc>)
 80021a4:	881b      	ldrh	r3, [r3, #0]
 80021a6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80021aa:	d302      	bcc.n	80021b2 <loadBit+0xea>
		bitSaveCount = 0;
 80021ac:	4b05      	ldr	r3, [pc, #20]	; (80021c4 <loadBit+0xfc>)
 80021ae:	2200      	movs	r2, #0
 80021b0:	801a      	strh	r2, [r3, #0]

	return currbit;
 80021b2:	687b      	ldr	r3, [r7, #4]
}
 80021b4:	4618      	mov	r0, r3
 80021b6:	3708      	adds	r7, #8
 80021b8:	46bd      	mov	sp, r7
 80021ba:	bd80      	pop	{r7, pc}
 80021bc:	2000009e 	.word	0x2000009e
 80021c0:	20002d08 	.word	0x20002d08
 80021c4:	200000a0 	.word	0x200000a0
 80021c8:	20003da0 	.word	0x20003da0

080021cc <loadOctet>:
int loadOctet(bool* bufferptr) {
 80021cc:	b5b0      	push	{r4, r5, r7, lr}
 80021ce:	b088      	sub	sp, #32
 80021d0:	af00      	add	r7, sp, #0
 80021d2:	6078      	str	r0, [r7, #4]
	int bit;
	bool myPtr[8];
	bool isFlag = true;
 80021d4:	2301      	movs	r3, #1
 80021d6:	77fb      	strb	r3, [r7, #31]

	for (int i = 0; i < 8; i++) {
 80021d8:	2300      	movs	r3, #0
 80021da:	61bb      	str	r3, [r7, #24]
 80021dc:	e024      	b.n	8002228 <loadOctet+0x5c>
		bit = loadBit();
 80021de:	f7ff ff73 	bl	80020c8 <loadBit>
 80021e2:	6138      	str	r0, [r7, #16]
        if(bit < 0){
 80021e4:	693b      	ldr	r3, [r7, #16]
 80021e6:	2b00      	cmp	r3, #0
 80021e8:	da02      	bge.n	80021f0 <loadOctet+0x24>
        	return -1;
 80021ea:	f04f 33ff 	mov.w	r3, #4294967295
 80021ee:	e07d      	b.n	80022ec <loadOctet+0x120>
        }
		myPtr[i] = bit;
 80021f0:	693b      	ldr	r3, [r7, #16]
 80021f2:	2b00      	cmp	r3, #0
 80021f4:	bf14      	ite	ne
 80021f6:	2301      	movne	r3, #1
 80021f8:	2300      	moveq	r3, #0
 80021fa:	b2d9      	uxtb	r1, r3
 80021fc:	f107 0208 	add.w	r2, r7, #8
 8002200:	69bb      	ldr	r3, [r7, #24]
 8002202:	4413      	add	r3, r2
 8002204:	460a      	mov	r2, r1
 8002206:	701a      	strb	r2, [r3, #0]
        if(myPtr[i] != AX25TBYTE[i]){
 8002208:	f107 0208 	add.w	r2, r7, #8
 800220c:	69bb      	ldr	r3, [r7, #24]
 800220e:	4413      	add	r3, r2
 8002210:	781a      	ldrb	r2, [r3, #0]
 8002212:	4938      	ldr	r1, [pc, #224]	; (80022f4 <loadOctet+0x128>)
 8002214:	69bb      	ldr	r3, [r7, #24]
 8002216:	440b      	add	r3, r1
 8002218:	781b      	ldrb	r3, [r3, #0]
 800221a:	429a      	cmp	r2, r3
 800221c:	d001      	beq.n	8002222 <loadOctet+0x56>
        	isFlag = false;
 800221e:	2300      	movs	r3, #0
 8002220:	77fb      	strb	r3, [r7, #31]
	for (int i = 0; i < 8; i++) {
 8002222:	69bb      	ldr	r3, [r7, #24]
 8002224:	3301      	adds	r3, #1
 8002226:	61bb      	str	r3, [r7, #24]
 8002228:	69bb      	ldr	r3, [r7, #24]
 800222a:	2b07      	cmp	r3, #7
 800222c:	ddd7      	ble.n	80021de <loadOctet+0x12>
        }
    }
	//If this is not a flag, copy the values into the buffer pointer
	if(!isFlag){
 800222e:	7ffb      	ldrb	r3, [r7, #31]
 8002230:	f083 0301 	eor.w	r3, r3, #1
 8002234:	b2db      	uxtb	r3, r3
 8002236:	2b00      	cmp	r3, #0
 8002238:	d057      	beq.n	80022ea <loadOctet+0x11e>
		sprintf(uartData, "Printing octet = ");
 800223a:	4a2f      	ldr	r2, [pc, #188]	; (80022f8 <loadOctet+0x12c>)
 800223c:	4b2f      	ldr	r3, [pc, #188]	; (80022fc <loadOctet+0x130>)
 800223e:	4615      	mov	r5, r2
 8002240:	461c      	mov	r4, r3
 8002242:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002244:	6028      	str	r0, [r5, #0]
 8002246:	6069      	str	r1, [r5, #4]
 8002248:	60aa      	str	r2, [r5, #8]
 800224a:	60eb      	str	r3, [r5, #12]
 800224c:	8823      	ldrh	r3, [r4, #0]
 800224e:	822b      	strh	r3, [r5, #16]
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8002250:	4829      	ldr	r0, [pc, #164]	; (80022f8 <loadOctet+0x12c>)
 8002252:	f7fd ffdd 	bl	8000210 <strlen>
 8002256:	4603      	mov	r3, r0
 8002258:	b29a      	uxth	r2, r3
 800225a:	230a      	movs	r3, #10
 800225c:	4926      	ldr	r1, [pc, #152]	; (80022f8 <loadOctet+0x12c>)
 800225e:	4828      	ldr	r0, [pc, #160]	; (8002300 <loadOctet+0x134>)
 8002260:	f002 ff7d 	bl	800515e <HAL_UART_Transmit>

		for(int i = 0;i<8;i++){
 8002264:	2300      	movs	r3, #0
 8002266:	617b      	str	r3, [r7, #20]
 8002268:	e02c      	b.n	80022c4 <loadOctet+0xf8>
			bufferptr[7-i] = (myPtr[7-i]==1)?true:false;
 800226a:	697b      	ldr	r3, [r7, #20]
 800226c:	f1c3 0307 	rsb	r3, r3, #7
 8002270:	f107 0220 	add.w	r2, r7, #32
 8002274:	4413      	add	r3, r2
 8002276:	f813 2c18 	ldrb.w	r2, [r3, #-24]
 800227a:	697b      	ldr	r3, [r7, #20]
 800227c:	f1c3 0307 	rsb	r3, r3, #7
 8002280:	4619      	mov	r1, r3
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	440b      	add	r3, r1
 8002286:	701a      	strb	r2, [r3, #0]
			rxBit_count++;
 8002288:	4b1e      	ldr	r3, [pc, #120]	; (8002304 <loadOctet+0x138>)
 800228a:	681b      	ldr	r3, [r3, #0]
 800228c:	3301      	adds	r3, #1
 800228e:	4a1d      	ldr	r2, [pc, #116]	; (8002304 <loadOctet+0x138>)
 8002290:	6013      	str	r3, [r2, #0]
			sprintf(uartData, " %d ",bufferptr[7-i]);
 8002292:	697b      	ldr	r3, [r7, #20]
 8002294:	f1c3 0307 	rsb	r3, r3, #7
 8002298:	461a      	mov	r2, r3
 800229a:	687b      	ldr	r3, [r7, #4]
 800229c:	4413      	add	r3, r2
 800229e:	781b      	ldrb	r3, [r3, #0]
 80022a0:	461a      	mov	r2, r3
 80022a2:	4919      	ldr	r1, [pc, #100]	; (8002308 <loadOctet+0x13c>)
 80022a4:	4814      	ldr	r0, [pc, #80]	; (80022f8 <loadOctet+0x12c>)
 80022a6:	f003 ff43 	bl	8006130 <siprintf>
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80022aa:	4813      	ldr	r0, [pc, #76]	; (80022f8 <loadOctet+0x12c>)
 80022ac:	f7fd ffb0 	bl	8000210 <strlen>
 80022b0:	4603      	mov	r3, r0
 80022b2:	b29a      	uxth	r2, r3
 80022b4:	230a      	movs	r3, #10
 80022b6:	4910      	ldr	r1, [pc, #64]	; (80022f8 <loadOctet+0x12c>)
 80022b8:	4811      	ldr	r0, [pc, #68]	; (8002300 <loadOctet+0x134>)
 80022ba:	f002 ff50 	bl	800515e <HAL_UART_Transmit>
		for(int i = 0;i<8;i++){
 80022be:	697b      	ldr	r3, [r7, #20]
 80022c0:	3301      	adds	r3, #1
 80022c2:	617b      	str	r3, [r7, #20]
 80022c4:	697b      	ldr	r3, [r7, #20]
 80022c6:	2b07      	cmp	r3, #7
 80022c8:	ddcf      	ble.n	800226a <loadOctet+0x9e>
		}
		sprintf(uartData, "\r\n");
 80022ca:	4b0b      	ldr	r3, [pc, #44]	; (80022f8 <loadOctet+0x12c>)
 80022cc:	4a0f      	ldr	r2, [pc, #60]	; (800230c <loadOctet+0x140>)
 80022ce:	8811      	ldrh	r1, [r2, #0]
 80022d0:	7892      	ldrb	r2, [r2, #2]
 80022d2:	8019      	strh	r1, [r3, #0]
 80022d4:	709a      	strb	r2, [r3, #2]
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80022d6:	4808      	ldr	r0, [pc, #32]	; (80022f8 <loadOctet+0x12c>)
 80022d8:	f7fd ff9a 	bl	8000210 <strlen>
 80022dc:	4603      	mov	r3, r0
 80022de:	b29a      	uxth	r2, r3
 80022e0:	230a      	movs	r3, #10
 80022e2:	4905      	ldr	r1, [pc, #20]	; (80022f8 <loadOctet+0x12c>)
 80022e4:	4806      	ldr	r0, [pc, #24]	; (8002300 <loadOctet+0x134>)
 80022e6:	f002 ff3a 	bl	800515e <HAL_UART_Transmit>
	}
	return isFlag;
 80022ea:	7ffb      	ldrb	r3, [r7, #31]
}
 80022ec:	4618      	mov	r0, r3
 80022ee:	3720      	adds	r7, #32
 80022f0:	46bd      	mov	sp, r7
 80022f2:	bdb0      	pop	{r4, r5, r7, pc}
 80022f4:	20000000 	.word	0x20000000
 80022f8:	20001f3c 	.word	0x20001f3c
 80022fc:	08007b84 	.word	0x08007b84
 8002300:	20003d60 	.word	0x20003d60
 8002304:	20000094 	.word	0x20000094
 8002308:	08007b98 	.word	0x08007b98
 800230c:	08007ba0 	.word	0x08007ba0

08002310 <streamGet>:
int streamGet() {
 8002310:	b5b0      	push	{r4, r5, r7, lr}
 8002312:	b090      	sub	sp, #64	; 0x40
 8002314:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 8002316:	4b72      	ldr	r3, [pc, #456]	; (80024e0 <streamGet+0x1d0>)
 8002318:	62bb      	str	r3, [r7, #40]	; 0x28

	int byteArray[8];
	int max_octets = (int)(AX25_PACKET_MAX)/8;
 800231a:	f240 134b 	movw	r3, #331	; 0x14b
 800231e:	627b      	str	r3, [r7, #36]	; 0x24
	int octet_count,good_octet;
	bool gotflag;

	//Just do this unless we need to toggle
	while(!changeMode){
 8002320:	e0cf      	b.n	80024c2 <streamGet+0x1b2>
		gotflag = false;
 8002322:	2300      	movs	r3, #0
 8002324:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

		//Slide bits
		for(int i = 0; i < 7; i++){
 8002328:	2300      	movs	r3, #0
 800232a:	633b      	str	r3, [r7, #48]	; 0x30
 800232c:	e011      	b.n	8002352 <streamGet+0x42>
			byteArray[i] = byteArray[i+1];
 800232e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002330:	3301      	adds	r3, #1
 8002332:	009b      	lsls	r3, r3, #2
 8002334:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8002338:	4413      	add	r3, r2
 800233a:	f853 2c3c 	ldr.w	r2, [r3, #-60]
 800233e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002340:	009b      	lsls	r3, r3, #2
 8002342:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8002346:	440b      	add	r3, r1
 8002348:	f843 2c3c 	str.w	r2, [r3, #-60]
		for(int i = 0; i < 7; i++){
 800234c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800234e:	3301      	adds	r3, #1
 8002350:	633b      	str	r3, [r7, #48]	; 0x30
 8002352:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002354:	2b06      	cmp	r3, #6
 8002356:	ddea      	ble.n	800232e <streamGet+0x1e>
		}
		byteArray[7] = loadBit();
 8002358:	f7ff feb6 	bl	80020c8 <loadBit>
 800235c:	4603      	mov	r3, r0
 800235e:	623b      	str	r3, [r7, #32]
		//sprintf(uartData, "Got bit %d\r\n",byteArray[7]);
		//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);

		//Detect AX25 flag bytes
		for(int i = 0;i < 8; i++){
 8002360:	2300      	movs	r3, #0
 8002362:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002364:	e019      	b.n	800239a <streamGet+0x8a>
			//If the byte isn't lined up, break loop
			if(byteArray[i]!=AX25TBYTE[i]) {
 8002366:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002368:	009b      	lsls	r3, r3, #2
 800236a:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800236e:	4413      	add	r3, r2
 8002370:	f853 3c3c 	ldr.w	r3, [r3, #-60]
 8002374:	495b      	ldr	r1, [pc, #364]	; (80024e4 <streamGet+0x1d4>)
 8002376:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8002378:	440a      	add	r2, r1
 800237a:	7812      	ldrb	r2, [r2, #0]
 800237c:	4293      	cmp	r3, r2
 800237e:	d003      	beq.n	8002388 <streamGet+0x78>
				gotflag = false;
 8002380:	2300      	movs	r3, #0
 8002382:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
				break;
 8002386:	e00b      	b.n	80023a0 <streamGet+0x90>
			}
			//If the loop makes it to the lowest bit, the flag should be lined up
			else if(i==7){
 8002388:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800238a:	2b07      	cmp	r3, #7
 800238c:	d102      	bne.n	8002394 <streamGet+0x84>
				gotflag = true;
 800238e:	2301      	movs	r3, #1
 8002390:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
		for(int i = 0;i < 8; i++){
 8002394:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002396:	3301      	adds	r3, #1
 8002398:	62fb      	str	r3, [r7, #44]	; 0x2c
 800239a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800239c:	2b07      	cmp	r3, #7
 800239e:	dde2      	ble.n	8002366 <streamGet+0x56>
			}
		}

		//Got flag
		if(gotflag){
 80023a0:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 80023a4:	2b00      	cmp	r3, #0
 80023a6:	f000 808c 	beq.w	80024c2 <streamGet+0x1b2>
			sprintf(uartData, "Start AX.25 Flag Detected\r\n");
 80023aa:	4a4f      	ldr	r2, [pc, #316]	; (80024e8 <streamGet+0x1d8>)
 80023ac:	4b4f      	ldr	r3, [pc, #316]	; (80024ec <streamGet+0x1dc>)
 80023ae:	4615      	mov	r5, r2
 80023b0:	461c      	mov	r4, r3
 80023b2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80023b4:	6028      	str	r0, [r5, #0]
 80023b6:	6069      	str	r1, [r5, #4]
 80023b8:	60aa      	str	r2, [r5, #8]
 80023ba:	60eb      	str	r3, [r5, #12]
 80023bc:	cc07      	ldmia	r4!, {r0, r1, r2}
 80023be:	6128      	str	r0, [r5, #16]
 80023c0:	6169      	str	r1, [r5, #20]
 80023c2:	61aa      	str	r2, [r5, #24]
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80023c4:	4848      	ldr	r0, [pc, #288]	; (80024e8 <streamGet+0x1d8>)
 80023c6:	f7fd ff23 	bl	8000210 <strlen>
 80023ca:	4603      	mov	r3, r0
 80023cc:	b29a      	uxth	r2, r3
 80023ce:	230a      	movs	r3, #10
 80023d0:	4945      	ldr	r1, [pc, #276]	; (80024e8 <streamGet+0x1d8>)
 80023d2:	4847      	ldr	r0, [pc, #284]	; (80024f0 <streamGet+0x1e0>)
 80023d4:	f002 fec3 	bl	800515e <HAL_UART_Transmit>
			octet_count  = 0;
 80023d8:	2300      	movs	r3, #0
 80023da:	63fb      	str	r3, [r7, #60]	; 0x3c

			//Until AX.25 buffer overflows, continue reading octets
			good_octet = 0;
 80023dc:	2300      	movs	r3, #0
 80023de:	63bb      	str	r3, [r7, #56]	; 0x38
			while( (good_octet==0) && (octet_count < max_octets) ){
 80023e0:	e00a      	b.n	80023f8 <streamGet+0xe8>
				good_octet = loadOctet(&local_packet->AX25_PACKET[octet_count*8]);
 80023e2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80023e4:	00db      	lsls	r3, r3, #3
 80023e6:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80023e8:	4413      	add	r3, r2
 80023ea:	4618      	mov	r0, r3
 80023ec:	f7ff feee 	bl	80021cc <loadOctet>
 80023f0:	63b8      	str	r0, [r7, #56]	; 0x38
				//sprintf(uartData, "Loaded octet %d out of %d\r\n",octet_count,max_octets);
				//sprintf(uartData, "good_octet: %d\r\n",good_octet);
				//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);

				octet_count+=1;
 80023f2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80023f4:	3301      	adds	r3, #1
 80023f6:	63fb      	str	r3, [r7, #60]	; 0x3c
			while( (good_octet==0) && (octet_count < max_octets) ){
 80023f8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80023fa:	2b00      	cmp	r3, #0
 80023fc:	d103      	bne.n	8002406 <streamGet+0xf6>
 80023fe:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8002400:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002402:	429a      	cmp	r2, r3
 8002404:	dbed      	blt.n	80023e2 <streamGet+0xd2>
			}

			//If ax.25 buffer overflows or an octet was bad, this was a bad packet
			if((octet_count >= max_octets) || (good_octet!=1)){
 8002406:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8002408:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800240a:	429a      	cmp	r2, r3
 800240c:	da02      	bge.n	8002414 <streamGet+0x104>
 800240e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002410:	2b01      	cmp	r3, #1
 8002412:	d00f      	beq.n	8002434 <streamGet+0x124>
				sprintf(uartData, "Bad packet! Not enough octets\r\n\n",octet_count);
 8002414:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8002416:	4937      	ldr	r1, [pc, #220]	; (80024f4 <streamGet+0x1e4>)
 8002418:	4833      	ldr	r0, [pc, #204]	; (80024e8 <streamGet+0x1d8>)
 800241a:	f003 fe89 	bl	8006130 <siprintf>
				HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800241e:	4832      	ldr	r0, [pc, #200]	; (80024e8 <streamGet+0x1d8>)
 8002420:	f7fd fef6 	bl	8000210 <strlen>
 8002424:	4603      	mov	r3, r0
 8002426:	b29a      	uxth	r2, r3
 8002428:	230a      	movs	r3, #10
 800242a:	492f      	ldr	r1, [pc, #188]	; (80024e8 <streamGet+0x1d8>)
 800242c:	4830      	ldr	r0, [pc, #192]	; (80024f0 <streamGet+0x1e0>)
 800242e:	f002 fe96 	bl	800515e <HAL_UART_Transmit>
 8002432:	e046      	b.n	80024c2 <streamGet+0x1b2>
			}
			//
			else if(octet_count == 1){
 8002434:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002436:	2b01      	cmp	r3, #1
 8002438:	d12a      	bne.n	8002490 <streamGet+0x180>
				sprintf(uartData, "Stop AX.25 Flag Detected\r\n");
 800243a:	4a2b      	ldr	r2, [pc, #172]	; (80024e8 <streamGet+0x1d8>)
 800243c:	4b2e      	ldr	r3, [pc, #184]	; (80024f8 <streamGet+0x1e8>)
 800243e:	4615      	mov	r5, r2
 8002440:	461c      	mov	r4, r3
 8002442:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002444:	6028      	str	r0, [r5, #0]
 8002446:	6069      	str	r1, [r5, #4]
 8002448:	60aa      	str	r2, [r5, #8]
 800244a:	60eb      	str	r3, [r5, #12]
 800244c:	cc03      	ldmia	r4!, {r0, r1}
 800244e:	6128      	str	r0, [r5, #16]
 8002450:	6169      	str	r1, [r5, #20]
 8002452:	8823      	ldrh	r3, [r4, #0]
 8002454:	78a2      	ldrb	r2, [r4, #2]
 8002456:	832b      	strh	r3, [r5, #24]
 8002458:	4613      	mov	r3, r2
 800245a:	76ab      	strb	r3, [r5, #26]
				HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800245c:	4822      	ldr	r0, [pc, #136]	; (80024e8 <streamGet+0x1d8>)
 800245e:	f7fd fed7 	bl	8000210 <strlen>
 8002462:	4603      	mov	r3, r0
 8002464:	b29a      	uxth	r2, r3
 8002466:	230a      	movs	r3, #10
 8002468:	491f      	ldr	r1, [pc, #124]	; (80024e8 <streamGet+0x1d8>)
 800246a:	4821      	ldr	r0, [pc, #132]	; (80024f0 <streamGet+0x1e0>)
 800246c:	f002 fe77 	bl	800515e <HAL_UART_Transmit>
				sprintf(uartData, "Bad packet! Not enough octetes.\r\n\n",octet_count);
 8002470:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8002472:	4922      	ldr	r1, [pc, #136]	; (80024fc <streamGet+0x1ec>)
 8002474:	481c      	ldr	r0, [pc, #112]	; (80024e8 <streamGet+0x1d8>)
 8002476:	f003 fe5b 	bl	8006130 <siprintf>
				HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800247a:	481b      	ldr	r0, [pc, #108]	; (80024e8 <streamGet+0x1d8>)
 800247c:	f7fd fec8 	bl	8000210 <strlen>
 8002480:	4603      	mov	r3, r0
 8002482:	b29a      	uxth	r2, r3
 8002484:	230a      	movs	r3, #10
 8002486:	4918      	ldr	r1, [pc, #96]	; (80024e8 <streamGet+0x1d8>)
 8002488:	4819      	ldr	r0, [pc, #100]	; (80024f0 <streamGet+0x1e0>)
 800248a:	f002 fe68 	bl	800515e <HAL_UART_Transmit>
 800248e:	e018      	b.n	80024c2 <streamGet+0x1b2>
			}
			//If ax.25 buffer does not overflow, this was a good packet
			else {
				sprintf(uartData, "Stop AX.25 Flag Detected\r\n\n");
 8002490:	4a15      	ldr	r2, [pc, #84]	; (80024e8 <streamGet+0x1d8>)
 8002492:	4b1b      	ldr	r3, [pc, #108]	; (8002500 <streamGet+0x1f0>)
 8002494:	4615      	mov	r5, r2
 8002496:	461c      	mov	r4, r3
 8002498:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800249a:	6028      	str	r0, [r5, #0]
 800249c:	6069      	str	r1, [r5, #4]
 800249e:	60aa      	str	r2, [r5, #8]
 80024a0:	60eb      	str	r3, [r5, #12]
 80024a2:	cc07      	ldmia	r4!, {r0, r1, r2}
 80024a4:	6128      	str	r0, [r5, #16]
 80024a6:	6169      	str	r1, [r5, #20]
 80024a8:	61aa      	str	r2, [r5, #24]
				HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80024aa:	480f      	ldr	r0, [pc, #60]	; (80024e8 <streamGet+0x1d8>)
 80024ac:	f7fd feb0 	bl	8000210 <strlen>
 80024b0:	4603      	mov	r3, r0
 80024b2:	b29a      	uxth	r2, r3
 80024b4:	230a      	movs	r3, #10
 80024b6:	490c      	ldr	r1, [pc, #48]	; (80024e8 <streamGet+0x1d8>)
 80024b8:	480d      	ldr	r0, [pc, #52]	; (80024f0 <streamGet+0x1e0>)
 80024ba:	f002 fe50 	bl	800515e <HAL_UART_Transmit>

				return 1;
 80024be:	2301      	movs	r3, #1
 80024c0:	e009      	b.n	80024d6 <streamGet+0x1c6>
	while(!changeMode){
 80024c2:	4b10      	ldr	r3, [pc, #64]	; (8002504 <streamGet+0x1f4>)
 80024c4:	781b      	ldrb	r3, [r3, #0]
 80024c6:	f083 0301 	eor.w	r3, r3, #1
 80024ca:	b2db      	uxtb	r3, r3
 80024cc:	2b00      	cmp	r3, #0
 80024ce:	f47f af28 	bne.w	8002322 <streamGet+0x12>
			//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
		}
	}
	//Break if mode needs to change
	if(toggleMode)
		return -1;
 80024d2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80024d6:	4618      	mov	r0, r3
 80024d8:	3740      	adds	r7, #64	; 0x40
 80024da:	46bd      	mov	sp, r7
 80024dc:	bdb0      	pop	{r4, r5, r7, pc}
 80024de:	bf00      	nop
 80024e0:	200000b0 	.word	0x200000b0
 80024e4:	20000000 	.word	0x20000000
 80024e8:	20001f3c 	.word	0x20001f3c
 80024ec:	08007ba4 	.word	0x08007ba4
 80024f0:	20003d60 	.word	0x20003d60
 80024f4:	08007bc0 	.word	0x08007bc0
 80024f8:	08007be4 	.word	0x08007be4
 80024fc:	08007c00 	.word	0x08007c00
 8002500:	08007c24 	.word	0x08007c24
 8002504:	20000099 	.word	0x20000099

08002508 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN PV */

/* This callback is called by the HAL_UART_IRQHandler when the given number of bytes are received */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8002508:	b580      	push	{r7, lr}
 800250a:	b082      	sub	sp, #8
 800250c:	af00      	add	r7, sp, #0
 800250e:	6078      	str	r0, [r7, #4]
  if (huart->Instance == USART2)
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	681b      	ldr	r3, [r3, #0]
 8002514:	4a04      	ldr	r2, [pc, #16]	; (8002528 <HAL_UART_RxCpltCallback+0x20>)
 8002516:	4293      	cmp	r3, r2
 8002518:	d101      	bne.n	800251e <HAL_UART_RxCpltCallback+0x16>
  {
	  UART2_EXCEPTION_CALLBACK();
 800251a:	f7ff f93f 	bl	800179c <UART2_EXCEPTION_CALLBACK>
  }
}
 800251e:	bf00      	nop
 8002520:	3708      	adds	r7, #8
 8002522:	46bd      	mov	sp, r7
 8002524:	bd80      	pop	{r7, pc}
 8002526:	bf00      	nop
 8002528:	40004400 	.word	0x40004400

0800252c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800252c:	b580      	push	{r7, lr}
 800252e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002530:	f000 fca0 	bl	8002e74 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002534:	f000 f81e 	bl	8002574 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002538:	f000 f9a0 	bl	800287c <MX_GPIO_Init>
  MX_DMA_Init();
 800253c:	f000 f97e 	bl	800283c <MX_DMA_Init>
  MX_DAC_Init();
 8002540:	f000 f886 	bl	8002650 <MX_DAC_Init>
  MX_TIM2_Init();
 8002544:	f000 f8ae 	bl	80026a4 <MX_TIM2_Init>
  MX_TIM3_Init();
 8002548:	f000 f8f8 	bl	800273c <MX_TIM3_Init>
  MX_USART2_UART_Init();
 800254c:	f000 f944 	bl	80027d8 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
	HAL_TIM_Base_Start(&htim2);
 8002550:	4806      	ldr	r0, [pc, #24]	; (800256c <main+0x40>)
 8002552:	f002 f992 	bl	800487a <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start_IT(&htim3);
 8002556:	4806      	ldr	r0, [pc, #24]	; (8002570 <main+0x44>)
 8002558:	f002 f9de 	bl	8004918 <HAL_TIM_Base_Start_IT>

	uart_gpio_init();
 800255c:	f000 fa5c 	bl	8002a18 <uart_gpio_init>

	initProgram(false);
 8002560:	2000      	movs	r0, #0
 8002562:	f7ff fbcd 	bl	8001d00 <initProgram>
  /* USER CODE BEGIN WHILE */
	while (1) {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
		tx_rx();
 8002566:	f7fe fd35 	bl	8000fd4 <tx_rx>
 800256a:	e7fc      	b.n	8002566 <main+0x3a>
 800256c:	20003d20 	.word	0x20003d20
 8002570:	20002c68 	.word	0x20002c68

08002574 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002574:	b580      	push	{r7, lr}
 8002576:	b094      	sub	sp, #80	; 0x50
 8002578:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800257a:	f107 031c 	add.w	r3, r7, #28
 800257e:	2234      	movs	r2, #52	; 0x34
 8002580:	2100      	movs	r1, #0
 8002582:	4618      	mov	r0, r3
 8002584:	f003 fd13 	bl	8005fae <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002588:	f107 0308 	add.w	r3, r7, #8
 800258c:	2200      	movs	r2, #0
 800258e:	601a      	str	r2, [r3, #0]
 8002590:	605a      	str	r2, [r3, #4]
 8002592:	609a      	str	r2, [r3, #8]
 8002594:	60da      	str	r2, [r3, #12]
 8002596:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8002598:	2300      	movs	r3, #0
 800259a:	607b      	str	r3, [r7, #4]
 800259c:	4b2a      	ldr	r3, [pc, #168]	; (8002648 <SystemClock_Config+0xd4>)
 800259e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025a0:	4a29      	ldr	r2, [pc, #164]	; (8002648 <SystemClock_Config+0xd4>)
 80025a2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80025a6:	6413      	str	r3, [r2, #64]	; 0x40
 80025a8:	4b27      	ldr	r3, [pc, #156]	; (8002648 <SystemClock_Config+0xd4>)
 80025aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025ac:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80025b0:	607b      	str	r3, [r7, #4]
 80025b2:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 80025b4:	2300      	movs	r3, #0
 80025b6:	603b      	str	r3, [r7, #0]
 80025b8:	4b24      	ldr	r3, [pc, #144]	; (800264c <SystemClock_Config+0xd8>)
 80025ba:	681b      	ldr	r3, [r3, #0]
 80025bc:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80025c0:	4a22      	ldr	r2, [pc, #136]	; (800264c <SystemClock_Config+0xd8>)
 80025c2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80025c6:	6013      	str	r3, [r2, #0]
 80025c8:	4b20      	ldr	r3, [pc, #128]	; (800264c <SystemClock_Config+0xd8>)
 80025ca:	681b      	ldr	r3, [r3, #0]
 80025cc:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80025d0:	603b      	str	r3, [r7, #0]
 80025d2:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80025d4:	2301      	movs	r3, #1
 80025d6:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80025d8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80025dc:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80025de:	2302      	movs	r3, #2
 80025e0:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80025e2:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80025e6:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 80025e8:	2304      	movs	r3, #4
 80025ea:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 90;
 80025ec:	235a      	movs	r3, #90	; 0x5a
 80025ee:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80025f0:	2302      	movs	r3, #2
 80025f2:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80025f4:	2302      	movs	r3, #2
 80025f6:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 80025f8:	2302      	movs	r3, #2
 80025fa:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80025fc:	f107 031c 	add.w	r3, r7, #28
 8002600:	4618      	mov	r0, r3
 8002602:	f001 feb5 	bl	8004370 <HAL_RCC_OscConfig>
 8002606:	4603      	mov	r3, r0
 8002608:	2b00      	cmp	r3, #0
 800260a:	d001      	beq.n	8002610 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 800260c:	f000 fa2c 	bl	8002a68 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002610:	230f      	movs	r3, #15
 8002612:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002614:	2302      	movs	r3, #2
 8002616:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002618:	2300      	movs	r3, #0
 800261a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 800261c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002620:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8002622:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002626:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8002628:	f107 0308 	add.w	r3, r7, #8
 800262c:	2102      	movs	r1, #2
 800262e:	4618      	mov	r0, r3
 8002630:	f001 fbe4 	bl	8003dfc <HAL_RCC_ClockConfig>
 8002634:	4603      	mov	r3, r0
 8002636:	2b00      	cmp	r3, #0
 8002638:	d001      	beq.n	800263e <SystemClock_Config+0xca>
  {
    Error_Handler();
 800263a:	f000 fa15 	bl	8002a68 <Error_Handler>
  }
}
 800263e:	bf00      	nop
 8002640:	3750      	adds	r7, #80	; 0x50
 8002642:	46bd      	mov	sp, r7
 8002644:	bd80      	pop	{r7, pc}
 8002646:	bf00      	nop
 8002648:	40023800 	.word	0x40023800
 800264c:	40007000 	.word	0x40007000

08002650 <MX_DAC_Init>:
  * @brief DAC Initialization Function
  * @param None
  * @retval None
  */
static void MX_DAC_Init(void)
{
 8002650:	b580      	push	{r7, lr}
 8002652:	b082      	sub	sp, #8
 8002654:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN DAC_Init 0 */

  /* USER CODE END DAC_Init 0 */

  DAC_ChannelConfTypeDef sConfig = {0};
 8002656:	463b      	mov	r3, r7
 8002658:	2200      	movs	r2, #0
 800265a:	601a      	str	r2, [r3, #0]
 800265c:	605a      	str	r2, [r3, #4]
  /* USER CODE BEGIN DAC_Init 1 */

  /* USER CODE END DAC_Init 1 */
  /** DAC Initialization
  */
  hdac.Instance = DAC;
 800265e:	4b0f      	ldr	r3, [pc, #60]	; (800269c <MX_DAC_Init+0x4c>)
 8002660:	4a0f      	ldr	r2, [pc, #60]	; (80026a0 <MX_DAC_Init+0x50>)
 8002662:	601a      	str	r2, [r3, #0]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8002664:	480d      	ldr	r0, [pc, #52]	; (800269c <MX_DAC_Init+0x4c>)
 8002666:	f000 fdda 	bl	800321e <HAL_DAC_Init>
 800266a:	4603      	mov	r3, r0
 800266c:	2b00      	cmp	r3, #0
 800266e:	d001      	beq.n	8002674 <MX_DAC_Init+0x24>
  {
    Error_Handler();
 8002670:	f000 f9fa 	bl	8002a68 <Error_Handler>
  }
  /** DAC channel OUT1 config
  */
  sConfig.DAC_Trigger = DAC_TRIGGER_T2_TRGO;
 8002674:	2324      	movs	r3, #36	; 0x24
 8002676:	603b      	str	r3, [r7, #0]
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 8002678:	2300      	movs	r3, #0
 800267a:	607b      	str	r3, [r7, #4]
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 800267c:	463b      	mov	r3, r7
 800267e:	2200      	movs	r2, #0
 8002680:	4619      	mov	r1, r3
 8002682:	4806      	ldr	r0, [pc, #24]	; (800269c <MX_DAC_Init+0x4c>)
 8002684:	f000 fe2e 	bl	80032e4 <HAL_DAC_ConfigChannel>
 8002688:	4603      	mov	r3, r0
 800268a:	2b00      	cmp	r3, #0
 800268c:	d001      	beq.n	8002692 <MX_DAC_Init+0x42>
  {
    Error_Handler();
 800268e:	f000 f9eb 	bl	8002a68 <Error_Handler>
  }
  /* USER CODE BEGIN DAC_Init 2 */

  /* USER CODE END DAC_Init 2 */

}
 8002692:	bf00      	nop
 8002694:	3708      	adds	r7, #8
 8002696:	46bd      	mov	sp, r7
 8002698:	bd80      	pop	{r7, pc}
 800269a:	bf00      	nop
 800269c:	20003d0c 	.word	0x20003d0c
 80026a0:	40007400 	.word	0x40007400

080026a4 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80026a4:	b580      	push	{r7, lr}
 80026a6:	b086      	sub	sp, #24
 80026a8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80026aa:	f107 0308 	add.w	r3, r7, #8
 80026ae:	2200      	movs	r2, #0
 80026b0:	601a      	str	r2, [r3, #0]
 80026b2:	605a      	str	r2, [r3, #4]
 80026b4:	609a      	str	r2, [r3, #8]
 80026b6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80026b8:	463b      	mov	r3, r7
 80026ba:	2200      	movs	r2, #0
 80026bc:	601a      	str	r2, [r3, #0]
 80026be:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80026c0:	4b1d      	ldr	r3, [pc, #116]	; (8002738 <MX_TIM2_Init+0x94>)
 80026c2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80026c6:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 9-1;
 80026c8:	4b1b      	ldr	r3, [pc, #108]	; (8002738 <MX_TIM2_Init+0x94>)
 80026ca:	2208      	movs	r2, #8
 80026cc:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80026ce:	4b1a      	ldr	r3, [pc, #104]	; (8002738 <MX_TIM2_Init+0x94>)
 80026d0:	2200      	movs	r2, #0
 80026d2:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 100-1;
 80026d4:	4b18      	ldr	r3, [pc, #96]	; (8002738 <MX_TIM2_Init+0x94>)
 80026d6:	2263      	movs	r2, #99	; 0x63
 80026d8:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80026da:	4b17      	ldr	r3, [pc, #92]	; (8002738 <MX_TIM2_Init+0x94>)
 80026dc:	2200      	movs	r2, #0
 80026de:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80026e0:	4b15      	ldr	r3, [pc, #84]	; (8002738 <MX_TIM2_Init+0x94>)
 80026e2:	2280      	movs	r2, #128	; 0x80
 80026e4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80026e6:	4814      	ldr	r0, [pc, #80]	; (8002738 <MX_TIM2_Init+0x94>)
 80026e8:	f002 f89c 	bl	8004824 <HAL_TIM_Base_Init>
 80026ec:	4603      	mov	r3, r0
 80026ee:	2b00      	cmp	r3, #0
 80026f0:	d001      	beq.n	80026f6 <MX_TIM2_Init+0x52>
  {
    Error_Handler();
 80026f2:	f000 f9b9 	bl	8002a68 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80026f6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80026fa:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80026fc:	f107 0308 	add.w	r3, r7, #8
 8002700:	4619      	mov	r1, r3
 8002702:	480d      	ldr	r0, [pc, #52]	; (8002738 <MX_TIM2_Init+0x94>)
 8002704:	f002 fa34 	bl	8004b70 <HAL_TIM_ConfigClockSource>
 8002708:	4603      	mov	r3, r0
 800270a:	2b00      	cmp	r3, #0
 800270c:	d001      	beq.n	8002712 <MX_TIM2_Init+0x6e>
  {
    Error_Handler();
 800270e:	f000 f9ab 	bl	8002a68 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 8002712:	2320      	movs	r3, #32
 8002714:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002716:	2300      	movs	r3, #0
 8002718:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800271a:	463b      	mov	r3, r7
 800271c:	4619      	mov	r1, r3
 800271e:	4806      	ldr	r0, [pc, #24]	; (8002738 <MX_TIM2_Init+0x94>)
 8002720:	f002 fc40 	bl	8004fa4 <HAL_TIMEx_MasterConfigSynchronization>
 8002724:	4603      	mov	r3, r0
 8002726:	2b00      	cmp	r3, #0
 8002728:	d001      	beq.n	800272e <MX_TIM2_Init+0x8a>
  {
    Error_Handler();
 800272a:	f000 f99d 	bl	8002a68 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 800272e:	bf00      	nop
 8002730:	3718      	adds	r7, #24
 8002732:	46bd      	mov	sp, r7
 8002734:	bd80      	pop	{r7, pc}
 8002736:	bf00      	nop
 8002738:	20003d20 	.word	0x20003d20

0800273c <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 800273c:	b580      	push	{r7, lr}
 800273e:	b086      	sub	sp, #24
 8002740:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002742:	f107 0308 	add.w	r3, r7, #8
 8002746:	2200      	movs	r2, #0
 8002748:	601a      	str	r2, [r3, #0]
 800274a:	605a      	str	r2, [r3, #4]
 800274c:	609a      	str	r2, [r3, #8]
 800274e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002750:	463b      	mov	r3, r7
 8002752:	2200      	movs	r2, #0
 8002754:	601a      	str	r2, [r3, #0]
 8002756:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8002758:	4b1d      	ldr	r3, [pc, #116]	; (80027d0 <MX_TIM3_Init+0x94>)
 800275a:	4a1e      	ldr	r2, [pc, #120]	; (80027d4 <MX_TIM3_Init+0x98>)
 800275c:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 90-1;
 800275e:	4b1c      	ldr	r3, [pc, #112]	; (80027d0 <MX_TIM3_Init+0x94>)
 8002760:	2259      	movs	r2, #89	; 0x59
 8002762:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002764:	4b1a      	ldr	r3, [pc, #104]	; (80027d0 <MX_TIM3_Init+0x94>)
 8002766:	2200      	movs	r2, #0
 8002768:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 833;
 800276a:	4b19      	ldr	r3, [pc, #100]	; (80027d0 <MX_TIM3_Init+0x94>)
 800276c:	f240 3241 	movw	r2, #833	; 0x341
 8002770:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002772:	4b17      	ldr	r3, [pc, #92]	; (80027d0 <MX_TIM3_Init+0x94>)
 8002774:	2200      	movs	r2, #0
 8002776:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8002778:	4b15      	ldr	r3, [pc, #84]	; (80027d0 <MX_TIM3_Init+0x94>)
 800277a:	2280      	movs	r2, #128	; 0x80
 800277c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800277e:	4814      	ldr	r0, [pc, #80]	; (80027d0 <MX_TIM3_Init+0x94>)
 8002780:	f002 f850 	bl	8004824 <HAL_TIM_Base_Init>
 8002784:	4603      	mov	r3, r0
 8002786:	2b00      	cmp	r3, #0
 8002788:	d001      	beq.n	800278e <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 800278a:	f000 f96d 	bl	8002a68 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800278e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002792:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8002794:	f107 0308 	add.w	r3, r7, #8
 8002798:	4619      	mov	r1, r3
 800279a:	480d      	ldr	r0, [pc, #52]	; (80027d0 <MX_TIM3_Init+0x94>)
 800279c:	f002 f9e8 	bl	8004b70 <HAL_TIM_ConfigClockSource>
 80027a0:	4603      	mov	r3, r0
 80027a2:	2b00      	cmp	r3, #0
 80027a4:	d001      	beq.n	80027aa <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 80027a6:	f000 f95f 	bl	8002a68 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80027aa:	2300      	movs	r3, #0
 80027ac:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80027ae:	2300      	movs	r3, #0
 80027b0:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80027b2:	463b      	mov	r3, r7
 80027b4:	4619      	mov	r1, r3
 80027b6:	4806      	ldr	r0, [pc, #24]	; (80027d0 <MX_TIM3_Init+0x94>)
 80027b8:	f002 fbf4 	bl	8004fa4 <HAL_TIMEx_MasterConfigSynchronization>
 80027bc:	4603      	mov	r3, r0
 80027be:	2b00      	cmp	r3, #0
 80027c0:	d001      	beq.n	80027c6 <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 80027c2:	f000 f951 	bl	8002a68 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80027c6:	bf00      	nop
 80027c8:	3718      	adds	r7, #24
 80027ca:	46bd      	mov	sp, r7
 80027cc:	bd80      	pop	{r7, pc}
 80027ce:	bf00      	nop
 80027d0:	20002c68 	.word	0x20002c68
 80027d4:	40000400 	.word	0x40000400

080027d8 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80027d8:	b580      	push	{r7, lr}
 80027da:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80027dc:	4b15      	ldr	r3, [pc, #84]	; (8002834 <MX_USART2_UART_Init+0x5c>)
 80027de:	4a16      	ldr	r2, [pc, #88]	; (8002838 <MX_USART2_UART_Init+0x60>)
 80027e0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80027e2:	4b14      	ldr	r3, [pc, #80]	; (8002834 <MX_USART2_UART_Init+0x5c>)
 80027e4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80027e8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80027ea:	4b12      	ldr	r3, [pc, #72]	; (8002834 <MX_USART2_UART_Init+0x5c>)
 80027ec:	2200      	movs	r2, #0
 80027ee:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80027f0:	4b10      	ldr	r3, [pc, #64]	; (8002834 <MX_USART2_UART_Init+0x5c>)
 80027f2:	2200      	movs	r2, #0
 80027f4:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80027f6:	4b0f      	ldr	r3, [pc, #60]	; (8002834 <MX_USART2_UART_Init+0x5c>)
 80027f8:	2200      	movs	r2, #0
 80027fa:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80027fc:	4b0d      	ldr	r3, [pc, #52]	; (8002834 <MX_USART2_UART_Init+0x5c>)
 80027fe:	220c      	movs	r2, #12
 8002800:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002802:	4b0c      	ldr	r3, [pc, #48]	; (8002834 <MX_USART2_UART_Init+0x5c>)
 8002804:	2200      	movs	r2, #0
 8002806:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002808:	4b0a      	ldr	r3, [pc, #40]	; (8002834 <MX_USART2_UART_Init+0x5c>)
 800280a:	2200      	movs	r2, #0
 800280c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800280e:	4809      	ldr	r0, [pc, #36]	; (8002834 <MX_USART2_UART_Init+0x5c>)
 8002810:	f002 fc58 	bl	80050c4 <HAL_UART_Init>
 8002814:	4603      	mov	r3, r0
 8002816:	2b00      	cmp	r3, #0
 8002818:	d001      	beq.n	800281e <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800281a:	f000 f925 	bl	8002a68 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */
  HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800281e:	2200      	movs	r2, #0
 8002820:	2100      	movs	r1, #0
 8002822:	2026      	movs	r0, #38	; 0x26
 8002824:	f000 fcb7 	bl	8003196 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002828:	2026      	movs	r0, #38	; 0x26
 800282a:	f000 fcd0 	bl	80031ce <HAL_NVIC_EnableIRQ>
  /* USER CODE END USART2_Init 2 */

}
 800282e:	bf00      	nop
 8002830:	bd80      	pop	{r7, pc}
 8002832:	bf00      	nop
 8002834:	20003d60 	.word	0x20003d60
 8002838:	40004400 	.word	0x40004400

0800283c <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 800283c:	b580      	push	{r7, lr}
 800283e:	b082      	sub	sp, #8
 8002840:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8002842:	2300      	movs	r3, #0
 8002844:	607b      	str	r3, [r7, #4]
 8002846:	4b0c      	ldr	r3, [pc, #48]	; (8002878 <MX_DMA_Init+0x3c>)
 8002848:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800284a:	4a0b      	ldr	r2, [pc, #44]	; (8002878 <MX_DMA_Init+0x3c>)
 800284c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002850:	6313      	str	r3, [r2, #48]	; 0x30
 8002852:	4b09      	ldr	r3, [pc, #36]	; (8002878 <MX_DMA_Init+0x3c>)
 8002854:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002856:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800285a:	607b      	str	r3, [r7, #4]
 800285c:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 800285e:	2200      	movs	r2, #0
 8002860:	2100      	movs	r1, #0
 8002862:	2010      	movs	r0, #16
 8002864:	f000 fc97 	bl	8003196 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 8002868:	2010      	movs	r0, #16
 800286a:	f000 fcb0 	bl	80031ce <HAL_NVIC_EnableIRQ>

}
 800286e:	bf00      	nop
 8002870:	3708      	adds	r7, #8
 8002872:	46bd      	mov	sp, r7
 8002874:	bd80      	pop	{r7, pc}
 8002876:	bf00      	nop
 8002878:	40023800 	.word	0x40023800

0800287c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800287c:	b580      	push	{r7, lr}
 800287e:	b08a      	sub	sp, #40	; 0x28
 8002880:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002882:	f107 0314 	add.w	r3, r7, #20
 8002886:	2200      	movs	r2, #0
 8002888:	601a      	str	r2, [r3, #0]
 800288a:	605a      	str	r2, [r3, #4]
 800288c:	609a      	str	r2, [r3, #8]
 800288e:	60da      	str	r2, [r3, #12]
 8002890:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002892:	2300      	movs	r3, #0
 8002894:	613b      	str	r3, [r7, #16]
 8002896:	4b45      	ldr	r3, [pc, #276]	; (80029ac <MX_GPIO_Init+0x130>)
 8002898:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800289a:	4a44      	ldr	r2, [pc, #272]	; (80029ac <MX_GPIO_Init+0x130>)
 800289c:	f043 0304 	orr.w	r3, r3, #4
 80028a0:	6313      	str	r3, [r2, #48]	; 0x30
 80028a2:	4b42      	ldr	r3, [pc, #264]	; (80029ac <MX_GPIO_Init+0x130>)
 80028a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028a6:	f003 0304 	and.w	r3, r3, #4
 80028aa:	613b      	str	r3, [r7, #16]
 80028ac:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80028ae:	2300      	movs	r3, #0
 80028b0:	60fb      	str	r3, [r7, #12]
 80028b2:	4b3e      	ldr	r3, [pc, #248]	; (80029ac <MX_GPIO_Init+0x130>)
 80028b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028b6:	4a3d      	ldr	r2, [pc, #244]	; (80029ac <MX_GPIO_Init+0x130>)
 80028b8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80028bc:	6313      	str	r3, [r2, #48]	; 0x30
 80028be:	4b3b      	ldr	r3, [pc, #236]	; (80029ac <MX_GPIO_Init+0x130>)
 80028c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028c2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80028c6:	60fb      	str	r3, [r7, #12]
 80028c8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80028ca:	2300      	movs	r3, #0
 80028cc:	60bb      	str	r3, [r7, #8]
 80028ce:	4b37      	ldr	r3, [pc, #220]	; (80029ac <MX_GPIO_Init+0x130>)
 80028d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028d2:	4a36      	ldr	r2, [pc, #216]	; (80029ac <MX_GPIO_Init+0x130>)
 80028d4:	f043 0301 	orr.w	r3, r3, #1
 80028d8:	6313      	str	r3, [r2, #48]	; 0x30
 80028da:	4b34      	ldr	r3, [pc, #208]	; (80029ac <MX_GPIO_Init+0x130>)
 80028dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028de:	f003 0301 	and.w	r3, r3, #1
 80028e2:	60bb      	str	r3, [r7, #8]
 80028e4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80028e6:	2300      	movs	r3, #0
 80028e8:	607b      	str	r3, [r7, #4]
 80028ea:	4b30      	ldr	r3, [pc, #192]	; (80029ac <MX_GPIO_Init+0x130>)
 80028ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028ee:	4a2f      	ldr	r2, [pc, #188]	; (80029ac <MX_GPIO_Init+0x130>)
 80028f0:	f043 0302 	orr.w	r3, r3, #2
 80028f4:	6313      	str	r3, [r2, #48]	; 0x30
 80028f6:	4b2d      	ldr	r3, [pc, #180]	; (80029ac <MX_GPIO_Init+0x130>)
 80028f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028fa:	f003 0302 	and.w	r3, r3, #2
 80028fe:	607b      	str	r3, [r7, #4]
 8002900:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 8002902:	2200      	movs	r2, #0
 8002904:	f44f 7148 	mov.w	r1, #800	; 0x320
 8002908:	4829      	ldr	r0, [pc, #164]	; (80029b0 <MX_GPIO_Init+0x134>)
 800290a:	f001 fa45 	bl	8003d98 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(PTT_GPIO_Port, PTT_Pin, GPIO_PIN_RESET);
 800290e:	2200      	movs	r2, #0
 8002910:	2110      	movs	r1, #16
 8002912:	4828      	ldr	r0, [pc, #160]	; (80029b4 <MX_GPIO_Init+0x138>)
 8002914:	f001 fa40 	bl	8003d98 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8002918:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800291c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800291e:	4b26      	ldr	r3, [pc, #152]	; (80029b8 <MX_GPIO_Init+0x13c>)
 8002920:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002922:	2300      	movs	r3, #0
 8002924:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8002926:	f107 0314 	add.w	r3, r7, #20
 800292a:	4619      	mov	r1, r3
 800292c:	4821      	ldr	r0, [pc, #132]	; (80029b4 <MX_GPIO_Init+0x138>)
 800292e:	f001 f8a1 	bl	8003a74 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002932:	2301      	movs	r3, #1
 8002934:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002936:	4b21      	ldr	r3, [pc, #132]	; (80029bc <MX_GPIO_Init+0x140>)
 8002938:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800293a:	2300      	movs	r3, #0
 800293c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800293e:	f107 0314 	add.w	r3, r7, #20
 8002942:	4619      	mov	r1, r3
 8002944:	481a      	ldr	r0, [pc, #104]	; (80029b0 <MX_GPIO_Init+0x134>)
 8002946:	f001 f895 	bl	8003a74 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin PA8 PA9 */
  GPIO_InitStruct.Pin = LD2_Pin|GPIO_PIN_8|GPIO_PIN_9;
 800294a:	f44f 7348 	mov.w	r3, #800	; 0x320
 800294e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002950:	2301      	movs	r3, #1
 8002952:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002954:	2300      	movs	r3, #0
 8002956:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002958:	2300      	movs	r3, #0
 800295a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800295c:	f107 0314 	add.w	r3, r7, #20
 8002960:	4619      	mov	r1, r3
 8002962:	4813      	ldr	r0, [pc, #76]	; (80029b0 <MX_GPIO_Init+0x134>)
 8002964:	f001 f886 	bl	8003a74 <HAL_GPIO_Init>

  /*Configure GPIO pin : PTT_Pin */
  GPIO_InitStruct.Pin = PTT_Pin;
 8002968:	2310      	movs	r3, #16
 800296a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800296c:	2301      	movs	r3, #1
 800296e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002970:	2300      	movs	r3, #0
 8002972:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002974:	2300      	movs	r3, #0
 8002976:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(PTT_GPIO_Port, &GPIO_InitStruct);
 8002978:	f107 0314 	add.w	r3, r7, #20
 800297c:	4619      	mov	r1, r3
 800297e:	480d      	ldr	r0, [pc, #52]	; (80029b4 <MX_GPIO_Init+0x138>)
 8002980:	f001 f878 	bl	8003a74 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 8002984:	2200      	movs	r2, #0
 8002986:	2100      	movs	r1, #0
 8002988:	2006      	movs	r0, #6
 800298a:	f000 fc04 	bl	8003196 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 800298e:	2006      	movs	r0, #6
 8002990:	f000 fc1d 	bl	80031ce <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8002994:	2200      	movs	r2, #0
 8002996:	2100      	movs	r1, #0
 8002998:	2028      	movs	r0, #40	; 0x28
 800299a:	f000 fbfc 	bl	8003196 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 800299e:	2028      	movs	r0, #40	; 0x28
 80029a0:	f000 fc15 	bl	80031ce <HAL_NVIC_EnableIRQ>

}
 80029a4:	bf00      	nop
 80029a6:	3728      	adds	r7, #40	; 0x28
 80029a8:	46bd      	mov	sp, r7
 80029aa:	bd80      	pop	{r7, pc}
 80029ac:	40023800 	.word	0x40023800
 80029b0:	40020000 	.word	0x40020000
 80029b4:	40020800 	.word	0x40020800
 80029b8:	10210000 	.word	0x10210000
 80029bc:	10110000 	.word	0x10110000

080029c0 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 80029c0:	b580      	push	{r7, lr}
 80029c2:	b082      	sub	sp, #8
 80029c4:	af00      	add	r7, sp, #0
 80029c6:	6078      	str	r0, [r7, #4]
	if (htim == &htim3)
 80029c8:	687b      	ldr	r3, [r7, #4]
 80029ca:	4a05      	ldr	r2, [pc, #20]	; (80029e0 <HAL_TIM_PeriodElapsedCallback+0x20>)
 80029cc:	4293      	cmp	r3, r2
 80029ce:	d102      	bne.n	80029d6 <HAL_TIM_PeriodElapsedCallback+0x16>
		Tim3IT();
 80029d0:	f7ff fa48 	bl	8001e64 <Tim3IT>
	else
		__NOP();
}
 80029d4:	e000      	b.n	80029d8 <HAL_TIM_PeriodElapsedCallback+0x18>
		__NOP();
 80029d6:	bf00      	nop
}
 80029d8:	bf00      	nop
 80029da:	3708      	adds	r7, #8
 80029dc:	46bd      	mov	sp, r7
 80029de:	bd80      	pop	{r7, pc}
 80029e0:	20002c68 	.word	0x20002c68

080029e4 <HAL_GPIO_EXTI_Callback>:
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 80029e4:	b580      	push	{r7, lr}
 80029e6:	b082      	sub	sp, #8
 80029e8:	af00      	add	r7, sp, #0
 80029ea:	4603      	mov	r3, r0
 80029ec:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin == GPIO_PIN_0) {
 80029ee:	88fb      	ldrh	r3, [r7, #6]
 80029f0:	2b01      	cmp	r3, #1
 80029f2:	d101      	bne.n	80029f8 <HAL_GPIO_EXTI_Callback+0x14>
		FreqCounterPinEXTI();
 80029f4:	f7ff fa5c 	bl	8001eb0 <FreqCounterPinEXTI>
	}
	if (GPIO_Pin == B1_Pin) {
 80029f8:	88fb      	ldrh	r3, [r7, #6]
 80029fa:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80029fe:	d103      	bne.n	8002a08 <HAL_GPIO_EXTI_Callback+0x24>
		changeMode = 1;
 8002a00:	4b04      	ldr	r3, [pc, #16]	; (8002a14 <HAL_GPIO_EXTI_Callback+0x30>)
 8002a02:	2201      	movs	r2, #1
 8002a04:	701a      	strb	r2, [r3, #0]
		sprintf(uartData, "Toggle Input Detected\r\n");
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
		*/
	} else
		__NOP();
}
 8002a06:	e000      	b.n	8002a0a <HAL_GPIO_EXTI_Callback+0x26>
		__NOP();
 8002a08:	bf00      	nop
}
 8002a0a:	bf00      	nop
 8002a0c:	3708      	adds	r7, #8
 8002a0e:	46bd      	mov	sp, r7
 8002a10:	bd80      	pop	{r7, pc}
 8002a12:	bf00      	nop
 8002a14:	20000099 	.word	0x20000099

08002a18 <uart_gpio_init>:


void uart_gpio_init()
{
 8002a18:	b580      	push	{r7, lr}
 8002a1a:	b086      	sub	sp, #24
 8002a1c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct;

  __GPIOA_CLK_ENABLE();
 8002a1e:	2300      	movs	r3, #0
 8002a20:	603b      	str	r3, [r7, #0]
 8002a22:	4b0f      	ldr	r3, [pc, #60]	; (8002a60 <uart_gpio_init+0x48>)
 8002a24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a26:	4a0e      	ldr	r2, [pc, #56]	; (8002a60 <uart_gpio_init+0x48>)
 8002a28:	f043 0301 	orr.w	r3, r3, #1
 8002a2c:	6313      	str	r3, [r2, #48]	; 0x30
 8002a2e:	4b0c      	ldr	r3, [pc, #48]	; (8002a60 <uart_gpio_init+0x48>)
 8002a30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a32:	f003 0301 	and.w	r3, r3, #1
 8002a36:	603b      	str	r3, [r7, #0]
 8002a38:	683b      	ldr	r3, [r7, #0]

  /**USART2 GPIO Configuration
  PA2     ------> USART2_TX
  PA3     ------> USART2_RX
  */
  GPIO_InitStruct.Pin = GPIO_PIN_2 | GPIO_PIN_3;
 8002a3a:	230c      	movs	r3, #12
 8002a3c:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a3e:	2302      	movs	r3, #2
 8002a40:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002a42:	2301      	movs	r3, #1
 8002a44:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
 8002a46:	2300      	movs	r3, #0
 8002a48:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8002a4a:	2307      	movs	r3, #7
 8002a4c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a4e:	1d3b      	adds	r3, r7, #4
 8002a50:	4619      	mov	r1, r3
 8002a52:	4804      	ldr	r0, [pc, #16]	; (8002a64 <uart_gpio_init+0x4c>)
 8002a54:	f001 f80e 	bl	8003a74 <HAL_GPIO_Init>
}
 8002a58:	bf00      	nop
 8002a5a:	3718      	adds	r7, #24
 8002a5c:	46bd      	mov	sp, r7
 8002a5e:	bd80      	pop	{r7, pc}
 8002a60:	40023800 	.word	0x40023800
 8002a64:	40020000 	.word	0x40020000

08002a68 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002a68:	b480      	push	{r7}
 8002a6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002a6c:	bf00      	nop
 8002a6e:	46bd      	mov	sp, r7
 8002a70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a74:	4770      	bx	lr
	...

08002a78 <HAL_MspInit>:
 8002a78:	b580      	push	{r7, lr}
 8002a7a:	b082      	sub	sp, #8
 8002a7c:	af00      	add	r7, sp, #0
 8002a7e:	2300      	movs	r3, #0
 8002a80:	607b      	str	r3, [r7, #4]
 8002a82:	4b10      	ldr	r3, [pc, #64]	; (8002ac4 <HAL_MspInit+0x4c>)
 8002a84:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002a86:	4a0f      	ldr	r2, [pc, #60]	; (8002ac4 <HAL_MspInit+0x4c>)
 8002a88:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002a8c:	6453      	str	r3, [r2, #68]	; 0x44
 8002a8e:	4b0d      	ldr	r3, [pc, #52]	; (8002ac4 <HAL_MspInit+0x4c>)
 8002a90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002a92:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002a96:	607b      	str	r3, [r7, #4]
 8002a98:	687b      	ldr	r3, [r7, #4]
 8002a9a:	2300      	movs	r3, #0
 8002a9c:	603b      	str	r3, [r7, #0]
 8002a9e:	4b09      	ldr	r3, [pc, #36]	; (8002ac4 <HAL_MspInit+0x4c>)
 8002aa0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002aa2:	4a08      	ldr	r2, [pc, #32]	; (8002ac4 <HAL_MspInit+0x4c>)
 8002aa4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002aa8:	6413      	str	r3, [r2, #64]	; 0x40
 8002aaa:	4b06      	ldr	r3, [pc, #24]	; (8002ac4 <HAL_MspInit+0x4c>)
 8002aac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002aae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002ab2:	603b      	str	r3, [r7, #0]
 8002ab4:	683b      	ldr	r3, [r7, #0]
 8002ab6:	2007      	movs	r0, #7
 8002ab8:	f000 fb62 	bl	8003180 <HAL_NVIC_SetPriorityGrouping>
 8002abc:	bf00      	nop
 8002abe:	3708      	adds	r7, #8
 8002ac0:	46bd      	mov	sp, r7
 8002ac2:	bd80      	pop	{r7, pc}
 8002ac4:	40023800 	.word	0x40023800

08002ac8 <HAL_DAC_MspInit>:
 8002ac8:	b580      	push	{r7, lr}
 8002aca:	b08a      	sub	sp, #40	; 0x28
 8002acc:	af00      	add	r7, sp, #0
 8002ace:	6078      	str	r0, [r7, #4]
 8002ad0:	f107 0314 	add.w	r3, r7, #20
 8002ad4:	2200      	movs	r2, #0
 8002ad6:	601a      	str	r2, [r3, #0]
 8002ad8:	605a      	str	r2, [r3, #4]
 8002ada:	609a      	str	r2, [r3, #8]
 8002adc:	60da      	str	r2, [r3, #12]
 8002ade:	611a      	str	r2, [r3, #16]
 8002ae0:	687b      	ldr	r3, [r7, #4]
 8002ae2:	681b      	ldr	r3, [r3, #0]
 8002ae4:	4a2f      	ldr	r2, [pc, #188]	; (8002ba4 <HAL_DAC_MspInit+0xdc>)
 8002ae6:	4293      	cmp	r3, r2
 8002ae8:	d158      	bne.n	8002b9c <HAL_DAC_MspInit+0xd4>
 8002aea:	2300      	movs	r3, #0
 8002aec:	613b      	str	r3, [r7, #16]
 8002aee:	4b2e      	ldr	r3, [pc, #184]	; (8002ba8 <HAL_DAC_MspInit+0xe0>)
 8002af0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002af2:	4a2d      	ldr	r2, [pc, #180]	; (8002ba8 <HAL_DAC_MspInit+0xe0>)
 8002af4:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8002af8:	6413      	str	r3, [r2, #64]	; 0x40
 8002afa:	4b2b      	ldr	r3, [pc, #172]	; (8002ba8 <HAL_DAC_MspInit+0xe0>)
 8002afc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002afe:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8002b02:	613b      	str	r3, [r7, #16]
 8002b04:	693b      	ldr	r3, [r7, #16]
 8002b06:	2300      	movs	r3, #0
 8002b08:	60fb      	str	r3, [r7, #12]
 8002b0a:	4b27      	ldr	r3, [pc, #156]	; (8002ba8 <HAL_DAC_MspInit+0xe0>)
 8002b0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b0e:	4a26      	ldr	r2, [pc, #152]	; (8002ba8 <HAL_DAC_MspInit+0xe0>)
 8002b10:	f043 0301 	orr.w	r3, r3, #1
 8002b14:	6313      	str	r3, [r2, #48]	; 0x30
 8002b16:	4b24      	ldr	r3, [pc, #144]	; (8002ba8 <HAL_DAC_MspInit+0xe0>)
 8002b18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b1a:	f003 0301 	and.w	r3, r3, #1
 8002b1e:	60fb      	str	r3, [r7, #12]
 8002b20:	68fb      	ldr	r3, [r7, #12]
 8002b22:	2310      	movs	r3, #16
 8002b24:	617b      	str	r3, [r7, #20]
 8002b26:	2303      	movs	r3, #3
 8002b28:	61bb      	str	r3, [r7, #24]
 8002b2a:	2300      	movs	r3, #0
 8002b2c:	61fb      	str	r3, [r7, #28]
 8002b2e:	f107 0314 	add.w	r3, r7, #20
 8002b32:	4619      	mov	r1, r3
 8002b34:	481d      	ldr	r0, [pc, #116]	; (8002bac <HAL_DAC_MspInit+0xe4>)
 8002b36:	f000 ff9d 	bl	8003a74 <HAL_GPIO_Init>
 8002b3a:	4b1d      	ldr	r3, [pc, #116]	; (8002bb0 <HAL_DAC_MspInit+0xe8>)
 8002b3c:	4a1d      	ldr	r2, [pc, #116]	; (8002bb4 <HAL_DAC_MspInit+0xec>)
 8002b3e:	601a      	str	r2, [r3, #0]
 8002b40:	4b1b      	ldr	r3, [pc, #108]	; (8002bb0 <HAL_DAC_MspInit+0xe8>)
 8002b42:	f04f 6260 	mov.w	r2, #234881024	; 0xe000000
 8002b46:	605a      	str	r2, [r3, #4]
 8002b48:	4b19      	ldr	r3, [pc, #100]	; (8002bb0 <HAL_DAC_MspInit+0xe8>)
 8002b4a:	2240      	movs	r2, #64	; 0x40
 8002b4c:	609a      	str	r2, [r3, #8]
 8002b4e:	4b18      	ldr	r3, [pc, #96]	; (8002bb0 <HAL_DAC_MspInit+0xe8>)
 8002b50:	2200      	movs	r2, #0
 8002b52:	60da      	str	r2, [r3, #12]
 8002b54:	4b16      	ldr	r3, [pc, #88]	; (8002bb0 <HAL_DAC_MspInit+0xe8>)
 8002b56:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002b5a:	611a      	str	r2, [r3, #16]
 8002b5c:	4b14      	ldr	r3, [pc, #80]	; (8002bb0 <HAL_DAC_MspInit+0xe8>)
 8002b5e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002b62:	615a      	str	r2, [r3, #20]
 8002b64:	4b12      	ldr	r3, [pc, #72]	; (8002bb0 <HAL_DAC_MspInit+0xe8>)
 8002b66:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8002b6a:	619a      	str	r2, [r3, #24]
 8002b6c:	4b10      	ldr	r3, [pc, #64]	; (8002bb0 <HAL_DAC_MspInit+0xe8>)
 8002b6e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002b72:	61da      	str	r2, [r3, #28]
 8002b74:	4b0e      	ldr	r3, [pc, #56]	; (8002bb0 <HAL_DAC_MspInit+0xe8>)
 8002b76:	2200      	movs	r2, #0
 8002b78:	621a      	str	r2, [r3, #32]
 8002b7a:	4b0d      	ldr	r3, [pc, #52]	; (8002bb0 <HAL_DAC_MspInit+0xe8>)
 8002b7c:	2200      	movs	r2, #0
 8002b7e:	625a      	str	r2, [r3, #36]	; 0x24
 8002b80:	480b      	ldr	r0, [pc, #44]	; (8002bb0 <HAL_DAC_MspInit+0xe8>)
 8002b82:	f000 fbfd 	bl	8003380 <HAL_DMA_Init>
 8002b86:	4603      	mov	r3, r0
 8002b88:	2b00      	cmp	r3, #0
 8002b8a:	d001      	beq.n	8002b90 <HAL_DAC_MspInit+0xc8>
 8002b8c:	f7ff ff6c 	bl	8002a68 <Error_Handler>
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	4a07      	ldr	r2, [pc, #28]	; (8002bb0 <HAL_DAC_MspInit+0xe8>)
 8002b94:	609a      	str	r2, [r3, #8]
 8002b96:	4a06      	ldr	r2, [pc, #24]	; (8002bb0 <HAL_DAC_MspInit+0xe8>)
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	6393      	str	r3, [r2, #56]	; 0x38
 8002b9c:	bf00      	nop
 8002b9e:	3728      	adds	r7, #40	; 0x28
 8002ba0:	46bd      	mov	sp, r7
 8002ba2:	bd80      	pop	{r7, pc}
 8002ba4:	40007400 	.word	0x40007400
 8002ba8:	40023800 	.word	0x40023800
 8002bac:	40020000 	.word	0x40020000
 8002bb0:	20002ca8 	.word	0x20002ca8
 8002bb4:	40026088 	.word	0x40026088

08002bb8 <HAL_TIM_Base_MspInit>:
 8002bb8:	b580      	push	{r7, lr}
 8002bba:	b084      	sub	sp, #16
 8002bbc:	af00      	add	r7, sp, #0
 8002bbe:	6078      	str	r0, [r7, #4]
 8002bc0:	687b      	ldr	r3, [r7, #4]
 8002bc2:	681b      	ldr	r3, [r3, #0]
 8002bc4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002bc8:	d10e      	bne.n	8002be8 <HAL_TIM_Base_MspInit+0x30>
 8002bca:	2300      	movs	r3, #0
 8002bcc:	60fb      	str	r3, [r7, #12]
 8002bce:	4b16      	ldr	r3, [pc, #88]	; (8002c28 <HAL_TIM_Base_MspInit+0x70>)
 8002bd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bd2:	4a15      	ldr	r2, [pc, #84]	; (8002c28 <HAL_TIM_Base_MspInit+0x70>)
 8002bd4:	f043 0301 	orr.w	r3, r3, #1
 8002bd8:	6413      	str	r3, [r2, #64]	; 0x40
 8002bda:	4b13      	ldr	r3, [pc, #76]	; (8002c28 <HAL_TIM_Base_MspInit+0x70>)
 8002bdc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bde:	f003 0301 	and.w	r3, r3, #1
 8002be2:	60fb      	str	r3, [r7, #12]
 8002be4:	68fb      	ldr	r3, [r7, #12]
 8002be6:	e01a      	b.n	8002c1e <HAL_TIM_Base_MspInit+0x66>
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	681b      	ldr	r3, [r3, #0]
 8002bec:	4a0f      	ldr	r2, [pc, #60]	; (8002c2c <HAL_TIM_Base_MspInit+0x74>)
 8002bee:	4293      	cmp	r3, r2
 8002bf0:	d115      	bne.n	8002c1e <HAL_TIM_Base_MspInit+0x66>
 8002bf2:	2300      	movs	r3, #0
 8002bf4:	60bb      	str	r3, [r7, #8]
 8002bf6:	4b0c      	ldr	r3, [pc, #48]	; (8002c28 <HAL_TIM_Base_MspInit+0x70>)
 8002bf8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bfa:	4a0b      	ldr	r2, [pc, #44]	; (8002c28 <HAL_TIM_Base_MspInit+0x70>)
 8002bfc:	f043 0302 	orr.w	r3, r3, #2
 8002c00:	6413      	str	r3, [r2, #64]	; 0x40
 8002c02:	4b09      	ldr	r3, [pc, #36]	; (8002c28 <HAL_TIM_Base_MspInit+0x70>)
 8002c04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c06:	f003 0302 	and.w	r3, r3, #2
 8002c0a:	60bb      	str	r3, [r7, #8]
 8002c0c:	68bb      	ldr	r3, [r7, #8]
 8002c0e:	2200      	movs	r2, #0
 8002c10:	2100      	movs	r1, #0
 8002c12:	201d      	movs	r0, #29
 8002c14:	f000 fabf 	bl	8003196 <HAL_NVIC_SetPriority>
 8002c18:	201d      	movs	r0, #29
 8002c1a:	f000 fad8 	bl	80031ce <HAL_NVIC_EnableIRQ>
 8002c1e:	bf00      	nop
 8002c20:	3710      	adds	r7, #16
 8002c22:	46bd      	mov	sp, r7
 8002c24:	bd80      	pop	{r7, pc}
 8002c26:	bf00      	nop
 8002c28:	40023800 	.word	0x40023800
 8002c2c:	40000400 	.word	0x40000400

08002c30 <HAL_UART_MspInit>:
 8002c30:	b580      	push	{r7, lr}
 8002c32:	b08a      	sub	sp, #40	; 0x28
 8002c34:	af00      	add	r7, sp, #0
 8002c36:	6078      	str	r0, [r7, #4]
 8002c38:	f107 0314 	add.w	r3, r7, #20
 8002c3c:	2200      	movs	r2, #0
 8002c3e:	601a      	str	r2, [r3, #0]
 8002c40:	605a      	str	r2, [r3, #4]
 8002c42:	609a      	str	r2, [r3, #8]
 8002c44:	60da      	str	r2, [r3, #12]
 8002c46:	611a      	str	r2, [r3, #16]
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	4a1d      	ldr	r2, [pc, #116]	; (8002cc4 <HAL_UART_MspInit+0x94>)
 8002c4e:	4293      	cmp	r3, r2
 8002c50:	d133      	bne.n	8002cba <HAL_UART_MspInit+0x8a>
 8002c52:	2300      	movs	r3, #0
 8002c54:	613b      	str	r3, [r7, #16]
 8002c56:	4b1c      	ldr	r3, [pc, #112]	; (8002cc8 <HAL_UART_MspInit+0x98>)
 8002c58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c5a:	4a1b      	ldr	r2, [pc, #108]	; (8002cc8 <HAL_UART_MspInit+0x98>)
 8002c5c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002c60:	6413      	str	r3, [r2, #64]	; 0x40
 8002c62:	4b19      	ldr	r3, [pc, #100]	; (8002cc8 <HAL_UART_MspInit+0x98>)
 8002c64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c66:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002c6a:	613b      	str	r3, [r7, #16]
 8002c6c:	693b      	ldr	r3, [r7, #16]
 8002c6e:	2300      	movs	r3, #0
 8002c70:	60fb      	str	r3, [r7, #12]
 8002c72:	4b15      	ldr	r3, [pc, #84]	; (8002cc8 <HAL_UART_MspInit+0x98>)
 8002c74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c76:	4a14      	ldr	r2, [pc, #80]	; (8002cc8 <HAL_UART_MspInit+0x98>)
 8002c78:	f043 0301 	orr.w	r3, r3, #1
 8002c7c:	6313      	str	r3, [r2, #48]	; 0x30
 8002c7e:	4b12      	ldr	r3, [pc, #72]	; (8002cc8 <HAL_UART_MspInit+0x98>)
 8002c80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c82:	f003 0301 	and.w	r3, r3, #1
 8002c86:	60fb      	str	r3, [r7, #12]
 8002c88:	68fb      	ldr	r3, [r7, #12]
 8002c8a:	230c      	movs	r3, #12
 8002c8c:	617b      	str	r3, [r7, #20]
 8002c8e:	2302      	movs	r3, #2
 8002c90:	61bb      	str	r3, [r7, #24]
 8002c92:	2300      	movs	r3, #0
 8002c94:	61fb      	str	r3, [r7, #28]
 8002c96:	2303      	movs	r3, #3
 8002c98:	623b      	str	r3, [r7, #32]
 8002c9a:	2307      	movs	r3, #7
 8002c9c:	627b      	str	r3, [r7, #36]	; 0x24
 8002c9e:	f107 0314 	add.w	r3, r7, #20
 8002ca2:	4619      	mov	r1, r3
 8002ca4:	4809      	ldr	r0, [pc, #36]	; (8002ccc <HAL_UART_MspInit+0x9c>)
 8002ca6:	f000 fee5 	bl	8003a74 <HAL_GPIO_Init>
 8002caa:	2200      	movs	r2, #0
 8002cac:	2100      	movs	r1, #0
 8002cae:	2026      	movs	r0, #38	; 0x26
 8002cb0:	f000 fa71 	bl	8003196 <HAL_NVIC_SetPriority>
 8002cb4:	2026      	movs	r0, #38	; 0x26
 8002cb6:	f000 fa8a 	bl	80031ce <HAL_NVIC_EnableIRQ>
 8002cba:	bf00      	nop
 8002cbc:	3728      	adds	r7, #40	; 0x28
 8002cbe:	46bd      	mov	sp, r7
 8002cc0:	bd80      	pop	{r7, pc}
 8002cc2:	bf00      	nop
 8002cc4:	40004400 	.word	0x40004400
 8002cc8:	40023800 	.word	0x40023800
 8002ccc:	40020000 	.word	0x40020000

08002cd0 <NMI_Handler>:
 8002cd0:	b480      	push	{r7}
 8002cd2:	af00      	add	r7, sp, #0
 8002cd4:	bf00      	nop
 8002cd6:	46bd      	mov	sp, r7
 8002cd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cdc:	4770      	bx	lr

08002cde <HardFault_Handler>:
 8002cde:	b480      	push	{r7}
 8002ce0:	af00      	add	r7, sp, #0
 8002ce2:	e7fe      	b.n	8002ce2 <HardFault_Handler+0x4>

08002ce4 <MemManage_Handler>:
 8002ce4:	b480      	push	{r7}
 8002ce6:	af00      	add	r7, sp, #0
 8002ce8:	e7fe      	b.n	8002ce8 <MemManage_Handler+0x4>

08002cea <BusFault_Handler>:
 8002cea:	b480      	push	{r7}
 8002cec:	af00      	add	r7, sp, #0
 8002cee:	e7fe      	b.n	8002cee <BusFault_Handler+0x4>

08002cf0 <UsageFault_Handler>:
 8002cf0:	b480      	push	{r7}
 8002cf2:	af00      	add	r7, sp, #0
 8002cf4:	e7fe      	b.n	8002cf4 <UsageFault_Handler+0x4>

08002cf6 <SVC_Handler>:
 8002cf6:	b480      	push	{r7}
 8002cf8:	af00      	add	r7, sp, #0
 8002cfa:	bf00      	nop
 8002cfc:	46bd      	mov	sp, r7
 8002cfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d02:	4770      	bx	lr

08002d04 <DebugMon_Handler>:
 8002d04:	b480      	push	{r7}
 8002d06:	af00      	add	r7, sp, #0
 8002d08:	bf00      	nop
 8002d0a:	46bd      	mov	sp, r7
 8002d0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d10:	4770      	bx	lr

08002d12 <PendSV_Handler>:
 8002d12:	b480      	push	{r7}
 8002d14:	af00      	add	r7, sp, #0
 8002d16:	bf00      	nop
 8002d18:	46bd      	mov	sp, r7
 8002d1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d1e:	4770      	bx	lr

08002d20 <SysTick_Handler>:
 8002d20:	b580      	push	{r7, lr}
 8002d22:	af00      	add	r7, sp, #0
 8002d24:	f000 f8f8 	bl	8002f18 <HAL_IncTick>
 8002d28:	bf00      	nop
 8002d2a:	bd80      	pop	{r7, pc}

08002d2c <EXTI0_IRQHandler>:
 8002d2c:	b580      	push	{r7, lr}
 8002d2e:	af00      	add	r7, sp, #0
 8002d30:	2001      	movs	r0, #1
 8002d32:	f001 f84b 	bl	8003dcc <HAL_GPIO_EXTI_IRQHandler>
 8002d36:	bf00      	nop
 8002d38:	bd80      	pop	{r7, pc}
	...

08002d3c <DMA1_Stream5_IRQHandler>:
 8002d3c:	b580      	push	{r7, lr}
 8002d3e:	af00      	add	r7, sp, #0
 8002d40:	4802      	ldr	r0, [pc, #8]	; (8002d4c <DMA1_Stream5_IRQHandler+0x10>)
 8002d42:	f000 fc5d 	bl	8003600 <HAL_DMA_IRQHandler>
 8002d46:	bf00      	nop
 8002d48:	bd80      	pop	{r7, pc}
 8002d4a:	bf00      	nop
 8002d4c:	20002ca8 	.word	0x20002ca8

08002d50 <TIM3_IRQHandler>:
 8002d50:	b580      	push	{r7, lr}
 8002d52:	af00      	add	r7, sp, #0
 8002d54:	4802      	ldr	r0, [pc, #8]	; (8002d60 <TIM3_IRQHandler+0x10>)
 8002d56:	f001 fe03 	bl	8004960 <HAL_TIM_IRQHandler>
 8002d5a:	bf00      	nop
 8002d5c:	bd80      	pop	{r7, pc}
 8002d5e:	bf00      	nop
 8002d60:	20002c68 	.word	0x20002c68

08002d64 <USART2_IRQHandler>:
 8002d64:	b580      	push	{r7, lr}
 8002d66:	af00      	add	r7, sp, #0
 8002d68:	4802      	ldr	r0, [pc, #8]	; (8002d74 <USART2_IRQHandler+0x10>)
 8002d6a:	f002 fae7 	bl	800533c <HAL_UART_IRQHandler>
 8002d6e:	bf00      	nop
 8002d70:	bd80      	pop	{r7, pc}
 8002d72:	bf00      	nop
 8002d74:	20003d60 	.word	0x20003d60

08002d78 <EXTI15_10_IRQHandler>:
 8002d78:	b580      	push	{r7, lr}
 8002d7a:	af00      	add	r7, sp, #0
 8002d7c:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8002d80:	f001 f824 	bl	8003dcc <HAL_GPIO_EXTI_IRQHandler>
 8002d84:	bf00      	nop
 8002d86:	bd80      	pop	{r7, pc}

08002d88 <_sbrk>:
 8002d88:	b580      	push	{r7, lr}
 8002d8a:	b086      	sub	sp, #24
 8002d8c:	af00      	add	r7, sp, #0
 8002d8e:	6078      	str	r0, [r7, #4]
 8002d90:	4a14      	ldr	r2, [pc, #80]	; (8002de4 <_sbrk+0x5c>)
 8002d92:	4b15      	ldr	r3, [pc, #84]	; (8002de8 <_sbrk+0x60>)
 8002d94:	1ad3      	subs	r3, r2, r3
 8002d96:	617b      	str	r3, [r7, #20]
 8002d98:	697b      	ldr	r3, [r7, #20]
 8002d9a:	613b      	str	r3, [r7, #16]
 8002d9c:	4b13      	ldr	r3, [pc, #76]	; (8002dec <_sbrk+0x64>)
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	2b00      	cmp	r3, #0
 8002da2:	d102      	bne.n	8002daa <_sbrk+0x22>
 8002da4:	4b11      	ldr	r3, [pc, #68]	; (8002dec <_sbrk+0x64>)
 8002da6:	4a12      	ldr	r2, [pc, #72]	; (8002df0 <_sbrk+0x68>)
 8002da8:	601a      	str	r2, [r3, #0]
 8002daa:	4b10      	ldr	r3, [pc, #64]	; (8002dec <_sbrk+0x64>)
 8002dac:	681a      	ldr	r2, [r3, #0]
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	4413      	add	r3, r2
 8002db2:	693a      	ldr	r2, [r7, #16]
 8002db4:	429a      	cmp	r2, r3
 8002db6:	d207      	bcs.n	8002dc8 <_sbrk+0x40>
 8002db8:	f003 f8bc 	bl	8005f34 <__errno>
 8002dbc:	4602      	mov	r2, r0
 8002dbe:	230c      	movs	r3, #12
 8002dc0:	6013      	str	r3, [r2, #0]
 8002dc2:	f04f 33ff 	mov.w	r3, #4294967295
 8002dc6:	e009      	b.n	8002ddc <_sbrk+0x54>
 8002dc8:	4b08      	ldr	r3, [pc, #32]	; (8002dec <_sbrk+0x64>)
 8002dca:	681b      	ldr	r3, [r3, #0]
 8002dcc:	60fb      	str	r3, [r7, #12]
 8002dce:	4b07      	ldr	r3, [pc, #28]	; (8002dec <_sbrk+0x64>)
 8002dd0:	681a      	ldr	r2, [r3, #0]
 8002dd2:	687b      	ldr	r3, [r7, #4]
 8002dd4:	4413      	add	r3, r2
 8002dd6:	4a05      	ldr	r2, [pc, #20]	; (8002dec <_sbrk+0x64>)
 8002dd8:	6013      	str	r3, [r2, #0]
 8002dda:	68fb      	ldr	r3, [r7, #12]
 8002ddc:	4618      	mov	r0, r3
 8002dde:	3718      	adds	r7, #24
 8002de0:	46bd      	mov	sp, r7
 8002de2:	bd80      	pop	{r7, pc}
 8002de4:	20020000 	.word	0x20020000
 8002de8:	00000400 	.word	0x00000400
 8002dec:	200000a4 	.word	0x200000a4
 8002df0:	20004da8 	.word	0x20004da8

08002df4 <SystemInit>:
 8002df4:	b480      	push	{r7}
 8002df6:	af00      	add	r7, sp, #0
 8002df8:	4b08      	ldr	r3, [pc, #32]	; (8002e1c <SystemInit+0x28>)
 8002dfa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002dfe:	4a07      	ldr	r2, [pc, #28]	; (8002e1c <SystemInit+0x28>)
 8002e00:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002e04:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002e08:	4b04      	ldr	r3, [pc, #16]	; (8002e1c <SystemInit+0x28>)
 8002e0a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8002e0e:	609a      	str	r2, [r3, #8]
 8002e10:	bf00      	nop
 8002e12:	46bd      	mov	sp, r7
 8002e14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e18:	4770      	bx	lr
 8002e1a:	bf00      	nop
 8002e1c:	e000ed00 	.word	0xe000ed00

08002e20 <Reset_Handler>:
 8002e20:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002e58 <LoopFillZerobss+0x14>
 8002e24:	2100      	movs	r1, #0
 8002e26:	e003      	b.n	8002e30 <LoopCopyDataInit>

08002e28 <CopyDataInit>:
 8002e28:	4b0c      	ldr	r3, [pc, #48]	; (8002e5c <LoopFillZerobss+0x18>)
 8002e2a:	585b      	ldr	r3, [r3, r1]
 8002e2c:	5043      	str	r3, [r0, r1]
 8002e2e:	3104      	adds	r1, #4

08002e30 <LoopCopyDataInit>:
 8002e30:	480b      	ldr	r0, [pc, #44]	; (8002e60 <LoopFillZerobss+0x1c>)
 8002e32:	4b0c      	ldr	r3, [pc, #48]	; (8002e64 <LoopFillZerobss+0x20>)
 8002e34:	1842      	adds	r2, r0, r1
 8002e36:	429a      	cmp	r2, r3
 8002e38:	d3f6      	bcc.n	8002e28 <CopyDataInit>
 8002e3a:	4a0b      	ldr	r2, [pc, #44]	; (8002e68 <LoopFillZerobss+0x24>)
 8002e3c:	e002      	b.n	8002e44 <LoopFillZerobss>

08002e3e <FillZerobss>:
 8002e3e:	2300      	movs	r3, #0
 8002e40:	f842 3b04 	str.w	r3, [r2], #4

08002e44 <LoopFillZerobss>:
 8002e44:	4b09      	ldr	r3, [pc, #36]	; (8002e6c <LoopFillZerobss+0x28>)
 8002e46:	429a      	cmp	r2, r3
 8002e48:	d3f9      	bcc.n	8002e3e <FillZerobss>
 8002e4a:	f7ff ffd3 	bl	8002df4 <SystemInit>
 8002e4e:	f003 f877 	bl	8005f40 <__libc_init_array>
 8002e52:	f7ff fb6b 	bl	800252c <main>
 8002e56:	4770      	bx	lr
 8002e58:	20020000 	.word	0x20020000
 8002e5c:	08007e80 	.word	0x08007e80
 8002e60:	20000000 	.word	0x20000000
 8002e64:	20000078 	.word	0x20000078
 8002e68:	20000078 	.word	0x20000078
 8002e6c:	20004da8 	.word	0x20004da8

08002e70 <ADC_IRQHandler>:
 8002e70:	e7fe      	b.n	8002e70 <ADC_IRQHandler>
	...

08002e74 <HAL_Init>:
 8002e74:	b580      	push	{r7, lr}
 8002e76:	af00      	add	r7, sp, #0
 8002e78:	4b0e      	ldr	r3, [pc, #56]	; (8002eb4 <HAL_Init+0x40>)
 8002e7a:	681b      	ldr	r3, [r3, #0]
 8002e7c:	4a0d      	ldr	r2, [pc, #52]	; (8002eb4 <HAL_Init+0x40>)
 8002e7e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002e82:	6013      	str	r3, [r2, #0]
 8002e84:	4b0b      	ldr	r3, [pc, #44]	; (8002eb4 <HAL_Init+0x40>)
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	4a0a      	ldr	r2, [pc, #40]	; (8002eb4 <HAL_Init+0x40>)
 8002e8a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002e8e:	6013      	str	r3, [r2, #0]
 8002e90:	4b08      	ldr	r3, [pc, #32]	; (8002eb4 <HAL_Init+0x40>)
 8002e92:	681b      	ldr	r3, [r3, #0]
 8002e94:	4a07      	ldr	r2, [pc, #28]	; (8002eb4 <HAL_Init+0x40>)
 8002e96:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002e9a:	6013      	str	r3, [r2, #0]
 8002e9c:	2003      	movs	r0, #3
 8002e9e:	f000 f96f 	bl	8003180 <HAL_NVIC_SetPriorityGrouping>
 8002ea2:	2000      	movs	r0, #0
 8002ea4:	f000 f808 	bl	8002eb8 <HAL_InitTick>
 8002ea8:	f7ff fde6 	bl	8002a78 <HAL_MspInit>
 8002eac:	2300      	movs	r3, #0
 8002eae:	4618      	mov	r0, r3
 8002eb0:	bd80      	pop	{r7, pc}
 8002eb2:	bf00      	nop
 8002eb4:	40023c00 	.word	0x40023c00

08002eb8 <HAL_InitTick>:
 8002eb8:	b580      	push	{r7, lr}
 8002eba:	b082      	sub	sp, #8
 8002ebc:	af00      	add	r7, sp, #0
 8002ebe:	6078      	str	r0, [r7, #4]
 8002ec0:	4b12      	ldr	r3, [pc, #72]	; (8002f0c <HAL_InitTick+0x54>)
 8002ec2:	681a      	ldr	r2, [r3, #0]
 8002ec4:	4b12      	ldr	r3, [pc, #72]	; (8002f10 <HAL_InitTick+0x58>)
 8002ec6:	781b      	ldrb	r3, [r3, #0]
 8002ec8:	4619      	mov	r1, r3
 8002eca:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002ece:	fbb3 f3f1 	udiv	r3, r3, r1
 8002ed2:	fbb2 f3f3 	udiv	r3, r2, r3
 8002ed6:	4618      	mov	r0, r3
 8002ed8:	f000 f995 	bl	8003206 <HAL_SYSTICK_Config>
 8002edc:	4603      	mov	r3, r0
 8002ede:	2b00      	cmp	r3, #0
 8002ee0:	d001      	beq.n	8002ee6 <HAL_InitTick+0x2e>
 8002ee2:	2301      	movs	r3, #1
 8002ee4:	e00e      	b.n	8002f04 <HAL_InitTick+0x4c>
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	2b0f      	cmp	r3, #15
 8002eea:	d80a      	bhi.n	8002f02 <HAL_InitTick+0x4a>
 8002eec:	2200      	movs	r2, #0
 8002eee:	6879      	ldr	r1, [r7, #4]
 8002ef0:	f04f 30ff 	mov.w	r0, #4294967295
 8002ef4:	f000 f94f 	bl	8003196 <HAL_NVIC_SetPriority>
 8002ef8:	4a06      	ldr	r2, [pc, #24]	; (8002f14 <HAL_InitTick+0x5c>)
 8002efa:	687b      	ldr	r3, [r7, #4]
 8002efc:	6013      	str	r3, [r2, #0]
 8002efe:	2300      	movs	r3, #0
 8002f00:	e000      	b.n	8002f04 <HAL_InitTick+0x4c>
 8002f02:	2301      	movs	r3, #1
 8002f04:	4618      	mov	r0, r3
 8002f06:	3708      	adds	r7, #8
 8002f08:	46bd      	mov	sp, r7
 8002f0a:	bd80      	pop	{r7, pc}
 8002f0c:	20000008 	.word	0x20000008
 8002f10:	20000010 	.word	0x20000010
 8002f14:	2000000c 	.word	0x2000000c

08002f18 <HAL_IncTick>:
 8002f18:	b480      	push	{r7}
 8002f1a:	af00      	add	r7, sp, #0
 8002f1c:	4b06      	ldr	r3, [pc, #24]	; (8002f38 <HAL_IncTick+0x20>)
 8002f1e:	781b      	ldrb	r3, [r3, #0]
 8002f20:	461a      	mov	r2, r3
 8002f22:	4b06      	ldr	r3, [pc, #24]	; (8002f3c <HAL_IncTick+0x24>)
 8002f24:	681b      	ldr	r3, [r3, #0]
 8002f26:	4413      	add	r3, r2
 8002f28:	4a04      	ldr	r2, [pc, #16]	; (8002f3c <HAL_IncTick+0x24>)
 8002f2a:	6013      	str	r3, [r2, #0]
 8002f2c:	bf00      	nop
 8002f2e:	46bd      	mov	sp, r7
 8002f30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f34:	4770      	bx	lr
 8002f36:	bf00      	nop
 8002f38:	20000010 	.word	0x20000010
 8002f3c:	20004da0 	.word	0x20004da0

08002f40 <HAL_GetTick>:
 8002f40:	b480      	push	{r7}
 8002f42:	af00      	add	r7, sp, #0
 8002f44:	4b03      	ldr	r3, [pc, #12]	; (8002f54 <HAL_GetTick+0x14>)
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	4618      	mov	r0, r3
 8002f4a:	46bd      	mov	sp, r7
 8002f4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f50:	4770      	bx	lr
 8002f52:	bf00      	nop
 8002f54:	20004da0 	.word	0x20004da0

08002f58 <HAL_Delay>:
 8002f58:	b580      	push	{r7, lr}
 8002f5a:	b084      	sub	sp, #16
 8002f5c:	af00      	add	r7, sp, #0
 8002f5e:	6078      	str	r0, [r7, #4]
 8002f60:	f7ff ffee 	bl	8002f40 <HAL_GetTick>
 8002f64:	60b8      	str	r0, [r7, #8]
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	60fb      	str	r3, [r7, #12]
 8002f6a:	68fb      	ldr	r3, [r7, #12]
 8002f6c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002f70:	d005      	beq.n	8002f7e <HAL_Delay+0x26>
 8002f72:	4b09      	ldr	r3, [pc, #36]	; (8002f98 <HAL_Delay+0x40>)
 8002f74:	781b      	ldrb	r3, [r3, #0]
 8002f76:	461a      	mov	r2, r3
 8002f78:	68fb      	ldr	r3, [r7, #12]
 8002f7a:	4413      	add	r3, r2
 8002f7c:	60fb      	str	r3, [r7, #12]
 8002f7e:	bf00      	nop
 8002f80:	f7ff ffde 	bl	8002f40 <HAL_GetTick>
 8002f84:	4602      	mov	r2, r0
 8002f86:	68bb      	ldr	r3, [r7, #8]
 8002f88:	1ad3      	subs	r3, r2, r3
 8002f8a:	68fa      	ldr	r2, [r7, #12]
 8002f8c:	429a      	cmp	r2, r3
 8002f8e:	d8f7      	bhi.n	8002f80 <HAL_Delay+0x28>
 8002f90:	bf00      	nop
 8002f92:	3710      	adds	r7, #16
 8002f94:	46bd      	mov	sp, r7
 8002f96:	bd80      	pop	{r7, pc}
 8002f98:	20000010 	.word	0x20000010

08002f9c <__NVIC_SetPriorityGrouping>:
 8002f9c:	b480      	push	{r7}
 8002f9e:	b085      	sub	sp, #20
 8002fa0:	af00      	add	r7, sp, #0
 8002fa2:	6078      	str	r0, [r7, #4]
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	f003 0307 	and.w	r3, r3, #7
 8002faa:	60fb      	str	r3, [r7, #12]
 8002fac:	4b0c      	ldr	r3, [pc, #48]	; (8002fe0 <__NVIC_SetPriorityGrouping+0x44>)
 8002fae:	68db      	ldr	r3, [r3, #12]
 8002fb0:	60bb      	str	r3, [r7, #8]
 8002fb2:	68ba      	ldr	r2, [r7, #8]
 8002fb4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002fb8:	4013      	ands	r3, r2
 8002fba:	60bb      	str	r3, [r7, #8]
 8002fbc:	68fb      	ldr	r3, [r7, #12]
 8002fbe:	021a      	lsls	r2, r3, #8
 8002fc0:	68bb      	ldr	r3, [r7, #8]
 8002fc2:	4313      	orrs	r3, r2
 8002fc4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002fc8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002fcc:	60bb      	str	r3, [r7, #8]
 8002fce:	4a04      	ldr	r2, [pc, #16]	; (8002fe0 <__NVIC_SetPriorityGrouping+0x44>)
 8002fd0:	68bb      	ldr	r3, [r7, #8]
 8002fd2:	60d3      	str	r3, [r2, #12]
 8002fd4:	bf00      	nop
 8002fd6:	3714      	adds	r7, #20
 8002fd8:	46bd      	mov	sp, r7
 8002fda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fde:	4770      	bx	lr
 8002fe0:	e000ed00 	.word	0xe000ed00

08002fe4 <__NVIC_GetPriorityGrouping>:
 8002fe4:	b480      	push	{r7}
 8002fe6:	af00      	add	r7, sp, #0
 8002fe8:	4b04      	ldr	r3, [pc, #16]	; (8002ffc <__NVIC_GetPriorityGrouping+0x18>)
 8002fea:	68db      	ldr	r3, [r3, #12]
 8002fec:	0a1b      	lsrs	r3, r3, #8
 8002fee:	f003 0307 	and.w	r3, r3, #7
 8002ff2:	4618      	mov	r0, r3
 8002ff4:	46bd      	mov	sp, r7
 8002ff6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ffa:	4770      	bx	lr
 8002ffc:	e000ed00 	.word	0xe000ed00

08003000 <__NVIC_EnableIRQ>:
 8003000:	b480      	push	{r7}
 8003002:	b083      	sub	sp, #12
 8003004:	af00      	add	r7, sp, #0
 8003006:	4603      	mov	r3, r0
 8003008:	71fb      	strb	r3, [r7, #7]
 800300a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800300e:	2b00      	cmp	r3, #0
 8003010:	db0b      	blt.n	800302a <__NVIC_EnableIRQ+0x2a>
 8003012:	79fb      	ldrb	r3, [r7, #7]
 8003014:	f003 021f 	and.w	r2, r3, #31
 8003018:	4907      	ldr	r1, [pc, #28]	; (8003038 <__NVIC_EnableIRQ+0x38>)
 800301a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800301e:	095b      	lsrs	r3, r3, #5
 8003020:	2001      	movs	r0, #1
 8003022:	fa00 f202 	lsl.w	r2, r0, r2
 8003026:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800302a:	bf00      	nop
 800302c:	370c      	adds	r7, #12
 800302e:	46bd      	mov	sp, r7
 8003030:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003034:	4770      	bx	lr
 8003036:	bf00      	nop
 8003038:	e000e100 	.word	0xe000e100

0800303c <__NVIC_DisableIRQ>:
 800303c:	b480      	push	{r7}
 800303e:	b083      	sub	sp, #12
 8003040:	af00      	add	r7, sp, #0
 8003042:	4603      	mov	r3, r0
 8003044:	71fb      	strb	r3, [r7, #7]
 8003046:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800304a:	2b00      	cmp	r3, #0
 800304c:	db10      	blt.n	8003070 <__NVIC_DisableIRQ+0x34>
 800304e:	79fb      	ldrb	r3, [r7, #7]
 8003050:	f003 021f 	and.w	r2, r3, #31
 8003054:	4909      	ldr	r1, [pc, #36]	; (800307c <__NVIC_DisableIRQ+0x40>)
 8003056:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800305a:	095b      	lsrs	r3, r3, #5
 800305c:	2001      	movs	r0, #1
 800305e:	fa00 f202 	lsl.w	r2, r0, r2
 8003062:	3320      	adds	r3, #32
 8003064:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003068:	f3bf 8f4f 	dsb	sy
 800306c:	f3bf 8f6f 	isb	sy
 8003070:	bf00      	nop
 8003072:	370c      	adds	r7, #12
 8003074:	46bd      	mov	sp, r7
 8003076:	f85d 7b04 	ldr.w	r7, [sp], #4
 800307a:	4770      	bx	lr
 800307c:	e000e100 	.word	0xe000e100

08003080 <__NVIC_SetPriority>:
 8003080:	b480      	push	{r7}
 8003082:	b083      	sub	sp, #12
 8003084:	af00      	add	r7, sp, #0
 8003086:	4603      	mov	r3, r0
 8003088:	6039      	str	r1, [r7, #0]
 800308a:	71fb      	strb	r3, [r7, #7]
 800308c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003090:	2b00      	cmp	r3, #0
 8003092:	db0a      	blt.n	80030aa <__NVIC_SetPriority+0x2a>
 8003094:	683b      	ldr	r3, [r7, #0]
 8003096:	b2da      	uxtb	r2, r3
 8003098:	490c      	ldr	r1, [pc, #48]	; (80030cc <__NVIC_SetPriority+0x4c>)
 800309a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800309e:	0112      	lsls	r2, r2, #4
 80030a0:	b2d2      	uxtb	r2, r2
 80030a2:	440b      	add	r3, r1
 80030a4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80030a8:	e00a      	b.n	80030c0 <__NVIC_SetPriority+0x40>
 80030aa:	683b      	ldr	r3, [r7, #0]
 80030ac:	b2da      	uxtb	r2, r3
 80030ae:	4908      	ldr	r1, [pc, #32]	; (80030d0 <__NVIC_SetPriority+0x50>)
 80030b0:	79fb      	ldrb	r3, [r7, #7]
 80030b2:	f003 030f 	and.w	r3, r3, #15
 80030b6:	3b04      	subs	r3, #4
 80030b8:	0112      	lsls	r2, r2, #4
 80030ba:	b2d2      	uxtb	r2, r2
 80030bc:	440b      	add	r3, r1
 80030be:	761a      	strb	r2, [r3, #24]
 80030c0:	bf00      	nop
 80030c2:	370c      	adds	r7, #12
 80030c4:	46bd      	mov	sp, r7
 80030c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030ca:	4770      	bx	lr
 80030cc:	e000e100 	.word	0xe000e100
 80030d0:	e000ed00 	.word	0xe000ed00

080030d4 <NVIC_EncodePriority>:
 80030d4:	b480      	push	{r7}
 80030d6:	b089      	sub	sp, #36	; 0x24
 80030d8:	af00      	add	r7, sp, #0
 80030da:	60f8      	str	r0, [r7, #12]
 80030dc:	60b9      	str	r1, [r7, #8]
 80030de:	607a      	str	r2, [r7, #4]
 80030e0:	68fb      	ldr	r3, [r7, #12]
 80030e2:	f003 0307 	and.w	r3, r3, #7
 80030e6:	61fb      	str	r3, [r7, #28]
 80030e8:	69fb      	ldr	r3, [r7, #28]
 80030ea:	f1c3 0307 	rsb	r3, r3, #7
 80030ee:	2b04      	cmp	r3, #4
 80030f0:	bf28      	it	cs
 80030f2:	2304      	movcs	r3, #4
 80030f4:	61bb      	str	r3, [r7, #24]
 80030f6:	69fb      	ldr	r3, [r7, #28]
 80030f8:	3304      	adds	r3, #4
 80030fa:	2b06      	cmp	r3, #6
 80030fc:	d902      	bls.n	8003104 <NVIC_EncodePriority+0x30>
 80030fe:	69fb      	ldr	r3, [r7, #28]
 8003100:	3b03      	subs	r3, #3
 8003102:	e000      	b.n	8003106 <NVIC_EncodePriority+0x32>
 8003104:	2300      	movs	r3, #0
 8003106:	617b      	str	r3, [r7, #20]
 8003108:	f04f 32ff 	mov.w	r2, #4294967295
 800310c:	69bb      	ldr	r3, [r7, #24]
 800310e:	fa02 f303 	lsl.w	r3, r2, r3
 8003112:	43da      	mvns	r2, r3
 8003114:	68bb      	ldr	r3, [r7, #8]
 8003116:	401a      	ands	r2, r3
 8003118:	697b      	ldr	r3, [r7, #20]
 800311a:	409a      	lsls	r2, r3
 800311c:	f04f 31ff 	mov.w	r1, #4294967295
 8003120:	697b      	ldr	r3, [r7, #20]
 8003122:	fa01 f303 	lsl.w	r3, r1, r3
 8003126:	43d9      	mvns	r1, r3
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	400b      	ands	r3, r1
 800312c:	4313      	orrs	r3, r2
 800312e:	4618      	mov	r0, r3
 8003130:	3724      	adds	r7, #36	; 0x24
 8003132:	46bd      	mov	sp, r7
 8003134:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003138:	4770      	bx	lr
	...

0800313c <SysTick_Config>:
 800313c:	b580      	push	{r7, lr}
 800313e:	b082      	sub	sp, #8
 8003140:	af00      	add	r7, sp, #0
 8003142:	6078      	str	r0, [r7, #4]
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	3b01      	subs	r3, #1
 8003148:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800314c:	d301      	bcc.n	8003152 <SysTick_Config+0x16>
 800314e:	2301      	movs	r3, #1
 8003150:	e00f      	b.n	8003172 <SysTick_Config+0x36>
 8003152:	4a0a      	ldr	r2, [pc, #40]	; (800317c <SysTick_Config+0x40>)
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	3b01      	subs	r3, #1
 8003158:	6053      	str	r3, [r2, #4]
 800315a:	210f      	movs	r1, #15
 800315c:	f04f 30ff 	mov.w	r0, #4294967295
 8003160:	f7ff ff8e 	bl	8003080 <__NVIC_SetPriority>
 8003164:	4b05      	ldr	r3, [pc, #20]	; (800317c <SysTick_Config+0x40>)
 8003166:	2200      	movs	r2, #0
 8003168:	609a      	str	r2, [r3, #8]
 800316a:	4b04      	ldr	r3, [pc, #16]	; (800317c <SysTick_Config+0x40>)
 800316c:	2207      	movs	r2, #7
 800316e:	601a      	str	r2, [r3, #0]
 8003170:	2300      	movs	r3, #0
 8003172:	4618      	mov	r0, r3
 8003174:	3708      	adds	r7, #8
 8003176:	46bd      	mov	sp, r7
 8003178:	bd80      	pop	{r7, pc}
 800317a:	bf00      	nop
 800317c:	e000e010 	.word	0xe000e010

08003180 <HAL_NVIC_SetPriorityGrouping>:
 8003180:	b580      	push	{r7, lr}
 8003182:	b082      	sub	sp, #8
 8003184:	af00      	add	r7, sp, #0
 8003186:	6078      	str	r0, [r7, #4]
 8003188:	6878      	ldr	r0, [r7, #4]
 800318a:	f7ff ff07 	bl	8002f9c <__NVIC_SetPriorityGrouping>
 800318e:	bf00      	nop
 8003190:	3708      	adds	r7, #8
 8003192:	46bd      	mov	sp, r7
 8003194:	bd80      	pop	{r7, pc}

08003196 <HAL_NVIC_SetPriority>:
 8003196:	b580      	push	{r7, lr}
 8003198:	b086      	sub	sp, #24
 800319a:	af00      	add	r7, sp, #0
 800319c:	4603      	mov	r3, r0
 800319e:	60b9      	str	r1, [r7, #8]
 80031a0:	607a      	str	r2, [r7, #4]
 80031a2:	73fb      	strb	r3, [r7, #15]
 80031a4:	2300      	movs	r3, #0
 80031a6:	617b      	str	r3, [r7, #20]
 80031a8:	f7ff ff1c 	bl	8002fe4 <__NVIC_GetPriorityGrouping>
 80031ac:	6178      	str	r0, [r7, #20]
 80031ae:	687a      	ldr	r2, [r7, #4]
 80031b0:	68b9      	ldr	r1, [r7, #8]
 80031b2:	6978      	ldr	r0, [r7, #20]
 80031b4:	f7ff ff8e 	bl	80030d4 <NVIC_EncodePriority>
 80031b8:	4602      	mov	r2, r0
 80031ba:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80031be:	4611      	mov	r1, r2
 80031c0:	4618      	mov	r0, r3
 80031c2:	f7ff ff5d 	bl	8003080 <__NVIC_SetPriority>
 80031c6:	bf00      	nop
 80031c8:	3718      	adds	r7, #24
 80031ca:	46bd      	mov	sp, r7
 80031cc:	bd80      	pop	{r7, pc}

080031ce <HAL_NVIC_EnableIRQ>:
 80031ce:	b580      	push	{r7, lr}
 80031d0:	b082      	sub	sp, #8
 80031d2:	af00      	add	r7, sp, #0
 80031d4:	4603      	mov	r3, r0
 80031d6:	71fb      	strb	r3, [r7, #7]
 80031d8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80031dc:	4618      	mov	r0, r3
 80031de:	f7ff ff0f 	bl	8003000 <__NVIC_EnableIRQ>
 80031e2:	bf00      	nop
 80031e4:	3708      	adds	r7, #8
 80031e6:	46bd      	mov	sp, r7
 80031e8:	bd80      	pop	{r7, pc}

080031ea <HAL_NVIC_DisableIRQ>:
 80031ea:	b580      	push	{r7, lr}
 80031ec:	b082      	sub	sp, #8
 80031ee:	af00      	add	r7, sp, #0
 80031f0:	4603      	mov	r3, r0
 80031f2:	71fb      	strb	r3, [r7, #7]
 80031f4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80031f8:	4618      	mov	r0, r3
 80031fa:	f7ff ff1f 	bl	800303c <__NVIC_DisableIRQ>
 80031fe:	bf00      	nop
 8003200:	3708      	adds	r7, #8
 8003202:	46bd      	mov	sp, r7
 8003204:	bd80      	pop	{r7, pc}

08003206 <HAL_SYSTICK_Config>:
 8003206:	b580      	push	{r7, lr}
 8003208:	b082      	sub	sp, #8
 800320a:	af00      	add	r7, sp, #0
 800320c:	6078      	str	r0, [r7, #4]
 800320e:	6878      	ldr	r0, [r7, #4]
 8003210:	f7ff ff94 	bl	800313c <SysTick_Config>
 8003214:	4603      	mov	r3, r0
 8003216:	4618      	mov	r0, r3
 8003218:	3708      	adds	r7, #8
 800321a:	46bd      	mov	sp, r7
 800321c:	bd80      	pop	{r7, pc}

0800321e <HAL_DAC_Init>:
 800321e:	b580      	push	{r7, lr}
 8003220:	b082      	sub	sp, #8
 8003222:	af00      	add	r7, sp, #0
 8003224:	6078      	str	r0, [r7, #4]
 8003226:	687b      	ldr	r3, [r7, #4]
 8003228:	2b00      	cmp	r3, #0
 800322a:	d101      	bne.n	8003230 <HAL_DAC_Init+0x12>
 800322c:	2301      	movs	r3, #1
 800322e:	e014      	b.n	800325a <HAL_DAC_Init+0x3c>
 8003230:	687b      	ldr	r3, [r7, #4]
 8003232:	791b      	ldrb	r3, [r3, #4]
 8003234:	b2db      	uxtb	r3, r3
 8003236:	2b00      	cmp	r3, #0
 8003238:	d105      	bne.n	8003246 <HAL_DAC_Init+0x28>
 800323a:	687b      	ldr	r3, [r7, #4]
 800323c:	2200      	movs	r2, #0
 800323e:	715a      	strb	r2, [r3, #5]
 8003240:	6878      	ldr	r0, [r7, #4]
 8003242:	f7ff fc41 	bl	8002ac8 <HAL_DAC_MspInit>
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	2202      	movs	r2, #2
 800324a:	711a      	strb	r2, [r3, #4]
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	2200      	movs	r2, #0
 8003250:	611a      	str	r2, [r3, #16]
 8003252:	687b      	ldr	r3, [r7, #4]
 8003254:	2201      	movs	r2, #1
 8003256:	711a      	strb	r2, [r3, #4]
 8003258:	2300      	movs	r3, #0
 800325a:	4618      	mov	r0, r3
 800325c:	3708      	adds	r7, #8
 800325e:	46bd      	mov	sp, r7
 8003260:	bd80      	pop	{r7, pc}

08003262 <HAL_DAC_Stop_DMA>:
 8003262:	b580      	push	{r7, lr}
 8003264:	b084      	sub	sp, #16
 8003266:	af00      	add	r7, sp, #0
 8003268:	6078      	str	r0, [r7, #4]
 800326a:	6039      	str	r1, [r7, #0]
 800326c:	2300      	movs	r3, #0
 800326e:	73fb      	strb	r3, [r7, #15]
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	681b      	ldr	r3, [r3, #0]
 8003274:	6819      	ldr	r1, [r3, #0]
 8003276:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800327a:	683b      	ldr	r3, [r7, #0]
 800327c:	fa02 f303 	lsl.w	r3, r2, r3
 8003280:	43da      	mvns	r2, r3
 8003282:	687b      	ldr	r3, [r7, #4]
 8003284:	681b      	ldr	r3, [r3, #0]
 8003286:	400a      	ands	r2, r1
 8003288:	601a      	str	r2, [r3, #0]
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	6819      	ldr	r1, [r3, #0]
 8003290:	2201      	movs	r2, #1
 8003292:	683b      	ldr	r3, [r7, #0]
 8003294:	fa02 f303 	lsl.w	r3, r2, r3
 8003298:	43da      	mvns	r2, r3
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	681b      	ldr	r3, [r3, #0]
 800329e:	400a      	ands	r2, r1
 80032a0:	601a      	str	r2, [r3, #0]
 80032a2:	683b      	ldr	r3, [r7, #0]
 80032a4:	2b00      	cmp	r3, #0
 80032a6:	d107      	bne.n	80032b8 <HAL_DAC_Stop_DMA+0x56>
 80032a8:	687b      	ldr	r3, [r7, #4]
 80032aa:	689b      	ldr	r3, [r3, #8]
 80032ac:	4618      	mov	r0, r3
 80032ae:	f000 f915 	bl	80034dc <HAL_DMA_Abort>
 80032b2:	4603      	mov	r3, r0
 80032b4:	73fb      	strb	r3, [r7, #15]
 80032b6:	e006      	b.n	80032c6 <HAL_DAC_Stop_DMA+0x64>
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	68db      	ldr	r3, [r3, #12]
 80032bc:	4618      	mov	r0, r3
 80032be:	f000 f90d 	bl	80034dc <HAL_DMA_Abort>
 80032c2:	4603      	mov	r3, r0
 80032c4:	73fb      	strb	r3, [r7, #15]
 80032c6:	7bfb      	ldrb	r3, [r7, #15]
 80032c8:	2b00      	cmp	r3, #0
 80032ca:	d003      	beq.n	80032d4 <HAL_DAC_Stop_DMA+0x72>
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	2204      	movs	r2, #4
 80032d0:	711a      	strb	r2, [r3, #4]
 80032d2:	e002      	b.n	80032da <HAL_DAC_Stop_DMA+0x78>
 80032d4:	687b      	ldr	r3, [r7, #4]
 80032d6:	2201      	movs	r2, #1
 80032d8:	711a      	strb	r2, [r3, #4]
 80032da:	7bfb      	ldrb	r3, [r7, #15]
 80032dc:	4618      	mov	r0, r3
 80032de:	3710      	adds	r7, #16
 80032e0:	46bd      	mov	sp, r7
 80032e2:	bd80      	pop	{r7, pc}

080032e4 <HAL_DAC_ConfigChannel>:
 80032e4:	b480      	push	{r7}
 80032e6:	b087      	sub	sp, #28
 80032e8:	af00      	add	r7, sp, #0
 80032ea:	60f8      	str	r0, [r7, #12]
 80032ec:	60b9      	str	r1, [r7, #8]
 80032ee:	607a      	str	r2, [r7, #4]
 80032f0:	2300      	movs	r3, #0
 80032f2:	617b      	str	r3, [r7, #20]
 80032f4:	2300      	movs	r3, #0
 80032f6:	613b      	str	r3, [r7, #16]
 80032f8:	68fb      	ldr	r3, [r7, #12]
 80032fa:	795b      	ldrb	r3, [r3, #5]
 80032fc:	2b01      	cmp	r3, #1
 80032fe:	d101      	bne.n	8003304 <HAL_DAC_ConfigChannel+0x20>
 8003300:	2302      	movs	r3, #2
 8003302:	e036      	b.n	8003372 <HAL_DAC_ConfigChannel+0x8e>
 8003304:	68fb      	ldr	r3, [r7, #12]
 8003306:	2201      	movs	r2, #1
 8003308:	715a      	strb	r2, [r3, #5]
 800330a:	68fb      	ldr	r3, [r7, #12]
 800330c:	2202      	movs	r2, #2
 800330e:	711a      	strb	r2, [r3, #4]
 8003310:	68fb      	ldr	r3, [r7, #12]
 8003312:	681b      	ldr	r3, [r3, #0]
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	617b      	str	r3, [r7, #20]
 8003318:	f640 72fe 	movw	r2, #4094	; 0xffe
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	fa02 f303 	lsl.w	r3, r2, r3
 8003322:	43db      	mvns	r3, r3
 8003324:	697a      	ldr	r2, [r7, #20]
 8003326:	4013      	ands	r3, r2
 8003328:	617b      	str	r3, [r7, #20]
 800332a:	68bb      	ldr	r3, [r7, #8]
 800332c:	681a      	ldr	r2, [r3, #0]
 800332e:	68bb      	ldr	r3, [r7, #8]
 8003330:	685b      	ldr	r3, [r3, #4]
 8003332:	4313      	orrs	r3, r2
 8003334:	613b      	str	r3, [r7, #16]
 8003336:	693a      	ldr	r2, [r7, #16]
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	fa02 f303 	lsl.w	r3, r2, r3
 800333e:	697a      	ldr	r2, [r7, #20]
 8003340:	4313      	orrs	r3, r2
 8003342:	617b      	str	r3, [r7, #20]
 8003344:	68fb      	ldr	r3, [r7, #12]
 8003346:	681b      	ldr	r3, [r3, #0]
 8003348:	697a      	ldr	r2, [r7, #20]
 800334a:	601a      	str	r2, [r3, #0]
 800334c:	68fb      	ldr	r3, [r7, #12]
 800334e:	681b      	ldr	r3, [r3, #0]
 8003350:	6819      	ldr	r1, [r3, #0]
 8003352:	22c0      	movs	r2, #192	; 0xc0
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	fa02 f303 	lsl.w	r3, r2, r3
 800335a:	43da      	mvns	r2, r3
 800335c:	68fb      	ldr	r3, [r7, #12]
 800335e:	681b      	ldr	r3, [r3, #0]
 8003360:	400a      	ands	r2, r1
 8003362:	601a      	str	r2, [r3, #0]
 8003364:	68fb      	ldr	r3, [r7, #12]
 8003366:	2201      	movs	r2, #1
 8003368:	711a      	strb	r2, [r3, #4]
 800336a:	68fb      	ldr	r3, [r7, #12]
 800336c:	2200      	movs	r2, #0
 800336e:	715a      	strb	r2, [r3, #5]
 8003370:	2300      	movs	r3, #0
 8003372:	4618      	mov	r0, r3
 8003374:	371c      	adds	r7, #28
 8003376:	46bd      	mov	sp, r7
 8003378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800337c:	4770      	bx	lr
	...

08003380 <HAL_DMA_Init>:
 8003380:	b580      	push	{r7, lr}
 8003382:	b086      	sub	sp, #24
 8003384:	af00      	add	r7, sp, #0
 8003386:	6078      	str	r0, [r7, #4]
 8003388:	2300      	movs	r3, #0
 800338a:	617b      	str	r3, [r7, #20]
 800338c:	f7ff fdd8 	bl	8002f40 <HAL_GetTick>
 8003390:	6138      	str	r0, [r7, #16]
 8003392:	687b      	ldr	r3, [r7, #4]
 8003394:	2b00      	cmp	r3, #0
 8003396:	d101      	bne.n	800339c <HAL_DMA_Init+0x1c>
 8003398:	2301      	movs	r3, #1
 800339a:	e099      	b.n	80034d0 <HAL_DMA_Init+0x150>
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	2200      	movs	r2, #0
 80033a0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	2202      	movs	r2, #2
 80033a8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80033ac:	687b      	ldr	r3, [r7, #4]
 80033ae:	681b      	ldr	r3, [r3, #0]
 80033b0:	681a      	ldr	r2, [r3, #0]
 80033b2:	687b      	ldr	r3, [r7, #4]
 80033b4:	681b      	ldr	r3, [r3, #0]
 80033b6:	f022 0201 	bic.w	r2, r2, #1
 80033ba:	601a      	str	r2, [r3, #0]
 80033bc:	e00f      	b.n	80033de <HAL_DMA_Init+0x5e>
 80033be:	f7ff fdbf 	bl	8002f40 <HAL_GetTick>
 80033c2:	4602      	mov	r2, r0
 80033c4:	693b      	ldr	r3, [r7, #16]
 80033c6:	1ad3      	subs	r3, r2, r3
 80033c8:	2b05      	cmp	r3, #5
 80033ca:	d908      	bls.n	80033de <HAL_DMA_Init+0x5e>
 80033cc:	687b      	ldr	r3, [r7, #4]
 80033ce:	2220      	movs	r2, #32
 80033d0:	655a      	str	r2, [r3, #84]	; 0x54
 80033d2:	687b      	ldr	r3, [r7, #4]
 80033d4:	2203      	movs	r2, #3
 80033d6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80033da:	2303      	movs	r3, #3
 80033dc:	e078      	b.n	80034d0 <HAL_DMA_Init+0x150>
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	681b      	ldr	r3, [r3, #0]
 80033e2:	681b      	ldr	r3, [r3, #0]
 80033e4:	f003 0301 	and.w	r3, r3, #1
 80033e8:	2b00      	cmp	r3, #0
 80033ea:	d1e8      	bne.n	80033be <HAL_DMA_Init+0x3e>
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	681b      	ldr	r3, [r3, #0]
 80033f0:	681b      	ldr	r3, [r3, #0]
 80033f2:	617b      	str	r3, [r7, #20]
 80033f4:	697a      	ldr	r2, [r7, #20]
 80033f6:	4b38      	ldr	r3, [pc, #224]	; (80034d8 <HAL_DMA_Init+0x158>)
 80033f8:	4013      	ands	r3, r2
 80033fa:	617b      	str	r3, [r7, #20]
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	685a      	ldr	r2, [r3, #4]
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	689b      	ldr	r3, [r3, #8]
 8003404:	431a      	orrs	r2, r3
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	68db      	ldr	r3, [r3, #12]
 800340a:	431a      	orrs	r2, r3
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	691b      	ldr	r3, [r3, #16]
 8003410:	431a      	orrs	r2, r3
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	695b      	ldr	r3, [r3, #20]
 8003416:	431a      	orrs	r2, r3
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	699b      	ldr	r3, [r3, #24]
 800341c:	431a      	orrs	r2, r3
 800341e:	687b      	ldr	r3, [r7, #4]
 8003420:	69db      	ldr	r3, [r3, #28]
 8003422:	431a      	orrs	r2, r3
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	6a1b      	ldr	r3, [r3, #32]
 8003428:	4313      	orrs	r3, r2
 800342a:	697a      	ldr	r2, [r7, #20]
 800342c:	4313      	orrs	r3, r2
 800342e:	617b      	str	r3, [r7, #20]
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003434:	2b04      	cmp	r3, #4
 8003436:	d107      	bne.n	8003448 <HAL_DMA_Init+0xc8>
 8003438:	687b      	ldr	r3, [r7, #4]
 800343a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003440:	4313      	orrs	r3, r2
 8003442:	697a      	ldr	r2, [r7, #20]
 8003444:	4313      	orrs	r3, r2
 8003446:	617b      	str	r3, [r7, #20]
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	681b      	ldr	r3, [r3, #0]
 800344c:	697a      	ldr	r2, [r7, #20]
 800344e:	601a      	str	r2, [r3, #0]
 8003450:	687b      	ldr	r3, [r7, #4]
 8003452:	681b      	ldr	r3, [r3, #0]
 8003454:	695b      	ldr	r3, [r3, #20]
 8003456:	617b      	str	r3, [r7, #20]
 8003458:	697b      	ldr	r3, [r7, #20]
 800345a:	f023 0307 	bic.w	r3, r3, #7
 800345e:	617b      	str	r3, [r7, #20]
 8003460:	687b      	ldr	r3, [r7, #4]
 8003462:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003464:	697a      	ldr	r2, [r7, #20]
 8003466:	4313      	orrs	r3, r2
 8003468:	617b      	str	r3, [r7, #20]
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800346e:	2b04      	cmp	r3, #4
 8003470:	d117      	bne.n	80034a2 <HAL_DMA_Init+0x122>
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003476:	697a      	ldr	r2, [r7, #20]
 8003478:	4313      	orrs	r3, r2
 800347a:	617b      	str	r3, [r7, #20]
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003480:	2b00      	cmp	r3, #0
 8003482:	d00e      	beq.n	80034a2 <HAL_DMA_Init+0x122>
 8003484:	6878      	ldr	r0, [r7, #4]
 8003486:	f000 fa7b 	bl	8003980 <DMA_CheckFifoParam>
 800348a:	4603      	mov	r3, r0
 800348c:	2b00      	cmp	r3, #0
 800348e:	d008      	beq.n	80034a2 <HAL_DMA_Init+0x122>
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	2240      	movs	r2, #64	; 0x40
 8003494:	655a      	str	r2, [r3, #84]	; 0x54
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	2201      	movs	r2, #1
 800349a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800349e:	2301      	movs	r3, #1
 80034a0:	e016      	b.n	80034d0 <HAL_DMA_Init+0x150>
 80034a2:	687b      	ldr	r3, [r7, #4]
 80034a4:	681b      	ldr	r3, [r3, #0]
 80034a6:	697a      	ldr	r2, [r7, #20]
 80034a8:	615a      	str	r2, [r3, #20]
 80034aa:	6878      	ldr	r0, [r7, #4]
 80034ac:	f000 fa32 	bl	8003914 <DMA_CalcBaseAndBitshift>
 80034b0:	4603      	mov	r3, r0
 80034b2:	60fb      	str	r3, [r7, #12]
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80034b8:	223f      	movs	r2, #63	; 0x3f
 80034ba:	409a      	lsls	r2, r3
 80034bc:	68fb      	ldr	r3, [r7, #12]
 80034be:	609a      	str	r2, [r3, #8]
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	2200      	movs	r2, #0
 80034c4:	655a      	str	r2, [r3, #84]	; 0x54
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	2201      	movs	r2, #1
 80034ca:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80034ce:	2300      	movs	r3, #0
 80034d0:	4618      	mov	r0, r3
 80034d2:	3718      	adds	r7, #24
 80034d4:	46bd      	mov	sp, r7
 80034d6:	bd80      	pop	{r7, pc}
 80034d8:	f010803f 	.word	0xf010803f

080034dc <HAL_DMA_Abort>:
 80034dc:	b580      	push	{r7, lr}
 80034de:	b084      	sub	sp, #16
 80034e0:	af00      	add	r7, sp, #0
 80034e2:	6078      	str	r0, [r7, #4]
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80034e8:	60fb      	str	r3, [r7, #12]
 80034ea:	f7ff fd29 	bl	8002f40 <HAL_GetTick>
 80034ee:	60b8      	str	r0, [r7, #8]
 80034f0:	687b      	ldr	r3, [r7, #4]
 80034f2:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80034f6:	b2db      	uxtb	r3, r3
 80034f8:	2b02      	cmp	r3, #2
 80034fa:	d008      	beq.n	800350e <HAL_DMA_Abort+0x32>
 80034fc:	687b      	ldr	r3, [r7, #4]
 80034fe:	2280      	movs	r2, #128	; 0x80
 8003500:	655a      	str	r2, [r3, #84]	; 0x54
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	2200      	movs	r2, #0
 8003506:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800350a:	2301      	movs	r3, #1
 800350c:	e052      	b.n	80035b4 <HAL_DMA_Abort+0xd8>
 800350e:	687b      	ldr	r3, [r7, #4]
 8003510:	681b      	ldr	r3, [r3, #0]
 8003512:	681a      	ldr	r2, [r3, #0]
 8003514:	687b      	ldr	r3, [r7, #4]
 8003516:	681b      	ldr	r3, [r3, #0]
 8003518:	f022 0216 	bic.w	r2, r2, #22
 800351c:	601a      	str	r2, [r3, #0]
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	681b      	ldr	r3, [r3, #0]
 8003522:	695a      	ldr	r2, [r3, #20]
 8003524:	687b      	ldr	r3, [r7, #4]
 8003526:	681b      	ldr	r3, [r3, #0]
 8003528:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800352c:	615a      	str	r2, [r3, #20]
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003532:	2b00      	cmp	r3, #0
 8003534:	d103      	bne.n	800353e <HAL_DMA_Abort+0x62>
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800353a:	2b00      	cmp	r3, #0
 800353c:	d007      	beq.n	800354e <HAL_DMA_Abort+0x72>
 800353e:	687b      	ldr	r3, [r7, #4]
 8003540:	681b      	ldr	r3, [r3, #0]
 8003542:	681a      	ldr	r2, [r3, #0]
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	681b      	ldr	r3, [r3, #0]
 8003548:	f022 0208 	bic.w	r2, r2, #8
 800354c:	601a      	str	r2, [r3, #0]
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	681b      	ldr	r3, [r3, #0]
 8003552:	681a      	ldr	r2, [r3, #0]
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	681b      	ldr	r3, [r3, #0]
 8003558:	f022 0201 	bic.w	r2, r2, #1
 800355c:	601a      	str	r2, [r3, #0]
 800355e:	e013      	b.n	8003588 <HAL_DMA_Abort+0xac>
 8003560:	f7ff fcee 	bl	8002f40 <HAL_GetTick>
 8003564:	4602      	mov	r2, r0
 8003566:	68bb      	ldr	r3, [r7, #8]
 8003568:	1ad3      	subs	r3, r2, r3
 800356a:	2b05      	cmp	r3, #5
 800356c:	d90c      	bls.n	8003588 <HAL_DMA_Abort+0xac>
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	2220      	movs	r2, #32
 8003572:	655a      	str	r2, [r3, #84]	; 0x54
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	2200      	movs	r2, #0
 8003578:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	2203      	movs	r2, #3
 8003580:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003584:	2303      	movs	r3, #3
 8003586:	e015      	b.n	80035b4 <HAL_DMA_Abort+0xd8>
 8003588:	687b      	ldr	r3, [r7, #4]
 800358a:	681b      	ldr	r3, [r3, #0]
 800358c:	681b      	ldr	r3, [r3, #0]
 800358e:	f003 0301 	and.w	r3, r3, #1
 8003592:	2b00      	cmp	r3, #0
 8003594:	d1e4      	bne.n	8003560 <HAL_DMA_Abort+0x84>
 8003596:	687b      	ldr	r3, [r7, #4]
 8003598:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800359a:	223f      	movs	r2, #63	; 0x3f
 800359c:	409a      	lsls	r2, r3
 800359e:	68fb      	ldr	r3, [r7, #12]
 80035a0:	609a      	str	r2, [r3, #8]
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	2200      	movs	r2, #0
 80035a6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80035aa:	687b      	ldr	r3, [r7, #4]
 80035ac:	2201      	movs	r2, #1
 80035ae:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80035b2:	2300      	movs	r3, #0
 80035b4:	4618      	mov	r0, r3
 80035b6:	3710      	adds	r7, #16
 80035b8:	46bd      	mov	sp, r7
 80035ba:	bd80      	pop	{r7, pc}

080035bc <HAL_DMA_Abort_IT>:
 80035bc:	b480      	push	{r7}
 80035be:	b083      	sub	sp, #12
 80035c0:	af00      	add	r7, sp, #0
 80035c2:	6078      	str	r0, [r7, #4]
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80035ca:	b2db      	uxtb	r3, r3
 80035cc:	2b02      	cmp	r3, #2
 80035ce:	d004      	beq.n	80035da <HAL_DMA_Abort_IT+0x1e>
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	2280      	movs	r2, #128	; 0x80
 80035d4:	655a      	str	r2, [r3, #84]	; 0x54
 80035d6:	2301      	movs	r3, #1
 80035d8:	e00c      	b.n	80035f4 <HAL_DMA_Abort_IT+0x38>
 80035da:	687b      	ldr	r3, [r7, #4]
 80035dc:	2205      	movs	r2, #5
 80035de:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80035e2:	687b      	ldr	r3, [r7, #4]
 80035e4:	681b      	ldr	r3, [r3, #0]
 80035e6:	681a      	ldr	r2, [r3, #0]
 80035e8:	687b      	ldr	r3, [r7, #4]
 80035ea:	681b      	ldr	r3, [r3, #0]
 80035ec:	f022 0201 	bic.w	r2, r2, #1
 80035f0:	601a      	str	r2, [r3, #0]
 80035f2:	2300      	movs	r3, #0
 80035f4:	4618      	mov	r0, r3
 80035f6:	370c      	adds	r7, #12
 80035f8:	46bd      	mov	sp, r7
 80035fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035fe:	4770      	bx	lr

08003600 <HAL_DMA_IRQHandler>:
 8003600:	b580      	push	{r7, lr}
 8003602:	b086      	sub	sp, #24
 8003604:	af00      	add	r7, sp, #0
 8003606:	6078      	str	r0, [r7, #4]
 8003608:	2300      	movs	r3, #0
 800360a:	60bb      	str	r3, [r7, #8]
 800360c:	4b92      	ldr	r3, [pc, #584]	; (8003858 <HAL_DMA_IRQHandler+0x258>)
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	4a92      	ldr	r2, [pc, #584]	; (800385c <HAL_DMA_IRQHandler+0x25c>)
 8003612:	fba2 2303 	umull	r2, r3, r2, r3
 8003616:	0a9b      	lsrs	r3, r3, #10
 8003618:	617b      	str	r3, [r7, #20]
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800361e:	613b      	str	r3, [r7, #16]
 8003620:	693b      	ldr	r3, [r7, #16]
 8003622:	681b      	ldr	r3, [r3, #0]
 8003624:	60fb      	str	r3, [r7, #12]
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800362a:	2208      	movs	r2, #8
 800362c:	409a      	lsls	r2, r3
 800362e:	68fb      	ldr	r3, [r7, #12]
 8003630:	4013      	ands	r3, r2
 8003632:	2b00      	cmp	r3, #0
 8003634:	d01a      	beq.n	800366c <HAL_DMA_IRQHandler+0x6c>
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	681b      	ldr	r3, [r3, #0]
 800363a:	681b      	ldr	r3, [r3, #0]
 800363c:	f003 0304 	and.w	r3, r3, #4
 8003640:	2b00      	cmp	r3, #0
 8003642:	d013      	beq.n	800366c <HAL_DMA_IRQHandler+0x6c>
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	681b      	ldr	r3, [r3, #0]
 8003648:	681a      	ldr	r2, [r3, #0]
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	681b      	ldr	r3, [r3, #0]
 800364e:	f022 0204 	bic.w	r2, r2, #4
 8003652:	601a      	str	r2, [r3, #0]
 8003654:	687b      	ldr	r3, [r7, #4]
 8003656:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003658:	2208      	movs	r2, #8
 800365a:	409a      	lsls	r2, r3
 800365c:	693b      	ldr	r3, [r7, #16]
 800365e:	609a      	str	r2, [r3, #8]
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003664:	f043 0201 	orr.w	r2, r3, #1
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	655a      	str	r2, [r3, #84]	; 0x54
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003670:	2201      	movs	r2, #1
 8003672:	409a      	lsls	r2, r3
 8003674:	68fb      	ldr	r3, [r7, #12]
 8003676:	4013      	ands	r3, r2
 8003678:	2b00      	cmp	r3, #0
 800367a:	d012      	beq.n	80036a2 <HAL_DMA_IRQHandler+0xa2>
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	681b      	ldr	r3, [r3, #0]
 8003680:	695b      	ldr	r3, [r3, #20]
 8003682:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003686:	2b00      	cmp	r3, #0
 8003688:	d00b      	beq.n	80036a2 <HAL_DMA_IRQHandler+0xa2>
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800368e:	2201      	movs	r2, #1
 8003690:	409a      	lsls	r2, r3
 8003692:	693b      	ldr	r3, [r7, #16]
 8003694:	609a      	str	r2, [r3, #8]
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800369a:	f043 0202 	orr.w	r2, r3, #2
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	655a      	str	r2, [r3, #84]	; 0x54
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80036a6:	2204      	movs	r2, #4
 80036a8:	409a      	lsls	r2, r3
 80036aa:	68fb      	ldr	r3, [r7, #12]
 80036ac:	4013      	ands	r3, r2
 80036ae:	2b00      	cmp	r3, #0
 80036b0:	d012      	beq.n	80036d8 <HAL_DMA_IRQHandler+0xd8>
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	681b      	ldr	r3, [r3, #0]
 80036b6:	681b      	ldr	r3, [r3, #0]
 80036b8:	f003 0302 	and.w	r3, r3, #2
 80036bc:	2b00      	cmp	r3, #0
 80036be:	d00b      	beq.n	80036d8 <HAL_DMA_IRQHandler+0xd8>
 80036c0:	687b      	ldr	r3, [r7, #4]
 80036c2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80036c4:	2204      	movs	r2, #4
 80036c6:	409a      	lsls	r2, r3
 80036c8:	693b      	ldr	r3, [r7, #16]
 80036ca:	609a      	str	r2, [r3, #8]
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80036d0:	f043 0204 	orr.w	r2, r3, #4
 80036d4:	687b      	ldr	r3, [r7, #4]
 80036d6:	655a      	str	r2, [r3, #84]	; 0x54
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80036dc:	2210      	movs	r2, #16
 80036de:	409a      	lsls	r2, r3
 80036e0:	68fb      	ldr	r3, [r7, #12]
 80036e2:	4013      	ands	r3, r2
 80036e4:	2b00      	cmp	r3, #0
 80036e6:	d043      	beq.n	8003770 <HAL_DMA_IRQHandler+0x170>
 80036e8:	687b      	ldr	r3, [r7, #4]
 80036ea:	681b      	ldr	r3, [r3, #0]
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	f003 0308 	and.w	r3, r3, #8
 80036f2:	2b00      	cmp	r3, #0
 80036f4:	d03c      	beq.n	8003770 <HAL_DMA_IRQHandler+0x170>
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80036fa:	2210      	movs	r2, #16
 80036fc:	409a      	lsls	r2, r3
 80036fe:	693b      	ldr	r3, [r7, #16]
 8003700:	609a      	str	r2, [r3, #8]
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	681b      	ldr	r3, [r3, #0]
 8003706:	681b      	ldr	r3, [r3, #0]
 8003708:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800370c:	2b00      	cmp	r3, #0
 800370e:	d018      	beq.n	8003742 <HAL_DMA_IRQHandler+0x142>
 8003710:	687b      	ldr	r3, [r7, #4]
 8003712:	681b      	ldr	r3, [r3, #0]
 8003714:	681b      	ldr	r3, [r3, #0]
 8003716:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800371a:	2b00      	cmp	r3, #0
 800371c:	d108      	bne.n	8003730 <HAL_DMA_IRQHandler+0x130>
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003722:	2b00      	cmp	r3, #0
 8003724:	d024      	beq.n	8003770 <HAL_DMA_IRQHandler+0x170>
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800372a:	6878      	ldr	r0, [r7, #4]
 800372c:	4798      	blx	r3
 800372e:	e01f      	b.n	8003770 <HAL_DMA_IRQHandler+0x170>
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003734:	2b00      	cmp	r3, #0
 8003736:	d01b      	beq.n	8003770 <HAL_DMA_IRQHandler+0x170>
 8003738:	687b      	ldr	r3, [r7, #4]
 800373a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800373c:	6878      	ldr	r0, [r7, #4]
 800373e:	4798      	blx	r3
 8003740:	e016      	b.n	8003770 <HAL_DMA_IRQHandler+0x170>
 8003742:	687b      	ldr	r3, [r7, #4]
 8003744:	681b      	ldr	r3, [r3, #0]
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800374c:	2b00      	cmp	r3, #0
 800374e:	d107      	bne.n	8003760 <HAL_DMA_IRQHandler+0x160>
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	681a      	ldr	r2, [r3, #0]
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	681b      	ldr	r3, [r3, #0]
 800375a:	f022 0208 	bic.w	r2, r2, #8
 800375e:	601a      	str	r2, [r3, #0]
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003764:	2b00      	cmp	r3, #0
 8003766:	d003      	beq.n	8003770 <HAL_DMA_IRQHandler+0x170>
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800376c:	6878      	ldr	r0, [r7, #4]
 800376e:	4798      	blx	r3
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003774:	2220      	movs	r2, #32
 8003776:	409a      	lsls	r2, r3
 8003778:	68fb      	ldr	r3, [r7, #12]
 800377a:	4013      	ands	r3, r2
 800377c:	2b00      	cmp	r3, #0
 800377e:	f000 808e 	beq.w	800389e <HAL_DMA_IRQHandler+0x29e>
 8003782:	687b      	ldr	r3, [r7, #4]
 8003784:	681b      	ldr	r3, [r3, #0]
 8003786:	681b      	ldr	r3, [r3, #0]
 8003788:	f003 0310 	and.w	r3, r3, #16
 800378c:	2b00      	cmp	r3, #0
 800378e:	f000 8086 	beq.w	800389e <HAL_DMA_IRQHandler+0x29e>
 8003792:	687b      	ldr	r3, [r7, #4]
 8003794:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003796:	2220      	movs	r2, #32
 8003798:	409a      	lsls	r2, r3
 800379a:	693b      	ldr	r3, [r7, #16]
 800379c:	609a      	str	r2, [r3, #8]
 800379e:	687b      	ldr	r3, [r7, #4]
 80037a0:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80037a4:	b2db      	uxtb	r3, r3
 80037a6:	2b05      	cmp	r3, #5
 80037a8:	d136      	bne.n	8003818 <HAL_DMA_IRQHandler+0x218>
 80037aa:	687b      	ldr	r3, [r7, #4]
 80037ac:	681b      	ldr	r3, [r3, #0]
 80037ae:	681a      	ldr	r2, [r3, #0]
 80037b0:	687b      	ldr	r3, [r7, #4]
 80037b2:	681b      	ldr	r3, [r3, #0]
 80037b4:	f022 0216 	bic.w	r2, r2, #22
 80037b8:	601a      	str	r2, [r3, #0]
 80037ba:	687b      	ldr	r3, [r7, #4]
 80037bc:	681b      	ldr	r3, [r3, #0]
 80037be:	695a      	ldr	r2, [r3, #20]
 80037c0:	687b      	ldr	r3, [r7, #4]
 80037c2:	681b      	ldr	r3, [r3, #0]
 80037c4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80037c8:	615a      	str	r2, [r3, #20]
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037ce:	2b00      	cmp	r3, #0
 80037d0:	d103      	bne.n	80037da <HAL_DMA_IRQHandler+0x1da>
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80037d6:	2b00      	cmp	r3, #0
 80037d8:	d007      	beq.n	80037ea <HAL_DMA_IRQHandler+0x1ea>
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	681b      	ldr	r3, [r3, #0]
 80037de:	681a      	ldr	r2, [r3, #0]
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	681b      	ldr	r3, [r3, #0]
 80037e4:	f022 0208 	bic.w	r2, r2, #8
 80037e8:	601a      	str	r2, [r3, #0]
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80037ee:	223f      	movs	r2, #63	; 0x3f
 80037f0:	409a      	lsls	r2, r3
 80037f2:	693b      	ldr	r3, [r7, #16]
 80037f4:	609a      	str	r2, [r3, #8]
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	2200      	movs	r2, #0
 80037fa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80037fe:	687b      	ldr	r3, [r7, #4]
 8003800:	2201      	movs	r2, #1
 8003802:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003806:	687b      	ldr	r3, [r7, #4]
 8003808:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800380a:	2b00      	cmp	r3, #0
 800380c:	d07d      	beq.n	800390a <HAL_DMA_IRQHandler+0x30a>
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003812:	6878      	ldr	r0, [r7, #4]
 8003814:	4798      	blx	r3
 8003816:	e078      	b.n	800390a <HAL_DMA_IRQHandler+0x30a>
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	681b      	ldr	r3, [r3, #0]
 800381c:	681b      	ldr	r3, [r3, #0]
 800381e:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003822:	2b00      	cmp	r3, #0
 8003824:	d01c      	beq.n	8003860 <HAL_DMA_IRQHandler+0x260>
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	681b      	ldr	r3, [r3, #0]
 800382a:	681b      	ldr	r3, [r3, #0]
 800382c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003830:	2b00      	cmp	r3, #0
 8003832:	d108      	bne.n	8003846 <HAL_DMA_IRQHandler+0x246>
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003838:	2b00      	cmp	r3, #0
 800383a:	d030      	beq.n	800389e <HAL_DMA_IRQHandler+0x29e>
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003840:	6878      	ldr	r0, [r7, #4]
 8003842:	4798      	blx	r3
 8003844:	e02b      	b.n	800389e <HAL_DMA_IRQHandler+0x29e>
 8003846:	687b      	ldr	r3, [r7, #4]
 8003848:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800384a:	2b00      	cmp	r3, #0
 800384c:	d027      	beq.n	800389e <HAL_DMA_IRQHandler+0x29e>
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003852:	6878      	ldr	r0, [r7, #4]
 8003854:	4798      	blx	r3
 8003856:	e022      	b.n	800389e <HAL_DMA_IRQHandler+0x29e>
 8003858:	20000008 	.word	0x20000008
 800385c:	1b4e81b5 	.word	0x1b4e81b5
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	681b      	ldr	r3, [r3, #0]
 8003866:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800386a:	2b00      	cmp	r3, #0
 800386c:	d10f      	bne.n	800388e <HAL_DMA_IRQHandler+0x28e>
 800386e:	687b      	ldr	r3, [r7, #4]
 8003870:	681b      	ldr	r3, [r3, #0]
 8003872:	681a      	ldr	r2, [r3, #0]
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	681b      	ldr	r3, [r3, #0]
 8003878:	f022 0210 	bic.w	r2, r2, #16
 800387c:	601a      	str	r2, [r3, #0]
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	2200      	movs	r2, #0
 8003882:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	2201      	movs	r2, #1
 800388a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800388e:	687b      	ldr	r3, [r7, #4]
 8003890:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003892:	2b00      	cmp	r3, #0
 8003894:	d003      	beq.n	800389e <HAL_DMA_IRQHandler+0x29e>
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800389a:	6878      	ldr	r0, [r7, #4]
 800389c:	4798      	blx	r3
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80038a2:	2b00      	cmp	r3, #0
 80038a4:	d032      	beq.n	800390c <HAL_DMA_IRQHandler+0x30c>
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80038aa:	f003 0301 	and.w	r3, r3, #1
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	d022      	beq.n	80038f8 <HAL_DMA_IRQHandler+0x2f8>
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	2205      	movs	r2, #5
 80038b6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80038ba:	687b      	ldr	r3, [r7, #4]
 80038bc:	681b      	ldr	r3, [r3, #0]
 80038be:	681a      	ldr	r2, [r3, #0]
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	681b      	ldr	r3, [r3, #0]
 80038c4:	f022 0201 	bic.w	r2, r2, #1
 80038c8:	601a      	str	r2, [r3, #0]
 80038ca:	68bb      	ldr	r3, [r7, #8]
 80038cc:	3301      	adds	r3, #1
 80038ce:	60bb      	str	r3, [r7, #8]
 80038d0:	697a      	ldr	r2, [r7, #20]
 80038d2:	429a      	cmp	r2, r3
 80038d4:	d307      	bcc.n	80038e6 <HAL_DMA_IRQHandler+0x2e6>
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	681b      	ldr	r3, [r3, #0]
 80038da:	681b      	ldr	r3, [r3, #0]
 80038dc:	f003 0301 	and.w	r3, r3, #1
 80038e0:	2b00      	cmp	r3, #0
 80038e2:	d1f2      	bne.n	80038ca <HAL_DMA_IRQHandler+0x2ca>
 80038e4:	e000      	b.n	80038e8 <HAL_DMA_IRQHandler+0x2e8>
 80038e6:	bf00      	nop
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	2200      	movs	r2, #0
 80038ec:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	2201      	movs	r2, #1
 80038f4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80038f8:	687b      	ldr	r3, [r7, #4]
 80038fa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80038fc:	2b00      	cmp	r3, #0
 80038fe:	d005      	beq.n	800390c <HAL_DMA_IRQHandler+0x30c>
 8003900:	687b      	ldr	r3, [r7, #4]
 8003902:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003904:	6878      	ldr	r0, [r7, #4]
 8003906:	4798      	blx	r3
 8003908:	e000      	b.n	800390c <HAL_DMA_IRQHandler+0x30c>
 800390a:	bf00      	nop
 800390c:	3718      	adds	r7, #24
 800390e:	46bd      	mov	sp, r7
 8003910:	bd80      	pop	{r7, pc}
 8003912:	bf00      	nop

08003914 <DMA_CalcBaseAndBitshift>:
 8003914:	b480      	push	{r7}
 8003916:	b085      	sub	sp, #20
 8003918:	af00      	add	r7, sp, #0
 800391a:	6078      	str	r0, [r7, #4]
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	b2db      	uxtb	r3, r3
 8003922:	3b10      	subs	r3, #16
 8003924:	4a14      	ldr	r2, [pc, #80]	; (8003978 <DMA_CalcBaseAndBitshift+0x64>)
 8003926:	fba2 2303 	umull	r2, r3, r2, r3
 800392a:	091b      	lsrs	r3, r3, #4
 800392c:	60fb      	str	r3, [r7, #12]
 800392e:	4a13      	ldr	r2, [pc, #76]	; (800397c <DMA_CalcBaseAndBitshift+0x68>)
 8003930:	68fb      	ldr	r3, [r7, #12]
 8003932:	4413      	add	r3, r2
 8003934:	781b      	ldrb	r3, [r3, #0]
 8003936:	461a      	mov	r2, r3
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	65da      	str	r2, [r3, #92]	; 0x5c
 800393c:	68fb      	ldr	r3, [r7, #12]
 800393e:	2b03      	cmp	r3, #3
 8003940:	d909      	bls.n	8003956 <DMA_CalcBaseAndBitshift+0x42>
 8003942:	687b      	ldr	r3, [r7, #4]
 8003944:	681b      	ldr	r3, [r3, #0]
 8003946:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 800394a:	f023 0303 	bic.w	r3, r3, #3
 800394e:	1d1a      	adds	r2, r3, #4
 8003950:	687b      	ldr	r3, [r7, #4]
 8003952:	659a      	str	r2, [r3, #88]	; 0x58
 8003954:	e007      	b.n	8003966 <DMA_CalcBaseAndBitshift+0x52>
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	681b      	ldr	r3, [r3, #0]
 800395a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 800395e:	f023 0303 	bic.w	r3, r3, #3
 8003962:	687a      	ldr	r2, [r7, #4]
 8003964:	6593      	str	r3, [r2, #88]	; 0x58
 8003966:	687b      	ldr	r3, [r7, #4]
 8003968:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800396a:	4618      	mov	r0, r3
 800396c:	3714      	adds	r7, #20
 800396e:	46bd      	mov	sp, r7
 8003970:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003974:	4770      	bx	lr
 8003976:	bf00      	nop
 8003978:	aaaaaaab 	.word	0xaaaaaaab
 800397c:	08007c58 	.word	0x08007c58

08003980 <DMA_CheckFifoParam>:
 8003980:	b480      	push	{r7}
 8003982:	b085      	sub	sp, #20
 8003984:	af00      	add	r7, sp, #0
 8003986:	6078      	str	r0, [r7, #4]
 8003988:	2300      	movs	r3, #0
 800398a:	73fb      	strb	r3, [r7, #15]
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003990:	60bb      	str	r3, [r7, #8]
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	699b      	ldr	r3, [r3, #24]
 8003996:	2b00      	cmp	r3, #0
 8003998:	d11f      	bne.n	80039da <DMA_CheckFifoParam+0x5a>
 800399a:	68bb      	ldr	r3, [r7, #8]
 800399c:	2b03      	cmp	r3, #3
 800399e:	d855      	bhi.n	8003a4c <DMA_CheckFifoParam+0xcc>
 80039a0:	a201      	add	r2, pc, #4	; (adr r2, 80039a8 <DMA_CheckFifoParam+0x28>)
 80039a2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80039a6:	bf00      	nop
 80039a8:	080039b9 	.word	0x080039b9
 80039ac:	080039cb 	.word	0x080039cb
 80039b0:	080039b9 	.word	0x080039b9
 80039b4:	08003a4d 	.word	0x08003a4d
 80039b8:	687b      	ldr	r3, [r7, #4]
 80039ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80039bc:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80039c0:	2b00      	cmp	r3, #0
 80039c2:	d045      	beq.n	8003a50 <DMA_CheckFifoParam+0xd0>
 80039c4:	2301      	movs	r3, #1
 80039c6:	73fb      	strb	r3, [r7, #15]
 80039c8:	e042      	b.n	8003a50 <DMA_CheckFifoParam+0xd0>
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80039ce:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80039d2:	d13f      	bne.n	8003a54 <DMA_CheckFifoParam+0xd4>
 80039d4:	2301      	movs	r3, #1
 80039d6:	73fb      	strb	r3, [r7, #15]
 80039d8:	e03c      	b.n	8003a54 <DMA_CheckFifoParam+0xd4>
 80039da:	687b      	ldr	r3, [r7, #4]
 80039dc:	699b      	ldr	r3, [r3, #24]
 80039de:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80039e2:	d121      	bne.n	8003a28 <DMA_CheckFifoParam+0xa8>
 80039e4:	68bb      	ldr	r3, [r7, #8]
 80039e6:	2b03      	cmp	r3, #3
 80039e8:	d836      	bhi.n	8003a58 <DMA_CheckFifoParam+0xd8>
 80039ea:	a201      	add	r2, pc, #4	; (adr r2, 80039f0 <DMA_CheckFifoParam+0x70>)
 80039ec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80039f0:	08003a01 	.word	0x08003a01
 80039f4:	08003a07 	.word	0x08003a07
 80039f8:	08003a01 	.word	0x08003a01
 80039fc:	08003a19 	.word	0x08003a19
 8003a00:	2301      	movs	r3, #1
 8003a02:	73fb      	strb	r3, [r7, #15]
 8003a04:	e02f      	b.n	8003a66 <DMA_CheckFifoParam+0xe6>
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003a0a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003a0e:	2b00      	cmp	r3, #0
 8003a10:	d024      	beq.n	8003a5c <DMA_CheckFifoParam+0xdc>
 8003a12:	2301      	movs	r3, #1
 8003a14:	73fb      	strb	r3, [r7, #15]
 8003a16:	e021      	b.n	8003a5c <DMA_CheckFifoParam+0xdc>
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003a1c:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8003a20:	d11e      	bne.n	8003a60 <DMA_CheckFifoParam+0xe0>
 8003a22:	2301      	movs	r3, #1
 8003a24:	73fb      	strb	r3, [r7, #15]
 8003a26:	e01b      	b.n	8003a60 <DMA_CheckFifoParam+0xe0>
 8003a28:	68bb      	ldr	r3, [r7, #8]
 8003a2a:	2b02      	cmp	r3, #2
 8003a2c:	d902      	bls.n	8003a34 <DMA_CheckFifoParam+0xb4>
 8003a2e:	2b03      	cmp	r3, #3
 8003a30:	d003      	beq.n	8003a3a <DMA_CheckFifoParam+0xba>
 8003a32:	e018      	b.n	8003a66 <DMA_CheckFifoParam+0xe6>
 8003a34:	2301      	movs	r3, #1
 8003a36:	73fb      	strb	r3, [r7, #15]
 8003a38:	e015      	b.n	8003a66 <DMA_CheckFifoParam+0xe6>
 8003a3a:	687b      	ldr	r3, [r7, #4]
 8003a3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003a3e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003a42:	2b00      	cmp	r3, #0
 8003a44:	d00e      	beq.n	8003a64 <DMA_CheckFifoParam+0xe4>
 8003a46:	2301      	movs	r3, #1
 8003a48:	73fb      	strb	r3, [r7, #15]
 8003a4a:	e00b      	b.n	8003a64 <DMA_CheckFifoParam+0xe4>
 8003a4c:	bf00      	nop
 8003a4e:	e00a      	b.n	8003a66 <DMA_CheckFifoParam+0xe6>
 8003a50:	bf00      	nop
 8003a52:	e008      	b.n	8003a66 <DMA_CheckFifoParam+0xe6>
 8003a54:	bf00      	nop
 8003a56:	e006      	b.n	8003a66 <DMA_CheckFifoParam+0xe6>
 8003a58:	bf00      	nop
 8003a5a:	e004      	b.n	8003a66 <DMA_CheckFifoParam+0xe6>
 8003a5c:	bf00      	nop
 8003a5e:	e002      	b.n	8003a66 <DMA_CheckFifoParam+0xe6>
 8003a60:	bf00      	nop
 8003a62:	e000      	b.n	8003a66 <DMA_CheckFifoParam+0xe6>
 8003a64:	bf00      	nop
 8003a66:	7bfb      	ldrb	r3, [r7, #15]
 8003a68:	4618      	mov	r0, r3
 8003a6a:	3714      	adds	r7, #20
 8003a6c:	46bd      	mov	sp, r7
 8003a6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a72:	4770      	bx	lr

08003a74 <HAL_GPIO_Init>:
 8003a74:	b480      	push	{r7}
 8003a76:	b089      	sub	sp, #36	; 0x24
 8003a78:	af00      	add	r7, sp, #0
 8003a7a:	6078      	str	r0, [r7, #4]
 8003a7c:	6039      	str	r1, [r7, #0]
 8003a7e:	2300      	movs	r3, #0
 8003a80:	617b      	str	r3, [r7, #20]
 8003a82:	2300      	movs	r3, #0
 8003a84:	613b      	str	r3, [r7, #16]
 8003a86:	2300      	movs	r3, #0
 8003a88:	61bb      	str	r3, [r7, #24]
 8003a8a:	2300      	movs	r3, #0
 8003a8c:	61fb      	str	r3, [r7, #28]
 8003a8e:	e165      	b.n	8003d5c <HAL_GPIO_Init+0x2e8>
 8003a90:	2201      	movs	r2, #1
 8003a92:	69fb      	ldr	r3, [r7, #28]
 8003a94:	fa02 f303 	lsl.w	r3, r2, r3
 8003a98:	617b      	str	r3, [r7, #20]
 8003a9a:	683b      	ldr	r3, [r7, #0]
 8003a9c:	681b      	ldr	r3, [r3, #0]
 8003a9e:	697a      	ldr	r2, [r7, #20]
 8003aa0:	4013      	ands	r3, r2
 8003aa2:	613b      	str	r3, [r7, #16]
 8003aa4:	693a      	ldr	r2, [r7, #16]
 8003aa6:	697b      	ldr	r3, [r7, #20]
 8003aa8:	429a      	cmp	r2, r3
 8003aaa:	f040 8154 	bne.w	8003d56 <HAL_GPIO_Init+0x2e2>
 8003aae:	683b      	ldr	r3, [r7, #0]
 8003ab0:	685b      	ldr	r3, [r3, #4]
 8003ab2:	2b01      	cmp	r3, #1
 8003ab4:	d00b      	beq.n	8003ace <HAL_GPIO_Init+0x5a>
 8003ab6:	683b      	ldr	r3, [r7, #0]
 8003ab8:	685b      	ldr	r3, [r3, #4]
 8003aba:	2b02      	cmp	r3, #2
 8003abc:	d007      	beq.n	8003ace <HAL_GPIO_Init+0x5a>
 8003abe:	683b      	ldr	r3, [r7, #0]
 8003ac0:	685b      	ldr	r3, [r3, #4]
 8003ac2:	2b11      	cmp	r3, #17
 8003ac4:	d003      	beq.n	8003ace <HAL_GPIO_Init+0x5a>
 8003ac6:	683b      	ldr	r3, [r7, #0]
 8003ac8:	685b      	ldr	r3, [r3, #4]
 8003aca:	2b12      	cmp	r3, #18
 8003acc:	d130      	bne.n	8003b30 <HAL_GPIO_Init+0xbc>
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	689b      	ldr	r3, [r3, #8]
 8003ad2:	61bb      	str	r3, [r7, #24]
 8003ad4:	69fb      	ldr	r3, [r7, #28]
 8003ad6:	005b      	lsls	r3, r3, #1
 8003ad8:	2203      	movs	r2, #3
 8003ada:	fa02 f303 	lsl.w	r3, r2, r3
 8003ade:	43db      	mvns	r3, r3
 8003ae0:	69ba      	ldr	r2, [r7, #24]
 8003ae2:	4013      	ands	r3, r2
 8003ae4:	61bb      	str	r3, [r7, #24]
 8003ae6:	683b      	ldr	r3, [r7, #0]
 8003ae8:	68da      	ldr	r2, [r3, #12]
 8003aea:	69fb      	ldr	r3, [r7, #28]
 8003aec:	005b      	lsls	r3, r3, #1
 8003aee:	fa02 f303 	lsl.w	r3, r2, r3
 8003af2:	69ba      	ldr	r2, [r7, #24]
 8003af4:	4313      	orrs	r3, r2
 8003af6:	61bb      	str	r3, [r7, #24]
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	69ba      	ldr	r2, [r7, #24]
 8003afc:	609a      	str	r2, [r3, #8]
 8003afe:	687b      	ldr	r3, [r7, #4]
 8003b00:	685b      	ldr	r3, [r3, #4]
 8003b02:	61bb      	str	r3, [r7, #24]
 8003b04:	2201      	movs	r2, #1
 8003b06:	69fb      	ldr	r3, [r7, #28]
 8003b08:	fa02 f303 	lsl.w	r3, r2, r3
 8003b0c:	43db      	mvns	r3, r3
 8003b0e:	69ba      	ldr	r2, [r7, #24]
 8003b10:	4013      	ands	r3, r2
 8003b12:	61bb      	str	r3, [r7, #24]
 8003b14:	683b      	ldr	r3, [r7, #0]
 8003b16:	685b      	ldr	r3, [r3, #4]
 8003b18:	091b      	lsrs	r3, r3, #4
 8003b1a:	f003 0201 	and.w	r2, r3, #1
 8003b1e:	69fb      	ldr	r3, [r7, #28]
 8003b20:	fa02 f303 	lsl.w	r3, r2, r3
 8003b24:	69ba      	ldr	r2, [r7, #24]
 8003b26:	4313      	orrs	r3, r2
 8003b28:	61bb      	str	r3, [r7, #24]
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	69ba      	ldr	r2, [r7, #24]
 8003b2e:	605a      	str	r2, [r3, #4]
 8003b30:	687b      	ldr	r3, [r7, #4]
 8003b32:	68db      	ldr	r3, [r3, #12]
 8003b34:	61bb      	str	r3, [r7, #24]
 8003b36:	69fb      	ldr	r3, [r7, #28]
 8003b38:	005b      	lsls	r3, r3, #1
 8003b3a:	2203      	movs	r2, #3
 8003b3c:	fa02 f303 	lsl.w	r3, r2, r3
 8003b40:	43db      	mvns	r3, r3
 8003b42:	69ba      	ldr	r2, [r7, #24]
 8003b44:	4013      	ands	r3, r2
 8003b46:	61bb      	str	r3, [r7, #24]
 8003b48:	683b      	ldr	r3, [r7, #0]
 8003b4a:	689a      	ldr	r2, [r3, #8]
 8003b4c:	69fb      	ldr	r3, [r7, #28]
 8003b4e:	005b      	lsls	r3, r3, #1
 8003b50:	fa02 f303 	lsl.w	r3, r2, r3
 8003b54:	69ba      	ldr	r2, [r7, #24]
 8003b56:	4313      	orrs	r3, r2
 8003b58:	61bb      	str	r3, [r7, #24]
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	69ba      	ldr	r2, [r7, #24]
 8003b5e:	60da      	str	r2, [r3, #12]
 8003b60:	683b      	ldr	r3, [r7, #0]
 8003b62:	685b      	ldr	r3, [r3, #4]
 8003b64:	2b02      	cmp	r3, #2
 8003b66:	d003      	beq.n	8003b70 <HAL_GPIO_Init+0xfc>
 8003b68:	683b      	ldr	r3, [r7, #0]
 8003b6a:	685b      	ldr	r3, [r3, #4]
 8003b6c:	2b12      	cmp	r3, #18
 8003b6e:	d123      	bne.n	8003bb8 <HAL_GPIO_Init+0x144>
 8003b70:	69fb      	ldr	r3, [r7, #28]
 8003b72:	08da      	lsrs	r2, r3, #3
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	3208      	adds	r2, #8
 8003b78:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003b7c:	61bb      	str	r3, [r7, #24]
 8003b7e:	69fb      	ldr	r3, [r7, #28]
 8003b80:	f003 0307 	and.w	r3, r3, #7
 8003b84:	009b      	lsls	r3, r3, #2
 8003b86:	220f      	movs	r2, #15
 8003b88:	fa02 f303 	lsl.w	r3, r2, r3
 8003b8c:	43db      	mvns	r3, r3
 8003b8e:	69ba      	ldr	r2, [r7, #24]
 8003b90:	4013      	ands	r3, r2
 8003b92:	61bb      	str	r3, [r7, #24]
 8003b94:	683b      	ldr	r3, [r7, #0]
 8003b96:	691a      	ldr	r2, [r3, #16]
 8003b98:	69fb      	ldr	r3, [r7, #28]
 8003b9a:	f003 0307 	and.w	r3, r3, #7
 8003b9e:	009b      	lsls	r3, r3, #2
 8003ba0:	fa02 f303 	lsl.w	r3, r2, r3
 8003ba4:	69ba      	ldr	r2, [r7, #24]
 8003ba6:	4313      	orrs	r3, r2
 8003ba8:	61bb      	str	r3, [r7, #24]
 8003baa:	69fb      	ldr	r3, [r7, #28]
 8003bac:	08da      	lsrs	r2, r3, #3
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	3208      	adds	r2, #8
 8003bb2:	69b9      	ldr	r1, [r7, #24]
 8003bb4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	61bb      	str	r3, [r7, #24]
 8003bbe:	69fb      	ldr	r3, [r7, #28]
 8003bc0:	005b      	lsls	r3, r3, #1
 8003bc2:	2203      	movs	r2, #3
 8003bc4:	fa02 f303 	lsl.w	r3, r2, r3
 8003bc8:	43db      	mvns	r3, r3
 8003bca:	69ba      	ldr	r2, [r7, #24]
 8003bcc:	4013      	ands	r3, r2
 8003bce:	61bb      	str	r3, [r7, #24]
 8003bd0:	683b      	ldr	r3, [r7, #0]
 8003bd2:	685b      	ldr	r3, [r3, #4]
 8003bd4:	f003 0203 	and.w	r2, r3, #3
 8003bd8:	69fb      	ldr	r3, [r7, #28]
 8003bda:	005b      	lsls	r3, r3, #1
 8003bdc:	fa02 f303 	lsl.w	r3, r2, r3
 8003be0:	69ba      	ldr	r2, [r7, #24]
 8003be2:	4313      	orrs	r3, r2
 8003be4:	61bb      	str	r3, [r7, #24]
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	69ba      	ldr	r2, [r7, #24]
 8003bea:	601a      	str	r2, [r3, #0]
 8003bec:	683b      	ldr	r3, [r7, #0]
 8003bee:	685b      	ldr	r3, [r3, #4]
 8003bf0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003bf4:	2b00      	cmp	r3, #0
 8003bf6:	f000 80ae 	beq.w	8003d56 <HAL_GPIO_Init+0x2e2>
 8003bfa:	2300      	movs	r3, #0
 8003bfc:	60fb      	str	r3, [r7, #12]
 8003bfe:	4b5c      	ldr	r3, [pc, #368]	; (8003d70 <HAL_GPIO_Init+0x2fc>)
 8003c00:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c02:	4a5b      	ldr	r2, [pc, #364]	; (8003d70 <HAL_GPIO_Init+0x2fc>)
 8003c04:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003c08:	6453      	str	r3, [r2, #68]	; 0x44
 8003c0a:	4b59      	ldr	r3, [pc, #356]	; (8003d70 <HAL_GPIO_Init+0x2fc>)
 8003c0c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c0e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003c12:	60fb      	str	r3, [r7, #12]
 8003c14:	68fb      	ldr	r3, [r7, #12]
 8003c16:	4a57      	ldr	r2, [pc, #348]	; (8003d74 <HAL_GPIO_Init+0x300>)
 8003c18:	69fb      	ldr	r3, [r7, #28]
 8003c1a:	089b      	lsrs	r3, r3, #2
 8003c1c:	3302      	adds	r3, #2
 8003c1e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003c22:	61bb      	str	r3, [r7, #24]
 8003c24:	69fb      	ldr	r3, [r7, #28]
 8003c26:	f003 0303 	and.w	r3, r3, #3
 8003c2a:	009b      	lsls	r3, r3, #2
 8003c2c:	220f      	movs	r2, #15
 8003c2e:	fa02 f303 	lsl.w	r3, r2, r3
 8003c32:	43db      	mvns	r3, r3
 8003c34:	69ba      	ldr	r2, [r7, #24]
 8003c36:	4013      	ands	r3, r2
 8003c38:	61bb      	str	r3, [r7, #24]
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	4a4e      	ldr	r2, [pc, #312]	; (8003d78 <HAL_GPIO_Init+0x304>)
 8003c3e:	4293      	cmp	r3, r2
 8003c40:	d025      	beq.n	8003c8e <HAL_GPIO_Init+0x21a>
 8003c42:	687b      	ldr	r3, [r7, #4]
 8003c44:	4a4d      	ldr	r2, [pc, #308]	; (8003d7c <HAL_GPIO_Init+0x308>)
 8003c46:	4293      	cmp	r3, r2
 8003c48:	d01f      	beq.n	8003c8a <HAL_GPIO_Init+0x216>
 8003c4a:	687b      	ldr	r3, [r7, #4]
 8003c4c:	4a4c      	ldr	r2, [pc, #304]	; (8003d80 <HAL_GPIO_Init+0x30c>)
 8003c4e:	4293      	cmp	r3, r2
 8003c50:	d019      	beq.n	8003c86 <HAL_GPIO_Init+0x212>
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	4a4b      	ldr	r2, [pc, #300]	; (8003d84 <HAL_GPIO_Init+0x310>)
 8003c56:	4293      	cmp	r3, r2
 8003c58:	d013      	beq.n	8003c82 <HAL_GPIO_Init+0x20e>
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	4a4a      	ldr	r2, [pc, #296]	; (8003d88 <HAL_GPIO_Init+0x314>)
 8003c5e:	4293      	cmp	r3, r2
 8003c60:	d00d      	beq.n	8003c7e <HAL_GPIO_Init+0x20a>
 8003c62:	687b      	ldr	r3, [r7, #4]
 8003c64:	4a49      	ldr	r2, [pc, #292]	; (8003d8c <HAL_GPIO_Init+0x318>)
 8003c66:	4293      	cmp	r3, r2
 8003c68:	d007      	beq.n	8003c7a <HAL_GPIO_Init+0x206>
 8003c6a:	687b      	ldr	r3, [r7, #4]
 8003c6c:	4a48      	ldr	r2, [pc, #288]	; (8003d90 <HAL_GPIO_Init+0x31c>)
 8003c6e:	4293      	cmp	r3, r2
 8003c70:	d101      	bne.n	8003c76 <HAL_GPIO_Init+0x202>
 8003c72:	2306      	movs	r3, #6
 8003c74:	e00c      	b.n	8003c90 <HAL_GPIO_Init+0x21c>
 8003c76:	2307      	movs	r3, #7
 8003c78:	e00a      	b.n	8003c90 <HAL_GPIO_Init+0x21c>
 8003c7a:	2305      	movs	r3, #5
 8003c7c:	e008      	b.n	8003c90 <HAL_GPIO_Init+0x21c>
 8003c7e:	2304      	movs	r3, #4
 8003c80:	e006      	b.n	8003c90 <HAL_GPIO_Init+0x21c>
 8003c82:	2303      	movs	r3, #3
 8003c84:	e004      	b.n	8003c90 <HAL_GPIO_Init+0x21c>
 8003c86:	2302      	movs	r3, #2
 8003c88:	e002      	b.n	8003c90 <HAL_GPIO_Init+0x21c>
 8003c8a:	2301      	movs	r3, #1
 8003c8c:	e000      	b.n	8003c90 <HAL_GPIO_Init+0x21c>
 8003c8e:	2300      	movs	r3, #0
 8003c90:	69fa      	ldr	r2, [r7, #28]
 8003c92:	f002 0203 	and.w	r2, r2, #3
 8003c96:	0092      	lsls	r2, r2, #2
 8003c98:	4093      	lsls	r3, r2
 8003c9a:	69ba      	ldr	r2, [r7, #24]
 8003c9c:	4313      	orrs	r3, r2
 8003c9e:	61bb      	str	r3, [r7, #24]
 8003ca0:	4934      	ldr	r1, [pc, #208]	; (8003d74 <HAL_GPIO_Init+0x300>)
 8003ca2:	69fb      	ldr	r3, [r7, #28]
 8003ca4:	089b      	lsrs	r3, r3, #2
 8003ca6:	3302      	adds	r3, #2
 8003ca8:	69ba      	ldr	r2, [r7, #24]
 8003caa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003cae:	4b39      	ldr	r3, [pc, #228]	; (8003d94 <HAL_GPIO_Init+0x320>)
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	61bb      	str	r3, [r7, #24]
 8003cb4:	693b      	ldr	r3, [r7, #16]
 8003cb6:	43db      	mvns	r3, r3
 8003cb8:	69ba      	ldr	r2, [r7, #24]
 8003cba:	4013      	ands	r3, r2
 8003cbc:	61bb      	str	r3, [r7, #24]
 8003cbe:	683b      	ldr	r3, [r7, #0]
 8003cc0:	685b      	ldr	r3, [r3, #4]
 8003cc2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003cc6:	2b00      	cmp	r3, #0
 8003cc8:	d003      	beq.n	8003cd2 <HAL_GPIO_Init+0x25e>
 8003cca:	69ba      	ldr	r2, [r7, #24]
 8003ccc:	693b      	ldr	r3, [r7, #16]
 8003cce:	4313      	orrs	r3, r2
 8003cd0:	61bb      	str	r3, [r7, #24]
 8003cd2:	4a30      	ldr	r2, [pc, #192]	; (8003d94 <HAL_GPIO_Init+0x320>)
 8003cd4:	69bb      	ldr	r3, [r7, #24]
 8003cd6:	6013      	str	r3, [r2, #0]
 8003cd8:	4b2e      	ldr	r3, [pc, #184]	; (8003d94 <HAL_GPIO_Init+0x320>)
 8003cda:	685b      	ldr	r3, [r3, #4]
 8003cdc:	61bb      	str	r3, [r7, #24]
 8003cde:	693b      	ldr	r3, [r7, #16]
 8003ce0:	43db      	mvns	r3, r3
 8003ce2:	69ba      	ldr	r2, [r7, #24]
 8003ce4:	4013      	ands	r3, r2
 8003ce6:	61bb      	str	r3, [r7, #24]
 8003ce8:	683b      	ldr	r3, [r7, #0]
 8003cea:	685b      	ldr	r3, [r3, #4]
 8003cec:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003cf0:	2b00      	cmp	r3, #0
 8003cf2:	d003      	beq.n	8003cfc <HAL_GPIO_Init+0x288>
 8003cf4:	69ba      	ldr	r2, [r7, #24]
 8003cf6:	693b      	ldr	r3, [r7, #16]
 8003cf8:	4313      	orrs	r3, r2
 8003cfa:	61bb      	str	r3, [r7, #24]
 8003cfc:	4a25      	ldr	r2, [pc, #148]	; (8003d94 <HAL_GPIO_Init+0x320>)
 8003cfe:	69bb      	ldr	r3, [r7, #24]
 8003d00:	6053      	str	r3, [r2, #4]
 8003d02:	4b24      	ldr	r3, [pc, #144]	; (8003d94 <HAL_GPIO_Init+0x320>)
 8003d04:	689b      	ldr	r3, [r3, #8]
 8003d06:	61bb      	str	r3, [r7, #24]
 8003d08:	693b      	ldr	r3, [r7, #16]
 8003d0a:	43db      	mvns	r3, r3
 8003d0c:	69ba      	ldr	r2, [r7, #24]
 8003d0e:	4013      	ands	r3, r2
 8003d10:	61bb      	str	r3, [r7, #24]
 8003d12:	683b      	ldr	r3, [r7, #0]
 8003d14:	685b      	ldr	r3, [r3, #4]
 8003d16:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003d1a:	2b00      	cmp	r3, #0
 8003d1c:	d003      	beq.n	8003d26 <HAL_GPIO_Init+0x2b2>
 8003d1e:	69ba      	ldr	r2, [r7, #24]
 8003d20:	693b      	ldr	r3, [r7, #16]
 8003d22:	4313      	orrs	r3, r2
 8003d24:	61bb      	str	r3, [r7, #24]
 8003d26:	4a1b      	ldr	r2, [pc, #108]	; (8003d94 <HAL_GPIO_Init+0x320>)
 8003d28:	69bb      	ldr	r3, [r7, #24]
 8003d2a:	6093      	str	r3, [r2, #8]
 8003d2c:	4b19      	ldr	r3, [pc, #100]	; (8003d94 <HAL_GPIO_Init+0x320>)
 8003d2e:	68db      	ldr	r3, [r3, #12]
 8003d30:	61bb      	str	r3, [r7, #24]
 8003d32:	693b      	ldr	r3, [r7, #16]
 8003d34:	43db      	mvns	r3, r3
 8003d36:	69ba      	ldr	r2, [r7, #24]
 8003d38:	4013      	ands	r3, r2
 8003d3a:	61bb      	str	r3, [r7, #24]
 8003d3c:	683b      	ldr	r3, [r7, #0]
 8003d3e:	685b      	ldr	r3, [r3, #4]
 8003d40:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003d44:	2b00      	cmp	r3, #0
 8003d46:	d003      	beq.n	8003d50 <HAL_GPIO_Init+0x2dc>
 8003d48:	69ba      	ldr	r2, [r7, #24]
 8003d4a:	693b      	ldr	r3, [r7, #16]
 8003d4c:	4313      	orrs	r3, r2
 8003d4e:	61bb      	str	r3, [r7, #24]
 8003d50:	4a10      	ldr	r2, [pc, #64]	; (8003d94 <HAL_GPIO_Init+0x320>)
 8003d52:	69bb      	ldr	r3, [r7, #24]
 8003d54:	60d3      	str	r3, [r2, #12]
 8003d56:	69fb      	ldr	r3, [r7, #28]
 8003d58:	3301      	adds	r3, #1
 8003d5a:	61fb      	str	r3, [r7, #28]
 8003d5c:	69fb      	ldr	r3, [r7, #28]
 8003d5e:	2b0f      	cmp	r3, #15
 8003d60:	f67f ae96 	bls.w	8003a90 <HAL_GPIO_Init+0x1c>
 8003d64:	bf00      	nop
 8003d66:	3724      	adds	r7, #36	; 0x24
 8003d68:	46bd      	mov	sp, r7
 8003d6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d6e:	4770      	bx	lr
 8003d70:	40023800 	.word	0x40023800
 8003d74:	40013800 	.word	0x40013800
 8003d78:	40020000 	.word	0x40020000
 8003d7c:	40020400 	.word	0x40020400
 8003d80:	40020800 	.word	0x40020800
 8003d84:	40020c00 	.word	0x40020c00
 8003d88:	40021000 	.word	0x40021000
 8003d8c:	40021400 	.word	0x40021400
 8003d90:	40021800 	.word	0x40021800
 8003d94:	40013c00 	.word	0x40013c00

08003d98 <HAL_GPIO_WritePin>:
 8003d98:	b480      	push	{r7}
 8003d9a:	b083      	sub	sp, #12
 8003d9c:	af00      	add	r7, sp, #0
 8003d9e:	6078      	str	r0, [r7, #4]
 8003da0:	460b      	mov	r3, r1
 8003da2:	807b      	strh	r3, [r7, #2]
 8003da4:	4613      	mov	r3, r2
 8003da6:	707b      	strb	r3, [r7, #1]
 8003da8:	787b      	ldrb	r3, [r7, #1]
 8003daa:	2b00      	cmp	r3, #0
 8003dac:	d003      	beq.n	8003db6 <HAL_GPIO_WritePin+0x1e>
 8003dae:	887a      	ldrh	r2, [r7, #2]
 8003db0:	687b      	ldr	r3, [r7, #4]
 8003db2:	619a      	str	r2, [r3, #24]
 8003db4:	e003      	b.n	8003dbe <HAL_GPIO_WritePin+0x26>
 8003db6:	887b      	ldrh	r3, [r7, #2]
 8003db8:	041a      	lsls	r2, r3, #16
 8003dba:	687b      	ldr	r3, [r7, #4]
 8003dbc:	619a      	str	r2, [r3, #24]
 8003dbe:	bf00      	nop
 8003dc0:	370c      	adds	r7, #12
 8003dc2:	46bd      	mov	sp, r7
 8003dc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dc8:	4770      	bx	lr
	...

08003dcc <HAL_GPIO_EXTI_IRQHandler>:
 8003dcc:	b580      	push	{r7, lr}
 8003dce:	b082      	sub	sp, #8
 8003dd0:	af00      	add	r7, sp, #0
 8003dd2:	4603      	mov	r3, r0
 8003dd4:	80fb      	strh	r3, [r7, #6]
 8003dd6:	4b08      	ldr	r3, [pc, #32]	; (8003df8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003dd8:	695a      	ldr	r2, [r3, #20]
 8003dda:	88fb      	ldrh	r3, [r7, #6]
 8003ddc:	4013      	ands	r3, r2
 8003dde:	2b00      	cmp	r3, #0
 8003de0:	d006      	beq.n	8003df0 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8003de2:	4a05      	ldr	r2, [pc, #20]	; (8003df8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003de4:	88fb      	ldrh	r3, [r7, #6]
 8003de6:	6153      	str	r3, [r2, #20]
 8003de8:	88fb      	ldrh	r3, [r7, #6]
 8003dea:	4618      	mov	r0, r3
 8003dec:	f7fe fdfa 	bl	80029e4 <HAL_GPIO_EXTI_Callback>
 8003df0:	bf00      	nop
 8003df2:	3708      	adds	r7, #8
 8003df4:	46bd      	mov	sp, r7
 8003df6:	bd80      	pop	{r7, pc}
 8003df8:	40013c00 	.word	0x40013c00

08003dfc <HAL_RCC_ClockConfig>:
 8003dfc:	b580      	push	{r7, lr}
 8003dfe:	b084      	sub	sp, #16
 8003e00:	af00      	add	r7, sp, #0
 8003e02:	6078      	str	r0, [r7, #4]
 8003e04:	6039      	str	r1, [r7, #0]
 8003e06:	687b      	ldr	r3, [r7, #4]
 8003e08:	2b00      	cmp	r3, #0
 8003e0a:	d101      	bne.n	8003e10 <HAL_RCC_ClockConfig+0x14>
 8003e0c:	2301      	movs	r3, #1
 8003e0e:	e0cc      	b.n	8003faa <HAL_RCC_ClockConfig+0x1ae>
 8003e10:	4b68      	ldr	r3, [pc, #416]	; (8003fb4 <HAL_RCC_ClockConfig+0x1b8>)
 8003e12:	681b      	ldr	r3, [r3, #0]
 8003e14:	f003 030f 	and.w	r3, r3, #15
 8003e18:	683a      	ldr	r2, [r7, #0]
 8003e1a:	429a      	cmp	r2, r3
 8003e1c:	d90c      	bls.n	8003e38 <HAL_RCC_ClockConfig+0x3c>
 8003e1e:	4b65      	ldr	r3, [pc, #404]	; (8003fb4 <HAL_RCC_ClockConfig+0x1b8>)
 8003e20:	683a      	ldr	r2, [r7, #0]
 8003e22:	b2d2      	uxtb	r2, r2
 8003e24:	701a      	strb	r2, [r3, #0]
 8003e26:	4b63      	ldr	r3, [pc, #396]	; (8003fb4 <HAL_RCC_ClockConfig+0x1b8>)
 8003e28:	681b      	ldr	r3, [r3, #0]
 8003e2a:	f003 030f 	and.w	r3, r3, #15
 8003e2e:	683a      	ldr	r2, [r7, #0]
 8003e30:	429a      	cmp	r2, r3
 8003e32:	d001      	beq.n	8003e38 <HAL_RCC_ClockConfig+0x3c>
 8003e34:	2301      	movs	r3, #1
 8003e36:	e0b8      	b.n	8003faa <HAL_RCC_ClockConfig+0x1ae>
 8003e38:	687b      	ldr	r3, [r7, #4]
 8003e3a:	681b      	ldr	r3, [r3, #0]
 8003e3c:	f003 0302 	and.w	r3, r3, #2
 8003e40:	2b00      	cmp	r3, #0
 8003e42:	d020      	beq.n	8003e86 <HAL_RCC_ClockConfig+0x8a>
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	681b      	ldr	r3, [r3, #0]
 8003e48:	f003 0304 	and.w	r3, r3, #4
 8003e4c:	2b00      	cmp	r3, #0
 8003e4e:	d005      	beq.n	8003e5c <HAL_RCC_ClockConfig+0x60>
 8003e50:	4b59      	ldr	r3, [pc, #356]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003e52:	689b      	ldr	r3, [r3, #8]
 8003e54:	4a58      	ldr	r2, [pc, #352]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003e56:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8003e5a:	6093      	str	r3, [r2, #8]
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	681b      	ldr	r3, [r3, #0]
 8003e60:	f003 0308 	and.w	r3, r3, #8
 8003e64:	2b00      	cmp	r3, #0
 8003e66:	d005      	beq.n	8003e74 <HAL_RCC_ClockConfig+0x78>
 8003e68:	4b53      	ldr	r3, [pc, #332]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003e6a:	689b      	ldr	r3, [r3, #8]
 8003e6c:	4a52      	ldr	r2, [pc, #328]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003e6e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8003e72:	6093      	str	r3, [r2, #8]
 8003e74:	4b50      	ldr	r3, [pc, #320]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003e76:	689b      	ldr	r3, [r3, #8]
 8003e78:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	689b      	ldr	r3, [r3, #8]
 8003e80:	494d      	ldr	r1, [pc, #308]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003e82:	4313      	orrs	r3, r2
 8003e84:	608b      	str	r3, [r1, #8]
 8003e86:	687b      	ldr	r3, [r7, #4]
 8003e88:	681b      	ldr	r3, [r3, #0]
 8003e8a:	f003 0301 	and.w	r3, r3, #1
 8003e8e:	2b00      	cmp	r3, #0
 8003e90:	d044      	beq.n	8003f1c <HAL_RCC_ClockConfig+0x120>
 8003e92:	687b      	ldr	r3, [r7, #4]
 8003e94:	685b      	ldr	r3, [r3, #4]
 8003e96:	2b01      	cmp	r3, #1
 8003e98:	d107      	bne.n	8003eaa <HAL_RCC_ClockConfig+0xae>
 8003e9a:	4b47      	ldr	r3, [pc, #284]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003e9c:	681b      	ldr	r3, [r3, #0]
 8003e9e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003ea2:	2b00      	cmp	r3, #0
 8003ea4:	d119      	bne.n	8003eda <HAL_RCC_ClockConfig+0xde>
 8003ea6:	2301      	movs	r3, #1
 8003ea8:	e07f      	b.n	8003faa <HAL_RCC_ClockConfig+0x1ae>
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	685b      	ldr	r3, [r3, #4]
 8003eae:	2b02      	cmp	r3, #2
 8003eb0:	d003      	beq.n	8003eba <HAL_RCC_ClockConfig+0xbe>
 8003eb2:	687b      	ldr	r3, [r7, #4]
 8003eb4:	685b      	ldr	r3, [r3, #4]
 8003eb6:	2b03      	cmp	r3, #3
 8003eb8:	d107      	bne.n	8003eca <HAL_RCC_ClockConfig+0xce>
 8003eba:	4b3f      	ldr	r3, [pc, #252]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003ebc:	681b      	ldr	r3, [r3, #0]
 8003ebe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003ec2:	2b00      	cmp	r3, #0
 8003ec4:	d109      	bne.n	8003eda <HAL_RCC_ClockConfig+0xde>
 8003ec6:	2301      	movs	r3, #1
 8003ec8:	e06f      	b.n	8003faa <HAL_RCC_ClockConfig+0x1ae>
 8003eca:	4b3b      	ldr	r3, [pc, #236]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003ecc:	681b      	ldr	r3, [r3, #0]
 8003ece:	f003 0302 	and.w	r3, r3, #2
 8003ed2:	2b00      	cmp	r3, #0
 8003ed4:	d101      	bne.n	8003eda <HAL_RCC_ClockConfig+0xde>
 8003ed6:	2301      	movs	r3, #1
 8003ed8:	e067      	b.n	8003faa <HAL_RCC_ClockConfig+0x1ae>
 8003eda:	4b37      	ldr	r3, [pc, #220]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003edc:	689b      	ldr	r3, [r3, #8]
 8003ede:	f023 0203 	bic.w	r2, r3, #3
 8003ee2:	687b      	ldr	r3, [r7, #4]
 8003ee4:	685b      	ldr	r3, [r3, #4]
 8003ee6:	4934      	ldr	r1, [pc, #208]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003ee8:	4313      	orrs	r3, r2
 8003eea:	608b      	str	r3, [r1, #8]
 8003eec:	f7ff f828 	bl	8002f40 <HAL_GetTick>
 8003ef0:	60f8      	str	r0, [r7, #12]
 8003ef2:	e00a      	b.n	8003f0a <HAL_RCC_ClockConfig+0x10e>
 8003ef4:	f7ff f824 	bl	8002f40 <HAL_GetTick>
 8003ef8:	4602      	mov	r2, r0
 8003efa:	68fb      	ldr	r3, [r7, #12]
 8003efc:	1ad3      	subs	r3, r2, r3
 8003efe:	f241 3288 	movw	r2, #5000	; 0x1388
 8003f02:	4293      	cmp	r3, r2
 8003f04:	d901      	bls.n	8003f0a <HAL_RCC_ClockConfig+0x10e>
 8003f06:	2303      	movs	r3, #3
 8003f08:	e04f      	b.n	8003faa <HAL_RCC_ClockConfig+0x1ae>
 8003f0a:	4b2b      	ldr	r3, [pc, #172]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003f0c:	689b      	ldr	r3, [r3, #8]
 8003f0e:	f003 020c 	and.w	r2, r3, #12
 8003f12:	687b      	ldr	r3, [r7, #4]
 8003f14:	685b      	ldr	r3, [r3, #4]
 8003f16:	009b      	lsls	r3, r3, #2
 8003f18:	429a      	cmp	r2, r3
 8003f1a:	d1eb      	bne.n	8003ef4 <HAL_RCC_ClockConfig+0xf8>
 8003f1c:	4b25      	ldr	r3, [pc, #148]	; (8003fb4 <HAL_RCC_ClockConfig+0x1b8>)
 8003f1e:	681b      	ldr	r3, [r3, #0]
 8003f20:	f003 030f 	and.w	r3, r3, #15
 8003f24:	683a      	ldr	r2, [r7, #0]
 8003f26:	429a      	cmp	r2, r3
 8003f28:	d20c      	bcs.n	8003f44 <HAL_RCC_ClockConfig+0x148>
 8003f2a:	4b22      	ldr	r3, [pc, #136]	; (8003fb4 <HAL_RCC_ClockConfig+0x1b8>)
 8003f2c:	683a      	ldr	r2, [r7, #0]
 8003f2e:	b2d2      	uxtb	r2, r2
 8003f30:	701a      	strb	r2, [r3, #0]
 8003f32:	4b20      	ldr	r3, [pc, #128]	; (8003fb4 <HAL_RCC_ClockConfig+0x1b8>)
 8003f34:	681b      	ldr	r3, [r3, #0]
 8003f36:	f003 030f 	and.w	r3, r3, #15
 8003f3a:	683a      	ldr	r2, [r7, #0]
 8003f3c:	429a      	cmp	r2, r3
 8003f3e:	d001      	beq.n	8003f44 <HAL_RCC_ClockConfig+0x148>
 8003f40:	2301      	movs	r3, #1
 8003f42:	e032      	b.n	8003faa <HAL_RCC_ClockConfig+0x1ae>
 8003f44:	687b      	ldr	r3, [r7, #4]
 8003f46:	681b      	ldr	r3, [r3, #0]
 8003f48:	f003 0304 	and.w	r3, r3, #4
 8003f4c:	2b00      	cmp	r3, #0
 8003f4e:	d008      	beq.n	8003f62 <HAL_RCC_ClockConfig+0x166>
 8003f50:	4b19      	ldr	r3, [pc, #100]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003f52:	689b      	ldr	r3, [r3, #8]
 8003f54:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8003f58:	687b      	ldr	r3, [r7, #4]
 8003f5a:	68db      	ldr	r3, [r3, #12]
 8003f5c:	4916      	ldr	r1, [pc, #88]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003f5e:	4313      	orrs	r3, r2
 8003f60:	608b      	str	r3, [r1, #8]
 8003f62:	687b      	ldr	r3, [r7, #4]
 8003f64:	681b      	ldr	r3, [r3, #0]
 8003f66:	f003 0308 	and.w	r3, r3, #8
 8003f6a:	2b00      	cmp	r3, #0
 8003f6c:	d009      	beq.n	8003f82 <HAL_RCC_ClockConfig+0x186>
 8003f6e:	4b12      	ldr	r3, [pc, #72]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003f70:	689b      	ldr	r3, [r3, #8]
 8003f72:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8003f76:	687b      	ldr	r3, [r7, #4]
 8003f78:	691b      	ldr	r3, [r3, #16]
 8003f7a:	00db      	lsls	r3, r3, #3
 8003f7c:	490e      	ldr	r1, [pc, #56]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003f7e:	4313      	orrs	r3, r2
 8003f80:	608b      	str	r3, [r1, #8]
 8003f82:	f000 f855 	bl	8004030 <HAL_RCC_GetSysClockFreq>
 8003f86:	4601      	mov	r1, r0
 8003f88:	4b0b      	ldr	r3, [pc, #44]	; (8003fb8 <HAL_RCC_ClockConfig+0x1bc>)
 8003f8a:	689b      	ldr	r3, [r3, #8]
 8003f8c:	091b      	lsrs	r3, r3, #4
 8003f8e:	f003 030f 	and.w	r3, r3, #15
 8003f92:	4a0a      	ldr	r2, [pc, #40]	; (8003fbc <HAL_RCC_ClockConfig+0x1c0>)
 8003f94:	5cd3      	ldrb	r3, [r2, r3]
 8003f96:	fa21 f303 	lsr.w	r3, r1, r3
 8003f9a:	4a09      	ldr	r2, [pc, #36]	; (8003fc0 <HAL_RCC_ClockConfig+0x1c4>)
 8003f9c:	6013      	str	r3, [r2, #0]
 8003f9e:	4b09      	ldr	r3, [pc, #36]	; (8003fc4 <HAL_RCC_ClockConfig+0x1c8>)
 8003fa0:	681b      	ldr	r3, [r3, #0]
 8003fa2:	4618      	mov	r0, r3
 8003fa4:	f7fe ff88 	bl	8002eb8 <HAL_InitTick>
 8003fa8:	2300      	movs	r3, #0
 8003faa:	4618      	mov	r0, r3
 8003fac:	3710      	adds	r7, #16
 8003fae:	46bd      	mov	sp, r7
 8003fb0:	bd80      	pop	{r7, pc}
 8003fb2:	bf00      	nop
 8003fb4:	40023c00 	.word	0x40023c00
 8003fb8:	40023800 	.word	0x40023800
 8003fbc:	08007c40 	.word	0x08007c40
 8003fc0:	20000008 	.word	0x20000008
 8003fc4:	2000000c 	.word	0x2000000c

08003fc8 <HAL_RCC_GetHCLKFreq>:
 8003fc8:	b480      	push	{r7}
 8003fca:	af00      	add	r7, sp, #0
 8003fcc:	4b03      	ldr	r3, [pc, #12]	; (8003fdc <HAL_RCC_GetHCLKFreq+0x14>)
 8003fce:	681b      	ldr	r3, [r3, #0]
 8003fd0:	4618      	mov	r0, r3
 8003fd2:	46bd      	mov	sp, r7
 8003fd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fd8:	4770      	bx	lr
 8003fda:	bf00      	nop
 8003fdc:	20000008 	.word	0x20000008

08003fe0 <HAL_RCC_GetPCLK1Freq>:
 8003fe0:	b580      	push	{r7, lr}
 8003fe2:	af00      	add	r7, sp, #0
 8003fe4:	f7ff fff0 	bl	8003fc8 <HAL_RCC_GetHCLKFreq>
 8003fe8:	4601      	mov	r1, r0
 8003fea:	4b05      	ldr	r3, [pc, #20]	; (8004000 <HAL_RCC_GetPCLK1Freq+0x20>)
 8003fec:	689b      	ldr	r3, [r3, #8]
 8003fee:	0a9b      	lsrs	r3, r3, #10
 8003ff0:	f003 0307 	and.w	r3, r3, #7
 8003ff4:	4a03      	ldr	r2, [pc, #12]	; (8004004 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003ff6:	5cd3      	ldrb	r3, [r2, r3]
 8003ff8:	fa21 f303 	lsr.w	r3, r1, r3
 8003ffc:	4618      	mov	r0, r3
 8003ffe:	bd80      	pop	{r7, pc}
 8004000:	40023800 	.word	0x40023800
 8004004:	08007c50 	.word	0x08007c50

08004008 <HAL_RCC_GetPCLK2Freq>:
 8004008:	b580      	push	{r7, lr}
 800400a:	af00      	add	r7, sp, #0
 800400c:	f7ff ffdc 	bl	8003fc8 <HAL_RCC_GetHCLKFreq>
 8004010:	4601      	mov	r1, r0
 8004012:	4b05      	ldr	r3, [pc, #20]	; (8004028 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004014:	689b      	ldr	r3, [r3, #8]
 8004016:	0b5b      	lsrs	r3, r3, #13
 8004018:	f003 0307 	and.w	r3, r3, #7
 800401c:	4a03      	ldr	r2, [pc, #12]	; (800402c <HAL_RCC_GetPCLK2Freq+0x24>)
 800401e:	5cd3      	ldrb	r3, [r2, r3]
 8004020:	fa21 f303 	lsr.w	r3, r1, r3
 8004024:	4618      	mov	r0, r3
 8004026:	bd80      	pop	{r7, pc}
 8004028:	40023800 	.word	0x40023800
 800402c:	08007c50 	.word	0x08007c50

08004030 <HAL_RCC_GetSysClockFreq>:
 8004030:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004032:	b087      	sub	sp, #28
 8004034:	af00      	add	r7, sp, #0
 8004036:	2300      	movs	r3, #0
 8004038:	60fb      	str	r3, [r7, #12]
 800403a:	2300      	movs	r3, #0
 800403c:	617b      	str	r3, [r7, #20]
 800403e:	2300      	movs	r3, #0
 8004040:	60bb      	str	r3, [r7, #8]
 8004042:	2300      	movs	r3, #0
 8004044:	607b      	str	r3, [r7, #4]
 8004046:	2300      	movs	r3, #0
 8004048:	613b      	str	r3, [r7, #16]
 800404a:	4bc6      	ldr	r3, [pc, #792]	; (8004364 <HAL_RCC_GetSysClockFreq+0x334>)
 800404c:	689b      	ldr	r3, [r3, #8]
 800404e:	f003 030c 	and.w	r3, r3, #12
 8004052:	2b0c      	cmp	r3, #12
 8004054:	f200 817e 	bhi.w	8004354 <HAL_RCC_GetSysClockFreq+0x324>
 8004058:	a201      	add	r2, pc, #4	; (adr r2, 8004060 <HAL_RCC_GetSysClockFreq+0x30>)
 800405a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800405e:	bf00      	nop
 8004060:	08004095 	.word	0x08004095
 8004064:	08004355 	.word	0x08004355
 8004068:	08004355 	.word	0x08004355
 800406c:	08004355 	.word	0x08004355
 8004070:	0800409b 	.word	0x0800409b
 8004074:	08004355 	.word	0x08004355
 8004078:	08004355 	.word	0x08004355
 800407c:	08004355 	.word	0x08004355
 8004080:	080040a1 	.word	0x080040a1
 8004084:	08004355 	.word	0x08004355
 8004088:	08004355 	.word	0x08004355
 800408c:	08004355 	.word	0x08004355
 8004090:	080041fd 	.word	0x080041fd
 8004094:	4bb4      	ldr	r3, [pc, #720]	; (8004368 <HAL_RCC_GetSysClockFreq+0x338>)
 8004096:	613b      	str	r3, [r7, #16]
 8004098:	e15f      	b.n	800435a <HAL_RCC_GetSysClockFreq+0x32a>
 800409a:	4bb4      	ldr	r3, [pc, #720]	; (800436c <HAL_RCC_GetSysClockFreq+0x33c>)
 800409c:	613b      	str	r3, [r7, #16]
 800409e:	e15c      	b.n	800435a <HAL_RCC_GetSysClockFreq+0x32a>
 80040a0:	4bb0      	ldr	r3, [pc, #704]	; (8004364 <HAL_RCC_GetSysClockFreq+0x334>)
 80040a2:	685b      	ldr	r3, [r3, #4]
 80040a4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80040a8:	60fb      	str	r3, [r7, #12]
 80040aa:	4bae      	ldr	r3, [pc, #696]	; (8004364 <HAL_RCC_GetSysClockFreq+0x334>)
 80040ac:	685b      	ldr	r3, [r3, #4]
 80040ae:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80040b2:	2b00      	cmp	r3, #0
 80040b4:	d04a      	beq.n	800414c <HAL_RCC_GetSysClockFreq+0x11c>
 80040b6:	4bab      	ldr	r3, [pc, #684]	; (8004364 <HAL_RCC_GetSysClockFreq+0x334>)
 80040b8:	685b      	ldr	r3, [r3, #4]
 80040ba:	099b      	lsrs	r3, r3, #6
 80040bc:	f04f 0400 	mov.w	r4, #0
 80040c0:	f240 11ff 	movw	r1, #511	; 0x1ff
 80040c4:	f04f 0200 	mov.w	r2, #0
 80040c8:	ea03 0501 	and.w	r5, r3, r1
 80040cc:	ea04 0602 	and.w	r6, r4, r2
 80040d0:	4629      	mov	r1, r5
 80040d2:	4632      	mov	r2, r6
 80040d4:	f04f 0300 	mov.w	r3, #0
 80040d8:	f04f 0400 	mov.w	r4, #0
 80040dc:	0154      	lsls	r4, r2, #5
 80040de:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 80040e2:	014b      	lsls	r3, r1, #5
 80040e4:	4619      	mov	r1, r3
 80040e6:	4622      	mov	r2, r4
 80040e8:	1b49      	subs	r1, r1, r5
 80040ea:	eb62 0206 	sbc.w	r2, r2, r6
 80040ee:	f04f 0300 	mov.w	r3, #0
 80040f2:	f04f 0400 	mov.w	r4, #0
 80040f6:	0194      	lsls	r4, r2, #6
 80040f8:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 80040fc:	018b      	lsls	r3, r1, #6
 80040fe:	1a5b      	subs	r3, r3, r1
 8004100:	eb64 0402 	sbc.w	r4, r4, r2
 8004104:	f04f 0100 	mov.w	r1, #0
 8004108:	f04f 0200 	mov.w	r2, #0
 800410c:	00e2      	lsls	r2, r4, #3
 800410e:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8004112:	00d9      	lsls	r1, r3, #3
 8004114:	460b      	mov	r3, r1
 8004116:	4614      	mov	r4, r2
 8004118:	195b      	adds	r3, r3, r5
 800411a:	eb44 0406 	adc.w	r4, r4, r6
 800411e:	f04f 0100 	mov.w	r1, #0
 8004122:	f04f 0200 	mov.w	r2, #0
 8004126:	0262      	lsls	r2, r4, #9
 8004128:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
 800412c:	0259      	lsls	r1, r3, #9
 800412e:	460b      	mov	r3, r1
 8004130:	4614      	mov	r4, r2
 8004132:	4618      	mov	r0, r3
 8004134:	4621      	mov	r1, r4
 8004136:	68fb      	ldr	r3, [r7, #12]
 8004138:	f04f 0400 	mov.w	r4, #0
 800413c:	461a      	mov	r2, r3
 800413e:	4623      	mov	r3, r4
 8004140:	f7fc fd5c 	bl	8000bfc <__aeabi_uldivmod>
 8004144:	4603      	mov	r3, r0
 8004146:	460c      	mov	r4, r1
 8004148:	617b      	str	r3, [r7, #20]
 800414a:	e049      	b.n	80041e0 <HAL_RCC_GetSysClockFreq+0x1b0>
 800414c:	4b85      	ldr	r3, [pc, #532]	; (8004364 <HAL_RCC_GetSysClockFreq+0x334>)
 800414e:	685b      	ldr	r3, [r3, #4]
 8004150:	099b      	lsrs	r3, r3, #6
 8004152:	f04f 0400 	mov.w	r4, #0
 8004156:	f240 11ff 	movw	r1, #511	; 0x1ff
 800415a:	f04f 0200 	mov.w	r2, #0
 800415e:	ea03 0501 	and.w	r5, r3, r1
 8004162:	ea04 0602 	and.w	r6, r4, r2
 8004166:	4629      	mov	r1, r5
 8004168:	4632      	mov	r2, r6
 800416a:	f04f 0300 	mov.w	r3, #0
 800416e:	f04f 0400 	mov.w	r4, #0
 8004172:	0154      	lsls	r4, r2, #5
 8004174:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8004178:	014b      	lsls	r3, r1, #5
 800417a:	4619      	mov	r1, r3
 800417c:	4622      	mov	r2, r4
 800417e:	1b49      	subs	r1, r1, r5
 8004180:	eb62 0206 	sbc.w	r2, r2, r6
 8004184:	f04f 0300 	mov.w	r3, #0
 8004188:	f04f 0400 	mov.w	r4, #0
 800418c:	0194      	lsls	r4, r2, #6
 800418e:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8004192:	018b      	lsls	r3, r1, #6
 8004194:	1a5b      	subs	r3, r3, r1
 8004196:	eb64 0402 	sbc.w	r4, r4, r2
 800419a:	f04f 0100 	mov.w	r1, #0
 800419e:	f04f 0200 	mov.w	r2, #0
 80041a2:	00e2      	lsls	r2, r4, #3
 80041a4:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 80041a8:	00d9      	lsls	r1, r3, #3
 80041aa:	460b      	mov	r3, r1
 80041ac:	4614      	mov	r4, r2
 80041ae:	195b      	adds	r3, r3, r5
 80041b0:	eb44 0406 	adc.w	r4, r4, r6
 80041b4:	f04f 0100 	mov.w	r1, #0
 80041b8:	f04f 0200 	mov.w	r2, #0
 80041bc:	02a2      	lsls	r2, r4, #10
 80041be:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 80041c2:	0299      	lsls	r1, r3, #10
 80041c4:	460b      	mov	r3, r1
 80041c6:	4614      	mov	r4, r2
 80041c8:	4618      	mov	r0, r3
 80041ca:	4621      	mov	r1, r4
 80041cc:	68fb      	ldr	r3, [r7, #12]
 80041ce:	f04f 0400 	mov.w	r4, #0
 80041d2:	461a      	mov	r2, r3
 80041d4:	4623      	mov	r3, r4
 80041d6:	f7fc fd11 	bl	8000bfc <__aeabi_uldivmod>
 80041da:	4603      	mov	r3, r0
 80041dc:	460c      	mov	r4, r1
 80041de:	617b      	str	r3, [r7, #20]
 80041e0:	4b60      	ldr	r3, [pc, #384]	; (8004364 <HAL_RCC_GetSysClockFreq+0x334>)
 80041e2:	685b      	ldr	r3, [r3, #4]
 80041e4:	0c1b      	lsrs	r3, r3, #16
 80041e6:	f003 0303 	and.w	r3, r3, #3
 80041ea:	3301      	adds	r3, #1
 80041ec:	005b      	lsls	r3, r3, #1
 80041ee:	60bb      	str	r3, [r7, #8]
 80041f0:	697a      	ldr	r2, [r7, #20]
 80041f2:	68bb      	ldr	r3, [r7, #8]
 80041f4:	fbb2 f3f3 	udiv	r3, r2, r3
 80041f8:	613b      	str	r3, [r7, #16]
 80041fa:	e0ae      	b.n	800435a <HAL_RCC_GetSysClockFreq+0x32a>
 80041fc:	4b59      	ldr	r3, [pc, #356]	; (8004364 <HAL_RCC_GetSysClockFreq+0x334>)
 80041fe:	685b      	ldr	r3, [r3, #4]
 8004200:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004204:	60fb      	str	r3, [r7, #12]
 8004206:	4b57      	ldr	r3, [pc, #348]	; (8004364 <HAL_RCC_GetSysClockFreq+0x334>)
 8004208:	685b      	ldr	r3, [r3, #4]
 800420a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800420e:	2b00      	cmp	r3, #0
 8004210:	d04a      	beq.n	80042a8 <HAL_RCC_GetSysClockFreq+0x278>
 8004212:	4b54      	ldr	r3, [pc, #336]	; (8004364 <HAL_RCC_GetSysClockFreq+0x334>)
 8004214:	685b      	ldr	r3, [r3, #4]
 8004216:	099b      	lsrs	r3, r3, #6
 8004218:	f04f 0400 	mov.w	r4, #0
 800421c:	f240 11ff 	movw	r1, #511	; 0x1ff
 8004220:	f04f 0200 	mov.w	r2, #0
 8004224:	ea03 0501 	and.w	r5, r3, r1
 8004228:	ea04 0602 	and.w	r6, r4, r2
 800422c:	4629      	mov	r1, r5
 800422e:	4632      	mov	r2, r6
 8004230:	f04f 0300 	mov.w	r3, #0
 8004234:	f04f 0400 	mov.w	r4, #0
 8004238:	0154      	lsls	r4, r2, #5
 800423a:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 800423e:	014b      	lsls	r3, r1, #5
 8004240:	4619      	mov	r1, r3
 8004242:	4622      	mov	r2, r4
 8004244:	1b49      	subs	r1, r1, r5
 8004246:	eb62 0206 	sbc.w	r2, r2, r6
 800424a:	f04f 0300 	mov.w	r3, #0
 800424e:	f04f 0400 	mov.w	r4, #0
 8004252:	0194      	lsls	r4, r2, #6
 8004254:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8004258:	018b      	lsls	r3, r1, #6
 800425a:	1a5b      	subs	r3, r3, r1
 800425c:	eb64 0402 	sbc.w	r4, r4, r2
 8004260:	f04f 0100 	mov.w	r1, #0
 8004264:	f04f 0200 	mov.w	r2, #0
 8004268:	00e2      	lsls	r2, r4, #3
 800426a:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 800426e:	00d9      	lsls	r1, r3, #3
 8004270:	460b      	mov	r3, r1
 8004272:	4614      	mov	r4, r2
 8004274:	195b      	adds	r3, r3, r5
 8004276:	eb44 0406 	adc.w	r4, r4, r6
 800427a:	f04f 0100 	mov.w	r1, #0
 800427e:	f04f 0200 	mov.w	r2, #0
 8004282:	0262      	lsls	r2, r4, #9
 8004284:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
 8004288:	0259      	lsls	r1, r3, #9
 800428a:	460b      	mov	r3, r1
 800428c:	4614      	mov	r4, r2
 800428e:	4618      	mov	r0, r3
 8004290:	4621      	mov	r1, r4
 8004292:	68fb      	ldr	r3, [r7, #12]
 8004294:	f04f 0400 	mov.w	r4, #0
 8004298:	461a      	mov	r2, r3
 800429a:	4623      	mov	r3, r4
 800429c:	f7fc fcae 	bl	8000bfc <__aeabi_uldivmod>
 80042a0:	4603      	mov	r3, r0
 80042a2:	460c      	mov	r4, r1
 80042a4:	617b      	str	r3, [r7, #20]
 80042a6:	e049      	b.n	800433c <HAL_RCC_GetSysClockFreq+0x30c>
 80042a8:	4b2e      	ldr	r3, [pc, #184]	; (8004364 <HAL_RCC_GetSysClockFreq+0x334>)
 80042aa:	685b      	ldr	r3, [r3, #4]
 80042ac:	099b      	lsrs	r3, r3, #6
 80042ae:	f04f 0400 	mov.w	r4, #0
 80042b2:	f240 11ff 	movw	r1, #511	; 0x1ff
 80042b6:	f04f 0200 	mov.w	r2, #0
 80042ba:	ea03 0501 	and.w	r5, r3, r1
 80042be:	ea04 0602 	and.w	r6, r4, r2
 80042c2:	4629      	mov	r1, r5
 80042c4:	4632      	mov	r2, r6
 80042c6:	f04f 0300 	mov.w	r3, #0
 80042ca:	f04f 0400 	mov.w	r4, #0
 80042ce:	0154      	lsls	r4, r2, #5
 80042d0:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 80042d4:	014b      	lsls	r3, r1, #5
 80042d6:	4619      	mov	r1, r3
 80042d8:	4622      	mov	r2, r4
 80042da:	1b49      	subs	r1, r1, r5
 80042dc:	eb62 0206 	sbc.w	r2, r2, r6
 80042e0:	f04f 0300 	mov.w	r3, #0
 80042e4:	f04f 0400 	mov.w	r4, #0
 80042e8:	0194      	lsls	r4, r2, #6
 80042ea:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 80042ee:	018b      	lsls	r3, r1, #6
 80042f0:	1a5b      	subs	r3, r3, r1
 80042f2:	eb64 0402 	sbc.w	r4, r4, r2
 80042f6:	f04f 0100 	mov.w	r1, #0
 80042fa:	f04f 0200 	mov.w	r2, #0
 80042fe:	00e2      	lsls	r2, r4, #3
 8004300:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8004304:	00d9      	lsls	r1, r3, #3
 8004306:	460b      	mov	r3, r1
 8004308:	4614      	mov	r4, r2
 800430a:	195b      	adds	r3, r3, r5
 800430c:	eb44 0406 	adc.w	r4, r4, r6
 8004310:	f04f 0100 	mov.w	r1, #0
 8004314:	f04f 0200 	mov.w	r2, #0
 8004318:	02a2      	lsls	r2, r4, #10
 800431a:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 800431e:	0299      	lsls	r1, r3, #10
 8004320:	460b      	mov	r3, r1
 8004322:	4614      	mov	r4, r2
 8004324:	4618      	mov	r0, r3
 8004326:	4621      	mov	r1, r4
 8004328:	68fb      	ldr	r3, [r7, #12]
 800432a:	f04f 0400 	mov.w	r4, #0
 800432e:	461a      	mov	r2, r3
 8004330:	4623      	mov	r3, r4
 8004332:	f7fc fc63 	bl	8000bfc <__aeabi_uldivmod>
 8004336:	4603      	mov	r3, r0
 8004338:	460c      	mov	r4, r1
 800433a:	617b      	str	r3, [r7, #20]
 800433c:	4b09      	ldr	r3, [pc, #36]	; (8004364 <HAL_RCC_GetSysClockFreq+0x334>)
 800433e:	685b      	ldr	r3, [r3, #4]
 8004340:	0f1b      	lsrs	r3, r3, #28
 8004342:	f003 0307 	and.w	r3, r3, #7
 8004346:	607b      	str	r3, [r7, #4]
 8004348:	697a      	ldr	r2, [r7, #20]
 800434a:	687b      	ldr	r3, [r7, #4]
 800434c:	fbb2 f3f3 	udiv	r3, r2, r3
 8004350:	613b      	str	r3, [r7, #16]
 8004352:	e002      	b.n	800435a <HAL_RCC_GetSysClockFreq+0x32a>
 8004354:	4b04      	ldr	r3, [pc, #16]	; (8004368 <HAL_RCC_GetSysClockFreq+0x338>)
 8004356:	613b      	str	r3, [r7, #16]
 8004358:	bf00      	nop
 800435a:	693b      	ldr	r3, [r7, #16]
 800435c:	4618      	mov	r0, r3
 800435e:	371c      	adds	r7, #28
 8004360:	46bd      	mov	sp, r7
 8004362:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004364:	40023800 	.word	0x40023800
 8004368:	00f42400 	.word	0x00f42400
 800436c:	007a1200 	.word	0x007a1200

08004370 <HAL_RCC_OscConfig>:
 8004370:	b580      	push	{r7, lr}
 8004372:	b086      	sub	sp, #24
 8004374:	af00      	add	r7, sp, #0
 8004376:	6078      	str	r0, [r7, #4]
 8004378:	2300      	movs	r3, #0
 800437a:	613b      	str	r3, [r7, #16]
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	681b      	ldr	r3, [r3, #0]
 8004380:	f003 0301 	and.w	r3, r3, #1
 8004384:	2b00      	cmp	r3, #0
 8004386:	f000 8083 	beq.w	8004490 <HAL_RCC_OscConfig+0x120>
 800438a:	4b95      	ldr	r3, [pc, #596]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 800438c:	689b      	ldr	r3, [r3, #8]
 800438e:	f003 030c 	and.w	r3, r3, #12
 8004392:	2b04      	cmp	r3, #4
 8004394:	d019      	beq.n	80043ca <HAL_RCC_OscConfig+0x5a>
 8004396:	4b92      	ldr	r3, [pc, #584]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 8004398:	689b      	ldr	r3, [r3, #8]
 800439a:	f003 030c 	and.w	r3, r3, #12
 800439e:	2b08      	cmp	r3, #8
 80043a0:	d106      	bne.n	80043b0 <HAL_RCC_OscConfig+0x40>
 80043a2:	4b8f      	ldr	r3, [pc, #572]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 80043a4:	685b      	ldr	r3, [r3, #4]
 80043a6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80043aa:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80043ae:	d00c      	beq.n	80043ca <HAL_RCC_OscConfig+0x5a>
 80043b0:	4b8b      	ldr	r3, [pc, #556]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 80043b2:	689b      	ldr	r3, [r3, #8]
 80043b4:	f003 030c 	and.w	r3, r3, #12
 80043b8:	2b0c      	cmp	r3, #12
 80043ba:	d112      	bne.n	80043e2 <HAL_RCC_OscConfig+0x72>
 80043bc:	4b88      	ldr	r3, [pc, #544]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 80043be:	685b      	ldr	r3, [r3, #4]
 80043c0:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80043c4:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80043c8:	d10b      	bne.n	80043e2 <HAL_RCC_OscConfig+0x72>
 80043ca:	4b85      	ldr	r3, [pc, #532]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 80043cc:	681b      	ldr	r3, [r3, #0]
 80043ce:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80043d2:	2b00      	cmp	r3, #0
 80043d4:	d05b      	beq.n	800448e <HAL_RCC_OscConfig+0x11e>
 80043d6:	687b      	ldr	r3, [r7, #4]
 80043d8:	685b      	ldr	r3, [r3, #4]
 80043da:	2b00      	cmp	r3, #0
 80043dc:	d157      	bne.n	800448e <HAL_RCC_OscConfig+0x11e>
 80043de:	2301      	movs	r3, #1
 80043e0:	e216      	b.n	8004810 <HAL_RCC_OscConfig+0x4a0>
 80043e2:	687b      	ldr	r3, [r7, #4]
 80043e4:	685b      	ldr	r3, [r3, #4]
 80043e6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80043ea:	d106      	bne.n	80043fa <HAL_RCC_OscConfig+0x8a>
 80043ec:	4b7c      	ldr	r3, [pc, #496]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	4a7b      	ldr	r2, [pc, #492]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 80043f2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80043f6:	6013      	str	r3, [r2, #0]
 80043f8:	e01d      	b.n	8004436 <HAL_RCC_OscConfig+0xc6>
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	685b      	ldr	r3, [r3, #4]
 80043fe:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004402:	d10c      	bne.n	800441e <HAL_RCC_OscConfig+0xae>
 8004404:	4b76      	ldr	r3, [pc, #472]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 8004406:	681b      	ldr	r3, [r3, #0]
 8004408:	4a75      	ldr	r2, [pc, #468]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 800440a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800440e:	6013      	str	r3, [r2, #0]
 8004410:	4b73      	ldr	r3, [pc, #460]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 8004412:	681b      	ldr	r3, [r3, #0]
 8004414:	4a72      	ldr	r2, [pc, #456]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 8004416:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800441a:	6013      	str	r3, [r2, #0]
 800441c:	e00b      	b.n	8004436 <HAL_RCC_OscConfig+0xc6>
 800441e:	4b70      	ldr	r3, [pc, #448]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 8004420:	681b      	ldr	r3, [r3, #0]
 8004422:	4a6f      	ldr	r2, [pc, #444]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 8004424:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004428:	6013      	str	r3, [r2, #0]
 800442a:	4b6d      	ldr	r3, [pc, #436]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 800442c:	681b      	ldr	r3, [r3, #0]
 800442e:	4a6c      	ldr	r2, [pc, #432]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 8004430:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004434:	6013      	str	r3, [r2, #0]
 8004436:	687b      	ldr	r3, [r7, #4]
 8004438:	685b      	ldr	r3, [r3, #4]
 800443a:	2b00      	cmp	r3, #0
 800443c:	d013      	beq.n	8004466 <HAL_RCC_OscConfig+0xf6>
 800443e:	f7fe fd7f 	bl	8002f40 <HAL_GetTick>
 8004442:	6138      	str	r0, [r7, #16]
 8004444:	e008      	b.n	8004458 <HAL_RCC_OscConfig+0xe8>
 8004446:	f7fe fd7b 	bl	8002f40 <HAL_GetTick>
 800444a:	4602      	mov	r2, r0
 800444c:	693b      	ldr	r3, [r7, #16]
 800444e:	1ad3      	subs	r3, r2, r3
 8004450:	2b64      	cmp	r3, #100	; 0x64
 8004452:	d901      	bls.n	8004458 <HAL_RCC_OscConfig+0xe8>
 8004454:	2303      	movs	r3, #3
 8004456:	e1db      	b.n	8004810 <HAL_RCC_OscConfig+0x4a0>
 8004458:	4b61      	ldr	r3, [pc, #388]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 800445a:	681b      	ldr	r3, [r3, #0]
 800445c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004460:	2b00      	cmp	r3, #0
 8004462:	d0f0      	beq.n	8004446 <HAL_RCC_OscConfig+0xd6>
 8004464:	e014      	b.n	8004490 <HAL_RCC_OscConfig+0x120>
 8004466:	f7fe fd6b 	bl	8002f40 <HAL_GetTick>
 800446a:	6138      	str	r0, [r7, #16]
 800446c:	e008      	b.n	8004480 <HAL_RCC_OscConfig+0x110>
 800446e:	f7fe fd67 	bl	8002f40 <HAL_GetTick>
 8004472:	4602      	mov	r2, r0
 8004474:	693b      	ldr	r3, [r7, #16]
 8004476:	1ad3      	subs	r3, r2, r3
 8004478:	2b64      	cmp	r3, #100	; 0x64
 800447a:	d901      	bls.n	8004480 <HAL_RCC_OscConfig+0x110>
 800447c:	2303      	movs	r3, #3
 800447e:	e1c7      	b.n	8004810 <HAL_RCC_OscConfig+0x4a0>
 8004480:	4b57      	ldr	r3, [pc, #348]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004488:	2b00      	cmp	r3, #0
 800448a:	d1f0      	bne.n	800446e <HAL_RCC_OscConfig+0xfe>
 800448c:	e000      	b.n	8004490 <HAL_RCC_OscConfig+0x120>
 800448e:	bf00      	nop
 8004490:	687b      	ldr	r3, [r7, #4]
 8004492:	681b      	ldr	r3, [r3, #0]
 8004494:	f003 0302 	and.w	r3, r3, #2
 8004498:	2b00      	cmp	r3, #0
 800449a:	d06f      	beq.n	800457c <HAL_RCC_OscConfig+0x20c>
 800449c:	4b50      	ldr	r3, [pc, #320]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 800449e:	689b      	ldr	r3, [r3, #8]
 80044a0:	f003 030c 	and.w	r3, r3, #12
 80044a4:	2b00      	cmp	r3, #0
 80044a6:	d017      	beq.n	80044d8 <HAL_RCC_OscConfig+0x168>
 80044a8:	4b4d      	ldr	r3, [pc, #308]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 80044aa:	689b      	ldr	r3, [r3, #8]
 80044ac:	f003 030c 	and.w	r3, r3, #12
 80044b0:	2b08      	cmp	r3, #8
 80044b2:	d105      	bne.n	80044c0 <HAL_RCC_OscConfig+0x150>
 80044b4:	4b4a      	ldr	r3, [pc, #296]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 80044b6:	685b      	ldr	r3, [r3, #4]
 80044b8:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80044bc:	2b00      	cmp	r3, #0
 80044be:	d00b      	beq.n	80044d8 <HAL_RCC_OscConfig+0x168>
 80044c0:	4b47      	ldr	r3, [pc, #284]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 80044c2:	689b      	ldr	r3, [r3, #8]
 80044c4:	f003 030c 	and.w	r3, r3, #12
 80044c8:	2b0c      	cmp	r3, #12
 80044ca:	d11c      	bne.n	8004506 <HAL_RCC_OscConfig+0x196>
 80044cc:	4b44      	ldr	r3, [pc, #272]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 80044ce:	685b      	ldr	r3, [r3, #4]
 80044d0:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80044d4:	2b00      	cmp	r3, #0
 80044d6:	d116      	bne.n	8004506 <HAL_RCC_OscConfig+0x196>
 80044d8:	4b41      	ldr	r3, [pc, #260]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 80044da:	681b      	ldr	r3, [r3, #0]
 80044dc:	f003 0302 	and.w	r3, r3, #2
 80044e0:	2b00      	cmp	r3, #0
 80044e2:	d005      	beq.n	80044f0 <HAL_RCC_OscConfig+0x180>
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	68db      	ldr	r3, [r3, #12]
 80044e8:	2b01      	cmp	r3, #1
 80044ea:	d001      	beq.n	80044f0 <HAL_RCC_OscConfig+0x180>
 80044ec:	2301      	movs	r3, #1
 80044ee:	e18f      	b.n	8004810 <HAL_RCC_OscConfig+0x4a0>
 80044f0:	4b3b      	ldr	r3, [pc, #236]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 80044f2:	681b      	ldr	r3, [r3, #0]
 80044f4:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	691b      	ldr	r3, [r3, #16]
 80044fc:	00db      	lsls	r3, r3, #3
 80044fe:	4938      	ldr	r1, [pc, #224]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 8004500:	4313      	orrs	r3, r2
 8004502:	600b      	str	r3, [r1, #0]
 8004504:	e03a      	b.n	800457c <HAL_RCC_OscConfig+0x20c>
 8004506:	687b      	ldr	r3, [r7, #4]
 8004508:	68db      	ldr	r3, [r3, #12]
 800450a:	2b00      	cmp	r3, #0
 800450c:	d020      	beq.n	8004550 <HAL_RCC_OscConfig+0x1e0>
 800450e:	4b35      	ldr	r3, [pc, #212]	; (80045e4 <HAL_RCC_OscConfig+0x274>)
 8004510:	2201      	movs	r2, #1
 8004512:	601a      	str	r2, [r3, #0]
 8004514:	f7fe fd14 	bl	8002f40 <HAL_GetTick>
 8004518:	6138      	str	r0, [r7, #16]
 800451a:	e008      	b.n	800452e <HAL_RCC_OscConfig+0x1be>
 800451c:	f7fe fd10 	bl	8002f40 <HAL_GetTick>
 8004520:	4602      	mov	r2, r0
 8004522:	693b      	ldr	r3, [r7, #16]
 8004524:	1ad3      	subs	r3, r2, r3
 8004526:	2b02      	cmp	r3, #2
 8004528:	d901      	bls.n	800452e <HAL_RCC_OscConfig+0x1be>
 800452a:	2303      	movs	r3, #3
 800452c:	e170      	b.n	8004810 <HAL_RCC_OscConfig+0x4a0>
 800452e:	4b2c      	ldr	r3, [pc, #176]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 8004530:	681b      	ldr	r3, [r3, #0]
 8004532:	f003 0302 	and.w	r3, r3, #2
 8004536:	2b00      	cmp	r3, #0
 8004538:	d0f0      	beq.n	800451c <HAL_RCC_OscConfig+0x1ac>
 800453a:	4b29      	ldr	r3, [pc, #164]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 800453c:	681b      	ldr	r3, [r3, #0]
 800453e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	691b      	ldr	r3, [r3, #16]
 8004546:	00db      	lsls	r3, r3, #3
 8004548:	4925      	ldr	r1, [pc, #148]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 800454a:	4313      	orrs	r3, r2
 800454c:	600b      	str	r3, [r1, #0]
 800454e:	e015      	b.n	800457c <HAL_RCC_OscConfig+0x20c>
 8004550:	4b24      	ldr	r3, [pc, #144]	; (80045e4 <HAL_RCC_OscConfig+0x274>)
 8004552:	2200      	movs	r2, #0
 8004554:	601a      	str	r2, [r3, #0]
 8004556:	f7fe fcf3 	bl	8002f40 <HAL_GetTick>
 800455a:	6138      	str	r0, [r7, #16]
 800455c:	e008      	b.n	8004570 <HAL_RCC_OscConfig+0x200>
 800455e:	f7fe fcef 	bl	8002f40 <HAL_GetTick>
 8004562:	4602      	mov	r2, r0
 8004564:	693b      	ldr	r3, [r7, #16]
 8004566:	1ad3      	subs	r3, r2, r3
 8004568:	2b02      	cmp	r3, #2
 800456a:	d901      	bls.n	8004570 <HAL_RCC_OscConfig+0x200>
 800456c:	2303      	movs	r3, #3
 800456e:	e14f      	b.n	8004810 <HAL_RCC_OscConfig+0x4a0>
 8004570:	4b1b      	ldr	r3, [pc, #108]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 8004572:	681b      	ldr	r3, [r3, #0]
 8004574:	f003 0302 	and.w	r3, r3, #2
 8004578:	2b00      	cmp	r3, #0
 800457a:	d1f0      	bne.n	800455e <HAL_RCC_OscConfig+0x1ee>
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	f003 0308 	and.w	r3, r3, #8
 8004584:	2b00      	cmp	r3, #0
 8004586:	d037      	beq.n	80045f8 <HAL_RCC_OscConfig+0x288>
 8004588:	687b      	ldr	r3, [r7, #4]
 800458a:	695b      	ldr	r3, [r3, #20]
 800458c:	2b00      	cmp	r3, #0
 800458e:	d016      	beq.n	80045be <HAL_RCC_OscConfig+0x24e>
 8004590:	4b15      	ldr	r3, [pc, #84]	; (80045e8 <HAL_RCC_OscConfig+0x278>)
 8004592:	2201      	movs	r2, #1
 8004594:	601a      	str	r2, [r3, #0]
 8004596:	f7fe fcd3 	bl	8002f40 <HAL_GetTick>
 800459a:	6138      	str	r0, [r7, #16]
 800459c:	e008      	b.n	80045b0 <HAL_RCC_OscConfig+0x240>
 800459e:	f7fe fccf 	bl	8002f40 <HAL_GetTick>
 80045a2:	4602      	mov	r2, r0
 80045a4:	693b      	ldr	r3, [r7, #16]
 80045a6:	1ad3      	subs	r3, r2, r3
 80045a8:	2b02      	cmp	r3, #2
 80045aa:	d901      	bls.n	80045b0 <HAL_RCC_OscConfig+0x240>
 80045ac:	2303      	movs	r3, #3
 80045ae:	e12f      	b.n	8004810 <HAL_RCC_OscConfig+0x4a0>
 80045b0:	4b0b      	ldr	r3, [pc, #44]	; (80045e0 <HAL_RCC_OscConfig+0x270>)
 80045b2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80045b4:	f003 0302 	and.w	r3, r3, #2
 80045b8:	2b00      	cmp	r3, #0
 80045ba:	d0f0      	beq.n	800459e <HAL_RCC_OscConfig+0x22e>
 80045bc:	e01c      	b.n	80045f8 <HAL_RCC_OscConfig+0x288>
 80045be:	4b0a      	ldr	r3, [pc, #40]	; (80045e8 <HAL_RCC_OscConfig+0x278>)
 80045c0:	2200      	movs	r2, #0
 80045c2:	601a      	str	r2, [r3, #0]
 80045c4:	f7fe fcbc 	bl	8002f40 <HAL_GetTick>
 80045c8:	6138      	str	r0, [r7, #16]
 80045ca:	e00f      	b.n	80045ec <HAL_RCC_OscConfig+0x27c>
 80045cc:	f7fe fcb8 	bl	8002f40 <HAL_GetTick>
 80045d0:	4602      	mov	r2, r0
 80045d2:	693b      	ldr	r3, [r7, #16]
 80045d4:	1ad3      	subs	r3, r2, r3
 80045d6:	2b02      	cmp	r3, #2
 80045d8:	d908      	bls.n	80045ec <HAL_RCC_OscConfig+0x27c>
 80045da:	2303      	movs	r3, #3
 80045dc:	e118      	b.n	8004810 <HAL_RCC_OscConfig+0x4a0>
 80045de:	bf00      	nop
 80045e0:	40023800 	.word	0x40023800
 80045e4:	42470000 	.word	0x42470000
 80045e8:	42470e80 	.word	0x42470e80
 80045ec:	4b8a      	ldr	r3, [pc, #552]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 80045ee:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80045f0:	f003 0302 	and.w	r3, r3, #2
 80045f4:	2b00      	cmp	r3, #0
 80045f6:	d1e9      	bne.n	80045cc <HAL_RCC_OscConfig+0x25c>
 80045f8:	687b      	ldr	r3, [r7, #4]
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	f003 0304 	and.w	r3, r3, #4
 8004600:	2b00      	cmp	r3, #0
 8004602:	f000 8097 	beq.w	8004734 <HAL_RCC_OscConfig+0x3c4>
 8004606:	2300      	movs	r3, #0
 8004608:	75fb      	strb	r3, [r7, #23]
 800460a:	4b83      	ldr	r3, [pc, #524]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 800460c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800460e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004612:	2b00      	cmp	r3, #0
 8004614:	d10f      	bne.n	8004636 <HAL_RCC_OscConfig+0x2c6>
 8004616:	2300      	movs	r3, #0
 8004618:	60fb      	str	r3, [r7, #12]
 800461a:	4b7f      	ldr	r3, [pc, #508]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 800461c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800461e:	4a7e      	ldr	r2, [pc, #504]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 8004620:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004624:	6413      	str	r3, [r2, #64]	; 0x40
 8004626:	4b7c      	ldr	r3, [pc, #496]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 8004628:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800462a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800462e:	60fb      	str	r3, [r7, #12]
 8004630:	68fb      	ldr	r3, [r7, #12]
 8004632:	2301      	movs	r3, #1
 8004634:	75fb      	strb	r3, [r7, #23]
 8004636:	4b79      	ldr	r3, [pc, #484]	; (800481c <HAL_RCC_OscConfig+0x4ac>)
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800463e:	2b00      	cmp	r3, #0
 8004640:	d118      	bne.n	8004674 <HAL_RCC_OscConfig+0x304>
 8004642:	4b76      	ldr	r3, [pc, #472]	; (800481c <HAL_RCC_OscConfig+0x4ac>)
 8004644:	681b      	ldr	r3, [r3, #0]
 8004646:	4a75      	ldr	r2, [pc, #468]	; (800481c <HAL_RCC_OscConfig+0x4ac>)
 8004648:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800464c:	6013      	str	r3, [r2, #0]
 800464e:	f7fe fc77 	bl	8002f40 <HAL_GetTick>
 8004652:	6138      	str	r0, [r7, #16]
 8004654:	e008      	b.n	8004668 <HAL_RCC_OscConfig+0x2f8>
 8004656:	f7fe fc73 	bl	8002f40 <HAL_GetTick>
 800465a:	4602      	mov	r2, r0
 800465c:	693b      	ldr	r3, [r7, #16]
 800465e:	1ad3      	subs	r3, r2, r3
 8004660:	2b02      	cmp	r3, #2
 8004662:	d901      	bls.n	8004668 <HAL_RCC_OscConfig+0x2f8>
 8004664:	2303      	movs	r3, #3
 8004666:	e0d3      	b.n	8004810 <HAL_RCC_OscConfig+0x4a0>
 8004668:	4b6c      	ldr	r3, [pc, #432]	; (800481c <HAL_RCC_OscConfig+0x4ac>)
 800466a:	681b      	ldr	r3, [r3, #0]
 800466c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004670:	2b00      	cmp	r3, #0
 8004672:	d0f0      	beq.n	8004656 <HAL_RCC_OscConfig+0x2e6>
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	689b      	ldr	r3, [r3, #8]
 8004678:	2b01      	cmp	r3, #1
 800467a:	d106      	bne.n	800468a <HAL_RCC_OscConfig+0x31a>
 800467c:	4b66      	ldr	r3, [pc, #408]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 800467e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004680:	4a65      	ldr	r2, [pc, #404]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 8004682:	f043 0301 	orr.w	r3, r3, #1
 8004686:	6713      	str	r3, [r2, #112]	; 0x70
 8004688:	e01c      	b.n	80046c4 <HAL_RCC_OscConfig+0x354>
 800468a:	687b      	ldr	r3, [r7, #4]
 800468c:	689b      	ldr	r3, [r3, #8]
 800468e:	2b05      	cmp	r3, #5
 8004690:	d10c      	bne.n	80046ac <HAL_RCC_OscConfig+0x33c>
 8004692:	4b61      	ldr	r3, [pc, #388]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 8004694:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004696:	4a60      	ldr	r2, [pc, #384]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 8004698:	f043 0304 	orr.w	r3, r3, #4
 800469c:	6713      	str	r3, [r2, #112]	; 0x70
 800469e:	4b5e      	ldr	r3, [pc, #376]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 80046a0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80046a2:	4a5d      	ldr	r2, [pc, #372]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 80046a4:	f043 0301 	orr.w	r3, r3, #1
 80046a8:	6713      	str	r3, [r2, #112]	; 0x70
 80046aa:	e00b      	b.n	80046c4 <HAL_RCC_OscConfig+0x354>
 80046ac:	4b5a      	ldr	r3, [pc, #360]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 80046ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80046b0:	4a59      	ldr	r2, [pc, #356]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 80046b2:	f023 0301 	bic.w	r3, r3, #1
 80046b6:	6713      	str	r3, [r2, #112]	; 0x70
 80046b8:	4b57      	ldr	r3, [pc, #348]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 80046ba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80046bc:	4a56      	ldr	r2, [pc, #344]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 80046be:	f023 0304 	bic.w	r3, r3, #4
 80046c2:	6713      	str	r3, [r2, #112]	; 0x70
 80046c4:	687b      	ldr	r3, [r7, #4]
 80046c6:	689b      	ldr	r3, [r3, #8]
 80046c8:	2b00      	cmp	r3, #0
 80046ca:	d015      	beq.n	80046f8 <HAL_RCC_OscConfig+0x388>
 80046cc:	f7fe fc38 	bl	8002f40 <HAL_GetTick>
 80046d0:	6138      	str	r0, [r7, #16]
 80046d2:	e00a      	b.n	80046ea <HAL_RCC_OscConfig+0x37a>
 80046d4:	f7fe fc34 	bl	8002f40 <HAL_GetTick>
 80046d8:	4602      	mov	r2, r0
 80046da:	693b      	ldr	r3, [r7, #16]
 80046dc:	1ad3      	subs	r3, r2, r3
 80046de:	f241 3288 	movw	r2, #5000	; 0x1388
 80046e2:	4293      	cmp	r3, r2
 80046e4:	d901      	bls.n	80046ea <HAL_RCC_OscConfig+0x37a>
 80046e6:	2303      	movs	r3, #3
 80046e8:	e092      	b.n	8004810 <HAL_RCC_OscConfig+0x4a0>
 80046ea:	4b4b      	ldr	r3, [pc, #300]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 80046ec:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80046ee:	f003 0302 	and.w	r3, r3, #2
 80046f2:	2b00      	cmp	r3, #0
 80046f4:	d0ee      	beq.n	80046d4 <HAL_RCC_OscConfig+0x364>
 80046f6:	e014      	b.n	8004722 <HAL_RCC_OscConfig+0x3b2>
 80046f8:	f7fe fc22 	bl	8002f40 <HAL_GetTick>
 80046fc:	6138      	str	r0, [r7, #16]
 80046fe:	e00a      	b.n	8004716 <HAL_RCC_OscConfig+0x3a6>
 8004700:	f7fe fc1e 	bl	8002f40 <HAL_GetTick>
 8004704:	4602      	mov	r2, r0
 8004706:	693b      	ldr	r3, [r7, #16]
 8004708:	1ad3      	subs	r3, r2, r3
 800470a:	f241 3288 	movw	r2, #5000	; 0x1388
 800470e:	4293      	cmp	r3, r2
 8004710:	d901      	bls.n	8004716 <HAL_RCC_OscConfig+0x3a6>
 8004712:	2303      	movs	r3, #3
 8004714:	e07c      	b.n	8004810 <HAL_RCC_OscConfig+0x4a0>
 8004716:	4b40      	ldr	r3, [pc, #256]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 8004718:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800471a:	f003 0302 	and.w	r3, r3, #2
 800471e:	2b00      	cmp	r3, #0
 8004720:	d1ee      	bne.n	8004700 <HAL_RCC_OscConfig+0x390>
 8004722:	7dfb      	ldrb	r3, [r7, #23]
 8004724:	2b01      	cmp	r3, #1
 8004726:	d105      	bne.n	8004734 <HAL_RCC_OscConfig+0x3c4>
 8004728:	4b3b      	ldr	r3, [pc, #236]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 800472a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800472c:	4a3a      	ldr	r2, [pc, #232]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 800472e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004732:	6413      	str	r3, [r2, #64]	; 0x40
 8004734:	687b      	ldr	r3, [r7, #4]
 8004736:	699b      	ldr	r3, [r3, #24]
 8004738:	2b00      	cmp	r3, #0
 800473a:	d068      	beq.n	800480e <HAL_RCC_OscConfig+0x49e>
 800473c:	4b36      	ldr	r3, [pc, #216]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 800473e:	689b      	ldr	r3, [r3, #8]
 8004740:	f003 030c 	and.w	r3, r3, #12
 8004744:	2b08      	cmp	r3, #8
 8004746:	d060      	beq.n	800480a <HAL_RCC_OscConfig+0x49a>
 8004748:	687b      	ldr	r3, [r7, #4]
 800474a:	699b      	ldr	r3, [r3, #24]
 800474c:	2b02      	cmp	r3, #2
 800474e:	d145      	bne.n	80047dc <HAL_RCC_OscConfig+0x46c>
 8004750:	4b33      	ldr	r3, [pc, #204]	; (8004820 <HAL_RCC_OscConfig+0x4b0>)
 8004752:	2200      	movs	r2, #0
 8004754:	601a      	str	r2, [r3, #0]
 8004756:	f7fe fbf3 	bl	8002f40 <HAL_GetTick>
 800475a:	6138      	str	r0, [r7, #16]
 800475c:	e008      	b.n	8004770 <HAL_RCC_OscConfig+0x400>
 800475e:	f7fe fbef 	bl	8002f40 <HAL_GetTick>
 8004762:	4602      	mov	r2, r0
 8004764:	693b      	ldr	r3, [r7, #16]
 8004766:	1ad3      	subs	r3, r2, r3
 8004768:	2b02      	cmp	r3, #2
 800476a:	d901      	bls.n	8004770 <HAL_RCC_OscConfig+0x400>
 800476c:	2303      	movs	r3, #3
 800476e:	e04f      	b.n	8004810 <HAL_RCC_OscConfig+0x4a0>
 8004770:	4b29      	ldr	r3, [pc, #164]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 8004772:	681b      	ldr	r3, [r3, #0]
 8004774:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004778:	2b00      	cmp	r3, #0
 800477a:	d1f0      	bne.n	800475e <HAL_RCC_OscConfig+0x3ee>
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	69da      	ldr	r2, [r3, #28]
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	6a1b      	ldr	r3, [r3, #32]
 8004784:	431a      	orrs	r2, r3
 8004786:	687b      	ldr	r3, [r7, #4]
 8004788:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800478a:	019b      	lsls	r3, r3, #6
 800478c:	431a      	orrs	r2, r3
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004792:	085b      	lsrs	r3, r3, #1
 8004794:	3b01      	subs	r3, #1
 8004796:	041b      	lsls	r3, r3, #16
 8004798:	431a      	orrs	r2, r3
 800479a:	687b      	ldr	r3, [r7, #4]
 800479c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800479e:	061b      	lsls	r3, r3, #24
 80047a0:	431a      	orrs	r2, r3
 80047a2:	687b      	ldr	r3, [r7, #4]
 80047a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047a6:	071b      	lsls	r3, r3, #28
 80047a8:	491b      	ldr	r1, [pc, #108]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 80047aa:	4313      	orrs	r3, r2
 80047ac:	604b      	str	r3, [r1, #4]
 80047ae:	4b1c      	ldr	r3, [pc, #112]	; (8004820 <HAL_RCC_OscConfig+0x4b0>)
 80047b0:	2201      	movs	r2, #1
 80047b2:	601a      	str	r2, [r3, #0]
 80047b4:	f7fe fbc4 	bl	8002f40 <HAL_GetTick>
 80047b8:	6138      	str	r0, [r7, #16]
 80047ba:	e008      	b.n	80047ce <HAL_RCC_OscConfig+0x45e>
 80047bc:	f7fe fbc0 	bl	8002f40 <HAL_GetTick>
 80047c0:	4602      	mov	r2, r0
 80047c2:	693b      	ldr	r3, [r7, #16]
 80047c4:	1ad3      	subs	r3, r2, r3
 80047c6:	2b02      	cmp	r3, #2
 80047c8:	d901      	bls.n	80047ce <HAL_RCC_OscConfig+0x45e>
 80047ca:	2303      	movs	r3, #3
 80047cc:	e020      	b.n	8004810 <HAL_RCC_OscConfig+0x4a0>
 80047ce:	4b12      	ldr	r3, [pc, #72]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 80047d0:	681b      	ldr	r3, [r3, #0]
 80047d2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80047d6:	2b00      	cmp	r3, #0
 80047d8:	d0f0      	beq.n	80047bc <HAL_RCC_OscConfig+0x44c>
 80047da:	e018      	b.n	800480e <HAL_RCC_OscConfig+0x49e>
 80047dc:	4b10      	ldr	r3, [pc, #64]	; (8004820 <HAL_RCC_OscConfig+0x4b0>)
 80047de:	2200      	movs	r2, #0
 80047e0:	601a      	str	r2, [r3, #0]
 80047e2:	f7fe fbad 	bl	8002f40 <HAL_GetTick>
 80047e6:	6138      	str	r0, [r7, #16]
 80047e8:	e008      	b.n	80047fc <HAL_RCC_OscConfig+0x48c>
 80047ea:	f7fe fba9 	bl	8002f40 <HAL_GetTick>
 80047ee:	4602      	mov	r2, r0
 80047f0:	693b      	ldr	r3, [r7, #16]
 80047f2:	1ad3      	subs	r3, r2, r3
 80047f4:	2b02      	cmp	r3, #2
 80047f6:	d901      	bls.n	80047fc <HAL_RCC_OscConfig+0x48c>
 80047f8:	2303      	movs	r3, #3
 80047fa:	e009      	b.n	8004810 <HAL_RCC_OscConfig+0x4a0>
 80047fc:	4b06      	ldr	r3, [pc, #24]	; (8004818 <HAL_RCC_OscConfig+0x4a8>)
 80047fe:	681b      	ldr	r3, [r3, #0]
 8004800:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004804:	2b00      	cmp	r3, #0
 8004806:	d1f0      	bne.n	80047ea <HAL_RCC_OscConfig+0x47a>
 8004808:	e001      	b.n	800480e <HAL_RCC_OscConfig+0x49e>
 800480a:	2301      	movs	r3, #1
 800480c:	e000      	b.n	8004810 <HAL_RCC_OscConfig+0x4a0>
 800480e:	2300      	movs	r3, #0
 8004810:	4618      	mov	r0, r3
 8004812:	3718      	adds	r7, #24
 8004814:	46bd      	mov	sp, r7
 8004816:	bd80      	pop	{r7, pc}
 8004818:	40023800 	.word	0x40023800
 800481c:	40007000 	.word	0x40007000
 8004820:	42470060 	.word	0x42470060

08004824 <HAL_TIM_Base_Init>:
 8004824:	b580      	push	{r7, lr}
 8004826:	b082      	sub	sp, #8
 8004828:	af00      	add	r7, sp, #0
 800482a:	6078      	str	r0, [r7, #4]
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	2b00      	cmp	r3, #0
 8004830:	d101      	bne.n	8004836 <HAL_TIM_Base_Init+0x12>
 8004832:	2301      	movs	r3, #1
 8004834:	e01d      	b.n	8004872 <HAL_TIM_Base_Init+0x4e>
 8004836:	687b      	ldr	r3, [r7, #4]
 8004838:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800483c:	b2db      	uxtb	r3, r3
 800483e:	2b00      	cmp	r3, #0
 8004840:	d106      	bne.n	8004850 <HAL_TIM_Base_Init+0x2c>
 8004842:	687b      	ldr	r3, [r7, #4]
 8004844:	2200      	movs	r2, #0
 8004846:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800484a:	6878      	ldr	r0, [r7, #4]
 800484c:	f7fe f9b4 	bl	8002bb8 <HAL_TIM_Base_MspInit>
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	2202      	movs	r2, #2
 8004854:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004858:	687b      	ldr	r3, [r7, #4]
 800485a:	681a      	ldr	r2, [r3, #0]
 800485c:	687b      	ldr	r3, [r7, #4]
 800485e:	3304      	adds	r3, #4
 8004860:	4619      	mov	r1, r3
 8004862:	4610      	mov	r0, r2
 8004864:	f000 fa64 	bl	8004d30 <TIM_Base_SetConfig>
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	2201      	movs	r2, #1
 800486c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004870:	2300      	movs	r3, #0
 8004872:	4618      	mov	r0, r3
 8004874:	3708      	adds	r7, #8
 8004876:	46bd      	mov	sp, r7
 8004878:	bd80      	pop	{r7, pc}

0800487a <HAL_TIM_Base_Start>:
 800487a:	b480      	push	{r7}
 800487c:	b085      	sub	sp, #20
 800487e:	af00      	add	r7, sp, #0
 8004880:	6078      	str	r0, [r7, #4]
 8004882:	687b      	ldr	r3, [r7, #4]
 8004884:	2202      	movs	r2, #2
 8004886:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	681b      	ldr	r3, [r3, #0]
 800488e:	689b      	ldr	r3, [r3, #8]
 8004890:	f003 0307 	and.w	r3, r3, #7
 8004894:	60fb      	str	r3, [r7, #12]
 8004896:	68fb      	ldr	r3, [r7, #12]
 8004898:	2b06      	cmp	r3, #6
 800489a:	d007      	beq.n	80048ac <HAL_TIM_Base_Start+0x32>
 800489c:	687b      	ldr	r3, [r7, #4]
 800489e:	681b      	ldr	r3, [r3, #0]
 80048a0:	681a      	ldr	r2, [r3, #0]
 80048a2:	687b      	ldr	r3, [r7, #4]
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	f042 0201 	orr.w	r2, r2, #1
 80048aa:	601a      	str	r2, [r3, #0]
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	2201      	movs	r2, #1
 80048b0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80048b4:	2300      	movs	r3, #0
 80048b6:	4618      	mov	r0, r3
 80048b8:	3714      	adds	r7, #20
 80048ba:	46bd      	mov	sp, r7
 80048bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048c0:	4770      	bx	lr

080048c2 <HAL_TIM_Base_Stop>:
 80048c2:	b480      	push	{r7}
 80048c4:	b083      	sub	sp, #12
 80048c6:	af00      	add	r7, sp, #0
 80048c8:	6078      	str	r0, [r7, #4]
 80048ca:	687b      	ldr	r3, [r7, #4]
 80048cc:	2202      	movs	r2, #2
 80048ce:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80048d2:	687b      	ldr	r3, [r7, #4]
 80048d4:	681b      	ldr	r3, [r3, #0]
 80048d6:	6a1a      	ldr	r2, [r3, #32]
 80048d8:	f241 1311 	movw	r3, #4369	; 0x1111
 80048dc:	4013      	ands	r3, r2
 80048de:	2b00      	cmp	r3, #0
 80048e0:	d10f      	bne.n	8004902 <HAL_TIM_Base_Stop+0x40>
 80048e2:	687b      	ldr	r3, [r7, #4]
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	6a1a      	ldr	r2, [r3, #32]
 80048e8:	f240 4344 	movw	r3, #1092	; 0x444
 80048ec:	4013      	ands	r3, r2
 80048ee:	2b00      	cmp	r3, #0
 80048f0:	d107      	bne.n	8004902 <HAL_TIM_Base_Stop+0x40>
 80048f2:	687b      	ldr	r3, [r7, #4]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	681a      	ldr	r2, [r3, #0]
 80048f8:	687b      	ldr	r3, [r7, #4]
 80048fa:	681b      	ldr	r3, [r3, #0]
 80048fc:	f022 0201 	bic.w	r2, r2, #1
 8004900:	601a      	str	r2, [r3, #0]
 8004902:	687b      	ldr	r3, [r7, #4]
 8004904:	2201      	movs	r2, #1
 8004906:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800490a:	2300      	movs	r3, #0
 800490c:	4618      	mov	r0, r3
 800490e:	370c      	adds	r7, #12
 8004910:	46bd      	mov	sp, r7
 8004912:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004916:	4770      	bx	lr

08004918 <HAL_TIM_Base_Start_IT>:
 8004918:	b480      	push	{r7}
 800491a:	b085      	sub	sp, #20
 800491c:	af00      	add	r7, sp, #0
 800491e:	6078      	str	r0, [r7, #4]
 8004920:	687b      	ldr	r3, [r7, #4]
 8004922:	681b      	ldr	r3, [r3, #0]
 8004924:	68da      	ldr	r2, [r3, #12]
 8004926:	687b      	ldr	r3, [r7, #4]
 8004928:	681b      	ldr	r3, [r3, #0]
 800492a:	f042 0201 	orr.w	r2, r2, #1
 800492e:	60da      	str	r2, [r3, #12]
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	681b      	ldr	r3, [r3, #0]
 8004934:	689b      	ldr	r3, [r3, #8]
 8004936:	f003 0307 	and.w	r3, r3, #7
 800493a:	60fb      	str	r3, [r7, #12]
 800493c:	68fb      	ldr	r3, [r7, #12]
 800493e:	2b06      	cmp	r3, #6
 8004940:	d007      	beq.n	8004952 <HAL_TIM_Base_Start_IT+0x3a>
 8004942:	687b      	ldr	r3, [r7, #4]
 8004944:	681b      	ldr	r3, [r3, #0]
 8004946:	681a      	ldr	r2, [r3, #0]
 8004948:	687b      	ldr	r3, [r7, #4]
 800494a:	681b      	ldr	r3, [r3, #0]
 800494c:	f042 0201 	orr.w	r2, r2, #1
 8004950:	601a      	str	r2, [r3, #0]
 8004952:	2300      	movs	r3, #0
 8004954:	4618      	mov	r0, r3
 8004956:	3714      	adds	r7, #20
 8004958:	46bd      	mov	sp, r7
 800495a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800495e:	4770      	bx	lr

08004960 <HAL_TIM_IRQHandler>:
 8004960:	b580      	push	{r7, lr}
 8004962:	b082      	sub	sp, #8
 8004964:	af00      	add	r7, sp, #0
 8004966:	6078      	str	r0, [r7, #4]
 8004968:	687b      	ldr	r3, [r7, #4]
 800496a:	681b      	ldr	r3, [r3, #0]
 800496c:	691b      	ldr	r3, [r3, #16]
 800496e:	f003 0302 	and.w	r3, r3, #2
 8004972:	2b02      	cmp	r3, #2
 8004974:	d122      	bne.n	80049bc <HAL_TIM_IRQHandler+0x5c>
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	681b      	ldr	r3, [r3, #0]
 800497a:	68db      	ldr	r3, [r3, #12]
 800497c:	f003 0302 	and.w	r3, r3, #2
 8004980:	2b02      	cmp	r3, #2
 8004982:	d11b      	bne.n	80049bc <HAL_TIM_IRQHandler+0x5c>
 8004984:	687b      	ldr	r3, [r7, #4]
 8004986:	681b      	ldr	r3, [r3, #0]
 8004988:	f06f 0202 	mvn.w	r2, #2
 800498c:	611a      	str	r2, [r3, #16]
 800498e:	687b      	ldr	r3, [r7, #4]
 8004990:	2201      	movs	r2, #1
 8004992:	771a      	strb	r2, [r3, #28]
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	681b      	ldr	r3, [r3, #0]
 8004998:	699b      	ldr	r3, [r3, #24]
 800499a:	f003 0303 	and.w	r3, r3, #3
 800499e:	2b00      	cmp	r3, #0
 80049a0:	d003      	beq.n	80049aa <HAL_TIM_IRQHandler+0x4a>
 80049a2:	6878      	ldr	r0, [r7, #4]
 80049a4:	f000 f9a5 	bl	8004cf2 <HAL_TIM_IC_CaptureCallback>
 80049a8:	e005      	b.n	80049b6 <HAL_TIM_IRQHandler+0x56>
 80049aa:	6878      	ldr	r0, [r7, #4]
 80049ac:	f000 f997 	bl	8004cde <HAL_TIM_OC_DelayElapsedCallback>
 80049b0:	6878      	ldr	r0, [r7, #4]
 80049b2:	f000 f9a8 	bl	8004d06 <HAL_TIM_PWM_PulseFinishedCallback>
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	2200      	movs	r2, #0
 80049ba:	771a      	strb	r2, [r3, #28]
 80049bc:	687b      	ldr	r3, [r7, #4]
 80049be:	681b      	ldr	r3, [r3, #0]
 80049c0:	691b      	ldr	r3, [r3, #16]
 80049c2:	f003 0304 	and.w	r3, r3, #4
 80049c6:	2b04      	cmp	r3, #4
 80049c8:	d122      	bne.n	8004a10 <HAL_TIM_IRQHandler+0xb0>
 80049ca:	687b      	ldr	r3, [r7, #4]
 80049cc:	681b      	ldr	r3, [r3, #0]
 80049ce:	68db      	ldr	r3, [r3, #12]
 80049d0:	f003 0304 	and.w	r3, r3, #4
 80049d4:	2b04      	cmp	r3, #4
 80049d6:	d11b      	bne.n	8004a10 <HAL_TIM_IRQHandler+0xb0>
 80049d8:	687b      	ldr	r3, [r7, #4]
 80049da:	681b      	ldr	r3, [r3, #0]
 80049dc:	f06f 0204 	mvn.w	r2, #4
 80049e0:	611a      	str	r2, [r3, #16]
 80049e2:	687b      	ldr	r3, [r7, #4]
 80049e4:	2202      	movs	r2, #2
 80049e6:	771a      	strb	r2, [r3, #28]
 80049e8:	687b      	ldr	r3, [r7, #4]
 80049ea:	681b      	ldr	r3, [r3, #0]
 80049ec:	699b      	ldr	r3, [r3, #24]
 80049ee:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80049f2:	2b00      	cmp	r3, #0
 80049f4:	d003      	beq.n	80049fe <HAL_TIM_IRQHandler+0x9e>
 80049f6:	6878      	ldr	r0, [r7, #4]
 80049f8:	f000 f97b 	bl	8004cf2 <HAL_TIM_IC_CaptureCallback>
 80049fc:	e005      	b.n	8004a0a <HAL_TIM_IRQHandler+0xaa>
 80049fe:	6878      	ldr	r0, [r7, #4]
 8004a00:	f000 f96d 	bl	8004cde <HAL_TIM_OC_DelayElapsedCallback>
 8004a04:	6878      	ldr	r0, [r7, #4]
 8004a06:	f000 f97e 	bl	8004d06 <HAL_TIM_PWM_PulseFinishedCallback>
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	2200      	movs	r2, #0
 8004a0e:	771a      	strb	r2, [r3, #28]
 8004a10:	687b      	ldr	r3, [r7, #4]
 8004a12:	681b      	ldr	r3, [r3, #0]
 8004a14:	691b      	ldr	r3, [r3, #16]
 8004a16:	f003 0308 	and.w	r3, r3, #8
 8004a1a:	2b08      	cmp	r3, #8
 8004a1c:	d122      	bne.n	8004a64 <HAL_TIM_IRQHandler+0x104>
 8004a1e:	687b      	ldr	r3, [r7, #4]
 8004a20:	681b      	ldr	r3, [r3, #0]
 8004a22:	68db      	ldr	r3, [r3, #12]
 8004a24:	f003 0308 	and.w	r3, r3, #8
 8004a28:	2b08      	cmp	r3, #8
 8004a2a:	d11b      	bne.n	8004a64 <HAL_TIM_IRQHandler+0x104>
 8004a2c:	687b      	ldr	r3, [r7, #4]
 8004a2e:	681b      	ldr	r3, [r3, #0]
 8004a30:	f06f 0208 	mvn.w	r2, #8
 8004a34:	611a      	str	r2, [r3, #16]
 8004a36:	687b      	ldr	r3, [r7, #4]
 8004a38:	2204      	movs	r2, #4
 8004a3a:	771a      	strb	r2, [r3, #28]
 8004a3c:	687b      	ldr	r3, [r7, #4]
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	69db      	ldr	r3, [r3, #28]
 8004a42:	f003 0303 	and.w	r3, r3, #3
 8004a46:	2b00      	cmp	r3, #0
 8004a48:	d003      	beq.n	8004a52 <HAL_TIM_IRQHandler+0xf2>
 8004a4a:	6878      	ldr	r0, [r7, #4]
 8004a4c:	f000 f951 	bl	8004cf2 <HAL_TIM_IC_CaptureCallback>
 8004a50:	e005      	b.n	8004a5e <HAL_TIM_IRQHandler+0xfe>
 8004a52:	6878      	ldr	r0, [r7, #4]
 8004a54:	f000 f943 	bl	8004cde <HAL_TIM_OC_DelayElapsedCallback>
 8004a58:	6878      	ldr	r0, [r7, #4]
 8004a5a:	f000 f954 	bl	8004d06 <HAL_TIM_PWM_PulseFinishedCallback>
 8004a5e:	687b      	ldr	r3, [r7, #4]
 8004a60:	2200      	movs	r2, #0
 8004a62:	771a      	strb	r2, [r3, #28]
 8004a64:	687b      	ldr	r3, [r7, #4]
 8004a66:	681b      	ldr	r3, [r3, #0]
 8004a68:	691b      	ldr	r3, [r3, #16]
 8004a6a:	f003 0310 	and.w	r3, r3, #16
 8004a6e:	2b10      	cmp	r3, #16
 8004a70:	d122      	bne.n	8004ab8 <HAL_TIM_IRQHandler+0x158>
 8004a72:	687b      	ldr	r3, [r7, #4]
 8004a74:	681b      	ldr	r3, [r3, #0]
 8004a76:	68db      	ldr	r3, [r3, #12]
 8004a78:	f003 0310 	and.w	r3, r3, #16
 8004a7c:	2b10      	cmp	r3, #16
 8004a7e:	d11b      	bne.n	8004ab8 <HAL_TIM_IRQHandler+0x158>
 8004a80:	687b      	ldr	r3, [r7, #4]
 8004a82:	681b      	ldr	r3, [r3, #0]
 8004a84:	f06f 0210 	mvn.w	r2, #16
 8004a88:	611a      	str	r2, [r3, #16]
 8004a8a:	687b      	ldr	r3, [r7, #4]
 8004a8c:	2208      	movs	r2, #8
 8004a8e:	771a      	strb	r2, [r3, #28]
 8004a90:	687b      	ldr	r3, [r7, #4]
 8004a92:	681b      	ldr	r3, [r3, #0]
 8004a94:	69db      	ldr	r3, [r3, #28]
 8004a96:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004a9a:	2b00      	cmp	r3, #0
 8004a9c:	d003      	beq.n	8004aa6 <HAL_TIM_IRQHandler+0x146>
 8004a9e:	6878      	ldr	r0, [r7, #4]
 8004aa0:	f000 f927 	bl	8004cf2 <HAL_TIM_IC_CaptureCallback>
 8004aa4:	e005      	b.n	8004ab2 <HAL_TIM_IRQHandler+0x152>
 8004aa6:	6878      	ldr	r0, [r7, #4]
 8004aa8:	f000 f919 	bl	8004cde <HAL_TIM_OC_DelayElapsedCallback>
 8004aac:	6878      	ldr	r0, [r7, #4]
 8004aae:	f000 f92a 	bl	8004d06 <HAL_TIM_PWM_PulseFinishedCallback>
 8004ab2:	687b      	ldr	r3, [r7, #4]
 8004ab4:	2200      	movs	r2, #0
 8004ab6:	771a      	strb	r2, [r3, #28]
 8004ab8:	687b      	ldr	r3, [r7, #4]
 8004aba:	681b      	ldr	r3, [r3, #0]
 8004abc:	691b      	ldr	r3, [r3, #16]
 8004abe:	f003 0301 	and.w	r3, r3, #1
 8004ac2:	2b01      	cmp	r3, #1
 8004ac4:	d10e      	bne.n	8004ae4 <HAL_TIM_IRQHandler+0x184>
 8004ac6:	687b      	ldr	r3, [r7, #4]
 8004ac8:	681b      	ldr	r3, [r3, #0]
 8004aca:	68db      	ldr	r3, [r3, #12]
 8004acc:	f003 0301 	and.w	r3, r3, #1
 8004ad0:	2b01      	cmp	r3, #1
 8004ad2:	d107      	bne.n	8004ae4 <HAL_TIM_IRQHandler+0x184>
 8004ad4:	687b      	ldr	r3, [r7, #4]
 8004ad6:	681b      	ldr	r3, [r3, #0]
 8004ad8:	f06f 0201 	mvn.w	r2, #1
 8004adc:	611a      	str	r2, [r3, #16]
 8004ade:	6878      	ldr	r0, [r7, #4]
 8004ae0:	f7fd ff6e 	bl	80029c0 <HAL_TIM_PeriodElapsedCallback>
 8004ae4:	687b      	ldr	r3, [r7, #4]
 8004ae6:	681b      	ldr	r3, [r3, #0]
 8004ae8:	691b      	ldr	r3, [r3, #16]
 8004aea:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004aee:	2b80      	cmp	r3, #128	; 0x80
 8004af0:	d10e      	bne.n	8004b10 <HAL_TIM_IRQHandler+0x1b0>
 8004af2:	687b      	ldr	r3, [r7, #4]
 8004af4:	681b      	ldr	r3, [r3, #0]
 8004af6:	68db      	ldr	r3, [r3, #12]
 8004af8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004afc:	2b80      	cmp	r3, #128	; 0x80
 8004afe:	d107      	bne.n	8004b10 <HAL_TIM_IRQHandler+0x1b0>
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	681b      	ldr	r3, [r3, #0]
 8004b04:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8004b08:	611a      	str	r2, [r3, #16]
 8004b0a:	6878      	ldr	r0, [r7, #4]
 8004b0c:	f000 fad0 	bl	80050b0 <HAL_TIMEx_BreakCallback>
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	681b      	ldr	r3, [r3, #0]
 8004b14:	691b      	ldr	r3, [r3, #16]
 8004b16:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004b1a:	2b40      	cmp	r3, #64	; 0x40
 8004b1c:	d10e      	bne.n	8004b3c <HAL_TIM_IRQHandler+0x1dc>
 8004b1e:	687b      	ldr	r3, [r7, #4]
 8004b20:	681b      	ldr	r3, [r3, #0]
 8004b22:	68db      	ldr	r3, [r3, #12]
 8004b24:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004b28:	2b40      	cmp	r3, #64	; 0x40
 8004b2a:	d107      	bne.n	8004b3c <HAL_TIM_IRQHandler+0x1dc>
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	681b      	ldr	r3, [r3, #0]
 8004b30:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8004b34:	611a      	str	r2, [r3, #16]
 8004b36:	6878      	ldr	r0, [r7, #4]
 8004b38:	f000 f8ef 	bl	8004d1a <HAL_TIM_TriggerCallback>
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	681b      	ldr	r3, [r3, #0]
 8004b40:	691b      	ldr	r3, [r3, #16]
 8004b42:	f003 0320 	and.w	r3, r3, #32
 8004b46:	2b20      	cmp	r3, #32
 8004b48:	d10e      	bne.n	8004b68 <HAL_TIM_IRQHandler+0x208>
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	681b      	ldr	r3, [r3, #0]
 8004b4e:	68db      	ldr	r3, [r3, #12]
 8004b50:	f003 0320 	and.w	r3, r3, #32
 8004b54:	2b20      	cmp	r3, #32
 8004b56:	d107      	bne.n	8004b68 <HAL_TIM_IRQHandler+0x208>
 8004b58:	687b      	ldr	r3, [r7, #4]
 8004b5a:	681b      	ldr	r3, [r3, #0]
 8004b5c:	f06f 0220 	mvn.w	r2, #32
 8004b60:	611a      	str	r2, [r3, #16]
 8004b62:	6878      	ldr	r0, [r7, #4]
 8004b64:	f000 fa9a 	bl	800509c <HAL_TIMEx_CommutCallback>
 8004b68:	bf00      	nop
 8004b6a:	3708      	adds	r7, #8
 8004b6c:	46bd      	mov	sp, r7
 8004b6e:	bd80      	pop	{r7, pc}

08004b70 <HAL_TIM_ConfigClockSource>:
 8004b70:	b580      	push	{r7, lr}
 8004b72:	b084      	sub	sp, #16
 8004b74:	af00      	add	r7, sp, #0
 8004b76:	6078      	str	r0, [r7, #4]
 8004b78:	6039      	str	r1, [r7, #0]
 8004b7a:	687b      	ldr	r3, [r7, #4]
 8004b7c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004b80:	2b01      	cmp	r3, #1
 8004b82:	d101      	bne.n	8004b88 <HAL_TIM_ConfigClockSource+0x18>
 8004b84:	2302      	movs	r3, #2
 8004b86:	e0a6      	b.n	8004cd6 <HAL_TIM_ConfigClockSource+0x166>
 8004b88:	687b      	ldr	r3, [r7, #4]
 8004b8a:	2201      	movs	r2, #1
 8004b8c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004b90:	687b      	ldr	r3, [r7, #4]
 8004b92:	2202      	movs	r2, #2
 8004b94:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004b98:	687b      	ldr	r3, [r7, #4]
 8004b9a:	681b      	ldr	r3, [r3, #0]
 8004b9c:	689b      	ldr	r3, [r3, #8]
 8004b9e:	60fb      	str	r3, [r7, #12]
 8004ba0:	68fb      	ldr	r3, [r7, #12]
 8004ba2:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8004ba6:	60fb      	str	r3, [r7, #12]
 8004ba8:	68fb      	ldr	r3, [r7, #12]
 8004baa:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8004bae:	60fb      	str	r3, [r7, #12]
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	681b      	ldr	r3, [r3, #0]
 8004bb4:	68fa      	ldr	r2, [r7, #12]
 8004bb6:	609a      	str	r2, [r3, #8]
 8004bb8:	683b      	ldr	r3, [r7, #0]
 8004bba:	681b      	ldr	r3, [r3, #0]
 8004bbc:	2b40      	cmp	r3, #64	; 0x40
 8004bbe:	d067      	beq.n	8004c90 <HAL_TIM_ConfigClockSource+0x120>
 8004bc0:	2b40      	cmp	r3, #64	; 0x40
 8004bc2:	d80b      	bhi.n	8004bdc <HAL_TIM_ConfigClockSource+0x6c>
 8004bc4:	2b10      	cmp	r3, #16
 8004bc6:	d073      	beq.n	8004cb0 <HAL_TIM_ConfigClockSource+0x140>
 8004bc8:	2b10      	cmp	r3, #16
 8004bca:	d802      	bhi.n	8004bd2 <HAL_TIM_ConfigClockSource+0x62>
 8004bcc:	2b00      	cmp	r3, #0
 8004bce:	d06f      	beq.n	8004cb0 <HAL_TIM_ConfigClockSource+0x140>
 8004bd0:	e078      	b.n	8004cc4 <HAL_TIM_ConfigClockSource+0x154>
 8004bd2:	2b20      	cmp	r3, #32
 8004bd4:	d06c      	beq.n	8004cb0 <HAL_TIM_ConfigClockSource+0x140>
 8004bd6:	2b30      	cmp	r3, #48	; 0x30
 8004bd8:	d06a      	beq.n	8004cb0 <HAL_TIM_ConfigClockSource+0x140>
 8004bda:	e073      	b.n	8004cc4 <HAL_TIM_ConfigClockSource+0x154>
 8004bdc:	2b70      	cmp	r3, #112	; 0x70
 8004bde:	d00d      	beq.n	8004bfc <HAL_TIM_ConfigClockSource+0x8c>
 8004be0:	2b70      	cmp	r3, #112	; 0x70
 8004be2:	d804      	bhi.n	8004bee <HAL_TIM_ConfigClockSource+0x7e>
 8004be4:	2b50      	cmp	r3, #80	; 0x50
 8004be6:	d033      	beq.n	8004c50 <HAL_TIM_ConfigClockSource+0xe0>
 8004be8:	2b60      	cmp	r3, #96	; 0x60
 8004bea:	d041      	beq.n	8004c70 <HAL_TIM_ConfigClockSource+0x100>
 8004bec:	e06a      	b.n	8004cc4 <HAL_TIM_ConfigClockSource+0x154>
 8004bee:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004bf2:	d066      	beq.n	8004cc2 <HAL_TIM_ConfigClockSource+0x152>
 8004bf4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004bf8:	d017      	beq.n	8004c2a <HAL_TIM_ConfigClockSource+0xba>
 8004bfa:	e063      	b.n	8004cc4 <HAL_TIM_ConfigClockSource+0x154>
 8004bfc:	687b      	ldr	r3, [r7, #4]
 8004bfe:	6818      	ldr	r0, [r3, #0]
 8004c00:	683b      	ldr	r3, [r7, #0]
 8004c02:	6899      	ldr	r1, [r3, #8]
 8004c04:	683b      	ldr	r3, [r7, #0]
 8004c06:	685a      	ldr	r2, [r3, #4]
 8004c08:	683b      	ldr	r3, [r7, #0]
 8004c0a:	68db      	ldr	r3, [r3, #12]
 8004c0c:	f000 f9aa 	bl	8004f64 <TIM_ETR_SetConfig>
 8004c10:	687b      	ldr	r3, [r7, #4]
 8004c12:	681b      	ldr	r3, [r3, #0]
 8004c14:	689b      	ldr	r3, [r3, #8]
 8004c16:	60fb      	str	r3, [r7, #12]
 8004c18:	68fb      	ldr	r3, [r7, #12]
 8004c1a:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8004c1e:	60fb      	str	r3, [r7, #12]
 8004c20:	687b      	ldr	r3, [r7, #4]
 8004c22:	681b      	ldr	r3, [r3, #0]
 8004c24:	68fa      	ldr	r2, [r7, #12]
 8004c26:	609a      	str	r2, [r3, #8]
 8004c28:	e04c      	b.n	8004cc4 <HAL_TIM_ConfigClockSource+0x154>
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	6818      	ldr	r0, [r3, #0]
 8004c2e:	683b      	ldr	r3, [r7, #0]
 8004c30:	6899      	ldr	r1, [r3, #8]
 8004c32:	683b      	ldr	r3, [r7, #0]
 8004c34:	685a      	ldr	r2, [r3, #4]
 8004c36:	683b      	ldr	r3, [r7, #0]
 8004c38:	68db      	ldr	r3, [r3, #12]
 8004c3a:	f000 f993 	bl	8004f64 <TIM_ETR_SetConfig>
 8004c3e:	687b      	ldr	r3, [r7, #4]
 8004c40:	681b      	ldr	r3, [r3, #0]
 8004c42:	689a      	ldr	r2, [r3, #8]
 8004c44:	687b      	ldr	r3, [r7, #4]
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004c4c:	609a      	str	r2, [r3, #8]
 8004c4e:	e039      	b.n	8004cc4 <HAL_TIM_ConfigClockSource+0x154>
 8004c50:	687b      	ldr	r3, [r7, #4]
 8004c52:	6818      	ldr	r0, [r3, #0]
 8004c54:	683b      	ldr	r3, [r7, #0]
 8004c56:	6859      	ldr	r1, [r3, #4]
 8004c58:	683b      	ldr	r3, [r7, #0]
 8004c5a:	68db      	ldr	r3, [r3, #12]
 8004c5c:	461a      	mov	r2, r3
 8004c5e:	f000 f907 	bl	8004e70 <TIM_TI1_ConfigInputStage>
 8004c62:	687b      	ldr	r3, [r7, #4]
 8004c64:	681b      	ldr	r3, [r3, #0]
 8004c66:	2150      	movs	r1, #80	; 0x50
 8004c68:	4618      	mov	r0, r3
 8004c6a:	f000 f960 	bl	8004f2e <TIM_ITRx_SetConfig>
 8004c6e:	e029      	b.n	8004cc4 <HAL_TIM_ConfigClockSource+0x154>
 8004c70:	687b      	ldr	r3, [r7, #4]
 8004c72:	6818      	ldr	r0, [r3, #0]
 8004c74:	683b      	ldr	r3, [r7, #0]
 8004c76:	6859      	ldr	r1, [r3, #4]
 8004c78:	683b      	ldr	r3, [r7, #0]
 8004c7a:	68db      	ldr	r3, [r3, #12]
 8004c7c:	461a      	mov	r2, r3
 8004c7e:	f000 f926 	bl	8004ece <TIM_TI2_ConfigInputStage>
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	681b      	ldr	r3, [r3, #0]
 8004c86:	2160      	movs	r1, #96	; 0x60
 8004c88:	4618      	mov	r0, r3
 8004c8a:	f000 f950 	bl	8004f2e <TIM_ITRx_SetConfig>
 8004c8e:	e019      	b.n	8004cc4 <HAL_TIM_ConfigClockSource+0x154>
 8004c90:	687b      	ldr	r3, [r7, #4]
 8004c92:	6818      	ldr	r0, [r3, #0]
 8004c94:	683b      	ldr	r3, [r7, #0]
 8004c96:	6859      	ldr	r1, [r3, #4]
 8004c98:	683b      	ldr	r3, [r7, #0]
 8004c9a:	68db      	ldr	r3, [r3, #12]
 8004c9c:	461a      	mov	r2, r3
 8004c9e:	f000 f8e7 	bl	8004e70 <TIM_TI1_ConfigInputStage>
 8004ca2:	687b      	ldr	r3, [r7, #4]
 8004ca4:	681b      	ldr	r3, [r3, #0]
 8004ca6:	2140      	movs	r1, #64	; 0x40
 8004ca8:	4618      	mov	r0, r3
 8004caa:	f000 f940 	bl	8004f2e <TIM_ITRx_SetConfig>
 8004cae:	e009      	b.n	8004cc4 <HAL_TIM_ConfigClockSource+0x154>
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	681a      	ldr	r2, [r3, #0]
 8004cb4:	683b      	ldr	r3, [r7, #0]
 8004cb6:	681b      	ldr	r3, [r3, #0]
 8004cb8:	4619      	mov	r1, r3
 8004cba:	4610      	mov	r0, r2
 8004cbc:	f000 f937 	bl	8004f2e <TIM_ITRx_SetConfig>
 8004cc0:	e000      	b.n	8004cc4 <HAL_TIM_ConfigClockSource+0x154>
 8004cc2:	bf00      	nop
 8004cc4:	687b      	ldr	r3, [r7, #4]
 8004cc6:	2201      	movs	r2, #1
 8004cc8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004ccc:	687b      	ldr	r3, [r7, #4]
 8004cce:	2200      	movs	r2, #0
 8004cd0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004cd4:	2300      	movs	r3, #0
 8004cd6:	4618      	mov	r0, r3
 8004cd8:	3710      	adds	r7, #16
 8004cda:	46bd      	mov	sp, r7
 8004cdc:	bd80      	pop	{r7, pc}

08004cde <HAL_TIM_OC_DelayElapsedCallback>:
 8004cde:	b480      	push	{r7}
 8004ce0:	b083      	sub	sp, #12
 8004ce2:	af00      	add	r7, sp, #0
 8004ce4:	6078      	str	r0, [r7, #4]
 8004ce6:	bf00      	nop
 8004ce8:	370c      	adds	r7, #12
 8004cea:	46bd      	mov	sp, r7
 8004cec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cf0:	4770      	bx	lr

08004cf2 <HAL_TIM_IC_CaptureCallback>:
 8004cf2:	b480      	push	{r7}
 8004cf4:	b083      	sub	sp, #12
 8004cf6:	af00      	add	r7, sp, #0
 8004cf8:	6078      	str	r0, [r7, #4]
 8004cfa:	bf00      	nop
 8004cfc:	370c      	adds	r7, #12
 8004cfe:	46bd      	mov	sp, r7
 8004d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d04:	4770      	bx	lr

08004d06 <HAL_TIM_PWM_PulseFinishedCallback>:
 8004d06:	b480      	push	{r7}
 8004d08:	b083      	sub	sp, #12
 8004d0a:	af00      	add	r7, sp, #0
 8004d0c:	6078      	str	r0, [r7, #4]
 8004d0e:	bf00      	nop
 8004d10:	370c      	adds	r7, #12
 8004d12:	46bd      	mov	sp, r7
 8004d14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d18:	4770      	bx	lr

08004d1a <HAL_TIM_TriggerCallback>:
 8004d1a:	b480      	push	{r7}
 8004d1c:	b083      	sub	sp, #12
 8004d1e:	af00      	add	r7, sp, #0
 8004d20:	6078      	str	r0, [r7, #4]
 8004d22:	bf00      	nop
 8004d24:	370c      	adds	r7, #12
 8004d26:	46bd      	mov	sp, r7
 8004d28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d2c:	4770      	bx	lr
	...

08004d30 <TIM_Base_SetConfig>:
 8004d30:	b480      	push	{r7}
 8004d32:	b085      	sub	sp, #20
 8004d34:	af00      	add	r7, sp, #0
 8004d36:	6078      	str	r0, [r7, #4]
 8004d38:	6039      	str	r1, [r7, #0]
 8004d3a:	687b      	ldr	r3, [r7, #4]
 8004d3c:	681b      	ldr	r3, [r3, #0]
 8004d3e:	60fb      	str	r3, [r7, #12]
 8004d40:	687b      	ldr	r3, [r7, #4]
 8004d42:	4a40      	ldr	r2, [pc, #256]	; (8004e44 <TIM_Base_SetConfig+0x114>)
 8004d44:	4293      	cmp	r3, r2
 8004d46:	d013      	beq.n	8004d70 <TIM_Base_SetConfig+0x40>
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004d4e:	d00f      	beq.n	8004d70 <TIM_Base_SetConfig+0x40>
 8004d50:	687b      	ldr	r3, [r7, #4]
 8004d52:	4a3d      	ldr	r2, [pc, #244]	; (8004e48 <TIM_Base_SetConfig+0x118>)
 8004d54:	4293      	cmp	r3, r2
 8004d56:	d00b      	beq.n	8004d70 <TIM_Base_SetConfig+0x40>
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	4a3c      	ldr	r2, [pc, #240]	; (8004e4c <TIM_Base_SetConfig+0x11c>)
 8004d5c:	4293      	cmp	r3, r2
 8004d5e:	d007      	beq.n	8004d70 <TIM_Base_SetConfig+0x40>
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	4a3b      	ldr	r2, [pc, #236]	; (8004e50 <TIM_Base_SetConfig+0x120>)
 8004d64:	4293      	cmp	r3, r2
 8004d66:	d003      	beq.n	8004d70 <TIM_Base_SetConfig+0x40>
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	4a3a      	ldr	r2, [pc, #232]	; (8004e54 <TIM_Base_SetConfig+0x124>)
 8004d6c:	4293      	cmp	r3, r2
 8004d6e:	d108      	bne.n	8004d82 <TIM_Base_SetConfig+0x52>
 8004d70:	68fb      	ldr	r3, [r7, #12]
 8004d72:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004d76:	60fb      	str	r3, [r7, #12]
 8004d78:	683b      	ldr	r3, [r7, #0]
 8004d7a:	685b      	ldr	r3, [r3, #4]
 8004d7c:	68fa      	ldr	r2, [r7, #12]
 8004d7e:	4313      	orrs	r3, r2
 8004d80:	60fb      	str	r3, [r7, #12]
 8004d82:	687b      	ldr	r3, [r7, #4]
 8004d84:	4a2f      	ldr	r2, [pc, #188]	; (8004e44 <TIM_Base_SetConfig+0x114>)
 8004d86:	4293      	cmp	r3, r2
 8004d88:	d02b      	beq.n	8004de2 <TIM_Base_SetConfig+0xb2>
 8004d8a:	687b      	ldr	r3, [r7, #4]
 8004d8c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004d90:	d027      	beq.n	8004de2 <TIM_Base_SetConfig+0xb2>
 8004d92:	687b      	ldr	r3, [r7, #4]
 8004d94:	4a2c      	ldr	r2, [pc, #176]	; (8004e48 <TIM_Base_SetConfig+0x118>)
 8004d96:	4293      	cmp	r3, r2
 8004d98:	d023      	beq.n	8004de2 <TIM_Base_SetConfig+0xb2>
 8004d9a:	687b      	ldr	r3, [r7, #4]
 8004d9c:	4a2b      	ldr	r2, [pc, #172]	; (8004e4c <TIM_Base_SetConfig+0x11c>)
 8004d9e:	4293      	cmp	r3, r2
 8004da0:	d01f      	beq.n	8004de2 <TIM_Base_SetConfig+0xb2>
 8004da2:	687b      	ldr	r3, [r7, #4]
 8004da4:	4a2a      	ldr	r2, [pc, #168]	; (8004e50 <TIM_Base_SetConfig+0x120>)
 8004da6:	4293      	cmp	r3, r2
 8004da8:	d01b      	beq.n	8004de2 <TIM_Base_SetConfig+0xb2>
 8004daa:	687b      	ldr	r3, [r7, #4]
 8004dac:	4a29      	ldr	r2, [pc, #164]	; (8004e54 <TIM_Base_SetConfig+0x124>)
 8004dae:	4293      	cmp	r3, r2
 8004db0:	d017      	beq.n	8004de2 <TIM_Base_SetConfig+0xb2>
 8004db2:	687b      	ldr	r3, [r7, #4]
 8004db4:	4a28      	ldr	r2, [pc, #160]	; (8004e58 <TIM_Base_SetConfig+0x128>)
 8004db6:	4293      	cmp	r3, r2
 8004db8:	d013      	beq.n	8004de2 <TIM_Base_SetConfig+0xb2>
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	4a27      	ldr	r2, [pc, #156]	; (8004e5c <TIM_Base_SetConfig+0x12c>)
 8004dbe:	4293      	cmp	r3, r2
 8004dc0:	d00f      	beq.n	8004de2 <TIM_Base_SetConfig+0xb2>
 8004dc2:	687b      	ldr	r3, [r7, #4]
 8004dc4:	4a26      	ldr	r2, [pc, #152]	; (8004e60 <TIM_Base_SetConfig+0x130>)
 8004dc6:	4293      	cmp	r3, r2
 8004dc8:	d00b      	beq.n	8004de2 <TIM_Base_SetConfig+0xb2>
 8004dca:	687b      	ldr	r3, [r7, #4]
 8004dcc:	4a25      	ldr	r2, [pc, #148]	; (8004e64 <TIM_Base_SetConfig+0x134>)
 8004dce:	4293      	cmp	r3, r2
 8004dd0:	d007      	beq.n	8004de2 <TIM_Base_SetConfig+0xb2>
 8004dd2:	687b      	ldr	r3, [r7, #4]
 8004dd4:	4a24      	ldr	r2, [pc, #144]	; (8004e68 <TIM_Base_SetConfig+0x138>)
 8004dd6:	4293      	cmp	r3, r2
 8004dd8:	d003      	beq.n	8004de2 <TIM_Base_SetConfig+0xb2>
 8004dda:	687b      	ldr	r3, [r7, #4]
 8004ddc:	4a23      	ldr	r2, [pc, #140]	; (8004e6c <TIM_Base_SetConfig+0x13c>)
 8004dde:	4293      	cmp	r3, r2
 8004de0:	d108      	bne.n	8004df4 <TIM_Base_SetConfig+0xc4>
 8004de2:	68fb      	ldr	r3, [r7, #12]
 8004de4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004de8:	60fb      	str	r3, [r7, #12]
 8004dea:	683b      	ldr	r3, [r7, #0]
 8004dec:	68db      	ldr	r3, [r3, #12]
 8004dee:	68fa      	ldr	r2, [r7, #12]
 8004df0:	4313      	orrs	r3, r2
 8004df2:	60fb      	str	r3, [r7, #12]
 8004df4:	68fb      	ldr	r3, [r7, #12]
 8004df6:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8004dfa:	683b      	ldr	r3, [r7, #0]
 8004dfc:	695b      	ldr	r3, [r3, #20]
 8004dfe:	4313      	orrs	r3, r2
 8004e00:	60fb      	str	r3, [r7, #12]
 8004e02:	687b      	ldr	r3, [r7, #4]
 8004e04:	68fa      	ldr	r2, [r7, #12]
 8004e06:	601a      	str	r2, [r3, #0]
 8004e08:	683b      	ldr	r3, [r7, #0]
 8004e0a:	689a      	ldr	r2, [r3, #8]
 8004e0c:	687b      	ldr	r3, [r7, #4]
 8004e0e:	62da      	str	r2, [r3, #44]	; 0x2c
 8004e10:	683b      	ldr	r3, [r7, #0]
 8004e12:	681a      	ldr	r2, [r3, #0]
 8004e14:	687b      	ldr	r3, [r7, #4]
 8004e16:	629a      	str	r2, [r3, #40]	; 0x28
 8004e18:	687b      	ldr	r3, [r7, #4]
 8004e1a:	4a0a      	ldr	r2, [pc, #40]	; (8004e44 <TIM_Base_SetConfig+0x114>)
 8004e1c:	4293      	cmp	r3, r2
 8004e1e:	d003      	beq.n	8004e28 <TIM_Base_SetConfig+0xf8>
 8004e20:	687b      	ldr	r3, [r7, #4]
 8004e22:	4a0c      	ldr	r2, [pc, #48]	; (8004e54 <TIM_Base_SetConfig+0x124>)
 8004e24:	4293      	cmp	r3, r2
 8004e26:	d103      	bne.n	8004e30 <TIM_Base_SetConfig+0x100>
 8004e28:	683b      	ldr	r3, [r7, #0]
 8004e2a:	691a      	ldr	r2, [r3, #16]
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	631a      	str	r2, [r3, #48]	; 0x30
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	2201      	movs	r2, #1
 8004e34:	615a      	str	r2, [r3, #20]
 8004e36:	bf00      	nop
 8004e38:	3714      	adds	r7, #20
 8004e3a:	46bd      	mov	sp, r7
 8004e3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e40:	4770      	bx	lr
 8004e42:	bf00      	nop
 8004e44:	40010000 	.word	0x40010000
 8004e48:	40000400 	.word	0x40000400
 8004e4c:	40000800 	.word	0x40000800
 8004e50:	40000c00 	.word	0x40000c00
 8004e54:	40010400 	.word	0x40010400
 8004e58:	40014000 	.word	0x40014000
 8004e5c:	40014400 	.word	0x40014400
 8004e60:	40014800 	.word	0x40014800
 8004e64:	40001800 	.word	0x40001800
 8004e68:	40001c00 	.word	0x40001c00
 8004e6c:	40002000 	.word	0x40002000

08004e70 <TIM_TI1_ConfigInputStage>:
 8004e70:	b480      	push	{r7}
 8004e72:	b087      	sub	sp, #28
 8004e74:	af00      	add	r7, sp, #0
 8004e76:	60f8      	str	r0, [r7, #12]
 8004e78:	60b9      	str	r1, [r7, #8]
 8004e7a:	607a      	str	r2, [r7, #4]
 8004e7c:	68fb      	ldr	r3, [r7, #12]
 8004e7e:	6a1b      	ldr	r3, [r3, #32]
 8004e80:	617b      	str	r3, [r7, #20]
 8004e82:	68fb      	ldr	r3, [r7, #12]
 8004e84:	6a1b      	ldr	r3, [r3, #32]
 8004e86:	f023 0201 	bic.w	r2, r3, #1
 8004e8a:	68fb      	ldr	r3, [r7, #12]
 8004e8c:	621a      	str	r2, [r3, #32]
 8004e8e:	68fb      	ldr	r3, [r7, #12]
 8004e90:	699b      	ldr	r3, [r3, #24]
 8004e92:	613b      	str	r3, [r7, #16]
 8004e94:	693b      	ldr	r3, [r7, #16]
 8004e96:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004e9a:	613b      	str	r3, [r7, #16]
 8004e9c:	687b      	ldr	r3, [r7, #4]
 8004e9e:	011b      	lsls	r3, r3, #4
 8004ea0:	693a      	ldr	r2, [r7, #16]
 8004ea2:	4313      	orrs	r3, r2
 8004ea4:	613b      	str	r3, [r7, #16]
 8004ea6:	697b      	ldr	r3, [r7, #20]
 8004ea8:	f023 030a 	bic.w	r3, r3, #10
 8004eac:	617b      	str	r3, [r7, #20]
 8004eae:	697a      	ldr	r2, [r7, #20]
 8004eb0:	68bb      	ldr	r3, [r7, #8]
 8004eb2:	4313      	orrs	r3, r2
 8004eb4:	617b      	str	r3, [r7, #20]
 8004eb6:	68fb      	ldr	r3, [r7, #12]
 8004eb8:	693a      	ldr	r2, [r7, #16]
 8004eba:	619a      	str	r2, [r3, #24]
 8004ebc:	68fb      	ldr	r3, [r7, #12]
 8004ebe:	697a      	ldr	r2, [r7, #20]
 8004ec0:	621a      	str	r2, [r3, #32]
 8004ec2:	bf00      	nop
 8004ec4:	371c      	adds	r7, #28
 8004ec6:	46bd      	mov	sp, r7
 8004ec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ecc:	4770      	bx	lr

08004ece <TIM_TI2_ConfigInputStage>:
 8004ece:	b480      	push	{r7}
 8004ed0:	b087      	sub	sp, #28
 8004ed2:	af00      	add	r7, sp, #0
 8004ed4:	60f8      	str	r0, [r7, #12]
 8004ed6:	60b9      	str	r1, [r7, #8]
 8004ed8:	607a      	str	r2, [r7, #4]
 8004eda:	68fb      	ldr	r3, [r7, #12]
 8004edc:	6a1b      	ldr	r3, [r3, #32]
 8004ede:	f023 0210 	bic.w	r2, r3, #16
 8004ee2:	68fb      	ldr	r3, [r7, #12]
 8004ee4:	621a      	str	r2, [r3, #32]
 8004ee6:	68fb      	ldr	r3, [r7, #12]
 8004ee8:	699b      	ldr	r3, [r3, #24]
 8004eea:	617b      	str	r3, [r7, #20]
 8004eec:	68fb      	ldr	r3, [r7, #12]
 8004eee:	6a1b      	ldr	r3, [r3, #32]
 8004ef0:	613b      	str	r3, [r7, #16]
 8004ef2:	697b      	ldr	r3, [r7, #20]
 8004ef4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8004ef8:	617b      	str	r3, [r7, #20]
 8004efa:	687b      	ldr	r3, [r7, #4]
 8004efc:	031b      	lsls	r3, r3, #12
 8004efe:	697a      	ldr	r2, [r7, #20]
 8004f00:	4313      	orrs	r3, r2
 8004f02:	617b      	str	r3, [r7, #20]
 8004f04:	693b      	ldr	r3, [r7, #16]
 8004f06:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8004f0a:	613b      	str	r3, [r7, #16]
 8004f0c:	68bb      	ldr	r3, [r7, #8]
 8004f0e:	011b      	lsls	r3, r3, #4
 8004f10:	693a      	ldr	r2, [r7, #16]
 8004f12:	4313      	orrs	r3, r2
 8004f14:	613b      	str	r3, [r7, #16]
 8004f16:	68fb      	ldr	r3, [r7, #12]
 8004f18:	697a      	ldr	r2, [r7, #20]
 8004f1a:	619a      	str	r2, [r3, #24]
 8004f1c:	68fb      	ldr	r3, [r7, #12]
 8004f1e:	693a      	ldr	r2, [r7, #16]
 8004f20:	621a      	str	r2, [r3, #32]
 8004f22:	bf00      	nop
 8004f24:	371c      	adds	r7, #28
 8004f26:	46bd      	mov	sp, r7
 8004f28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f2c:	4770      	bx	lr

08004f2e <TIM_ITRx_SetConfig>:
 8004f2e:	b480      	push	{r7}
 8004f30:	b085      	sub	sp, #20
 8004f32:	af00      	add	r7, sp, #0
 8004f34:	6078      	str	r0, [r7, #4]
 8004f36:	6039      	str	r1, [r7, #0]
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	689b      	ldr	r3, [r3, #8]
 8004f3c:	60fb      	str	r3, [r7, #12]
 8004f3e:	68fb      	ldr	r3, [r7, #12]
 8004f40:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004f44:	60fb      	str	r3, [r7, #12]
 8004f46:	683a      	ldr	r2, [r7, #0]
 8004f48:	68fb      	ldr	r3, [r7, #12]
 8004f4a:	4313      	orrs	r3, r2
 8004f4c:	f043 0307 	orr.w	r3, r3, #7
 8004f50:	60fb      	str	r3, [r7, #12]
 8004f52:	687b      	ldr	r3, [r7, #4]
 8004f54:	68fa      	ldr	r2, [r7, #12]
 8004f56:	609a      	str	r2, [r3, #8]
 8004f58:	bf00      	nop
 8004f5a:	3714      	adds	r7, #20
 8004f5c:	46bd      	mov	sp, r7
 8004f5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f62:	4770      	bx	lr

08004f64 <TIM_ETR_SetConfig>:
 8004f64:	b480      	push	{r7}
 8004f66:	b087      	sub	sp, #28
 8004f68:	af00      	add	r7, sp, #0
 8004f6a:	60f8      	str	r0, [r7, #12]
 8004f6c:	60b9      	str	r1, [r7, #8]
 8004f6e:	607a      	str	r2, [r7, #4]
 8004f70:	603b      	str	r3, [r7, #0]
 8004f72:	68fb      	ldr	r3, [r7, #12]
 8004f74:	689b      	ldr	r3, [r3, #8]
 8004f76:	617b      	str	r3, [r7, #20]
 8004f78:	697b      	ldr	r3, [r7, #20]
 8004f7a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8004f7e:	617b      	str	r3, [r7, #20]
 8004f80:	683b      	ldr	r3, [r7, #0]
 8004f82:	021a      	lsls	r2, r3, #8
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	431a      	orrs	r2, r3
 8004f88:	68bb      	ldr	r3, [r7, #8]
 8004f8a:	4313      	orrs	r3, r2
 8004f8c:	697a      	ldr	r2, [r7, #20]
 8004f8e:	4313      	orrs	r3, r2
 8004f90:	617b      	str	r3, [r7, #20]
 8004f92:	68fb      	ldr	r3, [r7, #12]
 8004f94:	697a      	ldr	r2, [r7, #20]
 8004f96:	609a      	str	r2, [r3, #8]
 8004f98:	bf00      	nop
 8004f9a:	371c      	adds	r7, #28
 8004f9c:	46bd      	mov	sp, r7
 8004f9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fa2:	4770      	bx	lr

08004fa4 <HAL_TIMEx_MasterConfigSynchronization>:
 8004fa4:	b480      	push	{r7}
 8004fa6:	b085      	sub	sp, #20
 8004fa8:	af00      	add	r7, sp, #0
 8004faa:	6078      	str	r0, [r7, #4]
 8004fac:	6039      	str	r1, [r7, #0]
 8004fae:	687b      	ldr	r3, [r7, #4]
 8004fb0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004fb4:	2b01      	cmp	r3, #1
 8004fb6:	d101      	bne.n	8004fbc <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8004fb8:	2302      	movs	r3, #2
 8004fba:	e05a      	b.n	8005072 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8004fbc:	687b      	ldr	r3, [r7, #4]
 8004fbe:	2201      	movs	r2, #1
 8004fc0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004fc4:	687b      	ldr	r3, [r7, #4]
 8004fc6:	2202      	movs	r2, #2
 8004fc8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004fcc:	687b      	ldr	r3, [r7, #4]
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	685b      	ldr	r3, [r3, #4]
 8004fd2:	60fb      	str	r3, [r7, #12]
 8004fd4:	687b      	ldr	r3, [r7, #4]
 8004fd6:	681b      	ldr	r3, [r3, #0]
 8004fd8:	689b      	ldr	r3, [r3, #8]
 8004fda:	60bb      	str	r3, [r7, #8]
 8004fdc:	68fb      	ldr	r3, [r7, #12]
 8004fde:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004fe2:	60fb      	str	r3, [r7, #12]
 8004fe4:	683b      	ldr	r3, [r7, #0]
 8004fe6:	681b      	ldr	r3, [r3, #0]
 8004fe8:	68fa      	ldr	r2, [r7, #12]
 8004fea:	4313      	orrs	r3, r2
 8004fec:	60fb      	str	r3, [r7, #12]
 8004fee:	687b      	ldr	r3, [r7, #4]
 8004ff0:	681b      	ldr	r3, [r3, #0]
 8004ff2:	68fa      	ldr	r2, [r7, #12]
 8004ff4:	605a      	str	r2, [r3, #4]
 8004ff6:	687b      	ldr	r3, [r7, #4]
 8004ff8:	681b      	ldr	r3, [r3, #0]
 8004ffa:	4a21      	ldr	r2, [pc, #132]	; (8005080 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8004ffc:	4293      	cmp	r3, r2
 8004ffe:	d022      	beq.n	8005046 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	681b      	ldr	r3, [r3, #0]
 8005004:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005008:	d01d      	beq.n	8005046 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800500a:	687b      	ldr	r3, [r7, #4]
 800500c:	681b      	ldr	r3, [r3, #0]
 800500e:	4a1d      	ldr	r2, [pc, #116]	; (8005084 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8005010:	4293      	cmp	r3, r2
 8005012:	d018      	beq.n	8005046 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	681b      	ldr	r3, [r3, #0]
 8005018:	4a1b      	ldr	r2, [pc, #108]	; (8005088 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800501a:	4293      	cmp	r3, r2
 800501c:	d013      	beq.n	8005046 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800501e:	687b      	ldr	r3, [r7, #4]
 8005020:	681b      	ldr	r3, [r3, #0]
 8005022:	4a1a      	ldr	r2, [pc, #104]	; (800508c <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8005024:	4293      	cmp	r3, r2
 8005026:	d00e      	beq.n	8005046 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005028:	687b      	ldr	r3, [r7, #4]
 800502a:	681b      	ldr	r3, [r3, #0]
 800502c:	4a18      	ldr	r2, [pc, #96]	; (8005090 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800502e:	4293      	cmp	r3, r2
 8005030:	d009      	beq.n	8005046 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005032:	687b      	ldr	r3, [r7, #4]
 8005034:	681b      	ldr	r3, [r3, #0]
 8005036:	4a17      	ldr	r2, [pc, #92]	; (8005094 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8005038:	4293      	cmp	r3, r2
 800503a:	d004      	beq.n	8005046 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800503c:	687b      	ldr	r3, [r7, #4]
 800503e:	681b      	ldr	r3, [r3, #0]
 8005040:	4a15      	ldr	r2, [pc, #84]	; (8005098 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8005042:	4293      	cmp	r3, r2
 8005044:	d10c      	bne.n	8005060 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8005046:	68bb      	ldr	r3, [r7, #8]
 8005048:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800504c:	60bb      	str	r3, [r7, #8]
 800504e:	683b      	ldr	r3, [r7, #0]
 8005050:	685b      	ldr	r3, [r3, #4]
 8005052:	68ba      	ldr	r2, [r7, #8]
 8005054:	4313      	orrs	r3, r2
 8005056:	60bb      	str	r3, [r7, #8]
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	681b      	ldr	r3, [r3, #0]
 800505c:	68ba      	ldr	r2, [r7, #8]
 800505e:	609a      	str	r2, [r3, #8]
 8005060:	687b      	ldr	r3, [r7, #4]
 8005062:	2201      	movs	r2, #1
 8005064:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	2200      	movs	r2, #0
 800506c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005070:	2300      	movs	r3, #0
 8005072:	4618      	mov	r0, r3
 8005074:	3714      	adds	r7, #20
 8005076:	46bd      	mov	sp, r7
 8005078:	f85d 7b04 	ldr.w	r7, [sp], #4
 800507c:	4770      	bx	lr
 800507e:	bf00      	nop
 8005080:	40010000 	.word	0x40010000
 8005084:	40000400 	.word	0x40000400
 8005088:	40000800 	.word	0x40000800
 800508c:	40000c00 	.word	0x40000c00
 8005090:	40010400 	.word	0x40010400
 8005094:	40014000 	.word	0x40014000
 8005098:	40001800 	.word	0x40001800

0800509c <HAL_TIMEx_CommutCallback>:
 800509c:	b480      	push	{r7}
 800509e:	b083      	sub	sp, #12
 80050a0:	af00      	add	r7, sp, #0
 80050a2:	6078      	str	r0, [r7, #4]
 80050a4:	bf00      	nop
 80050a6:	370c      	adds	r7, #12
 80050a8:	46bd      	mov	sp, r7
 80050aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050ae:	4770      	bx	lr

080050b0 <HAL_TIMEx_BreakCallback>:
 80050b0:	b480      	push	{r7}
 80050b2:	b083      	sub	sp, #12
 80050b4:	af00      	add	r7, sp, #0
 80050b6:	6078      	str	r0, [r7, #4]
 80050b8:	bf00      	nop
 80050ba:	370c      	adds	r7, #12
 80050bc:	46bd      	mov	sp, r7
 80050be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050c2:	4770      	bx	lr

080050c4 <HAL_UART_Init>:
 80050c4:	b580      	push	{r7, lr}
 80050c6:	b082      	sub	sp, #8
 80050c8:	af00      	add	r7, sp, #0
 80050ca:	6078      	str	r0, [r7, #4]
 80050cc:	687b      	ldr	r3, [r7, #4]
 80050ce:	2b00      	cmp	r3, #0
 80050d0:	d101      	bne.n	80050d6 <HAL_UART_Init+0x12>
 80050d2:	2301      	movs	r3, #1
 80050d4:	e03f      	b.n	8005156 <HAL_UART_Init+0x92>
 80050d6:	687b      	ldr	r3, [r7, #4]
 80050d8:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80050dc:	b2db      	uxtb	r3, r3
 80050de:	2b00      	cmp	r3, #0
 80050e0:	d106      	bne.n	80050f0 <HAL_UART_Init+0x2c>
 80050e2:	687b      	ldr	r3, [r7, #4]
 80050e4:	2200      	movs	r2, #0
 80050e6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80050ea:	6878      	ldr	r0, [r7, #4]
 80050ec:	f7fd fda0 	bl	8002c30 <HAL_UART_MspInit>
 80050f0:	687b      	ldr	r3, [r7, #4]
 80050f2:	2224      	movs	r2, #36	; 0x24
 80050f4:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80050f8:	687b      	ldr	r3, [r7, #4]
 80050fa:	681b      	ldr	r3, [r3, #0]
 80050fc:	68da      	ldr	r2, [r3, #12]
 80050fe:	687b      	ldr	r3, [r7, #4]
 8005100:	681b      	ldr	r3, [r3, #0]
 8005102:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005106:	60da      	str	r2, [r3, #12]
 8005108:	6878      	ldr	r0, [r7, #4]
 800510a:	f000 fb97 	bl	800583c <UART_SetConfig>
 800510e:	687b      	ldr	r3, [r7, #4]
 8005110:	681b      	ldr	r3, [r3, #0]
 8005112:	691a      	ldr	r2, [r3, #16]
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	681b      	ldr	r3, [r3, #0]
 8005118:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800511c:	611a      	str	r2, [r3, #16]
 800511e:	687b      	ldr	r3, [r7, #4]
 8005120:	681b      	ldr	r3, [r3, #0]
 8005122:	695a      	ldr	r2, [r3, #20]
 8005124:	687b      	ldr	r3, [r7, #4]
 8005126:	681b      	ldr	r3, [r3, #0]
 8005128:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800512c:	615a      	str	r2, [r3, #20]
 800512e:	687b      	ldr	r3, [r7, #4]
 8005130:	681b      	ldr	r3, [r3, #0]
 8005132:	68da      	ldr	r2, [r3, #12]
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	681b      	ldr	r3, [r3, #0]
 8005138:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800513c:	60da      	str	r2, [r3, #12]
 800513e:	687b      	ldr	r3, [r7, #4]
 8005140:	2200      	movs	r2, #0
 8005142:	63da      	str	r2, [r3, #60]	; 0x3c
 8005144:	687b      	ldr	r3, [r7, #4]
 8005146:	2220      	movs	r2, #32
 8005148:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	2220      	movs	r2, #32
 8005150:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8005154:	2300      	movs	r3, #0
 8005156:	4618      	mov	r0, r3
 8005158:	3708      	adds	r7, #8
 800515a:	46bd      	mov	sp, r7
 800515c:	bd80      	pop	{r7, pc}

0800515e <HAL_UART_Transmit>:
 800515e:	b580      	push	{r7, lr}
 8005160:	b088      	sub	sp, #32
 8005162:	af02      	add	r7, sp, #8
 8005164:	60f8      	str	r0, [r7, #12]
 8005166:	60b9      	str	r1, [r7, #8]
 8005168:	603b      	str	r3, [r7, #0]
 800516a:	4613      	mov	r3, r2
 800516c:	80fb      	strh	r3, [r7, #6]
 800516e:	2300      	movs	r3, #0
 8005170:	617b      	str	r3, [r7, #20]
 8005172:	68fb      	ldr	r3, [r7, #12]
 8005174:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8005178:	b2db      	uxtb	r3, r3
 800517a:	2b20      	cmp	r3, #32
 800517c:	f040 8083 	bne.w	8005286 <HAL_UART_Transmit+0x128>
 8005180:	68bb      	ldr	r3, [r7, #8]
 8005182:	2b00      	cmp	r3, #0
 8005184:	d002      	beq.n	800518c <HAL_UART_Transmit+0x2e>
 8005186:	88fb      	ldrh	r3, [r7, #6]
 8005188:	2b00      	cmp	r3, #0
 800518a:	d101      	bne.n	8005190 <HAL_UART_Transmit+0x32>
 800518c:	2301      	movs	r3, #1
 800518e:	e07b      	b.n	8005288 <HAL_UART_Transmit+0x12a>
 8005190:	68fb      	ldr	r3, [r7, #12]
 8005192:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8005196:	2b01      	cmp	r3, #1
 8005198:	d101      	bne.n	800519e <HAL_UART_Transmit+0x40>
 800519a:	2302      	movs	r3, #2
 800519c:	e074      	b.n	8005288 <HAL_UART_Transmit+0x12a>
 800519e:	68fb      	ldr	r3, [r7, #12]
 80051a0:	2201      	movs	r2, #1
 80051a2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80051a6:	68fb      	ldr	r3, [r7, #12]
 80051a8:	2200      	movs	r2, #0
 80051aa:	63da      	str	r2, [r3, #60]	; 0x3c
 80051ac:	68fb      	ldr	r3, [r7, #12]
 80051ae:	2221      	movs	r2, #33	; 0x21
 80051b0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80051b4:	f7fd fec4 	bl	8002f40 <HAL_GetTick>
 80051b8:	6178      	str	r0, [r7, #20]
 80051ba:	68fb      	ldr	r3, [r7, #12]
 80051bc:	88fa      	ldrh	r2, [r7, #6]
 80051be:	849a      	strh	r2, [r3, #36]	; 0x24
 80051c0:	68fb      	ldr	r3, [r7, #12]
 80051c2:	88fa      	ldrh	r2, [r7, #6]
 80051c4:	84da      	strh	r2, [r3, #38]	; 0x26
 80051c6:	68fb      	ldr	r3, [r7, #12]
 80051c8:	2200      	movs	r2, #0
 80051ca:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80051ce:	e042      	b.n	8005256 <HAL_UART_Transmit+0xf8>
 80051d0:	68fb      	ldr	r3, [r7, #12]
 80051d2:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80051d4:	b29b      	uxth	r3, r3
 80051d6:	3b01      	subs	r3, #1
 80051d8:	b29a      	uxth	r2, r3
 80051da:	68fb      	ldr	r3, [r7, #12]
 80051dc:	84da      	strh	r2, [r3, #38]	; 0x26
 80051de:	68fb      	ldr	r3, [r7, #12]
 80051e0:	689b      	ldr	r3, [r3, #8]
 80051e2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80051e6:	d122      	bne.n	800522e <HAL_UART_Transmit+0xd0>
 80051e8:	683b      	ldr	r3, [r7, #0]
 80051ea:	9300      	str	r3, [sp, #0]
 80051ec:	697b      	ldr	r3, [r7, #20]
 80051ee:	2200      	movs	r2, #0
 80051f0:	2180      	movs	r1, #128	; 0x80
 80051f2:	68f8      	ldr	r0, [r7, #12]
 80051f4:	f000 f9b6 	bl	8005564 <UART_WaitOnFlagUntilTimeout>
 80051f8:	4603      	mov	r3, r0
 80051fa:	2b00      	cmp	r3, #0
 80051fc:	d001      	beq.n	8005202 <HAL_UART_Transmit+0xa4>
 80051fe:	2303      	movs	r3, #3
 8005200:	e042      	b.n	8005288 <HAL_UART_Transmit+0x12a>
 8005202:	68bb      	ldr	r3, [r7, #8]
 8005204:	613b      	str	r3, [r7, #16]
 8005206:	693b      	ldr	r3, [r7, #16]
 8005208:	881b      	ldrh	r3, [r3, #0]
 800520a:	461a      	mov	r2, r3
 800520c:	68fb      	ldr	r3, [r7, #12]
 800520e:	681b      	ldr	r3, [r3, #0]
 8005210:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005214:	605a      	str	r2, [r3, #4]
 8005216:	68fb      	ldr	r3, [r7, #12]
 8005218:	691b      	ldr	r3, [r3, #16]
 800521a:	2b00      	cmp	r3, #0
 800521c:	d103      	bne.n	8005226 <HAL_UART_Transmit+0xc8>
 800521e:	68bb      	ldr	r3, [r7, #8]
 8005220:	3302      	adds	r3, #2
 8005222:	60bb      	str	r3, [r7, #8]
 8005224:	e017      	b.n	8005256 <HAL_UART_Transmit+0xf8>
 8005226:	68bb      	ldr	r3, [r7, #8]
 8005228:	3301      	adds	r3, #1
 800522a:	60bb      	str	r3, [r7, #8]
 800522c:	e013      	b.n	8005256 <HAL_UART_Transmit+0xf8>
 800522e:	683b      	ldr	r3, [r7, #0]
 8005230:	9300      	str	r3, [sp, #0]
 8005232:	697b      	ldr	r3, [r7, #20]
 8005234:	2200      	movs	r2, #0
 8005236:	2180      	movs	r1, #128	; 0x80
 8005238:	68f8      	ldr	r0, [r7, #12]
 800523a:	f000 f993 	bl	8005564 <UART_WaitOnFlagUntilTimeout>
 800523e:	4603      	mov	r3, r0
 8005240:	2b00      	cmp	r3, #0
 8005242:	d001      	beq.n	8005248 <HAL_UART_Transmit+0xea>
 8005244:	2303      	movs	r3, #3
 8005246:	e01f      	b.n	8005288 <HAL_UART_Transmit+0x12a>
 8005248:	68bb      	ldr	r3, [r7, #8]
 800524a:	1c5a      	adds	r2, r3, #1
 800524c:	60ba      	str	r2, [r7, #8]
 800524e:	781a      	ldrb	r2, [r3, #0]
 8005250:	68fb      	ldr	r3, [r7, #12]
 8005252:	681b      	ldr	r3, [r3, #0]
 8005254:	605a      	str	r2, [r3, #4]
 8005256:	68fb      	ldr	r3, [r7, #12]
 8005258:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800525a:	b29b      	uxth	r3, r3
 800525c:	2b00      	cmp	r3, #0
 800525e:	d1b7      	bne.n	80051d0 <HAL_UART_Transmit+0x72>
 8005260:	683b      	ldr	r3, [r7, #0]
 8005262:	9300      	str	r3, [sp, #0]
 8005264:	697b      	ldr	r3, [r7, #20]
 8005266:	2200      	movs	r2, #0
 8005268:	2140      	movs	r1, #64	; 0x40
 800526a:	68f8      	ldr	r0, [r7, #12]
 800526c:	f000 f97a 	bl	8005564 <UART_WaitOnFlagUntilTimeout>
 8005270:	4603      	mov	r3, r0
 8005272:	2b00      	cmp	r3, #0
 8005274:	d001      	beq.n	800527a <HAL_UART_Transmit+0x11c>
 8005276:	2303      	movs	r3, #3
 8005278:	e006      	b.n	8005288 <HAL_UART_Transmit+0x12a>
 800527a:	68fb      	ldr	r3, [r7, #12]
 800527c:	2220      	movs	r2, #32
 800527e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005282:	2300      	movs	r3, #0
 8005284:	e000      	b.n	8005288 <HAL_UART_Transmit+0x12a>
 8005286:	2302      	movs	r3, #2
 8005288:	4618      	mov	r0, r3
 800528a:	3718      	adds	r7, #24
 800528c:	46bd      	mov	sp, r7
 800528e:	bd80      	pop	{r7, pc}

08005290 <HAL_UART_Receive_IT>:
 8005290:	b480      	push	{r7}
 8005292:	b085      	sub	sp, #20
 8005294:	af00      	add	r7, sp, #0
 8005296:	60f8      	str	r0, [r7, #12]
 8005298:	60b9      	str	r1, [r7, #8]
 800529a:	4613      	mov	r3, r2
 800529c:	80fb      	strh	r3, [r7, #6]
 800529e:	68fb      	ldr	r3, [r7, #12]
 80052a0:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 80052a4:	b2db      	uxtb	r3, r3
 80052a6:	2b20      	cmp	r3, #32
 80052a8:	d140      	bne.n	800532c <HAL_UART_Receive_IT+0x9c>
 80052aa:	68bb      	ldr	r3, [r7, #8]
 80052ac:	2b00      	cmp	r3, #0
 80052ae:	d002      	beq.n	80052b6 <HAL_UART_Receive_IT+0x26>
 80052b0:	88fb      	ldrh	r3, [r7, #6]
 80052b2:	2b00      	cmp	r3, #0
 80052b4:	d101      	bne.n	80052ba <HAL_UART_Receive_IT+0x2a>
 80052b6:	2301      	movs	r3, #1
 80052b8:	e039      	b.n	800532e <HAL_UART_Receive_IT+0x9e>
 80052ba:	68fb      	ldr	r3, [r7, #12]
 80052bc:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80052c0:	2b01      	cmp	r3, #1
 80052c2:	d101      	bne.n	80052c8 <HAL_UART_Receive_IT+0x38>
 80052c4:	2302      	movs	r3, #2
 80052c6:	e032      	b.n	800532e <HAL_UART_Receive_IT+0x9e>
 80052c8:	68fb      	ldr	r3, [r7, #12]
 80052ca:	2201      	movs	r2, #1
 80052cc:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80052d0:	68fb      	ldr	r3, [r7, #12]
 80052d2:	68ba      	ldr	r2, [r7, #8]
 80052d4:	629a      	str	r2, [r3, #40]	; 0x28
 80052d6:	68fb      	ldr	r3, [r7, #12]
 80052d8:	88fa      	ldrh	r2, [r7, #6]
 80052da:	859a      	strh	r2, [r3, #44]	; 0x2c
 80052dc:	68fb      	ldr	r3, [r7, #12]
 80052de:	88fa      	ldrh	r2, [r7, #6]
 80052e0:	85da      	strh	r2, [r3, #46]	; 0x2e
 80052e2:	68fb      	ldr	r3, [r7, #12]
 80052e4:	2200      	movs	r2, #0
 80052e6:	63da      	str	r2, [r3, #60]	; 0x3c
 80052e8:	68fb      	ldr	r3, [r7, #12]
 80052ea:	2222      	movs	r2, #34	; 0x22
 80052ec:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80052f0:	68fb      	ldr	r3, [r7, #12]
 80052f2:	2200      	movs	r2, #0
 80052f4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80052f8:	68fb      	ldr	r3, [r7, #12]
 80052fa:	681b      	ldr	r3, [r3, #0]
 80052fc:	68da      	ldr	r2, [r3, #12]
 80052fe:	68fb      	ldr	r3, [r7, #12]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005306:	60da      	str	r2, [r3, #12]
 8005308:	68fb      	ldr	r3, [r7, #12]
 800530a:	681b      	ldr	r3, [r3, #0]
 800530c:	695a      	ldr	r2, [r3, #20]
 800530e:	68fb      	ldr	r3, [r7, #12]
 8005310:	681b      	ldr	r3, [r3, #0]
 8005312:	f042 0201 	orr.w	r2, r2, #1
 8005316:	615a      	str	r2, [r3, #20]
 8005318:	68fb      	ldr	r3, [r7, #12]
 800531a:	681b      	ldr	r3, [r3, #0]
 800531c:	68da      	ldr	r2, [r3, #12]
 800531e:	68fb      	ldr	r3, [r7, #12]
 8005320:	681b      	ldr	r3, [r3, #0]
 8005322:	f042 0220 	orr.w	r2, r2, #32
 8005326:	60da      	str	r2, [r3, #12]
 8005328:	2300      	movs	r3, #0
 800532a:	e000      	b.n	800532e <HAL_UART_Receive_IT+0x9e>
 800532c:	2302      	movs	r3, #2
 800532e:	4618      	mov	r0, r3
 8005330:	3714      	adds	r7, #20
 8005332:	46bd      	mov	sp, r7
 8005334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005338:	4770      	bx	lr
	...

0800533c <HAL_UART_IRQHandler>:
 800533c:	b580      	push	{r7, lr}
 800533e:	b088      	sub	sp, #32
 8005340:	af00      	add	r7, sp, #0
 8005342:	6078      	str	r0, [r7, #4]
 8005344:	687b      	ldr	r3, [r7, #4]
 8005346:	681b      	ldr	r3, [r3, #0]
 8005348:	681b      	ldr	r3, [r3, #0]
 800534a:	61fb      	str	r3, [r7, #28]
 800534c:	687b      	ldr	r3, [r7, #4]
 800534e:	681b      	ldr	r3, [r3, #0]
 8005350:	68db      	ldr	r3, [r3, #12]
 8005352:	61bb      	str	r3, [r7, #24]
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	681b      	ldr	r3, [r3, #0]
 8005358:	695b      	ldr	r3, [r3, #20]
 800535a:	617b      	str	r3, [r7, #20]
 800535c:	2300      	movs	r3, #0
 800535e:	613b      	str	r3, [r7, #16]
 8005360:	2300      	movs	r3, #0
 8005362:	60fb      	str	r3, [r7, #12]
 8005364:	69fb      	ldr	r3, [r7, #28]
 8005366:	f003 030f 	and.w	r3, r3, #15
 800536a:	613b      	str	r3, [r7, #16]
 800536c:	693b      	ldr	r3, [r7, #16]
 800536e:	2b00      	cmp	r3, #0
 8005370:	d10d      	bne.n	800538e <HAL_UART_IRQHandler+0x52>
 8005372:	69fb      	ldr	r3, [r7, #28]
 8005374:	f003 0320 	and.w	r3, r3, #32
 8005378:	2b00      	cmp	r3, #0
 800537a:	d008      	beq.n	800538e <HAL_UART_IRQHandler+0x52>
 800537c:	69bb      	ldr	r3, [r7, #24]
 800537e:	f003 0320 	and.w	r3, r3, #32
 8005382:	2b00      	cmp	r3, #0
 8005384:	d003      	beq.n	800538e <HAL_UART_IRQHandler+0x52>
 8005386:	6878      	ldr	r0, [r7, #4]
 8005388:	f000 f9d6 	bl	8005738 <UART_Receive_IT>
 800538c:	e0d1      	b.n	8005532 <HAL_UART_IRQHandler+0x1f6>
 800538e:	693b      	ldr	r3, [r7, #16]
 8005390:	2b00      	cmp	r3, #0
 8005392:	f000 80b0 	beq.w	80054f6 <HAL_UART_IRQHandler+0x1ba>
 8005396:	697b      	ldr	r3, [r7, #20]
 8005398:	f003 0301 	and.w	r3, r3, #1
 800539c:	2b00      	cmp	r3, #0
 800539e:	d105      	bne.n	80053ac <HAL_UART_IRQHandler+0x70>
 80053a0:	69bb      	ldr	r3, [r7, #24]
 80053a2:	f403 7390 	and.w	r3, r3, #288	; 0x120
 80053a6:	2b00      	cmp	r3, #0
 80053a8:	f000 80a5 	beq.w	80054f6 <HAL_UART_IRQHandler+0x1ba>
 80053ac:	69fb      	ldr	r3, [r7, #28]
 80053ae:	f003 0301 	and.w	r3, r3, #1
 80053b2:	2b00      	cmp	r3, #0
 80053b4:	d00a      	beq.n	80053cc <HAL_UART_IRQHandler+0x90>
 80053b6:	69bb      	ldr	r3, [r7, #24]
 80053b8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80053bc:	2b00      	cmp	r3, #0
 80053be:	d005      	beq.n	80053cc <HAL_UART_IRQHandler+0x90>
 80053c0:	687b      	ldr	r3, [r7, #4]
 80053c2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80053c4:	f043 0201 	orr.w	r2, r3, #1
 80053c8:	687b      	ldr	r3, [r7, #4]
 80053ca:	63da      	str	r2, [r3, #60]	; 0x3c
 80053cc:	69fb      	ldr	r3, [r7, #28]
 80053ce:	f003 0304 	and.w	r3, r3, #4
 80053d2:	2b00      	cmp	r3, #0
 80053d4:	d00a      	beq.n	80053ec <HAL_UART_IRQHandler+0xb0>
 80053d6:	697b      	ldr	r3, [r7, #20]
 80053d8:	f003 0301 	and.w	r3, r3, #1
 80053dc:	2b00      	cmp	r3, #0
 80053de:	d005      	beq.n	80053ec <HAL_UART_IRQHandler+0xb0>
 80053e0:	687b      	ldr	r3, [r7, #4]
 80053e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80053e4:	f043 0202 	orr.w	r2, r3, #2
 80053e8:	687b      	ldr	r3, [r7, #4]
 80053ea:	63da      	str	r2, [r3, #60]	; 0x3c
 80053ec:	69fb      	ldr	r3, [r7, #28]
 80053ee:	f003 0302 	and.w	r3, r3, #2
 80053f2:	2b00      	cmp	r3, #0
 80053f4:	d00a      	beq.n	800540c <HAL_UART_IRQHandler+0xd0>
 80053f6:	697b      	ldr	r3, [r7, #20]
 80053f8:	f003 0301 	and.w	r3, r3, #1
 80053fc:	2b00      	cmp	r3, #0
 80053fe:	d005      	beq.n	800540c <HAL_UART_IRQHandler+0xd0>
 8005400:	687b      	ldr	r3, [r7, #4]
 8005402:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005404:	f043 0204 	orr.w	r2, r3, #4
 8005408:	687b      	ldr	r3, [r7, #4]
 800540a:	63da      	str	r2, [r3, #60]	; 0x3c
 800540c:	69fb      	ldr	r3, [r7, #28]
 800540e:	f003 0308 	and.w	r3, r3, #8
 8005412:	2b00      	cmp	r3, #0
 8005414:	d00f      	beq.n	8005436 <HAL_UART_IRQHandler+0xfa>
 8005416:	69bb      	ldr	r3, [r7, #24]
 8005418:	f003 0320 	and.w	r3, r3, #32
 800541c:	2b00      	cmp	r3, #0
 800541e:	d104      	bne.n	800542a <HAL_UART_IRQHandler+0xee>
 8005420:	697b      	ldr	r3, [r7, #20]
 8005422:	f003 0301 	and.w	r3, r3, #1
 8005426:	2b00      	cmp	r3, #0
 8005428:	d005      	beq.n	8005436 <HAL_UART_IRQHandler+0xfa>
 800542a:	687b      	ldr	r3, [r7, #4]
 800542c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800542e:	f043 0208 	orr.w	r2, r3, #8
 8005432:	687b      	ldr	r3, [r7, #4]
 8005434:	63da      	str	r2, [r3, #60]	; 0x3c
 8005436:	687b      	ldr	r3, [r7, #4]
 8005438:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800543a:	2b00      	cmp	r3, #0
 800543c:	d078      	beq.n	8005530 <HAL_UART_IRQHandler+0x1f4>
 800543e:	69fb      	ldr	r3, [r7, #28]
 8005440:	f003 0320 	and.w	r3, r3, #32
 8005444:	2b00      	cmp	r3, #0
 8005446:	d007      	beq.n	8005458 <HAL_UART_IRQHandler+0x11c>
 8005448:	69bb      	ldr	r3, [r7, #24]
 800544a:	f003 0320 	and.w	r3, r3, #32
 800544e:	2b00      	cmp	r3, #0
 8005450:	d002      	beq.n	8005458 <HAL_UART_IRQHandler+0x11c>
 8005452:	6878      	ldr	r0, [r7, #4]
 8005454:	f000 f970 	bl	8005738 <UART_Receive_IT>
 8005458:	687b      	ldr	r3, [r7, #4]
 800545a:	681b      	ldr	r3, [r3, #0]
 800545c:	695b      	ldr	r3, [r3, #20]
 800545e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005462:	2b40      	cmp	r3, #64	; 0x40
 8005464:	bf0c      	ite	eq
 8005466:	2301      	moveq	r3, #1
 8005468:	2300      	movne	r3, #0
 800546a:	b2db      	uxtb	r3, r3
 800546c:	60fb      	str	r3, [r7, #12]
 800546e:	687b      	ldr	r3, [r7, #4]
 8005470:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005472:	f003 0308 	and.w	r3, r3, #8
 8005476:	2b00      	cmp	r3, #0
 8005478:	d102      	bne.n	8005480 <HAL_UART_IRQHandler+0x144>
 800547a:	68fb      	ldr	r3, [r7, #12]
 800547c:	2b00      	cmp	r3, #0
 800547e:	d031      	beq.n	80054e4 <HAL_UART_IRQHandler+0x1a8>
 8005480:	6878      	ldr	r0, [r7, #4]
 8005482:	f000 f8b9 	bl	80055f8 <UART_EndRxTransfer>
 8005486:	687b      	ldr	r3, [r7, #4]
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	695b      	ldr	r3, [r3, #20]
 800548c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005490:	2b40      	cmp	r3, #64	; 0x40
 8005492:	d123      	bne.n	80054dc <HAL_UART_IRQHandler+0x1a0>
 8005494:	687b      	ldr	r3, [r7, #4]
 8005496:	681b      	ldr	r3, [r3, #0]
 8005498:	695a      	ldr	r2, [r3, #20]
 800549a:	687b      	ldr	r3, [r7, #4]
 800549c:	681b      	ldr	r3, [r3, #0]
 800549e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80054a2:	615a      	str	r2, [r3, #20]
 80054a4:	687b      	ldr	r3, [r7, #4]
 80054a6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80054a8:	2b00      	cmp	r3, #0
 80054aa:	d013      	beq.n	80054d4 <HAL_UART_IRQHandler+0x198>
 80054ac:	687b      	ldr	r3, [r7, #4]
 80054ae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80054b0:	4a21      	ldr	r2, [pc, #132]	; (8005538 <HAL_UART_IRQHandler+0x1fc>)
 80054b2:	651a      	str	r2, [r3, #80]	; 0x50
 80054b4:	687b      	ldr	r3, [r7, #4]
 80054b6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80054b8:	4618      	mov	r0, r3
 80054ba:	f7fe f87f 	bl	80035bc <HAL_DMA_Abort_IT>
 80054be:	4603      	mov	r3, r0
 80054c0:	2b00      	cmp	r3, #0
 80054c2:	d016      	beq.n	80054f2 <HAL_UART_IRQHandler+0x1b6>
 80054c4:	687b      	ldr	r3, [r7, #4]
 80054c6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80054c8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80054ca:	687a      	ldr	r2, [r7, #4]
 80054cc:	6b52      	ldr	r2, [r2, #52]	; 0x34
 80054ce:	4610      	mov	r0, r2
 80054d0:	4798      	blx	r3
 80054d2:	e00e      	b.n	80054f2 <HAL_UART_IRQHandler+0x1b6>
 80054d4:	6878      	ldr	r0, [r7, #4]
 80054d6:	f000 f83b 	bl	8005550 <HAL_UART_ErrorCallback>
 80054da:	e00a      	b.n	80054f2 <HAL_UART_IRQHandler+0x1b6>
 80054dc:	6878      	ldr	r0, [r7, #4]
 80054de:	f000 f837 	bl	8005550 <HAL_UART_ErrorCallback>
 80054e2:	e006      	b.n	80054f2 <HAL_UART_IRQHandler+0x1b6>
 80054e4:	6878      	ldr	r0, [r7, #4]
 80054e6:	f000 f833 	bl	8005550 <HAL_UART_ErrorCallback>
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	2200      	movs	r2, #0
 80054ee:	63da      	str	r2, [r3, #60]	; 0x3c
 80054f0:	e01e      	b.n	8005530 <HAL_UART_IRQHandler+0x1f4>
 80054f2:	bf00      	nop
 80054f4:	e01c      	b.n	8005530 <HAL_UART_IRQHandler+0x1f4>
 80054f6:	69fb      	ldr	r3, [r7, #28]
 80054f8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80054fc:	2b00      	cmp	r3, #0
 80054fe:	d008      	beq.n	8005512 <HAL_UART_IRQHandler+0x1d6>
 8005500:	69bb      	ldr	r3, [r7, #24]
 8005502:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005506:	2b00      	cmp	r3, #0
 8005508:	d003      	beq.n	8005512 <HAL_UART_IRQHandler+0x1d6>
 800550a:	6878      	ldr	r0, [r7, #4]
 800550c:	f000 f8a6 	bl	800565c <UART_Transmit_IT>
 8005510:	e00f      	b.n	8005532 <HAL_UART_IRQHandler+0x1f6>
 8005512:	69fb      	ldr	r3, [r7, #28]
 8005514:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005518:	2b00      	cmp	r3, #0
 800551a:	d00a      	beq.n	8005532 <HAL_UART_IRQHandler+0x1f6>
 800551c:	69bb      	ldr	r3, [r7, #24]
 800551e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005522:	2b00      	cmp	r3, #0
 8005524:	d005      	beq.n	8005532 <HAL_UART_IRQHandler+0x1f6>
 8005526:	6878      	ldr	r0, [r7, #4]
 8005528:	f000 f8ee 	bl	8005708 <UART_EndTransmit_IT>
 800552c:	bf00      	nop
 800552e:	e000      	b.n	8005532 <HAL_UART_IRQHandler+0x1f6>
 8005530:	bf00      	nop
 8005532:	3720      	adds	r7, #32
 8005534:	46bd      	mov	sp, r7
 8005536:	bd80      	pop	{r7, pc}
 8005538:	08005635 	.word	0x08005635

0800553c <HAL_UART_TxCpltCallback>:
 800553c:	b480      	push	{r7}
 800553e:	b083      	sub	sp, #12
 8005540:	af00      	add	r7, sp, #0
 8005542:	6078      	str	r0, [r7, #4]
 8005544:	bf00      	nop
 8005546:	370c      	adds	r7, #12
 8005548:	46bd      	mov	sp, r7
 800554a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800554e:	4770      	bx	lr

08005550 <HAL_UART_ErrorCallback>:
 8005550:	b480      	push	{r7}
 8005552:	b083      	sub	sp, #12
 8005554:	af00      	add	r7, sp, #0
 8005556:	6078      	str	r0, [r7, #4]
 8005558:	bf00      	nop
 800555a:	370c      	adds	r7, #12
 800555c:	46bd      	mov	sp, r7
 800555e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005562:	4770      	bx	lr

08005564 <UART_WaitOnFlagUntilTimeout>:
 8005564:	b580      	push	{r7, lr}
 8005566:	b084      	sub	sp, #16
 8005568:	af00      	add	r7, sp, #0
 800556a:	60f8      	str	r0, [r7, #12]
 800556c:	60b9      	str	r1, [r7, #8]
 800556e:	603b      	str	r3, [r7, #0]
 8005570:	4613      	mov	r3, r2
 8005572:	71fb      	strb	r3, [r7, #7]
 8005574:	e02c      	b.n	80055d0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8005576:	69bb      	ldr	r3, [r7, #24]
 8005578:	f1b3 3fff 	cmp.w	r3, #4294967295
 800557c:	d028      	beq.n	80055d0 <UART_WaitOnFlagUntilTimeout+0x6c>
 800557e:	69bb      	ldr	r3, [r7, #24]
 8005580:	2b00      	cmp	r3, #0
 8005582:	d007      	beq.n	8005594 <UART_WaitOnFlagUntilTimeout+0x30>
 8005584:	f7fd fcdc 	bl	8002f40 <HAL_GetTick>
 8005588:	4602      	mov	r2, r0
 800558a:	683b      	ldr	r3, [r7, #0]
 800558c:	1ad3      	subs	r3, r2, r3
 800558e:	69ba      	ldr	r2, [r7, #24]
 8005590:	429a      	cmp	r2, r3
 8005592:	d21d      	bcs.n	80055d0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8005594:	68fb      	ldr	r3, [r7, #12]
 8005596:	681b      	ldr	r3, [r3, #0]
 8005598:	68da      	ldr	r2, [r3, #12]
 800559a:	68fb      	ldr	r3, [r7, #12]
 800559c:	681b      	ldr	r3, [r3, #0]
 800559e:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80055a2:	60da      	str	r2, [r3, #12]
 80055a4:	68fb      	ldr	r3, [r7, #12]
 80055a6:	681b      	ldr	r3, [r3, #0]
 80055a8:	695a      	ldr	r2, [r3, #20]
 80055aa:	68fb      	ldr	r3, [r7, #12]
 80055ac:	681b      	ldr	r3, [r3, #0]
 80055ae:	f022 0201 	bic.w	r2, r2, #1
 80055b2:	615a      	str	r2, [r3, #20]
 80055b4:	68fb      	ldr	r3, [r7, #12]
 80055b6:	2220      	movs	r2, #32
 80055b8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80055bc:	68fb      	ldr	r3, [r7, #12]
 80055be:	2220      	movs	r2, #32
 80055c0:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80055c4:	68fb      	ldr	r3, [r7, #12]
 80055c6:	2200      	movs	r2, #0
 80055c8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80055cc:	2303      	movs	r3, #3
 80055ce:	e00f      	b.n	80055f0 <UART_WaitOnFlagUntilTimeout+0x8c>
 80055d0:	68fb      	ldr	r3, [r7, #12]
 80055d2:	681b      	ldr	r3, [r3, #0]
 80055d4:	681a      	ldr	r2, [r3, #0]
 80055d6:	68bb      	ldr	r3, [r7, #8]
 80055d8:	4013      	ands	r3, r2
 80055da:	68ba      	ldr	r2, [r7, #8]
 80055dc:	429a      	cmp	r2, r3
 80055de:	bf0c      	ite	eq
 80055e0:	2301      	moveq	r3, #1
 80055e2:	2300      	movne	r3, #0
 80055e4:	b2db      	uxtb	r3, r3
 80055e6:	461a      	mov	r2, r3
 80055e8:	79fb      	ldrb	r3, [r7, #7]
 80055ea:	429a      	cmp	r2, r3
 80055ec:	d0c3      	beq.n	8005576 <UART_WaitOnFlagUntilTimeout+0x12>
 80055ee:	2300      	movs	r3, #0
 80055f0:	4618      	mov	r0, r3
 80055f2:	3710      	adds	r7, #16
 80055f4:	46bd      	mov	sp, r7
 80055f6:	bd80      	pop	{r7, pc}

080055f8 <UART_EndRxTransfer>:
 80055f8:	b480      	push	{r7}
 80055fa:	b083      	sub	sp, #12
 80055fc:	af00      	add	r7, sp, #0
 80055fe:	6078      	str	r0, [r7, #4]
 8005600:	687b      	ldr	r3, [r7, #4]
 8005602:	681b      	ldr	r3, [r3, #0]
 8005604:	68da      	ldr	r2, [r3, #12]
 8005606:	687b      	ldr	r3, [r7, #4]
 8005608:	681b      	ldr	r3, [r3, #0]
 800560a:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800560e:	60da      	str	r2, [r3, #12]
 8005610:	687b      	ldr	r3, [r7, #4]
 8005612:	681b      	ldr	r3, [r3, #0]
 8005614:	695a      	ldr	r2, [r3, #20]
 8005616:	687b      	ldr	r3, [r7, #4]
 8005618:	681b      	ldr	r3, [r3, #0]
 800561a:	f022 0201 	bic.w	r2, r2, #1
 800561e:	615a      	str	r2, [r3, #20]
 8005620:	687b      	ldr	r3, [r7, #4]
 8005622:	2220      	movs	r2, #32
 8005624:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8005628:	bf00      	nop
 800562a:	370c      	adds	r7, #12
 800562c:	46bd      	mov	sp, r7
 800562e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005632:	4770      	bx	lr

08005634 <UART_DMAAbortOnError>:
 8005634:	b580      	push	{r7, lr}
 8005636:	b084      	sub	sp, #16
 8005638:	af00      	add	r7, sp, #0
 800563a:	6078      	str	r0, [r7, #4]
 800563c:	687b      	ldr	r3, [r7, #4]
 800563e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005640:	60fb      	str	r3, [r7, #12]
 8005642:	68fb      	ldr	r3, [r7, #12]
 8005644:	2200      	movs	r2, #0
 8005646:	85da      	strh	r2, [r3, #46]	; 0x2e
 8005648:	68fb      	ldr	r3, [r7, #12]
 800564a:	2200      	movs	r2, #0
 800564c:	84da      	strh	r2, [r3, #38]	; 0x26
 800564e:	68f8      	ldr	r0, [r7, #12]
 8005650:	f7ff ff7e 	bl	8005550 <HAL_UART_ErrorCallback>
 8005654:	bf00      	nop
 8005656:	3710      	adds	r7, #16
 8005658:	46bd      	mov	sp, r7
 800565a:	bd80      	pop	{r7, pc}

0800565c <UART_Transmit_IT>:
 800565c:	b480      	push	{r7}
 800565e:	b085      	sub	sp, #20
 8005660:	af00      	add	r7, sp, #0
 8005662:	6078      	str	r0, [r7, #4]
 8005664:	687b      	ldr	r3, [r7, #4]
 8005666:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800566a:	b2db      	uxtb	r3, r3
 800566c:	2b21      	cmp	r3, #33	; 0x21
 800566e:	d144      	bne.n	80056fa <UART_Transmit_IT+0x9e>
 8005670:	687b      	ldr	r3, [r7, #4]
 8005672:	689b      	ldr	r3, [r3, #8]
 8005674:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005678:	d11a      	bne.n	80056b0 <UART_Transmit_IT+0x54>
 800567a:	687b      	ldr	r3, [r7, #4]
 800567c:	6a1b      	ldr	r3, [r3, #32]
 800567e:	60fb      	str	r3, [r7, #12]
 8005680:	68fb      	ldr	r3, [r7, #12]
 8005682:	881b      	ldrh	r3, [r3, #0]
 8005684:	461a      	mov	r2, r3
 8005686:	687b      	ldr	r3, [r7, #4]
 8005688:	681b      	ldr	r3, [r3, #0]
 800568a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800568e:	605a      	str	r2, [r3, #4]
 8005690:	687b      	ldr	r3, [r7, #4]
 8005692:	691b      	ldr	r3, [r3, #16]
 8005694:	2b00      	cmp	r3, #0
 8005696:	d105      	bne.n	80056a4 <UART_Transmit_IT+0x48>
 8005698:	687b      	ldr	r3, [r7, #4]
 800569a:	6a1b      	ldr	r3, [r3, #32]
 800569c:	1c9a      	adds	r2, r3, #2
 800569e:	687b      	ldr	r3, [r7, #4]
 80056a0:	621a      	str	r2, [r3, #32]
 80056a2:	e00e      	b.n	80056c2 <UART_Transmit_IT+0x66>
 80056a4:	687b      	ldr	r3, [r7, #4]
 80056a6:	6a1b      	ldr	r3, [r3, #32]
 80056a8:	1c5a      	adds	r2, r3, #1
 80056aa:	687b      	ldr	r3, [r7, #4]
 80056ac:	621a      	str	r2, [r3, #32]
 80056ae:	e008      	b.n	80056c2 <UART_Transmit_IT+0x66>
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	6a1b      	ldr	r3, [r3, #32]
 80056b4:	1c59      	adds	r1, r3, #1
 80056b6:	687a      	ldr	r2, [r7, #4]
 80056b8:	6211      	str	r1, [r2, #32]
 80056ba:	781a      	ldrb	r2, [r3, #0]
 80056bc:	687b      	ldr	r3, [r7, #4]
 80056be:	681b      	ldr	r3, [r3, #0]
 80056c0:	605a      	str	r2, [r3, #4]
 80056c2:	687b      	ldr	r3, [r7, #4]
 80056c4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80056c6:	b29b      	uxth	r3, r3
 80056c8:	3b01      	subs	r3, #1
 80056ca:	b29b      	uxth	r3, r3
 80056cc:	687a      	ldr	r2, [r7, #4]
 80056ce:	4619      	mov	r1, r3
 80056d0:	84d1      	strh	r1, [r2, #38]	; 0x26
 80056d2:	2b00      	cmp	r3, #0
 80056d4:	d10f      	bne.n	80056f6 <UART_Transmit_IT+0x9a>
 80056d6:	687b      	ldr	r3, [r7, #4]
 80056d8:	681b      	ldr	r3, [r3, #0]
 80056da:	68da      	ldr	r2, [r3, #12]
 80056dc:	687b      	ldr	r3, [r7, #4]
 80056de:	681b      	ldr	r3, [r3, #0]
 80056e0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80056e4:	60da      	str	r2, [r3, #12]
 80056e6:	687b      	ldr	r3, [r7, #4]
 80056e8:	681b      	ldr	r3, [r3, #0]
 80056ea:	68da      	ldr	r2, [r3, #12]
 80056ec:	687b      	ldr	r3, [r7, #4]
 80056ee:	681b      	ldr	r3, [r3, #0]
 80056f0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80056f4:	60da      	str	r2, [r3, #12]
 80056f6:	2300      	movs	r3, #0
 80056f8:	e000      	b.n	80056fc <UART_Transmit_IT+0xa0>
 80056fa:	2302      	movs	r3, #2
 80056fc:	4618      	mov	r0, r3
 80056fe:	3714      	adds	r7, #20
 8005700:	46bd      	mov	sp, r7
 8005702:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005706:	4770      	bx	lr

08005708 <UART_EndTransmit_IT>:
 8005708:	b580      	push	{r7, lr}
 800570a:	b082      	sub	sp, #8
 800570c:	af00      	add	r7, sp, #0
 800570e:	6078      	str	r0, [r7, #4]
 8005710:	687b      	ldr	r3, [r7, #4]
 8005712:	681b      	ldr	r3, [r3, #0]
 8005714:	68da      	ldr	r2, [r3, #12]
 8005716:	687b      	ldr	r3, [r7, #4]
 8005718:	681b      	ldr	r3, [r3, #0]
 800571a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800571e:	60da      	str	r2, [r3, #12]
 8005720:	687b      	ldr	r3, [r7, #4]
 8005722:	2220      	movs	r2, #32
 8005724:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005728:	6878      	ldr	r0, [r7, #4]
 800572a:	f7ff ff07 	bl	800553c <HAL_UART_TxCpltCallback>
 800572e:	2300      	movs	r3, #0
 8005730:	4618      	mov	r0, r3
 8005732:	3708      	adds	r7, #8
 8005734:	46bd      	mov	sp, r7
 8005736:	bd80      	pop	{r7, pc}

08005738 <UART_Receive_IT>:
 8005738:	b580      	push	{r7, lr}
 800573a:	b084      	sub	sp, #16
 800573c:	af00      	add	r7, sp, #0
 800573e:	6078      	str	r0, [r7, #4]
 8005740:	687b      	ldr	r3, [r7, #4]
 8005742:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8005746:	b2db      	uxtb	r3, r3
 8005748:	2b22      	cmp	r3, #34	; 0x22
 800574a:	d171      	bne.n	8005830 <UART_Receive_IT+0xf8>
 800574c:	687b      	ldr	r3, [r7, #4]
 800574e:	689b      	ldr	r3, [r3, #8]
 8005750:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005754:	d123      	bne.n	800579e <UART_Receive_IT+0x66>
 8005756:	687b      	ldr	r3, [r7, #4]
 8005758:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800575a:	60fb      	str	r3, [r7, #12]
 800575c:	687b      	ldr	r3, [r7, #4]
 800575e:	691b      	ldr	r3, [r3, #16]
 8005760:	2b00      	cmp	r3, #0
 8005762:	d10e      	bne.n	8005782 <UART_Receive_IT+0x4a>
 8005764:	687b      	ldr	r3, [r7, #4]
 8005766:	681b      	ldr	r3, [r3, #0]
 8005768:	685b      	ldr	r3, [r3, #4]
 800576a:	b29b      	uxth	r3, r3
 800576c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005770:	b29a      	uxth	r2, r3
 8005772:	68fb      	ldr	r3, [r7, #12]
 8005774:	801a      	strh	r2, [r3, #0]
 8005776:	687b      	ldr	r3, [r7, #4]
 8005778:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800577a:	1c9a      	adds	r2, r3, #2
 800577c:	687b      	ldr	r3, [r7, #4]
 800577e:	629a      	str	r2, [r3, #40]	; 0x28
 8005780:	e029      	b.n	80057d6 <UART_Receive_IT+0x9e>
 8005782:	687b      	ldr	r3, [r7, #4]
 8005784:	681b      	ldr	r3, [r3, #0]
 8005786:	685b      	ldr	r3, [r3, #4]
 8005788:	b29b      	uxth	r3, r3
 800578a:	b2db      	uxtb	r3, r3
 800578c:	b29a      	uxth	r2, r3
 800578e:	68fb      	ldr	r3, [r7, #12]
 8005790:	801a      	strh	r2, [r3, #0]
 8005792:	687b      	ldr	r3, [r7, #4]
 8005794:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005796:	1c5a      	adds	r2, r3, #1
 8005798:	687b      	ldr	r3, [r7, #4]
 800579a:	629a      	str	r2, [r3, #40]	; 0x28
 800579c:	e01b      	b.n	80057d6 <UART_Receive_IT+0x9e>
 800579e:	687b      	ldr	r3, [r7, #4]
 80057a0:	691b      	ldr	r3, [r3, #16]
 80057a2:	2b00      	cmp	r3, #0
 80057a4:	d10a      	bne.n	80057bc <UART_Receive_IT+0x84>
 80057a6:	687b      	ldr	r3, [r7, #4]
 80057a8:	681b      	ldr	r3, [r3, #0]
 80057aa:	6858      	ldr	r0, [r3, #4]
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80057b0:	1c59      	adds	r1, r3, #1
 80057b2:	687a      	ldr	r2, [r7, #4]
 80057b4:	6291      	str	r1, [r2, #40]	; 0x28
 80057b6:	b2c2      	uxtb	r2, r0
 80057b8:	701a      	strb	r2, [r3, #0]
 80057ba:	e00c      	b.n	80057d6 <UART_Receive_IT+0x9e>
 80057bc:	687b      	ldr	r3, [r7, #4]
 80057be:	681b      	ldr	r3, [r3, #0]
 80057c0:	685b      	ldr	r3, [r3, #4]
 80057c2:	b2da      	uxtb	r2, r3
 80057c4:	687b      	ldr	r3, [r7, #4]
 80057c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80057c8:	1c58      	adds	r0, r3, #1
 80057ca:	6879      	ldr	r1, [r7, #4]
 80057cc:	6288      	str	r0, [r1, #40]	; 0x28
 80057ce:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 80057d2:	b2d2      	uxtb	r2, r2
 80057d4:	701a      	strb	r2, [r3, #0]
 80057d6:	687b      	ldr	r3, [r7, #4]
 80057d8:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80057da:	b29b      	uxth	r3, r3
 80057dc:	3b01      	subs	r3, #1
 80057de:	b29b      	uxth	r3, r3
 80057e0:	687a      	ldr	r2, [r7, #4]
 80057e2:	4619      	mov	r1, r3
 80057e4:	85d1      	strh	r1, [r2, #46]	; 0x2e
 80057e6:	2b00      	cmp	r3, #0
 80057e8:	d120      	bne.n	800582c <UART_Receive_IT+0xf4>
 80057ea:	687b      	ldr	r3, [r7, #4]
 80057ec:	681b      	ldr	r3, [r3, #0]
 80057ee:	68da      	ldr	r2, [r3, #12]
 80057f0:	687b      	ldr	r3, [r7, #4]
 80057f2:	681b      	ldr	r3, [r3, #0]
 80057f4:	f022 0220 	bic.w	r2, r2, #32
 80057f8:	60da      	str	r2, [r3, #12]
 80057fa:	687b      	ldr	r3, [r7, #4]
 80057fc:	681b      	ldr	r3, [r3, #0]
 80057fe:	68da      	ldr	r2, [r3, #12]
 8005800:	687b      	ldr	r3, [r7, #4]
 8005802:	681b      	ldr	r3, [r3, #0]
 8005804:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005808:	60da      	str	r2, [r3, #12]
 800580a:	687b      	ldr	r3, [r7, #4]
 800580c:	681b      	ldr	r3, [r3, #0]
 800580e:	695a      	ldr	r2, [r3, #20]
 8005810:	687b      	ldr	r3, [r7, #4]
 8005812:	681b      	ldr	r3, [r3, #0]
 8005814:	f022 0201 	bic.w	r2, r2, #1
 8005818:	615a      	str	r2, [r3, #20]
 800581a:	687b      	ldr	r3, [r7, #4]
 800581c:	2220      	movs	r2, #32
 800581e:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8005822:	6878      	ldr	r0, [r7, #4]
 8005824:	f7fc fe70 	bl	8002508 <HAL_UART_RxCpltCallback>
 8005828:	2300      	movs	r3, #0
 800582a:	e002      	b.n	8005832 <UART_Receive_IT+0xfa>
 800582c:	2300      	movs	r3, #0
 800582e:	e000      	b.n	8005832 <UART_Receive_IT+0xfa>
 8005830:	2302      	movs	r3, #2
 8005832:	4618      	mov	r0, r3
 8005834:	3710      	adds	r7, #16
 8005836:	46bd      	mov	sp, r7
 8005838:	bd80      	pop	{r7, pc}
	...

0800583c <UART_SetConfig>:
 800583c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005840:	b085      	sub	sp, #20
 8005842:	af00      	add	r7, sp, #0
 8005844:	6078      	str	r0, [r7, #4]
 8005846:	687b      	ldr	r3, [r7, #4]
 8005848:	681b      	ldr	r3, [r3, #0]
 800584a:	691b      	ldr	r3, [r3, #16]
 800584c:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8005850:	687b      	ldr	r3, [r7, #4]
 8005852:	68da      	ldr	r2, [r3, #12]
 8005854:	687b      	ldr	r3, [r7, #4]
 8005856:	681b      	ldr	r3, [r3, #0]
 8005858:	430a      	orrs	r2, r1
 800585a:	611a      	str	r2, [r3, #16]
 800585c:	687b      	ldr	r3, [r7, #4]
 800585e:	689a      	ldr	r2, [r3, #8]
 8005860:	687b      	ldr	r3, [r7, #4]
 8005862:	691b      	ldr	r3, [r3, #16]
 8005864:	431a      	orrs	r2, r3
 8005866:	687b      	ldr	r3, [r7, #4]
 8005868:	695b      	ldr	r3, [r3, #20]
 800586a:	431a      	orrs	r2, r3
 800586c:	687b      	ldr	r3, [r7, #4]
 800586e:	69db      	ldr	r3, [r3, #28]
 8005870:	4313      	orrs	r3, r2
 8005872:	60fb      	str	r3, [r7, #12]
 8005874:	687b      	ldr	r3, [r7, #4]
 8005876:	681b      	ldr	r3, [r3, #0]
 8005878:	68db      	ldr	r3, [r3, #12]
 800587a:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 800587e:	f023 030c 	bic.w	r3, r3, #12
 8005882:	687a      	ldr	r2, [r7, #4]
 8005884:	6812      	ldr	r2, [r2, #0]
 8005886:	68f9      	ldr	r1, [r7, #12]
 8005888:	430b      	orrs	r3, r1
 800588a:	60d3      	str	r3, [r2, #12]
 800588c:	687b      	ldr	r3, [r7, #4]
 800588e:	681b      	ldr	r3, [r3, #0]
 8005890:	695b      	ldr	r3, [r3, #20]
 8005892:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8005896:	687b      	ldr	r3, [r7, #4]
 8005898:	699a      	ldr	r2, [r3, #24]
 800589a:	687b      	ldr	r3, [r7, #4]
 800589c:	681b      	ldr	r3, [r3, #0]
 800589e:	430a      	orrs	r2, r1
 80058a0:	615a      	str	r2, [r3, #20]
 80058a2:	687b      	ldr	r3, [r7, #4]
 80058a4:	69db      	ldr	r3, [r3, #28]
 80058a6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80058aa:	f040 818b 	bne.w	8005bc4 <UART_SetConfig+0x388>
 80058ae:	687b      	ldr	r3, [r7, #4]
 80058b0:	681b      	ldr	r3, [r3, #0]
 80058b2:	4ac1      	ldr	r2, [pc, #772]	; (8005bb8 <UART_SetConfig+0x37c>)
 80058b4:	4293      	cmp	r3, r2
 80058b6:	d005      	beq.n	80058c4 <UART_SetConfig+0x88>
 80058b8:	687b      	ldr	r3, [r7, #4]
 80058ba:	681b      	ldr	r3, [r3, #0]
 80058bc:	4abf      	ldr	r2, [pc, #764]	; (8005bbc <UART_SetConfig+0x380>)
 80058be:	4293      	cmp	r3, r2
 80058c0:	f040 80bd 	bne.w	8005a3e <UART_SetConfig+0x202>
 80058c4:	f7fe fba0 	bl	8004008 <HAL_RCC_GetPCLK2Freq>
 80058c8:	60b8      	str	r0, [r7, #8]
 80058ca:	68bb      	ldr	r3, [r7, #8]
 80058cc:	461d      	mov	r5, r3
 80058ce:	f04f 0600 	mov.w	r6, #0
 80058d2:	46a8      	mov	r8, r5
 80058d4:	46b1      	mov	r9, r6
 80058d6:	eb18 0308 	adds.w	r3, r8, r8
 80058da:	eb49 0409 	adc.w	r4, r9, r9
 80058de:	4698      	mov	r8, r3
 80058e0:	46a1      	mov	r9, r4
 80058e2:	eb18 0805 	adds.w	r8, r8, r5
 80058e6:	eb49 0906 	adc.w	r9, r9, r6
 80058ea:	f04f 0100 	mov.w	r1, #0
 80058ee:	f04f 0200 	mov.w	r2, #0
 80058f2:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 80058f6:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 80058fa:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80058fe:	4688      	mov	r8, r1
 8005900:	4691      	mov	r9, r2
 8005902:	eb18 0005 	adds.w	r0, r8, r5
 8005906:	eb49 0106 	adc.w	r1, r9, r6
 800590a:	687b      	ldr	r3, [r7, #4]
 800590c:	685b      	ldr	r3, [r3, #4]
 800590e:	461d      	mov	r5, r3
 8005910:	f04f 0600 	mov.w	r6, #0
 8005914:	196b      	adds	r3, r5, r5
 8005916:	eb46 0406 	adc.w	r4, r6, r6
 800591a:	461a      	mov	r2, r3
 800591c:	4623      	mov	r3, r4
 800591e:	f7fb f96d 	bl	8000bfc <__aeabi_uldivmod>
 8005922:	4603      	mov	r3, r0
 8005924:	460c      	mov	r4, r1
 8005926:	461a      	mov	r2, r3
 8005928:	4ba5      	ldr	r3, [pc, #660]	; (8005bc0 <UART_SetConfig+0x384>)
 800592a:	fba3 2302 	umull	r2, r3, r3, r2
 800592e:	095b      	lsrs	r3, r3, #5
 8005930:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8005934:	68bb      	ldr	r3, [r7, #8]
 8005936:	461d      	mov	r5, r3
 8005938:	f04f 0600 	mov.w	r6, #0
 800593c:	46a9      	mov	r9, r5
 800593e:	46b2      	mov	sl, r6
 8005940:	eb19 0309 	adds.w	r3, r9, r9
 8005944:	eb4a 040a 	adc.w	r4, sl, sl
 8005948:	4699      	mov	r9, r3
 800594a:	46a2      	mov	sl, r4
 800594c:	eb19 0905 	adds.w	r9, r9, r5
 8005950:	eb4a 0a06 	adc.w	sl, sl, r6
 8005954:	f04f 0100 	mov.w	r1, #0
 8005958:	f04f 0200 	mov.w	r2, #0
 800595c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005960:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8005964:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8005968:	4689      	mov	r9, r1
 800596a:	4692      	mov	sl, r2
 800596c:	eb19 0005 	adds.w	r0, r9, r5
 8005970:	eb4a 0106 	adc.w	r1, sl, r6
 8005974:	687b      	ldr	r3, [r7, #4]
 8005976:	685b      	ldr	r3, [r3, #4]
 8005978:	461d      	mov	r5, r3
 800597a:	f04f 0600 	mov.w	r6, #0
 800597e:	196b      	adds	r3, r5, r5
 8005980:	eb46 0406 	adc.w	r4, r6, r6
 8005984:	461a      	mov	r2, r3
 8005986:	4623      	mov	r3, r4
 8005988:	f7fb f938 	bl	8000bfc <__aeabi_uldivmod>
 800598c:	4603      	mov	r3, r0
 800598e:	460c      	mov	r4, r1
 8005990:	461a      	mov	r2, r3
 8005992:	4b8b      	ldr	r3, [pc, #556]	; (8005bc0 <UART_SetConfig+0x384>)
 8005994:	fba3 1302 	umull	r1, r3, r3, r2
 8005998:	095b      	lsrs	r3, r3, #5
 800599a:	2164      	movs	r1, #100	; 0x64
 800599c:	fb01 f303 	mul.w	r3, r1, r3
 80059a0:	1ad3      	subs	r3, r2, r3
 80059a2:	00db      	lsls	r3, r3, #3
 80059a4:	3332      	adds	r3, #50	; 0x32
 80059a6:	4a86      	ldr	r2, [pc, #536]	; (8005bc0 <UART_SetConfig+0x384>)
 80059a8:	fba2 2303 	umull	r2, r3, r2, r3
 80059ac:	095b      	lsrs	r3, r3, #5
 80059ae:	005b      	lsls	r3, r3, #1
 80059b0:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 80059b4:	4498      	add	r8, r3
 80059b6:	68bb      	ldr	r3, [r7, #8]
 80059b8:	461d      	mov	r5, r3
 80059ba:	f04f 0600 	mov.w	r6, #0
 80059be:	46a9      	mov	r9, r5
 80059c0:	46b2      	mov	sl, r6
 80059c2:	eb19 0309 	adds.w	r3, r9, r9
 80059c6:	eb4a 040a 	adc.w	r4, sl, sl
 80059ca:	4699      	mov	r9, r3
 80059cc:	46a2      	mov	sl, r4
 80059ce:	eb19 0905 	adds.w	r9, r9, r5
 80059d2:	eb4a 0a06 	adc.w	sl, sl, r6
 80059d6:	f04f 0100 	mov.w	r1, #0
 80059da:	f04f 0200 	mov.w	r2, #0
 80059de:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80059e2:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80059e6:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80059ea:	4689      	mov	r9, r1
 80059ec:	4692      	mov	sl, r2
 80059ee:	eb19 0005 	adds.w	r0, r9, r5
 80059f2:	eb4a 0106 	adc.w	r1, sl, r6
 80059f6:	687b      	ldr	r3, [r7, #4]
 80059f8:	685b      	ldr	r3, [r3, #4]
 80059fa:	461d      	mov	r5, r3
 80059fc:	f04f 0600 	mov.w	r6, #0
 8005a00:	196b      	adds	r3, r5, r5
 8005a02:	eb46 0406 	adc.w	r4, r6, r6
 8005a06:	461a      	mov	r2, r3
 8005a08:	4623      	mov	r3, r4
 8005a0a:	f7fb f8f7 	bl	8000bfc <__aeabi_uldivmod>
 8005a0e:	4603      	mov	r3, r0
 8005a10:	460c      	mov	r4, r1
 8005a12:	461a      	mov	r2, r3
 8005a14:	4b6a      	ldr	r3, [pc, #424]	; (8005bc0 <UART_SetConfig+0x384>)
 8005a16:	fba3 1302 	umull	r1, r3, r3, r2
 8005a1a:	095b      	lsrs	r3, r3, #5
 8005a1c:	2164      	movs	r1, #100	; 0x64
 8005a1e:	fb01 f303 	mul.w	r3, r1, r3
 8005a22:	1ad3      	subs	r3, r2, r3
 8005a24:	00db      	lsls	r3, r3, #3
 8005a26:	3332      	adds	r3, #50	; 0x32
 8005a28:	4a65      	ldr	r2, [pc, #404]	; (8005bc0 <UART_SetConfig+0x384>)
 8005a2a:	fba2 2303 	umull	r2, r3, r2, r3
 8005a2e:	095b      	lsrs	r3, r3, #5
 8005a30:	f003 0207 	and.w	r2, r3, #7
 8005a34:	687b      	ldr	r3, [r7, #4]
 8005a36:	681b      	ldr	r3, [r3, #0]
 8005a38:	4442      	add	r2, r8
 8005a3a:	609a      	str	r2, [r3, #8]
 8005a3c:	e26f      	b.n	8005f1e <UART_SetConfig+0x6e2>
 8005a3e:	f7fe facf 	bl	8003fe0 <HAL_RCC_GetPCLK1Freq>
 8005a42:	60b8      	str	r0, [r7, #8]
 8005a44:	68bb      	ldr	r3, [r7, #8]
 8005a46:	461d      	mov	r5, r3
 8005a48:	f04f 0600 	mov.w	r6, #0
 8005a4c:	46a8      	mov	r8, r5
 8005a4e:	46b1      	mov	r9, r6
 8005a50:	eb18 0308 	adds.w	r3, r8, r8
 8005a54:	eb49 0409 	adc.w	r4, r9, r9
 8005a58:	4698      	mov	r8, r3
 8005a5a:	46a1      	mov	r9, r4
 8005a5c:	eb18 0805 	adds.w	r8, r8, r5
 8005a60:	eb49 0906 	adc.w	r9, r9, r6
 8005a64:	f04f 0100 	mov.w	r1, #0
 8005a68:	f04f 0200 	mov.w	r2, #0
 8005a6c:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8005a70:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8005a74:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8005a78:	4688      	mov	r8, r1
 8005a7a:	4691      	mov	r9, r2
 8005a7c:	eb18 0005 	adds.w	r0, r8, r5
 8005a80:	eb49 0106 	adc.w	r1, r9, r6
 8005a84:	687b      	ldr	r3, [r7, #4]
 8005a86:	685b      	ldr	r3, [r3, #4]
 8005a88:	461d      	mov	r5, r3
 8005a8a:	f04f 0600 	mov.w	r6, #0
 8005a8e:	196b      	adds	r3, r5, r5
 8005a90:	eb46 0406 	adc.w	r4, r6, r6
 8005a94:	461a      	mov	r2, r3
 8005a96:	4623      	mov	r3, r4
 8005a98:	f7fb f8b0 	bl	8000bfc <__aeabi_uldivmod>
 8005a9c:	4603      	mov	r3, r0
 8005a9e:	460c      	mov	r4, r1
 8005aa0:	461a      	mov	r2, r3
 8005aa2:	4b47      	ldr	r3, [pc, #284]	; (8005bc0 <UART_SetConfig+0x384>)
 8005aa4:	fba3 2302 	umull	r2, r3, r3, r2
 8005aa8:	095b      	lsrs	r3, r3, #5
 8005aaa:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8005aae:	68bb      	ldr	r3, [r7, #8]
 8005ab0:	461d      	mov	r5, r3
 8005ab2:	f04f 0600 	mov.w	r6, #0
 8005ab6:	46a9      	mov	r9, r5
 8005ab8:	46b2      	mov	sl, r6
 8005aba:	eb19 0309 	adds.w	r3, r9, r9
 8005abe:	eb4a 040a 	adc.w	r4, sl, sl
 8005ac2:	4699      	mov	r9, r3
 8005ac4:	46a2      	mov	sl, r4
 8005ac6:	eb19 0905 	adds.w	r9, r9, r5
 8005aca:	eb4a 0a06 	adc.w	sl, sl, r6
 8005ace:	f04f 0100 	mov.w	r1, #0
 8005ad2:	f04f 0200 	mov.w	r2, #0
 8005ad6:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005ada:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8005ade:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8005ae2:	4689      	mov	r9, r1
 8005ae4:	4692      	mov	sl, r2
 8005ae6:	eb19 0005 	adds.w	r0, r9, r5
 8005aea:	eb4a 0106 	adc.w	r1, sl, r6
 8005aee:	687b      	ldr	r3, [r7, #4]
 8005af0:	685b      	ldr	r3, [r3, #4]
 8005af2:	461d      	mov	r5, r3
 8005af4:	f04f 0600 	mov.w	r6, #0
 8005af8:	196b      	adds	r3, r5, r5
 8005afa:	eb46 0406 	adc.w	r4, r6, r6
 8005afe:	461a      	mov	r2, r3
 8005b00:	4623      	mov	r3, r4
 8005b02:	f7fb f87b 	bl	8000bfc <__aeabi_uldivmod>
 8005b06:	4603      	mov	r3, r0
 8005b08:	460c      	mov	r4, r1
 8005b0a:	461a      	mov	r2, r3
 8005b0c:	4b2c      	ldr	r3, [pc, #176]	; (8005bc0 <UART_SetConfig+0x384>)
 8005b0e:	fba3 1302 	umull	r1, r3, r3, r2
 8005b12:	095b      	lsrs	r3, r3, #5
 8005b14:	2164      	movs	r1, #100	; 0x64
 8005b16:	fb01 f303 	mul.w	r3, r1, r3
 8005b1a:	1ad3      	subs	r3, r2, r3
 8005b1c:	00db      	lsls	r3, r3, #3
 8005b1e:	3332      	adds	r3, #50	; 0x32
 8005b20:	4a27      	ldr	r2, [pc, #156]	; (8005bc0 <UART_SetConfig+0x384>)
 8005b22:	fba2 2303 	umull	r2, r3, r2, r3
 8005b26:	095b      	lsrs	r3, r3, #5
 8005b28:	005b      	lsls	r3, r3, #1
 8005b2a:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8005b2e:	4498      	add	r8, r3
 8005b30:	68bb      	ldr	r3, [r7, #8]
 8005b32:	461d      	mov	r5, r3
 8005b34:	f04f 0600 	mov.w	r6, #0
 8005b38:	46a9      	mov	r9, r5
 8005b3a:	46b2      	mov	sl, r6
 8005b3c:	eb19 0309 	adds.w	r3, r9, r9
 8005b40:	eb4a 040a 	adc.w	r4, sl, sl
 8005b44:	4699      	mov	r9, r3
 8005b46:	46a2      	mov	sl, r4
 8005b48:	eb19 0905 	adds.w	r9, r9, r5
 8005b4c:	eb4a 0a06 	adc.w	sl, sl, r6
 8005b50:	f04f 0100 	mov.w	r1, #0
 8005b54:	f04f 0200 	mov.w	r2, #0
 8005b58:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005b5c:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8005b60:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8005b64:	4689      	mov	r9, r1
 8005b66:	4692      	mov	sl, r2
 8005b68:	eb19 0005 	adds.w	r0, r9, r5
 8005b6c:	eb4a 0106 	adc.w	r1, sl, r6
 8005b70:	687b      	ldr	r3, [r7, #4]
 8005b72:	685b      	ldr	r3, [r3, #4]
 8005b74:	461d      	mov	r5, r3
 8005b76:	f04f 0600 	mov.w	r6, #0
 8005b7a:	196b      	adds	r3, r5, r5
 8005b7c:	eb46 0406 	adc.w	r4, r6, r6
 8005b80:	461a      	mov	r2, r3
 8005b82:	4623      	mov	r3, r4
 8005b84:	f7fb f83a 	bl	8000bfc <__aeabi_uldivmod>
 8005b88:	4603      	mov	r3, r0
 8005b8a:	460c      	mov	r4, r1
 8005b8c:	461a      	mov	r2, r3
 8005b8e:	4b0c      	ldr	r3, [pc, #48]	; (8005bc0 <UART_SetConfig+0x384>)
 8005b90:	fba3 1302 	umull	r1, r3, r3, r2
 8005b94:	095b      	lsrs	r3, r3, #5
 8005b96:	2164      	movs	r1, #100	; 0x64
 8005b98:	fb01 f303 	mul.w	r3, r1, r3
 8005b9c:	1ad3      	subs	r3, r2, r3
 8005b9e:	00db      	lsls	r3, r3, #3
 8005ba0:	3332      	adds	r3, #50	; 0x32
 8005ba2:	4a07      	ldr	r2, [pc, #28]	; (8005bc0 <UART_SetConfig+0x384>)
 8005ba4:	fba2 2303 	umull	r2, r3, r2, r3
 8005ba8:	095b      	lsrs	r3, r3, #5
 8005baa:	f003 0207 	and.w	r2, r3, #7
 8005bae:	687b      	ldr	r3, [r7, #4]
 8005bb0:	681b      	ldr	r3, [r3, #0]
 8005bb2:	4442      	add	r2, r8
 8005bb4:	609a      	str	r2, [r3, #8]
 8005bb6:	e1b2      	b.n	8005f1e <UART_SetConfig+0x6e2>
 8005bb8:	40011000 	.word	0x40011000
 8005bbc:	40011400 	.word	0x40011400
 8005bc0:	51eb851f 	.word	0x51eb851f
 8005bc4:	687b      	ldr	r3, [r7, #4]
 8005bc6:	681b      	ldr	r3, [r3, #0]
 8005bc8:	4ad7      	ldr	r2, [pc, #860]	; (8005f28 <UART_SetConfig+0x6ec>)
 8005bca:	4293      	cmp	r3, r2
 8005bcc:	d005      	beq.n	8005bda <UART_SetConfig+0x39e>
 8005bce:	687b      	ldr	r3, [r7, #4]
 8005bd0:	681b      	ldr	r3, [r3, #0]
 8005bd2:	4ad6      	ldr	r2, [pc, #856]	; (8005f2c <UART_SetConfig+0x6f0>)
 8005bd4:	4293      	cmp	r3, r2
 8005bd6:	f040 80d1 	bne.w	8005d7c <UART_SetConfig+0x540>
 8005bda:	f7fe fa15 	bl	8004008 <HAL_RCC_GetPCLK2Freq>
 8005bde:	60b8      	str	r0, [r7, #8]
 8005be0:	68bb      	ldr	r3, [r7, #8]
 8005be2:	469a      	mov	sl, r3
 8005be4:	f04f 0b00 	mov.w	fp, #0
 8005be8:	46d0      	mov	r8, sl
 8005bea:	46d9      	mov	r9, fp
 8005bec:	eb18 0308 	adds.w	r3, r8, r8
 8005bf0:	eb49 0409 	adc.w	r4, r9, r9
 8005bf4:	4698      	mov	r8, r3
 8005bf6:	46a1      	mov	r9, r4
 8005bf8:	eb18 080a 	adds.w	r8, r8, sl
 8005bfc:	eb49 090b 	adc.w	r9, r9, fp
 8005c00:	f04f 0100 	mov.w	r1, #0
 8005c04:	f04f 0200 	mov.w	r2, #0
 8005c08:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8005c0c:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8005c10:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8005c14:	4688      	mov	r8, r1
 8005c16:	4691      	mov	r9, r2
 8005c18:	eb1a 0508 	adds.w	r5, sl, r8
 8005c1c:	eb4b 0609 	adc.w	r6, fp, r9
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	685b      	ldr	r3, [r3, #4]
 8005c24:	4619      	mov	r1, r3
 8005c26:	f04f 0200 	mov.w	r2, #0
 8005c2a:	f04f 0300 	mov.w	r3, #0
 8005c2e:	f04f 0400 	mov.w	r4, #0
 8005c32:	0094      	lsls	r4, r2, #2
 8005c34:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8005c38:	008b      	lsls	r3, r1, #2
 8005c3a:	461a      	mov	r2, r3
 8005c3c:	4623      	mov	r3, r4
 8005c3e:	4628      	mov	r0, r5
 8005c40:	4631      	mov	r1, r6
 8005c42:	f7fa ffdb 	bl	8000bfc <__aeabi_uldivmod>
 8005c46:	4603      	mov	r3, r0
 8005c48:	460c      	mov	r4, r1
 8005c4a:	461a      	mov	r2, r3
 8005c4c:	4bb8      	ldr	r3, [pc, #736]	; (8005f30 <UART_SetConfig+0x6f4>)
 8005c4e:	fba3 2302 	umull	r2, r3, r3, r2
 8005c52:	095b      	lsrs	r3, r3, #5
 8005c54:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8005c58:	68bb      	ldr	r3, [r7, #8]
 8005c5a:	469b      	mov	fp, r3
 8005c5c:	f04f 0c00 	mov.w	ip, #0
 8005c60:	46d9      	mov	r9, fp
 8005c62:	46e2      	mov	sl, ip
 8005c64:	eb19 0309 	adds.w	r3, r9, r9
 8005c68:	eb4a 040a 	adc.w	r4, sl, sl
 8005c6c:	4699      	mov	r9, r3
 8005c6e:	46a2      	mov	sl, r4
 8005c70:	eb19 090b 	adds.w	r9, r9, fp
 8005c74:	eb4a 0a0c 	adc.w	sl, sl, ip
 8005c78:	f04f 0100 	mov.w	r1, #0
 8005c7c:	f04f 0200 	mov.w	r2, #0
 8005c80:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005c84:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8005c88:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8005c8c:	4689      	mov	r9, r1
 8005c8e:	4692      	mov	sl, r2
 8005c90:	eb1b 0509 	adds.w	r5, fp, r9
 8005c94:	eb4c 060a 	adc.w	r6, ip, sl
 8005c98:	687b      	ldr	r3, [r7, #4]
 8005c9a:	685b      	ldr	r3, [r3, #4]
 8005c9c:	4619      	mov	r1, r3
 8005c9e:	f04f 0200 	mov.w	r2, #0
 8005ca2:	f04f 0300 	mov.w	r3, #0
 8005ca6:	f04f 0400 	mov.w	r4, #0
 8005caa:	0094      	lsls	r4, r2, #2
 8005cac:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8005cb0:	008b      	lsls	r3, r1, #2
 8005cb2:	461a      	mov	r2, r3
 8005cb4:	4623      	mov	r3, r4
 8005cb6:	4628      	mov	r0, r5
 8005cb8:	4631      	mov	r1, r6
 8005cba:	f7fa ff9f 	bl	8000bfc <__aeabi_uldivmod>
 8005cbe:	4603      	mov	r3, r0
 8005cc0:	460c      	mov	r4, r1
 8005cc2:	461a      	mov	r2, r3
 8005cc4:	4b9a      	ldr	r3, [pc, #616]	; (8005f30 <UART_SetConfig+0x6f4>)
 8005cc6:	fba3 1302 	umull	r1, r3, r3, r2
 8005cca:	095b      	lsrs	r3, r3, #5
 8005ccc:	2164      	movs	r1, #100	; 0x64
 8005cce:	fb01 f303 	mul.w	r3, r1, r3
 8005cd2:	1ad3      	subs	r3, r2, r3
 8005cd4:	011b      	lsls	r3, r3, #4
 8005cd6:	3332      	adds	r3, #50	; 0x32
 8005cd8:	4a95      	ldr	r2, [pc, #596]	; (8005f30 <UART_SetConfig+0x6f4>)
 8005cda:	fba2 2303 	umull	r2, r3, r2, r3
 8005cde:	095b      	lsrs	r3, r3, #5
 8005ce0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8005ce4:	4498      	add	r8, r3
 8005ce6:	68bb      	ldr	r3, [r7, #8]
 8005ce8:	469b      	mov	fp, r3
 8005cea:	f04f 0c00 	mov.w	ip, #0
 8005cee:	46d9      	mov	r9, fp
 8005cf0:	46e2      	mov	sl, ip
 8005cf2:	eb19 0309 	adds.w	r3, r9, r9
 8005cf6:	eb4a 040a 	adc.w	r4, sl, sl
 8005cfa:	4699      	mov	r9, r3
 8005cfc:	46a2      	mov	sl, r4
 8005cfe:	eb19 090b 	adds.w	r9, r9, fp
 8005d02:	eb4a 0a0c 	adc.w	sl, sl, ip
 8005d06:	f04f 0100 	mov.w	r1, #0
 8005d0a:	f04f 0200 	mov.w	r2, #0
 8005d0e:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005d12:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8005d16:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8005d1a:	4689      	mov	r9, r1
 8005d1c:	4692      	mov	sl, r2
 8005d1e:	eb1b 0509 	adds.w	r5, fp, r9
 8005d22:	eb4c 060a 	adc.w	r6, ip, sl
 8005d26:	687b      	ldr	r3, [r7, #4]
 8005d28:	685b      	ldr	r3, [r3, #4]
 8005d2a:	4619      	mov	r1, r3
 8005d2c:	f04f 0200 	mov.w	r2, #0
 8005d30:	f04f 0300 	mov.w	r3, #0
 8005d34:	f04f 0400 	mov.w	r4, #0
 8005d38:	0094      	lsls	r4, r2, #2
 8005d3a:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8005d3e:	008b      	lsls	r3, r1, #2
 8005d40:	461a      	mov	r2, r3
 8005d42:	4623      	mov	r3, r4
 8005d44:	4628      	mov	r0, r5
 8005d46:	4631      	mov	r1, r6
 8005d48:	f7fa ff58 	bl	8000bfc <__aeabi_uldivmod>
 8005d4c:	4603      	mov	r3, r0
 8005d4e:	460c      	mov	r4, r1
 8005d50:	461a      	mov	r2, r3
 8005d52:	4b77      	ldr	r3, [pc, #476]	; (8005f30 <UART_SetConfig+0x6f4>)
 8005d54:	fba3 1302 	umull	r1, r3, r3, r2
 8005d58:	095b      	lsrs	r3, r3, #5
 8005d5a:	2164      	movs	r1, #100	; 0x64
 8005d5c:	fb01 f303 	mul.w	r3, r1, r3
 8005d60:	1ad3      	subs	r3, r2, r3
 8005d62:	011b      	lsls	r3, r3, #4
 8005d64:	3332      	adds	r3, #50	; 0x32
 8005d66:	4a72      	ldr	r2, [pc, #456]	; (8005f30 <UART_SetConfig+0x6f4>)
 8005d68:	fba2 2303 	umull	r2, r3, r2, r3
 8005d6c:	095b      	lsrs	r3, r3, #5
 8005d6e:	f003 020f 	and.w	r2, r3, #15
 8005d72:	687b      	ldr	r3, [r7, #4]
 8005d74:	681b      	ldr	r3, [r3, #0]
 8005d76:	4442      	add	r2, r8
 8005d78:	609a      	str	r2, [r3, #8]
 8005d7a:	e0d0      	b.n	8005f1e <UART_SetConfig+0x6e2>
 8005d7c:	f7fe f930 	bl	8003fe0 <HAL_RCC_GetPCLK1Freq>
 8005d80:	60b8      	str	r0, [r7, #8]
 8005d82:	68bb      	ldr	r3, [r7, #8]
 8005d84:	469a      	mov	sl, r3
 8005d86:	f04f 0b00 	mov.w	fp, #0
 8005d8a:	46d0      	mov	r8, sl
 8005d8c:	46d9      	mov	r9, fp
 8005d8e:	eb18 0308 	adds.w	r3, r8, r8
 8005d92:	eb49 0409 	adc.w	r4, r9, r9
 8005d96:	4698      	mov	r8, r3
 8005d98:	46a1      	mov	r9, r4
 8005d9a:	eb18 080a 	adds.w	r8, r8, sl
 8005d9e:	eb49 090b 	adc.w	r9, r9, fp
 8005da2:	f04f 0100 	mov.w	r1, #0
 8005da6:	f04f 0200 	mov.w	r2, #0
 8005daa:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8005dae:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8005db2:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8005db6:	4688      	mov	r8, r1
 8005db8:	4691      	mov	r9, r2
 8005dba:	eb1a 0508 	adds.w	r5, sl, r8
 8005dbe:	eb4b 0609 	adc.w	r6, fp, r9
 8005dc2:	687b      	ldr	r3, [r7, #4]
 8005dc4:	685b      	ldr	r3, [r3, #4]
 8005dc6:	4619      	mov	r1, r3
 8005dc8:	f04f 0200 	mov.w	r2, #0
 8005dcc:	f04f 0300 	mov.w	r3, #0
 8005dd0:	f04f 0400 	mov.w	r4, #0
 8005dd4:	0094      	lsls	r4, r2, #2
 8005dd6:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8005dda:	008b      	lsls	r3, r1, #2
 8005ddc:	461a      	mov	r2, r3
 8005dde:	4623      	mov	r3, r4
 8005de0:	4628      	mov	r0, r5
 8005de2:	4631      	mov	r1, r6
 8005de4:	f7fa ff0a 	bl	8000bfc <__aeabi_uldivmod>
 8005de8:	4603      	mov	r3, r0
 8005dea:	460c      	mov	r4, r1
 8005dec:	461a      	mov	r2, r3
 8005dee:	4b50      	ldr	r3, [pc, #320]	; (8005f30 <UART_SetConfig+0x6f4>)
 8005df0:	fba3 2302 	umull	r2, r3, r3, r2
 8005df4:	095b      	lsrs	r3, r3, #5
 8005df6:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8005dfa:	68bb      	ldr	r3, [r7, #8]
 8005dfc:	469b      	mov	fp, r3
 8005dfe:	f04f 0c00 	mov.w	ip, #0
 8005e02:	46d9      	mov	r9, fp
 8005e04:	46e2      	mov	sl, ip
 8005e06:	eb19 0309 	adds.w	r3, r9, r9
 8005e0a:	eb4a 040a 	adc.w	r4, sl, sl
 8005e0e:	4699      	mov	r9, r3
 8005e10:	46a2      	mov	sl, r4
 8005e12:	eb19 090b 	adds.w	r9, r9, fp
 8005e16:	eb4a 0a0c 	adc.w	sl, sl, ip
 8005e1a:	f04f 0100 	mov.w	r1, #0
 8005e1e:	f04f 0200 	mov.w	r2, #0
 8005e22:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005e26:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8005e2a:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8005e2e:	4689      	mov	r9, r1
 8005e30:	4692      	mov	sl, r2
 8005e32:	eb1b 0509 	adds.w	r5, fp, r9
 8005e36:	eb4c 060a 	adc.w	r6, ip, sl
 8005e3a:	687b      	ldr	r3, [r7, #4]
 8005e3c:	685b      	ldr	r3, [r3, #4]
 8005e3e:	4619      	mov	r1, r3
 8005e40:	f04f 0200 	mov.w	r2, #0
 8005e44:	f04f 0300 	mov.w	r3, #0
 8005e48:	f04f 0400 	mov.w	r4, #0
 8005e4c:	0094      	lsls	r4, r2, #2
 8005e4e:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8005e52:	008b      	lsls	r3, r1, #2
 8005e54:	461a      	mov	r2, r3
 8005e56:	4623      	mov	r3, r4
 8005e58:	4628      	mov	r0, r5
 8005e5a:	4631      	mov	r1, r6
 8005e5c:	f7fa fece 	bl	8000bfc <__aeabi_uldivmod>
 8005e60:	4603      	mov	r3, r0
 8005e62:	460c      	mov	r4, r1
 8005e64:	461a      	mov	r2, r3
 8005e66:	4b32      	ldr	r3, [pc, #200]	; (8005f30 <UART_SetConfig+0x6f4>)
 8005e68:	fba3 1302 	umull	r1, r3, r3, r2
 8005e6c:	095b      	lsrs	r3, r3, #5
 8005e6e:	2164      	movs	r1, #100	; 0x64
 8005e70:	fb01 f303 	mul.w	r3, r1, r3
 8005e74:	1ad3      	subs	r3, r2, r3
 8005e76:	011b      	lsls	r3, r3, #4
 8005e78:	3332      	adds	r3, #50	; 0x32
 8005e7a:	4a2d      	ldr	r2, [pc, #180]	; (8005f30 <UART_SetConfig+0x6f4>)
 8005e7c:	fba2 2303 	umull	r2, r3, r2, r3
 8005e80:	095b      	lsrs	r3, r3, #5
 8005e82:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8005e86:	4498      	add	r8, r3
 8005e88:	68bb      	ldr	r3, [r7, #8]
 8005e8a:	469b      	mov	fp, r3
 8005e8c:	f04f 0c00 	mov.w	ip, #0
 8005e90:	46d9      	mov	r9, fp
 8005e92:	46e2      	mov	sl, ip
 8005e94:	eb19 0309 	adds.w	r3, r9, r9
 8005e98:	eb4a 040a 	adc.w	r4, sl, sl
 8005e9c:	4699      	mov	r9, r3
 8005e9e:	46a2      	mov	sl, r4
 8005ea0:	eb19 090b 	adds.w	r9, r9, fp
 8005ea4:	eb4a 0a0c 	adc.w	sl, sl, ip
 8005ea8:	f04f 0100 	mov.w	r1, #0
 8005eac:	f04f 0200 	mov.w	r2, #0
 8005eb0:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005eb4:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8005eb8:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8005ebc:	4689      	mov	r9, r1
 8005ebe:	4692      	mov	sl, r2
 8005ec0:	eb1b 0509 	adds.w	r5, fp, r9
 8005ec4:	eb4c 060a 	adc.w	r6, ip, sl
 8005ec8:	687b      	ldr	r3, [r7, #4]
 8005eca:	685b      	ldr	r3, [r3, #4]
 8005ecc:	4619      	mov	r1, r3
 8005ece:	f04f 0200 	mov.w	r2, #0
 8005ed2:	f04f 0300 	mov.w	r3, #0
 8005ed6:	f04f 0400 	mov.w	r4, #0
 8005eda:	0094      	lsls	r4, r2, #2
 8005edc:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8005ee0:	008b      	lsls	r3, r1, #2
 8005ee2:	461a      	mov	r2, r3
 8005ee4:	4623      	mov	r3, r4
 8005ee6:	4628      	mov	r0, r5
 8005ee8:	4631      	mov	r1, r6
 8005eea:	f7fa fe87 	bl	8000bfc <__aeabi_uldivmod>
 8005eee:	4603      	mov	r3, r0
 8005ef0:	460c      	mov	r4, r1
 8005ef2:	461a      	mov	r2, r3
 8005ef4:	4b0e      	ldr	r3, [pc, #56]	; (8005f30 <UART_SetConfig+0x6f4>)
 8005ef6:	fba3 1302 	umull	r1, r3, r3, r2
 8005efa:	095b      	lsrs	r3, r3, #5
 8005efc:	2164      	movs	r1, #100	; 0x64
 8005efe:	fb01 f303 	mul.w	r3, r1, r3
 8005f02:	1ad3      	subs	r3, r2, r3
 8005f04:	011b      	lsls	r3, r3, #4
 8005f06:	3332      	adds	r3, #50	; 0x32
 8005f08:	4a09      	ldr	r2, [pc, #36]	; (8005f30 <UART_SetConfig+0x6f4>)
 8005f0a:	fba2 2303 	umull	r2, r3, r2, r3
 8005f0e:	095b      	lsrs	r3, r3, #5
 8005f10:	f003 020f 	and.w	r2, r3, #15
 8005f14:	687b      	ldr	r3, [r7, #4]
 8005f16:	681b      	ldr	r3, [r3, #0]
 8005f18:	4442      	add	r2, r8
 8005f1a:	609a      	str	r2, [r3, #8]
 8005f1c:	e7ff      	b.n	8005f1e <UART_SetConfig+0x6e2>
 8005f1e:	bf00      	nop
 8005f20:	3714      	adds	r7, #20
 8005f22:	46bd      	mov	sp, r7
 8005f24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f28:	40011000 	.word	0x40011000
 8005f2c:	40011400 	.word	0x40011400
 8005f30:	51eb851f 	.word	0x51eb851f

08005f34 <__errno>:
 8005f34:	4b01      	ldr	r3, [pc, #4]	; (8005f3c <__errno+0x8>)
 8005f36:	6818      	ldr	r0, [r3, #0]
 8005f38:	4770      	bx	lr
 8005f3a:	bf00      	nop
 8005f3c:	20000014 	.word	0x20000014

08005f40 <__libc_init_array>:
 8005f40:	b570      	push	{r4, r5, r6, lr}
 8005f42:	4e0d      	ldr	r6, [pc, #52]	; (8005f78 <__libc_init_array+0x38>)
 8005f44:	4c0d      	ldr	r4, [pc, #52]	; (8005f7c <__libc_init_array+0x3c>)
 8005f46:	1ba4      	subs	r4, r4, r6
 8005f48:	10a4      	asrs	r4, r4, #2
 8005f4a:	2500      	movs	r5, #0
 8005f4c:	42a5      	cmp	r5, r4
 8005f4e:	d109      	bne.n	8005f64 <__libc_init_array+0x24>
 8005f50:	4e0b      	ldr	r6, [pc, #44]	; (8005f80 <__libc_init_array+0x40>)
 8005f52:	4c0c      	ldr	r4, [pc, #48]	; (8005f84 <__libc_init_array+0x44>)
 8005f54:	f001 fc42 	bl	80077dc <_init>
 8005f58:	1ba4      	subs	r4, r4, r6
 8005f5a:	10a4      	asrs	r4, r4, #2
 8005f5c:	2500      	movs	r5, #0
 8005f5e:	42a5      	cmp	r5, r4
 8005f60:	d105      	bne.n	8005f6e <__libc_init_array+0x2e>
 8005f62:	bd70      	pop	{r4, r5, r6, pc}
 8005f64:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005f68:	4798      	blx	r3
 8005f6a:	3501      	adds	r5, #1
 8005f6c:	e7ee      	b.n	8005f4c <__libc_init_array+0xc>
 8005f6e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005f72:	4798      	blx	r3
 8005f74:	3501      	adds	r5, #1
 8005f76:	e7f2      	b.n	8005f5e <__libc_init_array+0x1e>
 8005f78:	08007e78 	.word	0x08007e78
 8005f7c:	08007e78 	.word	0x08007e78
 8005f80:	08007e78 	.word	0x08007e78
 8005f84:	08007e7c 	.word	0x08007e7c

08005f88 <free>:
 8005f88:	4b02      	ldr	r3, [pc, #8]	; (8005f94 <free+0xc>)
 8005f8a:	4601      	mov	r1, r0
 8005f8c:	6818      	ldr	r0, [r3, #0]
 8005f8e:	f000 b817 	b.w	8005fc0 <_free_r>
 8005f92:	bf00      	nop
 8005f94:	20000014 	.word	0x20000014

08005f98 <memcpy>:
 8005f98:	b510      	push	{r4, lr}
 8005f9a:	1e43      	subs	r3, r0, #1
 8005f9c:	440a      	add	r2, r1
 8005f9e:	4291      	cmp	r1, r2
 8005fa0:	d100      	bne.n	8005fa4 <memcpy+0xc>
 8005fa2:	bd10      	pop	{r4, pc}
 8005fa4:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005fa8:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005fac:	e7f7      	b.n	8005f9e <memcpy+0x6>

08005fae <memset>:
 8005fae:	4402      	add	r2, r0
 8005fb0:	4603      	mov	r3, r0
 8005fb2:	4293      	cmp	r3, r2
 8005fb4:	d100      	bne.n	8005fb8 <memset+0xa>
 8005fb6:	4770      	bx	lr
 8005fb8:	f803 1b01 	strb.w	r1, [r3], #1
 8005fbc:	e7f9      	b.n	8005fb2 <memset+0x4>
	...

08005fc0 <_free_r>:
 8005fc0:	b538      	push	{r3, r4, r5, lr}
 8005fc2:	4605      	mov	r5, r0
 8005fc4:	2900      	cmp	r1, #0
 8005fc6:	d045      	beq.n	8006054 <_free_r+0x94>
 8005fc8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005fcc:	1f0c      	subs	r4, r1, #4
 8005fce:	2b00      	cmp	r3, #0
 8005fd0:	bfb8      	it	lt
 8005fd2:	18e4      	addlt	r4, r4, r3
 8005fd4:	f000 f8cc 	bl	8006170 <__malloc_lock>
 8005fd8:	4a1f      	ldr	r2, [pc, #124]	; (8006058 <_free_r+0x98>)
 8005fda:	6813      	ldr	r3, [r2, #0]
 8005fdc:	4610      	mov	r0, r2
 8005fde:	b933      	cbnz	r3, 8005fee <_free_r+0x2e>
 8005fe0:	6063      	str	r3, [r4, #4]
 8005fe2:	6014      	str	r4, [r2, #0]
 8005fe4:	4628      	mov	r0, r5
 8005fe6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005fea:	f000 b8c2 	b.w	8006172 <__malloc_unlock>
 8005fee:	42a3      	cmp	r3, r4
 8005ff0:	d90c      	bls.n	800600c <_free_r+0x4c>
 8005ff2:	6821      	ldr	r1, [r4, #0]
 8005ff4:	1862      	adds	r2, r4, r1
 8005ff6:	4293      	cmp	r3, r2
 8005ff8:	bf04      	itt	eq
 8005ffa:	681a      	ldreq	r2, [r3, #0]
 8005ffc:	685b      	ldreq	r3, [r3, #4]
 8005ffe:	6063      	str	r3, [r4, #4]
 8006000:	bf04      	itt	eq
 8006002:	1852      	addeq	r2, r2, r1
 8006004:	6022      	streq	r2, [r4, #0]
 8006006:	6004      	str	r4, [r0, #0]
 8006008:	e7ec      	b.n	8005fe4 <_free_r+0x24>
 800600a:	4613      	mov	r3, r2
 800600c:	685a      	ldr	r2, [r3, #4]
 800600e:	b10a      	cbz	r2, 8006014 <_free_r+0x54>
 8006010:	42a2      	cmp	r2, r4
 8006012:	d9fa      	bls.n	800600a <_free_r+0x4a>
 8006014:	6819      	ldr	r1, [r3, #0]
 8006016:	1858      	adds	r0, r3, r1
 8006018:	42a0      	cmp	r0, r4
 800601a:	d10b      	bne.n	8006034 <_free_r+0x74>
 800601c:	6820      	ldr	r0, [r4, #0]
 800601e:	4401      	add	r1, r0
 8006020:	1858      	adds	r0, r3, r1
 8006022:	4282      	cmp	r2, r0
 8006024:	6019      	str	r1, [r3, #0]
 8006026:	d1dd      	bne.n	8005fe4 <_free_r+0x24>
 8006028:	6810      	ldr	r0, [r2, #0]
 800602a:	6852      	ldr	r2, [r2, #4]
 800602c:	605a      	str	r2, [r3, #4]
 800602e:	4401      	add	r1, r0
 8006030:	6019      	str	r1, [r3, #0]
 8006032:	e7d7      	b.n	8005fe4 <_free_r+0x24>
 8006034:	d902      	bls.n	800603c <_free_r+0x7c>
 8006036:	230c      	movs	r3, #12
 8006038:	602b      	str	r3, [r5, #0]
 800603a:	e7d3      	b.n	8005fe4 <_free_r+0x24>
 800603c:	6820      	ldr	r0, [r4, #0]
 800603e:	1821      	adds	r1, r4, r0
 8006040:	428a      	cmp	r2, r1
 8006042:	bf04      	itt	eq
 8006044:	6811      	ldreq	r1, [r2, #0]
 8006046:	6852      	ldreq	r2, [r2, #4]
 8006048:	6062      	str	r2, [r4, #4]
 800604a:	bf04      	itt	eq
 800604c:	1809      	addeq	r1, r1, r0
 800604e:	6021      	streq	r1, [r4, #0]
 8006050:	605c      	str	r4, [r3, #4]
 8006052:	e7c7      	b.n	8005fe4 <_free_r+0x24>
 8006054:	bd38      	pop	{r3, r4, r5, pc}
 8006056:	bf00      	nop
 8006058:	200000a8 	.word	0x200000a8

0800605c <_malloc_r>:
 800605c:	b570      	push	{r4, r5, r6, lr}
 800605e:	1ccd      	adds	r5, r1, #3
 8006060:	f025 0503 	bic.w	r5, r5, #3
 8006064:	3508      	adds	r5, #8
 8006066:	2d0c      	cmp	r5, #12
 8006068:	bf38      	it	cc
 800606a:	250c      	movcc	r5, #12
 800606c:	2d00      	cmp	r5, #0
 800606e:	4606      	mov	r6, r0
 8006070:	db01      	blt.n	8006076 <_malloc_r+0x1a>
 8006072:	42a9      	cmp	r1, r5
 8006074:	d903      	bls.n	800607e <_malloc_r+0x22>
 8006076:	230c      	movs	r3, #12
 8006078:	6033      	str	r3, [r6, #0]
 800607a:	2000      	movs	r0, #0
 800607c:	bd70      	pop	{r4, r5, r6, pc}
 800607e:	f000 f877 	bl	8006170 <__malloc_lock>
 8006082:	4a21      	ldr	r2, [pc, #132]	; (8006108 <_malloc_r+0xac>)
 8006084:	6814      	ldr	r4, [r2, #0]
 8006086:	4621      	mov	r1, r4
 8006088:	b991      	cbnz	r1, 80060b0 <_malloc_r+0x54>
 800608a:	4c20      	ldr	r4, [pc, #128]	; (800610c <_malloc_r+0xb0>)
 800608c:	6823      	ldr	r3, [r4, #0]
 800608e:	b91b      	cbnz	r3, 8006098 <_malloc_r+0x3c>
 8006090:	4630      	mov	r0, r6
 8006092:	f000 f83d 	bl	8006110 <_sbrk_r>
 8006096:	6020      	str	r0, [r4, #0]
 8006098:	4629      	mov	r1, r5
 800609a:	4630      	mov	r0, r6
 800609c:	f000 f838 	bl	8006110 <_sbrk_r>
 80060a0:	1c43      	adds	r3, r0, #1
 80060a2:	d124      	bne.n	80060ee <_malloc_r+0x92>
 80060a4:	230c      	movs	r3, #12
 80060a6:	6033      	str	r3, [r6, #0]
 80060a8:	4630      	mov	r0, r6
 80060aa:	f000 f862 	bl	8006172 <__malloc_unlock>
 80060ae:	e7e4      	b.n	800607a <_malloc_r+0x1e>
 80060b0:	680b      	ldr	r3, [r1, #0]
 80060b2:	1b5b      	subs	r3, r3, r5
 80060b4:	d418      	bmi.n	80060e8 <_malloc_r+0x8c>
 80060b6:	2b0b      	cmp	r3, #11
 80060b8:	d90f      	bls.n	80060da <_malloc_r+0x7e>
 80060ba:	600b      	str	r3, [r1, #0]
 80060bc:	50cd      	str	r5, [r1, r3]
 80060be:	18cc      	adds	r4, r1, r3
 80060c0:	4630      	mov	r0, r6
 80060c2:	f000 f856 	bl	8006172 <__malloc_unlock>
 80060c6:	f104 000b 	add.w	r0, r4, #11
 80060ca:	1d23      	adds	r3, r4, #4
 80060cc:	f020 0007 	bic.w	r0, r0, #7
 80060d0:	1ac3      	subs	r3, r0, r3
 80060d2:	d0d3      	beq.n	800607c <_malloc_r+0x20>
 80060d4:	425a      	negs	r2, r3
 80060d6:	50e2      	str	r2, [r4, r3]
 80060d8:	e7d0      	b.n	800607c <_malloc_r+0x20>
 80060da:	428c      	cmp	r4, r1
 80060dc:	684b      	ldr	r3, [r1, #4]
 80060de:	bf16      	itet	ne
 80060e0:	6063      	strne	r3, [r4, #4]
 80060e2:	6013      	streq	r3, [r2, #0]
 80060e4:	460c      	movne	r4, r1
 80060e6:	e7eb      	b.n	80060c0 <_malloc_r+0x64>
 80060e8:	460c      	mov	r4, r1
 80060ea:	6849      	ldr	r1, [r1, #4]
 80060ec:	e7cc      	b.n	8006088 <_malloc_r+0x2c>
 80060ee:	1cc4      	adds	r4, r0, #3
 80060f0:	f024 0403 	bic.w	r4, r4, #3
 80060f4:	42a0      	cmp	r0, r4
 80060f6:	d005      	beq.n	8006104 <_malloc_r+0xa8>
 80060f8:	1a21      	subs	r1, r4, r0
 80060fa:	4630      	mov	r0, r6
 80060fc:	f000 f808 	bl	8006110 <_sbrk_r>
 8006100:	3001      	adds	r0, #1
 8006102:	d0cf      	beq.n	80060a4 <_malloc_r+0x48>
 8006104:	6025      	str	r5, [r4, #0]
 8006106:	e7db      	b.n	80060c0 <_malloc_r+0x64>
 8006108:	200000a8 	.word	0x200000a8
 800610c:	200000ac 	.word	0x200000ac

08006110 <_sbrk_r>:
 8006110:	b538      	push	{r3, r4, r5, lr}
 8006112:	4c06      	ldr	r4, [pc, #24]	; (800612c <_sbrk_r+0x1c>)
 8006114:	2300      	movs	r3, #0
 8006116:	4605      	mov	r5, r0
 8006118:	4608      	mov	r0, r1
 800611a:	6023      	str	r3, [r4, #0]
 800611c:	f7fc fe34 	bl	8002d88 <_sbrk>
 8006120:	1c43      	adds	r3, r0, #1
 8006122:	d102      	bne.n	800612a <_sbrk_r+0x1a>
 8006124:	6823      	ldr	r3, [r4, #0]
 8006126:	b103      	cbz	r3, 800612a <_sbrk_r+0x1a>
 8006128:	602b      	str	r3, [r5, #0]
 800612a:	bd38      	pop	{r3, r4, r5, pc}
 800612c:	20004da4 	.word	0x20004da4

08006130 <siprintf>:
 8006130:	b40e      	push	{r1, r2, r3}
 8006132:	b500      	push	{lr}
 8006134:	b09c      	sub	sp, #112	; 0x70
 8006136:	ab1d      	add	r3, sp, #116	; 0x74
 8006138:	9002      	str	r0, [sp, #8]
 800613a:	9006      	str	r0, [sp, #24]
 800613c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8006140:	4809      	ldr	r0, [pc, #36]	; (8006168 <siprintf+0x38>)
 8006142:	9107      	str	r1, [sp, #28]
 8006144:	9104      	str	r1, [sp, #16]
 8006146:	4909      	ldr	r1, [pc, #36]	; (800616c <siprintf+0x3c>)
 8006148:	f853 2b04 	ldr.w	r2, [r3], #4
 800614c:	9105      	str	r1, [sp, #20]
 800614e:	6800      	ldr	r0, [r0, #0]
 8006150:	9301      	str	r3, [sp, #4]
 8006152:	a902      	add	r1, sp, #8
 8006154:	f000 f868 	bl	8006228 <_svfiprintf_r>
 8006158:	9b02      	ldr	r3, [sp, #8]
 800615a:	2200      	movs	r2, #0
 800615c:	701a      	strb	r2, [r3, #0]
 800615e:	b01c      	add	sp, #112	; 0x70
 8006160:	f85d eb04 	ldr.w	lr, [sp], #4
 8006164:	b003      	add	sp, #12
 8006166:	4770      	bx	lr
 8006168:	20000014 	.word	0x20000014
 800616c:	ffff0208 	.word	0xffff0208

08006170 <__malloc_lock>:
 8006170:	4770      	bx	lr

08006172 <__malloc_unlock>:
 8006172:	4770      	bx	lr

08006174 <__ssputs_r>:
 8006174:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006178:	688e      	ldr	r6, [r1, #8]
 800617a:	429e      	cmp	r6, r3
 800617c:	4682      	mov	sl, r0
 800617e:	460c      	mov	r4, r1
 8006180:	4690      	mov	r8, r2
 8006182:	4699      	mov	r9, r3
 8006184:	d837      	bhi.n	80061f6 <__ssputs_r+0x82>
 8006186:	898a      	ldrh	r2, [r1, #12]
 8006188:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800618c:	d031      	beq.n	80061f2 <__ssputs_r+0x7e>
 800618e:	6825      	ldr	r5, [r4, #0]
 8006190:	6909      	ldr	r1, [r1, #16]
 8006192:	1a6f      	subs	r7, r5, r1
 8006194:	6965      	ldr	r5, [r4, #20]
 8006196:	2302      	movs	r3, #2
 8006198:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800619c:	fb95 f5f3 	sdiv	r5, r5, r3
 80061a0:	f109 0301 	add.w	r3, r9, #1
 80061a4:	443b      	add	r3, r7
 80061a6:	429d      	cmp	r5, r3
 80061a8:	bf38      	it	cc
 80061aa:	461d      	movcc	r5, r3
 80061ac:	0553      	lsls	r3, r2, #21
 80061ae:	d530      	bpl.n	8006212 <__ssputs_r+0x9e>
 80061b0:	4629      	mov	r1, r5
 80061b2:	f7ff ff53 	bl	800605c <_malloc_r>
 80061b6:	4606      	mov	r6, r0
 80061b8:	b950      	cbnz	r0, 80061d0 <__ssputs_r+0x5c>
 80061ba:	230c      	movs	r3, #12
 80061bc:	f8ca 3000 	str.w	r3, [sl]
 80061c0:	89a3      	ldrh	r3, [r4, #12]
 80061c2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80061c6:	81a3      	strh	r3, [r4, #12]
 80061c8:	f04f 30ff 	mov.w	r0, #4294967295
 80061cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80061d0:	463a      	mov	r2, r7
 80061d2:	6921      	ldr	r1, [r4, #16]
 80061d4:	f7ff fee0 	bl	8005f98 <memcpy>
 80061d8:	89a3      	ldrh	r3, [r4, #12]
 80061da:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80061de:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80061e2:	81a3      	strh	r3, [r4, #12]
 80061e4:	6126      	str	r6, [r4, #16]
 80061e6:	6165      	str	r5, [r4, #20]
 80061e8:	443e      	add	r6, r7
 80061ea:	1bed      	subs	r5, r5, r7
 80061ec:	6026      	str	r6, [r4, #0]
 80061ee:	60a5      	str	r5, [r4, #8]
 80061f0:	464e      	mov	r6, r9
 80061f2:	454e      	cmp	r6, r9
 80061f4:	d900      	bls.n	80061f8 <__ssputs_r+0x84>
 80061f6:	464e      	mov	r6, r9
 80061f8:	4632      	mov	r2, r6
 80061fa:	4641      	mov	r1, r8
 80061fc:	6820      	ldr	r0, [r4, #0]
 80061fe:	f000 fa93 	bl	8006728 <memmove>
 8006202:	68a3      	ldr	r3, [r4, #8]
 8006204:	1b9b      	subs	r3, r3, r6
 8006206:	60a3      	str	r3, [r4, #8]
 8006208:	6823      	ldr	r3, [r4, #0]
 800620a:	441e      	add	r6, r3
 800620c:	6026      	str	r6, [r4, #0]
 800620e:	2000      	movs	r0, #0
 8006210:	e7dc      	b.n	80061cc <__ssputs_r+0x58>
 8006212:	462a      	mov	r2, r5
 8006214:	f000 faa1 	bl	800675a <_realloc_r>
 8006218:	4606      	mov	r6, r0
 800621a:	2800      	cmp	r0, #0
 800621c:	d1e2      	bne.n	80061e4 <__ssputs_r+0x70>
 800621e:	6921      	ldr	r1, [r4, #16]
 8006220:	4650      	mov	r0, sl
 8006222:	f7ff fecd 	bl	8005fc0 <_free_r>
 8006226:	e7c8      	b.n	80061ba <__ssputs_r+0x46>

08006228 <_svfiprintf_r>:
 8006228:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800622c:	461d      	mov	r5, r3
 800622e:	898b      	ldrh	r3, [r1, #12]
 8006230:	061f      	lsls	r7, r3, #24
 8006232:	b09d      	sub	sp, #116	; 0x74
 8006234:	4680      	mov	r8, r0
 8006236:	460c      	mov	r4, r1
 8006238:	4616      	mov	r6, r2
 800623a:	d50f      	bpl.n	800625c <_svfiprintf_r+0x34>
 800623c:	690b      	ldr	r3, [r1, #16]
 800623e:	b96b      	cbnz	r3, 800625c <_svfiprintf_r+0x34>
 8006240:	2140      	movs	r1, #64	; 0x40
 8006242:	f7ff ff0b 	bl	800605c <_malloc_r>
 8006246:	6020      	str	r0, [r4, #0]
 8006248:	6120      	str	r0, [r4, #16]
 800624a:	b928      	cbnz	r0, 8006258 <_svfiprintf_r+0x30>
 800624c:	230c      	movs	r3, #12
 800624e:	f8c8 3000 	str.w	r3, [r8]
 8006252:	f04f 30ff 	mov.w	r0, #4294967295
 8006256:	e0c8      	b.n	80063ea <_svfiprintf_r+0x1c2>
 8006258:	2340      	movs	r3, #64	; 0x40
 800625a:	6163      	str	r3, [r4, #20]
 800625c:	2300      	movs	r3, #0
 800625e:	9309      	str	r3, [sp, #36]	; 0x24
 8006260:	2320      	movs	r3, #32
 8006262:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006266:	2330      	movs	r3, #48	; 0x30
 8006268:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800626c:	9503      	str	r5, [sp, #12]
 800626e:	f04f 0b01 	mov.w	fp, #1
 8006272:	4637      	mov	r7, r6
 8006274:	463d      	mov	r5, r7
 8006276:	f815 3b01 	ldrb.w	r3, [r5], #1
 800627a:	b10b      	cbz	r3, 8006280 <_svfiprintf_r+0x58>
 800627c:	2b25      	cmp	r3, #37	; 0x25
 800627e:	d13e      	bne.n	80062fe <_svfiprintf_r+0xd6>
 8006280:	ebb7 0a06 	subs.w	sl, r7, r6
 8006284:	d00b      	beq.n	800629e <_svfiprintf_r+0x76>
 8006286:	4653      	mov	r3, sl
 8006288:	4632      	mov	r2, r6
 800628a:	4621      	mov	r1, r4
 800628c:	4640      	mov	r0, r8
 800628e:	f7ff ff71 	bl	8006174 <__ssputs_r>
 8006292:	3001      	adds	r0, #1
 8006294:	f000 80a4 	beq.w	80063e0 <_svfiprintf_r+0x1b8>
 8006298:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800629a:	4453      	add	r3, sl
 800629c:	9309      	str	r3, [sp, #36]	; 0x24
 800629e:	783b      	ldrb	r3, [r7, #0]
 80062a0:	2b00      	cmp	r3, #0
 80062a2:	f000 809d 	beq.w	80063e0 <_svfiprintf_r+0x1b8>
 80062a6:	2300      	movs	r3, #0
 80062a8:	f04f 32ff 	mov.w	r2, #4294967295
 80062ac:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80062b0:	9304      	str	r3, [sp, #16]
 80062b2:	9307      	str	r3, [sp, #28]
 80062b4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80062b8:	931a      	str	r3, [sp, #104]	; 0x68
 80062ba:	462f      	mov	r7, r5
 80062bc:	2205      	movs	r2, #5
 80062be:	f817 1b01 	ldrb.w	r1, [r7], #1
 80062c2:	4850      	ldr	r0, [pc, #320]	; (8006404 <_svfiprintf_r+0x1dc>)
 80062c4:	f7f9 ffac 	bl	8000220 <memchr>
 80062c8:	9b04      	ldr	r3, [sp, #16]
 80062ca:	b9d0      	cbnz	r0, 8006302 <_svfiprintf_r+0xda>
 80062cc:	06d9      	lsls	r1, r3, #27
 80062ce:	bf44      	itt	mi
 80062d0:	2220      	movmi	r2, #32
 80062d2:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80062d6:	071a      	lsls	r2, r3, #28
 80062d8:	bf44      	itt	mi
 80062da:	222b      	movmi	r2, #43	; 0x2b
 80062dc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80062e0:	782a      	ldrb	r2, [r5, #0]
 80062e2:	2a2a      	cmp	r2, #42	; 0x2a
 80062e4:	d015      	beq.n	8006312 <_svfiprintf_r+0xea>
 80062e6:	9a07      	ldr	r2, [sp, #28]
 80062e8:	462f      	mov	r7, r5
 80062ea:	2000      	movs	r0, #0
 80062ec:	250a      	movs	r5, #10
 80062ee:	4639      	mov	r1, r7
 80062f0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80062f4:	3b30      	subs	r3, #48	; 0x30
 80062f6:	2b09      	cmp	r3, #9
 80062f8:	d94d      	bls.n	8006396 <_svfiprintf_r+0x16e>
 80062fa:	b1b8      	cbz	r0, 800632c <_svfiprintf_r+0x104>
 80062fc:	e00f      	b.n	800631e <_svfiprintf_r+0xf6>
 80062fe:	462f      	mov	r7, r5
 8006300:	e7b8      	b.n	8006274 <_svfiprintf_r+0x4c>
 8006302:	4a40      	ldr	r2, [pc, #256]	; (8006404 <_svfiprintf_r+0x1dc>)
 8006304:	1a80      	subs	r0, r0, r2
 8006306:	fa0b f000 	lsl.w	r0, fp, r0
 800630a:	4318      	orrs	r0, r3
 800630c:	9004      	str	r0, [sp, #16]
 800630e:	463d      	mov	r5, r7
 8006310:	e7d3      	b.n	80062ba <_svfiprintf_r+0x92>
 8006312:	9a03      	ldr	r2, [sp, #12]
 8006314:	1d11      	adds	r1, r2, #4
 8006316:	6812      	ldr	r2, [r2, #0]
 8006318:	9103      	str	r1, [sp, #12]
 800631a:	2a00      	cmp	r2, #0
 800631c:	db01      	blt.n	8006322 <_svfiprintf_r+0xfa>
 800631e:	9207      	str	r2, [sp, #28]
 8006320:	e004      	b.n	800632c <_svfiprintf_r+0x104>
 8006322:	4252      	negs	r2, r2
 8006324:	f043 0302 	orr.w	r3, r3, #2
 8006328:	9207      	str	r2, [sp, #28]
 800632a:	9304      	str	r3, [sp, #16]
 800632c:	783b      	ldrb	r3, [r7, #0]
 800632e:	2b2e      	cmp	r3, #46	; 0x2e
 8006330:	d10c      	bne.n	800634c <_svfiprintf_r+0x124>
 8006332:	787b      	ldrb	r3, [r7, #1]
 8006334:	2b2a      	cmp	r3, #42	; 0x2a
 8006336:	d133      	bne.n	80063a0 <_svfiprintf_r+0x178>
 8006338:	9b03      	ldr	r3, [sp, #12]
 800633a:	1d1a      	adds	r2, r3, #4
 800633c:	681b      	ldr	r3, [r3, #0]
 800633e:	9203      	str	r2, [sp, #12]
 8006340:	2b00      	cmp	r3, #0
 8006342:	bfb8      	it	lt
 8006344:	f04f 33ff 	movlt.w	r3, #4294967295
 8006348:	3702      	adds	r7, #2
 800634a:	9305      	str	r3, [sp, #20]
 800634c:	4d2e      	ldr	r5, [pc, #184]	; (8006408 <_svfiprintf_r+0x1e0>)
 800634e:	7839      	ldrb	r1, [r7, #0]
 8006350:	2203      	movs	r2, #3
 8006352:	4628      	mov	r0, r5
 8006354:	f7f9 ff64 	bl	8000220 <memchr>
 8006358:	b138      	cbz	r0, 800636a <_svfiprintf_r+0x142>
 800635a:	2340      	movs	r3, #64	; 0x40
 800635c:	1b40      	subs	r0, r0, r5
 800635e:	fa03 f000 	lsl.w	r0, r3, r0
 8006362:	9b04      	ldr	r3, [sp, #16]
 8006364:	4303      	orrs	r3, r0
 8006366:	3701      	adds	r7, #1
 8006368:	9304      	str	r3, [sp, #16]
 800636a:	7839      	ldrb	r1, [r7, #0]
 800636c:	4827      	ldr	r0, [pc, #156]	; (800640c <_svfiprintf_r+0x1e4>)
 800636e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006372:	2206      	movs	r2, #6
 8006374:	1c7e      	adds	r6, r7, #1
 8006376:	f7f9 ff53 	bl	8000220 <memchr>
 800637a:	2800      	cmp	r0, #0
 800637c:	d038      	beq.n	80063f0 <_svfiprintf_r+0x1c8>
 800637e:	4b24      	ldr	r3, [pc, #144]	; (8006410 <_svfiprintf_r+0x1e8>)
 8006380:	bb13      	cbnz	r3, 80063c8 <_svfiprintf_r+0x1a0>
 8006382:	9b03      	ldr	r3, [sp, #12]
 8006384:	3307      	adds	r3, #7
 8006386:	f023 0307 	bic.w	r3, r3, #7
 800638a:	3308      	adds	r3, #8
 800638c:	9303      	str	r3, [sp, #12]
 800638e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006390:	444b      	add	r3, r9
 8006392:	9309      	str	r3, [sp, #36]	; 0x24
 8006394:	e76d      	b.n	8006272 <_svfiprintf_r+0x4a>
 8006396:	fb05 3202 	mla	r2, r5, r2, r3
 800639a:	2001      	movs	r0, #1
 800639c:	460f      	mov	r7, r1
 800639e:	e7a6      	b.n	80062ee <_svfiprintf_r+0xc6>
 80063a0:	2300      	movs	r3, #0
 80063a2:	3701      	adds	r7, #1
 80063a4:	9305      	str	r3, [sp, #20]
 80063a6:	4619      	mov	r1, r3
 80063a8:	250a      	movs	r5, #10
 80063aa:	4638      	mov	r0, r7
 80063ac:	f810 2b01 	ldrb.w	r2, [r0], #1
 80063b0:	3a30      	subs	r2, #48	; 0x30
 80063b2:	2a09      	cmp	r2, #9
 80063b4:	d903      	bls.n	80063be <_svfiprintf_r+0x196>
 80063b6:	2b00      	cmp	r3, #0
 80063b8:	d0c8      	beq.n	800634c <_svfiprintf_r+0x124>
 80063ba:	9105      	str	r1, [sp, #20]
 80063bc:	e7c6      	b.n	800634c <_svfiprintf_r+0x124>
 80063be:	fb05 2101 	mla	r1, r5, r1, r2
 80063c2:	2301      	movs	r3, #1
 80063c4:	4607      	mov	r7, r0
 80063c6:	e7f0      	b.n	80063aa <_svfiprintf_r+0x182>
 80063c8:	ab03      	add	r3, sp, #12
 80063ca:	9300      	str	r3, [sp, #0]
 80063cc:	4622      	mov	r2, r4
 80063ce:	4b11      	ldr	r3, [pc, #68]	; (8006414 <_svfiprintf_r+0x1ec>)
 80063d0:	a904      	add	r1, sp, #16
 80063d2:	4640      	mov	r0, r8
 80063d4:	f3af 8000 	nop.w
 80063d8:	f1b0 3fff 	cmp.w	r0, #4294967295
 80063dc:	4681      	mov	r9, r0
 80063de:	d1d6      	bne.n	800638e <_svfiprintf_r+0x166>
 80063e0:	89a3      	ldrh	r3, [r4, #12]
 80063e2:	065b      	lsls	r3, r3, #25
 80063e4:	f53f af35 	bmi.w	8006252 <_svfiprintf_r+0x2a>
 80063e8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80063ea:	b01d      	add	sp, #116	; 0x74
 80063ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80063f0:	ab03      	add	r3, sp, #12
 80063f2:	9300      	str	r3, [sp, #0]
 80063f4:	4622      	mov	r2, r4
 80063f6:	4b07      	ldr	r3, [pc, #28]	; (8006414 <_svfiprintf_r+0x1ec>)
 80063f8:	a904      	add	r1, sp, #16
 80063fa:	4640      	mov	r0, r8
 80063fc:	f000 f882 	bl	8006504 <_printf_i>
 8006400:	e7ea      	b.n	80063d8 <_svfiprintf_r+0x1b0>
 8006402:	bf00      	nop
 8006404:	08007c60 	.word	0x08007c60
 8006408:	08007c66 	.word	0x08007c66
 800640c:	08007c6a 	.word	0x08007c6a
 8006410:	00000000 	.word	0x00000000
 8006414:	08006175 	.word	0x08006175

08006418 <_printf_common>:
 8006418:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800641c:	4691      	mov	r9, r2
 800641e:	461f      	mov	r7, r3
 8006420:	688a      	ldr	r2, [r1, #8]
 8006422:	690b      	ldr	r3, [r1, #16]
 8006424:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8006428:	4293      	cmp	r3, r2
 800642a:	bfb8      	it	lt
 800642c:	4613      	movlt	r3, r2
 800642e:	f8c9 3000 	str.w	r3, [r9]
 8006432:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8006436:	4606      	mov	r6, r0
 8006438:	460c      	mov	r4, r1
 800643a:	b112      	cbz	r2, 8006442 <_printf_common+0x2a>
 800643c:	3301      	adds	r3, #1
 800643e:	f8c9 3000 	str.w	r3, [r9]
 8006442:	6823      	ldr	r3, [r4, #0]
 8006444:	0699      	lsls	r1, r3, #26
 8006446:	bf42      	ittt	mi
 8006448:	f8d9 3000 	ldrmi.w	r3, [r9]
 800644c:	3302      	addmi	r3, #2
 800644e:	f8c9 3000 	strmi.w	r3, [r9]
 8006452:	6825      	ldr	r5, [r4, #0]
 8006454:	f015 0506 	ands.w	r5, r5, #6
 8006458:	d107      	bne.n	800646a <_printf_common+0x52>
 800645a:	f104 0a19 	add.w	sl, r4, #25
 800645e:	68e3      	ldr	r3, [r4, #12]
 8006460:	f8d9 2000 	ldr.w	r2, [r9]
 8006464:	1a9b      	subs	r3, r3, r2
 8006466:	42ab      	cmp	r3, r5
 8006468:	dc28      	bgt.n	80064bc <_printf_common+0xa4>
 800646a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 800646e:	6822      	ldr	r2, [r4, #0]
 8006470:	3300      	adds	r3, #0
 8006472:	bf18      	it	ne
 8006474:	2301      	movne	r3, #1
 8006476:	0692      	lsls	r2, r2, #26
 8006478:	d42d      	bmi.n	80064d6 <_printf_common+0xbe>
 800647a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800647e:	4639      	mov	r1, r7
 8006480:	4630      	mov	r0, r6
 8006482:	47c0      	blx	r8
 8006484:	3001      	adds	r0, #1
 8006486:	d020      	beq.n	80064ca <_printf_common+0xb2>
 8006488:	6823      	ldr	r3, [r4, #0]
 800648a:	68e5      	ldr	r5, [r4, #12]
 800648c:	f8d9 2000 	ldr.w	r2, [r9]
 8006490:	f003 0306 	and.w	r3, r3, #6
 8006494:	2b04      	cmp	r3, #4
 8006496:	bf08      	it	eq
 8006498:	1aad      	subeq	r5, r5, r2
 800649a:	68a3      	ldr	r3, [r4, #8]
 800649c:	6922      	ldr	r2, [r4, #16]
 800649e:	bf0c      	ite	eq
 80064a0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80064a4:	2500      	movne	r5, #0
 80064a6:	4293      	cmp	r3, r2
 80064a8:	bfc4      	itt	gt
 80064aa:	1a9b      	subgt	r3, r3, r2
 80064ac:	18ed      	addgt	r5, r5, r3
 80064ae:	f04f 0900 	mov.w	r9, #0
 80064b2:	341a      	adds	r4, #26
 80064b4:	454d      	cmp	r5, r9
 80064b6:	d11a      	bne.n	80064ee <_printf_common+0xd6>
 80064b8:	2000      	movs	r0, #0
 80064ba:	e008      	b.n	80064ce <_printf_common+0xb6>
 80064bc:	2301      	movs	r3, #1
 80064be:	4652      	mov	r2, sl
 80064c0:	4639      	mov	r1, r7
 80064c2:	4630      	mov	r0, r6
 80064c4:	47c0      	blx	r8
 80064c6:	3001      	adds	r0, #1
 80064c8:	d103      	bne.n	80064d2 <_printf_common+0xba>
 80064ca:	f04f 30ff 	mov.w	r0, #4294967295
 80064ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80064d2:	3501      	adds	r5, #1
 80064d4:	e7c3      	b.n	800645e <_printf_common+0x46>
 80064d6:	18e1      	adds	r1, r4, r3
 80064d8:	1c5a      	adds	r2, r3, #1
 80064da:	2030      	movs	r0, #48	; 0x30
 80064dc:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80064e0:	4422      	add	r2, r4
 80064e2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80064e6:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80064ea:	3302      	adds	r3, #2
 80064ec:	e7c5      	b.n	800647a <_printf_common+0x62>
 80064ee:	2301      	movs	r3, #1
 80064f0:	4622      	mov	r2, r4
 80064f2:	4639      	mov	r1, r7
 80064f4:	4630      	mov	r0, r6
 80064f6:	47c0      	blx	r8
 80064f8:	3001      	adds	r0, #1
 80064fa:	d0e6      	beq.n	80064ca <_printf_common+0xb2>
 80064fc:	f109 0901 	add.w	r9, r9, #1
 8006500:	e7d8      	b.n	80064b4 <_printf_common+0x9c>
	...

08006504 <_printf_i>:
 8006504:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006508:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 800650c:	460c      	mov	r4, r1
 800650e:	7e09      	ldrb	r1, [r1, #24]
 8006510:	b085      	sub	sp, #20
 8006512:	296e      	cmp	r1, #110	; 0x6e
 8006514:	4617      	mov	r7, r2
 8006516:	4606      	mov	r6, r0
 8006518:	4698      	mov	r8, r3
 800651a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800651c:	f000 80b3 	beq.w	8006686 <_printf_i+0x182>
 8006520:	d822      	bhi.n	8006568 <_printf_i+0x64>
 8006522:	2963      	cmp	r1, #99	; 0x63
 8006524:	d036      	beq.n	8006594 <_printf_i+0x90>
 8006526:	d80a      	bhi.n	800653e <_printf_i+0x3a>
 8006528:	2900      	cmp	r1, #0
 800652a:	f000 80b9 	beq.w	80066a0 <_printf_i+0x19c>
 800652e:	2958      	cmp	r1, #88	; 0x58
 8006530:	f000 8083 	beq.w	800663a <_printf_i+0x136>
 8006534:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006538:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 800653c:	e032      	b.n	80065a4 <_printf_i+0xa0>
 800653e:	2964      	cmp	r1, #100	; 0x64
 8006540:	d001      	beq.n	8006546 <_printf_i+0x42>
 8006542:	2969      	cmp	r1, #105	; 0x69
 8006544:	d1f6      	bne.n	8006534 <_printf_i+0x30>
 8006546:	6820      	ldr	r0, [r4, #0]
 8006548:	6813      	ldr	r3, [r2, #0]
 800654a:	0605      	lsls	r5, r0, #24
 800654c:	f103 0104 	add.w	r1, r3, #4
 8006550:	d52a      	bpl.n	80065a8 <_printf_i+0xa4>
 8006552:	681b      	ldr	r3, [r3, #0]
 8006554:	6011      	str	r1, [r2, #0]
 8006556:	2b00      	cmp	r3, #0
 8006558:	da03      	bge.n	8006562 <_printf_i+0x5e>
 800655a:	222d      	movs	r2, #45	; 0x2d
 800655c:	425b      	negs	r3, r3
 800655e:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8006562:	486f      	ldr	r0, [pc, #444]	; (8006720 <_printf_i+0x21c>)
 8006564:	220a      	movs	r2, #10
 8006566:	e039      	b.n	80065dc <_printf_i+0xd8>
 8006568:	2973      	cmp	r1, #115	; 0x73
 800656a:	f000 809d 	beq.w	80066a8 <_printf_i+0x1a4>
 800656e:	d808      	bhi.n	8006582 <_printf_i+0x7e>
 8006570:	296f      	cmp	r1, #111	; 0x6f
 8006572:	d020      	beq.n	80065b6 <_printf_i+0xb2>
 8006574:	2970      	cmp	r1, #112	; 0x70
 8006576:	d1dd      	bne.n	8006534 <_printf_i+0x30>
 8006578:	6823      	ldr	r3, [r4, #0]
 800657a:	f043 0320 	orr.w	r3, r3, #32
 800657e:	6023      	str	r3, [r4, #0]
 8006580:	e003      	b.n	800658a <_printf_i+0x86>
 8006582:	2975      	cmp	r1, #117	; 0x75
 8006584:	d017      	beq.n	80065b6 <_printf_i+0xb2>
 8006586:	2978      	cmp	r1, #120	; 0x78
 8006588:	d1d4      	bne.n	8006534 <_printf_i+0x30>
 800658a:	2378      	movs	r3, #120	; 0x78
 800658c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8006590:	4864      	ldr	r0, [pc, #400]	; (8006724 <_printf_i+0x220>)
 8006592:	e055      	b.n	8006640 <_printf_i+0x13c>
 8006594:	6813      	ldr	r3, [r2, #0]
 8006596:	1d19      	adds	r1, r3, #4
 8006598:	681b      	ldr	r3, [r3, #0]
 800659a:	6011      	str	r1, [r2, #0]
 800659c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80065a0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80065a4:	2301      	movs	r3, #1
 80065a6:	e08c      	b.n	80066c2 <_printf_i+0x1be>
 80065a8:	681b      	ldr	r3, [r3, #0]
 80065aa:	6011      	str	r1, [r2, #0]
 80065ac:	f010 0f40 	tst.w	r0, #64	; 0x40
 80065b0:	bf18      	it	ne
 80065b2:	b21b      	sxthne	r3, r3
 80065b4:	e7cf      	b.n	8006556 <_printf_i+0x52>
 80065b6:	6813      	ldr	r3, [r2, #0]
 80065b8:	6825      	ldr	r5, [r4, #0]
 80065ba:	1d18      	adds	r0, r3, #4
 80065bc:	6010      	str	r0, [r2, #0]
 80065be:	0628      	lsls	r0, r5, #24
 80065c0:	d501      	bpl.n	80065c6 <_printf_i+0xc2>
 80065c2:	681b      	ldr	r3, [r3, #0]
 80065c4:	e002      	b.n	80065cc <_printf_i+0xc8>
 80065c6:	0668      	lsls	r0, r5, #25
 80065c8:	d5fb      	bpl.n	80065c2 <_printf_i+0xbe>
 80065ca:	881b      	ldrh	r3, [r3, #0]
 80065cc:	4854      	ldr	r0, [pc, #336]	; (8006720 <_printf_i+0x21c>)
 80065ce:	296f      	cmp	r1, #111	; 0x6f
 80065d0:	bf14      	ite	ne
 80065d2:	220a      	movne	r2, #10
 80065d4:	2208      	moveq	r2, #8
 80065d6:	2100      	movs	r1, #0
 80065d8:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80065dc:	6865      	ldr	r5, [r4, #4]
 80065de:	60a5      	str	r5, [r4, #8]
 80065e0:	2d00      	cmp	r5, #0
 80065e2:	f2c0 8095 	blt.w	8006710 <_printf_i+0x20c>
 80065e6:	6821      	ldr	r1, [r4, #0]
 80065e8:	f021 0104 	bic.w	r1, r1, #4
 80065ec:	6021      	str	r1, [r4, #0]
 80065ee:	2b00      	cmp	r3, #0
 80065f0:	d13d      	bne.n	800666e <_printf_i+0x16a>
 80065f2:	2d00      	cmp	r5, #0
 80065f4:	f040 808e 	bne.w	8006714 <_printf_i+0x210>
 80065f8:	4665      	mov	r5, ip
 80065fa:	2a08      	cmp	r2, #8
 80065fc:	d10b      	bne.n	8006616 <_printf_i+0x112>
 80065fe:	6823      	ldr	r3, [r4, #0]
 8006600:	07db      	lsls	r3, r3, #31
 8006602:	d508      	bpl.n	8006616 <_printf_i+0x112>
 8006604:	6923      	ldr	r3, [r4, #16]
 8006606:	6862      	ldr	r2, [r4, #4]
 8006608:	429a      	cmp	r2, r3
 800660a:	bfde      	ittt	le
 800660c:	2330      	movle	r3, #48	; 0x30
 800660e:	f805 3c01 	strble.w	r3, [r5, #-1]
 8006612:	f105 35ff 	addle.w	r5, r5, #4294967295
 8006616:	ebac 0305 	sub.w	r3, ip, r5
 800661a:	6123      	str	r3, [r4, #16]
 800661c:	f8cd 8000 	str.w	r8, [sp]
 8006620:	463b      	mov	r3, r7
 8006622:	aa03      	add	r2, sp, #12
 8006624:	4621      	mov	r1, r4
 8006626:	4630      	mov	r0, r6
 8006628:	f7ff fef6 	bl	8006418 <_printf_common>
 800662c:	3001      	adds	r0, #1
 800662e:	d14d      	bne.n	80066cc <_printf_i+0x1c8>
 8006630:	f04f 30ff 	mov.w	r0, #4294967295
 8006634:	b005      	add	sp, #20
 8006636:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800663a:	4839      	ldr	r0, [pc, #228]	; (8006720 <_printf_i+0x21c>)
 800663c:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8006640:	6813      	ldr	r3, [r2, #0]
 8006642:	6821      	ldr	r1, [r4, #0]
 8006644:	1d1d      	adds	r5, r3, #4
 8006646:	681b      	ldr	r3, [r3, #0]
 8006648:	6015      	str	r5, [r2, #0]
 800664a:	060a      	lsls	r2, r1, #24
 800664c:	d50b      	bpl.n	8006666 <_printf_i+0x162>
 800664e:	07ca      	lsls	r2, r1, #31
 8006650:	bf44      	itt	mi
 8006652:	f041 0120 	orrmi.w	r1, r1, #32
 8006656:	6021      	strmi	r1, [r4, #0]
 8006658:	b91b      	cbnz	r3, 8006662 <_printf_i+0x15e>
 800665a:	6822      	ldr	r2, [r4, #0]
 800665c:	f022 0220 	bic.w	r2, r2, #32
 8006660:	6022      	str	r2, [r4, #0]
 8006662:	2210      	movs	r2, #16
 8006664:	e7b7      	b.n	80065d6 <_printf_i+0xd2>
 8006666:	064d      	lsls	r5, r1, #25
 8006668:	bf48      	it	mi
 800666a:	b29b      	uxthmi	r3, r3
 800666c:	e7ef      	b.n	800664e <_printf_i+0x14a>
 800666e:	4665      	mov	r5, ip
 8006670:	fbb3 f1f2 	udiv	r1, r3, r2
 8006674:	fb02 3311 	mls	r3, r2, r1, r3
 8006678:	5cc3      	ldrb	r3, [r0, r3]
 800667a:	f805 3d01 	strb.w	r3, [r5, #-1]!
 800667e:	460b      	mov	r3, r1
 8006680:	2900      	cmp	r1, #0
 8006682:	d1f5      	bne.n	8006670 <_printf_i+0x16c>
 8006684:	e7b9      	b.n	80065fa <_printf_i+0xf6>
 8006686:	6813      	ldr	r3, [r2, #0]
 8006688:	6825      	ldr	r5, [r4, #0]
 800668a:	6961      	ldr	r1, [r4, #20]
 800668c:	1d18      	adds	r0, r3, #4
 800668e:	6010      	str	r0, [r2, #0]
 8006690:	0628      	lsls	r0, r5, #24
 8006692:	681b      	ldr	r3, [r3, #0]
 8006694:	d501      	bpl.n	800669a <_printf_i+0x196>
 8006696:	6019      	str	r1, [r3, #0]
 8006698:	e002      	b.n	80066a0 <_printf_i+0x19c>
 800669a:	066a      	lsls	r2, r5, #25
 800669c:	d5fb      	bpl.n	8006696 <_printf_i+0x192>
 800669e:	8019      	strh	r1, [r3, #0]
 80066a0:	2300      	movs	r3, #0
 80066a2:	6123      	str	r3, [r4, #16]
 80066a4:	4665      	mov	r5, ip
 80066a6:	e7b9      	b.n	800661c <_printf_i+0x118>
 80066a8:	6813      	ldr	r3, [r2, #0]
 80066aa:	1d19      	adds	r1, r3, #4
 80066ac:	6011      	str	r1, [r2, #0]
 80066ae:	681d      	ldr	r5, [r3, #0]
 80066b0:	6862      	ldr	r2, [r4, #4]
 80066b2:	2100      	movs	r1, #0
 80066b4:	4628      	mov	r0, r5
 80066b6:	f7f9 fdb3 	bl	8000220 <memchr>
 80066ba:	b108      	cbz	r0, 80066c0 <_printf_i+0x1bc>
 80066bc:	1b40      	subs	r0, r0, r5
 80066be:	6060      	str	r0, [r4, #4]
 80066c0:	6863      	ldr	r3, [r4, #4]
 80066c2:	6123      	str	r3, [r4, #16]
 80066c4:	2300      	movs	r3, #0
 80066c6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80066ca:	e7a7      	b.n	800661c <_printf_i+0x118>
 80066cc:	6923      	ldr	r3, [r4, #16]
 80066ce:	462a      	mov	r2, r5
 80066d0:	4639      	mov	r1, r7
 80066d2:	4630      	mov	r0, r6
 80066d4:	47c0      	blx	r8
 80066d6:	3001      	adds	r0, #1
 80066d8:	d0aa      	beq.n	8006630 <_printf_i+0x12c>
 80066da:	6823      	ldr	r3, [r4, #0]
 80066dc:	079b      	lsls	r3, r3, #30
 80066de:	d413      	bmi.n	8006708 <_printf_i+0x204>
 80066e0:	68e0      	ldr	r0, [r4, #12]
 80066e2:	9b03      	ldr	r3, [sp, #12]
 80066e4:	4298      	cmp	r0, r3
 80066e6:	bfb8      	it	lt
 80066e8:	4618      	movlt	r0, r3
 80066ea:	e7a3      	b.n	8006634 <_printf_i+0x130>
 80066ec:	2301      	movs	r3, #1
 80066ee:	464a      	mov	r2, r9
 80066f0:	4639      	mov	r1, r7
 80066f2:	4630      	mov	r0, r6
 80066f4:	47c0      	blx	r8
 80066f6:	3001      	adds	r0, #1
 80066f8:	d09a      	beq.n	8006630 <_printf_i+0x12c>
 80066fa:	3501      	adds	r5, #1
 80066fc:	68e3      	ldr	r3, [r4, #12]
 80066fe:	9a03      	ldr	r2, [sp, #12]
 8006700:	1a9b      	subs	r3, r3, r2
 8006702:	42ab      	cmp	r3, r5
 8006704:	dcf2      	bgt.n	80066ec <_printf_i+0x1e8>
 8006706:	e7eb      	b.n	80066e0 <_printf_i+0x1dc>
 8006708:	2500      	movs	r5, #0
 800670a:	f104 0919 	add.w	r9, r4, #25
 800670e:	e7f5      	b.n	80066fc <_printf_i+0x1f8>
 8006710:	2b00      	cmp	r3, #0
 8006712:	d1ac      	bne.n	800666e <_printf_i+0x16a>
 8006714:	7803      	ldrb	r3, [r0, #0]
 8006716:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800671a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800671e:	e76c      	b.n	80065fa <_printf_i+0xf6>
 8006720:	08007c71 	.word	0x08007c71
 8006724:	08007c82 	.word	0x08007c82

08006728 <memmove>:
 8006728:	4288      	cmp	r0, r1
 800672a:	b510      	push	{r4, lr}
 800672c:	eb01 0302 	add.w	r3, r1, r2
 8006730:	d807      	bhi.n	8006742 <memmove+0x1a>
 8006732:	1e42      	subs	r2, r0, #1
 8006734:	4299      	cmp	r1, r3
 8006736:	d00a      	beq.n	800674e <memmove+0x26>
 8006738:	f811 4b01 	ldrb.w	r4, [r1], #1
 800673c:	f802 4f01 	strb.w	r4, [r2, #1]!
 8006740:	e7f8      	b.n	8006734 <memmove+0xc>
 8006742:	4283      	cmp	r3, r0
 8006744:	d9f5      	bls.n	8006732 <memmove+0xa>
 8006746:	1881      	adds	r1, r0, r2
 8006748:	1ad2      	subs	r2, r2, r3
 800674a:	42d3      	cmn	r3, r2
 800674c:	d100      	bne.n	8006750 <memmove+0x28>
 800674e:	bd10      	pop	{r4, pc}
 8006750:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8006754:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8006758:	e7f7      	b.n	800674a <memmove+0x22>

0800675a <_realloc_r>:
 800675a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800675c:	4607      	mov	r7, r0
 800675e:	4614      	mov	r4, r2
 8006760:	460e      	mov	r6, r1
 8006762:	b921      	cbnz	r1, 800676e <_realloc_r+0x14>
 8006764:	4611      	mov	r1, r2
 8006766:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800676a:	f7ff bc77 	b.w	800605c <_malloc_r>
 800676e:	b922      	cbnz	r2, 800677a <_realloc_r+0x20>
 8006770:	f7ff fc26 	bl	8005fc0 <_free_r>
 8006774:	4625      	mov	r5, r4
 8006776:	4628      	mov	r0, r5
 8006778:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800677a:	f000 f814 	bl	80067a6 <_malloc_usable_size_r>
 800677e:	42a0      	cmp	r0, r4
 8006780:	d20f      	bcs.n	80067a2 <_realloc_r+0x48>
 8006782:	4621      	mov	r1, r4
 8006784:	4638      	mov	r0, r7
 8006786:	f7ff fc69 	bl	800605c <_malloc_r>
 800678a:	4605      	mov	r5, r0
 800678c:	2800      	cmp	r0, #0
 800678e:	d0f2      	beq.n	8006776 <_realloc_r+0x1c>
 8006790:	4631      	mov	r1, r6
 8006792:	4622      	mov	r2, r4
 8006794:	f7ff fc00 	bl	8005f98 <memcpy>
 8006798:	4631      	mov	r1, r6
 800679a:	4638      	mov	r0, r7
 800679c:	f7ff fc10 	bl	8005fc0 <_free_r>
 80067a0:	e7e9      	b.n	8006776 <_realloc_r+0x1c>
 80067a2:	4635      	mov	r5, r6
 80067a4:	e7e7      	b.n	8006776 <_realloc_r+0x1c>

080067a6 <_malloc_usable_size_r>:
 80067a6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80067aa:	1f18      	subs	r0, r3, #4
 80067ac:	2b00      	cmp	r3, #0
 80067ae:	bfbc      	itt	lt
 80067b0:	580b      	ldrlt	r3, [r1, r0]
 80067b2:	18c0      	addlt	r0, r0, r3
 80067b4:	4770      	bx	lr
	...

080067b8 <sin>:
 80067b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80067ba:	ec51 0b10 	vmov	r0, r1, d0
 80067be:	4a20      	ldr	r2, [pc, #128]	; (8006840 <sin+0x88>)
 80067c0:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80067c4:	4293      	cmp	r3, r2
 80067c6:	dc07      	bgt.n	80067d8 <sin+0x20>
 80067c8:	ed9f 1b1b 	vldr	d1, [pc, #108]	; 8006838 <sin+0x80>
 80067cc:	2000      	movs	r0, #0
 80067ce:	f000 fe37 	bl	8007440 <__kernel_sin>
 80067d2:	ec51 0b10 	vmov	r0, r1, d0
 80067d6:	e007      	b.n	80067e8 <sin+0x30>
 80067d8:	4a1a      	ldr	r2, [pc, #104]	; (8006844 <sin+0x8c>)
 80067da:	4293      	cmp	r3, r2
 80067dc:	dd09      	ble.n	80067f2 <sin+0x3a>
 80067de:	ee10 2a10 	vmov	r2, s0
 80067e2:	460b      	mov	r3, r1
 80067e4:	f7f9 fd70 	bl	80002c8 <__aeabi_dsub>
 80067e8:	ec41 0b10 	vmov	d0, r0, r1
 80067ec:	b005      	add	sp, #20
 80067ee:	f85d fb04 	ldr.w	pc, [sp], #4
 80067f2:	4668      	mov	r0, sp
 80067f4:	f000 f828 	bl	8006848 <__ieee754_rem_pio2>
 80067f8:	f000 0003 	and.w	r0, r0, #3
 80067fc:	2801      	cmp	r0, #1
 80067fe:	ed9d 1b02 	vldr	d1, [sp, #8]
 8006802:	ed9d 0b00 	vldr	d0, [sp]
 8006806:	d004      	beq.n	8006812 <sin+0x5a>
 8006808:	2802      	cmp	r0, #2
 800680a:	d005      	beq.n	8006818 <sin+0x60>
 800680c:	b970      	cbnz	r0, 800682c <sin+0x74>
 800680e:	2001      	movs	r0, #1
 8006810:	e7dd      	b.n	80067ce <sin+0x16>
 8006812:	f000 fa0d 	bl	8006c30 <__kernel_cos>
 8006816:	e7dc      	b.n	80067d2 <sin+0x1a>
 8006818:	2001      	movs	r0, #1
 800681a:	f000 fe11 	bl	8007440 <__kernel_sin>
 800681e:	ec53 2b10 	vmov	r2, r3, d0
 8006822:	ee10 0a10 	vmov	r0, s0
 8006826:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800682a:	e7dd      	b.n	80067e8 <sin+0x30>
 800682c:	f000 fa00 	bl	8006c30 <__kernel_cos>
 8006830:	e7f5      	b.n	800681e <sin+0x66>
 8006832:	bf00      	nop
 8006834:	f3af 8000 	nop.w
	...
 8006840:	3fe921fb 	.word	0x3fe921fb
 8006844:	7fefffff 	.word	0x7fefffff

08006848 <__ieee754_rem_pio2>:
 8006848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800684c:	ec57 6b10 	vmov	r6, r7, d0
 8006850:	4bc3      	ldr	r3, [pc, #780]	; (8006b60 <__ieee754_rem_pio2+0x318>)
 8006852:	b08d      	sub	sp, #52	; 0x34
 8006854:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 8006858:	4598      	cmp	r8, r3
 800685a:	4604      	mov	r4, r0
 800685c:	9704      	str	r7, [sp, #16]
 800685e:	dc07      	bgt.n	8006870 <__ieee754_rem_pio2+0x28>
 8006860:	2200      	movs	r2, #0
 8006862:	2300      	movs	r3, #0
 8006864:	ed84 0b00 	vstr	d0, [r4]
 8006868:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800686c:	2500      	movs	r5, #0
 800686e:	e027      	b.n	80068c0 <__ieee754_rem_pio2+0x78>
 8006870:	4bbc      	ldr	r3, [pc, #752]	; (8006b64 <__ieee754_rem_pio2+0x31c>)
 8006872:	4598      	cmp	r8, r3
 8006874:	dc75      	bgt.n	8006962 <__ieee754_rem_pio2+0x11a>
 8006876:	9b04      	ldr	r3, [sp, #16]
 8006878:	4dbb      	ldr	r5, [pc, #748]	; (8006b68 <__ieee754_rem_pio2+0x320>)
 800687a:	2b00      	cmp	r3, #0
 800687c:	ee10 0a10 	vmov	r0, s0
 8006880:	a3a9      	add	r3, pc, #676	; (adr r3, 8006b28 <__ieee754_rem_pio2+0x2e0>)
 8006882:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006886:	4639      	mov	r1, r7
 8006888:	dd36      	ble.n	80068f8 <__ieee754_rem_pio2+0xb0>
 800688a:	f7f9 fd1d 	bl	80002c8 <__aeabi_dsub>
 800688e:	45a8      	cmp	r8, r5
 8006890:	4606      	mov	r6, r0
 8006892:	460f      	mov	r7, r1
 8006894:	d018      	beq.n	80068c8 <__ieee754_rem_pio2+0x80>
 8006896:	a3a6      	add	r3, pc, #664	; (adr r3, 8006b30 <__ieee754_rem_pio2+0x2e8>)
 8006898:	e9d3 2300 	ldrd	r2, r3, [r3]
 800689c:	f7f9 fd14 	bl	80002c8 <__aeabi_dsub>
 80068a0:	4602      	mov	r2, r0
 80068a2:	460b      	mov	r3, r1
 80068a4:	e9c4 2300 	strd	r2, r3, [r4]
 80068a8:	4630      	mov	r0, r6
 80068aa:	4639      	mov	r1, r7
 80068ac:	f7f9 fd0c 	bl	80002c8 <__aeabi_dsub>
 80068b0:	a39f      	add	r3, pc, #636	; (adr r3, 8006b30 <__ieee754_rem_pio2+0x2e8>)
 80068b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80068b6:	f7f9 fd07 	bl	80002c8 <__aeabi_dsub>
 80068ba:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80068be:	2501      	movs	r5, #1
 80068c0:	4628      	mov	r0, r5
 80068c2:	b00d      	add	sp, #52	; 0x34
 80068c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80068c8:	a39b      	add	r3, pc, #620	; (adr r3, 8006b38 <__ieee754_rem_pio2+0x2f0>)
 80068ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80068ce:	f7f9 fcfb 	bl	80002c8 <__aeabi_dsub>
 80068d2:	a39b      	add	r3, pc, #620	; (adr r3, 8006b40 <__ieee754_rem_pio2+0x2f8>)
 80068d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80068d8:	4606      	mov	r6, r0
 80068da:	460f      	mov	r7, r1
 80068dc:	f7f9 fcf4 	bl	80002c8 <__aeabi_dsub>
 80068e0:	4602      	mov	r2, r0
 80068e2:	460b      	mov	r3, r1
 80068e4:	e9c4 2300 	strd	r2, r3, [r4]
 80068e8:	4630      	mov	r0, r6
 80068ea:	4639      	mov	r1, r7
 80068ec:	f7f9 fcec 	bl	80002c8 <__aeabi_dsub>
 80068f0:	a393      	add	r3, pc, #588	; (adr r3, 8006b40 <__ieee754_rem_pio2+0x2f8>)
 80068f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80068f6:	e7de      	b.n	80068b6 <__ieee754_rem_pio2+0x6e>
 80068f8:	f7f9 fce8 	bl	80002cc <__adddf3>
 80068fc:	45a8      	cmp	r8, r5
 80068fe:	4606      	mov	r6, r0
 8006900:	460f      	mov	r7, r1
 8006902:	d016      	beq.n	8006932 <__ieee754_rem_pio2+0xea>
 8006904:	a38a      	add	r3, pc, #552	; (adr r3, 8006b30 <__ieee754_rem_pio2+0x2e8>)
 8006906:	e9d3 2300 	ldrd	r2, r3, [r3]
 800690a:	f7f9 fcdf 	bl	80002cc <__adddf3>
 800690e:	4602      	mov	r2, r0
 8006910:	460b      	mov	r3, r1
 8006912:	e9c4 2300 	strd	r2, r3, [r4]
 8006916:	4630      	mov	r0, r6
 8006918:	4639      	mov	r1, r7
 800691a:	f7f9 fcd5 	bl	80002c8 <__aeabi_dsub>
 800691e:	a384      	add	r3, pc, #528	; (adr r3, 8006b30 <__ieee754_rem_pio2+0x2e8>)
 8006920:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006924:	f7f9 fcd2 	bl	80002cc <__adddf3>
 8006928:	f04f 35ff 	mov.w	r5, #4294967295
 800692c:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8006930:	e7c6      	b.n	80068c0 <__ieee754_rem_pio2+0x78>
 8006932:	a381      	add	r3, pc, #516	; (adr r3, 8006b38 <__ieee754_rem_pio2+0x2f0>)
 8006934:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006938:	f7f9 fcc8 	bl	80002cc <__adddf3>
 800693c:	a380      	add	r3, pc, #512	; (adr r3, 8006b40 <__ieee754_rem_pio2+0x2f8>)
 800693e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006942:	4606      	mov	r6, r0
 8006944:	460f      	mov	r7, r1
 8006946:	f7f9 fcc1 	bl	80002cc <__adddf3>
 800694a:	4602      	mov	r2, r0
 800694c:	460b      	mov	r3, r1
 800694e:	e9c4 2300 	strd	r2, r3, [r4]
 8006952:	4630      	mov	r0, r6
 8006954:	4639      	mov	r1, r7
 8006956:	f7f9 fcb7 	bl	80002c8 <__aeabi_dsub>
 800695a:	a379      	add	r3, pc, #484	; (adr r3, 8006b40 <__ieee754_rem_pio2+0x2f8>)
 800695c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006960:	e7e0      	b.n	8006924 <__ieee754_rem_pio2+0xdc>
 8006962:	4b82      	ldr	r3, [pc, #520]	; (8006b6c <__ieee754_rem_pio2+0x324>)
 8006964:	4598      	cmp	r8, r3
 8006966:	f300 80d0 	bgt.w	8006b0a <__ieee754_rem_pio2+0x2c2>
 800696a:	f000 fe23 	bl	80075b4 <fabs>
 800696e:	ec57 6b10 	vmov	r6, r7, d0
 8006972:	ee10 0a10 	vmov	r0, s0
 8006976:	a374      	add	r3, pc, #464	; (adr r3, 8006b48 <__ieee754_rem_pio2+0x300>)
 8006978:	e9d3 2300 	ldrd	r2, r3, [r3]
 800697c:	4639      	mov	r1, r7
 800697e:	f7f9 fe5b 	bl	8000638 <__aeabi_dmul>
 8006982:	2200      	movs	r2, #0
 8006984:	4b7a      	ldr	r3, [pc, #488]	; (8006b70 <__ieee754_rem_pio2+0x328>)
 8006986:	f7f9 fca1 	bl	80002cc <__adddf3>
 800698a:	f7fa f8ef 	bl	8000b6c <__aeabi_d2iz>
 800698e:	4605      	mov	r5, r0
 8006990:	f7f9 fde8 	bl	8000564 <__aeabi_i2d>
 8006994:	a364      	add	r3, pc, #400	; (adr r3, 8006b28 <__ieee754_rem_pio2+0x2e0>)
 8006996:	e9d3 2300 	ldrd	r2, r3, [r3]
 800699a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800699e:	f7f9 fe4b 	bl	8000638 <__aeabi_dmul>
 80069a2:	4602      	mov	r2, r0
 80069a4:	460b      	mov	r3, r1
 80069a6:	4630      	mov	r0, r6
 80069a8:	4639      	mov	r1, r7
 80069aa:	f7f9 fc8d 	bl	80002c8 <__aeabi_dsub>
 80069ae:	a360      	add	r3, pc, #384	; (adr r3, 8006b30 <__ieee754_rem_pio2+0x2e8>)
 80069b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80069b4:	4682      	mov	sl, r0
 80069b6:	468b      	mov	fp, r1
 80069b8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80069bc:	f7f9 fe3c 	bl	8000638 <__aeabi_dmul>
 80069c0:	2d1f      	cmp	r5, #31
 80069c2:	4606      	mov	r6, r0
 80069c4:	460f      	mov	r7, r1
 80069c6:	dc0c      	bgt.n	80069e2 <__ieee754_rem_pio2+0x19a>
 80069c8:	1e6a      	subs	r2, r5, #1
 80069ca:	4b6a      	ldr	r3, [pc, #424]	; (8006b74 <__ieee754_rem_pio2+0x32c>)
 80069cc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80069d0:	4543      	cmp	r3, r8
 80069d2:	d006      	beq.n	80069e2 <__ieee754_rem_pio2+0x19a>
 80069d4:	4632      	mov	r2, r6
 80069d6:	463b      	mov	r3, r7
 80069d8:	4650      	mov	r0, sl
 80069da:	4659      	mov	r1, fp
 80069dc:	f7f9 fc74 	bl	80002c8 <__aeabi_dsub>
 80069e0:	e00e      	b.n	8006a00 <__ieee754_rem_pio2+0x1b8>
 80069e2:	4632      	mov	r2, r6
 80069e4:	463b      	mov	r3, r7
 80069e6:	4650      	mov	r0, sl
 80069e8:	4659      	mov	r1, fp
 80069ea:	f7f9 fc6d 	bl	80002c8 <__aeabi_dsub>
 80069ee:	ea4f 5328 	mov.w	r3, r8, asr #20
 80069f2:	9305      	str	r3, [sp, #20]
 80069f4:	9a05      	ldr	r2, [sp, #20]
 80069f6:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80069fa:	1ad3      	subs	r3, r2, r3
 80069fc:	2b10      	cmp	r3, #16
 80069fe:	dc02      	bgt.n	8006a06 <__ieee754_rem_pio2+0x1be>
 8006a00:	e9c4 0100 	strd	r0, r1, [r4]
 8006a04:	e039      	b.n	8006a7a <__ieee754_rem_pio2+0x232>
 8006a06:	a34c      	add	r3, pc, #304	; (adr r3, 8006b38 <__ieee754_rem_pio2+0x2f0>)
 8006a08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006a0c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006a10:	f7f9 fe12 	bl	8000638 <__aeabi_dmul>
 8006a14:	4606      	mov	r6, r0
 8006a16:	460f      	mov	r7, r1
 8006a18:	4602      	mov	r2, r0
 8006a1a:	460b      	mov	r3, r1
 8006a1c:	4650      	mov	r0, sl
 8006a1e:	4659      	mov	r1, fp
 8006a20:	f7f9 fc52 	bl	80002c8 <__aeabi_dsub>
 8006a24:	4602      	mov	r2, r0
 8006a26:	460b      	mov	r3, r1
 8006a28:	4680      	mov	r8, r0
 8006a2a:	4689      	mov	r9, r1
 8006a2c:	4650      	mov	r0, sl
 8006a2e:	4659      	mov	r1, fp
 8006a30:	f7f9 fc4a 	bl	80002c8 <__aeabi_dsub>
 8006a34:	4632      	mov	r2, r6
 8006a36:	463b      	mov	r3, r7
 8006a38:	f7f9 fc46 	bl	80002c8 <__aeabi_dsub>
 8006a3c:	a340      	add	r3, pc, #256	; (adr r3, 8006b40 <__ieee754_rem_pio2+0x2f8>)
 8006a3e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006a42:	4606      	mov	r6, r0
 8006a44:	460f      	mov	r7, r1
 8006a46:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006a4a:	f7f9 fdf5 	bl	8000638 <__aeabi_dmul>
 8006a4e:	4632      	mov	r2, r6
 8006a50:	463b      	mov	r3, r7
 8006a52:	f7f9 fc39 	bl	80002c8 <__aeabi_dsub>
 8006a56:	4602      	mov	r2, r0
 8006a58:	460b      	mov	r3, r1
 8006a5a:	4606      	mov	r6, r0
 8006a5c:	460f      	mov	r7, r1
 8006a5e:	4640      	mov	r0, r8
 8006a60:	4649      	mov	r1, r9
 8006a62:	f7f9 fc31 	bl	80002c8 <__aeabi_dsub>
 8006a66:	9a05      	ldr	r2, [sp, #20]
 8006a68:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8006a6c:	1ad3      	subs	r3, r2, r3
 8006a6e:	2b31      	cmp	r3, #49	; 0x31
 8006a70:	dc20      	bgt.n	8006ab4 <__ieee754_rem_pio2+0x26c>
 8006a72:	e9c4 0100 	strd	r0, r1, [r4]
 8006a76:	46c2      	mov	sl, r8
 8006a78:	46cb      	mov	fp, r9
 8006a7a:	e9d4 8900 	ldrd	r8, r9, [r4]
 8006a7e:	4650      	mov	r0, sl
 8006a80:	4642      	mov	r2, r8
 8006a82:	464b      	mov	r3, r9
 8006a84:	4659      	mov	r1, fp
 8006a86:	f7f9 fc1f 	bl	80002c8 <__aeabi_dsub>
 8006a8a:	463b      	mov	r3, r7
 8006a8c:	4632      	mov	r2, r6
 8006a8e:	f7f9 fc1b 	bl	80002c8 <__aeabi_dsub>
 8006a92:	9b04      	ldr	r3, [sp, #16]
 8006a94:	2b00      	cmp	r3, #0
 8006a96:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8006a9a:	f6bf af11 	bge.w	80068c0 <__ieee754_rem_pio2+0x78>
 8006a9e:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8006aa2:	6063      	str	r3, [r4, #4]
 8006aa4:	f8c4 8000 	str.w	r8, [r4]
 8006aa8:	60a0      	str	r0, [r4, #8]
 8006aaa:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8006aae:	60e3      	str	r3, [r4, #12]
 8006ab0:	426d      	negs	r5, r5
 8006ab2:	e705      	b.n	80068c0 <__ieee754_rem_pio2+0x78>
 8006ab4:	a326      	add	r3, pc, #152	; (adr r3, 8006b50 <__ieee754_rem_pio2+0x308>)
 8006ab6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006aba:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006abe:	f7f9 fdbb 	bl	8000638 <__aeabi_dmul>
 8006ac2:	4606      	mov	r6, r0
 8006ac4:	460f      	mov	r7, r1
 8006ac6:	4602      	mov	r2, r0
 8006ac8:	460b      	mov	r3, r1
 8006aca:	4640      	mov	r0, r8
 8006acc:	4649      	mov	r1, r9
 8006ace:	f7f9 fbfb 	bl	80002c8 <__aeabi_dsub>
 8006ad2:	4602      	mov	r2, r0
 8006ad4:	460b      	mov	r3, r1
 8006ad6:	4682      	mov	sl, r0
 8006ad8:	468b      	mov	fp, r1
 8006ada:	4640      	mov	r0, r8
 8006adc:	4649      	mov	r1, r9
 8006ade:	f7f9 fbf3 	bl	80002c8 <__aeabi_dsub>
 8006ae2:	4632      	mov	r2, r6
 8006ae4:	463b      	mov	r3, r7
 8006ae6:	f7f9 fbef 	bl	80002c8 <__aeabi_dsub>
 8006aea:	a31b      	add	r3, pc, #108	; (adr r3, 8006b58 <__ieee754_rem_pio2+0x310>)
 8006aec:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006af0:	4606      	mov	r6, r0
 8006af2:	460f      	mov	r7, r1
 8006af4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006af8:	f7f9 fd9e 	bl	8000638 <__aeabi_dmul>
 8006afc:	4632      	mov	r2, r6
 8006afe:	463b      	mov	r3, r7
 8006b00:	f7f9 fbe2 	bl	80002c8 <__aeabi_dsub>
 8006b04:	4606      	mov	r6, r0
 8006b06:	460f      	mov	r7, r1
 8006b08:	e764      	b.n	80069d4 <__ieee754_rem_pio2+0x18c>
 8006b0a:	4b1b      	ldr	r3, [pc, #108]	; (8006b78 <__ieee754_rem_pio2+0x330>)
 8006b0c:	4598      	cmp	r8, r3
 8006b0e:	dd35      	ble.n	8006b7c <__ieee754_rem_pio2+0x334>
 8006b10:	ee10 2a10 	vmov	r2, s0
 8006b14:	463b      	mov	r3, r7
 8006b16:	4630      	mov	r0, r6
 8006b18:	4639      	mov	r1, r7
 8006b1a:	f7f9 fbd5 	bl	80002c8 <__aeabi_dsub>
 8006b1e:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8006b22:	e9c4 0100 	strd	r0, r1, [r4]
 8006b26:	e6a1      	b.n	800686c <__ieee754_rem_pio2+0x24>
 8006b28:	54400000 	.word	0x54400000
 8006b2c:	3ff921fb 	.word	0x3ff921fb
 8006b30:	1a626331 	.word	0x1a626331
 8006b34:	3dd0b461 	.word	0x3dd0b461
 8006b38:	1a600000 	.word	0x1a600000
 8006b3c:	3dd0b461 	.word	0x3dd0b461
 8006b40:	2e037073 	.word	0x2e037073
 8006b44:	3ba3198a 	.word	0x3ba3198a
 8006b48:	6dc9c883 	.word	0x6dc9c883
 8006b4c:	3fe45f30 	.word	0x3fe45f30
 8006b50:	2e000000 	.word	0x2e000000
 8006b54:	3ba3198a 	.word	0x3ba3198a
 8006b58:	252049c1 	.word	0x252049c1
 8006b5c:	397b839a 	.word	0x397b839a
 8006b60:	3fe921fb 	.word	0x3fe921fb
 8006b64:	4002d97b 	.word	0x4002d97b
 8006b68:	3ff921fb 	.word	0x3ff921fb
 8006b6c:	413921fb 	.word	0x413921fb
 8006b70:	3fe00000 	.word	0x3fe00000
 8006b74:	08007c94 	.word	0x08007c94
 8006b78:	7fefffff 	.word	0x7fefffff
 8006b7c:	ea4f 5528 	mov.w	r5, r8, asr #20
 8006b80:	f2a5 4516 	subw	r5, r5, #1046	; 0x416
 8006b84:	eba8 5105 	sub.w	r1, r8, r5, lsl #20
 8006b88:	4630      	mov	r0, r6
 8006b8a:	460f      	mov	r7, r1
 8006b8c:	f7f9 ffee 	bl	8000b6c <__aeabi_d2iz>
 8006b90:	f7f9 fce8 	bl	8000564 <__aeabi_i2d>
 8006b94:	4602      	mov	r2, r0
 8006b96:	460b      	mov	r3, r1
 8006b98:	4630      	mov	r0, r6
 8006b9a:	4639      	mov	r1, r7
 8006b9c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8006ba0:	f7f9 fb92 	bl	80002c8 <__aeabi_dsub>
 8006ba4:	2200      	movs	r2, #0
 8006ba6:	4b1f      	ldr	r3, [pc, #124]	; (8006c24 <__ieee754_rem_pio2+0x3dc>)
 8006ba8:	f7f9 fd46 	bl	8000638 <__aeabi_dmul>
 8006bac:	460f      	mov	r7, r1
 8006bae:	4606      	mov	r6, r0
 8006bb0:	f7f9 ffdc 	bl	8000b6c <__aeabi_d2iz>
 8006bb4:	f7f9 fcd6 	bl	8000564 <__aeabi_i2d>
 8006bb8:	4602      	mov	r2, r0
 8006bba:	460b      	mov	r3, r1
 8006bbc:	4630      	mov	r0, r6
 8006bbe:	4639      	mov	r1, r7
 8006bc0:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8006bc4:	f7f9 fb80 	bl	80002c8 <__aeabi_dsub>
 8006bc8:	2200      	movs	r2, #0
 8006bca:	4b16      	ldr	r3, [pc, #88]	; (8006c24 <__ieee754_rem_pio2+0x3dc>)
 8006bcc:	f7f9 fd34 	bl	8000638 <__aeabi_dmul>
 8006bd0:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8006bd4:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8006bd8:	f04f 0803 	mov.w	r8, #3
 8006bdc:	2600      	movs	r6, #0
 8006bde:	2700      	movs	r7, #0
 8006be0:	4632      	mov	r2, r6
 8006be2:	463b      	mov	r3, r7
 8006be4:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 8006be8:	f108 3aff 	add.w	sl, r8, #4294967295
 8006bec:	f7f9 ff8c 	bl	8000b08 <__aeabi_dcmpeq>
 8006bf0:	b9b0      	cbnz	r0, 8006c20 <__ieee754_rem_pio2+0x3d8>
 8006bf2:	4b0d      	ldr	r3, [pc, #52]	; (8006c28 <__ieee754_rem_pio2+0x3e0>)
 8006bf4:	9301      	str	r3, [sp, #4]
 8006bf6:	2302      	movs	r3, #2
 8006bf8:	9300      	str	r3, [sp, #0]
 8006bfa:	462a      	mov	r2, r5
 8006bfc:	4643      	mov	r3, r8
 8006bfe:	4621      	mov	r1, r4
 8006c00:	a806      	add	r0, sp, #24
 8006c02:	f000 f8dd 	bl	8006dc0 <__kernel_rem_pio2>
 8006c06:	9b04      	ldr	r3, [sp, #16]
 8006c08:	2b00      	cmp	r3, #0
 8006c0a:	4605      	mov	r5, r0
 8006c0c:	f6bf ae58 	bge.w	80068c0 <__ieee754_rem_pio2+0x78>
 8006c10:	6863      	ldr	r3, [r4, #4]
 8006c12:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8006c16:	6063      	str	r3, [r4, #4]
 8006c18:	68e3      	ldr	r3, [r4, #12]
 8006c1a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8006c1e:	e746      	b.n	8006aae <__ieee754_rem_pio2+0x266>
 8006c20:	46d0      	mov	r8, sl
 8006c22:	e7dd      	b.n	8006be0 <__ieee754_rem_pio2+0x398>
 8006c24:	41700000 	.word	0x41700000
 8006c28:	08007d14 	.word	0x08007d14
 8006c2c:	00000000 	.word	0x00000000

08006c30 <__kernel_cos>:
 8006c30:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c34:	ec59 8b10 	vmov	r8, r9, d0
 8006c38:	f029 4600 	bic.w	r6, r9, #2147483648	; 0x80000000
 8006c3c:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
 8006c40:	ed2d 8b02 	vpush	{d8}
 8006c44:	eeb0 8a41 	vmov.f32	s16, s2
 8006c48:	eef0 8a61 	vmov.f32	s17, s3
 8006c4c:	da07      	bge.n	8006c5e <__kernel_cos+0x2e>
 8006c4e:	ee10 0a10 	vmov	r0, s0
 8006c52:	4649      	mov	r1, r9
 8006c54:	f7f9 ff8a 	bl	8000b6c <__aeabi_d2iz>
 8006c58:	2800      	cmp	r0, #0
 8006c5a:	f000 8089 	beq.w	8006d70 <__kernel_cos+0x140>
 8006c5e:	4642      	mov	r2, r8
 8006c60:	464b      	mov	r3, r9
 8006c62:	4640      	mov	r0, r8
 8006c64:	4649      	mov	r1, r9
 8006c66:	f7f9 fce7 	bl	8000638 <__aeabi_dmul>
 8006c6a:	2200      	movs	r2, #0
 8006c6c:	4b4e      	ldr	r3, [pc, #312]	; (8006da8 <__kernel_cos+0x178>)
 8006c6e:	4604      	mov	r4, r0
 8006c70:	460d      	mov	r5, r1
 8006c72:	f7f9 fce1 	bl	8000638 <__aeabi_dmul>
 8006c76:	a340      	add	r3, pc, #256	; (adr r3, 8006d78 <__kernel_cos+0x148>)
 8006c78:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006c7c:	4682      	mov	sl, r0
 8006c7e:	468b      	mov	fp, r1
 8006c80:	4620      	mov	r0, r4
 8006c82:	4629      	mov	r1, r5
 8006c84:	f7f9 fcd8 	bl	8000638 <__aeabi_dmul>
 8006c88:	a33d      	add	r3, pc, #244	; (adr r3, 8006d80 <__kernel_cos+0x150>)
 8006c8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006c8e:	f7f9 fb1d 	bl	80002cc <__adddf3>
 8006c92:	4622      	mov	r2, r4
 8006c94:	462b      	mov	r3, r5
 8006c96:	f7f9 fccf 	bl	8000638 <__aeabi_dmul>
 8006c9a:	a33b      	add	r3, pc, #236	; (adr r3, 8006d88 <__kernel_cos+0x158>)
 8006c9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ca0:	f7f9 fb12 	bl	80002c8 <__aeabi_dsub>
 8006ca4:	4622      	mov	r2, r4
 8006ca6:	462b      	mov	r3, r5
 8006ca8:	f7f9 fcc6 	bl	8000638 <__aeabi_dmul>
 8006cac:	a338      	add	r3, pc, #224	; (adr r3, 8006d90 <__kernel_cos+0x160>)
 8006cae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006cb2:	f7f9 fb0b 	bl	80002cc <__adddf3>
 8006cb6:	4622      	mov	r2, r4
 8006cb8:	462b      	mov	r3, r5
 8006cba:	f7f9 fcbd 	bl	8000638 <__aeabi_dmul>
 8006cbe:	a336      	add	r3, pc, #216	; (adr r3, 8006d98 <__kernel_cos+0x168>)
 8006cc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006cc4:	f7f9 fb00 	bl	80002c8 <__aeabi_dsub>
 8006cc8:	4622      	mov	r2, r4
 8006cca:	462b      	mov	r3, r5
 8006ccc:	f7f9 fcb4 	bl	8000638 <__aeabi_dmul>
 8006cd0:	a333      	add	r3, pc, #204	; (adr r3, 8006da0 <__kernel_cos+0x170>)
 8006cd2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006cd6:	f7f9 faf9 	bl	80002cc <__adddf3>
 8006cda:	4622      	mov	r2, r4
 8006cdc:	462b      	mov	r3, r5
 8006cde:	f7f9 fcab 	bl	8000638 <__aeabi_dmul>
 8006ce2:	4622      	mov	r2, r4
 8006ce4:	462b      	mov	r3, r5
 8006ce6:	f7f9 fca7 	bl	8000638 <__aeabi_dmul>
 8006cea:	ec53 2b18 	vmov	r2, r3, d8
 8006cee:	4604      	mov	r4, r0
 8006cf0:	460d      	mov	r5, r1
 8006cf2:	4640      	mov	r0, r8
 8006cf4:	4649      	mov	r1, r9
 8006cf6:	f7f9 fc9f 	bl	8000638 <__aeabi_dmul>
 8006cfa:	460b      	mov	r3, r1
 8006cfc:	4602      	mov	r2, r0
 8006cfe:	4629      	mov	r1, r5
 8006d00:	4620      	mov	r0, r4
 8006d02:	f7f9 fae1 	bl	80002c8 <__aeabi_dsub>
 8006d06:	4b29      	ldr	r3, [pc, #164]	; (8006dac <__kernel_cos+0x17c>)
 8006d08:	429e      	cmp	r6, r3
 8006d0a:	4680      	mov	r8, r0
 8006d0c:	4689      	mov	r9, r1
 8006d0e:	dc11      	bgt.n	8006d34 <__kernel_cos+0x104>
 8006d10:	4602      	mov	r2, r0
 8006d12:	460b      	mov	r3, r1
 8006d14:	4650      	mov	r0, sl
 8006d16:	4659      	mov	r1, fp
 8006d18:	f7f9 fad6 	bl	80002c8 <__aeabi_dsub>
 8006d1c:	460b      	mov	r3, r1
 8006d1e:	4924      	ldr	r1, [pc, #144]	; (8006db0 <__kernel_cos+0x180>)
 8006d20:	4602      	mov	r2, r0
 8006d22:	2000      	movs	r0, #0
 8006d24:	f7f9 fad0 	bl	80002c8 <__aeabi_dsub>
 8006d28:	ecbd 8b02 	vpop	{d8}
 8006d2c:	ec41 0b10 	vmov	d0, r0, r1
 8006d30:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d34:	4b1f      	ldr	r3, [pc, #124]	; (8006db4 <__kernel_cos+0x184>)
 8006d36:	491e      	ldr	r1, [pc, #120]	; (8006db0 <__kernel_cos+0x180>)
 8006d38:	429e      	cmp	r6, r3
 8006d3a:	bfcc      	ite	gt
 8006d3c:	4d1e      	ldrgt	r5, [pc, #120]	; (8006db8 <__kernel_cos+0x188>)
 8006d3e:	f5a6 1500 	suble.w	r5, r6, #2097152	; 0x200000
 8006d42:	2400      	movs	r4, #0
 8006d44:	4622      	mov	r2, r4
 8006d46:	462b      	mov	r3, r5
 8006d48:	2000      	movs	r0, #0
 8006d4a:	f7f9 fabd 	bl	80002c8 <__aeabi_dsub>
 8006d4e:	4622      	mov	r2, r4
 8006d50:	4606      	mov	r6, r0
 8006d52:	460f      	mov	r7, r1
 8006d54:	462b      	mov	r3, r5
 8006d56:	4650      	mov	r0, sl
 8006d58:	4659      	mov	r1, fp
 8006d5a:	f7f9 fab5 	bl	80002c8 <__aeabi_dsub>
 8006d5e:	4642      	mov	r2, r8
 8006d60:	464b      	mov	r3, r9
 8006d62:	f7f9 fab1 	bl	80002c8 <__aeabi_dsub>
 8006d66:	4602      	mov	r2, r0
 8006d68:	460b      	mov	r3, r1
 8006d6a:	4630      	mov	r0, r6
 8006d6c:	4639      	mov	r1, r7
 8006d6e:	e7d9      	b.n	8006d24 <__kernel_cos+0xf4>
 8006d70:	2000      	movs	r0, #0
 8006d72:	490f      	ldr	r1, [pc, #60]	; (8006db0 <__kernel_cos+0x180>)
 8006d74:	e7d8      	b.n	8006d28 <__kernel_cos+0xf8>
 8006d76:	bf00      	nop
 8006d78:	be8838d4 	.word	0xbe8838d4
 8006d7c:	bda8fae9 	.word	0xbda8fae9
 8006d80:	bdb4b1c4 	.word	0xbdb4b1c4
 8006d84:	3e21ee9e 	.word	0x3e21ee9e
 8006d88:	809c52ad 	.word	0x809c52ad
 8006d8c:	3e927e4f 	.word	0x3e927e4f
 8006d90:	19cb1590 	.word	0x19cb1590
 8006d94:	3efa01a0 	.word	0x3efa01a0
 8006d98:	16c15177 	.word	0x16c15177
 8006d9c:	3f56c16c 	.word	0x3f56c16c
 8006da0:	5555554c 	.word	0x5555554c
 8006da4:	3fa55555 	.word	0x3fa55555
 8006da8:	3fe00000 	.word	0x3fe00000
 8006dac:	3fd33332 	.word	0x3fd33332
 8006db0:	3ff00000 	.word	0x3ff00000
 8006db4:	3fe90000 	.word	0x3fe90000
 8006db8:	3fd20000 	.word	0x3fd20000
 8006dbc:	00000000 	.word	0x00000000

08006dc0 <__kernel_rem_pio2>:
 8006dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006dc4:	ed2d 8b02 	vpush	{d8}
 8006dc8:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 8006dcc:	1ed4      	subs	r4, r2, #3
 8006dce:	9308      	str	r3, [sp, #32]
 8006dd0:	9101      	str	r1, [sp, #4]
 8006dd2:	4bc5      	ldr	r3, [pc, #788]	; (80070e8 <__kernel_rem_pio2+0x328>)
 8006dd4:	99a6      	ldr	r1, [sp, #664]	; 0x298
 8006dd6:	9009      	str	r0, [sp, #36]	; 0x24
 8006dd8:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8006ddc:	9304      	str	r3, [sp, #16]
 8006dde:	9b08      	ldr	r3, [sp, #32]
 8006de0:	3b01      	subs	r3, #1
 8006de2:	9307      	str	r3, [sp, #28]
 8006de4:	2318      	movs	r3, #24
 8006de6:	fb94 f4f3 	sdiv	r4, r4, r3
 8006dea:	f06f 0317 	mvn.w	r3, #23
 8006dee:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 8006df2:	fb04 3303 	mla	r3, r4, r3, r3
 8006df6:	eb03 0a02 	add.w	sl, r3, r2
 8006dfa:	9b04      	ldr	r3, [sp, #16]
 8006dfc:	9a07      	ldr	r2, [sp, #28]
 8006dfe:	ed9f 8bb6 	vldr	d8, [pc, #728]	; 80070d8 <__kernel_rem_pio2+0x318>
 8006e02:	eb03 0802 	add.w	r8, r3, r2
 8006e06:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8006e08:	1aa7      	subs	r7, r4, r2
 8006e0a:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8006e0e:	ae22      	add	r6, sp, #136	; 0x88
 8006e10:	2500      	movs	r5, #0
 8006e12:	4545      	cmp	r5, r8
 8006e14:	dd13      	ble.n	8006e3e <__kernel_rem_pio2+0x7e>
 8006e16:	ed9f 8bb0 	vldr	d8, [pc, #704]	; 80070d8 <__kernel_rem_pio2+0x318>
 8006e1a:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 8006e1e:	2600      	movs	r6, #0
 8006e20:	9b04      	ldr	r3, [sp, #16]
 8006e22:	429e      	cmp	r6, r3
 8006e24:	dc32      	bgt.n	8006e8c <__kernel_rem_pio2+0xcc>
 8006e26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006e28:	9302      	str	r3, [sp, #8]
 8006e2a:	9b08      	ldr	r3, [sp, #32]
 8006e2c:	199d      	adds	r5, r3, r6
 8006e2e:	ab22      	add	r3, sp, #136	; 0x88
 8006e30:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8006e34:	9306      	str	r3, [sp, #24]
 8006e36:	ec59 8b18 	vmov	r8, r9, d8
 8006e3a:	2700      	movs	r7, #0
 8006e3c:	e01f      	b.n	8006e7e <__kernel_rem_pio2+0xbe>
 8006e3e:	42ef      	cmn	r7, r5
 8006e40:	d407      	bmi.n	8006e52 <__kernel_rem_pio2+0x92>
 8006e42:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8006e46:	f7f9 fb8d 	bl	8000564 <__aeabi_i2d>
 8006e4a:	e8e6 0102 	strd	r0, r1, [r6], #8
 8006e4e:	3501      	adds	r5, #1
 8006e50:	e7df      	b.n	8006e12 <__kernel_rem_pio2+0x52>
 8006e52:	ec51 0b18 	vmov	r0, r1, d8
 8006e56:	e7f8      	b.n	8006e4a <__kernel_rem_pio2+0x8a>
 8006e58:	9906      	ldr	r1, [sp, #24]
 8006e5a:	9d02      	ldr	r5, [sp, #8]
 8006e5c:	e971 2302 	ldrd	r2, r3, [r1, #-8]!
 8006e60:	9106      	str	r1, [sp, #24]
 8006e62:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 8006e66:	9502      	str	r5, [sp, #8]
 8006e68:	f7f9 fbe6 	bl	8000638 <__aeabi_dmul>
 8006e6c:	4602      	mov	r2, r0
 8006e6e:	460b      	mov	r3, r1
 8006e70:	4640      	mov	r0, r8
 8006e72:	4649      	mov	r1, r9
 8006e74:	f7f9 fa2a 	bl	80002cc <__adddf3>
 8006e78:	3701      	adds	r7, #1
 8006e7a:	4680      	mov	r8, r0
 8006e7c:	4689      	mov	r9, r1
 8006e7e:	9b07      	ldr	r3, [sp, #28]
 8006e80:	429f      	cmp	r7, r3
 8006e82:	dde9      	ble.n	8006e58 <__kernel_rem_pio2+0x98>
 8006e84:	e8eb 8902 	strd	r8, r9, [fp], #8
 8006e88:	3601      	adds	r6, #1
 8006e8a:	e7c9      	b.n	8006e20 <__kernel_rem_pio2+0x60>
 8006e8c:	9b04      	ldr	r3, [sp, #16]
 8006e8e:	aa0e      	add	r2, sp, #56	; 0x38
 8006e90:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8006e94:	930c      	str	r3, [sp, #48]	; 0x30
 8006e96:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8006e98:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8006e9c:	9c04      	ldr	r4, [sp, #16]
 8006e9e:	930b      	str	r3, [sp, #44]	; 0x2c
 8006ea0:	ab9a      	add	r3, sp, #616	; 0x268
 8006ea2:	f104 5b00 	add.w	fp, r4, #536870912	; 0x20000000
 8006ea6:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8006eaa:	f10b 3bff 	add.w	fp, fp, #4294967295
 8006eae:	e953 8928 	ldrd	r8, r9, [r3, #-160]	; 0xa0
 8006eb2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8006eb6:	ab9a      	add	r3, sp, #616	; 0x268
 8006eb8:	445b      	add	r3, fp
 8006eba:	f1a3 0698 	sub.w	r6, r3, #152	; 0x98
 8006ebe:	2500      	movs	r5, #0
 8006ec0:	1b63      	subs	r3, r4, r5
 8006ec2:	2b00      	cmp	r3, #0
 8006ec4:	dc78      	bgt.n	8006fb8 <__kernel_rem_pio2+0x1f8>
 8006ec6:	4650      	mov	r0, sl
 8006ec8:	ec49 8b10 	vmov	d0, r8, r9
 8006ecc:	f000 fc00 	bl	80076d0 <scalbn>
 8006ed0:	ec57 6b10 	vmov	r6, r7, d0
 8006ed4:	2200      	movs	r2, #0
 8006ed6:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8006eda:	ee10 0a10 	vmov	r0, s0
 8006ede:	4639      	mov	r1, r7
 8006ee0:	f7f9 fbaa 	bl	8000638 <__aeabi_dmul>
 8006ee4:	ec41 0b10 	vmov	d0, r0, r1
 8006ee8:	f000 fb6e 	bl	80075c8 <floor>
 8006eec:	2200      	movs	r2, #0
 8006eee:	ec51 0b10 	vmov	r0, r1, d0
 8006ef2:	4b7e      	ldr	r3, [pc, #504]	; (80070ec <__kernel_rem_pio2+0x32c>)
 8006ef4:	f7f9 fba0 	bl	8000638 <__aeabi_dmul>
 8006ef8:	4602      	mov	r2, r0
 8006efa:	460b      	mov	r3, r1
 8006efc:	4630      	mov	r0, r6
 8006efe:	4639      	mov	r1, r7
 8006f00:	f7f9 f9e2 	bl	80002c8 <__aeabi_dsub>
 8006f04:	460f      	mov	r7, r1
 8006f06:	4606      	mov	r6, r0
 8006f08:	f7f9 fe30 	bl	8000b6c <__aeabi_d2iz>
 8006f0c:	9006      	str	r0, [sp, #24]
 8006f0e:	f7f9 fb29 	bl	8000564 <__aeabi_i2d>
 8006f12:	4602      	mov	r2, r0
 8006f14:	460b      	mov	r3, r1
 8006f16:	4630      	mov	r0, r6
 8006f18:	4639      	mov	r1, r7
 8006f1a:	f7f9 f9d5 	bl	80002c8 <__aeabi_dsub>
 8006f1e:	f1ba 0f00 	cmp.w	sl, #0
 8006f22:	4606      	mov	r6, r0
 8006f24:	460f      	mov	r7, r1
 8006f26:	dd6c      	ble.n	8007002 <__kernel_rem_pio2+0x242>
 8006f28:	1e62      	subs	r2, r4, #1
 8006f2a:	ab0e      	add	r3, sp, #56	; 0x38
 8006f2c:	f1ca 0118 	rsb	r1, sl, #24
 8006f30:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8006f34:	9d06      	ldr	r5, [sp, #24]
 8006f36:	fa40 f301 	asr.w	r3, r0, r1
 8006f3a:	441d      	add	r5, r3
 8006f3c:	408b      	lsls	r3, r1
 8006f3e:	1ac0      	subs	r0, r0, r3
 8006f40:	ab0e      	add	r3, sp, #56	; 0x38
 8006f42:	9506      	str	r5, [sp, #24]
 8006f44:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8006f48:	f1ca 0317 	rsb	r3, sl, #23
 8006f4c:	fa40 f303 	asr.w	r3, r0, r3
 8006f50:	9302      	str	r3, [sp, #8]
 8006f52:	9b02      	ldr	r3, [sp, #8]
 8006f54:	2b00      	cmp	r3, #0
 8006f56:	dd62      	ble.n	800701e <__kernel_rem_pio2+0x25e>
 8006f58:	9b06      	ldr	r3, [sp, #24]
 8006f5a:	2200      	movs	r2, #0
 8006f5c:	3301      	adds	r3, #1
 8006f5e:	9306      	str	r3, [sp, #24]
 8006f60:	4615      	mov	r5, r2
 8006f62:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8006f66:	4294      	cmp	r4, r2
 8006f68:	f300 8095 	bgt.w	8007096 <__kernel_rem_pio2+0x2d6>
 8006f6c:	f1ba 0f00 	cmp.w	sl, #0
 8006f70:	dd07      	ble.n	8006f82 <__kernel_rem_pio2+0x1c2>
 8006f72:	f1ba 0f01 	cmp.w	sl, #1
 8006f76:	f000 80a2 	beq.w	80070be <__kernel_rem_pio2+0x2fe>
 8006f7a:	f1ba 0f02 	cmp.w	sl, #2
 8006f7e:	f000 80c1 	beq.w	8007104 <__kernel_rem_pio2+0x344>
 8006f82:	9b02      	ldr	r3, [sp, #8]
 8006f84:	2b02      	cmp	r3, #2
 8006f86:	d14a      	bne.n	800701e <__kernel_rem_pio2+0x25e>
 8006f88:	4632      	mov	r2, r6
 8006f8a:	463b      	mov	r3, r7
 8006f8c:	2000      	movs	r0, #0
 8006f8e:	4958      	ldr	r1, [pc, #352]	; (80070f0 <__kernel_rem_pio2+0x330>)
 8006f90:	f7f9 f99a 	bl	80002c8 <__aeabi_dsub>
 8006f94:	4606      	mov	r6, r0
 8006f96:	460f      	mov	r7, r1
 8006f98:	2d00      	cmp	r5, #0
 8006f9a:	d040      	beq.n	800701e <__kernel_rem_pio2+0x25e>
 8006f9c:	4650      	mov	r0, sl
 8006f9e:	ed9f 0b50 	vldr	d0, [pc, #320]	; 80070e0 <__kernel_rem_pio2+0x320>
 8006fa2:	f000 fb95 	bl	80076d0 <scalbn>
 8006fa6:	4630      	mov	r0, r6
 8006fa8:	4639      	mov	r1, r7
 8006faa:	ec53 2b10 	vmov	r2, r3, d0
 8006fae:	f7f9 f98b 	bl	80002c8 <__aeabi_dsub>
 8006fb2:	4606      	mov	r6, r0
 8006fb4:	460f      	mov	r7, r1
 8006fb6:	e032      	b.n	800701e <__kernel_rem_pio2+0x25e>
 8006fb8:	2200      	movs	r2, #0
 8006fba:	4b4e      	ldr	r3, [pc, #312]	; (80070f4 <__kernel_rem_pio2+0x334>)
 8006fbc:	4640      	mov	r0, r8
 8006fbe:	4649      	mov	r1, r9
 8006fc0:	f7f9 fb3a 	bl	8000638 <__aeabi_dmul>
 8006fc4:	f7f9 fdd2 	bl	8000b6c <__aeabi_d2iz>
 8006fc8:	f7f9 facc 	bl	8000564 <__aeabi_i2d>
 8006fcc:	2200      	movs	r2, #0
 8006fce:	4b4a      	ldr	r3, [pc, #296]	; (80070f8 <__kernel_rem_pio2+0x338>)
 8006fd0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006fd4:	f7f9 fb30 	bl	8000638 <__aeabi_dmul>
 8006fd8:	4602      	mov	r2, r0
 8006fda:	460b      	mov	r3, r1
 8006fdc:	4640      	mov	r0, r8
 8006fde:	4649      	mov	r1, r9
 8006fe0:	f7f9 f972 	bl	80002c8 <__aeabi_dsub>
 8006fe4:	f7f9 fdc2 	bl	8000b6c <__aeabi_d2iz>
 8006fe8:	ab0e      	add	r3, sp, #56	; 0x38
 8006fea:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 8006fee:	e976 2302 	ldrd	r2, r3, [r6, #-8]!
 8006ff2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006ff6:	f7f9 f969 	bl	80002cc <__adddf3>
 8006ffa:	3501      	adds	r5, #1
 8006ffc:	4680      	mov	r8, r0
 8006ffe:	4689      	mov	r9, r1
 8007000:	e75e      	b.n	8006ec0 <__kernel_rem_pio2+0x100>
 8007002:	d105      	bne.n	8007010 <__kernel_rem_pio2+0x250>
 8007004:	1e63      	subs	r3, r4, #1
 8007006:	aa0e      	add	r2, sp, #56	; 0x38
 8007008:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800700c:	15c3      	asrs	r3, r0, #23
 800700e:	e79f      	b.n	8006f50 <__kernel_rem_pio2+0x190>
 8007010:	2200      	movs	r2, #0
 8007012:	4b3a      	ldr	r3, [pc, #232]	; (80070fc <__kernel_rem_pio2+0x33c>)
 8007014:	f7f9 fd96 	bl	8000b44 <__aeabi_dcmpge>
 8007018:	2800      	cmp	r0, #0
 800701a:	d139      	bne.n	8007090 <__kernel_rem_pio2+0x2d0>
 800701c:	9002      	str	r0, [sp, #8]
 800701e:	2200      	movs	r2, #0
 8007020:	2300      	movs	r3, #0
 8007022:	4630      	mov	r0, r6
 8007024:	4639      	mov	r1, r7
 8007026:	f7f9 fd6f 	bl	8000b08 <__aeabi_dcmpeq>
 800702a:	2800      	cmp	r0, #0
 800702c:	f000 80c7 	beq.w	80071be <__kernel_rem_pio2+0x3fe>
 8007030:	1e65      	subs	r5, r4, #1
 8007032:	462b      	mov	r3, r5
 8007034:	2200      	movs	r2, #0
 8007036:	9904      	ldr	r1, [sp, #16]
 8007038:	428b      	cmp	r3, r1
 800703a:	da6a      	bge.n	8007112 <__kernel_rem_pio2+0x352>
 800703c:	2a00      	cmp	r2, #0
 800703e:	f000 8088 	beq.w	8007152 <__kernel_rem_pio2+0x392>
 8007042:	ab0e      	add	r3, sp, #56	; 0x38
 8007044:	f1aa 0a18 	sub.w	sl, sl, #24
 8007048:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800704c:	2b00      	cmp	r3, #0
 800704e:	f000 80b4 	beq.w	80071ba <__kernel_rem_pio2+0x3fa>
 8007052:	4650      	mov	r0, sl
 8007054:	ed9f 0b22 	vldr	d0, [pc, #136]	; 80070e0 <__kernel_rem_pio2+0x320>
 8007058:	f000 fb3a 	bl	80076d0 <scalbn>
 800705c:	00ec      	lsls	r4, r5, #3
 800705e:	ab72      	add	r3, sp, #456	; 0x1c8
 8007060:	191e      	adds	r6, r3, r4
 8007062:	ec59 8b10 	vmov	r8, r9, d0
 8007066:	f106 0a08 	add.w	sl, r6, #8
 800706a:	462f      	mov	r7, r5
 800706c:	2f00      	cmp	r7, #0
 800706e:	f280 80df 	bge.w	8007230 <__kernel_rem_pio2+0x470>
 8007072:	ed9f 8b19 	vldr	d8, [pc, #100]	; 80070d8 <__kernel_rem_pio2+0x318>
 8007076:	f04f 0a00 	mov.w	sl, #0
 800707a:	eba5 030a 	sub.w	r3, r5, sl
 800707e:	2b00      	cmp	r3, #0
 8007080:	f2c0 810a 	blt.w	8007298 <__kernel_rem_pio2+0x4d8>
 8007084:	f8df b078 	ldr.w	fp, [pc, #120]	; 8007100 <__kernel_rem_pio2+0x340>
 8007088:	ec59 8b18 	vmov	r8, r9, d8
 800708c:	2700      	movs	r7, #0
 800708e:	e0f5      	b.n	800727c <__kernel_rem_pio2+0x4bc>
 8007090:	2302      	movs	r3, #2
 8007092:	9302      	str	r3, [sp, #8]
 8007094:	e760      	b.n	8006f58 <__kernel_rem_pio2+0x198>
 8007096:	ab0e      	add	r3, sp, #56	; 0x38
 8007098:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800709c:	b94d      	cbnz	r5, 80070b2 <__kernel_rem_pio2+0x2f2>
 800709e:	b12b      	cbz	r3, 80070ac <__kernel_rem_pio2+0x2ec>
 80070a0:	a80e      	add	r0, sp, #56	; 0x38
 80070a2:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 80070a6:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 80070aa:	2301      	movs	r3, #1
 80070ac:	3201      	adds	r2, #1
 80070ae:	461d      	mov	r5, r3
 80070b0:	e759      	b.n	8006f66 <__kernel_rem_pio2+0x1a6>
 80070b2:	a80e      	add	r0, sp, #56	; 0x38
 80070b4:	1acb      	subs	r3, r1, r3
 80070b6:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 80070ba:	462b      	mov	r3, r5
 80070bc:	e7f6      	b.n	80070ac <__kernel_rem_pio2+0x2ec>
 80070be:	1e62      	subs	r2, r4, #1
 80070c0:	ab0e      	add	r3, sp, #56	; 0x38
 80070c2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80070c6:	f3c3 0316 	ubfx	r3, r3, #0, #23
 80070ca:	a90e      	add	r1, sp, #56	; 0x38
 80070cc:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 80070d0:	e757      	b.n	8006f82 <__kernel_rem_pio2+0x1c2>
 80070d2:	bf00      	nop
 80070d4:	f3af 8000 	nop.w
	...
 80070e4:	3ff00000 	.word	0x3ff00000
 80070e8:	08007e60 	.word	0x08007e60
 80070ec:	40200000 	.word	0x40200000
 80070f0:	3ff00000 	.word	0x3ff00000
 80070f4:	3e700000 	.word	0x3e700000
 80070f8:	41700000 	.word	0x41700000
 80070fc:	3fe00000 	.word	0x3fe00000
 8007100:	08007e20 	.word	0x08007e20
 8007104:	1e62      	subs	r2, r4, #1
 8007106:	ab0e      	add	r3, sp, #56	; 0x38
 8007108:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800710c:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8007110:	e7db      	b.n	80070ca <__kernel_rem_pio2+0x30a>
 8007112:	a90e      	add	r1, sp, #56	; 0x38
 8007114:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8007118:	3b01      	subs	r3, #1
 800711a:	430a      	orrs	r2, r1
 800711c:	e78b      	b.n	8007036 <__kernel_rem_pio2+0x276>
 800711e:	3301      	adds	r3, #1
 8007120:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8007124:	2900      	cmp	r1, #0
 8007126:	d0fa      	beq.n	800711e <__kernel_rem_pio2+0x35e>
 8007128:	9a08      	ldr	r2, [sp, #32]
 800712a:	4422      	add	r2, r4
 800712c:	00d2      	lsls	r2, r2, #3
 800712e:	a922      	add	r1, sp, #136	; 0x88
 8007130:	18e3      	adds	r3, r4, r3
 8007132:	9206      	str	r2, [sp, #24]
 8007134:	440a      	add	r2, r1
 8007136:	9302      	str	r3, [sp, #8]
 8007138:	f10b 0108 	add.w	r1, fp, #8
 800713c:	f102 0308 	add.w	r3, r2, #8
 8007140:	1c66      	adds	r6, r4, #1
 8007142:	910a      	str	r1, [sp, #40]	; 0x28
 8007144:	2500      	movs	r5, #0
 8007146:	930d      	str	r3, [sp, #52]	; 0x34
 8007148:	9b02      	ldr	r3, [sp, #8]
 800714a:	42b3      	cmp	r3, r6
 800714c:	da04      	bge.n	8007158 <__kernel_rem_pio2+0x398>
 800714e:	461c      	mov	r4, r3
 8007150:	e6a6      	b.n	8006ea0 <__kernel_rem_pio2+0xe0>
 8007152:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007154:	2301      	movs	r3, #1
 8007156:	e7e3      	b.n	8007120 <__kernel_rem_pio2+0x360>
 8007158:	9b06      	ldr	r3, [sp, #24]
 800715a:	18ef      	adds	r7, r5, r3
 800715c:	ab22      	add	r3, sp, #136	; 0x88
 800715e:	441f      	add	r7, r3
 8007160:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007162:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8007166:	f7f9 f9fd 	bl	8000564 <__aeabi_i2d>
 800716a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800716c:	461c      	mov	r4, r3
 800716e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007170:	e9c7 0100 	strd	r0, r1, [r7]
 8007174:	eb03 0b05 	add.w	fp, r3, r5
 8007178:	2700      	movs	r7, #0
 800717a:	f04f 0800 	mov.w	r8, #0
 800717e:	f04f 0900 	mov.w	r9, #0
 8007182:	9b07      	ldr	r3, [sp, #28]
 8007184:	429f      	cmp	r7, r3
 8007186:	dd08      	ble.n	800719a <__kernel_rem_pio2+0x3da>
 8007188:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800718a:	aa72      	add	r2, sp, #456	; 0x1c8
 800718c:	18eb      	adds	r3, r5, r3
 800718e:	4413      	add	r3, r2
 8007190:	e9c3 8902 	strd	r8, r9, [r3, #8]
 8007194:	3601      	adds	r6, #1
 8007196:	3508      	adds	r5, #8
 8007198:	e7d6      	b.n	8007148 <__kernel_rem_pio2+0x388>
 800719a:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 800719e:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 80071a2:	f7f9 fa49 	bl	8000638 <__aeabi_dmul>
 80071a6:	4602      	mov	r2, r0
 80071a8:	460b      	mov	r3, r1
 80071aa:	4640      	mov	r0, r8
 80071ac:	4649      	mov	r1, r9
 80071ae:	f7f9 f88d 	bl	80002cc <__adddf3>
 80071b2:	3701      	adds	r7, #1
 80071b4:	4680      	mov	r8, r0
 80071b6:	4689      	mov	r9, r1
 80071b8:	e7e3      	b.n	8007182 <__kernel_rem_pio2+0x3c2>
 80071ba:	3d01      	subs	r5, #1
 80071bc:	e741      	b.n	8007042 <__kernel_rem_pio2+0x282>
 80071be:	f1ca 0000 	rsb	r0, sl, #0
 80071c2:	ec47 6b10 	vmov	d0, r6, r7
 80071c6:	f000 fa83 	bl	80076d0 <scalbn>
 80071ca:	ec57 6b10 	vmov	r6, r7, d0
 80071ce:	2200      	movs	r2, #0
 80071d0:	4b99      	ldr	r3, [pc, #612]	; (8007438 <__kernel_rem_pio2+0x678>)
 80071d2:	ee10 0a10 	vmov	r0, s0
 80071d6:	4639      	mov	r1, r7
 80071d8:	f7f9 fcb4 	bl	8000b44 <__aeabi_dcmpge>
 80071dc:	b1f8      	cbz	r0, 800721e <__kernel_rem_pio2+0x45e>
 80071de:	2200      	movs	r2, #0
 80071e0:	4b96      	ldr	r3, [pc, #600]	; (800743c <__kernel_rem_pio2+0x67c>)
 80071e2:	4630      	mov	r0, r6
 80071e4:	4639      	mov	r1, r7
 80071e6:	f7f9 fa27 	bl	8000638 <__aeabi_dmul>
 80071ea:	f7f9 fcbf 	bl	8000b6c <__aeabi_d2iz>
 80071ee:	4680      	mov	r8, r0
 80071f0:	f7f9 f9b8 	bl	8000564 <__aeabi_i2d>
 80071f4:	2200      	movs	r2, #0
 80071f6:	4b90      	ldr	r3, [pc, #576]	; (8007438 <__kernel_rem_pio2+0x678>)
 80071f8:	f7f9 fa1e 	bl	8000638 <__aeabi_dmul>
 80071fc:	460b      	mov	r3, r1
 80071fe:	4602      	mov	r2, r0
 8007200:	4639      	mov	r1, r7
 8007202:	4630      	mov	r0, r6
 8007204:	f7f9 f860 	bl	80002c8 <__aeabi_dsub>
 8007208:	f7f9 fcb0 	bl	8000b6c <__aeabi_d2iz>
 800720c:	1c65      	adds	r5, r4, #1
 800720e:	ab0e      	add	r3, sp, #56	; 0x38
 8007210:	f10a 0a18 	add.w	sl, sl, #24
 8007214:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8007218:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 800721c:	e719      	b.n	8007052 <__kernel_rem_pio2+0x292>
 800721e:	4630      	mov	r0, r6
 8007220:	4639      	mov	r1, r7
 8007222:	f7f9 fca3 	bl	8000b6c <__aeabi_d2iz>
 8007226:	ab0e      	add	r3, sp, #56	; 0x38
 8007228:	4625      	mov	r5, r4
 800722a:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800722e:	e710      	b.n	8007052 <__kernel_rem_pio2+0x292>
 8007230:	ab0e      	add	r3, sp, #56	; 0x38
 8007232:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8007236:	f7f9 f995 	bl	8000564 <__aeabi_i2d>
 800723a:	4642      	mov	r2, r8
 800723c:	464b      	mov	r3, r9
 800723e:	f7f9 f9fb 	bl	8000638 <__aeabi_dmul>
 8007242:	2200      	movs	r2, #0
 8007244:	e96a 0102 	strd	r0, r1, [sl, #-8]!
 8007248:	4b7c      	ldr	r3, [pc, #496]	; (800743c <__kernel_rem_pio2+0x67c>)
 800724a:	4640      	mov	r0, r8
 800724c:	4649      	mov	r1, r9
 800724e:	f7f9 f9f3 	bl	8000638 <__aeabi_dmul>
 8007252:	3f01      	subs	r7, #1
 8007254:	4680      	mov	r8, r0
 8007256:	4689      	mov	r9, r1
 8007258:	e708      	b.n	800706c <__kernel_rem_pio2+0x2ac>
 800725a:	eb06 03c7 	add.w	r3, r6, r7, lsl #3
 800725e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007262:	e8fb 0102 	ldrd	r0, r1, [fp], #8
 8007266:	f7f9 f9e7 	bl	8000638 <__aeabi_dmul>
 800726a:	4602      	mov	r2, r0
 800726c:	460b      	mov	r3, r1
 800726e:	4640      	mov	r0, r8
 8007270:	4649      	mov	r1, r9
 8007272:	f7f9 f82b 	bl	80002cc <__adddf3>
 8007276:	3701      	adds	r7, #1
 8007278:	4680      	mov	r8, r0
 800727a:	4689      	mov	r9, r1
 800727c:	9b04      	ldr	r3, [sp, #16]
 800727e:	429f      	cmp	r7, r3
 8007280:	dc01      	bgt.n	8007286 <__kernel_rem_pio2+0x4c6>
 8007282:	45ba      	cmp	sl, r7
 8007284:	dae9      	bge.n	800725a <__kernel_rem_pio2+0x49a>
 8007286:	ab4a      	add	r3, sp, #296	; 0x128
 8007288:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800728c:	e9c3 8900 	strd	r8, r9, [r3]
 8007290:	f10a 0a01 	add.w	sl, sl, #1
 8007294:	3e08      	subs	r6, #8
 8007296:	e6f0      	b.n	800707a <__kernel_rem_pio2+0x2ba>
 8007298:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800729a:	2b03      	cmp	r3, #3
 800729c:	d85b      	bhi.n	8007356 <__kernel_rem_pio2+0x596>
 800729e:	e8df f003 	tbb	[pc, r3]
 80072a2:	264a      	.short	0x264a
 80072a4:	0226      	.short	0x0226
 80072a6:	ab9a      	add	r3, sp, #616	; 0x268
 80072a8:	441c      	add	r4, r3
 80072aa:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 80072ae:	46a2      	mov	sl, r4
 80072b0:	46ab      	mov	fp, r5
 80072b2:	f1bb 0f00 	cmp.w	fp, #0
 80072b6:	dc6c      	bgt.n	8007392 <__kernel_rem_pio2+0x5d2>
 80072b8:	46a2      	mov	sl, r4
 80072ba:	46ab      	mov	fp, r5
 80072bc:	f1bb 0f01 	cmp.w	fp, #1
 80072c0:	f300 8086 	bgt.w	80073d0 <__kernel_rem_pio2+0x610>
 80072c4:	2000      	movs	r0, #0
 80072c6:	2100      	movs	r1, #0
 80072c8:	2d01      	cmp	r5, #1
 80072ca:	f300 80a0 	bgt.w	800740e <__kernel_rem_pio2+0x64e>
 80072ce:	9b02      	ldr	r3, [sp, #8]
 80072d0:	e9dd 784a 	ldrd	r7, r8, [sp, #296]	; 0x128
 80072d4:	e9dd 564c 	ldrd	r5, r6, [sp, #304]	; 0x130
 80072d8:	2b00      	cmp	r3, #0
 80072da:	f040 809e 	bne.w	800741a <__kernel_rem_pio2+0x65a>
 80072de:	9b01      	ldr	r3, [sp, #4]
 80072e0:	e9c3 7800 	strd	r7, r8, [r3]
 80072e4:	e9c3 5602 	strd	r5, r6, [r3, #8]
 80072e8:	e9c3 0104 	strd	r0, r1, [r3, #16]
 80072ec:	e033      	b.n	8007356 <__kernel_rem_pio2+0x596>
 80072ee:	3408      	adds	r4, #8
 80072f0:	ab4a      	add	r3, sp, #296	; 0x128
 80072f2:	441c      	add	r4, r3
 80072f4:	462e      	mov	r6, r5
 80072f6:	2000      	movs	r0, #0
 80072f8:	2100      	movs	r1, #0
 80072fa:	2e00      	cmp	r6, #0
 80072fc:	da3a      	bge.n	8007374 <__kernel_rem_pio2+0x5b4>
 80072fe:	9b02      	ldr	r3, [sp, #8]
 8007300:	2b00      	cmp	r3, #0
 8007302:	d03d      	beq.n	8007380 <__kernel_rem_pio2+0x5c0>
 8007304:	4602      	mov	r2, r0
 8007306:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800730a:	9c01      	ldr	r4, [sp, #4]
 800730c:	e9c4 2300 	strd	r2, r3, [r4]
 8007310:	4602      	mov	r2, r0
 8007312:	460b      	mov	r3, r1
 8007314:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 8007318:	f7f8 ffd6 	bl	80002c8 <__aeabi_dsub>
 800731c:	ae4c      	add	r6, sp, #304	; 0x130
 800731e:	2401      	movs	r4, #1
 8007320:	42a5      	cmp	r5, r4
 8007322:	da30      	bge.n	8007386 <__kernel_rem_pio2+0x5c6>
 8007324:	9b02      	ldr	r3, [sp, #8]
 8007326:	b113      	cbz	r3, 800732e <__kernel_rem_pio2+0x56e>
 8007328:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800732c:	4619      	mov	r1, r3
 800732e:	9b01      	ldr	r3, [sp, #4]
 8007330:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8007334:	e00f      	b.n	8007356 <__kernel_rem_pio2+0x596>
 8007336:	ab9a      	add	r3, sp, #616	; 0x268
 8007338:	441c      	add	r4, r3
 800733a:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 800733e:	2000      	movs	r0, #0
 8007340:	2100      	movs	r1, #0
 8007342:	2d00      	cmp	r5, #0
 8007344:	da10      	bge.n	8007368 <__kernel_rem_pio2+0x5a8>
 8007346:	9b02      	ldr	r3, [sp, #8]
 8007348:	b113      	cbz	r3, 8007350 <__kernel_rem_pio2+0x590>
 800734a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800734e:	4619      	mov	r1, r3
 8007350:	9b01      	ldr	r3, [sp, #4]
 8007352:	e9c3 0100 	strd	r0, r1, [r3]
 8007356:	9b06      	ldr	r3, [sp, #24]
 8007358:	f003 0007 	and.w	r0, r3, #7
 800735c:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 8007360:	ecbd 8b02 	vpop	{d8}
 8007364:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007368:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800736c:	f7f8 ffae 	bl	80002cc <__adddf3>
 8007370:	3d01      	subs	r5, #1
 8007372:	e7e6      	b.n	8007342 <__kernel_rem_pio2+0x582>
 8007374:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8007378:	f7f8 ffa8 	bl	80002cc <__adddf3>
 800737c:	3e01      	subs	r6, #1
 800737e:	e7bc      	b.n	80072fa <__kernel_rem_pio2+0x53a>
 8007380:	4602      	mov	r2, r0
 8007382:	460b      	mov	r3, r1
 8007384:	e7c1      	b.n	800730a <__kernel_rem_pio2+0x54a>
 8007386:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 800738a:	f7f8 ff9f 	bl	80002cc <__adddf3>
 800738e:	3401      	adds	r4, #1
 8007390:	e7c6      	b.n	8007320 <__kernel_rem_pio2+0x560>
 8007392:	e95a 8904 	ldrd	r8, r9, [sl, #-16]
 8007396:	ed3a 7b02 	vldmdb	sl!, {d7}
 800739a:	4640      	mov	r0, r8
 800739c:	ec53 2b17 	vmov	r2, r3, d7
 80073a0:	4649      	mov	r1, r9
 80073a2:	ed8d 7b04 	vstr	d7, [sp, #16]
 80073a6:	f7f8 ff91 	bl	80002cc <__adddf3>
 80073aa:	4602      	mov	r2, r0
 80073ac:	460b      	mov	r3, r1
 80073ae:	4606      	mov	r6, r0
 80073b0:	460f      	mov	r7, r1
 80073b2:	4640      	mov	r0, r8
 80073b4:	4649      	mov	r1, r9
 80073b6:	f7f8 ff87 	bl	80002c8 <__aeabi_dsub>
 80073ba:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80073be:	f7f8 ff85 	bl	80002cc <__adddf3>
 80073c2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80073c6:	e9ca 0100 	strd	r0, r1, [sl]
 80073ca:	e94a 6702 	strd	r6, r7, [sl, #-8]
 80073ce:	e770      	b.n	80072b2 <__kernel_rem_pio2+0x4f2>
 80073d0:	e95a 6704 	ldrd	r6, r7, [sl, #-16]
 80073d4:	ed3a 7b02 	vldmdb	sl!, {d7}
 80073d8:	4630      	mov	r0, r6
 80073da:	ec53 2b17 	vmov	r2, r3, d7
 80073de:	4639      	mov	r1, r7
 80073e0:	ed8d 7b04 	vstr	d7, [sp, #16]
 80073e4:	f7f8 ff72 	bl	80002cc <__adddf3>
 80073e8:	4602      	mov	r2, r0
 80073ea:	460b      	mov	r3, r1
 80073ec:	4680      	mov	r8, r0
 80073ee:	4689      	mov	r9, r1
 80073f0:	4630      	mov	r0, r6
 80073f2:	4639      	mov	r1, r7
 80073f4:	f7f8 ff68 	bl	80002c8 <__aeabi_dsub>
 80073f8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80073fc:	f7f8 ff66 	bl	80002cc <__adddf3>
 8007400:	f10b 3bff 	add.w	fp, fp, #4294967295
 8007404:	e9ca 0100 	strd	r0, r1, [sl]
 8007408:	e94a 8902 	strd	r8, r9, [sl, #-8]
 800740c:	e756      	b.n	80072bc <__kernel_rem_pio2+0x4fc>
 800740e:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8007412:	f7f8 ff5b 	bl	80002cc <__adddf3>
 8007416:	3d01      	subs	r5, #1
 8007418:	e756      	b.n	80072c8 <__kernel_rem_pio2+0x508>
 800741a:	9b01      	ldr	r3, [sp, #4]
 800741c:	9a01      	ldr	r2, [sp, #4]
 800741e:	601f      	str	r7, [r3, #0]
 8007420:	f108 4400 	add.w	r4, r8, #2147483648	; 0x80000000
 8007424:	605c      	str	r4, [r3, #4]
 8007426:	609d      	str	r5, [r3, #8]
 8007428:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800742c:	60d3      	str	r3, [r2, #12]
 800742e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8007432:	6110      	str	r0, [r2, #16]
 8007434:	6153      	str	r3, [r2, #20]
 8007436:	e78e      	b.n	8007356 <__kernel_rem_pio2+0x596>
 8007438:	41700000 	.word	0x41700000
 800743c:	3e700000 	.word	0x3e700000

08007440 <__kernel_sin>:
 8007440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007444:	ec55 4b10 	vmov	r4, r5, d0
 8007448:	b085      	sub	sp, #20
 800744a:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800744e:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 8007452:	ed8d 1b00 	vstr	d1, [sp]
 8007456:	9002      	str	r0, [sp, #8]
 8007458:	da06      	bge.n	8007468 <__kernel_sin+0x28>
 800745a:	ee10 0a10 	vmov	r0, s0
 800745e:	4629      	mov	r1, r5
 8007460:	f7f9 fb84 	bl	8000b6c <__aeabi_d2iz>
 8007464:	2800      	cmp	r0, #0
 8007466:	d051      	beq.n	800750c <__kernel_sin+0xcc>
 8007468:	4622      	mov	r2, r4
 800746a:	462b      	mov	r3, r5
 800746c:	4620      	mov	r0, r4
 800746e:	4629      	mov	r1, r5
 8007470:	f7f9 f8e2 	bl	8000638 <__aeabi_dmul>
 8007474:	4682      	mov	sl, r0
 8007476:	468b      	mov	fp, r1
 8007478:	4602      	mov	r2, r0
 800747a:	460b      	mov	r3, r1
 800747c:	4620      	mov	r0, r4
 800747e:	4629      	mov	r1, r5
 8007480:	f7f9 f8da 	bl	8000638 <__aeabi_dmul>
 8007484:	a341      	add	r3, pc, #260	; (adr r3, 800758c <__kernel_sin+0x14c>)
 8007486:	e9d3 2300 	ldrd	r2, r3, [r3]
 800748a:	4680      	mov	r8, r0
 800748c:	4689      	mov	r9, r1
 800748e:	4650      	mov	r0, sl
 8007490:	4659      	mov	r1, fp
 8007492:	f7f9 f8d1 	bl	8000638 <__aeabi_dmul>
 8007496:	a33f      	add	r3, pc, #252	; (adr r3, 8007594 <__kernel_sin+0x154>)
 8007498:	e9d3 2300 	ldrd	r2, r3, [r3]
 800749c:	f7f8 ff14 	bl	80002c8 <__aeabi_dsub>
 80074a0:	4652      	mov	r2, sl
 80074a2:	465b      	mov	r3, fp
 80074a4:	f7f9 f8c8 	bl	8000638 <__aeabi_dmul>
 80074a8:	a33c      	add	r3, pc, #240	; (adr r3, 800759c <__kernel_sin+0x15c>)
 80074aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074ae:	f7f8 ff0d 	bl	80002cc <__adddf3>
 80074b2:	4652      	mov	r2, sl
 80074b4:	465b      	mov	r3, fp
 80074b6:	f7f9 f8bf 	bl	8000638 <__aeabi_dmul>
 80074ba:	a33a      	add	r3, pc, #232	; (adr r3, 80075a4 <__kernel_sin+0x164>)
 80074bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074c0:	f7f8 ff02 	bl	80002c8 <__aeabi_dsub>
 80074c4:	4652      	mov	r2, sl
 80074c6:	465b      	mov	r3, fp
 80074c8:	f7f9 f8b6 	bl	8000638 <__aeabi_dmul>
 80074cc:	a337      	add	r3, pc, #220	; (adr r3, 80075ac <__kernel_sin+0x16c>)
 80074ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074d2:	f7f8 fefb 	bl	80002cc <__adddf3>
 80074d6:	9b02      	ldr	r3, [sp, #8]
 80074d8:	4606      	mov	r6, r0
 80074da:	460f      	mov	r7, r1
 80074dc:	b9db      	cbnz	r3, 8007516 <__kernel_sin+0xd6>
 80074de:	4602      	mov	r2, r0
 80074e0:	460b      	mov	r3, r1
 80074e2:	4650      	mov	r0, sl
 80074e4:	4659      	mov	r1, fp
 80074e6:	f7f9 f8a7 	bl	8000638 <__aeabi_dmul>
 80074ea:	a325      	add	r3, pc, #148	; (adr r3, 8007580 <__kernel_sin+0x140>)
 80074ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074f0:	f7f8 feea 	bl	80002c8 <__aeabi_dsub>
 80074f4:	4642      	mov	r2, r8
 80074f6:	464b      	mov	r3, r9
 80074f8:	f7f9 f89e 	bl	8000638 <__aeabi_dmul>
 80074fc:	4602      	mov	r2, r0
 80074fe:	460b      	mov	r3, r1
 8007500:	4620      	mov	r0, r4
 8007502:	4629      	mov	r1, r5
 8007504:	f7f8 fee2 	bl	80002cc <__adddf3>
 8007508:	4604      	mov	r4, r0
 800750a:	460d      	mov	r5, r1
 800750c:	ec45 4b10 	vmov	d0, r4, r5
 8007510:	b005      	add	sp, #20
 8007512:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007516:	2200      	movs	r2, #0
 8007518:	4b1b      	ldr	r3, [pc, #108]	; (8007588 <__kernel_sin+0x148>)
 800751a:	e9dd 0100 	ldrd	r0, r1, [sp]
 800751e:	f7f9 f88b 	bl	8000638 <__aeabi_dmul>
 8007522:	4632      	mov	r2, r6
 8007524:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007528:	463b      	mov	r3, r7
 800752a:	4640      	mov	r0, r8
 800752c:	4649      	mov	r1, r9
 800752e:	f7f9 f883 	bl	8000638 <__aeabi_dmul>
 8007532:	4602      	mov	r2, r0
 8007534:	460b      	mov	r3, r1
 8007536:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800753a:	f7f8 fec5 	bl	80002c8 <__aeabi_dsub>
 800753e:	4652      	mov	r2, sl
 8007540:	465b      	mov	r3, fp
 8007542:	f7f9 f879 	bl	8000638 <__aeabi_dmul>
 8007546:	e9dd 2300 	ldrd	r2, r3, [sp]
 800754a:	f7f8 febd 	bl	80002c8 <__aeabi_dsub>
 800754e:	a30c      	add	r3, pc, #48	; (adr r3, 8007580 <__kernel_sin+0x140>)
 8007550:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007554:	4606      	mov	r6, r0
 8007556:	460f      	mov	r7, r1
 8007558:	4640      	mov	r0, r8
 800755a:	4649      	mov	r1, r9
 800755c:	f7f9 f86c 	bl	8000638 <__aeabi_dmul>
 8007560:	4602      	mov	r2, r0
 8007562:	460b      	mov	r3, r1
 8007564:	4630      	mov	r0, r6
 8007566:	4639      	mov	r1, r7
 8007568:	f7f8 feb0 	bl	80002cc <__adddf3>
 800756c:	4602      	mov	r2, r0
 800756e:	460b      	mov	r3, r1
 8007570:	4620      	mov	r0, r4
 8007572:	4629      	mov	r1, r5
 8007574:	f7f8 fea8 	bl	80002c8 <__aeabi_dsub>
 8007578:	e7c6      	b.n	8007508 <__kernel_sin+0xc8>
 800757a:	bf00      	nop
 800757c:	f3af 8000 	nop.w
 8007580:	55555549 	.word	0x55555549
 8007584:	3fc55555 	.word	0x3fc55555
 8007588:	3fe00000 	.word	0x3fe00000
 800758c:	5acfd57c 	.word	0x5acfd57c
 8007590:	3de5d93a 	.word	0x3de5d93a
 8007594:	8a2b9ceb 	.word	0x8a2b9ceb
 8007598:	3e5ae5e6 	.word	0x3e5ae5e6
 800759c:	57b1fe7d 	.word	0x57b1fe7d
 80075a0:	3ec71de3 	.word	0x3ec71de3
 80075a4:	19c161d5 	.word	0x19c161d5
 80075a8:	3f2a01a0 	.word	0x3f2a01a0
 80075ac:	1110f8a6 	.word	0x1110f8a6
 80075b0:	3f811111 	.word	0x3f811111

080075b4 <fabs>:
 80075b4:	ec51 0b10 	vmov	r0, r1, d0
 80075b8:	ee10 2a10 	vmov	r2, s0
 80075bc:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80075c0:	ec43 2b10 	vmov	d0, r2, r3
 80075c4:	4770      	bx	lr
	...

080075c8 <floor>:
 80075c8:	ec51 0b10 	vmov	r0, r1, d0
 80075cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80075d0:	f3c1 570a 	ubfx	r7, r1, #20, #11
 80075d4:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 80075d8:	2e13      	cmp	r6, #19
 80075da:	460c      	mov	r4, r1
 80075dc:	ee10 5a10 	vmov	r5, s0
 80075e0:	4680      	mov	r8, r0
 80075e2:	dc34      	bgt.n	800764e <floor+0x86>
 80075e4:	2e00      	cmp	r6, #0
 80075e6:	da16      	bge.n	8007616 <floor+0x4e>
 80075e8:	a335      	add	r3, pc, #212	; (adr r3, 80076c0 <floor+0xf8>)
 80075ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80075ee:	f7f8 fe6d 	bl	80002cc <__adddf3>
 80075f2:	2200      	movs	r2, #0
 80075f4:	2300      	movs	r3, #0
 80075f6:	f7f9 faaf 	bl	8000b58 <__aeabi_dcmpgt>
 80075fa:	b148      	cbz	r0, 8007610 <floor+0x48>
 80075fc:	2c00      	cmp	r4, #0
 80075fe:	da59      	bge.n	80076b4 <floor+0xec>
 8007600:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8007604:	4a30      	ldr	r2, [pc, #192]	; (80076c8 <floor+0x100>)
 8007606:	432b      	orrs	r3, r5
 8007608:	2500      	movs	r5, #0
 800760a:	42ab      	cmp	r3, r5
 800760c:	bf18      	it	ne
 800760e:	4614      	movne	r4, r2
 8007610:	4621      	mov	r1, r4
 8007612:	4628      	mov	r0, r5
 8007614:	e025      	b.n	8007662 <floor+0x9a>
 8007616:	4f2d      	ldr	r7, [pc, #180]	; (80076cc <floor+0x104>)
 8007618:	4137      	asrs	r7, r6
 800761a:	ea01 0307 	and.w	r3, r1, r7
 800761e:	4303      	orrs	r3, r0
 8007620:	d01f      	beq.n	8007662 <floor+0x9a>
 8007622:	a327      	add	r3, pc, #156	; (adr r3, 80076c0 <floor+0xf8>)
 8007624:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007628:	f7f8 fe50 	bl	80002cc <__adddf3>
 800762c:	2200      	movs	r2, #0
 800762e:	2300      	movs	r3, #0
 8007630:	f7f9 fa92 	bl	8000b58 <__aeabi_dcmpgt>
 8007634:	2800      	cmp	r0, #0
 8007636:	d0eb      	beq.n	8007610 <floor+0x48>
 8007638:	2c00      	cmp	r4, #0
 800763a:	bfbe      	ittt	lt
 800763c:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8007640:	fa43 f606 	asrlt.w	r6, r3, r6
 8007644:	19a4      	addlt	r4, r4, r6
 8007646:	ea24 0407 	bic.w	r4, r4, r7
 800764a:	2500      	movs	r5, #0
 800764c:	e7e0      	b.n	8007610 <floor+0x48>
 800764e:	2e33      	cmp	r6, #51	; 0x33
 8007650:	dd0b      	ble.n	800766a <floor+0xa2>
 8007652:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8007656:	d104      	bne.n	8007662 <floor+0x9a>
 8007658:	ee10 2a10 	vmov	r2, s0
 800765c:	460b      	mov	r3, r1
 800765e:	f7f8 fe35 	bl	80002cc <__adddf3>
 8007662:	ec41 0b10 	vmov	d0, r0, r1
 8007666:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800766a:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 800766e:	f04f 33ff 	mov.w	r3, #4294967295
 8007672:	fa23 f707 	lsr.w	r7, r3, r7
 8007676:	4207      	tst	r7, r0
 8007678:	d0f3      	beq.n	8007662 <floor+0x9a>
 800767a:	a311      	add	r3, pc, #68	; (adr r3, 80076c0 <floor+0xf8>)
 800767c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007680:	f7f8 fe24 	bl	80002cc <__adddf3>
 8007684:	2200      	movs	r2, #0
 8007686:	2300      	movs	r3, #0
 8007688:	f7f9 fa66 	bl	8000b58 <__aeabi_dcmpgt>
 800768c:	2800      	cmp	r0, #0
 800768e:	d0bf      	beq.n	8007610 <floor+0x48>
 8007690:	2c00      	cmp	r4, #0
 8007692:	da02      	bge.n	800769a <floor+0xd2>
 8007694:	2e14      	cmp	r6, #20
 8007696:	d103      	bne.n	80076a0 <floor+0xd8>
 8007698:	3401      	adds	r4, #1
 800769a:	ea25 0507 	bic.w	r5, r5, r7
 800769e:	e7b7      	b.n	8007610 <floor+0x48>
 80076a0:	2301      	movs	r3, #1
 80076a2:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 80076a6:	fa03 f606 	lsl.w	r6, r3, r6
 80076aa:	4435      	add	r5, r6
 80076ac:	4545      	cmp	r5, r8
 80076ae:	bf38      	it	cc
 80076b0:	18e4      	addcc	r4, r4, r3
 80076b2:	e7f2      	b.n	800769a <floor+0xd2>
 80076b4:	2500      	movs	r5, #0
 80076b6:	462c      	mov	r4, r5
 80076b8:	e7aa      	b.n	8007610 <floor+0x48>
 80076ba:	bf00      	nop
 80076bc:	f3af 8000 	nop.w
 80076c0:	8800759c 	.word	0x8800759c
 80076c4:	7e37e43c 	.word	0x7e37e43c
 80076c8:	bff00000 	.word	0xbff00000
 80076cc:	000fffff 	.word	0x000fffff

080076d0 <scalbn>:
 80076d0:	b570      	push	{r4, r5, r6, lr}
 80076d2:	ec55 4b10 	vmov	r4, r5, d0
 80076d6:	f3c5 520a 	ubfx	r2, r5, #20, #11
 80076da:	4606      	mov	r6, r0
 80076dc:	462b      	mov	r3, r5
 80076de:	b9aa      	cbnz	r2, 800770c <scalbn+0x3c>
 80076e0:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80076e4:	4323      	orrs	r3, r4
 80076e6:	d03b      	beq.n	8007760 <scalbn+0x90>
 80076e8:	4b31      	ldr	r3, [pc, #196]	; (80077b0 <scalbn+0xe0>)
 80076ea:	4629      	mov	r1, r5
 80076ec:	2200      	movs	r2, #0
 80076ee:	ee10 0a10 	vmov	r0, s0
 80076f2:	f7f8 ffa1 	bl	8000638 <__aeabi_dmul>
 80076f6:	4b2f      	ldr	r3, [pc, #188]	; (80077b4 <scalbn+0xe4>)
 80076f8:	429e      	cmp	r6, r3
 80076fa:	4604      	mov	r4, r0
 80076fc:	460d      	mov	r5, r1
 80076fe:	da12      	bge.n	8007726 <scalbn+0x56>
 8007700:	a327      	add	r3, pc, #156	; (adr r3, 80077a0 <scalbn+0xd0>)
 8007702:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007706:	f7f8 ff97 	bl	8000638 <__aeabi_dmul>
 800770a:	e009      	b.n	8007720 <scalbn+0x50>
 800770c:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8007710:	428a      	cmp	r2, r1
 8007712:	d10c      	bne.n	800772e <scalbn+0x5e>
 8007714:	ee10 2a10 	vmov	r2, s0
 8007718:	4620      	mov	r0, r4
 800771a:	4629      	mov	r1, r5
 800771c:	f7f8 fdd6 	bl	80002cc <__adddf3>
 8007720:	4604      	mov	r4, r0
 8007722:	460d      	mov	r5, r1
 8007724:	e01c      	b.n	8007760 <scalbn+0x90>
 8007726:	f3c1 520a 	ubfx	r2, r1, #20, #11
 800772a:	460b      	mov	r3, r1
 800772c:	3a36      	subs	r2, #54	; 0x36
 800772e:	4432      	add	r2, r6
 8007730:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8007734:	428a      	cmp	r2, r1
 8007736:	dd0b      	ble.n	8007750 <scalbn+0x80>
 8007738:	ec45 4b11 	vmov	d1, r4, r5
 800773c:	ed9f 0b1a 	vldr	d0, [pc, #104]	; 80077a8 <scalbn+0xd8>
 8007740:	f000 f83c 	bl	80077bc <copysign>
 8007744:	a318      	add	r3, pc, #96	; (adr r3, 80077a8 <scalbn+0xd8>)
 8007746:	e9d3 2300 	ldrd	r2, r3, [r3]
 800774a:	ec51 0b10 	vmov	r0, r1, d0
 800774e:	e7da      	b.n	8007706 <scalbn+0x36>
 8007750:	2a00      	cmp	r2, #0
 8007752:	dd08      	ble.n	8007766 <scalbn+0x96>
 8007754:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8007758:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800775c:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8007760:	ec45 4b10 	vmov	d0, r4, r5
 8007764:	bd70      	pop	{r4, r5, r6, pc}
 8007766:	f112 0f35 	cmn.w	r2, #53	; 0x35
 800776a:	da0d      	bge.n	8007788 <scalbn+0xb8>
 800776c:	f24c 3350 	movw	r3, #50000	; 0xc350
 8007770:	429e      	cmp	r6, r3
 8007772:	ec45 4b11 	vmov	d1, r4, r5
 8007776:	dce1      	bgt.n	800773c <scalbn+0x6c>
 8007778:	ed9f 0b09 	vldr	d0, [pc, #36]	; 80077a0 <scalbn+0xd0>
 800777c:	f000 f81e 	bl	80077bc <copysign>
 8007780:	a307      	add	r3, pc, #28	; (adr r3, 80077a0 <scalbn+0xd0>)
 8007782:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007786:	e7e0      	b.n	800774a <scalbn+0x7a>
 8007788:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800778c:	3236      	adds	r2, #54	; 0x36
 800778e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8007792:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8007796:	4620      	mov	r0, r4
 8007798:	4629      	mov	r1, r5
 800779a:	2200      	movs	r2, #0
 800779c:	4b06      	ldr	r3, [pc, #24]	; (80077b8 <scalbn+0xe8>)
 800779e:	e7b2      	b.n	8007706 <scalbn+0x36>
 80077a0:	c2f8f359 	.word	0xc2f8f359
 80077a4:	01a56e1f 	.word	0x01a56e1f
 80077a8:	8800759c 	.word	0x8800759c
 80077ac:	7e37e43c 	.word	0x7e37e43c
 80077b0:	43500000 	.word	0x43500000
 80077b4:	ffff3cb0 	.word	0xffff3cb0
 80077b8:	3c900000 	.word	0x3c900000

080077bc <copysign>:
 80077bc:	ec51 0b10 	vmov	r0, r1, d0
 80077c0:	ee11 0a90 	vmov	r0, s3
 80077c4:	ee10 2a10 	vmov	r2, s0
 80077c8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80077cc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80077d0:	ea41 0300 	orr.w	r3, r1, r0
 80077d4:	ec43 2b10 	vmov	d0, r2, r3
 80077d8:	4770      	bx	lr
	...

080077dc <_init>:
 80077dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80077de:	bf00      	nop
 80077e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80077e2:	bc08      	pop	{r3}
 80077e4:	469e      	mov	lr, r3
 80077e6:	4770      	bx	lr

080077e8 <_fini>:
 80077e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80077ea:	bf00      	nop
 80077ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80077ee:	bc08      	pop	{r3}
 80077f0:	469e      	mov	lr, r3
 80077f2:	4770      	bx	lr
