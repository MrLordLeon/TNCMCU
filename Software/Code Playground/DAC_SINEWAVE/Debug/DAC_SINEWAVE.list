
DAC_SINEWAVE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000081bc  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000007e0  08008390  08008390  00018390  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008b70  08008b70  00020088  2**0
                  CONTENTS
  4 .ARM          00000008  08008b70  08008b70  00018b70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008b78  08008b78  00020088  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008b78  08008b78  00018b78  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08008b7c  08008b7c  00018b7c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000088  20000000  08008b80  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00003430  20000088  08008c08  00020088  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200034b8  08008c08  000234b8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020088  2**0
                  CONTENTS, READONLY
 12 .debug_info   00014370  00000000  00000000  000200b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000029c0  00000000  00000000  00034428  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000ef8  00000000  00000000  00036de8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000dc0  00000000  00000000  00037ce0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000237aa  00000000  00000000  00038aa0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000cfad  00000000  00000000  0005c24a  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000d2a9b  00000000  00000000  000691f7  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0013bc92  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00004538  00000000  00000000  0013bd10  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000088 	.word	0x20000088
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08008374 	.word	0x08008374

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	2000008c 	.word	0x2000008c
 800020c:	08008374 	.word	0x08008374

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003fe:	f1a4 0401 	sub.w	r4, r4, #1
 8000402:	d1e9      	bne.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2uiz>:
 8000b98:	004a      	lsls	r2, r1, #1
 8000b9a:	d211      	bcs.n	8000bc0 <__aeabi_d2uiz+0x28>
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d211      	bcs.n	8000bc6 <__aeabi_d2uiz+0x2e>
 8000ba2:	d50d      	bpl.n	8000bc0 <__aeabi_d2uiz+0x28>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d40e      	bmi.n	8000bcc <__aeabi_d2uiz+0x34>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	fa23 f002 	lsr.w	r0, r3, r2
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bca:	d102      	bne.n	8000bd2 <__aeabi_d2uiz+0x3a>
 8000bcc:	f04f 30ff 	mov.w	r0, #4294967295
 8000bd0:	4770      	bx	lr
 8000bd2:	f04f 0000 	mov.w	r0, #0
 8000bd6:	4770      	bx	lr

08000bd8 <__aeabi_uldivmod>:
 8000bd8:	b953      	cbnz	r3, 8000bf0 <__aeabi_uldivmod+0x18>
 8000bda:	b94a      	cbnz	r2, 8000bf0 <__aeabi_uldivmod+0x18>
 8000bdc:	2900      	cmp	r1, #0
 8000bde:	bf08      	it	eq
 8000be0:	2800      	cmpeq	r0, #0
 8000be2:	bf1c      	itt	ne
 8000be4:	f04f 31ff 	movne.w	r1, #4294967295
 8000be8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bec:	f000 b972 	b.w	8000ed4 <__aeabi_idiv0>
 8000bf0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bf4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bf8:	f000 f806 	bl	8000c08 <__udivmoddi4>
 8000bfc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c00:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c04:	b004      	add	sp, #16
 8000c06:	4770      	bx	lr

08000c08 <__udivmoddi4>:
 8000c08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c0c:	9e08      	ldr	r6, [sp, #32]
 8000c0e:	4604      	mov	r4, r0
 8000c10:	4688      	mov	r8, r1
 8000c12:	2b00      	cmp	r3, #0
 8000c14:	d14b      	bne.n	8000cae <__udivmoddi4+0xa6>
 8000c16:	428a      	cmp	r2, r1
 8000c18:	4615      	mov	r5, r2
 8000c1a:	d967      	bls.n	8000cec <__udivmoddi4+0xe4>
 8000c1c:	fab2 f282 	clz	r2, r2
 8000c20:	b14a      	cbz	r2, 8000c36 <__udivmoddi4+0x2e>
 8000c22:	f1c2 0720 	rsb	r7, r2, #32
 8000c26:	fa01 f302 	lsl.w	r3, r1, r2
 8000c2a:	fa20 f707 	lsr.w	r7, r0, r7
 8000c2e:	4095      	lsls	r5, r2
 8000c30:	ea47 0803 	orr.w	r8, r7, r3
 8000c34:	4094      	lsls	r4, r2
 8000c36:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000c3a:	0c23      	lsrs	r3, r4, #16
 8000c3c:	fbb8 f7fe 	udiv	r7, r8, lr
 8000c40:	fa1f fc85 	uxth.w	ip, r5
 8000c44:	fb0e 8817 	mls	r8, lr, r7, r8
 8000c48:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000c4c:	fb07 f10c 	mul.w	r1, r7, ip
 8000c50:	4299      	cmp	r1, r3
 8000c52:	d909      	bls.n	8000c68 <__udivmoddi4+0x60>
 8000c54:	18eb      	adds	r3, r5, r3
 8000c56:	f107 30ff 	add.w	r0, r7, #4294967295
 8000c5a:	f080 811b 	bcs.w	8000e94 <__udivmoddi4+0x28c>
 8000c5e:	4299      	cmp	r1, r3
 8000c60:	f240 8118 	bls.w	8000e94 <__udivmoddi4+0x28c>
 8000c64:	3f02      	subs	r7, #2
 8000c66:	442b      	add	r3, r5
 8000c68:	1a5b      	subs	r3, r3, r1
 8000c6a:	b2a4      	uxth	r4, r4
 8000c6c:	fbb3 f0fe 	udiv	r0, r3, lr
 8000c70:	fb0e 3310 	mls	r3, lr, r0, r3
 8000c74:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c78:	fb00 fc0c 	mul.w	ip, r0, ip
 8000c7c:	45a4      	cmp	ip, r4
 8000c7e:	d909      	bls.n	8000c94 <__udivmoddi4+0x8c>
 8000c80:	192c      	adds	r4, r5, r4
 8000c82:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c86:	f080 8107 	bcs.w	8000e98 <__udivmoddi4+0x290>
 8000c8a:	45a4      	cmp	ip, r4
 8000c8c:	f240 8104 	bls.w	8000e98 <__udivmoddi4+0x290>
 8000c90:	3802      	subs	r0, #2
 8000c92:	442c      	add	r4, r5
 8000c94:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000c98:	eba4 040c 	sub.w	r4, r4, ip
 8000c9c:	2700      	movs	r7, #0
 8000c9e:	b11e      	cbz	r6, 8000ca8 <__udivmoddi4+0xa0>
 8000ca0:	40d4      	lsrs	r4, r2
 8000ca2:	2300      	movs	r3, #0
 8000ca4:	e9c6 4300 	strd	r4, r3, [r6]
 8000ca8:	4639      	mov	r1, r7
 8000caa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cae:	428b      	cmp	r3, r1
 8000cb0:	d909      	bls.n	8000cc6 <__udivmoddi4+0xbe>
 8000cb2:	2e00      	cmp	r6, #0
 8000cb4:	f000 80eb 	beq.w	8000e8e <__udivmoddi4+0x286>
 8000cb8:	2700      	movs	r7, #0
 8000cba:	e9c6 0100 	strd	r0, r1, [r6]
 8000cbe:	4638      	mov	r0, r7
 8000cc0:	4639      	mov	r1, r7
 8000cc2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cc6:	fab3 f783 	clz	r7, r3
 8000cca:	2f00      	cmp	r7, #0
 8000ccc:	d147      	bne.n	8000d5e <__udivmoddi4+0x156>
 8000cce:	428b      	cmp	r3, r1
 8000cd0:	d302      	bcc.n	8000cd8 <__udivmoddi4+0xd0>
 8000cd2:	4282      	cmp	r2, r0
 8000cd4:	f200 80fa 	bhi.w	8000ecc <__udivmoddi4+0x2c4>
 8000cd8:	1a84      	subs	r4, r0, r2
 8000cda:	eb61 0303 	sbc.w	r3, r1, r3
 8000cde:	2001      	movs	r0, #1
 8000ce0:	4698      	mov	r8, r3
 8000ce2:	2e00      	cmp	r6, #0
 8000ce4:	d0e0      	beq.n	8000ca8 <__udivmoddi4+0xa0>
 8000ce6:	e9c6 4800 	strd	r4, r8, [r6]
 8000cea:	e7dd      	b.n	8000ca8 <__udivmoddi4+0xa0>
 8000cec:	b902      	cbnz	r2, 8000cf0 <__udivmoddi4+0xe8>
 8000cee:	deff      	udf	#255	; 0xff
 8000cf0:	fab2 f282 	clz	r2, r2
 8000cf4:	2a00      	cmp	r2, #0
 8000cf6:	f040 808f 	bne.w	8000e18 <__udivmoddi4+0x210>
 8000cfa:	1b49      	subs	r1, r1, r5
 8000cfc:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000d00:	fa1f f885 	uxth.w	r8, r5
 8000d04:	2701      	movs	r7, #1
 8000d06:	fbb1 fcfe 	udiv	ip, r1, lr
 8000d0a:	0c23      	lsrs	r3, r4, #16
 8000d0c:	fb0e 111c 	mls	r1, lr, ip, r1
 8000d10:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d14:	fb08 f10c 	mul.w	r1, r8, ip
 8000d18:	4299      	cmp	r1, r3
 8000d1a:	d907      	bls.n	8000d2c <__udivmoddi4+0x124>
 8000d1c:	18eb      	adds	r3, r5, r3
 8000d1e:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000d22:	d202      	bcs.n	8000d2a <__udivmoddi4+0x122>
 8000d24:	4299      	cmp	r1, r3
 8000d26:	f200 80cd 	bhi.w	8000ec4 <__udivmoddi4+0x2bc>
 8000d2a:	4684      	mov	ip, r0
 8000d2c:	1a59      	subs	r1, r3, r1
 8000d2e:	b2a3      	uxth	r3, r4
 8000d30:	fbb1 f0fe 	udiv	r0, r1, lr
 8000d34:	fb0e 1410 	mls	r4, lr, r0, r1
 8000d38:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000d3c:	fb08 f800 	mul.w	r8, r8, r0
 8000d40:	45a0      	cmp	r8, r4
 8000d42:	d907      	bls.n	8000d54 <__udivmoddi4+0x14c>
 8000d44:	192c      	adds	r4, r5, r4
 8000d46:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d4a:	d202      	bcs.n	8000d52 <__udivmoddi4+0x14a>
 8000d4c:	45a0      	cmp	r8, r4
 8000d4e:	f200 80b6 	bhi.w	8000ebe <__udivmoddi4+0x2b6>
 8000d52:	4618      	mov	r0, r3
 8000d54:	eba4 0408 	sub.w	r4, r4, r8
 8000d58:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000d5c:	e79f      	b.n	8000c9e <__udivmoddi4+0x96>
 8000d5e:	f1c7 0c20 	rsb	ip, r7, #32
 8000d62:	40bb      	lsls	r3, r7
 8000d64:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000d68:	ea4e 0e03 	orr.w	lr, lr, r3
 8000d6c:	fa01 f407 	lsl.w	r4, r1, r7
 8000d70:	fa20 f50c 	lsr.w	r5, r0, ip
 8000d74:	fa21 f30c 	lsr.w	r3, r1, ip
 8000d78:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000d7c:	4325      	orrs	r5, r4
 8000d7e:	fbb3 f9f8 	udiv	r9, r3, r8
 8000d82:	0c2c      	lsrs	r4, r5, #16
 8000d84:	fb08 3319 	mls	r3, r8, r9, r3
 8000d88:	fa1f fa8e 	uxth.w	sl, lr
 8000d8c:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000d90:	fb09 f40a 	mul.w	r4, r9, sl
 8000d94:	429c      	cmp	r4, r3
 8000d96:	fa02 f207 	lsl.w	r2, r2, r7
 8000d9a:	fa00 f107 	lsl.w	r1, r0, r7
 8000d9e:	d90b      	bls.n	8000db8 <__udivmoddi4+0x1b0>
 8000da0:	eb1e 0303 	adds.w	r3, lr, r3
 8000da4:	f109 30ff 	add.w	r0, r9, #4294967295
 8000da8:	f080 8087 	bcs.w	8000eba <__udivmoddi4+0x2b2>
 8000dac:	429c      	cmp	r4, r3
 8000dae:	f240 8084 	bls.w	8000eba <__udivmoddi4+0x2b2>
 8000db2:	f1a9 0902 	sub.w	r9, r9, #2
 8000db6:	4473      	add	r3, lr
 8000db8:	1b1b      	subs	r3, r3, r4
 8000dba:	b2ad      	uxth	r5, r5
 8000dbc:	fbb3 f0f8 	udiv	r0, r3, r8
 8000dc0:	fb08 3310 	mls	r3, r8, r0, r3
 8000dc4:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000dc8:	fb00 fa0a 	mul.w	sl, r0, sl
 8000dcc:	45a2      	cmp	sl, r4
 8000dce:	d908      	bls.n	8000de2 <__udivmoddi4+0x1da>
 8000dd0:	eb1e 0404 	adds.w	r4, lr, r4
 8000dd4:	f100 33ff 	add.w	r3, r0, #4294967295
 8000dd8:	d26b      	bcs.n	8000eb2 <__udivmoddi4+0x2aa>
 8000dda:	45a2      	cmp	sl, r4
 8000ddc:	d969      	bls.n	8000eb2 <__udivmoddi4+0x2aa>
 8000dde:	3802      	subs	r0, #2
 8000de0:	4474      	add	r4, lr
 8000de2:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000de6:	fba0 8902 	umull	r8, r9, r0, r2
 8000dea:	eba4 040a 	sub.w	r4, r4, sl
 8000dee:	454c      	cmp	r4, r9
 8000df0:	46c2      	mov	sl, r8
 8000df2:	464b      	mov	r3, r9
 8000df4:	d354      	bcc.n	8000ea0 <__udivmoddi4+0x298>
 8000df6:	d051      	beq.n	8000e9c <__udivmoddi4+0x294>
 8000df8:	2e00      	cmp	r6, #0
 8000dfa:	d069      	beq.n	8000ed0 <__udivmoddi4+0x2c8>
 8000dfc:	ebb1 050a 	subs.w	r5, r1, sl
 8000e00:	eb64 0403 	sbc.w	r4, r4, r3
 8000e04:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000e08:	40fd      	lsrs	r5, r7
 8000e0a:	40fc      	lsrs	r4, r7
 8000e0c:	ea4c 0505 	orr.w	r5, ip, r5
 8000e10:	e9c6 5400 	strd	r5, r4, [r6]
 8000e14:	2700      	movs	r7, #0
 8000e16:	e747      	b.n	8000ca8 <__udivmoddi4+0xa0>
 8000e18:	f1c2 0320 	rsb	r3, r2, #32
 8000e1c:	fa20 f703 	lsr.w	r7, r0, r3
 8000e20:	4095      	lsls	r5, r2
 8000e22:	fa01 f002 	lsl.w	r0, r1, r2
 8000e26:	fa21 f303 	lsr.w	r3, r1, r3
 8000e2a:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000e2e:	4338      	orrs	r0, r7
 8000e30:	0c01      	lsrs	r1, r0, #16
 8000e32:	fbb3 f7fe 	udiv	r7, r3, lr
 8000e36:	fa1f f885 	uxth.w	r8, r5
 8000e3a:	fb0e 3317 	mls	r3, lr, r7, r3
 8000e3e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e42:	fb07 f308 	mul.w	r3, r7, r8
 8000e46:	428b      	cmp	r3, r1
 8000e48:	fa04 f402 	lsl.w	r4, r4, r2
 8000e4c:	d907      	bls.n	8000e5e <__udivmoddi4+0x256>
 8000e4e:	1869      	adds	r1, r5, r1
 8000e50:	f107 3cff 	add.w	ip, r7, #4294967295
 8000e54:	d22f      	bcs.n	8000eb6 <__udivmoddi4+0x2ae>
 8000e56:	428b      	cmp	r3, r1
 8000e58:	d92d      	bls.n	8000eb6 <__udivmoddi4+0x2ae>
 8000e5a:	3f02      	subs	r7, #2
 8000e5c:	4429      	add	r1, r5
 8000e5e:	1acb      	subs	r3, r1, r3
 8000e60:	b281      	uxth	r1, r0
 8000e62:	fbb3 f0fe 	udiv	r0, r3, lr
 8000e66:	fb0e 3310 	mls	r3, lr, r0, r3
 8000e6a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e6e:	fb00 f308 	mul.w	r3, r0, r8
 8000e72:	428b      	cmp	r3, r1
 8000e74:	d907      	bls.n	8000e86 <__udivmoddi4+0x27e>
 8000e76:	1869      	adds	r1, r5, r1
 8000e78:	f100 3cff 	add.w	ip, r0, #4294967295
 8000e7c:	d217      	bcs.n	8000eae <__udivmoddi4+0x2a6>
 8000e7e:	428b      	cmp	r3, r1
 8000e80:	d915      	bls.n	8000eae <__udivmoddi4+0x2a6>
 8000e82:	3802      	subs	r0, #2
 8000e84:	4429      	add	r1, r5
 8000e86:	1ac9      	subs	r1, r1, r3
 8000e88:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000e8c:	e73b      	b.n	8000d06 <__udivmoddi4+0xfe>
 8000e8e:	4637      	mov	r7, r6
 8000e90:	4630      	mov	r0, r6
 8000e92:	e709      	b.n	8000ca8 <__udivmoddi4+0xa0>
 8000e94:	4607      	mov	r7, r0
 8000e96:	e6e7      	b.n	8000c68 <__udivmoddi4+0x60>
 8000e98:	4618      	mov	r0, r3
 8000e9a:	e6fb      	b.n	8000c94 <__udivmoddi4+0x8c>
 8000e9c:	4541      	cmp	r1, r8
 8000e9e:	d2ab      	bcs.n	8000df8 <__udivmoddi4+0x1f0>
 8000ea0:	ebb8 0a02 	subs.w	sl, r8, r2
 8000ea4:	eb69 020e 	sbc.w	r2, r9, lr
 8000ea8:	3801      	subs	r0, #1
 8000eaa:	4613      	mov	r3, r2
 8000eac:	e7a4      	b.n	8000df8 <__udivmoddi4+0x1f0>
 8000eae:	4660      	mov	r0, ip
 8000eb0:	e7e9      	b.n	8000e86 <__udivmoddi4+0x27e>
 8000eb2:	4618      	mov	r0, r3
 8000eb4:	e795      	b.n	8000de2 <__udivmoddi4+0x1da>
 8000eb6:	4667      	mov	r7, ip
 8000eb8:	e7d1      	b.n	8000e5e <__udivmoddi4+0x256>
 8000eba:	4681      	mov	r9, r0
 8000ebc:	e77c      	b.n	8000db8 <__udivmoddi4+0x1b0>
 8000ebe:	3802      	subs	r0, #2
 8000ec0:	442c      	add	r4, r5
 8000ec2:	e747      	b.n	8000d54 <__udivmoddi4+0x14c>
 8000ec4:	f1ac 0c02 	sub.w	ip, ip, #2
 8000ec8:	442b      	add	r3, r5
 8000eca:	e72f      	b.n	8000d2c <__udivmoddi4+0x124>
 8000ecc:	4638      	mov	r0, r7
 8000ece:	e708      	b.n	8000ce2 <__udivmoddi4+0xda>
 8000ed0:	4637      	mov	r7, r6
 8000ed2:	e6e9      	b.n	8000ca8 <__udivmoddi4+0xa0>

08000ed4 <__aeabi_idiv0>:
 8000ed4:	4770      	bx	lr
 8000ed6:	bf00      	nop

08000ed8 <conv_HEX_to_BIN>:

//**************** KISS *************************************************************************************************************
bool KISS_FLAG[FLAG_SIZE] = { 0, 0, 0, 0, 0, 0, 1, 1 };

//Conversion functions
void conv_HEX_to_BIN(uint16_t hex_byte_in, bool *bin_byte_out, bool select_8_16){
 8000ed8:	b580      	push	{r7, lr}
 8000eda:	b086      	sub	sp, #24
 8000edc:	af00      	add	r7, sp, #0
 8000ede:	4603      	mov	r3, r0
 8000ee0:	6039      	str	r1, [r7, #0]
 8000ee2:	80fb      	strh	r3, [r7, #6]
 8000ee4:	4613      	mov	r3, r2
 8000ee6:	717b      	strb	r3, [r7, #5]
    int temp;

    sprintf(uartData, "\nSelector              = %d",select_8_16);
 8000ee8:	797b      	ldrb	r3, [r7, #5]
 8000eea:	461a      	mov	r2, r3
 8000eec:	4951      	ldr	r1, [pc, #324]	; (8001034 <conv_HEX_to_BIN+0x15c>)
 8000eee:	4852      	ldr	r0, [pc, #328]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8000ef0:	f005 fe06 	bl	8006b00 <siprintf>
    HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8000ef4:	4850      	ldr	r0, [pc, #320]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8000ef6:	f7ff f98b 	bl	8000210 <strlen>
 8000efa:	4603      	mov	r3, r0
 8000efc:	b29a      	uxth	r2, r3
 8000efe:	230a      	movs	r3, #10
 8000f00:	494d      	ldr	r1, [pc, #308]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8000f02:	484e      	ldr	r0, [pc, #312]	; (800103c <conv_HEX_to_BIN+0x164>)
 8000f04:	f004 febb 	bl	8005c7e <HAL_UART_Transmit>

    sprintf(uartData, "\nByte value            = %d\nBinary value[LSB:MSB] =",hex_byte_in);
 8000f08:	88fb      	ldrh	r3, [r7, #6]
 8000f0a:	461a      	mov	r2, r3
 8000f0c:	494c      	ldr	r1, [pc, #304]	; (8001040 <conv_HEX_to_BIN+0x168>)
 8000f0e:	484a      	ldr	r0, [pc, #296]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8000f10:	f005 fdf6 	bl	8006b00 <siprintf>
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8000f14:	4848      	ldr	r0, [pc, #288]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8000f16:	f7ff f97b 	bl	8000210 <strlen>
 8000f1a:	4603      	mov	r3, r0
 8000f1c:	b29a      	uxth	r2, r3
 8000f1e:	230a      	movs	r3, #10
 8000f20:	4945      	ldr	r1, [pc, #276]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8000f22:	4846      	ldr	r0, [pc, #280]	; (800103c <conv_HEX_to_BIN+0x164>)
 8000f24:	f004 feab 	bl	8005c7e <HAL_UART_Transmit>

    if(select_8_16){
 8000f28:	797b      	ldrb	r3, [r7, #5]
 8000f2a:	2b00      	cmp	r3, #0
 8000f2c:	d01f      	beq.n	8000f6e <conv_HEX_to_BIN+0x96>
		for(int i = 0; i < 8; i++){
 8000f2e:	2300      	movs	r3, #0
 8000f30:	617b      	str	r3, [r7, #20]
 8000f32:	e018      	b.n	8000f66 <conv_HEX_to_BIN+0x8e>
			temp = hex_byte_in >> i;
 8000f34:	88fa      	ldrh	r2, [r7, #6]
 8000f36:	697b      	ldr	r3, [r7, #20]
 8000f38:	fa42 f303 	asr.w	r3, r2, r3
 8000f3c:	60fb      	str	r3, [r7, #12]
			temp = temp%2;
 8000f3e:	68fb      	ldr	r3, [r7, #12]
 8000f40:	2b00      	cmp	r3, #0
 8000f42:	f003 0301 	and.w	r3, r3, #1
 8000f46:	bfb8      	it	lt
 8000f48:	425b      	neglt	r3, r3
 8000f4a:	60fb      	str	r3, [r7, #12]

			//sprintf(uartData, " %d ",temp);
			//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);

			*(bin_byte_out+i) = temp;
 8000f4c:	697b      	ldr	r3, [r7, #20]
 8000f4e:	683a      	ldr	r2, [r7, #0]
 8000f50:	4413      	add	r3, r2
 8000f52:	68fa      	ldr	r2, [r7, #12]
 8000f54:	2a00      	cmp	r2, #0
 8000f56:	bf14      	ite	ne
 8000f58:	2201      	movne	r2, #1
 8000f5a:	2200      	moveq	r2, #0
 8000f5c:	b2d2      	uxtb	r2, r2
 8000f5e:	701a      	strb	r2, [r3, #0]
		for(int i = 0; i < 8; i++){
 8000f60:	697b      	ldr	r3, [r7, #20]
 8000f62:	3301      	adds	r3, #1
 8000f64:	617b      	str	r3, [r7, #20]
 8000f66:	697b      	ldr	r3, [r7, #20]
 8000f68:	2b07      	cmp	r3, #7
 8000f6a:	dde3      	ble.n	8000f34 <conv_HEX_to_BIN+0x5c>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
    }

    //sprintf(uartData, "\n");
	//HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
}
 8000f6c:	e05e      	b.n	800102c <conv_HEX_to_BIN+0x154>
	   sprintf(uartData, "\nByte value            = %x\nBinary value[LSB:MSB] =",hex_byte_in);
 8000f6e:	88fb      	ldrh	r3, [r7, #6]
 8000f70:	461a      	mov	r2, r3
 8000f72:	4934      	ldr	r1, [pc, #208]	; (8001044 <conv_HEX_to_BIN+0x16c>)
 8000f74:	4830      	ldr	r0, [pc, #192]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8000f76:	f005 fdc3 	bl	8006b00 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8000f7a:	482f      	ldr	r0, [pc, #188]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8000f7c:	f7ff f948 	bl	8000210 <strlen>
 8000f80:	4603      	mov	r3, r0
 8000f82:	b29a      	uxth	r2, r3
 8000f84:	230a      	movs	r3, #10
 8000f86:	492c      	ldr	r1, [pc, #176]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8000f88:	482c      	ldr	r0, [pc, #176]	; (800103c <conv_HEX_to_BIN+0x164>)
 8000f8a:	f004 fe78 	bl	8005c7e <HAL_UART_Transmit>
		for(int i = 0; i < 16; i++){
 8000f8e:	2300      	movs	r3, #0
 8000f90:	613b      	str	r3, [r7, #16]
 8000f92:	e038      	b.n	8001006 <conv_HEX_to_BIN+0x12e>
			temp = hex_byte_in >> i;
 8000f94:	88fa      	ldrh	r2, [r7, #6]
 8000f96:	693b      	ldr	r3, [r7, #16]
 8000f98:	fa42 f303 	asr.w	r3, r2, r3
 8000f9c:	60fb      	str	r3, [r7, #12]
			sprintf(uartData, " b=%d ",temp);
 8000f9e:	68fa      	ldr	r2, [r7, #12]
 8000fa0:	4929      	ldr	r1, [pc, #164]	; (8001048 <conv_HEX_to_BIN+0x170>)
 8000fa2:	4825      	ldr	r0, [pc, #148]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8000fa4:	f005 fdac 	bl	8006b00 <siprintf>
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8000fa8:	4823      	ldr	r0, [pc, #140]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8000faa:	f7ff f931 	bl	8000210 <strlen>
 8000fae:	4603      	mov	r3, r0
 8000fb0:	b29a      	uxth	r2, r3
 8000fb2:	230a      	movs	r3, #10
 8000fb4:	4920      	ldr	r1, [pc, #128]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8000fb6:	4821      	ldr	r0, [pc, #132]	; (800103c <conv_HEX_to_BIN+0x164>)
 8000fb8:	f004 fe61 	bl	8005c7e <HAL_UART_Transmit>
			temp = temp%2;
 8000fbc:	68fb      	ldr	r3, [r7, #12]
 8000fbe:	2b00      	cmp	r3, #0
 8000fc0:	f003 0301 	and.w	r3, r3, #1
 8000fc4:	bfb8      	it	lt
 8000fc6:	425b      	neglt	r3, r3
 8000fc8:	60fb      	str	r3, [r7, #12]
			sprintf(uartData, " a=%d ",temp);
 8000fca:	68fa      	ldr	r2, [r7, #12]
 8000fcc:	491f      	ldr	r1, [pc, #124]	; (800104c <conv_HEX_to_BIN+0x174>)
 8000fce:	481a      	ldr	r0, [pc, #104]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8000fd0:	f005 fd96 	bl	8006b00 <siprintf>
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8000fd4:	4818      	ldr	r0, [pc, #96]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8000fd6:	f7ff f91b 	bl	8000210 <strlen>
 8000fda:	4603      	mov	r3, r0
 8000fdc:	b29a      	uxth	r2, r3
 8000fde:	230a      	movs	r3, #10
 8000fe0:	4915      	ldr	r1, [pc, #84]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8000fe2:	4816      	ldr	r0, [pc, #88]	; (800103c <conv_HEX_to_BIN+0x164>)
 8000fe4:	f004 fe4b 	bl	8005c7e <HAL_UART_Transmit>
			*(bin_byte_out + 16 - 1 - i) = temp; //MSB is at lowest index
 8000fe8:	693b      	ldr	r3, [r7, #16]
 8000fea:	f1c3 030f 	rsb	r3, r3, #15
 8000fee:	683a      	ldr	r2, [r7, #0]
 8000ff0:	4413      	add	r3, r2
 8000ff2:	68fa      	ldr	r2, [r7, #12]
 8000ff4:	2a00      	cmp	r2, #0
 8000ff6:	bf14      	ite	ne
 8000ff8:	2201      	movne	r2, #1
 8000ffa:	2200      	moveq	r2, #0
 8000ffc:	b2d2      	uxtb	r2, r2
 8000ffe:	701a      	strb	r2, [r3, #0]
		for(int i = 0; i < 16; i++){
 8001000:	693b      	ldr	r3, [r7, #16]
 8001002:	3301      	adds	r3, #1
 8001004:	613b      	str	r3, [r7, #16]
 8001006:	693b      	ldr	r3, [r7, #16]
 8001008:	2b0f      	cmp	r3, #15
 800100a:	ddc3      	ble.n	8000f94 <conv_HEX_to_BIN+0xbc>
		sprintf(uartData, "\n ");
 800100c:	4b0a      	ldr	r3, [pc, #40]	; (8001038 <conv_HEX_to_BIN+0x160>)
 800100e:	4a10      	ldr	r2, [pc, #64]	; (8001050 <conv_HEX_to_BIN+0x178>)
 8001010:	8811      	ldrh	r1, [r2, #0]
 8001012:	7892      	ldrb	r2, [r2, #2]
 8001014:	8019      	strh	r1, [r3, #0]
 8001016:	709a      	strb	r2, [r3, #2]
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001018:	4807      	ldr	r0, [pc, #28]	; (8001038 <conv_HEX_to_BIN+0x160>)
 800101a:	f7ff f8f9 	bl	8000210 <strlen>
 800101e:	4603      	mov	r3, r0
 8001020:	b29a      	uxth	r2, r3
 8001022:	230a      	movs	r3, #10
 8001024:	4904      	ldr	r1, [pc, #16]	; (8001038 <conv_HEX_to_BIN+0x160>)
 8001026:	4805      	ldr	r0, [pc, #20]	; (800103c <conv_HEX_to_BIN+0x164>)
 8001028:	f004 fe29 	bl	8005c7e <HAL_UART_Transmit>
}
 800102c:	bf00      	nop
 800102e:	3718      	adds	r7, #24
 8001030:	46bd      	mov	sp, r7
 8001032:	bd80      	pop	{r7, pc}
 8001034:	08008390 	.word	0x08008390
 8001038:	20001ce8 	.word	0x20001ce8
 800103c:	200029e4 	.word	0x200029e4
 8001040:	080083ac 	.word	0x080083ac
 8001044:	080083e0 	.word	0x080083e0
 8001048:	08008414 	.word	0x08008414
 800104c:	0800841c 	.word	0x0800841c
 8001050:	08008424 	.word	0x08008424
 8001054:	00000000 	.word	0x00000000

08001058 <conv_BIN_to_HEX>:
uint16_t conv_BIN_to_HEX(bool *bin_byte_in,bool select_8_16){
 8001058:	b5b0      	push	{r4, r5, r7, lr}
 800105a:	b086      	sub	sp, #24
 800105c:	af00      	add	r7, sp, #0
 800105e:	6078      	str	r0, [r7, #4]
 8001060:	460b      	mov	r3, r1
 8001062:	70fb      	strb	r3, [r7, #3]
	uint16_t acc = 0;
 8001064:	2300      	movs	r3, #0
 8001066:	82fb      	strh	r3, [r7, #22]
	int bits = (select_8_16) ? 8 : 16;
 8001068:	78fb      	ldrb	r3, [r7, #3]
 800106a:	2b00      	cmp	r3, #0
 800106c:	d001      	beq.n	8001072 <conv_BIN_to_HEX+0x1a>
 800106e:	2308      	movs	r3, #8
 8001070:	e000      	b.n	8001074 <conv_BIN_to_HEX+0x1c>
 8001072:	2310      	movs	r3, #16
 8001074:	60fb      	str	r3, [r7, #12]
	for(int i = 0; i < bits; i++){
 8001076:	2300      	movs	r3, #0
 8001078:	613b      	str	r3, [r7, #16]
 800107a:	e02c      	b.n	80010d6 <conv_BIN_to_HEX+0x7e>
		acc += ( *(bin_byte_in+i) )? pow(2,i) : 0;
 800107c:	693b      	ldr	r3, [r7, #16]
 800107e:	687a      	ldr	r2, [r7, #4]
 8001080:	4413      	add	r3, r2
 8001082:	781b      	ldrb	r3, [r3, #0]
 8001084:	2b00      	cmp	r3, #0
 8001086:	d00d      	beq.n	80010a4 <conv_BIN_to_HEX+0x4c>
 8001088:	6938      	ldr	r0, [r7, #16]
 800108a:	f7ff fa6b 	bl	8000564 <__aeabi_i2d>
 800108e:	4603      	mov	r3, r0
 8001090:	460c      	mov	r4, r1
 8001092:	ec44 3b11 	vmov	d1, r3, r4
 8001096:	ed9f 0b14 	vldr	d0, [pc, #80]	; 80010e8 <conv_BIN_to_HEX+0x90>
 800109a:	f006 f913 	bl	80072c4 <pow>
 800109e:	ec55 4b10 	vmov	r4, r5, d0
 80010a2:	e003      	b.n	80010ac <conv_BIN_to_HEX+0x54>
 80010a4:	f04f 0400 	mov.w	r4, #0
 80010a8:	f04f 0500 	mov.w	r5, #0
 80010ac:	8afb      	ldrh	r3, [r7, #22]
 80010ae:	4618      	mov	r0, r3
 80010b0:	f7ff fa58 	bl	8000564 <__aeabi_i2d>
 80010b4:	4602      	mov	r2, r0
 80010b6:	460b      	mov	r3, r1
 80010b8:	4620      	mov	r0, r4
 80010ba:	4629      	mov	r1, r5
 80010bc:	f7ff f906 	bl	80002cc <__adddf3>
 80010c0:	4603      	mov	r3, r0
 80010c2:	460c      	mov	r4, r1
 80010c4:	4618      	mov	r0, r3
 80010c6:	4621      	mov	r1, r4
 80010c8:	f7ff fd66 	bl	8000b98 <__aeabi_d2uiz>
 80010cc:	4603      	mov	r3, r0
 80010ce:	82fb      	strh	r3, [r7, #22]
	for(int i = 0; i < bits; i++){
 80010d0:	693b      	ldr	r3, [r7, #16]
 80010d2:	3301      	adds	r3, #1
 80010d4:	613b      	str	r3, [r7, #16]
 80010d6:	693a      	ldr	r2, [r7, #16]
 80010d8:	68fb      	ldr	r3, [r7, #12]
 80010da:	429a      	cmp	r2, r3
 80010dc:	dbce      	blt.n	800107c <conv_BIN_to_HEX+0x24>
	}
	return acc;
 80010de:	8afb      	ldrh	r3, [r7, #22]
}
 80010e0:	4618      	mov	r0, r3
 80010e2:	3718      	adds	r7, #24
 80010e4:	46bd      	mov	sp, r7
 80010e6:	bdb0      	pop	{r4, r5, r7, pc}
 80010e8:	00000000 	.word	0x00000000
 80010ec:	40000000 	.word	0x40000000

080010f0 <clear_AX25>:
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
		output_AX25();
	}
}

void clear_AX25(){
 80010f0:	b5b0      	push	{r4, r5, r7, lr}
 80010f2:	b082      	sub	sp, #8
 80010f4:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 80010f6:	4b15      	ldr	r3, [pc, #84]	; (800114c <clear_AX25+0x5c>)
 80010f8:	607b      	str	r3, [r7, #4]
	sprintf(uartData, "Clearing AX.25 packet info\n");
 80010fa:	4a15      	ldr	r2, [pc, #84]	; (8001150 <clear_AX25+0x60>)
 80010fc:	4b15      	ldr	r3, [pc, #84]	; (8001154 <clear_AX25+0x64>)
 80010fe:	4615      	mov	r5, r2
 8001100:	461c      	mov	r4, r3
 8001102:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001104:	6028      	str	r0, [r5, #0]
 8001106:	6069      	str	r1, [r5, #4]
 8001108:	60aa      	str	r2, [r5, #8]
 800110a:	60eb      	str	r3, [r5, #12]
 800110c:	cc07      	ldmia	r4!, {r0, r1, r2}
 800110e:	6128      	str	r0, [r5, #16]
 8001110:	6169      	str	r1, [r5, #20]
 8001112:	61aa      	str	r2, [r5, #24]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001114:	480e      	ldr	r0, [pc, #56]	; (8001150 <clear_AX25+0x60>)
 8001116:	f7ff f87b 	bl	8000210 <strlen>
 800111a:	4603      	mov	r3, r0
 800111c:	b29a      	uxth	r2, r3
 800111e:	230a      	movs	r3, #10
 8001120:	490b      	ldr	r1, [pc, #44]	; (8001150 <clear_AX25+0x60>)
 8001122:	480d      	ldr	r0, [pc, #52]	; (8001158 <clear_AX25+0x68>)
 8001124:	f004 fdab 	bl	8005c7e <HAL_UART_Transmit>

	memcpy(local_packet->AX25_PACKET,0,AX25_PACKET_MAX);
 8001128:	687b      	ldr	r3, [r7, #4]
 800112a:	f640 225f 	movw	r2, #2655	; 0xa5f
 800112e:	2100      	movs	r1, #0
 8001130:	4618      	mov	r0, r3
 8001132:	f005 fcb9 	bl	8006aa8 <memcpy>
	local_packet->got_packet = false;
 8001136:	687b      	ldr	r3, [r7, #4]
 8001138:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 800113c:	3309      	adds	r3, #9
 800113e:	2200      	movs	r2, #0
 8001140:	701a      	strb	r2, [r3, #0]
}
 8001142:	bf00      	nop
 8001144:	3708      	adds	r7, #8
 8001146:	46bd      	mov	sp, r7
 8001148:	bdb0      	pop	{r4, r5, r7, pc}
 800114a:	bf00      	nop
 800114c:	200000e4 	.word	0x200000e4
 8001150:	20001ce8 	.word	0x20001ce8
 8001154:	0800853c 	.word	0x0800853c
 8001158:	200029e4 	.word	0x200029e4

0800115c <output_HEX>:

void output_HEX() {
 800115c:	b580      	push	{r7, lr}
 800115e:	b082      	sub	sp, #8
 8001160:	af00      	add	r7, sp, #0
	struct UART_INPUT* local_UART_packet = &UART_packet;
 8001162:	4b08      	ldr	r3, [pc, #32]	; (8001184 <output_HEX+0x28>)
 8001164:	607b      	str	r3, [r7, #4]

	HAL_UART_Transmit(&huart2, local_UART_packet->HEX_KISS_PACKET,local_UART_packet->received_byte_cnt , 10);
 8001166:	687b      	ldr	r3, [r7, #4]
 8001168:	f103 010e 	add.w	r1, r3, #14
 800116c:	687b      	ldr	r3, [r7, #4]
 800116e:	685b      	ldr	r3, [r3, #4]
 8001170:	b29a      	uxth	r2, r3
 8001172:	230a      	movs	r3, #10
 8001174:	4804      	ldr	r0, [pc, #16]	; (8001188 <output_HEX+0x2c>)
 8001176:	f004 fd82 	bl	8005c7e <HAL_UART_Transmit>
}
 800117a:	bf00      	nop
 800117c:	3708      	adds	r7, #8
 800117e:	46bd      	mov	sp, r7
 8001180:	bd80      	pop	{r7, pc}
 8001182:	bf00      	nop
 8001184:	20001450 	.word	0x20001450
 8001188:	200029e4 	.word	0x200029e4

0800118c <receiving_AX25>:

//AX.25 to KISS data flow
//****************************************************************************************************************
bool receiving_AX25(){
 800118c:	b5b0      	push	{r4, r5, r7, lr}
 800118e:	b082      	sub	sp, #8
 8001190:	af00      	add	r7, sp, #0
	sprintf(uartData, "\nreceiving_AX25() start\n");
 8001192:	4a17      	ldr	r2, [pc, #92]	; (80011f0 <receiving_AX25+0x64>)
 8001194:	4b17      	ldr	r3, [pc, #92]	; (80011f4 <receiving_AX25+0x68>)
 8001196:	4615      	mov	r5, r2
 8001198:	461c      	mov	r4, r3
 800119a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800119c:	6028      	str	r0, [r5, #0]
 800119e:	6069      	str	r1, [r5, #4]
 80011a0:	60aa      	str	r2, [r5, #8]
 80011a2:	60eb      	str	r3, [r5, #12]
 80011a4:	cc03      	ldmia	r4!, {r0, r1}
 80011a6:	6128      	str	r0, [r5, #16]
 80011a8:	6169      	str	r1, [r5, #20]
 80011aa:	7823      	ldrb	r3, [r4, #0]
 80011ac:	762b      	strb	r3, [r5, #24]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80011ae:	4810      	ldr	r0, [pc, #64]	; (80011f0 <receiving_AX25+0x64>)
 80011b0:	f7ff f82e 	bl	8000210 <strlen>
 80011b4:	4603      	mov	r3, r0
 80011b6:	b29a      	uxth	r2, r3
 80011b8:	230a      	movs	r3, #10
 80011ba:	490d      	ldr	r1, [pc, #52]	; (80011f0 <receiving_AX25+0x64>)
 80011bc:	480e      	ldr	r0, [pc, #56]	; (80011f8 <receiving_AX25+0x6c>)
 80011be:	f004 fd5e 	bl	8005c7e <HAL_UART_Transmit>
	struct PACKET_STRUCT* local_packet = &global_packet;
 80011c2:	4b0e      	ldr	r3, [pc, #56]	; (80011fc <receiving_AX25+0x70>)
 80011c4:	607b      	str	r3, [r7, #4]

	//Validate packet
	bool AX25_IsValid = AX25_Packet_Validate();
 80011c6:	f000 f8af 	bl	8001328 <AX25_Packet_Validate>
 80011ca:	4603      	mov	r3, r0
 80011cc:	70fb      	strb	r3, [r7, #3]

//		sprintf(uartData, "AX.25 frame valid check returned: %d\n",AX25_IsValid);
//		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);

	if(AX25_IsValid){
 80011ce:	78fb      	ldrb	r3, [r7, #3]
 80011d0:	2b00      	cmp	r3, #0
 80011d2:	d007      	beq.n	80011e4 <receiving_AX25+0x58>
		//Put data into KISS format and buffer
		AX25_TO_KISS();
 80011d4:	f000 fa22 	bl	800161c <AX25_TO_KISS>

		//Put data into HEX buffer
		KISS_TO_HEX();
 80011d8:	f000 fa60 	bl	800169c <KISS_TO_HEX>

		//Transmit KISS Packet that has been generated
		output_HEX();
 80011dc:	f7ff ffbe 	bl	800115c <output_HEX>

		//Clear AX.25 buffer
		clear_AX25();
 80011e0:	f7ff ff86 	bl	80010f0 <clear_AX25>
//		clear_KISS();
//		clear_HEX();
	}
}
 80011e4:	bf00      	nop
 80011e6:	4618      	mov	r0, r3
 80011e8:	3708      	adds	r7, #8
 80011ea:	46bd      	mov	sp, r7
 80011ec:	bdb0      	pop	{r4, r5, r7, pc}
 80011ee:	bf00      	nop
 80011f0:	20001ce8 	.word	0x20001ce8
 80011f4:	08008558 	.word	0x08008558
 80011f8:	200029e4 	.word	0x200029e4
 80011fc:	200000e4 	.word	0x200000e4

08001200 <slide_bits>:

void slide_bits(bool* array,int bits_left){
 8001200:	b580      	push	{r7, lr}
 8001202:	b082      	sub	sp, #8
 8001204:	af00      	add	r7, sp, #0
 8001206:	6078      	str	r0, [r7, #4]
 8001208:	6039      	str	r1, [r7, #0]
	memmove(array,array+1,bits_left*bool_size);
 800120a:	687b      	ldr	r3, [r7, #4]
 800120c:	3301      	adds	r3, #1
 800120e:	683a      	ldr	r2, [r7, #0]
 8001210:	4619      	mov	r1, r3
 8001212:	6878      	ldr	r0, [r7, #4]
 8001214:	f005 fc53 	bl	8006abe <memmove>
}
 8001218:	bf00      	nop
 800121a:	3708      	adds	r7, #8
 800121c:	46bd      	mov	sp, r7
 800121e:	bd80      	pop	{r7, pc}

08001220 <remove_bit_stuffing>:

void remove_bit_stuffing(){
 8001220:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001222:	b085      	sub	sp, #20
 8001224:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001226:	4b3a      	ldr	r3, [pc, #232]	; (8001310 <remove_bit_stuffing+0xf0>)
 8001228:	607b      	str	r3, [r7, #4]
//	sprintf(uartData, "Removing bit stuffed zeros\n");
//	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);

	int ones_count = 0;
 800122a:	2300      	movs	r3, #0
 800122c:	60fb      	str	r3, [r7, #12]
	bool curr;
	for(int i = 0;i < rxBit_count;i++){
 800122e:	2300      	movs	r3, #0
 8001230:	60bb      	str	r3, [r7, #8]
 8001232:	e065      	b.n	8001300 <remove_bit_stuffing+0xe0>
		curr = local_packet->AX25_PACKET[i]; //iterate through all data received before seperating into subfields
 8001234:	687a      	ldr	r2, [r7, #4]
 8001236:	68bb      	ldr	r3, [r7, #8]
 8001238:	4413      	add	r3, r2
 800123a:	781b      	ldrb	r3, [r3, #0]
 800123c:	70fb      	strb	r3, [r7, #3]
		if(curr){ //current bit is a 1
 800123e:	78fb      	ldrb	r3, [r7, #3]
 8001240:	2b00      	cmp	r3, #0
 8001242:	d028      	beq.n	8001296 <remove_bit_stuffing+0x76>
			ones_count++;
 8001244:	68fb      	ldr	r3, [r7, #12]
 8001246:	3301      	adds	r3, #1
 8001248:	60fb      	str	r3, [r7, #12]
			if(ones_count > 5){
 800124a:	68fb      	ldr	r3, [r7, #12]
 800124c:	2b05      	cmp	r3, #5
 800124e:	dd54      	ble.n	80012fa <remove_bit_stuffing+0xda>
				sprintf(uartData, "ERROR: SHOULD HAVE BEEN A ZERO AFTER FIFTH CONTIGIOUS ONE!\n");
 8001250:	4b30      	ldr	r3, [pc, #192]	; (8001314 <remove_bit_stuffing+0xf4>)
 8001252:	4a31      	ldr	r2, [pc, #196]	; (8001318 <remove_bit_stuffing+0xf8>)
 8001254:	4614      	mov	r4, r2
 8001256:	469c      	mov	ip, r3
 8001258:	f104 0e30 	add.w	lr, r4, #48	; 0x30
 800125c:	4665      	mov	r5, ip
 800125e:	4626      	mov	r6, r4
 8001260:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8001262:	6028      	str	r0, [r5, #0]
 8001264:	6069      	str	r1, [r5, #4]
 8001266:	60aa      	str	r2, [r5, #8]
 8001268:	60eb      	str	r3, [r5, #12]
 800126a:	3410      	adds	r4, #16
 800126c:	f10c 0c10 	add.w	ip, ip, #16
 8001270:	4574      	cmp	r4, lr
 8001272:	d1f3      	bne.n	800125c <remove_bit_stuffing+0x3c>
 8001274:	4665      	mov	r5, ip
 8001276:	4623      	mov	r3, r4
 8001278:	cb07      	ldmia	r3!, {r0, r1, r2}
 800127a:	6028      	str	r0, [r5, #0]
 800127c:	6069      	str	r1, [r5, #4]
 800127e:	60aa      	str	r2, [r5, #8]
				HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001280:	4824      	ldr	r0, [pc, #144]	; (8001314 <remove_bit_stuffing+0xf4>)
 8001282:	f7fe ffc5 	bl	8000210 <strlen>
 8001286:	4603      	mov	r3, r0
 8001288:	b29a      	uxth	r2, r3
 800128a:	230a      	movs	r3, #10
 800128c:	4921      	ldr	r1, [pc, #132]	; (8001314 <remove_bit_stuffing+0xf4>)
 800128e:	4823      	ldr	r0, [pc, #140]	; (800131c <remove_bit_stuffing+0xfc>)
 8001290:	f004 fcf5 	bl	8005c7e <HAL_UART_Transmit>
				return;
 8001294:	e039      	b.n	800130a <remove_bit_stuffing+0xea>
			}
		}
		else{
			if(ones_count >= 5){
 8001296:	68fb      	ldr	r3, [r7, #12]
 8001298:	2b04      	cmp	r3, #4
 800129a:	dd2c      	ble.n	80012f6 <remove_bit_stuffing+0xd6>
				slide_bits(&local_packet->AX25_PACKET[i],rxBit_count-i);
 800129c:	687a      	ldr	r2, [r7, #4]
 800129e:	68bb      	ldr	r3, [r7, #8]
 80012a0:	18d0      	adds	r0, r2, r3
 80012a2:	4b1f      	ldr	r3, [pc, #124]	; (8001320 <remove_bit_stuffing+0x100>)
 80012a4:	681a      	ldr	r2, [r3, #0]
 80012a6:	68bb      	ldr	r3, [r7, #8]
 80012a8:	1ad3      	subs	r3, r2, r3
 80012aa:	4619      	mov	r1, r3
 80012ac:	f7ff ffa8 	bl	8001200 <slide_bits>
				i--;
 80012b0:	68bb      	ldr	r3, [r7, #8]
 80012b2:	3b01      	subs	r3, #1
 80012b4:	60bb      	str	r3, [r7, #8]
				rxBit_count--;
 80012b6:	4b1a      	ldr	r3, [pc, #104]	; (8001320 <remove_bit_stuffing+0x100>)
 80012b8:	681b      	ldr	r3, [r3, #0]
 80012ba:	3b01      	subs	r3, #1
 80012bc:	4a18      	ldr	r2, [pc, #96]	; (8001320 <remove_bit_stuffing+0x100>)
 80012be:	6013      	str	r3, [r2, #0]
				sprintf(uartData, "REMOVED BIT STUFFED ZERO!\n");
 80012c0:	4a14      	ldr	r2, [pc, #80]	; (8001314 <remove_bit_stuffing+0xf4>)
 80012c2:	4b18      	ldr	r3, [pc, #96]	; (8001324 <remove_bit_stuffing+0x104>)
 80012c4:	4615      	mov	r5, r2
 80012c6:	461c      	mov	r4, r3
 80012c8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80012ca:	6028      	str	r0, [r5, #0]
 80012cc:	6069      	str	r1, [r5, #4]
 80012ce:	60aa      	str	r2, [r5, #8]
 80012d0:	60eb      	str	r3, [r5, #12]
 80012d2:	cc03      	ldmia	r4!, {r0, r1}
 80012d4:	6128      	str	r0, [r5, #16]
 80012d6:	6169      	str	r1, [r5, #20]
 80012d8:	8823      	ldrh	r3, [r4, #0]
 80012da:	78a2      	ldrb	r2, [r4, #2]
 80012dc:	832b      	strh	r3, [r5, #24]
 80012de:	4613      	mov	r3, r2
 80012e0:	76ab      	strb	r3, [r5, #26]
				HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80012e2:	480c      	ldr	r0, [pc, #48]	; (8001314 <remove_bit_stuffing+0xf4>)
 80012e4:	f7fe ff94 	bl	8000210 <strlen>
 80012e8:	4603      	mov	r3, r0
 80012ea:	b29a      	uxth	r2, r3
 80012ec:	230a      	movs	r3, #10
 80012ee:	4909      	ldr	r1, [pc, #36]	; (8001314 <remove_bit_stuffing+0xf4>)
 80012f0:	480a      	ldr	r0, [pc, #40]	; (800131c <remove_bit_stuffing+0xfc>)
 80012f2:	f004 fcc4 	bl	8005c7e <HAL_UART_Transmit>
			}
			ones_count = 0;
 80012f6:	2300      	movs	r3, #0
 80012f8:	60fb      	str	r3, [r7, #12]
	for(int i = 0;i < rxBit_count;i++){
 80012fa:	68bb      	ldr	r3, [r7, #8]
 80012fc:	3301      	adds	r3, #1
 80012fe:	60bb      	str	r3, [r7, #8]
 8001300:	4b07      	ldr	r3, [pc, #28]	; (8001320 <remove_bit_stuffing+0x100>)
 8001302:	681b      	ldr	r3, [r3, #0]
 8001304:	68ba      	ldr	r2, [r7, #8]
 8001306:	429a      	cmp	r2, r3
 8001308:	db94      	blt.n	8001234 <remove_bit_stuffing+0x14>
		}
	}
	//transmit kiss
}
 800130a:	3714      	adds	r7, #20
 800130c:	46bd      	mov	sp, r7
 800130e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001310:	200000e4 	.word	0x200000e4
 8001314:	20001ce8 	.word	0x20001ce8
 8001318:	08008574 	.word	0x08008574
 800131c:	200029e4 	.word	0x200029e4
 8001320:	200000a4 	.word	0x200000a4
 8001324:	080085b0 	.word	0x080085b0

08001328 <AX25_Packet_Validate>:

bool AX25_Packet_Validate(){
 8001328:	b5f0      	push	{r4, r5, r6, r7, lr}
 800132a:	b085      	sub	sp, #20
 800132c:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 800132e:	4b38      	ldr	r3, [pc, #224]	; (8001410 <AX25_Packet_Validate+0xe8>)
 8001330:	60fb      	str	r3, [r7, #12]
	int fcs_val = 0;
 8001332:	2300      	movs	r3, #0
 8001334:	60bb      	str	r3, [r7, #8]

	sprintf(uartData,"Received packet bit count: %d\n",rxBit_count);
 8001336:	4b37      	ldr	r3, [pc, #220]	; (8001414 <AX25_Packet_Validate+0xec>)
 8001338:	681b      	ldr	r3, [r3, #0]
 800133a:	461a      	mov	r2, r3
 800133c:	4936      	ldr	r1, [pc, #216]	; (8001418 <AX25_Packet_Validate+0xf0>)
 800133e:	4837      	ldr	r0, [pc, #220]	; (800141c <AX25_Packet_Validate+0xf4>)
 8001340:	f005 fbde 	bl	8006b00 <siprintf>
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001344:	4835      	ldr	r0, [pc, #212]	; (800141c <AX25_Packet_Validate+0xf4>)
 8001346:	f7fe ff63 	bl	8000210 <strlen>
 800134a:	4603      	mov	r3, r0
 800134c:	b29a      	uxth	r2, r3
 800134e:	230a      	movs	r3, #10
 8001350:	4932      	ldr	r1, [pc, #200]	; (800141c <AX25_Packet_Validate+0xf4>)
 8001352:	4833      	ldr	r0, [pc, #204]	; (8001420 <AX25_Packet_Validate+0xf8>)
 8001354:	f004 fc93 	bl	8005c7e <HAL_UART_Transmit>

	if(rxBit_count < 120){ //invalid if packet is less than 136 bits - 2*8 bits (per flag)
 8001358:	4b2e      	ldr	r3, [pc, #184]	; (8001414 <AX25_Packet_Validate+0xec>)
 800135a:	681b      	ldr	r3, [r3, #0]
 800135c:	2b77      	cmp	r3, #119	; 0x77
 800135e:	dc1d      	bgt.n	800139c <AX25_Packet_Validate+0x74>
		sprintf(uartData,"Trash Packet, not enough bits\n");
 8001360:	4a2e      	ldr	r2, [pc, #184]	; (800141c <AX25_Packet_Validate+0xf4>)
 8001362:	4b30      	ldr	r3, [pc, #192]	; (8001424 <AX25_Packet_Validate+0xfc>)
 8001364:	4615      	mov	r5, r2
 8001366:	461c      	mov	r4, r3
 8001368:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800136a:	6028      	str	r0, [r5, #0]
 800136c:	6069      	str	r1, [r5, #4]
 800136e:	60aa      	str	r2, [r5, #8]
 8001370:	60eb      	str	r3, [r5, #12]
 8001372:	cc07      	ldmia	r4!, {r0, r1, r2}
 8001374:	6128      	str	r0, [r5, #16]
 8001376:	6169      	str	r1, [r5, #20]
 8001378:	61aa      	str	r2, [r5, #24]
 800137a:	8823      	ldrh	r3, [r4, #0]
 800137c:	78a2      	ldrb	r2, [r4, #2]
 800137e:	83ab      	strh	r3, [r5, #28]
 8001380:	4613      	mov	r3, r2
 8001382:	77ab      	strb	r3, [r5, #30]
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001384:	4825      	ldr	r0, [pc, #148]	; (800141c <AX25_Packet_Validate+0xf4>)
 8001386:	f7fe ff43 	bl	8000210 <strlen>
 800138a:	4603      	mov	r3, r0
 800138c:	b29a      	uxth	r2, r3
 800138e:	230a      	movs	r3, #10
 8001390:	4922      	ldr	r1, [pc, #136]	; (800141c <AX25_Packet_Validate+0xf4>)
 8001392:	4823      	ldr	r0, [pc, #140]	; (8001420 <AX25_Packet_Validate+0xf8>)
 8001394:	f004 fc73 	bl	8005c7e <HAL_UART_Transmit>
		return false;
 8001398:	2300      	movs	r3, #0
 800139a:	e035      	b.n	8001408 <AX25_Packet_Validate+0xe0>
	}
	else if((rxBit_count)%8 != 0){ //invalid if packet is not octect aligned (divisible by 8)
 800139c:	4b1d      	ldr	r3, [pc, #116]	; (8001414 <AX25_Packet_Validate+0xec>)
 800139e:	681b      	ldr	r3, [r3, #0]
 80013a0:	f003 0307 	and.w	r3, r3, #7
 80013a4:	2b00      	cmp	r3, #0
 80013a6:	d021      	beq.n	80013ec <AX25_Packet_Validate+0xc4>
		sprintf(uartData,"Trash Packet, not octet aligned\n");
 80013a8:	4b1c      	ldr	r3, [pc, #112]	; (800141c <AX25_Packet_Validate+0xf4>)
 80013aa:	4a1f      	ldr	r2, [pc, #124]	; (8001428 <AX25_Packet_Validate+0x100>)
 80013ac:	4614      	mov	r4, r2
 80013ae:	469c      	mov	ip, r3
 80013b0:	f104 0e20 	add.w	lr, r4, #32
 80013b4:	4665      	mov	r5, ip
 80013b6:	4626      	mov	r6, r4
 80013b8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80013ba:	6028      	str	r0, [r5, #0]
 80013bc:	6069      	str	r1, [r5, #4]
 80013be:	60aa      	str	r2, [r5, #8]
 80013c0:	60eb      	str	r3, [r5, #12]
 80013c2:	3410      	adds	r4, #16
 80013c4:	f10c 0c10 	add.w	ip, ip, #16
 80013c8:	4574      	cmp	r4, lr
 80013ca:	d1f3      	bne.n	80013b4 <AX25_Packet_Validate+0x8c>
 80013cc:	4663      	mov	r3, ip
 80013ce:	4622      	mov	r2, r4
 80013d0:	7812      	ldrb	r2, [r2, #0]
 80013d2:	701a      	strb	r2, [r3, #0]
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80013d4:	4811      	ldr	r0, [pc, #68]	; (800141c <AX25_Packet_Validate+0xf4>)
 80013d6:	f7fe ff1b 	bl	8000210 <strlen>
 80013da:	4603      	mov	r3, r0
 80013dc:	b29a      	uxth	r2, r3
 80013de:	230a      	movs	r3, #10
 80013e0:	490e      	ldr	r1, [pc, #56]	; (800141c <AX25_Packet_Validate+0xf4>)
 80013e2:	480f      	ldr	r0, [pc, #60]	; (8001420 <AX25_Packet_Validate+0xf8>)
 80013e4:	f004 fc4b 	bl	8005c7e <HAL_UART_Transmit>
		return false;
 80013e8:	2300      	movs	r3, #0
 80013ea:	e00d      	b.n	8001408 <AX25_Packet_Validate+0xe0>
	}

	//SHOULD BE VALID PACKET, JUST NEED TO C0MPARE CALCULATED CRC TO RECIEVED FCS
	else{
		//Set packet pointers for AX25 to KISS operation
		uint16_t local_info_len = rxBit_count-INFO_offset_woFlag;
 80013ec:	4b09      	ldr	r3, [pc, #36]	; (8001414 <AX25_Packet_Validate+0xec>)
 80013ee:	681b      	ldr	r3, [r3, #0]
 80013f0:	b29b      	uxth	r3, r3
 80013f2:	3b90      	subs	r3, #144	; 0x90
 80013f4:	80fb      	strh	r3, [r7, #6]
		set_packet_pointer_AX25(local_info_len);
 80013f6:	88fb      	ldrh	r3, [r7, #6]
 80013f8:	4618      	mov	r0, r3
 80013fa:	f000 f817 	bl	800142c <set_packet_pointer_AX25>
		print_AX25();
 80013fe:	f000 fbb5 	bl	8001b6c <print_AX25>

		return crc_check();
 8001402:	f000 fb23 	bl	8001a4c <crc_check>
 8001406:	4603      	mov	r3, r0
//		return true;
	}

//	return true; //valid packet
}
 8001408:	4618      	mov	r0, r3
 800140a:	3714      	adds	r7, #20
 800140c:	46bd      	mov	sp, r7
 800140e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001410:	200000e4 	.word	0x200000e4
 8001414:	200000a4 	.word	0x200000a4
 8001418:	080085cc 	.word	0x080085cc
 800141c:	20001ce8 	.word	0x20001ce8
 8001420:	200029e4 	.word	0x200029e4
 8001424:	080085ec 	.word	0x080085ec
 8001428:	0800860c 	.word	0x0800860c

0800142c <set_packet_pointer_AX25>:


void set_packet_pointer_AX25(int info_len_in){
 800142c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800142e:	b087      	sub	sp, #28
 8001430:	af00      	add	r7, sp, #0
 8001432:	6078      	str	r0, [r7, #4]
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001434:	4b70      	ldr	r3, [pc, #448]	; (80015f8 <set_packet_pointer_AX25+0x1cc>)
 8001436:	617b      	str	r3, [r7, #20]
	int not_info = FCS_len;
 8001438:	2310      	movs	r3, #16
 800143a:	613b      	str	r3, [r7, #16]
	local_packet->Info_Len = info_len_in;
 800143c:	697b      	ldr	r3, [r7, #20]
 800143e:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001442:	687a      	ldr	r2, [r7, #4]
 8001444:	601a      	str	r2, [r3, #0]

	sprintf(uartData, "Setting packet pointer to AX25:\n");
 8001446:	4b6d      	ldr	r3, [pc, #436]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 8001448:	4a6d      	ldr	r2, [pc, #436]	; (8001600 <set_packet_pointer_AX25+0x1d4>)
 800144a:	4614      	mov	r4, r2
 800144c:	469c      	mov	ip, r3
 800144e:	f104 0e20 	add.w	lr, r4, #32
 8001452:	4665      	mov	r5, ip
 8001454:	4626      	mov	r6, r4
 8001456:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8001458:	6028      	str	r0, [r5, #0]
 800145a:	6069      	str	r1, [r5, #4]
 800145c:	60aa      	str	r2, [r5, #8]
 800145e:	60eb      	str	r3, [r5, #12]
 8001460:	3410      	adds	r4, #16
 8001462:	f10c 0c10 	add.w	ip, ip, #16
 8001466:	4574      	cmp	r4, lr
 8001468:	d1f3      	bne.n	8001452 <set_packet_pointer_AX25+0x26>
 800146a:	4663      	mov	r3, ip
 800146c:	4622      	mov	r2, r4
 800146e:	7812      	ldrb	r2, [r2, #0]
 8001470:	701a      	strb	r2, [r3, #0]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001472:	4862      	ldr	r0, [pc, #392]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 8001474:	f7fe fecc 	bl	8000210 <strlen>
 8001478:	4603      	mov	r3, r0
 800147a:	b29a      	uxth	r2, r3
 800147c:	230a      	movs	r3, #10
 800147e:	495f      	ldr	r1, [pc, #380]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 8001480:	4860      	ldr	r0, [pc, #384]	; (8001604 <set_packet_pointer_AX25+0x1d8>)
 8001482:	f004 fbfc 	bl	8005c7e <HAL_UART_Transmit>
	bool *curr_mem = &local_packet->AX25_PACKET;
 8001486:	697b      	ldr	r3, [r7, #20]
 8001488:	60fb      	str	r3, [r7, #12]

	sprintf(uartData, "Setting pointer for address\n");
 800148a:	4a5c      	ldr	r2, [pc, #368]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 800148c:	4b5e      	ldr	r3, [pc, #376]	; (8001608 <set_packet_pointer_AX25+0x1dc>)
 800148e:	4615      	mov	r5, r2
 8001490:	461c      	mov	r4, r3
 8001492:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001494:	6028      	str	r0, [r5, #0]
 8001496:	6069      	str	r1, [r5, #4]
 8001498:	60aa      	str	r2, [r5, #8]
 800149a:	60eb      	str	r3, [r5, #12]
 800149c:	cc07      	ldmia	r4!, {r0, r1, r2}
 800149e:	6128      	str	r0, [r5, #16]
 80014a0:	6169      	str	r1, [r5, #20]
 80014a2:	61aa      	str	r2, [r5, #24]
 80014a4:	7823      	ldrb	r3, [r4, #0]
 80014a6:	772b      	strb	r3, [r5, #28]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80014a8:	4854      	ldr	r0, [pc, #336]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 80014aa:	f7fe feb1 	bl	8000210 <strlen>
 80014ae:	4603      	mov	r3, r0
 80014b0:	b29a      	uxth	r2, r3
 80014b2:	230a      	movs	r3, #10
 80014b4:	4951      	ldr	r1, [pc, #324]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 80014b6:	4853      	ldr	r0, [pc, #332]	; (8001604 <set_packet_pointer_AX25+0x1d8>)
 80014b8:	f004 fbe1 	bl	8005c7e <HAL_UART_Transmit>
	local_packet->address = curr_mem;
 80014bc:	697b      	ldr	r3, [r7, #20]
 80014be:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80014c2:	3310      	adds	r3, #16
 80014c4:	68fa      	ldr	r2, [r7, #12]
 80014c6:	601a      	str	r2, [r3, #0]
	curr_mem += address_len;
 80014c8:	68fb      	ldr	r3, [r7, #12]
 80014ca:	3370      	adds	r3, #112	; 0x70
 80014cc:	60fb      	str	r3, [r7, #12]
	not_info += address_len;
 80014ce:	693b      	ldr	r3, [r7, #16]
 80014d0:	3370      	adds	r3, #112	; 0x70
 80014d2:	613b      	str	r3, [r7, #16]

	sprintf(uartData, "Setting pointer for control\n");
 80014d4:	4a49      	ldr	r2, [pc, #292]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 80014d6:	4b4d      	ldr	r3, [pc, #308]	; (800160c <set_packet_pointer_AX25+0x1e0>)
 80014d8:	4615      	mov	r5, r2
 80014da:	461c      	mov	r4, r3
 80014dc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80014de:	6028      	str	r0, [r5, #0]
 80014e0:	6069      	str	r1, [r5, #4]
 80014e2:	60aa      	str	r2, [r5, #8]
 80014e4:	60eb      	str	r3, [r5, #12]
 80014e6:	cc07      	ldmia	r4!, {r0, r1, r2}
 80014e8:	6128      	str	r0, [r5, #16]
 80014ea:	6169      	str	r1, [r5, #20]
 80014ec:	61aa      	str	r2, [r5, #24]
 80014ee:	7823      	ldrb	r3, [r4, #0]
 80014f0:	772b      	strb	r3, [r5, #28]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80014f2:	4842      	ldr	r0, [pc, #264]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 80014f4:	f7fe fe8c 	bl	8000210 <strlen>
 80014f8:	4603      	mov	r3, r0
 80014fa:	b29a      	uxth	r2, r3
 80014fc:	230a      	movs	r3, #10
 80014fe:	493f      	ldr	r1, [pc, #252]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 8001500:	4840      	ldr	r0, [pc, #256]	; (8001604 <set_packet_pointer_AX25+0x1d8>)
 8001502:	f004 fbbc 	bl	8005c7e <HAL_UART_Transmit>
	local_packet->control = curr_mem;
 8001506:	697b      	ldr	r3, [r7, #20]
 8001508:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 800150c:	3314      	adds	r3, #20
 800150e:	68fa      	ldr	r2, [r7, #12]
 8001510:	601a      	str	r2, [r3, #0]
	curr_mem += control_len;
 8001512:	68fb      	ldr	r3, [r7, #12]
 8001514:	3308      	adds	r3, #8
 8001516:	60fb      	str	r3, [r7, #12]
	not_info += control_len;
 8001518:	693b      	ldr	r3, [r7, #16]
 800151a:	3308      	adds	r3, #8
 800151c:	613b      	str	r3, [r7, #16]

	sprintf(uartData, "Setting pointer for PID\n");
 800151e:	4a37      	ldr	r2, [pc, #220]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 8001520:	4b3b      	ldr	r3, [pc, #236]	; (8001610 <set_packet_pointer_AX25+0x1e4>)
 8001522:	4615      	mov	r5, r2
 8001524:	461c      	mov	r4, r3
 8001526:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001528:	6028      	str	r0, [r5, #0]
 800152a:	6069      	str	r1, [r5, #4]
 800152c:	60aa      	str	r2, [r5, #8]
 800152e:	60eb      	str	r3, [r5, #12]
 8001530:	cc03      	ldmia	r4!, {r0, r1}
 8001532:	6128      	str	r0, [r5, #16]
 8001534:	6169      	str	r1, [r5, #20]
 8001536:	7823      	ldrb	r3, [r4, #0]
 8001538:	762b      	strb	r3, [r5, #24]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800153a:	4830      	ldr	r0, [pc, #192]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 800153c:	f7fe fe68 	bl	8000210 <strlen>
 8001540:	4603      	mov	r3, r0
 8001542:	b29a      	uxth	r2, r3
 8001544:	230a      	movs	r3, #10
 8001546:	492d      	ldr	r1, [pc, #180]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 8001548:	482e      	ldr	r0, [pc, #184]	; (8001604 <set_packet_pointer_AX25+0x1d8>)
 800154a:	f004 fb98 	bl	8005c7e <HAL_UART_Transmit>
	local_packet->PID = curr_mem;
 800154e:	697b      	ldr	r3, [r7, #20]
 8001550:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001554:	3318      	adds	r3, #24
 8001556:	68fa      	ldr	r2, [r7, #12]
 8001558:	601a      	str	r2, [r3, #0]
	curr_mem += PID_len;
 800155a:	68fb      	ldr	r3, [r7, #12]
 800155c:	3308      	adds	r3, #8
 800155e:	60fb      	str	r3, [r7, #12]
	not_info += PID_len;
 8001560:	693b      	ldr	r3, [r7, #16]
 8001562:	3308      	adds	r3, #8
 8001564:	613b      	str	r3, [r7, #16]

	sprintf(uartData, "Setting pointer for Info\n");
 8001566:	4a25      	ldr	r2, [pc, #148]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 8001568:	4b2a      	ldr	r3, [pc, #168]	; (8001614 <set_packet_pointer_AX25+0x1e8>)
 800156a:	4615      	mov	r5, r2
 800156c:	461c      	mov	r4, r3
 800156e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001570:	6028      	str	r0, [r5, #0]
 8001572:	6069      	str	r1, [r5, #4]
 8001574:	60aa      	str	r2, [r5, #8]
 8001576:	60eb      	str	r3, [r5, #12]
 8001578:	cc03      	ldmia	r4!, {r0, r1}
 800157a:	6128      	str	r0, [r5, #16]
 800157c:	6169      	str	r1, [r5, #20]
 800157e:	8823      	ldrh	r3, [r4, #0]
 8001580:	832b      	strh	r3, [r5, #24]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001582:	481e      	ldr	r0, [pc, #120]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 8001584:	f7fe fe44 	bl	8000210 <strlen>
 8001588:	4603      	mov	r3, r0
 800158a:	b29a      	uxth	r2, r3
 800158c:	230a      	movs	r3, #10
 800158e:	491b      	ldr	r1, [pc, #108]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 8001590:	481c      	ldr	r0, [pc, #112]	; (8001604 <set_packet_pointer_AX25+0x1d8>)
 8001592:	f004 fb74 	bl	8005c7e <HAL_UART_Transmit>
	local_packet->Info = curr_mem;
 8001596:	697b      	ldr	r3, [r7, #20]
 8001598:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 800159c:	331c      	adds	r3, #28
 800159e:	68fa      	ldr	r2, [r7, #12]
 80015a0:	601a      	str	r2, [r3, #0]
	curr_mem += local_packet->Info_Len;
 80015a2:	697b      	ldr	r3, [r7, #20]
 80015a4:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80015a8:	681b      	ldr	r3, [r3, #0]
 80015aa:	461a      	mov	r2, r3
 80015ac:	68fb      	ldr	r3, [r7, #12]
 80015ae:	4413      	add	r3, r2
 80015b0:	60fb      	str	r3, [r7, #12]

	sprintf(uartData, "Setting pointer for FCS\n");
 80015b2:	4a12      	ldr	r2, [pc, #72]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 80015b4:	4b18      	ldr	r3, [pc, #96]	; (8001618 <set_packet_pointer_AX25+0x1ec>)
 80015b6:	4615      	mov	r5, r2
 80015b8:	461c      	mov	r4, r3
 80015ba:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80015bc:	6028      	str	r0, [r5, #0]
 80015be:	6069      	str	r1, [r5, #4]
 80015c0:	60aa      	str	r2, [r5, #8]
 80015c2:	60eb      	str	r3, [r5, #12]
 80015c4:	cc03      	ldmia	r4!, {r0, r1}
 80015c6:	6128      	str	r0, [r5, #16]
 80015c8:	6169      	str	r1, [r5, #20]
 80015ca:	7823      	ldrb	r3, [r4, #0]
 80015cc:	762b      	strb	r3, [r5, #24]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80015ce:	480b      	ldr	r0, [pc, #44]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 80015d0:	f7fe fe1e 	bl	8000210 <strlen>
 80015d4:	4603      	mov	r3, r0
 80015d6:	b29a      	uxth	r2, r3
 80015d8:	230a      	movs	r3, #10
 80015da:	4908      	ldr	r1, [pc, #32]	; (80015fc <set_packet_pointer_AX25+0x1d0>)
 80015dc:	4809      	ldr	r0, [pc, #36]	; (8001604 <set_packet_pointer_AX25+0x1d8>)
 80015de:	f004 fb4e 	bl	8005c7e <HAL_UART_Transmit>
	local_packet->FCS = curr_mem;
 80015e2:	697b      	ldr	r3, [r7, #20]
 80015e4:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80015e8:	3304      	adds	r3, #4
 80015ea:	68fa      	ldr	r2, [r7, #12]
 80015ec:	601a      	str	r2, [r3, #0]
}
 80015ee:	bf00      	nop
 80015f0:	371c      	adds	r7, #28
 80015f2:	46bd      	mov	sp, r7
 80015f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015f6:	bf00      	nop
 80015f8:	200000e4 	.word	0x200000e4
 80015fc:	20001ce8 	.word	0x20001ce8
 8001600:	08008630 	.word	0x08008630
 8001604:	200029e4 	.word	0x200029e4
 8001608:	08008654 	.word	0x08008654
 800160c:	08008674 	.word	0x08008674
 8001610:	08008694 	.word	0x08008694
 8001614:	080086b0 	.word	0x080086b0
 8001618:	080086cc 	.word	0x080086cc

0800161c <AX25_TO_KISS>:

void AX25_TO_KISS(){
 800161c:	b580      	push	{r7, lr}
 800161e:	b082      	sub	sp, #8
 8001620:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001622:	4b1c      	ldr	r3, [pc, #112]	; (8001694 <AX25_TO_KISS+0x78>)
 8001624:	607b      	str	r3, [r7, #4]
	bool *curr_mem = local_packet->KISS_PACKET;
 8001626:	687b      	ldr	r3, [r7, #4]
 8001628:	f603 235f 	addw	r3, r3, #2655	; 0xa5f
 800162c:	603b      	str	r3, [r7, #0]

	//Put a flag into KISS
	memcpy(curr_mem,KISS_FLAG,FLAG_SIZE);
 800162e:	683b      	ldr	r3, [r7, #0]
 8001630:	4919      	ldr	r1, [pc, #100]	; (8001698 <AX25_TO_KISS+0x7c>)
 8001632:	461a      	mov	r2, r3
 8001634:	460b      	mov	r3, r1
 8001636:	cb03      	ldmia	r3!, {r0, r1}
 8001638:	6010      	str	r0, [r2, #0]
 800163a:	6051      	str	r1, [r2, #4]
	curr_mem += FLAG_SIZE;
 800163c:	683b      	ldr	r3, [r7, #0]
 800163e:	3308      	adds	r3, #8
 8001640:	603b      	str	r3, [r7, #0]

	//Set port info
	memset(curr_mem,0,8);
 8001642:	2208      	movs	r2, #8
 8001644:	2100      	movs	r1, #0
 8001646:	6838      	ldr	r0, [r7, #0]
 8001648:	f005 fa52 	bl	8006af0 <memset>
	curr_mem += 8;
 800164c:	683b      	ldr	r3, [r7, #0]
 800164e:	3308      	adds	r3, #8
 8001650:	603b      	str	r3, [r7, #0]

	//Put AX25 packet into KISS w/o the FCS, HAVE AN ADDED 8 due to port info
	memcpy(curr_mem,local_packet->AX25_PACKET,(local_packet->byte_cnt*8)-FCS_len);
 8001652:	6879      	ldr	r1, [r7, #4]
 8001654:	687b      	ldr	r3, [r7, #4]
 8001656:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 800165a:	330c      	adds	r3, #12
 800165c:	681b      	ldr	r3, [r3, #0]
 800165e:	3b02      	subs	r3, #2
 8001660:	00db      	lsls	r3, r3, #3
 8001662:	461a      	mov	r2, r3
 8001664:	6838      	ldr	r0, [r7, #0]
 8001666:	f005 fa1f 	bl	8006aa8 <memcpy>
	curr_mem += (local_packet->byte_cnt*8)-FCS_len;
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001670:	330c      	adds	r3, #12
 8001672:	681b      	ldr	r3, [r3, #0]
 8001674:	00db      	lsls	r3, r3, #3
 8001676:	3b10      	subs	r3, #16
 8001678:	683a      	ldr	r2, [r7, #0]
 800167a:	4413      	add	r3, r2
 800167c:	603b      	str	r3, [r7, #0]

	//Put a flag into KISS
	memcpy(curr_mem,KISS_FLAG,FLAG_SIZE);
 800167e:	683b      	ldr	r3, [r7, #0]
 8001680:	4905      	ldr	r1, [pc, #20]	; (8001698 <AX25_TO_KISS+0x7c>)
 8001682:	461a      	mov	r2, r3
 8001684:	460b      	mov	r3, r1
 8001686:	cb03      	ldmia	r3!, {r0, r1}
 8001688:	6010      	str	r0, [r2, #0]
 800168a:	6051      	str	r1, [r2, #4]
}
 800168c:	bf00      	nop
 800168e:	3708      	adds	r7, #8
 8001690:	46bd      	mov	sp, r7
 8001692:	bd80      	pop	{r7, pc}
 8001694:	200000e4 	.word	0x200000e4
 8001698:	20000000 	.word	0x20000000

0800169c <KISS_TO_HEX>:
	}
	*stuff = bit_stuff_count;
	return ones_count;
}

void KISS_TO_HEX(){
 800169c:	b5b0      	push	{r4, r5, r7, lr}
 800169e:	b086      	sub	sp, #24
 80016a0:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 80016a2:	4b37      	ldr	r3, [pc, #220]	; (8001780 <KISS_TO_HEX+0xe4>)
 80016a4:	613b      	str	r3, [r7, #16]
	struct UART_INPUT* local_UART_packet = &UART_packet;
 80016a6:	4b37      	ldr	r3, [pc, #220]	; (8001784 <KISS_TO_HEX+0xe8>)
 80016a8:	60fb      	str	r3, [r7, #12]

	local_UART_packet->received_byte_cnt = local_packet->byte_cnt+1;
 80016aa:	693b      	ldr	r3, [r7, #16]
 80016ac:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80016b0:	330c      	adds	r3, #12
 80016b2:	681b      	ldr	r3, [r3, #0]
 80016b4:	1c5a      	adds	r2, r3, #1
 80016b6:	68fb      	ldr	r3, [r7, #12]
 80016b8:	605a      	str	r2, [r3, #4]
	bool *curr_mem = local_packet->KISS_PACKET;
 80016ba:	693b      	ldr	r3, [r7, #16]
 80016bc:	f603 235f 	addw	r3, r3, #2655	; 0xa5f
 80016c0:	60bb      	str	r3, [r7, #8]
	uint8_t curr_val;

	sprintf(uartData, "Filling HEX buffer:\n");
 80016c2:	4a31      	ldr	r2, [pc, #196]	; (8001788 <KISS_TO_HEX+0xec>)
 80016c4:	4b31      	ldr	r3, [pc, #196]	; (800178c <KISS_TO_HEX+0xf0>)
 80016c6:	4615      	mov	r5, r2
 80016c8:	461c      	mov	r4, r3
 80016ca:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80016cc:	6028      	str	r0, [r5, #0]
 80016ce:	6069      	str	r1, [r5, #4]
 80016d0:	60aa      	str	r2, [r5, #8]
 80016d2:	60eb      	str	r3, [r5, #12]
 80016d4:	6820      	ldr	r0, [r4, #0]
 80016d6:	6128      	str	r0, [r5, #16]
 80016d8:	7923      	ldrb	r3, [r4, #4]
 80016da:	752b      	strb	r3, [r5, #20]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80016dc:	482a      	ldr	r0, [pc, #168]	; (8001788 <KISS_TO_HEX+0xec>)
 80016de:	f7fe fd97 	bl	8000210 <strlen>
 80016e2:	4603      	mov	r3, r0
 80016e4:	b29a      	uxth	r2, r3
 80016e6:	230a      	movs	r3, #10
 80016e8:	4927      	ldr	r1, [pc, #156]	; (8001788 <KISS_TO_HEX+0xec>)
 80016ea:	4829      	ldr	r0, [pc, #164]	; (8001790 <KISS_TO_HEX+0xf4>)
 80016ec:	f004 fac7 	bl	8005c7e <HAL_UART_Transmit>

    for(int i = 0; i < local_UART_packet->received_byte_cnt; i++){
 80016f0:	2300      	movs	r3, #0
 80016f2:	617b      	str	r3, [r7, #20]
 80016f4:	e023      	b.n	800173e <KISS_TO_HEX+0xa2>
    	curr_val = conv_BIN_to_HEX(curr_mem+(i*8),1);
 80016f6:	697b      	ldr	r3, [r7, #20]
 80016f8:	00db      	lsls	r3, r3, #3
 80016fa:	461a      	mov	r2, r3
 80016fc:	68bb      	ldr	r3, [r7, #8]
 80016fe:	4413      	add	r3, r2
 8001700:	2101      	movs	r1, #1
 8001702:	4618      	mov	r0, r3
 8001704:	f7ff fca8 	bl	8001058 <conv_BIN_to_HEX>
 8001708:	4603      	mov	r3, r0
 800170a:	71fb      	strb	r3, [r7, #7]

        sprintf(uartData, "HEX[%d] = %x\n",i,curr_val);
 800170c:	79fb      	ldrb	r3, [r7, #7]
 800170e:	697a      	ldr	r2, [r7, #20]
 8001710:	4920      	ldr	r1, [pc, #128]	; (8001794 <KISS_TO_HEX+0xf8>)
 8001712:	481d      	ldr	r0, [pc, #116]	; (8001788 <KISS_TO_HEX+0xec>)
 8001714:	f005 f9f4 	bl	8006b00 <siprintf>
    	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001718:	481b      	ldr	r0, [pc, #108]	; (8001788 <KISS_TO_HEX+0xec>)
 800171a:	f7fe fd79 	bl	8000210 <strlen>
 800171e:	4603      	mov	r3, r0
 8001720:	b29a      	uxth	r2, r3
 8001722:	230a      	movs	r3, #10
 8001724:	4918      	ldr	r1, [pc, #96]	; (8001788 <KISS_TO_HEX+0xec>)
 8001726:	481a      	ldr	r0, [pc, #104]	; (8001790 <KISS_TO_HEX+0xf4>)
 8001728:	f004 faa9 	bl	8005c7e <HAL_UART_Transmit>

        local_UART_packet->HEX_KISS_PACKET[i] = curr_val;
 800172c:	68fa      	ldr	r2, [r7, #12]
 800172e:	697b      	ldr	r3, [r7, #20]
 8001730:	4413      	add	r3, r2
 8001732:	330e      	adds	r3, #14
 8001734:	79fa      	ldrb	r2, [r7, #7]
 8001736:	701a      	strb	r2, [r3, #0]
    for(int i = 0; i < local_UART_packet->received_byte_cnt; i++){
 8001738:	697b      	ldr	r3, [r7, #20]
 800173a:	3301      	adds	r3, #1
 800173c:	617b      	str	r3, [r7, #20]
 800173e:	68fb      	ldr	r3, [r7, #12]
 8001740:	685b      	ldr	r3, [r3, #4]
 8001742:	697a      	ldr	r2, [r7, #20]
 8001744:	429a      	cmp	r2, r3
 8001746:	dbd6      	blt.n	80016f6 <KISS_TO_HEX+0x5a>
    }

	sprintf(uartData, "HEX buffer filled\n");
 8001748:	4a0f      	ldr	r2, [pc, #60]	; (8001788 <KISS_TO_HEX+0xec>)
 800174a:	4b13      	ldr	r3, [pc, #76]	; (8001798 <KISS_TO_HEX+0xfc>)
 800174c:	4615      	mov	r5, r2
 800174e:	461c      	mov	r4, r3
 8001750:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001752:	6028      	str	r0, [r5, #0]
 8001754:	6069      	str	r1, [r5, #4]
 8001756:	60aa      	str	r2, [r5, #8]
 8001758:	60eb      	str	r3, [r5, #12]
 800175a:	8823      	ldrh	r3, [r4, #0]
 800175c:	78a2      	ldrb	r2, [r4, #2]
 800175e:	822b      	strh	r3, [r5, #16]
 8001760:	4613      	mov	r3, r2
 8001762:	74ab      	strb	r3, [r5, #18]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001764:	4808      	ldr	r0, [pc, #32]	; (8001788 <KISS_TO_HEX+0xec>)
 8001766:	f7fe fd53 	bl	8000210 <strlen>
 800176a:	4603      	mov	r3, r0
 800176c:	b29a      	uxth	r2, r3
 800176e:	230a      	movs	r3, #10
 8001770:	4905      	ldr	r1, [pc, #20]	; (8001788 <KISS_TO_HEX+0xec>)
 8001772:	4807      	ldr	r0, [pc, #28]	; (8001790 <KISS_TO_HEX+0xf4>)
 8001774:	f004 fa83 	bl	8005c7e <HAL_UART_Transmit>
}
 8001778:	bf00      	nop
 800177a:	3718      	adds	r7, #24
 800177c:	46bd      	mov	sp, r7
 800177e:	bdb0      	pop	{r4, r5, r7, pc}
 8001780:	200000e4 	.word	0x200000e4
 8001784:	20001450 	.word	0x20001450
 8001788:	20001ce8 	.word	0x20001ce8
 800178c:	08008794 	.word	0x08008794
 8001790:	200029e4 	.word	0x200029e4
 8001794:	080087ac 	.word	0x080087ac
 8001798:	080087bc 	.word	0x080087bc

0800179c <crc_calc>:
//END OF KISS to AX.25 data flow

//---------------------- FCS Generation -----------------------------------------------------------------------------------------------

//CRC Calculations
void crc_calc(int in_bit, int * crc_ptr_in, int * crc_count_ptr_in){
 800179c:	b580      	push	{r7, lr}
 800179e:	b08a      	sub	sp, #40	; 0x28
 80017a0:	af00      	add	r7, sp, #0
 80017a2:	60f8      	str	r0, [r7, #12]
 80017a4:	60b9      	str	r1, [r7, #8]
 80017a6:	607a      	str	r2, [r7, #4]
	struct PACKET_STRUCT* local_packet = &global_packet;
 80017a8:	4b35      	ldr	r3, [pc, #212]	; (8001880 <crc_calc+0xe4>)
 80017aa:	627b      	str	r3, [r7, #36]	; 0x24
	int max_bits = rxBit_count-FCS_len;
 80017ac:	4b35      	ldr	r3, [pc, #212]	; (8001884 <crc_calc+0xe8>)
 80017ae:	681b      	ldr	r3, [r3, #0]
 80017b0:	3b10      	subs	r3, #16
 80017b2:	623b      	str	r3, [r7, #32]
	int out_bit;
	int roll_bit = *crc_ptr_in & 0x0001;
 80017b4:	68bb      	ldr	r3, [r7, #8]
 80017b6:	681b      	ldr	r3, [r3, #0]
 80017b8:	f003 0301 	and.w	r3, r3, #1
 80017bc:	61fb      	str	r3, [r7, #28]
    int poly = 0x8408;             			//reverse order of 0x1021
 80017be:	f248 4308 	movw	r3, #33800	; 0x8408
 80017c2:	61bb      	str	r3, [r7, #24]

    out_bit = in_bit ^ roll_bit; 		//xor lsb of current crc with input bit
 80017c4:	68fa      	ldr	r2, [r7, #12]
 80017c6:	69fb      	ldr	r3, [r7, #28]
 80017c8:	4053      	eors	r3, r2
 80017ca:	617b      	str	r3, [r7, #20]
	*crc_ptr_in >>= 1;               	//right shift by 1
 80017cc:	68bb      	ldr	r3, [r7, #8]
 80017ce:	681b      	ldr	r3, [r3, #0]
 80017d0:	105a      	asrs	r2, r3, #1
 80017d2:	68bb      	ldr	r3, [r7, #8]
 80017d4:	601a      	str	r2, [r3, #0]
	poly = (out_bit == 1) ? 0x8408 : 0x0000;
 80017d6:	697b      	ldr	r3, [r7, #20]
 80017d8:	2b01      	cmp	r3, #1
 80017da:	d102      	bne.n	80017e2 <crc_calc+0x46>
 80017dc:	f248 4308 	movw	r3, #33800	; 0x8408
 80017e0:	e000      	b.n	80017e4 <crc_calc+0x48>
 80017e2:	2300      	movs	r3, #0
 80017e4:	61bb      	str	r3, [r7, #24]
	*crc_ptr_in ^= poly;
 80017e6:	68bb      	ldr	r3, [r7, #8]
 80017e8:	681a      	ldr	r2, [r3, #0]
 80017ea:	69bb      	ldr	r3, [r7, #24]
 80017ec:	405a      	eors	r2, r3
 80017ee:	68bb      	ldr	r3, [r7, #8]
 80017f0:	601a      	str	r2, [r3, #0]
	*crc_count_ptr_in+=1;//Increment count
 80017f2:	687b      	ldr	r3, [r7, #4]
 80017f4:	681b      	ldr	r3, [r3, #0]
 80017f6:	1c5a      	adds	r2, r3, #1
 80017f8:	687b      	ldr	r3, [r7, #4]
 80017fa:	601a      	str	r2, [r3, #0]

    //End condition
//	if(*crc_count_ptr_in >= rxBit_count){
	if(*crc_count_ptr_in >= max_bits){
 80017fc:	687b      	ldr	r3, [r7, #4]
 80017fe:	681b      	ldr	r3, [r3, #0]
 8001800:	6a3a      	ldr	r2, [r7, #32]
 8001802:	429a      	cmp	r2, r3
 8001804:	dc38      	bgt.n	8001878 <crc_calc+0xdc>
    	*crc_ptr_in ^= 0xFFFF;//Complete CRC by XOR with all ones (one's complement)
 8001806:	68bb      	ldr	r3, [r7, #8]
 8001808:	681b      	ldr	r3, [r3, #0]
 800180a:	f483 437f 	eor.w	r3, r3, #65280	; 0xff00
 800180e:	f083 03ff 	eor.w	r3, r3, #255	; 0xff
 8001812:	68ba      	ldr	r2, [r7, #8]
 8001814:	6013      	str	r3, [r2, #0]
  	    sprintf(uartData, "Convert CRC to FCS (hex) = %x\n",local_packet->crc);
 8001816:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001818:	f503 5399 	add.w	r3, r3, #4896	; 0x1320
 800181c:	3308      	adds	r3, #8
 800181e:	881b      	ldrh	r3, [r3, #0]
 8001820:	461a      	mov	r2, r3
 8001822:	4919      	ldr	r1, [pc, #100]	; (8001888 <crc_calc+0xec>)
 8001824:	4819      	ldr	r0, [pc, #100]	; (800188c <crc_calc+0xf0>)
 8001826:	f005 f96b 	bl	8006b00 <siprintf>
    	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 800182a:	4818      	ldr	r0, [pc, #96]	; (800188c <crc_calc+0xf0>)
 800182c:	f7fe fcf0 	bl	8000210 <strlen>
 8001830:	4603      	mov	r3, r0
 8001832:	b29a      	uxth	r2, r3
 8001834:	230a      	movs	r3, #10
 8001836:	4915      	ldr	r1, [pc, #84]	; (800188c <crc_calc+0xf0>)
 8001838:	4815      	ldr	r0, [pc, #84]	; (8001890 <crc_calc+0xf4>)
 800183a:	f004 fa20 	bl	8005c7e <HAL_UART_Transmit>
    	if(local_packet->check_crc == false){
 800183e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001840:	f503 5399 	add.w	r3, r3, #4896	; 0x1320
 8001844:	3310      	adds	r3, #16
 8001846:	781b      	ldrb	r3, [r3, #0]
 8001848:	f083 0301 	eor.w	r3, r3, #1
 800184c:	b2db      	uxtb	r3, r3
 800184e:	2b00      	cmp	r3, #0
 8001850:	d012      	beq.n	8001878 <crc_calc+0xdc>
    		//REMEBER TO CHECK THIS CRC conversion FOR ACCURACY LATER
    		conv_HEX_to_BIN(*crc_ptr_in,local_packet->FCS,false);
 8001852:	68bb      	ldr	r3, [r7, #8]
 8001854:	681b      	ldr	r3, [r3, #0]
 8001856:	b298      	uxth	r0, r3
 8001858:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800185a:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 800185e:	3304      	adds	r3, #4
 8001860:	681b      	ldr	r3, [r3, #0]
 8001862:	2200      	movs	r2, #0
 8001864:	4619      	mov	r1, r3
 8001866:	f7ff fb37 	bl	8000ed8 <conv_HEX_to_BIN>
    		local_packet->crc = 0xFFFF;
 800186a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800186c:	f503 5399 	add.w	r3, r3, #4896	; 0x1320
 8001870:	3308      	adds	r3, #8
 8001872:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001876:	801a      	strh	r2, [r3, #0]
    	}
    }
}
 8001878:	bf00      	nop
 800187a:	3728      	adds	r7, #40	; 0x28
 800187c:	46bd      	mov	sp, r7
 800187e:	bd80      	pop	{r7, pc}
 8001880:	200000e4 	.word	0x200000e4
 8001884:	200000a4 	.word	0x200000a4
 8001888:	080087d0 	.word	0x080087d0
 800188c:	20001ce8 	.word	0x20001ce8
 8001890:	200029e4 	.word	0x200029e4

08001894 <crc_generate>:

void crc_generate(){
 8001894:	b5b0      	push	{r4, r5, r7, lr}
 8001896:	b088      	sub	sp, #32
 8001898:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 800189a:	4b65      	ldr	r3, [pc, #404]	; (8001a30 <crc_generate+0x19c>)
 800189c:	60fb      	str	r3, [r7, #12]
	uint16_t * crc_ptr = &(local_packet->crc);
 800189e:	68fb      	ldr	r3, [r7, #12]
 80018a0:	f503 5399 	add.w	r3, r3, #4896	; 0x1320
 80018a4:	3308      	adds	r3, #8
 80018a6:	60bb      	str	r3, [r7, #8]
	int * crc_count_ptr = &(local_packet->crc_count);
 80018a8:	68fb      	ldr	r3, [r7, #12]
 80018aa:	f503 5399 	add.w	r3, r3, #4896	; 0x1320
 80018ae:	330c      	adds	r3, #12
 80018b0:	607b      	str	r3, [r7, #4]
	bool *curr_mem;

	*crc_ptr = 0xFFFF;
 80018b2:	68bb      	ldr	r3, [r7, #8]
 80018b4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80018b8:	801a      	strh	r2, [r3, #0]
	*crc_count_ptr = 0;
 80018ba:	687b      	ldr	r3, [r7, #4]
 80018bc:	2200      	movs	r2, #0
 80018be:	601a      	str	r2, [r3, #0]

	//Generate CRC from packet pointers of current packet type

	//have to be inserted in reverse order
	sprintf(uartData, "Performing CRC generation\n");
 80018c0:	4a5c      	ldr	r2, [pc, #368]	; (8001a34 <crc_generate+0x1a0>)
 80018c2:	4b5d      	ldr	r3, [pc, #372]	; (8001a38 <crc_generate+0x1a4>)
 80018c4:	4615      	mov	r5, r2
 80018c6:	461c      	mov	r4, r3
 80018c8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80018ca:	6028      	str	r0, [r5, #0]
 80018cc:	6069      	str	r1, [r5, #4]
 80018ce:	60aa      	str	r2, [r5, #8]
 80018d0:	60eb      	str	r3, [r5, #12]
 80018d2:	cc03      	ldmia	r4!, {r0, r1}
 80018d4:	6128      	str	r0, [r5, #16]
 80018d6:	6169      	str	r1, [r5, #20]
 80018d8:	8823      	ldrh	r3, [r4, #0]
 80018da:	78a2      	ldrb	r2, [r4, #2]
 80018dc:	832b      	strh	r3, [r5, #24]
 80018de:	4613      	mov	r3, r2
 80018e0:	76ab      	strb	r3, [r5, #26]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80018e2:	4854      	ldr	r0, [pc, #336]	; (8001a34 <crc_generate+0x1a0>)
 80018e4:	f7fe fc94 	bl	8000210 <strlen>
 80018e8:	4603      	mov	r3, r0
 80018ea:	b29a      	uxth	r2, r3
 80018ec:	230a      	movs	r3, #10
 80018ee:	4951      	ldr	r1, [pc, #324]	; (8001a34 <crc_generate+0x1a0>)
 80018f0:	4852      	ldr	r0, [pc, #328]	; (8001a3c <crc_generate+0x1a8>)
 80018f2:	f004 f9c4 	bl	8005c7e <HAL_UART_Transmit>

	//Calculate CRC for address
	curr_mem = (local_packet->address);//start at MS Byte(LSB)
 80018f6:	68fb      	ldr	r3, [r7, #12]
 80018f8:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80018fc:	3310      	adds	r3, #16
 80018fe:	681b      	ldr	r3, [r3, #0]
 8001900:	603b      	str	r3, [r7, #0]
	for(int i = 0;i<address_len;i++){
 8001902:	2300      	movs	r3, #0
 8001904:	61fb      	str	r3, [r7, #28]
 8001906:	e00f      	b.n	8001928 <crc_generate+0x94>
		crc_calc((int)local_packet->address[i],crc_ptr,crc_count_ptr);
 8001908:	68fb      	ldr	r3, [r7, #12]
 800190a:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 800190e:	3310      	adds	r3, #16
 8001910:	681a      	ldr	r2, [r3, #0]
 8001912:	69fb      	ldr	r3, [r7, #28]
 8001914:	4413      	add	r3, r2
 8001916:	781b      	ldrb	r3, [r3, #0]
 8001918:	687a      	ldr	r2, [r7, #4]
 800191a:	68b9      	ldr	r1, [r7, #8]
 800191c:	4618      	mov	r0, r3
 800191e:	f7ff ff3d 	bl	800179c <crc_calc>
	for(int i = 0;i<address_len;i++){
 8001922:	69fb      	ldr	r3, [r7, #28]
 8001924:	3301      	adds	r3, #1
 8001926:	61fb      	str	r3, [r7, #28]
 8001928:	69fb      	ldr	r3, [r7, #28]
 800192a:	2b6f      	cmp	r3, #111	; 0x6f
 800192c:	ddec      	ble.n	8001908 <crc_generate+0x74>
	}

	//Calculate CRC for control
	curr_mem = local_packet->control;
 800192e:	68fb      	ldr	r3, [r7, #12]
 8001930:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001934:	3314      	adds	r3, #20
 8001936:	681b      	ldr	r3, [r3, #0]
 8001938:	603b      	str	r3, [r7, #0]
	for(int i = 0; i < control_len; i++){
 800193a:	2300      	movs	r3, #0
 800193c:	61bb      	str	r3, [r7, #24]
 800193e:	e00f      	b.n	8001960 <crc_generate+0xcc>
		//Call crc_calc per bit
		crc_calc((int)local_packet->control[i],crc_ptr,crc_count_ptr);
 8001940:	68fb      	ldr	r3, [r7, #12]
 8001942:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 8001946:	3314      	adds	r3, #20
 8001948:	681a      	ldr	r2, [r3, #0]
 800194a:	69bb      	ldr	r3, [r7, #24]
 800194c:	4413      	add	r3, r2
 800194e:	781b      	ldrb	r3, [r3, #0]
 8001950:	687a      	ldr	r2, [r7, #4]
 8001952:	68b9      	ldr	r1, [r7, #8]
 8001954:	4618      	mov	r0, r3
 8001956:	f7ff ff21 	bl	800179c <crc_calc>
	for(int i = 0; i < control_len; i++){
 800195a:	69bb      	ldr	r3, [r7, #24]
 800195c:	3301      	adds	r3, #1
 800195e:	61bb      	str	r3, [r7, #24]
 8001960:	69bb      	ldr	r3, [r7, #24]
 8001962:	2b07      	cmp	r3, #7
 8001964:	ddec      	ble.n	8001940 <crc_generate+0xac>
	}

//	//Calculate CRC for PID (if packet is of type i-frame)
	curr_mem = local_packet->PID;
 8001966:	68fb      	ldr	r3, [r7, #12]
 8001968:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 800196c:	3318      	adds	r3, #24
 800196e:	681b      	ldr	r3, [r3, #0]
 8001970:	603b      	str	r3, [r7, #0]
	for(int i = 0; i < PID_len; i++){
 8001972:	2300      	movs	r3, #0
 8001974:	617b      	str	r3, [r7, #20]
 8001976:	e00f      	b.n	8001998 <crc_generate+0x104>
		//Call crc_calc per bit
		crc_calc((int)local_packet->PID[i],crc_ptr,crc_count_ptr);
 8001978:	68fb      	ldr	r3, [r7, #12]
 800197a:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 800197e:	3318      	adds	r3, #24
 8001980:	681a      	ldr	r2, [r3, #0]
 8001982:	697b      	ldr	r3, [r7, #20]
 8001984:	4413      	add	r3, r2
 8001986:	781b      	ldrb	r3, [r3, #0]
 8001988:	687a      	ldr	r2, [r7, #4]
 800198a:	68b9      	ldr	r1, [r7, #8]
 800198c:	4618      	mov	r0, r3
 800198e:	f7ff ff05 	bl	800179c <crc_calc>
	for(int i = 0; i < PID_len; i++){
 8001992:	697b      	ldr	r3, [r7, #20]
 8001994:	3301      	adds	r3, #1
 8001996:	617b      	str	r3, [r7, #20]
 8001998:	697b      	ldr	r3, [r7, #20]
 800199a:	2b07      	cmp	r3, #7
 800199c:	ddec      	ble.n	8001978 <crc_generate+0xe4>
	}

	//Calculate CRC for Info field
	curr_mem = (local_packet->Info);
 800199e:	68fb      	ldr	r3, [r7, #12]
 80019a0:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80019a4:	331c      	adds	r3, #28
 80019a6:	681b      	ldr	r3, [r3, #0]
 80019a8:	603b      	str	r3, [r7, #0]
	for(int i = 0;i<local_packet->Info_Len;i++){
 80019aa:	2300      	movs	r3, #0
 80019ac:	613b      	str	r3, [r7, #16]
 80019ae:	e00f      	b.n	80019d0 <crc_generate+0x13c>
		crc_calc((int)local_packet->Info[i],crc_ptr,crc_count_ptr);
 80019b0:	68fb      	ldr	r3, [r7, #12]
 80019b2:	f503 5397 	add.w	r3, r3, #4832	; 0x12e0
 80019b6:	331c      	adds	r3, #28
 80019b8:	681a      	ldr	r2, [r3, #0]
 80019ba:	693b      	ldr	r3, [r7, #16]
 80019bc:	4413      	add	r3, r2
 80019be:	781b      	ldrb	r3, [r3, #0]
 80019c0:	687a      	ldr	r2, [r7, #4]
 80019c2:	68b9      	ldr	r1, [r7, #8]
 80019c4:	4618      	mov	r0, r3
 80019c6:	f7ff fee9 	bl	800179c <crc_calc>
	for(int i = 0;i<local_packet->Info_Len;i++){
 80019ca:	693b      	ldr	r3, [r7, #16]
 80019cc:	3301      	adds	r3, #1
 80019ce:	613b      	str	r3, [r7, #16]
 80019d0:	68fb      	ldr	r3, [r7, #12]
 80019d2:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 80019d6:	681b      	ldr	r3, [r3, #0]
 80019d8:	693a      	ldr	r2, [r7, #16]
 80019da:	429a      	cmp	r2, r3
 80019dc:	dbe8      	blt.n	80019b0 <crc_generate+0x11c>
	}

	sprintf(uartData, "rx_bitcnt = %d\n", rxBit_count);
 80019de:	4b18      	ldr	r3, [pc, #96]	; (8001a40 <crc_generate+0x1ac>)
 80019e0:	681b      	ldr	r3, [r3, #0]
 80019e2:	461a      	mov	r2, r3
 80019e4:	4917      	ldr	r1, [pc, #92]	; (8001a44 <crc_generate+0x1b0>)
 80019e6:	4813      	ldr	r0, [pc, #76]	; (8001a34 <crc_generate+0x1a0>)
 80019e8:	f005 f88a 	bl	8006b00 <siprintf>
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 80019ec:	4811      	ldr	r0, [pc, #68]	; (8001a34 <crc_generate+0x1a0>)
 80019ee:	f7fe fc0f 	bl	8000210 <strlen>
 80019f2:	4603      	mov	r3, r0
 80019f4:	b29a      	uxth	r2, r3
 80019f6:	230a      	movs	r3, #10
 80019f8:	490e      	ldr	r1, [pc, #56]	; (8001a34 <crc_generate+0x1a0>)
 80019fa:	4810      	ldr	r0, [pc, #64]	; (8001a3c <crc_generate+0x1a8>)
 80019fc:	f004 f93f 	bl	8005c7e <HAL_UART_Transmit>

	sprintf(uartData, "bitcnt_ptr = %d\n", *crc_count_ptr);
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	681b      	ldr	r3, [r3, #0]
 8001a04:	461a      	mov	r2, r3
 8001a06:	4910      	ldr	r1, [pc, #64]	; (8001a48 <crc_generate+0x1b4>)
 8001a08:	480a      	ldr	r0, [pc, #40]	; (8001a34 <crc_generate+0x1a0>)
 8001a0a:	f005 f879 	bl	8006b00 <siprintf>
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001a0e:	4809      	ldr	r0, [pc, #36]	; (8001a34 <crc_generate+0x1a0>)
 8001a10:	f7fe fbfe 	bl	8000210 <strlen>
 8001a14:	4603      	mov	r3, r0
 8001a16:	b29a      	uxth	r2, r3
 8001a18:	230a      	movs	r3, #10
 8001a1a:	4906      	ldr	r1, [pc, #24]	; (8001a34 <crc_generate+0x1a0>)
 8001a1c:	4807      	ldr	r0, [pc, #28]	; (8001a3c <crc_generate+0x1a8>)
 8001a1e:	f004 f92e 	bl	8005c7e <HAL_UART_Transmit>
	*crc_count_ptr = 0;
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	2200      	movs	r2, #0
 8001a26:	601a      	str	r2, [r3, #0]
}
 8001a28:	bf00      	nop
 8001a2a:	3720      	adds	r7, #32
 8001a2c:	46bd      	mov	sp, r7
 8001a2e:	bdb0      	pop	{r4, r5, r7, pc}
 8001a30:	200000e4 	.word	0x200000e4
 8001a34:	20001ce8 	.word	0x20001ce8
 8001a38:	080087f0 	.word	0x080087f0
 8001a3c:	200029e4 	.word	0x200029e4
 8001a40:	200000a4 	.word	0x200000a4
 8001a44:	0800880c 	.word	0x0800880c
 8001a48:	0800881c 	.word	0x0800881c

08001a4c <crc_check>:

bool crc_check(){
 8001a4c:	b580      	push	{r7, lr}
 8001a4e:	b082      	sub	sp, #8
 8001a50:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001a52:	4b14      	ldr	r3, [pc, #80]	; (8001aa4 <crc_check+0x58>)
 8001a54:	607b      	str	r3, [r7, #4]
	local_packet->check_crc = true;
 8001a56:	687b      	ldr	r3, [r7, #4]
 8001a58:	f503 5399 	add.w	r3, r3, #4896	; 0x1320
 8001a5c:	3310      	adds	r3, #16
 8001a5e:	2201      	movs	r2, #1
 8001a60:	701a      	strb	r2, [r3, #0]
	uint16_t fcs_val = 0;
 8001a62:	2300      	movs	r3, #0
 8001a64:	807b      	strh	r3, [r7, #2]
	bool valid_crc = false;
 8001a66:	2300      	movs	r3, #0
 8001a68:	707b      	strb	r3, [r7, #1]

	fcs_val = conv_BIN_to_HEX(local_packet->FCS,0);
 8001a6a:	687b      	ldr	r3, [r7, #4]
 8001a6c:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001a70:	3304      	adds	r3, #4
 8001a72:	681b      	ldr	r3, [r3, #0]
 8001a74:	2100      	movs	r1, #0
 8001a76:	4618      	mov	r0, r3
 8001a78:	f7ff faee 	bl	8001058 <conv_BIN_to_HEX>
 8001a7c:	4603      	mov	r3, r0
 8001a7e:	807b      	strh	r3, [r7, #2]

	//generate crc
	crc_generate();
 8001a80:	f7ff ff08 	bl	8001894 <crc_generate>

	//compare crc
	valid_crc = (local_packet->crc==fcs_val) ? true : false;
 8001a84:	687b      	ldr	r3, [r7, #4]
 8001a86:	f503 5399 	add.w	r3, r3, #4896	; 0x1320
 8001a8a:	3308      	adds	r3, #8
 8001a8c:	881b      	ldrh	r3, [r3, #0]
 8001a8e:	887a      	ldrh	r2, [r7, #2]
 8001a90:	429a      	cmp	r2, r3
 8001a92:	bf0c      	ite	eq
 8001a94:	2301      	moveq	r3, #1
 8001a96:	2300      	movne	r3, #0
 8001a98:	707b      	strb	r3, [r7, #1]
	return valid_crc;
 8001a9a:	787b      	ldrb	r3, [r7, #1]
}
 8001a9c:	4618      	mov	r0, r3
 8001a9e:	3708      	adds	r7, #8
 8001aa0:	46bd      	mov	sp, r7
 8001aa2:	bd80      	pop	{r7, pc}
 8001aa4:	200000e4 	.word	0x200000e4

08001aa8 <loadBitBuffer>:
 * 11001110
 * 11001110
 */

bool bufffull = false;
int loadBitBuffer(bool bit_val) {
 8001aa8:	b480      	push	{r7}
 8001aaa:	b083      	sub	sp, #12
 8001aac:	af00      	add	r7, sp, #0
 8001aae:	4603      	mov	r3, r0
 8001ab0:	71fb      	strb	r3, [r7, #7]
	if(canWrite){
 8001ab2:	4b18      	ldr	r3, [pc, #96]	; (8001b14 <loadBitBuffer+0x6c>)
 8001ab4:	781b      	ldrb	r3, [r3, #0]
 8001ab6:	2b00      	cmp	r3, #0
 8001ab8:	d01e      	beq.n	8001af8 <loadBitBuffer+0x50>
		bitBuffer[bitSaveCount] = bit_val;
 8001aba:	4b17      	ldr	r3, [pc, #92]	; (8001b18 <loadBitBuffer+0x70>)
 8001abc:	881b      	ldrh	r3, [r3, #0]
 8001abe:	4619      	mov	r1, r3
 8001ac0:	4a16      	ldr	r2, [pc, #88]	; (8001b1c <loadBitBuffer+0x74>)
 8001ac2:	79fb      	ldrb	r3, [r7, #7]
 8001ac4:	5453      	strb	r3, [r2, r1]
		bitSaveCount++;
 8001ac6:	4b14      	ldr	r3, [pc, #80]	; (8001b18 <loadBitBuffer+0x70>)
 8001ac8:	881b      	ldrh	r3, [r3, #0]
 8001aca:	3301      	adds	r3, #1
 8001acc:	b29a      	uxth	r2, r3
 8001ace:	4b12      	ldr	r3, [pc, #72]	; (8001b18 <loadBitBuffer+0x70>)
 8001ad0:	801a      	strh	r2, [r3, #0]
		if (bitSaveCount >= RX_BUFFERSIZE) {
 8001ad2:	4b11      	ldr	r3, [pc, #68]	; (8001b18 <loadBitBuffer+0x70>)
 8001ad4:	881b      	ldrh	r3, [r3, #0]
 8001ad6:	f640 225e 	movw	r2, #2654	; 0xa5e
 8001ada:	4293      	cmp	r3, r2
 8001adc:	d902      	bls.n	8001ae4 <loadBitBuffer+0x3c>
			canWrite = false;
 8001ade:	4b0d      	ldr	r3, [pc, #52]	; (8001b14 <loadBitBuffer+0x6c>)
 8001ae0:	2200      	movs	r2, #0
 8001ae2:	701a      	strb	r2, [r3, #0]
		}

		//Buffer is full
		if(bitSaveCount == bitReadCount){
 8001ae4:	4b0c      	ldr	r3, [pc, #48]	; (8001b18 <loadBitBuffer+0x70>)
 8001ae6:	881a      	ldrh	r2, [r3, #0]
 8001ae8:	4b0d      	ldr	r3, [pc, #52]	; (8001b20 <loadBitBuffer+0x78>)
 8001aea:	881b      	ldrh	r3, [r3, #0]
 8001aec:	429a      	cmp	r2, r3
 8001aee:	d106      	bne.n	8001afe <loadBitBuffer+0x56>
			canWrite = false;
 8001af0:	4b08      	ldr	r3, [pc, #32]	; (8001b14 <loadBitBuffer+0x6c>)
 8001af2:	2200      	movs	r2, #0
 8001af4:	701a      	strb	r2, [r3, #0]
 8001af6:	e002      	b.n	8001afe <loadBitBuffer+0x56>
		}
	} else {
		bufffull = true;
 8001af8:	4b0a      	ldr	r3, [pc, #40]	; (8001b24 <loadBitBuffer+0x7c>)
 8001afa:	2201      	movs	r2, #1
 8001afc:	701a      	strb	r2, [r3, #0]
	}
	canRead = true;
 8001afe:	4b0a      	ldr	r3, [pc, #40]	; (8001b28 <loadBitBuffer+0x80>)
 8001b00:	2201      	movs	r2, #1
 8001b02:	701a      	strb	r2, [r3, #0]
	return bitSaveCount;
 8001b04:	4b04      	ldr	r3, [pc, #16]	; (8001b18 <loadBitBuffer+0x70>)
 8001b06:	881b      	ldrh	r3, [r3, #0]
}
 8001b08:	4618      	mov	r0, r3
 8001b0a:	370c      	adds	r7, #12
 8001b0c:	46bd      	mov	sp, r7
 8001b0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b12:	4770      	bx	lr
 8001b14:	20000010 	.word	0x20000010
 8001b18:	200000ac 	.word	0x200000ac
 8001b1c:	20002a24 	.word	0x20002a24
 8001b20:	200000ae 	.word	0x200000ae
 8001b24:	200000aa 	.word	0x200000aa
 8001b28:	200000ab 	.word	0x200000ab

08001b2c <resetBitBuffer>:
	}
	bufffull = false;
	canWrite = true;
	return returnVal;
}
void resetBitBuffer(){
 8001b2c:	b480      	push	{r7}
 8001b2e:	af00      	add	r7, sp, #0
	bitReadCount = 0;
 8001b30:	4b09      	ldr	r3, [pc, #36]	; (8001b58 <resetBitBuffer+0x2c>)
 8001b32:	2200      	movs	r2, #0
 8001b34:	801a      	strh	r2, [r3, #0]
	bitSaveCount = 0;
 8001b36:	4b09      	ldr	r3, [pc, #36]	; (8001b5c <resetBitBuffer+0x30>)
 8001b38:	2200      	movs	r2, #0
 8001b3a:	801a      	strh	r2, [r3, #0]

	canRead  = false;
 8001b3c:	4b08      	ldr	r3, [pc, #32]	; (8001b60 <resetBitBuffer+0x34>)
 8001b3e:	2200      	movs	r2, #0
 8001b40:	701a      	strb	r2, [r3, #0]
	canWrite = true;
 8001b42:	4b08      	ldr	r3, [pc, #32]	; (8001b64 <resetBitBuffer+0x38>)
 8001b44:	2201      	movs	r2, #1
 8001b46:	701a      	strb	r2, [r3, #0]

	bufffull = false;
 8001b48:	4b07      	ldr	r3, [pc, #28]	; (8001b68 <resetBitBuffer+0x3c>)
 8001b4a:	2200      	movs	r2, #0
 8001b4c:	701a      	strb	r2, [r3, #0]
}
 8001b4e:	bf00      	nop
 8001b50:	46bd      	mov	sp, r7
 8001b52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b56:	4770      	bx	lr
 8001b58:	200000ae 	.word	0x200000ae
 8001b5c:	200000ac 	.word	0x200000ac
 8001b60:	200000ab 	.word	0x200000ab
 8001b64:	20000010 	.word	0x20000010
 8001b68:	200000aa 	.word	0x200000aa

08001b6c <print_AX25>:
 *      Author: monke
 */
#include "debug.h"
//Printing Packets
//****************************************************************************************************************
void print_AX25(){
 8001b6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b6e:	b08b      	sub	sp, #44	; 0x2c
 8001b70:	af00      	add	r7, sp, #0
	struct PACKET_STRUCT* local_packet = &global_packet;
 8001b72:	4b8b      	ldr	r3, [pc, #556]	; (8001da0 <print_AX25+0x234>)
 8001b74:	607b      	str	r3, [r7, #4]
	int bytecnt = local_packet->byte_cnt;
 8001b76:	687b      	ldr	r3, [r7, #4]
 8001b78:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001b7c:	330c      	adds	r3, #12
 8001b7e:	681b      	ldr	r3, [r3, #0]
 8001b80:	603b      	str	r3, [r7, #0]
	bool *curr_mem;
	sprintf(uartData, "\nPrinting AX25_PACKET... All fields printed [MSB:LSB]\n");
 8001b82:	4b88      	ldr	r3, [pc, #544]	; (8001da4 <print_AX25+0x238>)
 8001b84:	4a88      	ldr	r2, [pc, #544]	; (8001da8 <print_AX25+0x23c>)
 8001b86:	4614      	mov	r4, r2
 8001b88:	469c      	mov	ip, r3
 8001b8a:	f104 0e30 	add.w	lr, r4, #48	; 0x30
 8001b8e:	4665      	mov	r5, ip
 8001b90:	4626      	mov	r6, r4
 8001b92:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8001b94:	6028      	str	r0, [r5, #0]
 8001b96:	6069      	str	r1, [r5, #4]
 8001b98:	60aa      	str	r2, [r5, #8]
 8001b9a:	60eb      	str	r3, [r5, #12]
 8001b9c:	3410      	adds	r4, #16
 8001b9e:	f10c 0c10 	add.w	ip, ip, #16
 8001ba2:	4574      	cmp	r4, lr
 8001ba4:	d1f3      	bne.n	8001b8e <print_AX25+0x22>
 8001ba6:	4663      	mov	r3, ip
 8001ba8:	4622      	mov	r2, r4
 8001baa:	6810      	ldr	r0, [r2, #0]
 8001bac:	6018      	str	r0, [r3, #0]
 8001bae:	8891      	ldrh	r1, [r2, #4]
 8001bb0:	7992      	ldrb	r2, [r2, #6]
 8001bb2:	8099      	strh	r1, [r3, #4]
 8001bb4:	719a      	strb	r2, [r3, #6]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001bb6:	487b      	ldr	r0, [pc, #492]	; (8001da4 <print_AX25+0x238>)
 8001bb8:	f7fe fb2a 	bl	8000210 <strlen>
 8001bbc:	4603      	mov	r3, r0
 8001bbe:	b29a      	uxth	r2, r3
 8001bc0:	230a      	movs	r3, #10
 8001bc2:	4978      	ldr	r1, [pc, #480]	; (8001da4 <print_AX25+0x238>)
 8001bc4:	4879      	ldr	r0, [pc, #484]	; (8001dac <print_AX25+0x240>)
 8001bc6:	f004 f85a 	bl	8005c7e <HAL_UART_Transmit>

	//Print Address Field
	curr_mem = local_packet->AX25_PACKET;
 8001bca:	687b      	ldr	r3, [r7, #4]
 8001bcc:	627b      	str	r3, [r7, #36]	; 0x24

	//Output byte at a time
	for(int i = 0;i<address_len/8;i++){
 8001bce:	2300      	movs	r3, #0
 8001bd0:	623b      	str	r3, [r7, #32]
 8001bd2:	e042      	b.n	8001c5a <print_AX25+0xee>

		sprintf(uartData, "Address Field %d =",i+1);
 8001bd4:	6a3b      	ldr	r3, [r7, #32]
 8001bd6:	3301      	adds	r3, #1
 8001bd8:	461a      	mov	r2, r3
 8001bda:	4975      	ldr	r1, [pc, #468]	; (8001db0 <print_AX25+0x244>)
 8001bdc:	4871      	ldr	r0, [pc, #452]	; (8001da4 <print_AX25+0x238>)
 8001bde:	f004 ff8f 	bl	8006b00 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001be2:	4870      	ldr	r0, [pc, #448]	; (8001da4 <print_AX25+0x238>)
 8001be4:	f7fe fb14 	bl	8000210 <strlen>
 8001be8:	4603      	mov	r3, r0
 8001bea:	b29a      	uxth	r2, r3
 8001bec:	230a      	movs	r3, #10
 8001bee:	496d      	ldr	r1, [pc, #436]	; (8001da4 <print_AX25+0x238>)
 8001bf0:	486e      	ldr	r0, [pc, #440]	; (8001dac <print_AX25+0x240>)
 8001bf2:	f004 f844 	bl	8005c7e <HAL_UART_Transmit>

		for(int j = 0;j<8;j++){
 8001bf6:	2300      	movs	r3, #0
 8001bf8:	61fb      	str	r3, [r7, #28]
 8001bfa:	e017      	b.n	8001c2c <print_AX25+0xc0>
			sprintf(uartData, " %d ",*(curr_mem+8-j-1));
 8001bfc:	69fb      	ldr	r3, [r7, #28]
 8001bfe:	f1c3 0307 	rsb	r3, r3, #7
 8001c02:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001c04:	4413      	add	r3, r2
 8001c06:	781b      	ldrb	r3, [r3, #0]
 8001c08:	461a      	mov	r2, r3
 8001c0a:	496a      	ldr	r1, [pc, #424]	; (8001db4 <print_AX25+0x248>)
 8001c0c:	4865      	ldr	r0, [pc, #404]	; (8001da4 <print_AX25+0x238>)
 8001c0e:	f004 ff77 	bl	8006b00 <siprintf>
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001c12:	4864      	ldr	r0, [pc, #400]	; (8001da4 <print_AX25+0x238>)
 8001c14:	f7fe fafc 	bl	8000210 <strlen>
 8001c18:	4603      	mov	r3, r0
 8001c1a:	b29a      	uxth	r2, r3
 8001c1c:	230a      	movs	r3, #10
 8001c1e:	4961      	ldr	r1, [pc, #388]	; (8001da4 <print_AX25+0x238>)
 8001c20:	4862      	ldr	r0, [pc, #392]	; (8001dac <print_AX25+0x240>)
 8001c22:	f004 f82c 	bl	8005c7e <HAL_UART_Transmit>
		for(int j = 0;j<8;j++){
 8001c26:	69fb      	ldr	r3, [r7, #28]
 8001c28:	3301      	adds	r3, #1
 8001c2a:	61fb      	str	r3, [r7, #28]
 8001c2c:	69fb      	ldr	r3, [r7, #28]
 8001c2e:	2b07      	cmp	r3, #7
 8001c30:	dde4      	ble.n	8001bfc <print_AX25+0x90>
		}
		curr_mem += 8;
 8001c32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001c34:	3308      	adds	r3, #8
 8001c36:	627b      	str	r3, [r7, #36]	; 0x24
		sprintf(uartData, "\n");
 8001c38:	4a5a      	ldr	r2, [pc, #360]	; (8001da4 <print_AX25+0x238>)
 8001c3a:	4b5f      	ldr	r3, [pc, #380]	; (8001db8 <print_AX25+0x24c>)
 8001c3c:	881b      	ldrh	r3, [r3, #0]
 8001c3e:	8013      	strh	r3, [r2, #0]
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001c40:	4858      	ldr	r0, [pc, #352]	; (8001da4 <print_AX25+0x238>)
 8001c42:	f7fe fae5 	bl	8000210 <strlen>
 8001c46:	4603      	mov	r3, r0
 8001c48:	b29a      	uxth	r2, r3
 8001c4a:	230a      	movs	r3, #10
 8001c4c:	4955      	ldr	r1, [pc, #340]	; (8001da4 <print_AX25+0x238>)
 8001c4e:	4857      	ldr	r0, [pc, #348]	; (8001dac <print_AX25+0x240>)
 8001c50:	f004 f815 	bl	8005c7e <HAL_UART_Transmit>
	for(int i = 0;i<address_len/8;i++){
 8001c54:	6a3b      	ldr	r3, [r7, #32]
 8001c56:	3301      	adds	r3, #1
 8001c58:	623b      	str	r3, [r7, #32]
 8001c5a:	6a3b      	ldr	r3, [r7, #32]
 8001c5c:	2b0d      	cmp	r3, #13
 8001c5e:	ddb9      	ble.n	8001bd4 <print_AX25+0x68>
	}

	//Print Control Field
	sprintf(uartData, "Control Field   =");
 8001c60:	4a50      	ldr	r2, [pc, #320]	; (8001da4 <print_AX25+0x238>)
 8001c62:	4b56      	ldr	r3, [pc, #344]	; (8001dbc <print_AX25+0x250>)
 8001c64:	4615      	mov	r5, r2
 8001c66:	461c      	mov	r4, r3
 8001c68:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001c6a:	6028      	str	r0, [r5, #0]
 8001c6c:	6069      	str	r1, [r5, #4]
 8001c6e:	60aa      	str	r2, [r5, #8]
 8001c70:	60eb      	str	r3, [r5, #12]
 8001c72:	8823      	ldrh	r3, [r4, #0]
 8001c74:	822b      	strh	r3, [r5, #16]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001c76:	484b      	ldr	r0, [pc, #300]	; (8001da4 <print_AX25+0x238>)
 8001c78:	f7fe faca 	bl	8000210 <strlen>
 8001c7c:	4603      	mov	r3, r0
 8001c7e:	b29a      	uxth	r2, r3
 8001c80:	230a      	movs	r3, #10
 8001c82:	4948      	ldr	r1, [pc, #288]	; (8001da4 <print_AX25+0x238>)
 8001c84:	4849      	ldr	r0, [pc, #292]	; (8001dac <print_AX25+0x240>)
 8001c86:	f003 fffa 	bl	8005c7e <HAL_UART_Transmit>
	for(int i = 0;i<8;i++){
 8001c8a:	2300      	movs	r3, #0
 8001c8c:	61bb      	str	r3, [r7, #24]
 8001c8e:	e017      	b.n	8001cc0 <print_AX25+0x154>
		sprintf(uartData, " %d ",*(curr_mem+8-i-1));
 8001c90:	69bb      	ldr	r3, [r7, #24]
 8001c92:	f1c3 0307 	rsb	r3, r3, #7
 8001c96:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001c98:	4413      	add	r3, r2
 8001c9a:	781b      	ldrb	r3, [r3, #0]
 8001c9c:	461a      	mov	r2, r3
 8001c9e:	4945      	ldr	r1, [pc, #276]	; (8001db4 <print_AX25+0x248>)
 8001ca0:	4840      	ldr	r0, [pc, #256]	; (8001da4 <print_AX25+0x238>)
 8001ca2:	f004 ff2d 	bl	8006b00 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001ca6:	483f      	ldr	r0, [pc, #252]	; (8001da4 <print_AX25+0x238>)
 8001ca8:	f7fe fab2 	bl	8000210 <strlen>
 8001cac:	4603      	mov	r3, r0
 8001cae:	b29a      	uxth	r2, r3
 8001cb0:	230a      	movs	r3, #10
 8001cb2:	493c      	ldr	r1, [pc, #240]	; (8001da4 <print_AX25+0x238>)
 8001cb4:	483d      	ldr	r0, [pc, #244]	; (8001dac <print_AX25+0x240>)
 8001cb6:	f003 ffe2 	bl	8005c7e <HAL_UART_Transmit>
	for(int i = 0;i<8;i++){
 8001cba:	69bb      	ldr	r3, [r7, #24]
 8001cbc:	3301      	adds	r3, #1
 8001cbe:	61bb      	str	r3, [r7, #24]
 8001cc0:	69bb      	ldr	r3, [r7, #24]
 8001cc2:	2b07      	cmp	r3, #7
 8001cc4:	dde4      	ble.n	8001c90 <print_AX25+0x124>
	}
	sprintf(uartData, "\n");
 8001cc6:	4a37      	ldr	r2, [pc, #220]	; (8001da4 <print_AX25+0x238>)
 8001cc8:	4b3b      	ldr	r3, [pc, #236]	; (8001db8 <print_AX25+0x24c>)
 8001cca:	881b      	ldrh	r3, [r3, #0]
 8001ccc:	8013      	strh	r3, [r2, #0]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001cce:	4835      	ldr	r0, [pc, #212]	; (8001da4 <print_AX25+0x238>)
 8001cd0:	f7fe fa9e 	bl	8000210 <strlen>
 8001cd4:	4603      	mov	r3, r0
 8001cd6:	b29a      	uxth	r2, r3
 8001cd8:	230a      	movs	r3, #10
 8001cda:	4932      	ldr	r1, [pc, #200]	; (8001da4 <print_AX25+0x238>)
 8001cdc:	4833      	ldr	r0, [pc, #204]	; (8001dac <print_AX25+0x240>)
 8001cde:	f003 ffce 	bl	8005c7e <HAL_UART_Transmit>

	//PID
	curr_mem += control_len;//Subtract 8 to start at the flag start
 8001ce2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001ce4:	3308      	adds	r3, #8
 8001ce6:	627b      	str	r3, [r7, #36]	; 0x24
	sprintf(uartData, "PID Field       =");
 8001ce8:	4a2e      	ldr	r2, [pc, #184]	; (8001da4 <print_AX25+0x238>)
 8001cea:	4b35      	ldr	r3, [pc, #212]	; (8001dc0 <print_AX25+0x254>)
 8001cec:	4615      	mov	r5, r2
 8001cee:	461c      	mov	r4, r3
 8001cf0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001cf2:	6028      	str	r0, [r5, #0]
 8001cf4:	6069      	str	r1, [r5, #4]
 8001cf6:	60aa      	str	r2, [r5, #8]
 8001cf8:	60eb      	str	r3, [r5, #12]
 8001cfa:	8823      	ldrh	r3, [r4, #0]
 8001cfc:	822b      	strh	r3, [r5, #16]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001cfe:	4829      	ldr	r0, [pc, #164]	; (8001da4 <print_AX25+0x238>)
 8001d00:	f7fe fa86 	bl	8000210 <strlen>
 8001d04:	4603      	mov	r3, r0
 8001d06:	b29a      	uxth	r2, r3
 8001d08:	230a      	movs	r3, #10
 8001d0a:	4926      	ldr	r1, [pc, #152]	; (8001da4 <print_AX25+0x238>)
 8001d0c:	4827      	ldr	r0, [pc, #156]	; (8001dac <print_AX25+0x240>)
 8001d0e:	f003 ffb6 	bl	8005c7e <HAL_UART_Transmit>

	for(int i = 0;i<8;i++){
 8001d12:	2300      	movs	r3, #0
 8001d14:	617b      	str	r3, [r7, #20]
 8001d16:	e017      	b.n	8001d48 <print_AX25+0x1dc>
		sprintf(uartData, " %d ",*(curr_mem+8-i-1));
 8001d18:	697b      	ldr	r3, [r7, #20]
 8001d1a:	f1c3 0307 	rsb	r3, r3, #7
 8001d1e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001d20:	4413      	add	r3, r2
 8001d22:	781b      	ldrb	r3, [r3, #0]
 8001d24:	461a      	mov	r2, r3
 8001d26:	4923      	ldr	r1, [pc, #140]	; (8001db4 <print_AX25+0x248>)
 8001d28:	481e      	ldr	r0, [pc, #120]	; (8001da4 <print_AX25+0x238>)
 8001d2a:	f004 fee9 	bl	8006b00 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001d2e:	481d      	ldr	r0, [pc, #116]	; (8001da4 <print_AX25+0x238>)
 8001d30:	f7fe fa6e 	bl	8000210 <strlen>
 8001d34:	4603      	mov	r3, r0
 8001d36:	b29a      	uxth	r2, r3
 8001d38:	230a      	movs	r3, #10
 8001d3a:	491a      	ldr	r1, [pc, #104]	; (8001da4 <print_AX25+0x238>)
 8001d3c:	481b      	ldr	r0, [pc, #108]	; (8001dac <print_AX25+0x240>)
 8001d3e:	f003 ff9e 	bl	8005c7e <HAL_UART_Transmit>
	for(int i = 0;i<8;i++){
 8001d42:	697b      	ldr	r3, [r7, #20]
 8001d44:	3301      	adds	r3, #1
 8001d46:	617b      	str	r3, [r7, #20]
 8001d48:	697b      	ldr	r3, [r7, #20]
 8001d4a:	2b07      	cmp	r3, #7
 8001d4c:	dde4      	ble.n	8001d18 <print_AX25+0x1ac>
	}
	sprintf(uartData, "\n");
 8001d4e:	4a15      	ldr	r2, [pc, #84]	; (8001da4 <print_AX25+0x238>)
 8001d50:	4b19      	ldr	r3, [pc, #100]	; (8001db8 <print_AX25+0x24c>)
 8001d52:	881b      	ldrh	r3, [r3, #0]
 8001d54:	8013      	strh	r3, [r2, #0]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001d56:	4813      	ldr	r0, [pc, #76]	; (8001da4 <print_AX25+0x238>)
 8001d58:	f7fe fa5a 	bl	8000210 <strlen>
 8001d5c:	4603      	mov	r3, r0
 8001d5e:	b29a      	uxth	r2, r3
 8001d60:	230a      	movs	r3, #10
 8001d62:	4910      	ldr	r1, [pc, #64]	; (8001da4 <print_AX25+0x238>)
 8001d64:	4811      	ldr	r0, [pc, #68]	; (8001dac <print_AX25+0x240>)
 8001d66:	f003 ff8a 	bl	8005c7e <HAL_UART_Transmit>
	curr_mem += PID_len;
 8001d6a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d6c:	3308      	adds	r3, #8
 8001d6e:	627b      	str	r3, [r7, #36]	; 0x24

	//Print Info Field
	for(int i = 0;i<(local_packet->Info_Len/8);i++){
 8001d70:	2300      	movs	r3, #0
 8001d72:	613b      	str	r3, [r7, #16]
 8001d74:	e057      	b.n	8001e26 <print_AX25+0x2ba>
		sprintf(uartData, "Info Field %d    =",i+1)	;
 8001d76:	693b      	ldr	r3, [r7, #16]
 8001d78:	3301      	adds	r3, #1
 8001d7a:	461a      	mov	r2, r3
 8001d7c:	4911      	ldr	r1, [pc, #68]	; (8001dc4 <print_AX25+0x258>)
 8001d7e:	4809      	ldr	r0, [pc, #36]	; (8001da4 <print_AX25+0x238>)
 8001d80:	f004 febe 	bl	8006b00 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001d84:	4807      	ldr	r0, [pc, #28]	; (8001da4 <print_AX25+0x238>)
 8001d86:	f7fe fa43 	bl	8000210 <strlen>
 8001d8a:	4603      	mov	r3, r0
 8001d8c:	b29a      	uxth	r2, r3
 8001d8e:	230a      	movs	r3, #10
 8001d90:	4904      	ldr	r1, [pc, #16]	; (8001da4 <print_AX25+0x238>)
 8001d92:	4806      	ldr	r0, [pc, #24]	; (8001dac <print_AX25+0x240>)
 8001d94:	f003 ff73 	bl	8005c7e <HAL_UART_Transmit>

		for(int j = 0;j<8;j++){
 8001d98:	2300      	movs	r3, #0
 8001d9a:	60fb      	str	r3, [r7, #12]
 8001d9c:	e02c      	b.n	8001df8 <print_AX25+0x28c>
 8001d9e:	bf00      	nop
 8001da0:	200000e4 	.word	0x200000e4
 8001da4:	20001ce8 	.word	0x20001ce8
 8001da8:	08008830 	.word	0x08008830
 8001dac:	200029e4 	.word	0x200029e4
 8001db0:	08008868 	.word	0x08008868
 8001db4:	0800887c 	.word	0x0800887c
 8001db8:	08008884 	.word	0x08008884
 8001dbc:	08008888 	.word	0x08008888
 8001dc0:	0800889c 	.word	0x0800889c
 8001dc4:	080088b0 	.word	0x080088b0
			sprintf(uartData, " %d ",*(curr_mem+8-j-1));
 8001dc8:	68fb      	ldr	r3, [r7, #12]
 8001dca:	f1c3 0307 	rsb	r3, r3, #7
 8001dce:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001dd0:	4413      	add	r3, r2
 8001dd2:	781b      	ldrb	r3, [r3, #0]
 8001dd4:	461a      	mov	r2, r3
 8001dd6:	493b      	ldr	r1, [pc, #236]	; (8001ec4 <print_AX25+0x358>)
 8001dd8:	483b      	ldr	r0, [pc, #236]	; (8001ec8 <print_AX25+0x35c>)
 8001dda:	f004 fe91 	bl	8006b00 <siprintf>
			HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001dde:	483a      	ldr	r0, [pc, #232]	; (8001ec8 <print_AX25+0x35c>)
 8001de0:	f7fe fa16 	bl	8000210 <strlen>
 8001de4:	4603      	mov	r3, r0
 8001de6:	b29a      	uxth	r2, r3
 8001de8:	230a      	movs	r3, #10
 8001dea:	4937      	ldr	r1, [pc, #220]	; (8001ec8 <print_AX25+0x35c>)
 8001dec:	4837      	ldr	r0, [pc, #220]	; (8001ecc <print_AX25+0x360>)
 8001dee:	f003 ff46 	bl	8005c7e <HAL_UART_Transmit>
		for(int j = 0;j<8;j++){
 8001df2:	68fb      	ldr	r3, [r7, #12]
 8001df4:	3301      	adds	r3, #1
 8001df6:	60fb      	str	r3, [r7, #12]
 8001df8:	68fb      	ldr	r3, [r7, #12]
 8001dfa:	2b07      	cmp	r3, #7
 8001dfc:	dde4      	ble.n	8001dc8 <print_AX25+0x25c>
		}
		curr_mem += 8;
 8001dfe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e00:	3308      	adds	r3, #8
 8001e02:	627b      	str	r3, [r7, #36]	; 0x24
		sprintf(uartData, "\n");
 8001e04:	4a30      	ldr	r2, [pc, #192]	; (8001ec8 <print_AX25+0x35c>)
 8001e06:	4b32      	ldr	r3, [pc, #200]	; (8001ed0 <print_AX25+0x364>)
 8001e08:	881b      	ldrh	r3, [r3, #0]
 8001e0a:	8013      	strh	r3, [r2, #0]
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001e0c:	482e      	ldr	r0, [pc, #184]	; (8001ec8 <print_AX25+0x35c>)
 8001e0e:	f7fe f9ff 	bl	8000210 <strlen>
 8001e12:	4603      	mov	r3, r0
 8001e14:	b29a      	uxth	r2, r3
 8001e16:	230a      	movs	r3, #10
 8001e18:	492b      	ldr	r1, [pc, #172]	; (8001ec8 <print_AX25+0x35c>)
 8001e1a:	482c      	ldr	r0, [pc, #176]	; (8001ecc <print_AX25+0x360>)
 8001e1c:	f003 ff2f 	bl	8005c7e <HAL_UART_Transmit>
	for(int i = 0;i<(local_packet->Info_Len/8);i++){
 8001e20:	693b      	ldr	r3, [r7, #16]
 8001e22:	3301      	adds	r3, #1
 8001e24:	613b      	str	r3, [r7, #16]
 8001e26:	687b      	ldr	r3, [r7, #4]
 8001e28:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 8001e2c:	681b      	ldr	r3, [r3, #0]
 8001e2e:	2b00      	cmp	r3, #0
 8001e30:	da00      	bge.n	8001e34 <print_AX25+0x2c8>
 8001e32:	3307      	adds	r3, #7
 8001e34:	10db      	asrs	r3, r3, #3
 8001e36:	461a      	mov	r2, r3
 8001e38:	693b      	ldr	r3, [r7, #16]
 8001e3a:	4293      	cmp	r3, r2
 8001e3c:	db9b      	blt.n	8001d76 <print_AX25+0x20a>
	}

	sprintf(uartData, "FCS Field = ")	;
 8001e3e:	4a22      	ldr	r2, [pc, #136]	; (8001ec8 <print_AX25+0x35c>)
 8001e40:	4b24      	ldr	r3, [pc, #144]	; (8001ed4 <print_AX25+0x368>)
 8001e42:	4614      	mov	r4, r2
 8001e44:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001e46:	6020      	str	r0, [r4, #0]
 8001e48:	6061      	str	r1, [r4, #4]
 8001e4a:	60a2      	str	r2, [r4, #8]
 8001e4c:	781b      	ldrb	r3, [r3, #0]
 8001e4e:	7323      	strb	r3, [r4, #12]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001e50:	481d      	ldr	r0, [pc, #116]	; (8001ec8 <print_AX25+0x35c>)
 8001e52:	f7fe f9dd 	bl	8000210 <strlen>
 8001e56:	4603      	mov	r3, r0
 8001e58:	b29a      	uxth	r2, r3
 8001e5a:	230a      	movs	r3, #10
 8001e5c:	491a      	ldr	r1, [pc, #104]	; (8001ec8 <print_AX25+0x35c>)
 8001e5e:	481b      	ldr	r0, [pc, #108]	; (8001ecc <print_AX25+0x360>)
 8001e60:	f003 ff0d 	bl	8005c7e <HAL_UART_Transmit>
	for(int i = 0;i<FCS_len;i++){
 8001e64:	2300      	movs	r3, #0
 8001e66:	60bb      	str	r3, [r7, #8]
 8001e68:	e017      	b.n	8001e9a <print_AX25+0x32e>
		sprintf(uartData, " %d ",*(curr_mem+16-i-1));
 8001e6a:	68bb      	ldr	r3, [r7, #8]
 8001e6c:	f1c3 030f 	rsb	r3, r3, #15
 8001e70:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001e72:	4413      	add	r3, r2
 8001e74:	781b      	ldrb	r3, [r3, #0]
 8001e76:	461a      	mov	r2, r3
 8001e78:	4912      	ldr	r1, [pc, #72]	; (8001ec4 <print_AX25+0x358>)
 8001e7a:	4813      	ldr	r0, [pc, #76]	; (8001ec8 <print_AX25+0x35c>)
 8001e7c:	f004 fe40 	bl	8006b00 <siprintf>
		HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001e80:	4811      	ldr	r0, [pc, #68]	; (8001ec8 <print_AX25+0x35c>)
 8001e82:	f7fe f9c5 	bl	8000210 <strlen>
 8001e86:	4603      	mov	r3, r0
 8001e88:	b29a      	uxth	r2, r3
 8001e8a:	230a      	movs	r3, #10
 8001e8c:	490e      	ldr	r1, [pc, #56]	; (8001ec8 <print_AX25+0x35c>)
 8001e8e:	480f      	ldr	r0, [pc, #60]	; (8001ecc <print_AX25+0x360>)
 8001e90:	f003 fef5 	bl	8005c7e <HAL_UART_Transmit>
	for(int i = 0;i<FCS_len;i++){
 8001e94:	68bb      	ldr	r3, [r7, #8]
 8001e96:	3301      	adds	r3, #1
 8001e98:	60bb      	str	r3, [r7, #8]
 8001e9a:	68bb      	ldr	r3, [r7, #8]
 8001e9c:	2b0f      	cmp	r3, #15
 8001e9e:	dde4      	ble.n	8001e6a <print_AX25+0x2fe>
	}
	sprintf(uartData, "\n");
 8001ea0:	4a09      	ldr	r2, [pc, #36]	; (8001ec8 <print_AX25+0x35c>)
 8001ea2:	4b0b      	ldr	r3, [pc, #44]	; (8001ed0 <print_AX25+0x364>)
 8001ea4:	881b      	ldrh	r3, [r3, #0]
 8001ea6:	8013      	strh	r3, [r2, #0]
	HAL_UART_Transmit(&huart2, uartData, strlen(uartData), 10);
 8001ea8:	4807      	ldr	r0, [pc, #28]	; (8001ec8 <print_AX25+0x35c>)
 8001eaa:	f7fe f9b1 	bl	8000210 <strlen>
 8001eae:	4603      	mov	r3, r0
 8001eb0:	b29a      	uxth	r2, r3
 8001eb2:	230a      	movs	r3, #10
 8001eb4:	4904      	ldr	r1, [pc, #16]	; (8001ec8 <print_AX25+0x35c>)
 8001eb6:	4805      	ldr	r0, [pc, #20]	; (8001ecc <print_AX25+0x360>)
 8001eb8:	f003 fee1 	bl	8005c7e <HAL_UART_Transmit>
}
 8001ebc:	bf00      	nop
 8001ebe:	372c      	adds	r7, #44	; 0x2c
 8001ec0:	46bd      	mov	sp, r7
 8001ec2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ec4:	0800887c 	.word	0x0800887c
 8001ec8:	20001ce8 	.word	0x20001ce8
 8001ecc:	200029e4 	.word	0x200029e4
 8001ed0:	08008884 	.word	0x08008884
 8001ed4:	080088c4 	.word	0x080088c4

08001ed8 <Tim2_OC_Callback>:
int byteArray[8];
bool got_flag_start = false;
bool got_flag_end = false;

//Timer 2 Output Compare Callback
void Tim2_OC_Callback(){
 8001ed8:	b580      	push	{r7, lr}
 8001eda:	b086      	sub	sp, #24
 8001edc:	af00      	add	r7, sp, #0
	static int save_cnt;
	static int flag_cnt;
	bool isFlag = false;
 8001ede:	2300      	movs	r3, #0
 8001ee0:	75fb      	strb	r3, [r7, #23]

	freq_pin_state_last = hold_state;
 8001ee2:	4b7b      	ldr	r3, [pc, #492]	; (80020d0 <Tim2_OC_Callback+0x1f8>)
 8001ee4:	781a      	ldrb	r2, [r3, #0]
 8001ee6:	4b7b      	ldr	r3, [pc, #492]	; (80020d4 <Tim2_OC_Callback+0x1fc>)
 8001ee8:	701a      	strb	r2, [r3, #0]

	//Check if this is valid data
	if(clk_sync){
 8001eea:	4b7b      	ldr	r3, [pc, #492]	; (80020d8 <Tim2_OC_Callback+0x200>)
 8001eec:	781b      	ldrb	r3, [r3, #0]
 8001eee:	2b00      	cmp	r3, #0
 8001ef0:	f000 80ca 	beq.w	8002088 <Tim2_OC_Callback+0x1b0>
		NRZI = (freq_pin_state_curr==freq_pin_state_last) ? 1 : 0;
 8001ef4:	4b79      	ldr	r3, [pc, #484]	; (80020dc <Tim2_OC_Callback+0x204>)
 8001ef6:	781a      	ldrb	r2, [r3, #0]
 8001ef8:	4b76      	ldr	r3, [pc, #472]	; (80020d4 <Tim2_OC_Callback+0x1fc>)
 8001efa:	781b      	ldrb	r3, [r3, #0]
 8001efc:	429a      	cmp	r2, r3
 8001efe:	bf0c      	ite	eq
 8001f00:	2301      	moveq	r3, #1
 8001f02:	2300      	movne	r3, #0
 8001f04:	b2da      	uxtb	r2, r3
 8001f06:	4b76      	ldr	r3, [pc, #472]	; (80020e0 <Tim2_OC_Callback+0x208>)
 8001f08:	701a      	strb	r2, [r3, #0]

		HAL_GPIO_WritePin(GPIOA,D0_Pin,NRZI);
 8001f0a:	4b75      	ldr	r3, [pc, #468]	; (80020e0 <Tim2_OC_Callback+0x208>)
 8001f0c:	781b      	ldrb	r3, [r3, #0]
 8001f0e:	461a      	mov	r2, r3
 8001f10:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001f14:	4873      	ldr	r0, [pc, #460]	; (80020e4 <Tim2_OC_Callback+0x20c>)
 8001f16:	f001 fe8f 	bl	8003c38 <HAL_GPIO_WritePin>

		//Shift byte array for next comparison
//		memmove(&byteArray[1],&byteArray[0],7*sizeof(int));
		for(int i = 7;i>0;i--){
 8001f1a:	2307      	movs	r3, #7
 8001f1c:	613b      	str	r3, [r7, #16]
 8001f1e:	e00b      	b.n	8001f38 <Tim2_OC_Callback+0x60>
			byteArray[i] = byteArray[i-1];
 8001f20:	693b      	ldr	r3, [r7, #16]
 8001f22:	3b01      	subs	r3, #1
 8001f24:	4a70      	ldr	r2, [pc, #448]	; (80020e8 <Tim2_OC_Callback+0x210>)
 8001f26:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8001f2a:	496f      	ldr	r1, [pc, #444]	; (80020e8 <Tim2_OC_Callback+0x210>)
 8001f2c:	693b      	ldr	r3, [r7, #16]
 8001f2e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		for(int i = 7;i>0;i--){
 8001f32:	693b      	ldr	r3, [r7, #16]
 8001f34:	3b01      	subs	r3, #1
 8001f36:	613b      	str	r3, [r7, #16]
 8001f38:	693b      	ldr	r3, [r7, #16]
 8001f3a:	2b00      	cmp	r3, #0
 8001f3c:	dcf0      	bgt.n	8001f20 <Tim2_OC_Callback+0x48>
		}

		byteArray[0] = NRZI;
 8001f3e:	4b68      	ldr	r3, [pc, #416]	; (80020e0 <Tim2_OC_Callback+0x208>)
 8001f40:	781b      	ldrb	r3, [r3, #0]
 8001f42:	461a      	mov	r2, r3
 8001f44:	4b68      	ldr	r3, [pc, #416]	; (80020e8 <Tim2_OC_Callback+0x210>)
 8001f46:	601a      	str	r2, [r3, #0]
		//11111100
		//01111110


		//Check if this is the flag
		for (int i = 0; i < 8; i++) {
 8001f48:	2300      	movs	r3, #0
 8001f4a:	60fb      	str	r3, [r7, #12]
 8001f4c:	e014      	b.n	8001f78 <Tim2_OC_Callback+0xa0>
			if(byteArray[i] != AX25TBYTE[i]){
 8001f4e:	4a66      	ldr	r2, [pc, #408]	; (80020e8 <Tim2_OC_Callback+0x210>)
 8001f50:	68fb      	ldr	r3, [r7, #12]
 8001f52:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001f56:	4965      	ldr	r1, [pc, #404]	; (80020ec <Tim2_OC_Callback+0x214>)
 8001f58:	68fa      	ldr	r2, [r7, #12]
 8001f5a:	440a      	add	r2, r1
 8001f5c:	7812      	ldrb	r2, [r2, #0]
 8001f5e:	4293      	cmp	r3, r2
 8001f60:	d002      	beq.n	8001f68 <Tim2_OC_Callback+0x90>
				isFlag = false;
 8001f62:	2300      	movs	r3, #0
 8001f64:	75fb      	strb	r3, [r7, #23]
				break;
 8001f66:	e00a      	b.n	8001f7e <Tim2_OC_Callback+0xa6>
			}
			//Got to end of byte array
			if(i==7){
 8001f68:	68fb      	ldr	r3, [r7, #12]
 8001f6a:	2b07      	cmp	r3, #7
 8001f6c:	d101      	bne.n	8001f72 <Tim2_OC_Callback+0x9a>
				isFlag = true;
 8001f6e:	2301      	movs	r3, #1
 8001f70:	75fb      	strb	r3, [r7, #23]
		for (int i = 0; i < 8; i++) {
 8001f72:	68fb      	ldr	r3, [r7, #12]
 8001f74:	3301      	adds	r3, #1
 8001f76:	60fb      	str	r3, [r7, #12]
 8001f78:	68fb      	ldr	r3, [r7, #12]
 8001f7a:	2b07      	cmp	r3, #7
 8001f7c:	dde7      	ble.n	8001f4e <Tim2_OC_Callback+0x76>
			}
		}
		//If this is not a flag, copy the values into the buffer pointer
		if(isFlag){
 8001f7e:	7dfb      	ldrb	r3, [r7, #23]
 8001f80:	2b00      	cmp	r3, #0
 8001f82:	d023      	beq.n	8001fcc <Tim2_OC_Callback+0xf4>
			flag_cnt++;
 8001f84:	4b5a      	ldr	r3, [pc, #360]	; (80020f0 <Tim2_OC_Callback+0x218>)
 8001f86:	681b      	ldr	r3, [r3, #0]
 8001f88:	3301      	adds	r3, #1
 8001f8a:	4a59      	ldr	r2, [pc, #356]	; (80020f0 <Tim2_OC_Callback+0x218>)
 8001f8c:	6013      	str	r3, [r2, #0]

			//If we have a start flag, this is an end flag
			if(got_flag_start){
 8001f8e:	4b59      	ldr	r3, [pc, #356]	; (80020f4 <Tim2_OC_Callback+0x21c>)
 8001f90:	781b      	ldrb	r3, [r3, #0]
 8001f92:	2b00      	cmp	r3, #0
 8001f94:	d006      	beq.n	8001fa4 <Tim2_OC_Callback+0xcc>
				got_flag_start = false;
 8001f96:	4b57      	ldr	r3, [pc, #348]	; (80020f4 <Tim2_OC_Callback+0x21c>)
 8001f98:	2200      	movs	r2, #0
 8001f9a:	701a      	strb	r2, [r3, #0]
				got_flag_end = true;
 8001f9c:	4b56      	ldr	r3, [pc, #344]	; (80020f8 <Tim2_OC_Callback+0x220>)
 8001f9e:	2201      	movs	r2, #1
 8001fa0:	701a      	strb	r2, [r3, #0]
 8001fa2:	e010      	b.n	8001fc6 <Tim2_OC_Callback+0xee>
			}

			//Not sure how many appending flags????????
			else if(flag_cnt>=FLAG_END_COUNT){
 8001fa4:	4b52      	ldr	r3, [pc, #328]	; (80020f0 <Tim2_OC_Callback+0x218>)
 8001fa6:	681b      	ldr	r3, [r3, #0]
 8001fa8:	2b01      	cmp	r3, #1
 8001faa:	dd0c      	ble.n	8001fc6 <Tim2_OC_Callback+0xee>
				//If no start flag has occurred
				if(!got_flag_start){
 8001fac:	4b51      	ldr	r3, [pc, #324]	; (80020f4 <Tim2_OC_Callback+0x21c>)
 8001fae:	781b      	ldrb	r3, [r3, #0]
 8001fb0:	f083 0301 	eor.w	r3, r3, #1
 8001fb4:	b2db      	uxtb	r3, r3
 8001fb6:	2b00      	cmp	r3, #0
 8001fb8:	d002      	beq.n	8001fc0 <Tim2_OC_Callback+0xe8>
					got_flag_start = true;
 8001fba:	4b4e      	ldr	r3, [pc, #312]	; (80020f4 <Tim2_OC_Callback+0x21c>)
 8001fbc:	2201      	movs	r2, #1
 8001fbe:	701a      	strb	r2, [r3, #0]
				}

				//Reset flag count
				flag_cnt = 0;
 8001fc0:	4b4b      	ldr	r3, [pc, #300]	; (80020f0 <Tim2_OC_Callback+0x218>)
 8001fc2:	2200      	movs	r2, #0
 8001fc4:	601a      	str	r2, [r3, #0]
			}

			//Reset flag var
			isFlag = false;
 8001fc6:	2300      	movs	r3, #0
 8001fc8:	75fb      	strb	r3, [r7, #23]
 8001fca:	e011      	b.n	8001ff0 <Tim2_OC_Callback+0x118>
		}

		else if(got_flag_start){
 8001fcc:	4b49      	ldr	r3, [pc, #292]	; (80020f4 <Tim2_OC_Callback+0x21c>)
 8001fce:	781b      	ldrb	r3, [r3, #0]
 8001fd0:	2b00      	cmp	r3, #0
 8001fd2:	d00d      	beq.n	8001ff0 <Tim2_OC_Callback+0x118>
			HAL_GPIO_TogglePin(GPIOB,D2_Pin);
 8001fd4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001fd8:	4848      	ldr	r0, [pc, #288]	; (80020fc <Tim2_OC_Callback+0x224>)
 8001fda:	f001 fe46 	bl	8003c6a <HAL_GPIO_TogglePin>
			//Load the processed bit into the buffer
			save_cnt = loadBitBuffer(NRZI)+1;
 8001fde:	4b40      	ldr	r3, [pc, #256]	; (80020e0 <Tim2_OC_Callback+0x208>)
 8001fe0:	781b      	ldrb	r3, [r3, #0]
 8001fe2:	4618      	mov	r0, r3
 8001fe4:	f7ff fd60 	bl	8001aa8 <loadBitBuffer>
 8001fe8:	4603      	mov	r3, r0
 8001fea:	3301      	adds	r3, #1
 8001fec:	4a44      	ldr	r2, [pc, #272]	; (8002100 <Tim2_OC_Callback+0x228>)
 8001fee:	6013      	str	r3, [r2, #0]
		}

		//Found ending flag, now need to process bit buffer
		if(got_flag_end){
 8001ff0:	4b41      	ldr	r3, [pc, #260]	; (80020f8 <Tim2_OC_Callback+0x220>)
 8001ff2:	781b      	ldrb	r3, [r3, #0]
 8001ff4:	2b00      	cmp	r3, #0
 8001ff6:	d039      	beq.n	800206c <Tim2_OC_Callback+0x194>
			got_flag_end = false;
 8001ff8:	4b3f      	ldr	r3, [pc, #252]	; (80020f8 <Tim2_OC_Callback+0x220>)
 8001ffa:	2200      	movs	r2, #0
 8001ffc:	701a      	strb	r2, [r3, #0]
			HAL_GPIO_TogglePin(GPIOB,D3_Pin);
 8001ffe:	2110      	movs	r1, #16
 8002000:	483e      	ldr	r0, [pc, #248]	; (80020fc <Tim2_OC_Callback+0x224>)
 8002002:	f001 fe32 	bl	8003c6a <HAL_GPIO_TogglePin>

			//Disable Interrupts for data processing
			HAL_TIM_OC_Stop_IT(&htim2, TIM_CHANNEL_1);
 8002006:	2100      	movs	r1, #0
 8002008:	483e      	ldr	r0, [pc, #248]	; (8002104 <Tim2_OC_Callback+0x22c>)
 800200a:	f002 fc65 	bl	80048d8 <HAL_TIM_OC_Stop_IT>
			HAL_TIM_IC_Stop_IT(&htim5, TIM_CHANNEL_1);
 800200e:	2100      	movs	r1, #0
 8002010:	483d      	ldr	r0, [pc, #244]	; (8002108 <Tim2_OC_Callback+0x230>)
 8002012:	f002 fd99 	bl	8004b48 <HAL_TIM_IC_Stop_IT>

			//Buffer will be filled with ending flags, dont want this in ax.25 buffer
			save_cnt -= FLAG_SIZE;
 8002016:	4b3a      	ldr	r3, [pc, #232]	; (8002100 <Tim2_OC_Callback+0x228>)
 8002018:	681b      	ldr	r3, [r3, #0]
 800201a:	3b08      	subs	r3, #8
 800201c:	4a38      	ldr	r2, [pc, #224]	; (8002100 <Tim2_OC_Callback+0x228>)
 800201e:	6013      	str	r3, [r2, #0]
			rxBit_count = save_cnt;
 8002020:	4b37      	ldr	r3, [pc, #220]	; (8002100 <Tim2_OC_Callback+0x228>)
 8002022:	681b      	ldr	r3, [r3, #0]
 8002024:	4a39      	ldr	r2, [pc, #228]	; (800210c <Tim2_OC_Callback+0x234>)
 8002026:	6013      	str	r3, [r2, #0]
			global_packet.byte_cnt = save_cnt/8;
 8002028:	4b35      	ldr	r3, [pc, #212]	; (8002100 <Tim2_OC_Callback+0x228>)
 800202a:	681b      	ldr	r3, [r3, #0]
 800202c:	2b00      	cmp	r3, #0
 800202e:	da00      	bge.n	8002032 <Tim2_OC_Callback+0x15a>
 8002030:	3307      	adds	r3, #7
 8002032:	10db      	asrs	r3, r3, #3
 8002034:	461a      	mov	r2, r3
 8002036:	4b36      	ldr	r3, [pc, #216]	; (8002110 <Tim2_OC_Callback+0x238>)
 8002038:	f503 5398 	add.w	r3, r3, #4864	; 0x1300
 800203c:	330c      	adds	r3, #12
 800203e:	601a      	str	r2, [r3, #0]
			memcpy(global_packet.AX25_PACKET,bitBuffer,save_cnt);
 8002040:	4b2f      	ldr	r3, [pc, #188]	; (8002100 <Tim2_OC_Callback+0x228>)
 8002042:	681b      	ldr	r3, [r3, #0]
 8002044:	461a      	mov	r2, r3
 8002046:	4933      	ldr	r1, [pc, #204]	; (8002114 <Tim2_OC_Callback+0x23c>)
 8002048:	4831      	ldr	r0, [pc, #196]	; (8002110 <Tim2_OC_Callback+0x238>)
 800204a:	f004 fd2d 	bl	8006aa8 <memcpy>

//			compareBoolBuffers(bitBuffer,global_packet.AX25_PACKET,rxBit_count);

			remove_bit_stuffing();
 800204e:	f7ff f8e7 	bl	8001220 <remove_bit_stuffing>

			//Receive data
			receiving_AX25();
 8002052:	f7ff f89b 	bl	800118c <receiving_AX25>

			save_cnt = 0;
 8002056:	4b2a      	ldr	r3, [pc, #168]	; (8002100 <Tim2_OC_Callback+0x228>)
 8002058:	2200      	movs	r2, #0
 800205a:	601a      	str	r2, [r3, #0]

			//Enable Interrupts since data processing is complete
			HAL_TIM_OC_Start_IT(&htim2, TIM_CHANNEL_1);
 800205c:	2100      	movs	r1, #0
 800205e:	4829      	ldr	r0, [pc, #164]	; (8002104 <Tim2_OC_Callback+0x22c>)
 8002060:	f002 fbb6 	bl	80047d0 <HAL_TIM_OC_Start_IT>
			HAL_TIM_IC_Start_IT(&htim5, TIM_CHANNEL_1);
 8002064:	2100      	movs	r1, #0
 8002066:	4828      	ldr	r0, [pc, #160]	; (8002108 <Tim2_OC_Callback+0x230>)
 8002068:	f002 fd06 	bl	8004a78 <HAL_TIM_IC_Start_IT>
		}

		//Prepare OC for next sample
		uint32_t this_capture = __HAL_TIM_GET_COMPARE(&htim2, TIM_CHANNEL_1);
 800206c:	4b25      	ldr	r3, [pc, #148]	; (8002104 <Tim2_OC_Callback+0x22c>)
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002072:	60bb      	str	r3, [r7, #8]
		uint32_t next_sampl = this_capture + bit_sample_period;
 8002074:	68bb      	ldr	r3, [r7, #8]
 8002076:	f503 4302 	add.w	r3, r3, #33280	; 0x8200
 800207a:	3335      	adds	r3, #53	; 0x35
 800207c:	607b      	str	r3, [r7, #4]
		__HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1,next_sampl); // if we have not received a transition to the input capture module, we want to refresh the output compare module with the last known bit period
 800207e:	4b21      	ldr	r3, [pc, #132]	; (8002104 <Tim2_OC_Callback+0x22c>)
 8002080:	681b      	ldr	r3, [r3, #0]
 8002082:	687a      	ldr	r2, [r7, #4]
 8002084:	635a      	str	r2, [r3, #52]	; 0x34
 8002086:	e00d      	b.n	80020a4 <Tim2_OC_Callback+0x1cc>
	}

	//Clock not syncd
	else
	{
		HAL_GPIO_TogglePin(GPIOA,D1_Pin);
 8002088:	f44f 7180 	mov.w	r1, #256	; 0x100
 800208c:	4815      	ldr	r0, [pc, #84]	; (80020e4 <Tim2_OC_Callback+0x20c>)
 800208e:	f001 fdec 	bl	8003c6a <HAL_GPIO_TogglePin>
		got_flag_start = false;
 8002092:	4b18      	ldr	r3, [pc, #96]	; (80020f4 <Tim2_OC_Callback+0x21c>)
 8002094:	2200      	movs	r2, #0
 8002096:	701a      	strb	r2, [r3, #0]
		got_flag_end = false;
 8002098:	4b17      	ldr	r3, [pc, #92]	; (80020f8 <Tim2_OC_Callback+0x220>)
 800209a:	2200      	movs	r2, #0
 800209c:	701a      	strb	r2, [r3, #0]
		flag_cnt = 0;
 800209e:	4b14      	ldr	r3, [pc, #80]	; (80020f0 <Tim2_OC_Callback+0x218>)
 80020a0:	2200      	movs	r2, #0
 80020a2:	601a      	str	r2, [r3, #0]
	}

	//Inc number of bits since last clock sync
	captured_bits_count++;
 80020a4:	4b1c      	ldr	r3, [pc, #112]	; (8002118 <Tim2_OC_Callback+0x240>)
 80020a6:	781b      	ldrb	r3, [r3, #0]
 80020a8:	3301      	adds	r3, #1
 80020aa:	b2da      	uxtb	r2, r3
 80020ac:	4b1a      	ldr	r3, [pc, #104]	; (8002118 <Tim2_OC_Callback+0x240>)
 80020ae:	701a      	strb	r2, [r3, #0]
	if(captured_bits_count >= samp_per_bit * no_clk_max_cnt){
 80020b0:	4b19      	ldr	r3, [pc, #100]	; (8002118 <Tim2_OC_Callback+0x240>)
 80020b2:	781b      	ldrb	r3, [r3, #0]
 80020b4:	2b3f      	cmp	r3, #63	; 0x3f
 80020b6:	d902      	bls.n	80020be <Tim2_OC_Callback+0x1e6>
		clk_sync = false;	//Clock is no longer sync
 80020b8:	4b07      	ldr	r3, [pc, #28]	; (80020d8 <Tim2_OC_Callback+0x200>)
 80020ba:	2200      	movs	r2, #0
 80020bc:	701a      	strb	r2, [r3, #0]
	}
	hold_state = freq_pin_state_curr;
 80020be:	4b07      	ldr	r3, [pc, #28]	; (80020dc <Tim2_OC_Callback+0x204>)
 80020c0:	781a      	ldrb	r2, [r3, #0]
 80020c2:	4b03      	ldr	r3, [pc, #12]	; (80020d0 <Tim2_OC_Callback+0x1f8>)
 80020c4:	701a      	strb	r2, [r3, #0]

	return;
 80020c6:	bf00      	nop
}
 80020c8:	3718      	adds	r7, #24
 80020ca:	46bd      	mov	sp, r7
 80020cc:	bd80      	pop	{r7, pc}
 80020ce:	bf00      	nop
 80020d0:	20003484 	.word	0x20003484
 80020d4:	200000c3 	.word	0x200000c3
 80020d8:	200000b1 	.word	0x200000b1
 80020dc:	200000c2 	.word	0x200000c2
 80020e0:	2000348c 	.word	0x2000348c
 80020e4:	40020000 	.word	0x40020000
 80020e8:	20003490 	.word	0x20003490
 80020ec:	20000008 	.word	0x20000008
 80020f0:	200000c8 	.word	0x200000c8
 80020f4:	200000c4 	.word	0x200000c4
 80020f8:	200000c5 	.word	0x200000c5
 80020fc:	40020400 	.word	0x40020400
 8002100:	200000cc 	.word	0x200000cc
 8002104:	200029a4 	.word	0x200029a4
 8002108:	200028ac 	.word	0x200028ac
 800210c:	200000a4 	.word	0x200000a4
 8002110:	200000e4 	.word	0x200000e4
 8002114:	20002a24 	.word	0x20002a24
 8002118:	200000b0 	.word	0x200000b0

0800211c <Tim3_IT_Callback>:
void Tim3_IT_Callback() {
 800211c:	b480      	push	{r7}
 800211e:	af00      	add	r7, sp, #0
	if (mode) {
 8002120:	4b05      	ldr	r3, [pc, #20]	; (8002138 <Tim3_IT_Callback+0x1c>)
 8002122:	781b      	ldrb	r3, [r3, #0]
 8002124:	2b00      	cmp	r3, #0
 8002126:	d002      	beq.n	800212e <Tim3_IT_Callback+0x12>
		midbit = false;
 8002128:	4b04      	ldr	r3, [pc, #16]	; (800213c <Tim3_IT_Callback+0x20>)
 800212a:	2200      	movs	r2, #0
 800212c:	701a      	strb	r2, [r3, #0]
	}
	//Timer 3 does nothing in RX
	else {}
}
 800212e:	bf00      	nop
 8002130:	46bd      	mov	sp, r7
 8002132:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002136:	4770      	bx	lr
 8002138:	2000298c 	.word	0x2000298c
 800213c:	200000a8 	.word	0x200000a8

08002140 <Tim5_IC_Callback>:
//Timer 5 Input Capture Callback
void Tim5_IC_Callback(){
 8002140:	b580      	push	{r7, lr}
 8002142:	b082      	sub	sp, #8
 8002144:	af00      	add	r7, sp, #0
	uint32_t this_capture = 0;		// simply stores either the rising or falling capture, based on which state we are in (avoids duplicate code)
 8002146:	2300      	movs	r3, #0
 8002148:	607b      	str	r3, [r7, #4]

	//Grap pin state for OC timer
	freq_pin_state_curr = signal_edge;
 800214a:	4b3e      	ldr	r3, [pc, #248]	; (8002244 <Tim5_IC_Callback+0x104>)
 800214c:	781a      	ldrb	r2, [r3, #0]
 800214e:	4b3e      	ldr	r3, [pc, #248]	; (8002248 <Tim5_IC_Callback+0x108>)
 8002150:	701a      	strb	r2, [r3, #0]

	//Rising Edge
	if (signal_edge)
 8002152:	4b3c      	ldr	r3, [pc, #240]	; (8002244 <Tim5_IC_Callback+0x104>)
 8002154:	781b      	ldrb	r3, [r3, #0]
 8002156:	2b00      	cmp	r3, #0
 8002158:	d01f      	beq.n	800219a <Tim5_IC_Callback+0x5a>
	{
		rising_capture = HAL_TIM_ReadCapturedValue(&htim5, TIM_CHANNEL_1); //Time-stamp interrupt
 800215a:	2100      	movs	r1, #0
 800215c:	483b      	ldr	r0, [pc, #236]	; (800224c <Tim5_IC_Callback+0x10c>)
 800215e:	f003 f81f 	bl	80051a0 <HAL_TIM_ReadCapturedValue>
 8002162:	4602      	mov	r2, r0
 8002164:	4b3a      	ldr	r3, [pc, #232]	; (8002250 <Tim5_IC_Callback+0x110>)
 8002166:	601a      	str	r2, [r3, #0]
		signal_edge = FALLING_EDGE;		// look for falling edge on next capture
 8002168:	4b36      	ldr	r3, [pc, #216]	; (8002244 <Tim5_IC_Callback+0x104>)
 800216a:	2200      	movs	r2, #0
 800216c:	701a      	strb	r2, [r3, #0]
		rise_captured = true;
 800216e:	4b39      	ldr	r3, [pc, #228]	; (8002254 <Tim5_IC_Callback+0x114>)
 8002170:	2201      	movs	r2, #1
 8002172:	701a      	strb	r2, [r3, #0]

		if (rise_captured && fall_captured)
 8002174:	4b37      	ldr	r3, [pc, #220]	; (8002254 <Tim5_IC_Callback+0x114>)
 8002176:	781b      	ldrb	r3, [r3, #0]
 8002178:	2b00      	cmp	r3, #0
 800217a:	d02d      	beq.n	80021d8 <Tim5_IC_Callback+0x98>
 800217c:	4b36      	ldr	r3, [pc, #216]	; (8002258 <Tim5_IC_Callback+0x118>)
 800217e:	781b      	ldrb	r3, [r3, #0]
 8002180:	2b00      	cmp	r3, #0
 8002182:	d029      	beq.n	80021d8 <Tim5_IC_Callback+0x98>
		{
			capture_difference = rising_capture - falling_capture;		// calculate difference
 8002184:	4b32      	ldr	r3, [pc, #200]	; (8002250 <Tim5_IC_Callback+0x110>)
 8002186:	681a      	ldr	r2, [r3, #0]
 8002188:	4b34      	ldr	r3, [pc, #208]	; (800225c <Tim5_IC_Callback+0x11c>)
 800218a:	681b      	ldr	r3, [r3, #0]
 800218c:	1ad3      	subs	r3, r2, r3
 800218e:	4a34      	ldr	r2, [pc, #208]	; (8002260 <Tim5_IC_Callback+0x120>)
 8002190:	6013      	str	r3, [r2, #0]
			this_capture = rising_capture;		// set current sample to rising edge
 8002192:	4b2f      	ldr	r3, [pc, #188]	; (8002250 <Tim5_IC_Callback+0x110>)
 8002194:	681b      	ldr	r3, [r3, #0]
 8002196:	607b      	str	r3, [r7, #4]
 8002198:	e01e      	b.n	80021d8 <Tim5_IC_Callback+0x98>
	}

	//Falling edge
	else
	{
		falling_capture = HAL_TIM_ReadCapturedValue(&htim5, TIM_CHANNEL_1);		//Time-stamp interrupt
 800219a:	2100      	movs	r1, #0
 800219c:	482b      	ldr	r0, [pc, #172]	; (800224c <Tim5_IC_Callback+0x10c>)
 800219e:	f002 ffff 	bl	80051a0 <HAL_TIM_ReadCapturedValue>
 80021a2:	4602      	mov	r2, r0
 80021a4:	4b2d      	ldr	r3, [pc, #180]	; (800225c <Tim5_IC_Callback+0x11c>)
 80021a6:	601a      	str	r2, [r3, #0]
		fall_captured = true;
 80021a8:	4b2b      	ldr	r3, [pc, #172]	; (8002258 <Tim5_IC_Callback+0x118>)
 80021aa:	2201      	movs	r2, #1
 80021ac:	701a      	strb	r2, [r3, #0]
		signal_edge = RISING_EDGE;		// look for rising edge on next capture
 80021ae:	4b25      	ldr	r3, [pc, #148]	; (8002244 <Tim5_IC_Callback+0x104>)
 80021b0:	2201      	movs	r2, #1
 80021b2:	701a      	strb	r2, [r3, #0]

		if (rise_captured && fall_captured)
 80021b4:	4b27      	ldr	r3, [pc, #156]	; (8002254 <Tim5_IC_Callback+0x114>)
 80021b6:	781b      	ldrb	r3, [r3, #0]
 80021b8:	2b00      	cmp	r3, #0
 80021ba:	d00d      	beq.n	80021d8 <Tim5_IC_Callback+0x98>
 80021bc:	4b26      	ldr	r3, [pc, #152]	; (8002258 <Tim5_IC_Callback+0x118>)
 80021be:	781b      	ldrb	r3, [r3, #0]
 80021c0:	2b00      	cmp	r3, #0
 80021c2:	d009      	beq.n	80021d8 <Tim5_IC_Callback+0x98>
		{
			capture_difference = falling_capture - rising_capture;		// calculate difference
 80021c4:	4b25      	ldr	r3, [pc, #148]	; (800225c <Tim5_IC_Callback+0x11c>)
 80021c6:	681a      	ldr	r2, [r3, #0]
 80021c8:	4b21      	ldr	r3, [pc, #132]	; (8002250 <Tim5_IC_Callback+0x110>)
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	1ad3      	subs	r3, r2, r3
 80021ce:	4a24      	ldr	r2, [pc, #144]	; (8002260 <Tim5_IC_Callback+0x120>)
 80021d0:	6013      	str	r3, [r2, #0]
			this_capture = falling_capture;
 80021d2:	4b22      	ldr	r3, [pc, #136]	; (800225c <Tim5_IC_Callback+0x11c>)
 80021d4:	681b      	ldr	r3, [r3, #0]
 80021d6:	607b      	str	r3, [r7, #4]
		}
	}

	//Have now captured the transition period
	//Can use this to align sampling clock
	if (rise_captured && fall_captured)
 80021d8:	4b1e      	ldr	r3, [pc, #120]	; (8002254 <Tim5_IC_Callback+0x114>)
 80021da:	781b      	ldrb	r3, [r3, #0]
 80021dc:	2b00      	cmp	r3, #0
 80021de:	d02d      	beq.n	800223c <Tim5_IC_Callback+0xfc>
 80021e0:	4b1d      	ldr	r3, [pc, #116]	; (8002258 <Tim5_IC_Callback+0x118>)
 80021e2:	781b      	ldrb	r3, [r3, #0]
 80021e4:	2b00      	cmp	r3, #0
 80021e6:	d029      	beq.n	800223c <Tim5_IC_Callback+0xfc>
	{
		//Check if the transition was a valid transition period to use
		if(SYMBOL_PERIOD-SYMBOL_MARGIN < capture_difference && capture_difference < SYMBOL_PERIOD+SYMBOL_MARGIN){
 80021e8:	4b1d      	ldr	r3, [pc, #116]	; (8002260 <Tim5_IC_Callback+0x120>)
 80021ea:	681b      	ldr	r3, [r3, #0]
 80021ec:	f247 5230 	movw	r2, #30000	; 0x7530
 80021f0:	4293      	cmp	r3, r2
 80021f2:	d923      	bls.n	800223c <Tim5_IC_Callback+0xfc>
 80021f4:	4b1a      	ldr	r3, [pc, #104]	; (8002260 <Tim5_IC_Callback+0x120>)
 80021f6:	681b      	ldr	r3, [r3, #0]
 80021f8:	f648 7239 	movw	r2, #36665	; 0x8f39
 80021fc:	4293      	cmp	r3, r2
 80021fe:	d81d      	bhi.n	800223c <Tim5_IC_Callback+0xfc>

			//Predict clock
			uint32_t next_sampl;

			//If clk was not sync, start sample one period later
			if(!clk_sync){
 8002200:	4b18      	ldr	r3, [pc, #96]	; (8002264 <Tim5_IC_Callback+0x124>)
 8002202:	781b      	ldrb	r3, [r3, #0]
 8002204:	f083 0301 	eor.w	r3, r3, #1
 8002208:	b2db      	uxtb	r3, r3
 800220a:	2b00      	cmp	r3, #0
 800220c:	d007      	beq.n	800221e <Tim5_IC_Callback+0xde>
				resetBitBuffer();
 800220e:	f7ff fc8d 	bl	8001b2c <resetBitBuffer>
				next_sampl = this_capture + SYMBOL_PERIOD;
 8002212:	687b      	ldr	r3, [r7, #4]
 8002214:	f503 4302 	add.w	r3, r3, #33280	; 0x8200
 8002218:	3335      	adds	r3, #53	; 0x35
 800221a:	603b      	str	r3, [r7, #0]
 800221c:	e004      	b.n	8002228 <Tim5_IC_Callback+0xe8>
			}
			//If clk was sync, sample at normal interval
			else {
				next_sampl = this_capture + bit_sample_period;
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	f503 4302 	add.w	r3, r3, #33280	; 0x8200
 8002224:	3335      	adds	r3, #53	; 0x35
 8002226:	603b      	str	r3, [r7, #0]
			}
			//Prepare OC timer int
			__HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1, next_sampl);
 8002228:	4b0f      	ldr	r3, [pc, #60]	; (8002268 <Tim5_IC_Callback+0x128>)
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	683a      	ldr	r2, [r7, #0]
 800222e:	635a      	str	r2, [r3, #52]	; 0x34
			//Reset roll-over value
			captured_bits_count = 0;
 8002230:	4b0e      	ldr	r3, [pc, #56]	; (800226c <Tim5_IC_Callback+0x12c>)
 8002232:	2200      	movs	r2, #0
 8002234:	701a      	strb	r2, [r3, #0]

			//Have now synced with clock
			clk_sync = true;
 8002236:	4b0b      	ldr	r3, [pc, #44]	; (8002264 <Tim5_IC_Callback+0x124>)
 8002238:	2201      	movs	r2, #1
 800223a:	701a      	strb	r2, [r3, #0]
		}
	}
}
 800223c:	bf00      	nop
 800223e:	3708      	adds	r7, #8
 8002240:	46bd      	mov	sp, r7
 8002242:	bd80      	pop	{r7, pc}
 8002244:	20000011 	.word	0x20000011
 8002248:	200000c2 	.word	0x200000c2
 800224c:	200028ac 	.word	0x200028ac
 8002250:	200000b4 	.word	0x200000b4
 8002254:	200000c0 	.word	0x200000c0
 8002258:	200000c1 	.word	0x200000c1
 800225c:	200000b8 	.word	0x200000b8
 8002260:	200000bc 	.word	0x200000bc
 8002264:	200000b1 	.word	0x200000b1
 8002268:	200029a4 	.word	0x200029a4
 800226c:	200000b0 	.word	0x200000b0

08002270 <UART2_Exception_Callback>:
	UART_packet.flags = 0;
	UART_packet.got_packet = false;
	UART_packet.rx_cnt = 0;
	UART_packet.received_byte_cnt = 0;
}
void UART2_Exception_Callback(){
 8002270:	b580      	push	{r7, lr}
 8002272:	af00      	add	r7, sp, #0
	HAL_UART_Receive_IT(&huart2, &(UART_packet.input), UART_RX_IT_CNT);//Reset
 8002274:	2201      	movs	r2, #1
 8002276:	491d      	ldr	r1, [pc, #116]	; (80022ec <UART2_Exception_Callback+0x7c>)
 8002278:	481d      	ldr	r0, [pc, #116]	; (80022f0 <UART2_Exception_Callback+0x80>)
 800227a:	f003 fd99 	bl	8005db0 <HAL_UART_Receive_IT>
	UART_packet.got_packet = false;
 800227e:	4b1d      	ldr	r3, [pc, #116]	; (80022f4 <UART2_Exception_Callback+0x84>)
 8002280:	2200      	movs	r2, #0
 8002282:	735a      	strb	r2, [r3, #13]

	  if(UART_packet.input==0xc0){
 8002284:	4b1b      	ldr	r3, [pc, #108]	; (80022f4 <UART2_Exception_Callback+0x84>)
 8002286:	7b1b      	ldrb	r3, [r3, #12]
 8002288:	2bc0      	cmp	r3, #192	; 0xc0
 800228a:	d104      	bne.n	8002296 <UART2_Exception_Callback+0x26>
		  UART_packet.flags++;
 800228c:	4b19      	ldr	r3, [pc, #100]	; (80022f4 <UART2_Exception_Callback+0x84>)
 800228e:	689b      	ldr	r3, [r3, #8]
 8002290:	3301      	adds	r3, #1
 8002292:	4a18      	ldr	r2, [pc, #96]	; (80022f4 <UART2_Exception_Callback+0x84>)
 8002294:	6093      	str	r3, [r2, #8]
	  }

	  *(UART_packet.HEX_KISS_PACKET+UART_packet.rx_cnt) = UART_packet.input;
 8002296:	4b17      	ldr	r3, [pc, #92]	; (80022f4 <UART2_Exception_Callback+0x84>)
 8002298:	681b      	ldr	r3, [r3, #0]
 800229a:	461a      	mov	r2, r3
 800229c:	4b16      	ldr	r3, [pc, #88]	; (80022f8 <UART2_Exception_Callback+0x88>)
 800229e:	4413      	add	r3, r2
 80022a0:	4a14      	ldr	r2, [pc, #80]	; (80022f4 <UART2_Exception_Callback+0x84>)
 80022a2:	7b12      	ldrb	r2, [r2, #12]
 80022a4:	701a      	strb	r2, [r3, #0]
	  UART_packet.rx_cnt++;
 80022a6:	4b13      	ldr	r3, [pc, #76]	; (80022f4 <UART2_Exception_Callback+0x84>)
 80022a8:	681b      	ldr	r3, [r3, #0]
 80022aa:	3301      	adds	r3, #1
 80022ac:	4a11      	ldr	r2, [pc, #68]	; (80022f4 <UART2_Exception_Callback+0x84>)
 80022ae:	6013      	str	r3, [r2, #0]

	  if(UART_packet.flags>=2){
 80022b0:	4b10      	ldr	r3, [pc, #64]	; (80022f4 <UART2_Exception_Callback+0x84>)
 80022b2:	689b      	ldr	r3, [r3, #8]
 80022b4:	2b01      	cmp	r3, #1
 80022b6:	dd16      	ble.n	80022e6 <UART2_Exception_Callback+0x76>
		  if(!mode){
 80022b8:	4b10      	ldr	r3, [pc, #64]	; (80022fc <UART2_Exception_Callback+0x8c>)
 80022ba:	781b      	ldrb	r3, [r3, #0]
 80022bc:	f083 0301 	eor.w	r3, r3, #1
 80022c0:	b2db      	uxtb	r3, r3
 80022c2:	2b00      	cmp	r3, #0
 80022c4:	d002      	beq.n	80022cc <UART2_Exception_Callback+0x5c>
			  changeMode = true;
 80022c6:	4b0e      	ldr	r3, [pc, #56]	; (8002300 <UART2_Exception_Callback+0x90>)
 80022c8:	2201      	movs	r2, #1
 80022ca:	701a      	strb	r2, [r3, #0]
		  }
		  UART_packet.flags = 0;
 80022cc:	4b09      	ldr	r3, [pc, #36]	; (80022f4 <UART2_Exception_Callback+0x84>)
 80022ce:	2200      	movs	r2, #0
 80022d0:	609a      	str	r2, [r3, #8]
		  UART_packet.got_packet = true;
 80022d2:	4b08      	ldr	r3, [pc, #32]	; (80022f4 <UART2_Exception_Callback+0x84>)
 80022d4:	2201      	movs	r2, #1
 80022d6:	735a      	strb	r2, [r3, #13]
		  UART_packet.received_byte_cnt = UART_packet.rx_cnt;
 80022d8:	4b06      	ldr	r3, [pc, #24]	; (80022f4 <UART2_Exception_Callback+0x84>)
 80022da:	681b      	ldr	r3, [r3, #0]
 80022dc:	4a05      	ldr	r2, [pc, #20]	; (80022f4 <UART2_Exception_Callback+0x84>)
 80022de:	6053      	str	r3, [r2, #4]
		  UART_packet.rx_cnt=0;
 80022e0:	4b04      	ldr	r3, [pc, #16]	; (80022f4 <UART2_Exception_Callback+0x84>)
 80022e2:	2200      	movs	r2, #0
 80022e4:	601a      	str	r2, [r3, #0]

	  }
}
 80022e6:	bf00      	nop
 80022e8:	bd80      	pop	{r7, pc}
 80022ea:	bf00      	nop
 80022ec:	2000145c 	.word	0x2000145c
 80022f0:	200029e4 	.word	0x200029e4
 80022f4:	20001450 	.word	0x20001450
 80022f8:	2000145e 	.word	0x2000145e
 80022fc:	2000298c 	.word	0x2000298c
 8002300:	200000a9 	.word	0x200000a9

08002304 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002304:	b580      	push	{r7, lr}
 8002306:	b082      	sub	sp, #8
 8002308:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800230a:	f000 fe07 	bl	8002f1c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800230e:	f000 f827 	bl	8002360 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002312:	f000 fa41 	bl	8002798 <MX_GPIO_Init>
  MX_DMA_Init();
 8002316:	f000 fa1f 	bl	8002758 <MX_DMA_Init>
  MX_DAC_Init();
 800231a:	f000 f88d 	bl	8002438 <MX_DAC_Init>
  MX_TIM2_Init();
 800231e:	f000 f8b5 	bl	800248c <MX_TIM2_Init>
  MX_TIM3_Init();
 8002322:	f000 f929 	bl	8002578 <MX_TIM3_Init>
  MX_USART2_UART_Init();
 8002326:	f000 f9e5 	bl	80026f4 <MX_USART2_UART_Init>
  MX_TIM5_Init();
 800232a:	f000 f973 	bl	8002614 <MX_TIM5_Init>
  /* USER CODE BEGIN 2 */

	uart_gpio_init();
 800232e:	f000 fb35 	bl	800299c <uart_gpio_init>
//		bool test_array[] = {1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0};
//		int len = sizeof(test_array)/sizeof(bool);
//		test_remove_bitstuffing(test_array,len);
//		tx_rx();

		char array[5] = {0,1,2,3,4};
 8002332:	4a09      	ldr	r2, [pc, #36]	; (8002358 <main+0x54>)
 8002334:	463b      	mov	r3, r7
 8002336:	e892 0003 	ldmia.w	r2, {r0, r1}
 800233a:	6018      	str	r0, [r3, #0]
 800233c:	3304      	adds	r3, #4
 800233e:	7019      	strb	r1, [r3, #0]
		HAL_UART_Transmit(&huart2, array, strlen(array), 10);
 8002340:	463b      	mov	r3, r7
 8002342:	4618      	mov	r0, r3
 8002344:	f7fd ff64 	bl	8000210 <strlen>
 8002348:	4603      	mov	r3, r0
 800234a:	b29a      	uxth	r2, r3
 800234c:	4639      	mov	r1, r7
 800234e:	230a      	movs	r3, #10
 8002350:	4802      	ldr	r0, [pc, #8]	; (800235c <main+0x58>)
 8002352:	f003 fc94 	bl	8005c7e <HAL_UART_Transmit>
	while (1) {
 8002356:	e7ec      	b.n	8002332 <main+0x2e>
 8002358:	08008ad0 	.word	0x08008ad0
 800235c:	200029e4 	.word	0x200029e4

08002360 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002360:	b580      	push	{r7, lr}
 8002362:	b094      	sub	sp, #80	; 0x50
 8002364:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002366:	f107 031c 	add.w	r3, r7, #28
 800236a:	2234      	movs	r2, #52	; 0x34
 800236c:	2100      	movs	r1, #0
 800236e:	4618      	mov	r0, r3
 8002370:	f004 fbbe 	bl	8006af0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002374:	f107 0308 	add.w	r3, r7, #8
 8002378:	2200      	movs	r2, #0
 800237a:	601a      	str	r2, [r3, #0]
 800237c:	605a      	str	r2, [r3, #4]
 800237e:	609a      	str	r2, [r3, #8]
 8002380:	60da      	str	r2, [r3, #12]
 8002382:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8002384:	2300      	movs	r3, #0
 8002386:	607b      	str	r3, [r7, #4]
 8002388:	4b29      	ldr	r3, [pc, #164]	; (8002430 <SystemClock_Config+0xd0>)
 800238a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800238c:	4a28      	ldr	r2, [pc, #160]	; (8002430 <SystemClock_Config+0xd0>)
 800238e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002392:	6413      	str	r3, [r2, #64]	; 0x40
 8002394:	4b26      	ldr	r3, [pc, #152]	; (8002430 <SystemClock_Config+0xd0>)
 8002396:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002398:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800239c:	607b      	str	r3, [r7, #4]
 800239e:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 80023a0:	2300      	movs	r3, #0
 80023a2:	603b      	str	r3, [r7, #0]
 80023a4:	4b23      	ldr	r3, [pc, #140]	; (8002434 <SystemClock_Config+0xd4>)
 80023a6:	681b      	ldr	r3, [r3, #0]
 80023a8:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80023ac:	4a21      	ldr	r2, [pc, #132]	; (8002434 <SystemClock_Config+0xd4>)
 80023ae:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80023b2:	6013      	str	r3, [r2, #0]
 80023b4:	4b1f      	ldr	r3, [pc, #124]	; (8002434 <SystemClock_Config+0xd4>)
 80023b6:	681b      	ldr	r3, [r3, #0]
 80023b8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80023bc:	603b      	str	r3, [r7, #0]
 80023be:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80023c0:	2302      	movs	r3, #2
 80023c2:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80023c4:	2301      	movs	r3, #1
 80023c6:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80023c8:	2310      	movs	r3, #16
 80023ca:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80023cc:	2302      	movs	r3, #2
 80023ce:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80023d0:	2300      	movs	r3, #0
 80023d2:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 80023d4:	2308      	movs	r3, #8
 80023d6:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 80;
 80023d8:	2350      	movs	r3, #80	; 0x50
 80023da:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80023dc:	2302      	movs	r3, #2
 80023de:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80023e0:	2302      	movs	r3, #2
 80023e2:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 80023e4:	2302      	movs	r3, #2
 80023e6:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80023e8:	f107 031c 	add.w	r3, r7, #28
 80023ec:	4618      	mov	r0, r3
 80023ee:	f001 ff35 	bl	800425c <HAL_RCC_OscConfig>
 80023f2:	4603      	mov	r3, r0
 80023f4:	2b00      	cmp	r3, #0
 80023f6:	d001      	beq.n	80023fc <SystemClock_Config+0x9c>
  {
    Error_Handler();
 80023f8:	f000 faf8 	bl	80029ec <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80023fc:	230f      	movs	r3, #15
 80023fe:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002400:	2302      	movs	r3, #2
 8002402:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002404:	2300      	movs	r3, #0
 8002406:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8002408:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800240c:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800240e:	2300      	movs	r3, #0
 8002410:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8002412:	f107 0308 	add.w	r3, r7, #8
 8002416:	2102      	movs	r1, #2
 8002418:	4618      	mov	r0, r3
 800241a:	f001 fc65 	bl	8003ce8 <HAL_RCC_ClockConfig>
 800241e:	4603      	mov	r3, r0
 8002420:	2b00      	cmp	r3, #0
 8002422:	d001      	beq.n	8002428 <SystemClock_Config+0xc8>
  {
    Error_Handler();
 8002424:	f000 fae2 	bl	80029ec <Error_Handler>
  }
}
 8002428:	bf00      	nop
 800242a:	3750      	adds	r7, #80	; 0x50
 800242c:	46bd      	mov	sp, r7
 800242e:	bd80      	pop	{r7, pc}
 8002430:	40023800 	.word	0x40023800
 8002434:	40007000 	.word	0x40007000

08002438 <MX_DAC_Init>:
  * @brief DAC Initialization Function
  * @param None
  * @retval None
  */
static void MX_DAC_Init(void)
{
 8002438:	b580      	push	{r7, lr}
 800243a:	b082      	sub	sp, #8
 800243c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN DAC_Init 0 */

  /* USER CODE END DAC_Init 0 */

  DAC_ChannelConfTypeDef sConfig = {0};
 800243e:	463b      	mov	r3, r7
 8002440:	2200      	movs	r2, #0
 8002442:	601a      	str	r2, [r3, #0]
 8002444:	605a      	str	r2, [r3, #4]
  /* USER CODE BEGIN DAC_Init 1 */

  /* USER CODE END DAC_Init 1 */
  /** DAC Initialization
  */
  hdac.Instance = DAC;
 8002446:	4b0f      	ldr	r3, [pc, #60]	; (8002484 <MX_DAC_Init+0x4c>)
 8002448:	4a0f      	ldr	r2, [pc, #60]	; (8002488 <MX_DAC_Init+0x50>)
 800244a:	601a      	str	r2, [r3, #0]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 800244c:	480d      	ldr	r0, [pc, #52]	; (8002484 <MX_DAC_Init+0x4c>)
 800244e:	f000 fee8 	bl	8003222 <HAL_DAC_Init>
 8002452:	4603      	mov	r3, r0
 8002454:	2b00      	cmp	r3, #0
 8002456:	d001      	beq.n	800245c <MX_DAC_Init+0x24>
  {
    Error_Handler();
 8002458:	f000 fac8 	bl	80029ec <Error_Handler>
  }
  /** DAC channel OUT1 config
  */
  sConfig.DAC_Trigger = DAC_TRIGGER_T2_TRGO;
 800245c:	2324      	movs	r3, #36	; 0x24
 800245e:	603b      	str	r3, [r7, #0]
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 8002460:	2300      	movs	r3, #0
 8002462:	607b      	str	r3, [r7, #4]
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 8002464:	463b      	mov	r3, r7
 8002466:	2200      	movs	r2, #0
 8002468:	4619      	mov	r1, r3
 800246a:	4806      	ldr	r0, [pc, #24]	; (8002484 <MX_DAC_Init+0x4c>)
 800246c:	f000 fefb 	bl	8003266 <HAL_DAC_ConfigChannel>
 8002470:	4603      	mov	r3, r0
 8002472:	2b00      	cmp	r3, #0
 8002474:	d001      	beq.n	800247a <MX_DAC_Init+0x42>
  {
    Error_Handler();
 8002476:	f000 fab9 	bl	80029ec <Error_Handler>
  }
  /* USER CODE BEGIN DAC_Init 2 */

  /* USER CODE END DAC_Init 2 */

}
 800247a:	bf00      	nop
 800247c:	3708      	adds	r7, #8
 800247e:	46bd      	mov	sp, r7
 8002480:	bd80      	pop	{r7, pc}
 8002482:	bf00      	nop
 8002484:	20002990 	.word	0x20002990
 8002488:	40007400 	.word	0x40007400

0800248c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 800248c:	b580      	push	{r7, lr}
 800248e:	b08e      	sub	sp, #56	; 0x38
 8002490:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002492:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002496:	2200      	movs	r2, #0
 8002498:	601a      	str	r2, [r3, #0]
 800249a:	605a      	str	r2, [r3, #4]
 800249c:	609a      	str	r2, [r3, #8]
 800249e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80024a0:	f107 0320 	add.w	r3, r7, #32
 80024a4:	2200      	movs	r2, #0
 80024a6:	601a      	str	r2, [r3, #0]
 80024a8:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80024aa:	1d3b      	adds	r3, r7, #4
 80024ac:	2200      	movs	r2, #0
 80024ae:	601a      	str	r2, [r3, #0]
 80024b0:	605a      	str	r2, [r3, #4]
 80024b2:	609a      	str	r2, [r3, #8]
 80024b4:	60da      	str	r2, [r3, #12]
 80024b6:	611a      	str	r2, [r3, #16]
 80024b8:	615a      	str	r2, [r3, #20]
 80024ba:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80024bc:	4b2d      	ldr	r3, [pc, #180]	; (8002574 <MX_TIM2_Init+0xe8>)
 80024be:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80024c2:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 2-1;
 80024c4:	4b2b      	ldr	r3, [pc, #172]	; (8002574 <MX_TIM2_Init+0xe8>)
 80024c6:	2201      	movs	r2, #1
 80024c8:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80024ca:	4b2a      	ldr	r3, [pc, #168]	; (8002574 <MX_TIM2_Init+0xe8>)
 80024cc:	2200      	movs	r2, #0
 80024ce:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 80024d0:	4b28      	ldr	r3, [pc, #160]	; (8002574 <MX_TIM2_Init+0xe8>)
 80024d2:	f04f 32ff 	mov.w	r2, #4294967295
 80024d6:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80024d8:	4b26      	ldr	r3, [pc, #152]	; (8002574 <MX_TIM2_Init+0xe8>)
 80024da:	2200      	movs	r2, #0
 80024dc:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80024de:	4b25      	ldr	r3, [pc, #148]	; (8002574 <MX_TIM2_Init+0xe8>)
 80024e0:	2280      	movs	r2, #128	; 0x80
 80024e2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80024e4:	4823      	ldr	r0, [pc, #140]	; (8002574 <MX_TIM2_Init+0xe8>)
 80024e6:	f002 f913 	bl	8004710 <HAL_TIM_Base_Init>
 80024ea:	4603      	mov	r3, r0
 80024ec:	2b00      	cmp	r3, #0
 80024ee:	d001      	beq.n	80024f4 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 80024f0:	f000 fa7c 	bl	80029ec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80024f4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80024f8:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80024fa:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80024fe:	4619      	mov	r1, r3
 8002500:	481c      	ldr	r0, [pc, #112]	; (8002574 <MX_TIM2_Init+0xe8>)
 8002502:	f002 fd95 	bl	8005030 <HAL_TIM_ConfigClockSource>
 8002506:	4603      	mov	r3, r0
 8002508:	2b00      	cmp	r3, #0
 800250a:	d001      	beq.n	8002510 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 800250c:	f000 fa6e 	bl	80029ec <Error_Handler>
  }
  if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 8002510:	4818      	ldr	r0, [pc, #96]	; (8002574 <MX_TIM2_Init+0xe8>)
 8002512:	f002 f928 	bl	8004766 <HAL_TIM_OC_Init>
 8002516:	4603      	mov	r3, r0
 8002518:	2b00      	cmp	r3, #0
 800251a:	d001      	beq.n	8002520 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 800251c:	f000 fa66 	bl	80029ec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002520:	2300      	movs	r3, #0
 8002522:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002524:	2300      	movs	r3, #0
 8002526:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002528:	f107 0320 	add.w	r3, r7, #32
 800252c:	4619      	mov	r1, r3
 800252e:	4811      	ldr	r0, [pc, #68]	; (8002574 <MX_TIM2_Init+0xe8>)
 8002530:	f003 fac8 	bl	8005ac4 <HAL_TIMEx_MasterConfigSynchronization>
 8002534:	4603      	mov	r3, r0
 8002536:	2b00      	cmp	r3, #0
 8002538:	d001      	beq.n	800253e <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 800253a:	f000 fa57 	bl	80029ec <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_TIMING;
 800253e:	2300      	movs	r3, #0
 8002540:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8002542:	2300      	movs	r3, #0
 8002544:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002546:	2300      	movs	r3, #0
 8002548:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800254a:	2300      	movs	r3, #0
 800254c:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800254e:	1d3b      	adds	r3, r7, #4
 8002550:	2200      	movs	r2, #0
 8002552:	4619      	mov	r1, r3
 8002554:	4807      	ldr	r0, [pc, #28]	; (8002574 <MX_TIM2_Init+0xe8>)
 8002556:	f002 fc6f 	bl	8004e38 <HAL_TIM_OC_ConfigChannel>
 800255a:	4603      	mov	r3, r0
 800255c:	2b00      	cmp	r3, #0
 800255e:	d001      	beq.n	8002564 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 8002560:	f000 fa44 	bl	80029ec <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8002564:	4803      	ldr	r0, [pc, #12]	; (8002574 <MX_TIM2_Init+0xe8>)
 8002566:	f000 fb73 	bl	8002c50 <HAL_TIM_MspPostInit>

}
 800256a:	bf00      	nop
 800256c:	3738      	adds	r7, #56	; 0x38
 800256e:	46bd      	mov	sp, r7
 8002570:	bd80      	pop	{r7, pc}
 8002572:	bf00      	nop
 8002574:	200029a4 	.word	0x200029a4

08002578 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8002578:	b580      	push	{r7, lr}
 800257a:	b086      	sub	sp, #24
 800257c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800257e:	f107 0308 	add.w	r3, r7, #8
 8002582:	2200      	movs	r2, #0
 8002584:	601a      	str	r2, [r3, #0]
 8002586:	605a      	str	r2, [r3, #4]
 8002588:	609a      	str	r2, [r3, #8]
 800258a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800258c:	463b      	mov	r3, r7
 800258e:	2200      	movs	r2, #0
 8002590:	601a      	str	r2, [r3, #0]
 8002592:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8002594:	4b1d      	ldr	r3, [pc, #116]	; (800260c <MX_TIM3_Init+0x94>)
 8002596:	4a1e      	ldr	r2, [pc, #120]	; (8002610 <MX_TIM3_Init+0x98>)
 8002598:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 80-1;
 800259a:	4b1c      	ldr	r3, [pc, #112]	; (800260c <MX_TIM3_Init+0x94>)
 800259c:	224f      	movs	r2, #79	; 0x4f
 800259e:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80025a0:	4b1a      	ldr	r3, [pc, #104]	; (800260c <MX_TIM3_Init+0x94>)
 80025a2:	2200      	movs	r2, #0
 80025a4:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 828;
 80025a6:	4b19      	ldr	r3, [pc, #100]	; (800260c <MX_TIM3_Init+0x94>)
 80025a8:	f44f 724f 	mov.w	r2, #828	; 0x33c
 80025ac:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80025ae:	4b17      	ldr	r3, [pc, #92]	; (800260c <MX_TIM3_Init+0x94>)
 80025b0:	2200      	movs	r2, #0
 80025b2:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80025b4:	4b15      	ldr	r3, [pc, #84]	; (800260c <MX_TIM3_Init+0x94>)
 80025b6:	2280      	movs	r2, #128	; 0x80
 80025b8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80025ba:	4814      	ldr	r0, [pc, #80]	; (800260c <MX_TIM3_Init+0x94>)
 80025bc:	f002 f8a8 	bl	8004710 <HAL_TIM_Base_Init>
 80025c0:	4603      	mov	r3, r0
 80025c2:	2b00      	cmp	r3, #0
 80025c4:	d001      	beq.n	80025ca <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 80025c6:	f000 fa11 	bl	80029ec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80025ca:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80025ce:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80025d0:	f107 0308 	add.w	r3, r7, #8
 80025d4:	4619      	mov	r1, r3
 80025d6:	480d      	ldr	r0, [pc, #52]	; (800260c <MX_TIM3_Init+0x94>)
 80025d8:	f002 fd2a 	bl	8005030 <HAL_TIM_ConfigClockSource>
 80025dc:	4603      	mov	r3, r0
 80025de:	2b00      	cmp	r3, #0
 80025e0:	d001      	beq.n	80025e6 <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 80025e2:	f000 fa03 	bl	80029ec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80025e6:	2300      	movs	r3, #0
 80025e8:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80025ea:	2300      	movs	r3, #0
 80025ec:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80025ee:	463b      	mov	r3, r7
 80025f0:	4619      	mov	r1, r3
 80025f2:	4806      	ldr	r0, [pc, #24]	; (800260c <MX_TIM3_Init+0x94>)
 80025f4:	f003 fa66 	bl	8005ac4 <HAL_TIMEx_MasterConfigSynchronization>
 80025f8:	4603      	mov	r3, r0
 80025fa:	2b00      	cmp	r3, #0
 80025fc:	d001      	beq.n	8002602 <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 80025fe:	f000 f9f5 	bl	80029ec <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8002602:	bf00      	nop
 8002604:	3718      	adds	r7, #24
 8002606:	46bd      	mov	sp, r7
 8002608:	bd80      	pop	{r7, pc}
 800260a:	bf00      	nop
 800260c:	200028ec 	.word	0x200028ec
 8002610:	40000400 	.word	0x40000400

08002614 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 8002614:	b580      	push	{r7, lr}
 8002616:	b08a      	sub	sp, #40	; 0x28
 8002618:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800261a:	f107 0318 	add.w	r3, r7, #24
 800261e:	2200      	movs	r2, #0
 8002620:	601a      	str	r2, [r3, #0]
 8002622:	605a      	str	r2, [r3, #4]
 8002624:	609a      	str	r2, [r3, #8]
 8002626:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002628:	f107 0310 	add.w	r3, r7, #16
 800262c:	2200      	movs	r2, #0
 800262e:	601a      	str	r2, [r3, #0]
 8002630:	605a      	str	r2, [r3, #4]
  TIM_IC_InitTypeDef sConfigIC = {0};
 8002632:	463b      	mov	r3, r7
 8002634:	2200      	movs	r2, #0
 8002636:	601a      	str	r2, [r3, #0]
 8002638:	605a      	str	r2, [r3, #4]
 800263a:	609a      	str	r2, [r3, #8]
 800263c:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 800263e:	4b2b      	ldr	r3, [pc, #172]	; (80026ec <MX_TIM5_Init+0xd8>)
 8002640:	4a2b      	ldr	r2, [pc, #172]	; (80026f0 <MX_TIM5_Init+0xdc>)
 8002642:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 2-1;
 8002644:	4b29      	ldr	r3, [pc, #164]	; (80026ec <MX_TIM5_Init+0xd8>)
 8002646:	2201      	movs	r2, #1
 8002648:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 800264a:	4b28      	ldr	r3, [pc, #160]	; (80026ec <MX_TIM5_Init+0xd8>)
 800264c:	2200      	movs	r2, #0
 800264e:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 8002650:	4b26      	ldr	r3, [pc, #152]	; (80026ec <MX_TIM5_Init+0xd8>)
 8002652:	f04f 32ff 	mov.w	r2, #4294967295
 8002656:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002658:	4b24      	ldr	r3, [pc, #144]	; (80026ec <MX_TIM5_Init+0xd8>)
 800265a:	2200      	movs	r2, #0
 800265c:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800265e:	4b23      	ldr	r3, [pc, #140]	; (80026ec <MX_TIM5_Init+0xd8>)
 8002660:	2280      	movs	r2, #128	; 0x80
 8002662:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8002664:	4821      	ldr	r0, [pc, #132]	; (80026ec <MX_TIM5_Init+0xd8>)
 8002666:	f002 f853 	bl	8004710 <HAL_TIM_Base_Init>
 800266a:	4603      	mov	r3, r0
 800266c:	2b00      	cmp	r3, #0
 800266e:	d001      	beq.n	8002674 <MX_TIM5_Init+0x60>
  {
    Error_Handler();
 8002670:	f000 f9bc 	bl	80029ec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002674:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002678:	61bb      	str	r3, [r7, #24]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 800267a:	f107 0318 	add.w	r3, r7, #24
 800267e:	4619      	mov	r1, r3
 8002680:	481a      	ldr	r0, [pc, #104]	; (80026ec <MX_TIM5_Init+0xd8>)
 8002682:	f002 fcd5 	bl	8005030 <HAL_TIM_ConfigClockSource>
 8002686:	4603      	mov	r3, r0
 8002688:	2b00      	cmp	r3, #0
 800268a:	d001      	beq.n	8002690 <MX_TIM5_Init+0x7c>
  {
    Error_Handler();
 800268c:	f000 f9ae 	bl	80029ec <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim5) != HAL_OK)
 8002690:	4816      	ldr	r0, [pc, #88]	; (80026ec <MX_TIM5_Init+0xd8>)
 8002692:	f002 f9bb 	bl	8004a0c <HAL_TIM_IC_Init>
 8002696:	4603      	mov	r3, r0
 8002698:	2b00      	cmp	r3, #0
 800269a:	d001      	beq.n	80026a0 <MX_TIM5_Init+0x8c>
  {
    Error_Handler();
 800269c:	f000 f9a6 	bl	80029ec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80026a0:	2300      	movs	r3, #0
 80026a2:	613b      	str	r3, [r7, #16]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80026a4:	2300      	movs	r3, #0
 80026a6:	617b      	str	r3, [r7, #20]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 80026a8:	f107 0310 	add.w	r3, r7, #16
 80026ac:	4619      	mov	r1, r3
 80026ae:	480f      	ldr	r0, [pc, #60]	; (80026ec <MX_TIM5_Init+0xd8>)
 80026b0:	f003 fa08 	bl	8005ac4 <HAL_TIMEx_MasterConfigSynchronization>
 80026b4:	4603      	mov	r3, r0
 80026b6:	2b00      	cmp	r3, #0
 80026b8:	d001      	beq.n	80026be <MX_TIM5_Init+0xaa>
  {
    Error_Handler();
 80026ba:	f000 f997 	bl	80029ec <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_BOTHEDGE;
 80026be:	230a      	movs	r3, #10
 80026c0:	603b      	str	r3, [r7, #0]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 80026c2:	2301      	movs	r3, #1
 80026c4:	607b      	str	r3, [r7, #4]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 80026c6:	2300      	movs	r3, #0
 80026c8:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICFilter = 0;
 80026ca:	2300      	movs	r3, #0
 80026cc:	60fb      	str	r3, [r7, #12]
  if (HAL_TIM_IC_ConfigChannel(&htim5, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 80026ce:	463b      	mov	r3, r7
 80026d0:	2200      	movs	r2, #0
 80026d2:	4619      	mov	r1, r3
 80026d4:	4805      	ldr	r0, [pc, #20]	; (80026ec <MX_TIM5_Init+0xd8>)
 80026d6:	f002 fc0f 	bl	8004ef8 <HAL_TIM_IC_ConfigChannel>
 80026da:	4603      	mov	r3, r0
 80026dc:	2b00      	cmp	r3, #0
 80026de:	d001      	beq.n	80026e4 <MX_TIM5_Init+0xd0>
  {
    Error_Handler();
 80026e0:	f000 f984 	bl	80029ec <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 80026e4:	bf00      	nop
 80026e6:	3728      	adds	r7, #40	; 0x28
 80026e8:	46bd      	mov	sp, r7
 80026ea:	bd80      	pop	{r7, pc}
 80026ec:	200028ac 	.word	0x200028ac
 80026f0:	40000c00 	.word	0x40000c00

080026f4 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80026f4:	b580      	push	{r7, lr}
 80026f6:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80026f8:	4b15      	ldr	r3, [pc, #84]	; (8002750 <MX_USART2_UART_Init+0x5c>)
 80026fa:	4a16      	ldr	r2, [pc, #88]	; (8002754 <MX_USART2_UART_Init+0x60>)
 80026fc:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80026fe:	4b14      	ldr	r3, [pc, #80]	; (8002750 <MX_USART2_UART_Init+0x5c>)
 8002700:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8002704:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002706:	4b12      	ldr	r3, [pc, #72]	; (8002750 <MX_USART2_UART_Init+0x5c>)
 8002708:	2200      	movs	r2, #0
 800270a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800270c:	4b10      	ldr	r3, [pc, #64]	; (8002750 <MX_USART2_UART_Init+0x5c>)
 800270e:	2200      	movs	r2, #0
 8002710:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8002712:	4b0f      	ldr	r3, [pc, #60]	; (8002750 <MX_USART2_UART_Init+0x5c>)
 8002714:	2200      	movs	r2, #0
 8002716:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002718:	4b0d      	ldr	r3, [pc, #52]	; (8002750 <MX_USART2_UART_Init+0x5c>)
 800271a:	220c      	movs	r2, #12
 800271c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800271e:	4b0c      	ldr	r3, [pc, #48]	; (8002750 <MX_USART2_UART_Init+0x5c>)
 8002720:	2200      	movs	r2, #0
 8002722:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002724:	4b0a      	ldr	r3, [pc, #40]	; (8002750 <MX_USART2_UART_Init+0x5c>)
 8002726:	2200      	movs	r2, #0
 8002728:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800272a:	4809      	ldr	r0, [pc, #36]	; (8002750 <MX_USART2_UART_Init+0x5c>)
 800272c:	f003 fa5a 	bl	8005be4 <HAL_UART_Init>
 8002730:	4603      	mov	r3, r0
 8002732:	2b00      	cmp	r3, #0
 8002734:	d001      	beq.n	800273a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8002736:	f000 f959 	bl	80029ec <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */
  HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800273a:	2200      	movs	r2, #0
 800273c:	2100      	movs	r1, #0
 800273e:	2026      	movs	r0, #38	; 0x26
 8002740:	f000 fd39 	bl	80031b6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002744:	2026      	movs	r0, #38	; 0x26
 8002746:	f000 fd52 	bl	80031ee <HAL_NVIC_EnableIRQ>
  /* USER CODE END USART2_Init 2 */

}
 800274a:	bf00      	nop
 800274c:	bd80      	pop	{r7, pc}
 800274e:	bf00      	nop
 8002750:	200029e4 	.word	0x200029e4
 8002754:	40004400 	.word	0x40004400

08002758 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8002758:	b580      	push	{r7, lr}
 800275a:	b082      	sub	sp, #8
 800275c:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 800275e:	2300      	movs	r3, #0
 8002760:	607b      	str	r3, [r7, #4]
 8002762:	4b0c      	ldr	r3, [pc, #48]	; (8002794 <MX_DMA_Init+0x3c>)
 8002764:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002766:	4a0b      	ldr	r2, [pc, #44]	; (8002794 <MX_DMA_Init+0x3c>)
 8002768:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800276c:	6313      	str	r3, [r2, #48]	; 0x30
 800276e:	4b09      	ldr	r3, [pc, #36]	; (8002794 <MX_DMA_Init+0x3c>)
 8002770:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002772:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002776:	607b      	str	r3, [r7, #4]
 8002778:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 800277a:	2200      	movs	r2, #0
 800277c:	2100      	movs	r1, #0
 800277e:	2010      	movs	r0, #16
 8002780:	f000 fd19 	bl	80031b6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 8002784:	2010      	movs	r0, #16
 8002786:	f000 fd32 	bl	80031ee <HAL_NVIC_EnableIRQ>

}
 800278a:	bf00      	nop
 800278c:	3708      	adds	r7, #8
 800278e:	46bd      	mov	sp, r7
 8002790:	bd80      	pop	{r7, pc}
 8002792:	bf00      	nop
 8002794:	40023800 	.word	0x40023800

08002798 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002798:	b580      	push	{r7, lr}
 800279a:	b08a      	sub	sp, #40	; 0x28
 800279c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800279e:	f107 0314 	add.w	r3, r7, #20
 80027a2:	2200      	movs	r2, #0
 80027a4:	601a      	str	r2, [r3, #0]
 80027a6:	605a      	str	r2, [r3, #4]
 80027a8:	609a      	str	r2, [r3, #8]
 80027aa:	60da      	str	r2, [r3, #12]
 80027ac:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80027ae:	2300      	movs	r3, #0
 80027b0:	613b      	str	r3, [r7, #16]
 80027b2:	4b46      	ldr	r3, [pc, #280]	; (80028cc <MX_GPIO_Init+0x134>)
 80027b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027b6:	4a45      	ldr	r2, [pc, #276]	; (80028cc <MX_GPIO_Init+0x134>)
 80027b8:	f043 0304 	orr.w	r3, r3, #4
 80027bc:	6313      	str	r3, [r2, #48]	; 0x30
 80027be:	4b43      	ldr	r3, [pc, #268]	; (80028cc <MX_GPIO_Init+0x134>)
 80027c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027c2:	f003 0304 	and.w	r3, r3, #4
 80027c6:	613b      	str	r3, [r7, #16]
 80027c8:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80027ca:	2300      	movs	r3, #0
 80027cc:	60fb      	str	r3, [r7, #12]
 80027ce:	4b3f      	ldr	r3, [pc, #252]	; (80028cc <MX_GPIO_Init+0x134>)
 80027d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027d2:	4a3e      	ldr	r2, [pc, #248]	; (80028cc <MX_GPIO_Init+0x134>)
 80027d4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80027d8:	6313      	str	r3, [r2, #48]	; 0x30
 80027da:	4b3c      	ldr	r3, [pc, #240]	; (80028cc <MX_GPIO_Init+0x134>)
 80027dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027de:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80027e2:	60fb      	str	r3, [r7, #12]
 80027e4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80027e6:	2300      	movs	r3, #0
 80027e8:	60bb      	str	r3, [r7, #8]
 80027ea:	4b38      	ldr	r3, [pc, #224]	; (80028cc <MX_GPIO_Init+0x134>)
 80027ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027ee:	4a37      	ldr	r2, [pc, #220]	; (80028cc <MX_GPIO_Init+0x134>)
 80027f0:	f043 0301 	orr.w	r3, r3, #1
 80027f4:	6313      	str	r3, [r2, #48]	; 0x30
 80027f6:	4b35      	ldr	r3, [pc, #212]	; (80028cc <MX_GPIO_Init+0x134>)
 80027f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027fa:	f003 0301 	and.w	r3, r3, #1
 80027fe:	60bb      	str	r3, [r7, #8]
 8002800:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002802:	2300      	movs	r3, #0
 8002804:	607b      	str	r3, [r7, #4]
 8002806:	4b31      	ldr	r3, [pc, #196]	; (80028cc <MX_GPIO_Init+0x134>)
 8002808:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800280a:	4a30      	ldr	r2, [pc, #192]	; (80028cc <MX_GPIO_Init+0x134>)
 800280c:	f043 0302 	orr.w	r3, r3, #2
 8002810:	6313      	str	r3, [r2, #48]	; 0x30
 8002812:	4b2e      	ldr	r3, [pc, #184]	; (80028cc <MX_GPIO_Init+0x134>)
 8002814:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002816:	f003 0302 	and.w	r3, r3, #2
 800281a:	607b      	str	r3, [r7, #4]
 800281c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|D1_Pin|D0_Pin, GPIO_PIN_RESET);
 800281e:	2200      	movs	r2, #0
 8002820:	f44f 7148 	mov.w	r1, #800	; 0x320
 8002824:	482a      	ldr	r0, [pc, #168]	; (80028d0 <MX_GPIO_Init+0x138>)
 8002826:	f001 fa07 	bl	8003c38 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(PTT_GPIO_Port, PTT_Pin, GPIO_PIN_RESET);
 800282a:	2200      	movs	r2, #0
 800282c:	2110      	movs	r1, #16
 800282e:	4829      	ldr	r0, [pc, #164]	; (80028d4 <MX_GPIO_Init+0x13c>)
 8002830:	f001 fa02 	bl	8003c38 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, D2_Pin|D3_Pin, GPIO_PIN_RESET);
 8002834:	2200      	movs	r2, #0
 8002836:	f44f 6182 	mov.w	r1, #1040	; 0x410
 800283a:	4827      	ldr	r0, [pc, #156]	; (80028d8 <MX_GPIO_Init+0x140>)
 800283c:	f001 f9fc 	bl	8003c38 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8002840:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002844:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8002846:	4b25      	ldr	r3, [pc, #148]	; (80028dc <MX_GPIO_Init+0x144>)
 8002848:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800284a:	2300      	movs	r3, #0
 800284c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 800284e:	f107 0314 	add.w	r3, r7, #20
 8002852:	4619      	mov	r1, r3
 8002854:	481f      	ldr	r0, [pc, #124]	; (80028d4 <MX_GPIO_Init+0x13c>)
 8002856:	f001 f85d 	bl	8003914 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin D1_Pin D0_Pin */
  GPIO_InitStruct.Pin = LD2_Pin|D1_Pin|D0_Pin;
 800285a:	f44f 7348 	mov.w	r3, #800	; 0x320
 800285e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002860:	2301      	movs	r3, #1
 8002862:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002864:	2300      	movs	r3, #0
 8002866:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002868:	2300      	movs	r3, #0
 800286a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800286c:	f107 0314 	add.w	r3, r7, #20
 8002870:	4619      	mov	r1, r3
 8002872:	4817      	ldr	r0, [pc, #92]	; (80028d0 <MX_GPIO_Init+0x138>)
 8002874:	f001 f84e 	bl	8003914 <HAL_GPIO_Init>

  /*Configure GPIO pin : PTT_Pin */
  GPIO_InitStruct.Pin = PTT_Pin;
 8002878:	2310      	movs	r3, #16
 800287a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800287c:	2301      	movs	r3, #1
 800287e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002880:	2300      	movs	r3, #0
 8002882:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002884:	2300      	movs	r3, #0
 8002886:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(PTT_GPIO_Port, &GPIO_InitStruct);
 8002888:	f107 0314 	add.w	r3, r7, #20
 800288c:	4619      	mov	r1, r3
 800288e:	4811      	ldr	r0, [pc, #68]	; (80028d4 <MX_GPIO_Init+0x13c>)
 8002890:	f001 f840 	bl	8003914 <HAL_GPIO_Init>

  /*Configure GPIO pins : D2_Pin D3_Pin */
  GPIO_InitStruct.Pin = D2_Pin|D3_Pin;
 8002894:	f44f 6382 	mov.w	r3, #1040	; 0x410
 8002898:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800289a:	2301      	movs	r3, #1
 800289c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800289e:	2300      	movs	r3, #0
 80028a0:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80028a2:	2300      	movs	r3, #0
 80028a4:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028a6:	f107 0314 	add.w	r3, r7, #20
 80028aa:	4619      	mov	r1, r3
 80028ac:	480a      	ldr	r0, [pc, #40]	; (80028d8 <MX_GPIO_Init+0x140>)
 80028ae:	f001 f831 	bl	8003914 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 80028b2:	2200      	movs	r2, #0
 80028b4:	2100      	movs	r1, #0
 80028b6:	2028      	movs	r0, #40	; 0x28
 80028b8:	f000 fc7d 	bl	80031b6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 80028bc:	2028      	movs	r0, #40	; 0x28
 80028be:	f000 fc96 	bl	80031ee <HAL_NVIC_EnableIRQ>

}
 80028c2:	bf00      	nop
 80028c4:	3728      	adds	r7, #40	; 0x28
 80028c6:	46bd      	mov	sp, r7
 80028c8:	bd80      	pop	{r7, pc}
 80028ca:	bf00      	nop
 80028cc:	40023800 	.word	0x40023800
 80028d0:	40020000 	.word	0x40020000
 80028d4:	40020800 	.word	0x40020800
 80028d8:	40020400 	.word	0x40020400
 80028dc:	10210000 	.word	0x10210000

080028e0 <HAL_TIM_OC_DelayElapsedCallback>:

/* USER CODE BEGIN 4 */

OC_count = 0;
void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 80028e0:	b580      	push	{r7, lr}
 80028e2:	b082      	sub	sp, #8
 80028e4:	af00      	add	r7, sp, #0
 80028e6:	6078      	str	r0, [r7, #4]
	if (htim->Instance == TIM2 && htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)
 80028e8:	687b      	ldr	r3, [r7, #4]
 80028ea:	681b      	ldr	r3, [r3, #0]
 80028ec:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80028f0:	d10b      	bne.n	800290a <HAL_TIM_OC_DelayElapsedCallback+0x2a>
 80028f2:	687b      	ldr	r3, [r7, #4]
 80028f4:	7f1b      	ldrb	r3, [r3, #28]
 80028f6:	2b01      	cmp	r3, #1
 80028f8:	d107      	bne.n	800290a <HAL_TIM_OC_DelayElapsedCallback+0x2a>
	{
		OC_count++;
 80028fa:	4b06      	ldr	r3, [pc, #24]	; (8002914 <HAL_TIM_OC_DelayElapsedCallback+0x34>)
 80028fc:	681b      	ldr	r3, [r3, #0]
 80028fe:	3301      	adds	r3, #1
 8002900:	4a04      	ldr	r2, [pc, #16]	; (8002914 <HAL_TIM_OC_DelayElapsedCallback+0x34>)
 8002902:	6013      	str	r3, [r2, #0]
		Tim2_OC_Callback();
 8002904:	f7ff fae8 	bl	8001ed8 <Tim2_OC_Callback>
	}
	return;
 8002908:	bf00      	nop
 800290a:	bf00      	nop
}
 800290c:	3708      	adds	r7, #8
 800290e:	46bd      	mov	sp, r7
 8002910:	bd80      	pop	{r7, pc}
 8002912:	bf00      	nop
 8002914:	200000d0 	.word	0x200000d0

08002918 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 8002918:	b580      	push	{r7, lr}
 800291a:	b082      	sub	sp, #8
 800291c:	af00      	add	r7, sp, #0
 800291e:	6078      	str	r0, [r7, #4]
	if (htim == &htim3)
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	4a05      	ldr	r2, [pc, #20]	; (8002938 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8002924:	4293      	cmp	r3, r2
 8002926:	d102      	bne.n	800292e <HAL_TIM_PeriodElapsedCallback+0x16>
		Tim3_IT_Callback();
 8002928:	f7ff fbf8 	bl	800211c <Tim3_IT_Callback>
	else
		__NOP();

	return;
 800292c:	e001      	b.n	8002932 <HAL_TIM_PeriodElapsedCallback+0x1a>
		__NOP();
 800292e:	bf00      	nop
	return;
 8002930:	bf00      	nop
}
 8002932:	3708      	adds	r7, #8
 8002934:	46bd      	mov	sp, r7
 8002936:	bd80      	pop	{r7, pc}
 8002938:	200028ec 	.word	0x200028ec

0800293c <HAL_TIM_IC_CaptureCallback>:

int IC_count =0;
void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 800293c:	b580      	push	{r7, lr}
 800293e:	b082      	sub	sp, #8
 8002940:	af00      	add	r7, sp, #0
 8002942:	6078      	str	r0, [r7, #4]
	//Make sure this is the right timer and channel
	if (htim->Instance == TIM5 && htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)
 8002944:	687b      	ldr	r3, [r7, #4]
 8002946:	681b      	ldr	r3, [r3, #0]
 8002948:	4a09      	ldr	r2, [pc, #36]	; (8002970 <HAL_TIM_IC_CaptureCallback+0x34>)
 800294a:	4293      	cmp	r3, r2
 800294c:	d10b      	bne.n	8002966 <HAL_TIM_IC_CaptureCallback+0x2a>
 800294e:	687b      	ldr	r3, [r7, #4]
 8002950:	7f1b      	ldrb	r3, [r3, #28]
 8002952:	2b01      	cmp	r3, #1
 8002954:	d107      	bne.n	8002966 <HAL_TIM_IC_CaptureCallback+0x2a>
	{
		IC_count++;
 8002956:	4b07      	ldr	r3, [pc, #28]	; (8002974 <HAL_TIM_IC_CaptureCallback+0x38>)
 8002958:	681b      	ldr	r3, [r3, #0]
 800295a:	3301      	adds	r3, #1
 800295c:	4a05      	ldr	r2, [pc, #20]	; (8002974 <HAL_TIM_IC_CaptureCallback+0x38>)
 800295e:	6013      	str	r3, [r2, #0]
		Tim5_IC_Callback();
 8002960:	f7ff fbee 	bl	8002140 <Tim5_IC_Callback>
	}

	return;
 8002964:	bf00      	nop
 8002966:	bf00      	nop
}
 8002968:	3708      	adds	r7, #8
 800296a:	46bd      	mov	sp, r7
 800296c:	bd80      	pop	{r7, pc}
 800296e:	bf00      	nop
 8002970:	40000c00 	.word	0x40000c00
 8002974:	200000d4 	.word	0x200000d4

08002978 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8002978:	b580      	push	{r7, lr}
 800297a:	b082      	sub	sp, #8
 800297c:	af00      	add	r7, sp, #0
 800297e:	6078      	str	r0, [r7, #4]
  if (huart->Instance == USART2)
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	4a04      	ldr	r2, [pc, #16]	; (8002998 <HAL_UART_RxCpltCallback+0x20>)
 8002986:	4293      	cmp	r3, r2
 8002988:	d101      	bne.n	800298e <HAL_UART_RxCpltCallback+0x16>
  {
	  UART2_Exception_Callback();
 800298a:	f7ff fc71 	bl	8002270 <UART2_Exception_Callback>
  }
}
 800298e:	bf00      	nop
 8002990:	3708      	adds	r7, #8
 8002992:	46bd      	mov	sp, r7
 8002994:	bd80      	pop	{r7, pc}
 8002996:	bf00      	nop
 8002998:	40004400 	.word	0x40004400

0800299c <uart_gpio_init>:

void uart_gpio_init()
{
 800299c:	b580      	push	{r7, lr}
 800299e:	b086      	sub	sp, #24
 80029a0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct;

  __GPIOA_CLK_ENABLE();
 80029a2:	2300      	movs	r3, #0
 80029a4:	603b      	str	r3, [r7, #0]
 80029a6:	4b0f      	ldr	r3, [pc, #60]	; (80029e4 <uart_gpio_init+0x48>)
 80029a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029aa:	4a0e      	ldr	r2, [pc, #56]	; (80029e4 <uart_gpio_init+0x48>)
 80029ac:	f043 0301 	orr.w	r3, r3, #1
 80029b0:	6313      	str	r3, [r2, #48]	; 0x30
 80029b2:	4b0c      	ldr	r3, [pc, #48]	; (80029e4 <uart_gpio_init+0x48>)
 80029b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029b6:	f003 0301 	and.w	r3, r3, #1
 80029ba:	603b      	str	r3, [r7, #0]
 80029bc:	683b      	ldr	r3, [r7, #0]

  /**USART2 GPIO Configuration
  PA2     ------> USART2_TX
  PA3     ------> USART2_RX
  */
  GPIO_InitStruct.Pin = GPIO_PIN_2 | GPIO_PIN_3;
 80029be:	230c      	movs	r3, #12
 80029c0:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80029c2:	2302      	movs	r3, #2
 80029c4:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80029c6:	2301      	movs	r3, #1
 80029c8:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
 80029ca:	2300      	movs	r3, #0
 80029cc:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80029ce:	2307      	movs	r3, #7
 80029d0:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029d2:	1d3b      	adds	r3, r7, #4
 80029d4:	4619      	mov	r1, r3
 80029d6:	4804      	ldr	r0, [pc, #16]	; (80029e8 <uart_gpio_init+0x4c>)
 80029d8:	f000 ff9c 	bl	8003914 <HAL_GPIO_Init>
}
 80029dc:	bf00      	nop
 80029de:	3718      	adds	r7, #24
 80029e0:	46bd      	mov	sp, r7
 80029e2:	bd80      	pop	{r7, pc}
 80029e4:	40023800 	.word	0x40023800
 80029e8:	40020000 	.word	0x40020000

080029ec <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80029ec:	b480      	push	{r7}
 80029ee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80029f0:	bf00      	nop
 80029f2:	46bd      	mov	sp, r7
 80029f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029f8:	4770      	bx	lr
	...

080029fc <HAL_MspInit>:
 80029fc:	b580      	push	{r7, lr}
 80029fe:	b082      	sub	sp, #8
 8002a00:	af00      	add	r7, sp, #0
 8002a02:	2300      	movs	r3, #0
 8002a04:	607b      	str	r3, [r7, #4]
 8002a06:	4b10      	ldr	r3, [pc, #64]	; (8002a48 <HAL_MspInit+0x4c>)
 8002a08:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002a0a:	4a0f      	ldr	r2, [pc, #60]	; (8002a48 <HAL_MspInit+0x4c>)
 8002a0c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002a10:	6453      	str	r3, [r2, #68]	; 0x44
 8002a12:	4b0d      	ldr	r3, [pc, #52]	; (8002a48 <HAL_MspInit+0x4c>)
 8002a14:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002a16:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002a1a:	607b      	str	r3, [r7, #4]
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	2300      	movs	r3, #0
 8002a20:	603b      	str	r3, [r7, #0]
 8002a22:	4b09      	ldr	r3, [pc, #36]	; (8002a48 <HAL_MspInit+0x4c>)
 8002a24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a26:	4a08      	ldr	r2, [pc, #32]	; (8002a48 <HAL_MspInit+0x4c>)
 8002a28:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002a2c:	6413      	str	r3, [r2, #64]	; 0x40
 8002a2e:	4b06      	ldr	r3, [pc, #24]	; (8002a48 <HAL_MspInit+0x4c>)
 8002a30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a32:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002a36:	603b      	str	r3, [r7, #0]
 8002a38:	683b      	ldr	r3, [r7, #0]
 8002a3a:	2007      	movs	r0, #7
 8002a3c:	f000 fbb0 	bl	80031a0 <HAL_NVIC_SetPriorityGrouping>
 8002a40:	bf00      	nop
 8002a42:	3708      	adds	r7, #8
 8002a44:	46bd      	mov	sp, r7
 8002a46:	bd80      	pop	{r7, pc}
 8002a48:	40023800 	.word	0x40023800

08002a4c <HAL_DAC_MspInit>:
 8002a4c:	b580      	push	{r7, lr}
 8002a4e:	b08a      	sub	sp, #40	; 0x28
 8002a50:	af00      	add	r7, sp, #0
 8002a52:	6078      	str	r0, [r7, #4]
 8002a54:	f107 0314 	add.w	r3, r7, #20
 8002a58:	2200      	movs	r2, #0
 8002a5a:	601a      	str	r2, [r3, #0]
 8002a5c:	605a      	str	r2, [r3, #4]
 8002a5e:	609a      	str	r2, [r3, #8]
 8002a60:	60da      	str	r2, [r3, #12]
 8002a62:	611a      	str	r2, [r3, #16]
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	4a2f      	ldr	r2, [pc, #188]	; (8002b28 <HAL_DAC_MspInit+0xdc>)
 8002a6a:	4293      	cmp	r3, r2
 8002a6c:	d158      	bne.n	8002b20 <HAL_DAC_MspInit+0xd4>
 8002a6e:	2300      	movs	r3, #0
 8002a70:	613b      	str	r3, [r7, #16]
 8002a72:	4b2e      	ldr	r3, [pc, #184]	; (8002b2c <HAL_DAC_MspInit+0xe0>)
 8002a74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a76:	4a2d      	ldr	r2, [pc, #180]	; (8002b2c <HAL_DAC_MspInit+0xe0>)
 8002a78:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8002a7c:	6413      	str	r3, [r2, #64]	; 0x40
 8002a7e:	4b2b      	ldr	r3, [pc, #172]	; (8002b2c <HAL_DAC_MspInit+0xe0>)
 8002a80:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a82:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8002a86:	613b      	str	r3, [r7, #16]
 8002a88:	693b      	ldr	r3, [r7, #16]
 8002a8a:	2300      	movs	r3, #0
 8002a8c:	60fb      	str	r3, [r7, #12]
 8002a8e:	4b27      	ldr	r3, [pc, #156]	; (8002b2c <HAL_DAC_MspInit+0xe0>)
 8002a90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a92:	4a26      	ldr	r2, [pc, #152]	; (8002b2c <HAL_DAC_MspInit+0xe0>)
 8002a94:	f043 0301 	orr.w	r3, r3, #1
 8002a98:	6313      	str	r3, [r2, #48]	; 0x30
 8002a9a:	4b24      	ldr	r3, [pc, #144]	; (8002b2c <HAL_DAC_MspInit+0xe0>)
 8002a9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a9e:	f003 0301 	and.w	r3, r3, #1
 8002aa2:	60fb      	str	r3, [r7, #12]
 8002aa4:	68fb      	ldr	r3, [r7, #12]
 8002aa6:	2310      	movs	r3, #16
 8002aa8:	617b      	str	r3, [r7, #20]
 8002aaa:	2303      	movs	r3, #3
 8002aac:	61bb      	str	r3, [r7, #24]
 8002aae:	2300      	movs	r3, #0
 8002ab0:	61fb      	str	r3, [r7, #28]
 8002ab2:	f107 0314 	add.w	r3, r7, #20
 8002ab6:	4619      	mov	r1, r3
 8002ab8:	481d      	ldr	r0, [pc, #116]	; (8002b30 <HAL_DAC_MspInit+0xe4>)
 8002aba:	f000 ff2b 	bl	8003914 <HAL_GPIO_Init>
 8002abe:	4b1d      	ldr	r3, [pc, #116]	; (8002b34 <HAL_DAC_MspInit+0xe8>)
 8002ac0:	4a1d      	ldr	r2, [pc, #116]	; (8002b38 <HAL_DAC_MspInit+0xec>)
 8002ac2:	601a      	str	r2, [r3, #0]
 8002ac4:	4b1b      	ldr	r3, [pc, #108]	; (8002b34 <HAL_DAC_MspInit+0xe8>)
 8002ac6:	f04f 6260 	mov.w	r2, #234881024	; 0xe000000
 8002aca:	605a      	str	r2, [r3, #4]
 8002acc:	4b19      	ldr	r3, [pc, #100]	; (8002b34 <HAL_DAC_MspInit+0xe8>)
 8002ace:	2240      	movs	r2, #64	; 0x40
 8002ad0:	609a      	str	r2, [r3, #8]
 8002ad2:	4b18      	ldr	r3, [pc, #96]	; (8002b34 <HAL_DAC_MspInit+0xe8>)
 8002ad4:	2200      	movs	r2, #0
 8002ad6:	60da      	str	r2, [r3, #12]
 8002ad8:	4b16      	ldr	r3, [pc, #88]	; (8002b34 <HAL_DAC_MspInit+0xe8>)
 8002ada:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002ade:	611a      	str	r2, [r3, #16]
 8002ae0:	4b14      	ldr	r3, [pc, #80]	; (8002b34 <HAL_DAC_MspInit+0xe8>)
 8002ae2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002ae6:	615a      	str	r2, [r3, #20]
 8002ae8:	4b12      	ldr	r3, [pc, #72]	; (8002b34 <HAL_DAC_MspInit+0xe8>)
 8002aea:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8002aee:	619a      	str	r2, [r3, #24]
 8002af0:	4b10      	ldr	r3, [pc, #64]	; (8002b34 <HAL_DAC_MspInit+0xe8>)
 8002af2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002af6:	61da      	str	r2, [r3, #28]
 8002af8:	4b0e      	ldr	r3, [pc, #56]	; (8002b34 <HAL_DAC_MspInit+0xe8>)
 8002afa:	2200      	movs	r2, #0
 8002afc:	621a      	str	r2, [r3, #32]
 8002afe:	4b0d      	ldr	r3, [pc, #52]	; (8002b34 <HAL_DAC_MspInit+0xe8>)
 8002b00:	2200      	movs	r2, #0
 8002b02:	625a      	str	r2, [r3, #36]	; 0x24
 8002b04:	480b      	ldr	r0, [pc, #44]	; (8002b34 <HAL_DAC_MspInit+0xe8>)
 8002b06:	f000 fbfb 	bl	8003300 <HAL_DMA_Init>
 8002b0a:	4603      	mov	r3, r0
 8002b0c:	2b00      	cmp	r3, #0
 8002b0e:	d001      	beq.n	8002b14 <HAL_DAC_MspInit+0xc8>
 8002b10:	f7ff ff6c 	bl	80029ec <Error_Handler>
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	4a07      	ldr	r2, [pc, #28]	; (8002b34 <HAL_DAC_MspInit+0xe8>)
 8002b18:	609a      	str	r2, [r3, #8]
 8002b1a:	4a06      	ldr	r2, [pc, #24]	; (8002b34 <HAL_DAC_MspInit+0xe8>)
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	6393      	str	r3, [r2, #56]	; 0x38
 8002b20:	bf00      	nop
 8002b22:	3728      	adds	r7, #40	; 0x28
 8002b24:	46bd      	mov	sp, r7
 8002b26:	bd80      	pop	{r7, pc}
 8002b28:	40007400 	.word	0x40007400
 8002b2c:	40023800 	.word	0x40023800
 8002b30:	40020000 	.word	0x40020000
 8002b34:	2000292c 	.word	0x2000292c
 8002b38:	40026088 	.word	0x40026088

08002b3c <HAL_TIM_Base_MspInit>:
 8002b3c:	b580      	push	{r7, lr}
 8002b3e:	b08c      	sub	sp, #48	; 0x30
 8002b40:	af00      	add	r7, sp, #0
 8002b42:	6078      	str	r0, [r7, #4]
 8002b44:	f107 031c 	add.w	r3, r7, #28
 8002b48:	2200      	movs	r2, #0
 8002b4a:	601a      	str	r2, [r3, #0]
 8002b4c:	605a      	str	r2, [r3, #4]
 8002b4e:	609a      	str	r2, [r3, #8]
 8002b50:	60da      	str	r2, [r3, #12]
 8002b52:	611a      	str	r2, [r3, #16]
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	681b      	ldr	r3, [r3, #0]
 8002b58:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002b5c:	d116      	bne.n	8002b8c <HAL_TIM_Base_MspInit+0x50>
 8002b5e:	2300      	movs	r3, #0
 8002b60:	61bb      	str	r3, [r7, #24]
 8002b62:	4b37      	ldr	r3, [pc, #220]	; (8002c40 <HAL_TIM_Base_MspInit+0x104>)
 8002b64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b66:	4a36      	ldr	r2, [pc, #216]	; (8002c40 <HAL_TIM_Base_MspInit+0x104>)
 8002b68:	f043 0301 	orr.w	r3, r3, #1
 8002b6c:	6413      	str	r3, [r2, #64]	; 0x40
 8002b6e:	4b34      	ldr	r3, [pc, #208]	; (8002c40 <HAL_TIM_Base_MspInit+0x104>)
 8002b70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b72:	f003 0301 	and.w	r3, r3, #1
 8002b76:	61bb      	str	r3, [r7, #24]
 8002b78:	69bb      	ldr	r3, [r7, #24]
 8002b7a:	2200      	movs	r2, #0
 8002b7c:	2100      	movs	r1, #0
 8002b7e:	201c      	movs	r0, #28
 8002b80:	f000 fb19 	bl	80031b6 <HAL_NVIC_SetPriority>
 8002b84:	201c      	movs	r0, #28
 8002b86:	f000 fb32 	bl	80031ee <HAL_NVIC_EnableIRQ>
 8002b8a:	e054      	b.n	8002c36 <HAL_TIM_Base_MspInit+0xfa>
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	681b      	ldr	r3, [r3, #0]
 8002b90:	4a2c      	ldr	r2, [pc, #176]	; (8002c44 <HAL_TIM_Base_MspInit+0x108>)
 8002b92:	4293      	cmp	r3, r2
 8002b94:	d116      	bne.n	8002bc4 <HAL_TIM_Base_MspInit+0x88>
 8002b96:	2300      	movs	r3, #0
 8002b98:	617b      	str	r3, [r7, #20]
 8002b9a:	4b29      	ldr	r3, [pc, #164]	; (8002c40 <HAL_TIM_Base_MspInit+0x104>)
 8002b9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b9e:	4a28      	ldr	r2, [pc, #160]	; (8002c40 <HAL_TIM_Base_MspInit+0x104>)
 8002ba0:	f043 0302 	orr.w	r3, r3, #2
 8002ba4:	6413      	str	r3, [r2, #64]	; 0x40
 8002ba6:	4b26      	ldr	r3, [pc, #152]	; (8002c40 <HAL_TIM_Base_MspInit+0x104>)
 8002ba8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002baa:	f003 0302 	and.w	r3, r3, #2
 8002bae:	617b      	str	r3, [r7, #20]
 8002bb0:	697b      	ldr	r3, [r7, #20]
 8002bb2:	2200      	movs	r2, #0
 8002bb4:	2100      	movs	r1, #0
 8002bb6:	201d      	movs	r0, #29
 8002bb8:	f000 fafd 	bl	80031b6 <HAL_NVIC_SetPriority>
 8002bbc:	201d      	movs	r0, #29
 8002bbe:	f000 fb16 	bl	80031ee <HAL_NVIC_EnableIRQ>
 8002bc2:	e038      	b.n	8002c36 <HAL_TIM_Base_MspInit+0xfa>
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	681b      	ldr	r3, [r3, #0]
 8002bc8:	4a1f      	ldr	r2, [pc, #124]	; (8002c48 <HAL_TIM_Base_MspInit+0x10c>)
 8002bca:	4293      	cmp	r3, r2
 8002bcc:	d133      	bne.n	8002c36 <HAL_TIM_Base_MspInit+0xfa>
 8002bce:	2300      	movs	r3, #0
 8002bd0:	613b      	str	r3, [r7, #16]
 8002bd2:	4b1b      	ldr	r3, [pc, #108]	; (8002c40 <HAL_TIM_Base_MspInit+0x104>)
 8002bd4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bd6:	4a1a      	ldr	r2, [pc, #104]	; (8002c40 <HAL_TIM_Base_MspInit+0x104>)
 8002bd8:	f043 0308 	orr.w	r3, r3, #8
 8002bdc:	6413      	str	r3, [r2, #64]	; 0x40
 8002bde:	4b18      	ldr	r3, [pc, #96]	; (8002c40 <HAL_TIM_Base_MspInit+0x104>)
 8002be0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002be2:	f003 0308 	and.w	r3, r3, #8
 8002be6:	613b      	str	r3, [r7, #16]
 8002be8:	693b      	ldr	r3, [r7, #16]
 8002bea:	2300      	movs	r3, #0
 8002bec:	60fb      	str	r3, [r7, #12]
 8002bee:	4b14      	ldr	r3, [pc, #80]	; (8002c40 <HAL_TIM_Base_MspInit+0x104>)
 8002bf0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bf2:	4a13      	ldr	r2, [pc, #76]	; (8002c40 <HAL_TIM_Base_MspInit+0x104>)
 8002bf4:	f043 0301 	orr.w	r3, r3, #1
 8002bf8:	6313      	str	r3, [r2, #48]	; 0x30
 8002bfa:	4b11      	ldr	r3, [pc, #68]	; (8002c40 <HAL_TIM_Base_MspInit+0x104>)
 8002bfc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bfe:	f003 0301 	and.w	r3, r3, #1
 8002c02:	60fb      	str	r3, [r7, #12]
 8002c04:	68fb      	ldr	r3, [r7, #12]
 8002c06:	2301      	movs	r3, #1
 8002c08:	61fb      	str	r3, [r7, #28]
 8002c0a:	2302      	movs	r3, #2
 8002c0c:	623b      	str	r3, [r7, #32]
 8002c0e:	2300      	movs	r3, #0
 8002c10:	627b      	str	r3, [r7, #36]	; 0x24
 8002c12:	2300      	movs	r3, #0
 8002c14:	62bb      	str	r3, [r7, #40]	; 0x28
 8002c16:	2302      	movs	r3, #2
 8002c18:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002c1a:	f107 031c 	add.w	r3, r7, #28
 8002c1e:	4619      	mov	r1, r3
 8002c20:	480a      	ldr	r0, [pc, #40]	; (8002c4c <HAL_TIM_Base_MspInit+0x110>)
 8002c22:	f000 fe77 	bl	8003914 <HAL_GPIO_Init>
 8002c26:	2200      	movs	r2, #0
 8002c28:	2100      	movs	r1, #0
 8002c2a:	2032      	movs	r0, #50	; 0x32
 8002c2c:	f000 fac3 	bl	80031b6 <HAL_NVIC_SetPriority>
 8002c30:	2032      	movs	r0, #50	; 0x32
 8002c32:	f000 fadc 	bl	80031ee <HAL_NVIC_EnableIRQ>
 8002c36:	bf00      	nop
 8002c38:	3730      	adds	r7, #48	; 0x30
 8002c3a:	46bd      	mov	sp, r7
 8002c3c:	bd80      	pop	{r7, pc}
 8002c3e:	bf00      	nop
 8002c40:	40023800 	.word	0x40023800
 8002c44:	40000400 	.word	0x40000400
 8002c48:	40000c00 	.word	0x40000c00
 8002c4c:	40020000 	.word	0x40020000

08002c50 <HAL_TIM_MspPostInit>:
 8002c50:	b580      	push	{r7, lr}
 8002c52:	b088      	sub	sp, #32
 8002c54:	af00      	add	r7, sp, #0
 8002c56:	6078      	str	r0, [r7, #4]
 8002c58:	f107 030c 	add.w	r3, r7, #12
 8002c5c:	2200      	movs	r2, #0
 8002c5e:	601a      	str	r2, [r3, #0]
 8002c60:	605a      	str	r2, [r3, #4]
 8002c62:	609a      	str	r2, [r3, #8]
 8002c64:	60da      	str	r2, [r3, #12]
 8002c66:	611a      	str	r2, [r3, #16]
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	681b      	ldr	r3, [r3, #0]
 8002c6c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002c70:	d11e      	bne.n	8002cb0 <HAL_TIM_MspPostInit+0x60>
 8002c72:	2300      	movs	r3, #0
 8002c74:	60bb      	str	r3, [r7, #8]
 8002c76:	4b10      	ldr	r3, [pc, #64]	; (8002cb8 <HAL_TIM_MspPostInit+0x68>)
 8002c78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c7a:	4a0f      	ldr	r2, [pc, #60]	; (8002cb8 <HAL_TIM_MspPostInit+0x68>)
 8002c7c:	f043 0301 	orr.w	r3, r3, #1
 8002c80:	6313      	str	r3, [r2, #48]	; 0x30
 8002c82:	4b0d      	ldr	r3, [pc, #52]	; (8002cb8 <HAL_TIM_MspPostInit+0x68>)
 8002c84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c86:	f003 0301 	and.w	r3, r3, #1
 8002c8a:	60bb      	str	r3, [r7, #8]
 8002c8c:	68bb      	ldr	r3, [r7, #8]
 8002c8e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002c92:	60fb      	str	r3, [r7, #12]
 8002c94:	2302      	movs	r3, #2
 8002c96:	613b      	str	r3, [r7, #16]
 8002c98:	2300      	movs	r3, #0
 8002c9a:	617b      	str	r3, [r7, #20]
 8002c9c:	2300      	movs	r3, #0
 8002c9e:	61bb      	str	r3, [r7, #24]
 8002ca0:	2301      	movs	r3, #1
 8002ca2:	61fb      	str	r3, [r7, #28]
 8002ca4:	f107 030c 	add.w	r3, r7, #12
 8002ca8:	4619      	mov	r1, r3
 8002caa:	4804      	ldr	r0, [pc, #16]	; (8002cbc <HAL_TIM_MspPostInit+0x6c>)
 8002cac:	f000 fe32 	bl	8003914 <HAL_GPIO_Init>
 8002cb0:	bf00      	nop
 8002cb2:	3720      	adds	r7, #32
 8002cb4:	46bd      	mov	sp, r7
 8002cb6:	bd80      	pop	{r7, pc}
 8002cb8:	40023800 	.word	0x40023800
 8002cbc:	40020000 	.word	0x40020000

08002cc0 <HAL_UART_MspInit>:
 8002cc0:	b580      	push	{r7, lr}
 8002cc2:	b08a      	sub	sp, #40	; 0x28
 8002cc4:	af00      	add	r7, sp, #0
 8002cc6:	6078      	str	r0, [r7, #4]
 8002cc8:	f107 0314 	add.w	r3, r7, #20
 8002ccc:	2200      	movs	r2, #0
 8002cce:	601a      	str	r2, [r3, #0]
 8002cd0:	605a      	str	r2, [r3, #4]
 8002cd2:	609a      	str	r2, [r3, #8]
 8002cd4:	60da      	str	r2, [r3, #12]
 8002cd6:	611a      	str	r2, [r3, #16]
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	681b      	ldr	r3, [r3, #0]
 8002cdc:	4a1d      	ldr	r2, [pc, #116]	; (8002d54 <HAL_UART_MspInit+0x94>)
 8002cde:	4293      	cmp	r3, r2
 8002ce0:	d133      	bne.n	8002d4a <HAL_UART_MspInit+0x8a>
 8002ce2:	2300      	movs	r3, #0
 8002ce4:	613b      	str	r3, [r7, #16]
 8002ce6:	4b1c      	ldr	r3, [pc, #112]	; (8002d58 <HAL_UART_MspInit+0x98>)
 8002ce8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002cea:	4a1b      	ldr	r2, [pc, #108]	; (8002d58 <HAL_UART_MspInit+0x98>)
 8002cec:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002cf0:	6413      	str	r3, [r2, #64]	; 0x40
 8002cf2:	4b19      	ldr	r3, [pc, #100]	; (8002d58 <HAL_UART_MspInit+0x98>)
 8002cf4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002cf6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002cfa:	613b      	str	r3, [r7, #16]
 8002cfc:	693b      	ldr	r3, [r7, #16]
 8002cfe:	2300      	movs	r3, #0
 8002d00:	60fb      	str	r3, [r7, #12]
 8002d02:	4b15      	ldr	r3, [pc, #84]	; (8002d58 <HAL_UART_MspInit+0x98>)
 8002d04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002d06:	4a14      	ldr	r2, [pc, #80]	; (8002d58 <HAL_UART_MspInit+0x98>)
 8002d08:	f043 0301 	orr.w	r3, r3, #1
 8002d0c:	6313      	str	r3, [r2, #48]	; 0x30
 8002d0e:	4b12      	ldr	r3, [pc, #72]	; (8002d58 <HAL_UART_MspInit+0x98>)
 8002d10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002d12:	f003 0301 	and.w	r3, r3, #1
 8002d16:	60fb      	str	r3, [r7, #12]
 8002d18:	68fb      	ldr	r3, [r7, #12]
 8002d1a:	230c      	movs	r3, #12
 8002d1c:	617b      	str	r3, [r7, #20]
 8002d1e:	2302      	movs	r3, #2
 8002d20:	61bb      	str	r3, [r7, #24]
 8002d22:	2300      	movs	r3, #0
 8002d24:	61fb      	str	r3, [r7, #28]
 8002d26:	2303      	movs	r3, #3
 8002d28:	623b      	str	r3, [r7, #32]
 8002d2a:	2307      	movs	r3, #7
 8002d2c:	627b      	str	r3, [r7, #36]	; 0x24
 8002d2e:	f107 0314 	add.w	r3, r7, #20
 8002d32:	4619      	mov	r1, r3
 8002d34:	4809      	ldr	r0, [pc, #36]	; (8002d5c <HAL_UART_MspInit+0x9c>)
 8002d36:	f000 fded 	bl	8003914 <HAL_GPIO_Init>
 8002d3a:	2200      	movs	r2, #0
 8002d3c:	2100      	movs	r1, #0
 8002d3e:	2026      	movs	r0, #38	; 0x26
 8002d40:	f000 fa39 	bl	80031b6 <HAL_NVIC_SetPriority>
 8002d44:	2026      	movs	r0, #38	; 0x26
 8002d46:	f000 fa52 	bl	80031ee <HAL_NVIC_EnableIRQ>
 8002d4a:	bf00      	nop
 8002d4c:	3728      	adds	r7, #40	; 0x28
 8002d4e:	46bd      	mov	sp, r7
 8002d50:	bd80      	pop	{r7, pc}
 8002d52:	bf00      	nop
 8002d54:	40004400 	.word	0x40004400
 8002d58:	40023800 	.word	0x40023800
 8002d5c:	40020000 	.word	0x40020000

08002d60 <NMI_Handler>:
 8002d60:	b480      	push	{r7}
 8002d62:	af00      	add	r7, sp, #0
 8002d64:	bf00      	nop
 8002d66:	46bd      	mov	sp, r7
 8002d68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d6c:	4770      	bx	lr

08002d6e <HardFault_Handler>:
 8002d6e:	b480      	push	{r7}
 8002d70:	af00      	add	r7, sp, #0
 8002d72:	e7fe      	b.n	8002d72 <HardFault_Handler+0x4>

08002d74 <MemManage_Handler>:
 8002d74:	b480      	push	{r7}
 8002d76:	af00      	add	r7, sp, #0
 8002d78:	e7fe      	b.n	8002d78 <MemManage_Handler+0x4>

08002d7a <BusFault_Handler>:
 8002d7a:	b480      	push	{r7}
 8002d7c:	af00      	add	r7, sp, #0
 8002d7e:	e7fe      	b.n	8002d7e <BusFault_Handler+0x4>

08002d80 <UsageFault_Handler>:
 8002d80:	b480      	push	{r7}
 8002d82:	af00      	add	r7, sp, #0
 8002d84:	e7fe      	b.n	8002d84 <UsageFault_Handler+0x4>

08002d86 <SVC_Handler>:
 8002d86:	b480      	push	{r7}
 8002d88:	af00      	add	r7, sp, #0
 8002d8a:	bf00      	nop
 8002d8c:	46bd      	mov	sp, r7
 8002d8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d92:	4770      	bx	lr

08002d94 <DebugMon_Handler>:
 8002d94:	b480      	push	{r7}
 8002d96:	af00      	add	r7, sp, #0
 8002d98:	bf00      	nop
 8002d9a:	46bd      	mov	sp, r7
 8002d9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002da0:	4770      	bx	lr

08002da2 <PendSV_Handler>:
 8002da2:	b480      	push	{r7}
 8002da4:	af00      	add	r7, sp, #0
 8002da6:	bf00      	nop
 8002da8:	46bd      	mov	sp, r7
 8002daa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dae:	4770      	bx	lr

08002db0 <SysTick_Handler>:
 8002db0:	b580      	push	{r7, lr}
 8002db2:	af00      	add	r7, sp, #0
 8002db4:	f000 f904 	bl	8002fc0 <HAL_IncTick>
 8002db8:	bf00      	nop
 8002dba:	bd80      	pop	{r7, pc}

08002dbc <DMA1_Stream5_IRQHandler>:
 8002dbc:	b580      	push	{r7, lr}
 8002dbe:	af00      	add	r7, sp, #0
 8002dc0:	4802      	ldr	r0, [pc, #8]	; (8002dcc <DMA1_Stream5_IRQHandler+0x10>)
 8002dc2:	f000 fb6d 	bl	80034a0 <HAL_DMA_IRQHandler>
 8002dc6:	bf00      	nop
 8002dc8:	bd80      	pop	{r7, pc}
 8002dca:	bf00      	nop
 8002dcc:	2000292c 	.word	0x2000292c

08002dd0 <TIM2_IRQHandler>:
 8002dd0:	b580      	push	{r7, lr}
 8002dd2:	af00      	add	r7, sp, #0
 8002dd4:	4802      	ldr	r0, [pc, #8]	; (8002de0 <TIM2_IRQHandler+0x10>)
 8002dd6:	f001 ff27 	bl	8004c28 <HAL_TIM_IRQHandler>
 8002dda:	bf00      	nop
 8002ddc:	bd80      	pop	{r7, pc}
 8002dde:	bf00      	nop
 8002de0:	200029a4 	.word	0x200029a4

08002de4 <TIM3_IRQHandler>:
 8002de4:	b580      	push	{r7, lr}
 8002de6:	af00      	add	r7, sp, #0
 8002de8:	4802      	ldr	r0, [pc, #8]	; (8002df4 <TIM3_IRQHandler+0x10>)
 8002dea:	f001 ff1d 	bl	8004c28 <HAL_TIM_IRQHandler>
 8002dee:	bf00      	nop
 8002df0:	bd80      	pop	{r7, pc}
 8002df2:	bf00      	nop
 8002df4:	200028ec 	.word	0x200028ec

08002df8 <USART2_IRQHandler>:
 8002df8:	b580      	push	{r7, lr}
 8002dfa:	af00      	add	r7, sp, #0
 8002dfc:	4802      	ldr	r0, [pc, #8]	; (8002e08 <USART2_IRQHandler+0x10>)
 8002dfe:	f003 f82d 	bl	8005e5c <HAL_UART_IRQHandler>
 8002e02:	bf00      	nop
 8002e04:	bd80      	pop	{r7, pc}
 8002e06:	bf00      	nop
 8002e08:	200029e4 	.word	0x200029e4

08002e0c <EXTI15_10_IRQHandler>:
 8002e0c:	b580      	push	{r7, lr}
 8002e0e:	af00      	add	r7, sp, #0
 8002e10:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8002e14:	f000 ff44 	bl	8003ca0 <HAL_GPIO_EXTI_IRQHandler>
 8002e18:	bf00      	nop
 8002e1a:	bd80      	pop	{r7, pc}

08002e1c <TIM5_IRQHandler>:
 8002e1c:	b580      	push	{r7, lr}
 8002e1e:	af00      	add	r7, sp, #0
 8002e20:	4802      	ldr	r0, [pc, #8]	; (8002e2c <TIM5_IRQHandler+0x10>)
 8002e22:	f001 ff01 	bl	8004c28 <HAL_TIM_IRQHandler>
 8002e26:	bf00      	nop
 8002e28:	bd80      	pop	{r7, pc}
 8002e2a:	bf00      	nop
 8002e2c:	200028ac 	.word	0x200028ac

08002e30 <_sbrk>:
 8002e30:	b580      	push	{r7, lr}
 8002e32:	b086      	sub	sp, #24
 8002e34:	af00      	add	r7, sp, #0
 8002e36:	6078      	str	r0, [r7, #4]
 8002e38:	4a14      	ldr	r2, [pc, #80]	; (8002e8c <_sbrk+0x5c>)
 8002e3a:	4b15      	ldr	r3, [pc, #84]	; (8002e90 <_sbrk+0x60>)
 8002e3c:	1ad3      	subs	r3, r2, r3
 8002e3e:	617b      	str	r3, [r7, #20]
 8002e40:	697b      	ldr	r3, [r7, #20]
 8002e42:	613b      	str	r3, [r7, #16]
 8002e44:	4b13      	ldr	r3, [pc, #76]	; (8002e94 <_sbrk+0x64>)
 8002e46:	681b      	ldr	r3, [r3, #0]
 8002e48:	2b00      	cmp	r3, #0
 8002e4a:	d102      	bne.n	8002e52 <_sbrk+0x22>
 8002e4c:	4b11      	ldr	r3, [pc, #68]	; (8002e94 <_sbrk+0x64>)
 8002e4e:	4a12      	ldr	r2, [pc, #72]	; (8002e98 <_sbrk+0x68>)
 8002e50:	601a      	str	r2, [r3, #0]
 8002e52:	4b10      	ldr	r3, [pc, #64]	; (8002e94 <_sbrk+0x64>)
 8002e54:	681a      	ldr	r2, [r3, #0]
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	4413      	add	r3, r2
 8002e5a:	693a      	ldr	r2, [r7, #16]
 8002e5c:	429a      	cmp	r2, r3
 8002e5e:	d207      	bcs.n	8002e70 <_sbrk+0x40>
 8002e60:	f003 fdf8 	bl	8006a54 <__errno>
 8002e64:	4602      	mov	r2, r0
 8002e66:	230c      	movs	r3, #12
 8002e68:	6013      	str	r3, [r2, #0]
 8002e6a:	f04f 33ff 	mov.w	r3, #4294967295
 8002e6e:	e009      	b.n	8002e84 <_sbrk+0x54>
 8002e70:	4b08      	ldr	r3, [pc, #32]	; (8002e94 <_sbrk+0x64>)
 8002e72:	681b      	ldr	r3, [r3, #0]
 8002e74:	60fb      	str	r3, [r7, #12]
 8002e76:	4b07      	ldr	r3, [pc, #28]	; (8002e94 <_sbrk+0x64>)
 8002e78:	681a      	ldr	r2, [r3, #0]
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	4413      	add	r3, r2
 8002e7e:	4a05      	ldr	r2, [pc, #20]	; (8002e94 <_sbrk+0x64>)
 8002e80:	6013      	str	r3, [r2, #0]
 8002e82:	68fb      	ldr	r3, [r7, #12]
 8002e84:	4618      	mov	r0, r3
 8002e86:	3718      	adds	r7, #24
 8002e88:	46bd      	mov	sp, r7
 8002e8a:	bd80      	pop	{r7, pc}
 8002e8c:	20020000 	.word	0x20020000
 8002e90:	00000400 	.word	0x00000400
 8002e94:	200000d8 	.word	0x200000d8
 8002e98:	200034b8 	.word	0x200034b8

08002e9c <SystemInit>:
 8002e9c:	b480      	push	{r7}
 8002e9e:	af00      	add	r7, sp, #0
 8002ea0:	4b08      	ldr	r3, [pc, #32]	; (8002ec4 <SystemInit+0x28>)
 8002ea2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002ea6:	4a07      	ldr	r2, [pc, #28]	; (8002ec4 <SystemInit+0x28>)
 8002ea8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002eac:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002eb0:	4b04      	ldr	r3, [pc, #16]	; (8002ec4 <SystemInit+0x28>)
 8002eb2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8002eb6:	609a      	str	r2, [r3, #8]
 8002eb8:	bf00      	nop
 8002eba:	46bd      	mov	sp, r7
 8002ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ec0:	4770      	bx	lr
 8002ec2:	bf00      	nop
 8002ec4:	e000ed00 	.word	0xe000ed00

08002ec8 <Reset_Handler>:
 8002ec8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002f00 <LoopFillZerobss+0x14>
 8002ecc:	2100      	movs	r1, #0
 8002ece:	e003      	b.n	8002ed8 <LoopCopyDataInit>

08002ed0 <CopyDataInit>:
 8002ed0:	4b0c      	ldr	r3, [pc, #48]	; (8002f04 <LoopFillZerobss+0x18>)
 8002ed2:	585b      	ldr	r3, [r3, r1]
 8002ed4:	5043      	str	r3, [r0, r1]
 8002ed6:	3104      	adds	r1, #4

08002ed8 <LoopCopyDataInit>:
 8002ed8:	480b      	ldr	r0, [pc, #44]	; (8002f08 <LoopFillZerobss+0x1c>)
 8002eda:	4b0c      	ldr	r3, [pc, #48]	; (8002f0c <LoopFillZerobss+0x20>)
 8002edc:	1842      	adds	r2, r0, r1
 8002ede:	429a      	cmp	r2, r3
 8002ee0:	d3f6      	bcc.n	8002ed0 <CopyDataInit>
 8002ee2:	4a0b      	ldr	r2, [pc, #44]	; (8002f10 <LoopFillZerobss+0x24>)
 8002ee4:	e002      	b.n	8002eec <LoopFillZerobss>

08002ee6 <FillZerobss>:
 8002ee6:	2300      	movs	r3, #0
 8002ee8:	f842 3b04 	str.w	r3, [r2], #4

08002eec <LoopFillZerobss>:
 8002eec:	4b09      	ldr	r3, [pc, #36]	; (8002f14 <LoopFillZerobss+0x28>)
 8002eee:	429a      	cmp	r2, r3
 8002ef0:	d3f9      	bcc.n	8002ee6 <FillZerobss>
 8002ef2:	f7ff ffd3 	bl	8002e9c <SystemInit>
 8002ef6:	f003 fdb3 	bl	8006a60 <__libc_init_array>
 8002efa:	f7ff fa03 	bl	8002304 <main>
 8002efe:	4770      	bx	lr
 8002f00:	20020000 	.word	0x20020000
 8002f04:	08008b80 	.word	0x08008b80
 8002f08:	20000000 	.word	0x20000000
 8002f0c:	20000088 	.word	0x20000088
 8002f10:	20000088 	.word	0x20000088
 8002f14:	200034b8 	.word	0x200034b8

08002f18 <ADC_IRQHandler>:
 8002f18:	e7fe      	b.n	8002f18 <ADC_IRQHandler>
	...

08002f1c <HAL_Init>:
 8002f1c:	b580      	push	{r7, lr}
 8002f1e:	af00      	add	r7, sp, #0
 8002f20:	4b0e      	ldr	r3, [pc, #56]	; (8002f5c <HAL_Init+0x40>)
 8002f22:	681b      	ldr	r3, [r3, #0]
 8002f24:	4a0d      	ldr	r2, [pc, #52]	; (8002f5c <HAL_Init+0x40>)
 8002f26:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002f2a:	6013      	str	r3, [r2, #0]
 8002f2c:	4b0b      	ldr	r3, [pc, #44]	; (8002f5c <HAL_Init+0x40>)
 8002f2e:	681b      	ldr	r3, [r3, #0]
 8002f30:	4a0a      	ldr	r2, [pc, #40]	; (8002f5c <HAL_Init+0x40>)
 8002f32:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002f36:	6013      	str	r3, [r2, #0]
 8002f38:	4b08      	ldr	r3, [pc, #32]	; (8002f5c <HAL_Init+0x40>)
 8002f3a:	681b      	ldr	r3, [r3, #0]
 8002f3c:	4a07      	ldr	r2, [pc, #28]	; (8002f5c <HAL_Init+0x40>)
 8002f3e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002f42:	6013      	str	r3, [r2, #0]
 8002f44:	2003      	movs	r0, #3
 8002f46:	f000 f92b 	bl	80031a0 <HAL_NVIC_SetPriorityGrouping>
 8002f4a:	2000      	movs	r0, #0
 8002f4c:	f000 f808 	bl	8002f60 <HAL_InitTick>
 8002f50:	f7ff fd54 	bl	80029fc <HAL_MspInit>
 8002f54:	2300      	movs	r3, #0
 8002f56:	4618      	mov	r0, r3
 8002f58:	bd80      	pop	{r7, pc}
 8002f5a:	bf00      	nop
 8002f5c:	40023c00 	.word	0x40023c00

08002f60 <HAL_InitTick>:
 8002f60:	b580      	push	{r7, lr}
 8002f62:	b082      	sub	sp, #8
 8002f64:	af00      	add	r7, sp, #0
 8002f66:	6078      	str	r0, [r7, #4]
 8002f68:	4b12      	ldr	r3, [pc, #72]	; (8002fb4 <HAL_InitTick+0x54>)
 8002f6a:	681a      	ldr	r2, [r3, #0]
 8002f6c:	4b12      	ldr	r3, [pc, #72]	; (8002fb8 <HAL_InitTick+0x58>)
 8002f6e:	781b      	ldrb	r3, [r3, #0]
 8002f70:	4619      	mov	r1, r3
 8002f72:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002f76:	fbb3 f3f1 	udiv	r3, r3, r1
 8002f7a:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f7e:	4618      	mov	r0, r3
 8002f80:	f000 f943 	bl	800320a <HAL_SYSTICK_Config>
 8002f84:	4603      	mov	r3, r0
 8002f86:	2b00      	cmp	r3, #0
 8002f88:	d001      	beq.n	8002f8e <HAL_InitTick+0x2e>
 8002f8a:	2301      	movs	r3, #1
 8002f8c:	e00e      	b.n	8002fac <HAL_InitTick+0x4c>
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	2b0f      	cmp	r3, #15
 8002f92:	d80a      	bhi.n	8002faa <HAL_InitTick+0x4a>
 8002f94:	2200      	movs	r2, #0
 8002f96:	6879      	ldr	r1, [r7, #4]
 8002f98:	f04f 30ff 	mov.w	r0, #4294967295
 8002f9c:	f000 f90b 	bl	80031b6 <HAL_NVIC_SetPriority>
 8002fa0:	4a06      	ldr	r2, [pc, #24]	; (8002fbc <HAL_InitTick+0x5c>)
 8002fa2:	687b      	ldr	r3, [r7, #4]
 8002fa4:	6013      	str	r3, [r2, #0]
 8002fa6:	2300      	movs	r3, #0
 8002fa8:	e000      	b.n	8002fac <HAL_InitTick+0x4c>
 8002faa:	2301      	movs	r3, #1
 8002fac:	4618      	mov	r0, r3
 8002fae:	3708      	adds	r7, #8
 8002fb0:	46bd      	mov	sp, r7
 8002fb2:	bd80      	pop	{r7, pc}
 8002fb4:	20000014 	.word	0x20000014
 8002fb8:	2000001c 	.word	0x2000001c
 8002fbc:	20000018 	.word	0x20000018

08002fc0 <HAL_IncTick>:
 8002fc0:	b480      	push	{r7}
 8002fc2:	af00      	add	r7, sp, #0
 8002fc4:	4b06      	ldr	r3, [pc, #24]	; (8002fe0 <HAL_IncTick+0x20>)
 8002fc6:	781b      	ldrb	r3, [r3, #0]
 8002fc8:	461a      	mov	r2, r3
 8002fca:	4b06      	ldr	r3, [pc, #24]	; (8002fe4 <HAL_IncTick+0x24>)
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	4413      	add	r3, r2
 8002fd0:	4a04      	ldr	r2, [pc, #16]	; (8002fe4 <HAL_IncTick+0x24>)
 8002fd2:	6013      	str	r3, [r2, #0]
 8002fd4:	bf00      	nop
 8002fd6:	46bd      	mov	sp, r7
 8002fd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fdc:	4770      	bx	lr
 8002fde:	bf00      	nop
 8002fe0:	2000001c 	.word	0x2000001c
 8002fe4:	200034b0 	.word	0x200034b0

08002fe8 <HAL_GetTick>:
 8002fe8:	b480      	push	{r7}
 8002fea:	af00      	add	r7, sp, #0
 8002fec:	4b03      	ldr	r3, [pc, #12]	; (8002ffc <HAL_GetTick+0x14>)
 8002fee:	681b      	ldr	r3, [r3, #0]
 8002ff0:	4618      	mov	r0, r3
 8002ff2:	46bd      	mov	sp, r7
 8002ff4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ff8:	4770      	bx	lr
 8002ffa:	bf00      	nop
 8002ffc:	200034b0 	.word	0x200034b0

08003000 <__NVIC_SetPriorityGrouping>:
 8003000:	b480      	push	{r7}
 8003002:	b085      	sub	sp, #20
 8003004:	af00      	add	r7, sp, #0
 8003006:	6078      	str	r0, [r7, #4]
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	f003 0307 	and.w	r3, r3, #7
 800300e:	60fb      	str	r3, [r7, #12]
 8003010:	4b0c      	ldr	r3, [pc, #48]	; (8003044 <__NVIC_SetPriorityGrouping+0x44>)
 8003012:	68db      	ldr	r3, [r3, #12]
 8003014:	60bb      	str	r3, [r7, #8]
 8003016:	68ba      	ldr	r2, [r7, #8]
 8003018:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800301c:	4013      	ands	r3, r2
 800301e:	60bb      	str	r3, [r7, #8]
 8003020:	68fb      	ldr	r3, [r7, #12]
 8003022:	021a      	lsls	r2, r3, #8
 8003024:	68bb      	ldr	r3, [r7, #8]
 8003026:	4313      	orrs	r3, r2
 8003028:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800302c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003030:	60bb      	str	r3, [r7, #8]
 8003032:	4a04      	ldr	r2, [pc, #16]	; (8003044 <__NVIC_SetPriorityGrouping+0x44>)
 8003034:	68bb      	ldr	r3, [r7, #8]
 8003036:	60d3      	str	r3, [r2, #12]
 8003038:	bf00      	nop
 800303a:	3714      	adds	r7, #20
 800303c:	46bd      	mov	sp, r7
 800303e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003042:	4770      	bx	lr
 8003044:	e000ed00 	.word	0xe000ed00

08003048 <__NVIC_GetPriorityGrouping>:
 8003048:	b480      	push	{r7}
 800304a:	af00      	add	r7, sp, #0
 800304c:	4b04      	ldr	r3, [pc, #16]	; (8003060 <__NVIC_GetPriorityGrouping+0x18>)
 800304e:	68db      	ldr	r3, [r3, #12]
 8003050:	0a1b      	lsrs	r3, r3, #8
 8003052:	f003 0307 	and.w	r3, r3, #7
 8003056:	4618      	mov	r0, r3
 8003058:	46bd      	mov	sp, r7
 800305a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800305e:	4770      	bx	lr
 8003060:	e000ed00 	.word	0xe000ed00

08003064 <__NVIC_EnableIRQ>:
 8003064:	b480      	push	{r7}
 8003066:	b083      	sub	sp, #12
 8003068:	af00      	add	r7, sp, #0
 800306a:	4603      	mov	r3, r0
 800306c:	71fb      	strb	r3, [r7, #7]
 800306e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003072:	2b00      	cmp	r3, #0
 8003074:	db0b      	blt.n	800308e <__NVIC_EnableIRQ+0x2a>
 8003076:	79fb      	ldrb	r3, [r7, #7]
 8003078:	f003 021f 	and.w	r2, r3, #31
 800307c:	4907      	ldr	r1, [pc, #28]	; (800309c <__NVIC_EnableIRQ+0x38>)
 800307e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003082:	095b      	lsrs	r3, r3, #5
 8003084:	2001      	movs	r0, #1
 8003086:	fa00 f202 	lsl.w	r2, r0, r2
 800308a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800308e:	bf00      	nop
 8003090:	370c      	adds	r7, #12
 8003092:	46bd      	mov	sp, r7
 8003094:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003098:	4770      	bx	lr
 800309a:	bf00      	nop
 800309c:	e000e100 	.word	0xe000e100

080030a0 <__NVIC_SetPriority>:
 80030a0:	b480      	push	{r7}
 80030a2:	b083      	sub	sp, #12
 80030a4:	af00      	add	r7, sp, #0
 80030a6:	4603      	mov	r3, r0
 80030a8:	6039      	str	r1, [r7, #0]
 80030aa:	71fb      	strb	r3, [r7, #7]
 80030ac:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80030b0:	2b00      	cmp	r3, #0
 80030b2:	db0a      	blt.n	80030ca <__NVIC_SetPriority+0x2a>
 80030b4:	683b      	ldr	r3, [r7, #0]
 80030b6:	b2da      	uxtb	r2, r3
 80030b8:	490c      	ldr	r1, [pc, #48]	; (80030ec <__NVIC_SetPriority+0x4c>)
 80030ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80030be:	0112      	lsls	r2, r2, #4
 80030c0:	b2d2      	uxtb	r2, r2
 80030c2:	440b      	add	r3, r1
 80030c4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80030c8:	e00a      	b.n	80030e0 <__NVIC_SetPriority+0x40>
 80030ca:	683b      	ldr	r3, [r7, #0]
 80030cc:	b2da      	uxtb	r2, r3
 80030ce:	4908      	ldr	r1, [pc, #32]	; (80030f0 <__NVIC_SetPriority+0x50>)
 80030d0:	79fb      	ldrb	r3, [r7, #7]
 80030d2:	f003 030f 	and.w	r3, r3, #15
 80030d6:	3b04      	subs	r3, #4
 80030d8:	0112      	lsls	r2, r2, #4
 80030da:	b2d2      	uxtb	r2, r2
 80030dc:	440b      	add	r3, r1
 80030de:	761a      	strb	r2, [r3, #24]
 80030e0:	bf00      	nop
 80030e2:	370c      	adds	r7, #12
 80030e4:	46bd      	mov	sp, r7
 80030e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030ea:	4770      	bx	lr
 80030ec:	e000e100 	.word	0xe000e100
 80030f0:	e000ed00 	.word	0xe000ed00

080030f4 <NVIC_EncodePriority>:
 80030f4:	b480      	push	{r7}
 80030f6:	b089      	sub	sp, #36	; 0x24
 80030f8:	af00      	add	r7, sp, #0
 80030fa:	60f8      	str	r0, [r7, #12]
 80030fc:	60b9      	str	r1, [r7, #8]
 80030fe:	607a      	str	r2, [r7, #4]
 8003100:	68fb      	ldr	r3, [r7, #12]
 8003102:	f003 0307 	and.w	r3, r3, #7
 8003106:	61fb      	str	r3, [r7, #28]
 8003108:	69fb      	ldr	r3, [r7, #28]
 800310a:	f1c3 0307 	rsb	r3, r3, #7
 800310e:	2b04      	cmp	r3, #4
 8003110:	bf28      	it	cs
 8003112:	2304      	movcs	r3, #4
 8003114:	61bb      	str	r3, [r7, #24]
 8003116:	69fb      	ldr	r3, [r7, #28]
 8003118:	3304      	adds	r3, #4
 800311a:	2b06      	cmp	r3, #6
 800311c:	d902      	bls.n	8003124 <NVIC_EncodePriority+0x30>
 800311e:	69fb      	ldr	r3, [r7, #28]
 8003120:	3b03      	subs	r3, #3
 8003122:	e000      	b.n	8003126 <NVIC_EncodePriority+0x32>
 8003124:	2300      	movs	r3, #0
 8003126:	617b      	str	r3, [r7, #20]
 8003128:	f04f 32ff 	mov.w	r2, #4294967295
 800312c:	69bb      	ldr	r3, [r7, #24]
 800312e:	fa02 f303 	lsl.w	r3, r2, r3
 8003132:	43da      	mvns	r2, r3
 8003134:	68bb      	ldr	r3, [r7, #8]
 8003136:	401a      	ands	r2, r3
 8003138:	697b      	ldr	r3, [r7, #20]
 800313a:	409a      	lsls	r2, r3
 800313c:	f04f 31ff 	mov.w	r1, #4294967295
 8003140:	697b      	ldr	r3, [r7, #20]
 8003142:	fa01 f303 	lsl.w	r3, r1, r3
 8003146:	43d9      	mvns	r1, r3
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	400b      	ands	r3, r1
 800314c:	4313      	orrs	r3, r2
 800314e:	4618      	mov	r0, r3
 8003150:	3724      	adds	r7, #36	; 0x24
 8003152:	46bd      	mov	sp, r7
 8003154:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003158:	4770      	bx	lr
	...

0800315c <SysTick_Config>:
 800315c:	b580      	push	{r7, lr}
 800315e:	b082      	sub	sp, #8
 8003160:	af00      	add	r7, sp, #0
 8003162:	6078      	str	r0, [r7, #4]
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	3b01      	subs	r3, #1
 8003168:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800316c:	d301      	bcc.n	8003172 <SysTick_Config+0x16>
 800316e:	2301      	movs	r3, #1
 8003170:	e00f      	b.n	8003192 <SysTick_Config+0x36>
 8003172:	4a0a      	ldr	r2, [pc, #40]	; (800319c <SysTick_Config+0x40>)
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	3b01      	subs	r3, #1
 8003178:	6053      	str	r3, [r2, #4]
 800317a:	210f      	movs	r1, #15
 800317c:	f04f 30ff 	mov.w	r0, #4294967295
 8003180:	f7ff ff8e 	bl	80030a0 <__NVIC_SetPriority>
 8003184:	4b05      	ldr	r3, [pc, #20]	; (800319c <SysTick_Config+0x40>)
 8003186:	2200      	movs	r2, #0
 8003188:	609a      	str	r2, [r3, #8]
 800318a:	4b04      	ldr	r3, [pc, #16]	; (800319c <SysTick_Config+0x40>)
 800318c:	2207      	movs	r2, #7
 800318e:	601a      	str	r2, [r3, #0]
 8003190:	2300      	movs	r3, #0
 8003192:	4618      	mov	r0, r3
 8003194:	3708      	adds	r7, #8
 8003196:	46bd      	mov	sp, r7
 8003198:	bd80      	pop	{r7, pc}
 800319a:	bf00      	nop
 800319c:	e000e010 	.word	0xe000e010

080031a0 <HAL_NVIC_SetPriorityGrouping>:
 80031a0:	b580      	push	{r7, lr}
 80031a2:	b082      	sub	sp, #8
 80031a4:	af00      	add	r7, sp, #0
 80031a6:	6078      	str	r0, [r7, #4]
 80031a8:	6878      	ldr	r0, [r7, #4]
 80031aa:	f7ff ff29 	bl	8003000 <__NVIC_SetPriorityGrouping>
 80031ae:	bf00      	nop
 80031b0:	3708      	adds	r7, #8
 80031b2:	46bd      	mov	sp, r7
 80031b4:	bd80      	pop	{r7, pc}

080031b6 <HAL_NVIC_SetPriority>:
 80031b6:	b580      	push	{r7, lr}
 80031b8:	b086      	sub	sp, #24
 80031ba:	af00      	add	r7, sp, #0
 80031bc:	4603      	mov	r3, r0
 80031be:	60b9      	str	r1, [r7, #8]
 80031c0:	607a      	str	r2, [r7, #4]
 80031c2:	73fb      	strb	r3, [r7, #15]
 80031c4:	2300      	movs	r3, #0
 80031c6:	617b      	str	r3, [r7, #20]
 80031c8:	f7ff ff3e 	bl	8003048 <__NVIC_GetPriorityGrouping>
 80031cc:	6178      	str	r0, [r7, #20]
 80031ce:	687a      	ldr	r2, [r7, #4]
 80031d0:	68b9      	ldr	r1, [r7, #8]
 80031d2:	6978      	ldr	r0, [r7, #20]
 80031d4:	f7ff ff8e 	bl	80030f4 <NVIC_EncodePriority>
 80031d8:	4602      	mov	r2, r0
 80031da:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80031de:	4611      	mov	r1, r2
 80031e0:	4618      	mov	r0, r3
 80031e2:	f7ff ff5d 	bl	80030a0 <__NVIC_SetPriority>
 80031e6:	bf00      	nop
 80031e8:	3718      	adds	r7, #24
 80031ea:	46bd      	mov	sp, r7
 80031ec:	bd80      	pop	{r7, pc}

080031ee <HAL_NVIC_EnableIRQ>:
 80031ee:	b580      	push	{r7, lr}
 80031f0:	b082      	sub	sp, #8
 80031f2:	af00      	add	r7, sp, #0
 80031f4:	4603      	mov	r3, r0
 80031f6:	71fb      	strb	r3, [r7, #7]
 80031f8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80031fc:	4618      	mov	r0, r3
 80031fe:	f7ff ff31 	bl	8003064 <__NVIC_EnableIRQ>
 8003202:	bf00      	nop
 8003204:	3708      	adds	r7, #8
 8003206:	46bd      	mov	sp, r7
 8003208:	bd80      	pop	{r7, pc}

0800320a <HAL_SYSTICK_Config>:
 800320a:	b580      	push	{r7, lr}
 800320c:	b082      	sub	sp, #8
 800320e:	af00      	add	r7, sp, #0
 8003210:	6078      	str	r0, [r7, #4]
 8003212:	6878      	ldr	r0, [r7, #4]
 8003214:	f7ff ffa2 	bl	800315c <SysTick_Config>
 8003218:	4603      	mov	r3, r0
 800321a:	4618      	mov	r0, r3
 800321c:	3708      	adds	r7, #8
 800321e:	46bd      	mov	sp, r7
 8003220:	bd80      	pop	{r7, pc}

08003222 <HAL_DAC_Init>:
 8003222:	b580      	push	{r7, lr}
 8003224:	b082      	sub	sp, #8
 8003226:	af00      	add	r7, sp, #0
 8003228:	6078      	str	r0, [r7, #4]
 800322a:	687b      	ldr	r3, [r7, #4]
 800322c:	2b00      	cmp	r3, #0
 800322e:	d101      	bne.n	8003234 <HAL_DAC_Init+0x12>
 8003230:	2301      	movs	r3, #1
 8003232:	e014      	b.n	800325e <HAL_DAC_Init+0x3c>
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	791b      	ldrb	r3, [r3, #4]
 8003238:	b2db      	uxtb	r3, r3
 800323a:	2b00      	cmp	r3, #0
 800323c:	d105      	bne.n	800324a <HAL_DAC_Init+0x28>
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	2200      	movs	r2, #0
 8003242:	715a      	strb	r2, [r3, #5]
 8003244:	6878      	ldr	r0, [r7, #4]
 8003246:	f7ff fc01 	bl	8002a4c <HAL_DAC_MspInit>
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	2202      	movs	r2, #2
 800324e:	711a      	strb	r2, [r3, #4]
 8003250:	687b      	ldr	r3, [r7, #4]
 8003252:	2200      	movs	r2, #0
 8003254:	611a      	str	r2, [r3, #16]
 8003256:	687b      	ldr	r3, [r7, #4]
 8003258:	2201      	movs	r2, #1
 800325a:	711a      	strb	r2, [r3, #4]
 800325c:	2300      	movs	r3, #0
 800325e:	4618      	mov	r0, r3
 8003260:	3708      	adds	r7, #8
 8003262:	46bd      	mov	sp, r7
 8003264:	bd80      	pop	{r7, pc}

08003266 <HAL_DAC_ConfigChannel>:
 8003266:	b480      	push	{r7}
 8003268:	b087      	sub	sp, #28
 800326a:	af00      	add	r7, sp, #0
 800326c:	60f8      	str	r0, [r7, #12]
 800326e:	60b9      	str	r1, [r7, #8]
 8003270:	607a      	str	r2, [r7, #4]
 8003272:	2300      	movs	r3, #0
 8003274:	617b      	str	r3, [r7, #20]
 8003276:	2300      	movs	r3, #0
 8003278:	613b      	str	r3, [r7, #16]
 800327a:	68fb      	ldr	r3, [r7, #12]
 800327c:	795b      	ldrb	r3, [r3, #5]
 800327e:	2b01      	cmp	r3, #1
 8003280:	d101      	bne.n	8003286 <HAL_DAC_ConfigChannel+0x20>
 8003282:	2302      	movs	r3, #2
 8003284:	e036      	b.n	80032f4 <HAL_DAC_ConfigChannel+0x8e>
 8003286:	68fb      	ldr	r3, [r7, #12]
 8003288:	2201      	movs	r2, #1
 800328a:	715a      	strb	r2, [r3, #5]
 800328c:	68fb      	ldr	r3, [r7, #12]
 800328e:	2202      	movs	r2, #2
 8003290:	711a      	strb	r2, [r3, #4]
 8003292:	68fb      	ldr	r3, [r7, #12]
 8003294:	681b      	ldr	r3, [r3, #0]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	617b      	str	r3, [r7, #20]
 800329a:	f640 72fe 	movw	r2, #4094	; 0xffe
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	fa02 f303 	lsl.w	r3, r2, r3
 80032a4:	43db      	mvns	r3, r3
 80032a6:	697a      	ldr	r2, [r7, #20]
 80032a8:	4013      	ands	r3, r2
 80032aa:	617b      	str	r3, [r7, #20]
 80032ac:	68bb      	ldr	r3, [r7, #8]
 80032ae:	681a      	ldr	r2, [r3, #0]
 80032b0:	68bb      	ldr	r3, [r7, #8]
 80032b2:	685b      	ldr	r3, [r3, #4]
 80032b4:	4313      	orrs	r3, r2
 80032b6:	613b      	str	r3, [r7, #16]
 80032b8:	693a      	ldr	r2, [r7, #16]
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	fa02 f303 	lsl.w	r3, r2, r3
 80032c0:	697a      	ldr	r2, [r7, #20]
 80032c2:	4313      	orrs	r3, r2
 80032c4:	617b      	str	r3, [r7, #20]
 80032c6:	68fb      	ldr	r3, [r7, #12]
 80032c8:	681b      	ldr	r3, [r3, #0]
 80032ca:	697a      	ldr	r2, [r7, #20]
 80032cc:	601a      	str	r2, [r3, #0]
 80032ce:	68fb      	ldr	r3, [r7, #12]
 80032d0:	681b      	ldr	r3, [r3, #0]
 80032d2:	6819      	ldr	r1, [r3, #0]
 80032d4:	22c0      	movs	r2, #192	; 0xc0
 80032d6:	687b      	ldr	r3, [r7, #4]
 80032d8:	fa02 f303 	lsl.w	r3, r2, r3
 80032dc:	43da      	mvns	r2, r3
 80032de:	68fb      	ldr	r3, [r7, #12]
 80032e0:	681b      	ldr	r3, [r3, #0]
 80032e2:	400a      	ands	r2, r1
 80032e4:	601a      	str	r2, [r3, #0]
 80032e6:	68fb      	ldr	r3, [r7, #12]
 80032e8:	2201      	movs	r2, #1
 80032ea:	711a      	strb	r2, [r3, #4]
 80032ec:	68fb      	ldr	r3, [r7, #12]
 80032ee:	2200      	movs	r2, #0
 80032f0:	715a      	strb	r2, [r3, #5]
 80032f2:	2300      	movs	r3, #0
 80032f4:	4618      	mov	r0, r3
 80032f6:	371c      	adds	r7, #28
 80032f8:	46bd      	mov	sp, r7
 80032fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032fe:	4770      	bx	lr

08003300 <HAL_DMA_Init>:
 8003300:	b580      	push	{r7, lr}
 8003302:	b086      	sub	sp, #24
 8003304:	af00      	add	r7, sp, #0
 8003306:	6078      	str	r0, [r7, #4]
 8003308:	2300      	movs	r3, #0
 800330a:	617b      	str	r3, [r7, #20]
 800330c:	f7ff fe6c 	bl	8002fe8 <HAL_GetTick>
 8003310:	6138      	str	r0, [r7, #16]
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	2b00      	cmp	r3, #0
 8003316:	d101      	bne.n	800331c <HAL_DMA_Init+0x1c>
 8003318:	2301      	movs	r3, #1
 800331a:	e099      	b.n	8003450 <HAL_DMA_Init+0x150>
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	2200      	movs	r2, #0
 8003320:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	2202      	movs	r2, #2
 8003328:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	681b      	ldr	r3, [r3, #0]
 8003330:	681a      	ldr	r2, [r3, #0]
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	681b      	ldr	r3, [r3, #0]
 8003336:	f022 0201 	bic.w	r2, r2, #1
 800333a:	601a      	str	r2, [r3, #0]
 800333c:	e00f      	b.n	800335e <HAL_DMA_Init+0x5e>
 800333e:	f7ff fe53 	bl	8002fe8 <HAL_GetTick>
 8003342:	4602      	mov	r2, r0
 8003344:	693b      	ldr	r3, [r7, #16]
 8003346:	1ad3      	subs	r3, r2, r3
 8003348:	2b05      	cmp	r3, #5
 800334a:	d908      	bls.n	800335e <HAL_DMA_Init+0x5e>
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	2220      	movs	r2, #32
 8003350:	655a      	str	r2, [r3, #84]	; 0x54
 8003352:	687b      	ldr	r3, [r7, #4]
 8003354:	2203      	movs	r2, #3
 8003356:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800335a:	2303      	movs	r3, #3
 800335c:	e078      	b.n	8003450 <HAL_DMA_Init+0x150>
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	681b      	ldr	r3, [r3, #0]
 8003362:	681b      	ldr	r3, [r3, #0]
 8003364:	f003 0301 	and.w	r3, r3, #1
 8003368:	2b00      	cmp	r3, #0
 800336a:	d1e8      	bne.n	800333e <HAL_DMA_Init+0x3e>
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	681b      	ldr	r3, [r3, #0]
 8003370:	681b      	ldr	r3, [r3, #0]
 8003372:	617b      	str	r3, [r7, #20]
 8003374:	697a      	ldr	r2, [r7, #20]
 8003376:	4b38      	ldr	r3, [pc, #224]	; (8003458 <HAL_DMA_Init+0x158>)
 8003378:	4013      	ands	r3, r2
 800337a:	617b      	str	r3, [r7, #20]
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	685a      	ldr	r2, [r3, #4]
 8003380:	687b      	ldr	r3, [r7, #4]
 8003382:	689b      	ldr	r3, [r3, #8]
 8003384:	431a      	orrs	r2, r3
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	68db      	ldr	r3, [r3, #12]
 800338a:	431a      	orrs	r2, r3
 800338c:	687b      	ldr	r3, [r7, #4]
 800338e:	691b      	ldr	r3, [r3, #16]
 8003390:	431a      	orrs	r2, r3
 8003392:	687b      	ldr	r3, [r7, #4]
 8003394:	695b      	ldr	r3, [r3, #20]
 8003396:	431a      	orrs	r2, r3
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	699b      	ldr	r3, [r3, #24]
 800339c:	431a      	orrs	r2, r3
 800339e:	687b      	ldr	r3, [r7, #4]
 80033a0:	69db      	ldr	r3, [r3, #28]
 80033a2:	431a      	orrs	r2, r3
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	6a1b      	ldr	r3, [r3, #32]
 80033a8:	4313      	orrs	r3, r2
 80033aa:	697a      	ldr	r2, [r7, #20]
 80033ac:	4313      	orrs	r3, r2
 80033ae:	617b      	str	r3, [r7, #20]
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80033b4:	2b04      	cmp	r3, #4
 80033b6:	d107      	bne.n	80033c8 <HAL_DMA_Init+0xc8>
 80033b8:	687b      	ldr	r3, [r7, #4]
 80033ba:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033c0:	4313      	orrs	r3, r2
 80033c2:	697a      	ldr	r2, [r7, #20]
 80033c4:	4313      	orrs	r3, r2
 80033c6:	617b      	str	r3, [r7, #20]
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	697a      	ldr	r2, [r7, #20]
 80033ce:	601a      	str	r2, [r3, #0]
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	681b      	ldr	r3, [r3, #0]
 80033d4:	695b      	ldr	r3, [r3, #20]
 80033d6:	617b      	str	r3, [r7, #20]
 80033d8:	697b      	ldr	r3, [r7, #20]
 80033da:	f023 0307 	bic.w	r3, r3, #7
 80033de:	617b      	str	r3, [r7, #20]
 80033e0:	687b      	ldr	r3, [r7, #4]
 80033e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80033e4:	697a      	ldr	r2, [r7, #20]
 80033e6:	4313      	orrs	r3, r2
 80033e8:	617b      	str	r3, [r7, #20]
 80033ea:	687b      	ldr	r3, [r7, #4]
 80033ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80033ee:	2b04      	cmp	r3, #4
 80033f0:	d117      	bne.n	8003422 <HAL_DMA_Init+0x122>
 80033f2:	687b      	ldr	r3, [r7, #4]
 80033f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80033f6:	697a      	ldr	r2, [r7, #20]
 80033f8:	4313      	orrs	r3, r2
 80033fa:	617b      	str	r3, [r7, #20]
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003400:	2b00      	cmp	r3, #0
 8003402:	d00e      	beq.n	8003422 <HAL_DMA_Init+0x122>
 8003404:	6878      	ldr	r0, [r7, #4]
 8003406:	f000 fa0b 	bl	8003820 <DMA_CheckFifoParam>
 800340a:	4603      	mov	r3, r0
 800340c:	2b00      	cmp	r3, #0
 800340e:	d008      	beq.n	8003422 <HAL_DMA_Init+0x122>
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	2240      	movs	r2, #64	; 0x40
 8003414:	655a      	str	r2, [r3, #84]	; 0x54
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	2201      	movs	r2, #1
 800341a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800341e:	2301      	movs	r3, #1
 8003420:	e016      	b.n	8003450 <HAL_DMA_Init+0x150>
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	681b      	ldr	r3, [r3, #0]
 8003426:	697a      	ldr	r2, [r7, #20]
 8003428:	615a      	str	r2, [r3, #20]
 800342a:	6878      	ldr	r0, [r7, #4]
 800342c:	f000 f9c2 	bl	80037b4 <DMA_CalcBaseAndBitshift>
 8003430:	4603      	mov	r3, r0
 8003432:	60fb      	str	r3, [r7, #12]
 8003434:	687b      	ldr	r3, [r7, #4]
 8003436:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003438:	223f      	movs	r2, #63	; 0x3f
 800343a:	409a      	lsls	r2, r3
 800343c:	68fb      	ldr	r3, [r7, #12]
 800343e:	609a      	str	r2, [r3, #8]
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	2200      	movs	r2, #0
 8003444:	655a      	str	r2, [r3, #84]	; 0x54
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	2201      	movs	r2, #1
 800344a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800344e:	2300      	movs	r3, #0
 8003450:	4618      	mov	r0, r3
 8003452:	3718      	adds	r7, #24
 8003454:	46bd      	mov	sp, r7
 8003456:	bd80      	pop	{r7, pc}
 8003458:	f010803f 	.word	0xf010803f

0800345c <HAL_DMA_Abort_IT>:
 800345c:	b480      	push	{r7}
 800345e:	b083      	sub	sp, #12
 8003460:	af00      	add	r7, sp, #0
 8003462:	6078      	str	r0, [r7, #4]
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800346a:	b2db      	uxtb	r3, r3
 800346c:	2b02      	cmp	r3, #2
 800346e:	d004      	beq.n	800347a <HAL_DMA_Abort_IT+0x1e>
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	2280      	movs	r2, #128	; 0x80
 8003474:	655a      	str	r2, [r3, #84]	; 0x54
 8003476:	2301      	movs	r3, #1
 8003478:	e00c      	b.n	8003494 <HAL_DMA_Abort_IT+0x38>
 800347a:	687b      	ldr	r3, [r7, #4]
 800347c:	2205      	movs	r2, #5
 800347e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	681b      	ldr	r3, [r3, #0]
 8003486:	681a      	ldr	r2, [r3, #0]
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	681b      	ldr	r3, [r3, #0]
 800348c:	f022 0201 	bic.w	r2, r2, #1
 8003490:	601a      	str	r2, [r3, #0]
 8003492:	2300      	movs	r3, #0
 8003494:	4618      	mov	r0, r3
 8003496:	370c      	adds	r7, #12
 8003498:	46bd      	mov	sp, r7
 800349a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800349e:	4770      	bx	lr

080034a0 <HAL_DMA_IRQHandler>:
 80034a0:	b580      	push	{r7, lr}
 80034a2:	b086      	sub	sp, #24
 80034a4:	af00      	add	r7, sp, #0
 80034a6:	6078      	str	r0, [r7, #4]
 80034a8:	2300      	movs	r3, #0
 80034aa:	60bb      	str	r3, [r7, #8]
 80034ac:	4b92      	ldr	r3, [pc, #584]	; (80036f8 <HAL_DMA_IRQHandler+0x258>)
 80034ae:	681b      	ldr	r3, [r3, #0]
 80034b0:	4a92      	ldr	r2, [pc, #584]	; (80036fc <HAL_DMA_IRQHandler+0x25c>)
 80034b2:	fba2 2303 	umull	r2, r3, r2, r3
 80034b6:	0a9b      	lsrs	r3, r3, #10
 80034b8:	617b      	str	r3, [r7, #20]
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80034be:	613b      	str	r3, [r7, #16]
 80034c0:	693b      	ldr	r3, [r7, #16]
 80034c2:	681b      	ldr	r3, [r3, #0]
 80034c4:	60fb      	str	r3, [r7, #12]
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80034ca:	2208      	movs	r2, #8
 80034cc:	409a      	lsls	r2, r3
 80034ce:	68fb      	ldr	r3, [r7, #12]
 80034d0:	4013      	ands	r3, r2
 80034d2:	2b00      	cmp	r3, #0
 80034d4:	d01a      	beq.n	800350c <HAL_DMA_IRQHandler+0x6c>
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	681b      	ldr	r3, [r3, #0]
 80034da:	681b      	ldr	r3, [r3, #0]
 80034dc:	f003 0304 	and.w	r3, r3, #4
 80034e0:	2b00      	cmp	r3, #0
 80034e2:	d013      	beq.n	800350c <HAL_DMA_IRQHandler+0x6c>
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	681b      	ldr	r3, [r3, #0]
 80034e8:	681a      	ldr	r2, [r3, #0]
 80034ea:	687b      	ldr	r3, [r7, #4]
 80034ec:	681b      	ldr	r3, [r3, #0]
 80034ee:	f022 0204 	bic.w	r2, r2, #4
 80034f2:	601a      	str	r2, [r3, #0]
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80034f8:	2208      	movs	r2, #8
 80034fa:	409a      	lsls	r2, r3
 80034fc:	693b      	ldr	r3, [r7, #16]
 80034fe:	609a      	str	r2, [r3, #8]
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003504:	f043 0201 	orr.w	r2, r3, #1
 8003508:	687b      	ldr	r3, [r7, #4]
 800350a:	655a      	str	r2, [r3, #84]	; 0x54
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003510:	2201      	movs	r2, #1
 8003512:	409a      	lsls	r2, r3
 8003514:	68fb      	ldr	r3, [r7, #12]
 8003516:	4013      	ands	r3, r2
 8003518:	2b00      	cmp	r3, #0
 800351a:	d012      	beq.n	8003542 <HAL_DMA_IRQHandler+0xa2>
 800351c:	687b      	ldr	r3, [r7, #4]
 800351e:	681b      	ldr	r3, [r3, #0]
 8003520:	695b      	ldr	r3, [r3, #20]
 8003522:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003526:	2b00      	cmp	r3, #0
 8003528:	d00b      	beq.n	8003542 <HAL_DMA_IRQHandler+0xa2>
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800352e:	2201      	movs	r2, #1
 8003530:	409a      	lsls	r2, r3
 8003532:	693b      	ldr	r3, [r7, #16]
 8003534:	609a      	str	r2, [r3, #8]
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800353a:	f043 0202 	orr.w	r2, r3, #2
 800353e:	687b      	ldr	r3, [r7, #4]
 8003540:	655a      	str	r2, [r3, #84]	; 0x54
 8003542:	687b      	ldr	r3, [r7, #4]
 8003544:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003546:	2204      	movs	r2, #4
 8003548:	409a      	lsls	r2, r3
 800354a:	68fb      	ldr	r3, [r7, #12]
 800354c:	4013      	ands	r3, r2
 800354e:	2b00      	cmp	r3, #0
 8003550:	d012      	beq.n	8003578 <HAL_DMA_IRQHandler+0xd8>
 8003552:	687b      	ldr	r3, [r7, #4]
 8003554:	681b      	ldr	r3, [r3, #0]
 8003556:	681b      	ldr	r3, [r3, #0]
 8003558:	f003 0302 	and.w	r3, r3, #2
 800355c:	2b00      	cmp	r3, #0
 800355e:	d00b      	beq.n	8003578 <HAL_DMA_IRQHandler+0xd8>
 8003560:	687b      	ldr	r3, [r7, #4]
 8003562:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003564:	2204      	movs	r2, #4
 8003566:	409a      	lsls	r2, r3
 8003568:	693b      	ldr	r3, [r7, #16]
 800356a:	609a      	str	r2, [r3, #8]
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003570:	f043 0204 	orr.w	r2, r3, #4
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	655a      	str	r2, [r3, #84]	; 0x54
 8003578:	687b      	ldr	r3, [r7, #4]
 800357a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800357c:	2210      	movs	r2, #16
 800357e:	409a      	lsls	r2, r3
 8003580:	68fb      	ldr	r3, [r7, #12]
 8003582:	4013      	ands	r3, r2
 8003584:	2b00      	cmp	r3, #0
 8003586:	d043      	beq.n	8003610 <HAL_DMA_IRQHandler+0x170>
 8003588:	687b      	ldr	r3, [r7, #4]
 800358a:	681b      	ldr	r3, [r3, #0]
 800358c:	681b      	ldr	r3, [r3, #0]
 800358e:	f003 0308 	and.w	r3, r3, #8
 8003592:	2b00      	cmp	r3, #0
 8003594:	d03c      	beq.n	8003610 <HAL_DMA_IRQHandler+0x170>
 8003596:	687b      	ldr	r3, [r7, #4]
 8003598:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800359a:	2210      	movs	r2, #16
 800359c:	409a      	lsls	r2, r3
 800359e:	693b      	ldr	r3, [r7, #16]
 80035a0:	609a      	str	r2, [r3, #8]
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	681b      	ldr	r3, [r3, #0]
 80035a6:	681b      	ldr	r3, [r3, #0]
 80035a8:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80035ac:	2b00      	cmp	r3, #0
 80035ae:	d018      	beq.n	80035e2 <HAL_DMA_IRQHandler+0x142>
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	681b      	ldr	r3, [r3, #0]
 80035b4:	681b      	ldr	r3, [r3, #0]
 80035b6:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80035ba:	2b00      	cmp	r3, #0
 80035bc:	d108      	bne.n	80035d0 <HAL_DMA_IRQHandler+0x130>
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035c2:	2b00      	cmp	r3, #0
 80035c4:	d024      	beq.n	8003610 <HAL_DMA_IRQHandler+0x170>
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035ca:	6878      	ldr	r0, [r7, #4]
 80035cc:	4798      	blx	r3
 80035ce:	e01f      	b.n	8003610 <HAL_DMA_IRQHandler+0x170>
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80035d4:	2b00      	cmp	r3, #0
 80035d6:	d01b      	beq.n	8003610 <HAL_DMA_IRQHandler+0x170>
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80035dc:	6878      	ldr	r0, [r7, #4]
 80035de:	4798      	blx	r3
 80035e0:	e016      	b.n	8003610 <HAL_DMA_IRQHandler+0x170>
 80035e2:	687b      	ldr	r3, [r7, #4]
 80035e4:	681b      	ldr	r3, [r3, #0]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80035ec:	2b00      	cmp	r3, #0
 80035ee:	d107      	bne.n	8003600 <HAL_DMA_IRQHandler+0x160>
 80035f0:	687b      	ldr	r3, [r7, #4]
 80035f2:	681b      	ldr	r3, [r3, #0]
 80035f4:	681a      	ldr	r2, [r3, #0]
 80035f6:	687b      	ldr	r3, [r7, #4]
 80035f8:	681b      	ldr	r3, [r3, #0]
 80035fa:	f022 0208 	bic.w	r2, r2, #8
 80035fe:	601a      	str	r2, [r3, #0]
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003604:	2b00      	cmp	r3, #0
 8003606:	d003      	beq.n	8003610 <HAL_DMA_IRQHandler+0x170>
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800360c:	6878      	ldr	r0, [r7, #4]
 800360e:	4798      	blx	r3
 8003610:	687b      	ldr	r3, [r7, #4]
 8003612:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003614:	2220      	movs	r2, #32
 8003616:	409a      	lsls	r2, r3
 8003618:	68fb      	ldr	r3, [r7, #12]
 800361a:	4013      	ands	r3, r2
 800361c:	2b00      	cmp	r3, #0
 800361e:	f000 808e 	beq.w	800373e <HAL_DMA_IRQHandler+0x29e>
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	681b      	ldr	r3, [r3, #0]
 8003628:	f003 0310 	and.w	r3, r3, #16
 800362c:	2b00      	cmp	r3, #0
 800362e:	f000 8086 	beq.w	800373e <HAL_DMA_IRQHandler+0x29e>
 8003632:	687b      	ldr	r3, [r7, #4]
 8003634:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003636:	2220      	movs	r2, #32
 8003638:	409a      	lsls	r2, r3
 800363a:	693b      	ldr	r3, [r7, #16]
 800363c:	609a      	str	r2, [r3, #8]
 800363e:	687b      	ldr	r3, [r7, #4]
 8003640:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003644:	b2db      	uxtb	r3, r3
 8003646:	2b05      	cmp	r3, #5
 8003648:	d136      	bne.n	80036b8 <HAL_DMA_IRQHandler+0x218>
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	681b      	ldr	r3, [r3, #0]
 800364e:	681a      	ldr	r2, [r3, #0]
 8003650:	687b      	ldr	r3, [r7, #4]
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	f022 0216 	bic.w	r2, r2, #22
 8003658:	601a      	str	r2, [r3, #0]
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	681b      	ldr	r3, [r3, #0]
 800365e:	695a      	ldr	r2, [r3, #20]
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	681b      	ldr	r3, [r3, #0]
 8003664:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003668:	615a      	str	r2, [r3, #20]
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800366e:	2b00      	cmp	r3, #0
 8003670:	d103      	bne.n	800367a <HAL_DMA_IRQHandler+0x1da>
 8003672:	687b      	ldr	r3, [r7, #4]
 8003674:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003676:	2b00      	cmp	r3, #0
 8003678:	d007      	beq.n	800368a <HAL_DMA_IRQHandler+0x1ea>
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	681b      	ldr	r3, [r3, #0]
 800367e:	681a      	ldr	r2, [r3, #0]
 8003680:	687b      	ldr	r3, [r7, #4]
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	f022 0208 	bic.w	r2, r2, #8
 8003688:	601a      	str	r2, [r3, #0]
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800368e:	223f      	movs	r2, #63	; 0x3f
 8003690:	409a      	lsls	r2, r3
 8003692:	693b      	ldr	r3, [r7, #16]
 8003694:	609a      	str	r2, [r3, #8]
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	2200      	movs	r2, #0
 800369a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	2201      	movs	r2, #1
 80036a2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80036a6:	687b      	ldr	r3, [r7, #4]
 80036a8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80036aa:	2b00      	cmp	r3, #0
 80036ac:	d07d      	beq.n	80037aa <HAL_DMA_IRQHandler+0x30a>
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80036b2:	6878      	ldr	r0, [r7, #4]
 80036b4:	4798      	blx	r3
 80036b6:	e078      	b.n	80037aa <HAL_DMA_IRQHandler+0x30a>
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	681b      	ldr	r3, [r3, #0]
 80036bc:	681b      	ldr	r3, [r3, #0]
 80036be:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80036c2:	2b00      	cmp	r3, #0
 80036c4:	d01c      	beq.n	8003700 <HAL_DMA_IRQHandler+0x260>
 80036c6:	687b      	ldr	r3, [r7, #4]
 80036c8:	681b      	ldr	r3, [r3, #0]
 80036ca:	681b      	ldr	r3, [r3, #0]
 80036cc:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80036d0:	2b00      	cmp	r3, #0
 80036d2:	d108      	bne.n	80036e6 <HAL_DMA_IRQHandler+0x246>
 80036d4:	687b      	ldr	r3, [r7, #4]
 80036d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80036d8:	2b00      	cmp	r3, #0
 80036da:	d030      	beq.n	800373e <HAL_DMA_IRQHandler+0x29e>
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80036e0:	6878      	ldr	r0, [r7, #4]
 80036e2:	4798      	blx	r3
 80036e4:	e02b      	b.n	800373e <HAL_DMA_IRQHandler+0x29e>
 80036e6:	687b      	ldr	r3, [r7, #4]
 80036e8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80036ea:	2b00      	cmp	r3, #0
 80036ec:	d027      	beq.n	800373e <HAL_DMA_IRQHandler+0x29e>
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80036f2:	6878      	ldr	r0, [r7, #4]
 80036f4:	4798      	blx	r3
 80036f6:	e022      	b.n	800373e <HAL_DMA_IRQHandler+0x29e>
 80036f8:	20000014 	.word	0x20000014
 80036fc:	1b4e81b5 	.word	0x1b4e81b5
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	681b      	ldr	r3, [r3, #0]
 8003704:	681b      	ldr	r3, [r3, #0]
 8003706:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800370a:	2b00      	cmp	r3, #0
 800370c:	d10f      	bne.n	800372e <HAL_DMA_IRQHandler+0x28e>
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	681b      	ldr	r3, [r3, #0]
 8003712:	681a      	ldr	r2, [r3, #0]
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	f022 0210 	bic.w	r2, r2, #16
 800371c:	601a      	str	r2, [r3, #0]
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	2200      	movs	r2, #0
 8003722:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	2201      	movs	r2, #1
 800372a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003732:	2b00      	cmp	r3, #0
 8003734:	d003      	beq.n	800373e <HAL_DMA_IRQHandler+0x29e>
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800373a:	6878      	ldr	r0, [r7, #4]
 800373c:	4798      	blx	r3
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003742:	2b00      	cmp	r3, #0
 8003744:	d032      	beq.n	80037ac <HAL_DMA_IRQHandler+0x30c>
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800374a:	f003 0301 	and.w	r3, r3, #1
 800374e:	2b00      	cmp	r3, #0
 8003750:	d022      	beq.n	8003798 <HAL_DMA_IRQHandler+0x2f8>
 8003752:	687b      	ldr	r3, [r7, #4]
 8003754:	2205      	movs	r2, #5
 8003756:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800375a:	687b      	ldr	r3, [r7, #4]
 800375c:	681b      	ldr	r3, [r3, #0]
 800375e:	681a      	ldr	r2, [r3, #0]
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	681b      	ldr	r3, [r3, #0]
 8003764:	f022 0201 	bic.w	r2, r2, #1
 8003768:	601a      	str	r2, [r3, #0]
 800376a:	68bb      	ldr	r3, [r7, #8]
 800376c:	3301      	adds	r3, #1
 800376e:	60bb      	str	r3, [r7, #8]
 8003770:	697a      	ldr	r2, [r7, #20]
 8003772:	429a      	cmp	r2, r3
 8003774:	d307      	bcc.n	8003786 <HAL_DMA_IRQHandler+0x2e6>
 8003776:	687b      	ldr	r3, [r7, #4]
 8003778:	681b      	ldr	r3, [r3, #0]
 800377a:	681b      	ldr	r3, [r3, #0]
 800377c:	f003 0301 	and.w	r3, r3, #1
 8003780:	2b00      	cmp	r3, #0
 8003782:	d1f2      	bne.n	800376a <HAL_DMA_IRQHandler+0x2ca>
 8003784:	e000      	b.n	8003788 <HAL_DMA_IRQHandler+0x2e8>
 8003786:	bf00      	nop
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	2200      	movs	r2, #0
 800378c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	2201      	movs	r2, #1
 8003794:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800379c:	2b00      	cmp	r3, #0
 800379e:	d005      	beq.n	80037ac <HAL_DMA_IRQHandler+0x30c>
 80037a0:	687b      	ldr	r3, [r7, #4]
 80037a2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80037a4:	6878      	ldr	r0, [r7, #4]
 80037a6:	4798      	blx	r3
 80037a8:	e000      	b.n	80037ac <HAL_DMA_IRQHandler+0x30c>
 80037aa:	bf00      	nop
 80037ac:	3718      	adds	r7, #24
 80037ae:	46bd      	mov	sp, r7
 80037b0:	bd80      	pop	{r7, pc}
 80037b2:	bf00      	nop

080037b4 <DMA_CalcBaseAndBitshift>:
 80037b4:	b480      	push	{r7}
 80037b6:	b085      	sub	sp, #20
 80037b8:	af00      	add	r7, sp, #0
 80037ba:	6078      	str	r0, [r7, #4]
 80037bc:	687b      	ldr	r3, [r7, #4]
 80037be:	681b      	ldr	r3, [r3, #0]
 80037c0:	b2db      	uxtb	r3, r3
 80037c2:	3b10      	subs	r3, #16
 80037c4:	4a14      	ldr	r2, [pc, #80]	; (8003818 <DMA_CalcBaseAndBitshift+0x64>)
 80037c6:	fba2 2303 	umull	r2, r3, r2, r3
 80037ca:	091b      	lsrs	r3, r3, #4
 80037cc:	60fb      	str	r3, [r7, #12]
 80037ce:	4a13      	ldr	r2, [pc, #76]	; (800381c <DMA_CalcBaseAndBitshift+0x68>)
 80037d0:	68fb      	ldr	r3, [r7, #12]
 80037d2:	4413      	add	r3, r2
 80037d4:	781b      	ldrb	r3, [r3, #0]
 80037d6:	461a      	mov	r2, r3
 80037d8:	687b      	ldr	r3, [r7, #4]
 80037da:	65da      	str	r2, [r3, #92]	; 0x5c
 80037dc:	68fb      	ldr	r3, [r7, #12]
 80037de:	2b03      	cmp	r3, #3
 80037e0:	d909      	bls.n	80037f6 <DMA_CalcBaseAndBitshift+0x42>
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	681b      	ldr	r3, [r3, #0]
 80037e6:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80037ea:	f023 0303 	bic.w	r3, r3, #3
 80037ee:	1d1a      	adds	r2, r3, #4
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	659a      	str	r2, [r3, #88]	; 0x58
 80037f4:	e007      	b.n	8003806 <DMA_CalcBaseAndBitshift+0x52>
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	681b      	ldr	r3, [r3, #0]
 80037fa:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80037fe:	f023 0303 	bic.w	r3, r3, #3
 8003802:	687a      	ldr	r2, [r7, #4]
 8003804:	6593      	str	r3, [r2, #88]	; 0x58
 8003806:	687b      	ldr	r3, [r7, #4]
 8003808:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800380a:	4618      	mov	r0, r3
 800380c:	3714      	adds	r7, #20
 800380e:	46bd      	mov	sp, r7
 8003810:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003814:	4770      	bx	lr
 8003816:	bf00      	nop
 8003818:	aaaaaaab 	.word	0xaaaaaaab
 800381c:	08008af0 	.word	0x08008af0

08003820 <DMA_CheckFifoParam>:
 8003820:	b480      	push	{r7}
 8003822:	b085      	sub	sp, #20
 8003824:	af00      	add	r7, sp, #0
 8003826:	6078      	str	r0, [r7, #4]
 8003828:	2300      	movs	r3, #0
 800382a:	73fb      	strb	r3, [r7, #15]
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003830:	60bb      	str	r3, [r7, #8]
 8003832:	687b      	ldr	r3, [r7, #4]
 8003834:	699b      	ldr	r3, [r3, #24]
 8003836:	2b00      	cmp	r3, #0
 8003838:	d11f      	bne.n	800387a <DMA_CheckFifoParam+0x5a>
 800383a:	68bb      	ldr	r3, [r7, #8]
 800383c:	2b03      	cmp	r3, #3
 800383e:	d855      	bhi.n	80038ec <DMA_CheckFifoParam+0xcc>
 8003840:	a201      	add	r2, pc, #4	; (adr r2, 8003848 <DMA_CheckFifoParam+0x28>)
 8003842:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003846:	bf00      	nop
 8003848:	08003859 	.word	0x08003859
 800384c:	0800386b 	.word	0x0800386b
 8003850:	08003859 	.word	0x08003859
 8003854:	080038ed 	.word	0x080038ed
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800385c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003860:	2b00      	cmp	r3, #0
 8003862:	d045      	beq.n	80038f0 <DMA_CheckFifoParam+0xd0>
 8003864:	2301      	movs	r3, #1
 8003866:	73fb      	strb	r3, [r7, #15]
 8003868:	e042      	b.n	80038f0 <DMA_CheckFifoParam+0xd0>
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800386e:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8003872:	d13f      	bne.n	80038f4 <DMA_CheckFifoParam+0xd4>
 8003874:	2301      	movs	r3, #1
 8003876:	73fb      	strb	r3, [r7, #15]
 8003878:	e03c      	b.n	80038f4 <DMA_CheckFifoParam+0xd4>
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	699b      	ldr	r3, [r3, #24]
 800387e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003882:	d121      	bne.n	80038c8 <DMA_CheckFifoParam+0xa8>
 8003884:	68bb      	ldr	r3, [r7, #8]
 8003886:	2b03      	cmp	r3, #3
 8003888:	d836      	bhi.n	80038f8 <DMA_CheckFifoParam+0xd8>
 800388a:	a201      	add	r2, pc, #4	; (adr r2, 8003890 <DMA_CheckFifoParam+0x70>)
 800388c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003890:	080038a1 	.word	0x080038a1
 8003894:	080038a7 	.word	0x080038a7
 8003898:	080038a1 	.word	0x080038a1
 800389c:	080038b9 	.word	0x080038b9
 80038a0:	2301      	movs	r3, #1
 80038a2:	73fb      	strb	r3, [r7, #15]
 80038a4:	e02f      	b.n	8003906 <DMA_CheckFifoParam+0xe6>
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80038aa:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	d024      	beq.n	80038fc <DMA_CheckFifoParam+0xdc>
 80038b2:	2301      	movs	r3, #1
 80038b4:	73fb      	strb	r3, [r7, #15]
 80038b6:	e021      	b.n	80038fc <DMA_CheckFifoParam+0xdc>
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80038bc:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80038c0:	d11e      	bne.n	8003900 <DMA_CheckFifoParam+0xe0>
 80038c2:	2301      	movs	r3, #1
 80038c4:	73fb      	strb	r3, [r7, #15]
 80038c6:	e01b      	b.n	8003900 <DMA_CheckFifoParam+0xe0>
 80038c8:	68bb      	ldr	r3, [r7, #8]
 80038ca:	2b02      	cmp	r3, #2
 80038cc:	d902      	bls.n	80038d4 <DMA_CheckFifoParam+0xb4>
 80038ce:	2b03      	cmp	r3, #3
 80038d0:	d003      	beq.n	80038da <DMA_CheckFifoParam+0xba>
 80038d2:	e018      	b.n	8003906 <DMA_CheckFifoParam+0xe6>
 80038d4:	2301      	movs	r3, #1
 80038d6:	73fb      	strb	r3, [r7, #15]
 80038d8:	e015      	b.n	8003906 <DMA_CheckFifoParam+0xe6>
 80038da:	687b      	ldr	r3, [r7, #4]
 80038dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80038de:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80038e2:	2b00      	cmp	r3, #0
 80038e4:	d00e      	beq.n	8003904 <DMA_CheckFifoParam+0xe4>
 80038e6:	2301      	movs	r3, #1
 80038e8:	73fb      	strb	r3, [r7, #15]
 80038ea:	e00b      	b.n	8003904 <DMA_CheckFifoParam+0xe4>
 80038ec:	bf00      	nop
 80038ee:	e00a      	b.n	8003906 <DMA_CheckFifoParam+0xe6>
 80038f0:	bf00      	nop
 80038f2:	e008      	b.n	8003906 <DMA_CheckFifoParam+0xe6>
 80038f4:	bf00      	nop
 80038f6:	e006      	b.n	8003906 <DMA_CheckFifoParam+0xe6>
 80038f8:	bf00      	nop
 80038fa:	e004      	b.n	8003906 <DMA_CheckFifoParam+0xe6>
 80038fc:	bf00      	nop
 80038fe:	e002      	b.n	8003906 <DMA_CheckFifoParam+0xe6>
 8003900:	bf00      	nop
 8003902:	e000      	b.n	8003906 <DMA_CheckFifoParam+0xe6>
 8003904:	bf00      	nop
 8003906:	7bfb      	ldrb	r3, [r7, #15]
 8003908:	4618      	mov	r0, r3
 800390a:	3714      	adds	r7, #20
 800390c:	46bd      	mov	sp, r7
 800390e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003912:	4770      	bx	lr

08003914 <HAL_GPIO_Init>:
 8003914:	b480      	push	{r7}
 8003916:	b089      	sub	sp, #36	; 0x24
 8003918:	af00      	add	r7, sp, #0
 800391a:	6078      	str	r0, [r7, #4]
 800391c:	6039      	str	r1, [r7, #0]
 800391e:	2300      	movs	r3, #0
 8003920:	617b      	str	r3, [r7, #20]
 8003922:	2300      	movs	r3, #0
 8003924:	613b      	str	r3, [r7, #16]
 8003926:	2300      	movs	r3, #0
 8003928:	61bb      	str	r3, [r7, #24]
 800392a:	2300      	movs	r3, #0
 800392c:	61fb      	str	r3, [r7, #28]
 800392e:	e165      	b.n	8003bfc <HAL_GPIO_Init+0x2e8>
 8003930:	2201      	movs	r2, #1
 8003932:	69fb      	ldr	r3, [r7, #28]
 8003934:	fa02 f303 	lsl.w	r3, r2, r3
 8003938:	617b      	str	r3, [r7, #20]
 800393a:	683b      	ldr	r3, [r7, #0]
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	697a      	ldr	r2, [r7, #20]
 8003940:	4013      	ands	r3, r2
 8003942:	613b      	str	r3, [r7, #16]
 8003944:	693a      	ldr	r2, [r7, #16]
 8003946:	697b      	ldr	r3, [r7, #20]
 8003948:	429a      	cmp	r2, r3
 800394a:	f040 8154 	bne.w	8003bf6 <HAL_GPIO_Init+0x2e2>
 800394e:	683b      	ldr	r3, [r7, #0]
 8003950:	685b      	ldr	r3, [r3, #4]
 8003952:	2b01      	cmp	r3, #1
 8003954:	d00b      	beq.n	800396e <HAL_GPIO_Init+0x5a>
 8003956:	683b      	ldr	r3, [r7, #0]
 8003958:	685b      	ldr	r3, [r3, #4]
 800395a:	2b02      	cmp	r3, #2
 800395c:	d007      	beq.n	800396e <HAL_GPIO_Init+0x5a>
 800395e:	683b      	ldr	r3, [r7, #0]
 8003960:	685b      	ldr	r3, [r3, #4]
 8003962:	2b11      	cmp	r3, #17
 8003964:	d003      	beq.n	800396e <HAL_GPIO_Init+0x5a>
 8003966:	683b      	ldr	r3, [r7, #0]
 8003968:	685b      	ldr	r3, [r3, #4]
 800396a:	2b12      	cmp	r3, #18
 800396c:	d130      	bne.n	80039d0 <HAL_GPIO_Init+0xbc>
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	689b      	ldr	r3, [r3, #8]
 8003972:	61bb      	str	r3, [r7, #24]
 8003974:	69fb      	ldr	r3, [r7, #28]
 8003976:	005b      	lsls	r3, r3, #1
 8003978:	2203      	movs	r2, #3
 800397a:	fa02 f303 	lsl.w	r3, r2, r3
 800397e:	43db      	mvns	r3, r3
 8003980:	69ba      	ldr	r2, [r7, #24]
 8003982:	4013      	ands	r3, r2
 8003984:	61bb      	str	r3, [r7, #24]
 8003986:	683b      	ldr	r3, [r7, #0]
 8003988:	68da      	ldr	r2, [r3, #12]
 800398a:	69fb      	ldr	r3, [r7, #28]
 800398c:	005b      	lsls	r3, r3, #1
 800398e:	fa02 f303 	lsl.w	r3, r2, r3
 8003992:	69ba      	ldr	r2, [r7, #24]
 8003994:	4313      	orrs	r3, r2
 8003996:	61bb      	str	r3, [r7, #24]
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	69ba      	ldr	r2, [r7, #24]
 800399c:	609a      	str	r2, [r3, #8]
 800399e:	687b      	ldr	r3, [r7, #4]
 80039a0:	685b      	ldr	r3, [r3, #4]
 80039a2:	61bb      	str	r3, [r7, #24]
 80039a4:	2201      	movs	r2, #1
 80039a6:	69fb      	ldr	r3, [r7, #28]
 80039a8:	fa02 f303 	lsl.w	r3, r2, r3
 80039ac:	43db      	mvns	r3, r3
 80039ae:	69ba      	ldr	r2, [r7, #24]
 80039b0:	4013      	ands	r3, r2
 80039b2:	61bb      	str	r3, [r7, #24]
 80039b4:	683b      	ldr	r3, [r7, #0]
 80039b6:	685b      	ldr	r3, [r3, #4]
 80039b8:	091b      	lsrs	r3, r3, #4
 80039ba:	f003 0201 	and.w	r2, r3, #1
 80039be:	69fb      	ldr	r3, [r7, #28]
 80039c0:	fa02 f303 	lsl.w	r3, r2, r3
 80039c4:	69ba      	ldr	r2, [r7, #24]
 80039c6:	4313      	orrs	r3, r2
 80039c8:	61bb      	str	r3, [r7, #24]
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	69ba      	ldr	r2, [r7, #24]
 80039ce:	605a      	str	r2, [r3, #4]
 80039d0:	687b      	ldr	r3, [r7, #4]
 80039d2:	68db      	ldr	r3, [r3, #12]
 80039d4:	61bb      	str	r3, [r7, #24]
 80039d6:	69fb      	ldr	r3, [r7, #28]
 80039d8:	005b      	lsls	r3, r3, #1
 80039da:	2203      	movs	r2, #3
 80039dc:	fa02 f303 	lsl.w	r3, r2, r3
 80039e0:	43db      	mvns	r3, r3
 80039e2:	69ba      	ldr	r2, [r7, #24]
 80039e4:	4013      	ands	r3, r2
 80039e6:	61bb      	str	r3, [r7, #24]
 80039e8:	683b      	ldr	r3, [r7, #0]
 80039ea:	689a      	ldr	r2, [r3, #8]
 80039ec:	69fb      	ldr	r3, [r7, #28]
 80039ee:	005b      	lsls	r3, r3, #1
 80039f0:	fa02 f303 	lsl.w	r3, r2, r3
 80039f4:	69ba      	ldr	r2, [r7, #24]
 80039f6:	4313      	orrs	r3, r2
 80039f8:	61bb      	str	r3, [r7, #24]
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	69ba      	ldr	r2, [r7, #24]
 80039fe:	60da      	str	r2, [r3, #12]
 8003a00:	683b      	ldr	r3, [r7, #0]
 8003a02:	685b      	ldr	r3, [r3, #4]
 8003a04:	2b02      	cmp	r3, #2
 8003a06:	d003      	beq.n	8003a10 <HAL_GPIO_Init+0xfc>
 8003a08:	683b      	ldr	r3, [r7, #0]
 8003a0a:	685b      	ldr	r3, [r3, #4]
 8003a0c:	2b12      	cmp	r3, #18
 8003a0e:	d123      	bne.n	8003a58 <HAL_GPIO_Init+0x144>
 8003a10:	69fb      	ldr	r3, [r7, #28]
 8003a12:	08da      	lsrs	r2, r3, #3
 8003a14:	687b      	ldr	r3, [r7, #4]
 8003a16:	3208      	adds	r2, #8
 8003a18:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003a1c:	61bb      	str	r3, [r7, #24]
 8003a1e:	69fb      	ldr	r3, [r7, #28]
 8003a20:	f003 0307 	and.w	r3, r3, #7
 8003a24:	009b      	lsls	r3, r3, #2
 8003a26:	220f      	movs	r2, #15
 8003a28:	fa02 f303 	lsl.w	r3, r2, r3
 8003a2c:	43db      	mvns	r3, r3
 8003a2e:	69ba      	ldr	r2, [r7, #24]
 8003a30:	4013      	ands	r3, r2
 8003a32:	61bb      	str	r3, [r7, #24]
 8003a34:	683b      	ldr	r3, [r7, #0]
 8003a36:	691a      	ldr	r2, [r3, #16]
 8003a38:	69fb      	ldr	r3, [r7, #28]
 8003a3a:	f003 0307 	and.w	r3, r3, #7
 8003a3e:	009b      	lsls	r3, r3, #2
 8003a40:	fa02 f303 	lsl.w	r3, r2, r3
 8003a44:	69ba      	ldr	r2, [r7, #24]
 8003a46:	4313      	orrs	r3, r2
 8003a48:	61bb      	str	r3, [r7, #24]
 8003a4a:	69fb      	ldr	r3, [r7, #28]
 8003a4c:	08da      	lsrs	r2, r3, #3
 8003a4e:	687b      	ldr	r3, [r7, #4]
 8003a50:	3208      	adds	r2, #8
 8003a52:	69b9      	ldr	r1, [r7, #24]
 8003a54:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	681b      	ldr	r3, [r3, #0]
 8003a5c:	61bb      	str	r3, [r7, #24]
 8003a5e:	69fb      	ldr	r3, [r7, #28]
 8003a60:	005b      	lsls	r3, r3, #1
 8003a62:	2203      	movs	r2, #3
 8003a64:	fa02 f303 	lsl.w	r3, r2, r3
 8003a68:	43db      	mvns	r3, r3
 8003a6a:	69ba      	ldr	r2, [r7, #24]
 8003a6c:	4013      	ands	r3, r2
 8003a6e:	61bb      	str	r3, [r7, #24]
 8003a70:	683b      	ldr	r3, [r7, #0]
 8003a72:	685b      	ldr	r3, [r3, #4]
 8003a74:	f003 0203 	and.w	r2, r3, #3
 8003a78:	69fb      	ldr	r3, [r7, #28]
 8003a7a:	005b      	lsls	r3, r3, #1
 8003a7c:	fa02 f303 	lsl.w	r3, r2, r3
 8003a80:	69ba      	ldr	r2, [r7, #24]
 8003a82:	4313      	orrs	r3, r2
 8003a84:	61bb      	str	r3, [r7, #24]
 8003a86:	687b      	ldr	r3, [r7, #4]
 8003a88:	69ba      	ldr	r2, [r7, #24]
 8003a8a:	601a      	str	r2, [r3, #0]
 8003a8c:	683b      	ldr	r3, [r7, #0]
 8003a8e:	685b      	ldr	r3, [r3, #4]
 8003a90:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003a94:	2b00      	cmp	r3, #0
 8003a96:	f000 80ae 	beq.w	8003bf6 <HAL_GPIO_Init+0x2e2>
 8003a9a:	2300      	movs	r3, #0
 8003a9c:	60fb      	str	r3, [r7, #12]
 8003a9e:	4b5c      	ldr	r3, [pc, #368]	; (8003c10 <HAL_GPIO_Init+0x2fc>)
 8003aa0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003aa2:	4a5b      	ldr	r2, [pc, #364]	; (8003c10 <HAL_GPIO_Init+0x2fc>)
 8003aa4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003aa8:	6453      	str	r3, [r2, #68]	; 0x44
 8003aaa:	4b59      	ldr	r3, [pc, #356]	; (8003c10 <HAL_GPIO_Init+0x2fc>)
 8003aac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003aae:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003ab2:	60fb      	str	r3, [r7, #12]
 8003ab4:	68fb      	ldr	r3, [r7, #12]
 8003ab6:	4a57      	ldr	r2, [pc, #348]	; (8003c14 <HAL_GPIO_Init+0x300>)
 8003ab8:	69fb      	ldr	r3, [r7, #28]
 8003aba:	089b      	lsrs	r3, r3, #2
 8003abc:	3302      	adds	r3, #2
 8003abe:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003ac2:	61bb      	str	r3, [r7, #24]
 8003ac4:	69fb      	ldr	r3, [r7, #28]
 8003ac6:	f003 0303 	and.w	r3, r3, #3
 8003aca:	009b      	lsls	r3, r3, #2
 8003acc:	220f      	movs	r2, #15
 8003ace:	fa02 f303 	lsl.w	r3, r2, r3
 8003ad2:	43db      	mvns	r3, r3
 8003ad4:	69ba      	ldr	r2, [r7, #24]
 8003ad6:	4013      	ands	r3, r2
 8003ad8:	61bb      	str	r3, [r7, #24]
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	4a4e      	ldr	r2, [pc, #312]	; (8003c18 <HAL_GPIO_Init+0x304>)
 8003ade:	4293      	cmp	r3, r2
 8003ae0:	d025      	beq.n	8003b2e <HAL_GPIO_Init+0x21a>
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	4a4d      	ldr	r2, [pc, #308]	; (8003c1c <HAL_GPIO_Init+0x308>)
 8003ae6:	4293      	cmp	r3, r2
 8003ae8:	d01f      	beq.n	8003b2a <HAL_GPIO_Init+0x216>
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	4a4c      	ldr	r2, [pc, #304]	; (8003c20 <HAL_GPIO_Init+0x30c>)
 8003aee:	4293      	cmp	r3, r2
 8003af0:	d019      	beq.n	8003b26 <HAL_GPIO_Init+0x212>
 8003af2:	687b      	ldr	r3, [r7, #4]
 8003af4:	4a4b      	ldr	r2, [pc, #300]	; (8003c24 <HAL_GPIO_Init+0x310>)
 8003af6:	4293      	cmp	r3, r2
 8003af8:	d013      	beq.n	8003b22 <HAL_GPIO_Init+0x20e>
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	4a4a      	ldr	r2, [pc, #296]	; (8003c28 <HAL_GPIO_Init+0x314>)
 8003afe:	4293      	cmp	r3, r2
 8003b00:	d00d      	beq.n	8003b1e <HAL_GPIO_Init+0x20a>
 8003b02:	687b      	ldr	r3, [r7, #4]
 8003b04:	4a49      	ldr	r2, [pc, #292]	; (8003c2c <HAL_GPIO_Init+0x318>)
 8003b06:	4293      	cmp	r3, r2
 8003b08:	d007      	beq.n	8003b1a <HAL_GPIO_Init+0x206>
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	4a48      	ldr	r2, [pc, #288]	; (8003c30 <HAL_GPIO_Init+0x31c>)
 8003b0e:	4293      	cmp	r3, r2
 8003b10:	d101      	bne.n	8003b16 <HAL_GPIO_Init+0x202>
 8003b12:	2306      	movs	r3, #6
 8003b14:	e00c      	b.n	8003b30 <HAL_GPIO_Init+0x21c>
 8003b16:	2307      	movs	r3, #7
 8003b18:	e00a      	b.n	8003b30 <HAL_GPIO_Init+0x21c>
 8003b1a:	2305      	movs	r3, #5
 8003b1c:	e008      	b.n	8003b30 <HAL_GPIO_Init+0x21c>
 8003b1e:	2304      	movs	r3, #4
 8003b20:	e006      	b.n	8003b30 <HAL_GPIO_Init+0x21c>
 8003b22:	2303      	movs	r3, #3
 8003b24:	e004      	b.n	8003b30 <HAL_GPIO_Init+0x21c>
 8003b26:	2302      	movs	r3, #2
 8003b28:	e002      	b.n	8003b30 <HAL_GPIO_Init+0x21c>
 8003b2a:	2301      	movs	r3, #1
 8003b2c:	e000      	b.n	8003b30 <HAL_GPIO_Init+0x21c>
 8003b2e:	2300      	movs	r3, #0
 8003b30:	69fa      	ldr	r2, [r7, #28]
 8003b32:	f002 0203 	and.w	r2, r2, #3
 8003b36:	0092      	lsls	r2, r2, #2
 8003b38:	4093      	lsls	r3, r2
 8003b3a:	69ba      	ldr	r2, [r7, #24]
 8003b3c:	4313      	orrs	r3, r2
 8003b3e:	61bb      	str	r3, [r7, #24]
 8003b40:	4934      	ldr	r1, [pc, #208]	; (8003c14 <HAL_GPIO_Init+0x300>)
 8003b42:	69fb      	ldr	r3, [r7, #28]
 8003b44:	089b      	lsrs	r3, r3, #2
 8003b46:	3302      	adds	r3, #2
 8003b48:	69ba      	ldr	r2, [r7, #24]
 8003b4a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003b4e:	4b39      	ldr	r3, [pc, #228]	; (8003c34 <HAL_GPIO_Init+0x320>)
 8003b50:	681b      	ldr	r3, [r3, #0]
 8003b52:	61bb      	str	r3, [r7, #24]
 8003b54:	693b      	ldr	r3, [r7, #16]
 8003b56:	43db      	mvns	r3, r3
 8003b58:	69ba      	ldr	r2, [r7, #24]
 8003b5a:	4013      	ands	r3, r2
 8003b5c:	61bb      	str	r3, [r7, #24]
 8003b5e:	683b      	ldr	r3, [r7, #0]
 8003b60:	685b      	ldr	r3, [r3, #4]
 8003b62:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003b66:	2b00      	cmp	r3, #0
 8003b68:	d003      	beq.n	8003b72 <HAL_GPIO_Init+0x25e>
 8003b6a:	69ba      	ldr	r2, [r7, #24]
 8003b6c:	693b      	ldr	r3, [r7, #16]
 8003b6e:	4313      	orrs	r3, r2
 8003b70:	61bb      	str	r3, [r7, #24]
 8003b72:	4a30      	ldr	r2, [pc, #192]	; (8003c34 <HAL_GPIO_Init+0x320>)
 8003b74:	69bb      	ldr	r3, [r7, #24]
 8003b76:	6013      	str	r3, [r2, #0]
 8003b78:	4b2e      	ldr	r3, [pc, #184]	; (8003c34 <HAL_GPIO_Init+0x320>)
 8003b7a:	685b      	ldr	r3, [r3, #4]
 8003b7c:	61bb      	str	r3, [r7, #24]
 8003b7e:	693b      	ldr	r3, [r7, #16]
 8003b80:	43db      	mvns	r3, r3
 8003b82:	69ba      	ldr	r2, [r7, #24]
 8003b84:	4013      	ands	r3, r2
 8003b86:	61bb      	str	r3, [r7, #24]
 8003b88:	683b      	ldr	r3, [r7, #0]
 8003b8a:	685b      	ldr	r3, [r3, #4]
 8003b8c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003b90:	2b00      	cmp	r3, #0
 8003b92:	d003      	beq.n	8003b9c <HAL_GPIO_Init+0x288>
 8003b94:	69ba      	ldr	r2, [r7, #24]
 8003b96:	693b      	ldr	r3, [r7, #16]
 8003b98:	4313      	orrs	r3, r2
 8003b9a:	61bb      	str	r3, [r7, #24]
 8003b9c:	4a25      	ldr	r2, [pc, #148]	; (8003c34 <HAL_GPIO_Init+0x320>)
 8003b9e:	69bb      	ldr	r3, [r7, #24]
 8003ba0:	6053      	str	r3, [r2, #4]
 8003ba2:	4b24      	ldr	r3, [pc, #144]	; (8003c34 <HAL_GPIO_Init+0x320>)
 8003ba4:	689b      	ldr	r3, [r3, #8]
 8003ba6:	61bb      	str	r3, [r7, #24]
 8003ba8:	693b      	ldr	r3, [r7, #16]
 8003baa:	43db      	mvns	r3, r3
 8003bac:	69ba      	ldr	r2, [r7, #24]
 8003bae:	4013      	ands	r3, r2
 8003bb0:	61bb      	str	r3, [r7, #24]
 8003bb2:	683b      	ldr	r3, [r7, #0]
 8003bb4:	685b      	ldr	r3, [r3, #4]
 8003bb6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003bba:	2b00      	cmp	r3, #0
 8003bbc:	d003      	beq.n	8003bc6 <HAL_GPIO_Init+0x2b2>
 8003bbe:	69ba      	ldr	r2, [r7, #24]
 8003bc0:	693b      	ldr	r3, [r7, #16]
 8003bc2:	4313      	orrs	r3, r2
 8003bc4:	61bb      	str	r3, [r7, #24]
 8003bc6:	4a1b      	ldr	r2, [pc, #108]	; (8003c34 <HAL_GPIO_Init+0x320>)
 8003bc8:	69bb      	ldr	r3, [r7, #24]
 8003bca:	6093      	str	r3, [r2, #8]
 8003bcc:	4b19      	ldr	r3, [pc, #100]	; (8003c34 <HAL_GPIO_Init+0x320>)
 8003bce:	68db      	ldr	r3, [r3, #12]
 8003bd0:	61bb      	str	r3, [r7, #24]
 8003bd2:	693b      	ldr	r3, [r7, #16]
 8003bd4:	43db      	mvns	r3, r3
 8003bd6:	69ba      	ldr	r2, [r7, #24]
 8003bd8:	4013      	ands	r3, r2
 8003bda:	61bb      	str	r3, [r7, #24]
 8003bdc:	683b      	ldr	r3, [r7, #0]
 8003bde:	685b      	ldr	r3, [r3, #4]
 8003be0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003be4:	2b00      	cmp	r3, #0
 8003be6:	d003      	beq.n	8003bf0 <HAL_GPIO_Init+0x2dc>
 8003be8:	69ba      	ldr	r2, [r7, #24]
 8003bea:	693b      	ldr	r3, [r7, #16]
 8003bec:	4313      	orrs	r3, r2
 8003bee:	61bb      	str	r3, [r7, #24]
 8003bf0:	4a10      	ldr	r2, [pc, #64]	; (8003c34 <HAL_GPIO_Init+0x320>)
 8003bf2:	69bb      	ldr	r3, [r7, #24]
 8003bf4:	60d3      	str	r3, [r2, #12]
 8003bf6:	69fb      	ldr	r3, [r7, #28]
 8003bf8:	3301      	adds	r3, #1
 8003bfa:	61fb      	str	r3, [r7, #28]
 8003bfc:	69fb      	ldr	r3, [r7, #28]
 8003bfe:	2b0f      	cmp	r3, #15
 8003c00:	f67f ae96 	bls.w	8003930 <HAL_GPIO_Init+0x1c>
 8003c04:	bf00      	nop
 8003c06:	3724      	adds	r7, #36	; 0x24
 8003c08:	46bd      	mov	sp, r7
 8003c0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c0e:	4770      	bx	lr
 8003c10:	40023800 	.word	0x40023800
 8003c14:	40013800 	.word	0x40013800
 8003c18:	40020000 	.word	0x40020000
 8003c1c:	40020400 	.word	0x40020400
 8003c20:	40020800 	.word	0x40020800
 8003c24:	40020c00 	.word	0x40020c00
 8003c28:	40021000 	.word	0x40021000
 8003c2c:	40021400 	.word	0x40021400
 8003c30:	40021800 	.word	0x40021800
 8003c34:	40013c00 	.word	0x40013c00

08003c38 <HAL_GPIO_WritePin>:
 8003c38:	b480      	push	{r7}
 8003c3a:	b083      	sub	sp, #12
 8003c3c:	af00      	add	r7, sp, #0
 8003c3e:	6078      	str	r0, [r7, #4]
 8003c40:	460b      	mov	r3, r1
 8003c42:	807b      	strh	r3, [r7, #2]
 8003c44:	4613      	mov	r3, r2
 8003c46:	707b      	strb	r3, [r7, #1]
 8003c48:	787b      	ldrb	r3, [r7, #1]
 8003c4a:	2b00      	cmp	r3, #0
 8003c4c:	d003      	beq.n	8003c56 <HAL_GPIO_WritePin+0x1e>
 8003c4e:	887a      	ldrh	r2, [r7, #2]
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	619a      	str	r2, [r3, #24]
 8003c54:	e003      	b.n	8003c5e <HAL_GPIO_WritePin+0x26>
 8003c56:	887b      	ldrh	r3, [r7, #2]
 8003c58:	041a      	lsls	r2, r3, #16
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	619a      	str	r2, [r3, #24]
 8003c5e:	bf00      	nop
 8003c60:	370c      	adds	r7, #12
 8003c62:	46bd      	mov	sp, r7
 8003c64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c68:	4770      	bx	lr

08003c6a <HAL_GPIO_TogglePin>:
 8003c6a:	b480      	push	{r7}
 8003c6c:	b083      	sub	sp, #12
 8003c6e:	af00      	add	r7, sp, #0
 8003c70:	6078      	str	r0, [r7, #4]
 8003c72:	460b      	mov	r3, r1
 8003c74:	807b      	strh	r3, [r7, #2]
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	695a      	ldr	r2, [r3, #20]
 8003c7a:	887b      	ldrh	r3, [r7, #2]
 8003c7c:	401a      	ands	r2, r3
 8003c7e:	887b      	ldrh	r3, [r7, #2]
 8003c80:	429a      	cmp	r2, r3
 8003c82:	d104      	bne.n	8003c8e <HAL_GPIO_TogglePin+0x24>
 8003c84:	887b      	ldrh	r3, [r7, #2]
 8003c86:	041a      	lsls	r2, r3, #16
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	619a      	str	r2, [r3, #24]
 8003c8c:	e002      	b.n	8003c94 <HAL_GPIO_TogglePin+0x2a>
 8003c8e:	887a      	ldrh	r2, [r7, #2]
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	619a      	str	r2, [r3, #24]
 8003c94:	bf00      	nop
 8003c96:	370c      	adds	r7, #12
 8003c98:	46bd      	mov	sp, r7
 8003c9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c9e:	4770      	bx	lr

08003ca0 <HAL_GPIO_EXTI_IRQHandler>:
 8003ca0:	b580      	push	{r7, lr}
 8003ca2:	b082      	sub	sp, #8
 8003ca4:	af00      	add	r7, sp, #0
 8003ca6:	4603      	mov	r3, r0
 8003ca8:	80fb      	strh	r3, [r7, #6]
 8003caa:	4b08      	ldr	r3, [pc, #32]	; (8003ccc <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003cac:	695a      	ldr	r2, [r3, #20]
 8003cae:	88fb      	ldrh	r3, [r7, #6]
 8003cb0:	4013      	ands	r3, r2
 8003cb2:	2b00      	cmp	r3, #0
 8003cb4:	d006      	beq.n	8003cc4 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8003cb6:	4a05      	ldr	r2, [pc, #20]	; (8003ccc <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003cb8:	88fb      	ldrh	r3, [r7, #6]
 8003cba:	6153      	str	r3, [r2, #20]
 8003cbc:	88fb      	ldrh	r3, [r7, #6]
 8003cbe:	4618      	mov	r0, r3
 8003cc0:	f000 f806 	bl	8003cd0 <HAL_GPIO_EXTI_Callback>
 8003cc4:	bf00      	nop
 8003cc6:	3708      	adds	r7, #8
 8003cc8:	46bd      	mov	sp, r7
 8003cca:	bd80      	pop	{r7, pc}
 8003ccc:	40013c00 	.word	0x40013c00

08003cd0 <HAL_GPIO_EXTI_Callback>:
 8003cd0:	b480      	push	{r7}
 8003cd2:	b083      	sub	sp, #12
 8003cd4:	af00      	add	r7, sp, #0
 8003cd6:	4603      	mov	r3, r0
 8003cd8:	80fb      	strh	r3, [r7, #6]
 8003cda:	bf00      	nop
 8003cdc:	370c      	adds	r7, #12
 8003cde:	46bd      	mov	sp, r7
 8003ce0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ce4:	4770      	bx	lr
	...

08003ce8 <HAL_RCC_ClockConfig>:
 8003ce8:	b580      	push	{r7, lr}
 8003cea:	b084      	sub	sp, #16
 8003cec:	af00      	add	r7, sp, #0
 8003cee:	6078      	str	r0, [r7, #4]
 8003cf0:	6039      	str	r1, [r7, #0]
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	2b00      	cmp	r3, #0
 8003cf6:	d101      	bne.n	8003cfc <HAL_RCC_ClockConfig+0x14>
 8003cf8:	2301      	movs	r3, #1
 8003cfa:	e0cc      	b.n	8003e96 <HAL_RCC_ClockConfig+0x1ae>
 8003cfc:	4b68      	ldr	r3, [pc, #416]	; (8003ea0 <HAL_RCC_ClockConfig+0x1b8>)
 8003cfe:	681b      	ldr	r3, [r3, #0]
 8003d00:	f003 030f 	and.w	r3, r3, #15
 8003d04:	683a      	ldr	r2, [r7, #0]
 8003d06:	429a      	cmp	r2, r3
 8003d08:	d90c      	bls.n	8003d24 <HAL_RCC_ClockConfig+0x3c>
 8003d0a:	4b65      	ldr	r3, [pc, #404]	; (8003ea0 <HAL_RCC_ClockConfig+0x1b8>)
 8003d0c:	683a      	ldr	r2, [r7, #0]
 8003d0e:	b2d2      	uxtb	r2, r2
 8003d10:	701a      	strb	r2, [r3, #0]
 8003d12:	4b63      	ldr	r3, [pc, #396]	; (8003ea0 <HAL_RCC_ClockConfig+0x1b8>)
 8003d14:	681b      	ldr	r3, [r3, #0]
 8003d16:	f003 030f 	and.w	r3, r3, #15
 8003d1a:	683a      	ldr	r2, [r7, #0]
 8003d1c:	429a      	cmp	r2, r3
 8003d1e:	d001      	beq.n	8003d24 <HAL_RCC_ClockConfig+0x3c>
 8003d20:	2301      	movs	r3, #1
 8003d22:	e0b8      	b.n	8003e96 <HAL_RCC_ClockConfig+0x1ae>
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	681b      	ldr	r3, [r3, #0]
 8003d28:	f003 0302 	and.w	r3, r3, #2
 8003d2c:	2b00      	cmp	r3, #0
 8003d2e:	d020      	beq.n	8003d72 <HAL_RCC_ClockConfig+0x8a>
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	681b      	ldr	r3, [r3, #0]
 8003d34:	f003 0304 	and.w	r3, r3, #4
 8003d38:	2b00      	cmp	r3, #0
 8003d3a:	d005      	beq.n	8003d48 <HAL_RCC_ClockConfig+0x60>
 8003d3c:	4b59      	ldr	r3, [pc, #356]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003d3e:	689b      	ldr	r3, [r3, #8]
 8003d40:	4a58      	ldr	r2, [pc, #352]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003d42:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8003d46:	6093      	str	r3, [r2, #8]
 8003d48:	687b      	ldr	r3, [r7, #4]
 8003d4a:	681b      	ldr	r3, [r3, #0]
 8003d4c:	f003 0308 	and.w	r3, r3, #8
 8003d50:	2b00      	cmp	r3, #0
 8003d52:	d005      	beq.n	8003d60 <HAL_RCC_ClockConfig+0x78>
 8003d54:	4b53      	ldr	r3, [pc, #332]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003d56:	689b      	ldr	r3, [r3, #8]
 8003d58:	4a52      	ldr	r2, [pc, #328]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003d5a:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8003d5e:	6093      	str	r3, [r2, #8]
 8003d60:	4b50      	ldr	r3, [pc, #320]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003d62:	689b      	ldr	r3, [r3, #8]
 8003d64:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	689b      	ldr	r3, [r3, #8]
 8003d6c:	494d      	ldr	r1, [pc, #308]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003d6e:	4313      	orrs	r3, r2
 8003d70:	608b      	str	r3, [r1, #8]
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	f003 0301 	and.w	r3, r3, #1
 8003d7a:	2b00      	cmp	r3, #0
 8003d7c:	d044      	beq.n	8003e08 <HAL_RCC_ClockConfig+0x120>
 8003d7e:	687b      	ldr	r3, [r7, #4]
 8003d80:	685b      	ldr	r3, [r3, #4]
 8003d82:	2b01      	cmp	r3, #1
 8003d84:	d107      	bne.n	8003d96 <HAL_RCC_ClockConfig+0xae>
 8003d86:	4b47      	ldr	r3, [pc, #284]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003d88:	681b      	ldr	r3, [r3, #0]
 8003d8a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003d8e:	2b00      	cmp	r3, #0
 8003d90:	d119      	bne.n	8003dc6 <HAL_RCC_ClockConfig+0xde>
 8003d92:	2301      	movs	r3, #1
 8003d94:	e07f      	b.n	8003e96 <HAL_RCC_ClockConfig+0x1ae>
 8003d96:	687b      	ldr	r3, [r7, #4]
 8003d98:	685b      	ldr	r3, [r3, #4]
 8003d9a:	2b02      	cmp	r3, #2
 8003d9c:	d003      	beq.n	8003da6 <HAL_RCC_ClockConfig+0xbe>
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	685b      	ldr	r3, [r3, #4]
 8003da2:	2b03      	cmp	r3, #3
 8003da4:	d107      	bne.n	8003db6 <HAL_RCC_ClockConfig+0xce>
 8003da6:	4b3f      	ldr	r3, [pc, #252]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003da8:	681b      	ldr	r3, [r3, #0]
 8003daa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003dae:	2b00      	cmp	r3, #0
 8003db0:	d109      	bne.n	8003dc6 <HAL_RCC_ClockConfig+0xde>
 8003db2:	2301      	movs	r3, #1
 8003db4:	e06f      	b.n	8003e96 <HAL_RCC_ClockConfig+0x1ae>
 8003db6:	4b3b      	ldr	r3, [pc, #236]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003db8:	681b      	ldr	r3, [r3, #0]
 8003dba:	f003 0302 	and.w	r3, r3, #2
 8003dbe:	2b00      	cmp	r3, #0
 8003dc0:	d101      	bne.n	8003dc6 <HAL_RCC_ClockConfig+0xde>
 8003dc2:	2301      	movs	r3, #1
 8003dc4:	e067      	b.n	8003e96 <HAL_RCC_ClockConfig+0x1ae>
 8003dc6:	4b37      	ldr	r3, [pc, #220]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003dc8:	689b      	ldr	r3, [r3, #8]
 8003dca:	f023 0203 	bic.w	r2, r3, #3
 8003dce:	687b      	ldr	r3, [r7, #4]
 8003dd0:	685b      	ldr	r3, [r3, #4]
 8003dd2:	4934      	ldr	r1, [pc, #208]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003dd4:	4313      	orrs	r3, r2
 8003dd6:	608b      	str	r3, [r1, #8]
 8003dd8:	f7ff f906 	bl	8002fe8 <HAL_GetTick>
 8003ddc:	60f8      	str	r0, [r7, #12]
 8003dde:	e00a      	b.n	8003df6 <HAL_RCC_ClockConfig+0x10e>
 8003de0:	f7ff f902 	bl	8002fe8 <HAL_GetTick>
 8003de4:	4602      	mov	r2, r0
 8003de6:	68fb      	ldr	r3, [r7, #12]
 8003de8:	1ad3      	subs	r3, r2, r3
 8003dea:	f241 3288 	movw	r2, #5000	; 0x1388
 8003dee:	4293      	cmp	r3, r2
 8003df0:	d901      	bls.n	8003df6 <HAL_RCC_ClockConfig+0x10e>
 8003df2:	2303      	movs	r3, #3
 8003df4:	e04f      	b.n	8003e96 <HAL_RCC_ClockConfig+0x1ae>
 8003df6:	4b2b      	ldr	r3, [pc, #172]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003df8:	689b      	ldr	r3, [r3, #8]
 8003dfa:	f003 020c 	and.w	r2, r3, #12
 8003dfe:	687b      	ldr	r3, [r7, #4]
 8003e00:	685b      	ldr	r3, [r3, #4]
 8003e02:	009b      	lsls	r3, r3, #2
 8003e04:	429a      	cmp	r2, r3
 8003e06:	d1eb      	bne.n	8003de0 <HAL_RCC_ClockConfig+0xf8>
 8003e08:	4b25      	ldr	r3, [pc, #148]	; (8003ea0 <HAL_RCC_ClockConfig+0x1b8>)
 8003e0a:	681b      	ldr	r3, [r3, #0]
 8003e0c:	f003 030f 	and.w	r3, r3, #15
 8003e10:	683a      	ldr	r2, [r7, #0]
 8003e12:	429a      	cmp	r2, r3
 8003e14:	d20c      	bcs.n	8003e30 <HAL_RCC_ClockConfig+0x148>
 8003e16:	4b22      	ldr	r3, [pc, #136]	; (8003ea0 <HAL_RCC_ClockConfig+0x1b8>)
 8003e18:	683a      	ldr	r2, [r7, #0]
 8003e1a:	b2d2      	uxtb	r2, r2
 8003e1c:	701a      	strb	r2, [r3, #0]
 8003e1e:	4b20      	ldr	r3, [pc, #128]	; (8003ea0 <HAL_RCC_ClockConfig+0x1b8>)
 8003e20:	681b      	ldr	r3, [r3, #0]
 8003e22:	f003 030f 	and.w	r3, r3, #15
 8003e26:	683a      	ldr	r2, [r7, #0]
 8003e28:	429a      	cmp	r2, r3
 8003e2a:	d001      	beq.n	8003e30 <HAL_RCC_ClockConfig+0x148>
 8003e2c:	2301      	movs	r3, #1
 8003e2e:	e032      	b.n	8003e96 <HAL_RCC_ClockConfig+0x1ae>
 8003e30:	687b      	ldr	r3, [r7, #4]
 8003e32:	681b      	ldr	r3, [r3, #0]
 8003e34:	f003 0304 	and.w	r3, r3, #4
 8003e38:	2b00      	cmp	r3, #0
 8003e3a:	d008      	beq.n	8003e4e <HAL_RCC_ClockConfig+0x166>
 8003e3c:	4b19      	ldr	r3, [pc, #100]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003e3e:	689b      	ldr	r3, [r3, #8]
 8003e40:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	68db      	ldr	r3, [r3, #12]
 8003e48:	4916      	ldr	r1, [pc, #88]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003e4a:	4313      	orrs	r3, r2
 8003e4c:	608b      	str	r3, [r1, #8]
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	f003 0308 	and.w	r3, r3, #8
 8003e56:	2b00      	cmp	r3, #0
 8003e58:	d009      	beq.n	8003e6e <HAL_RCC_ClockConfig+0x186>
 8003e5a:	4b12      	ldr	r3, [pc, #72]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003e5c:	689b      	ldr	r3, [r3, #8]
 8003e5e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8003e62:	687b      	ldr	r3, [r7, #4]
 8003e64:	691b      	ldr	r3, [r3, #16]
 8003e66:	00db      	lsls	r3, r3, #3
 8003e68:	490e      	ldr	r1, [pc, #56]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003e6a:	4313      	orrs	r3, r2
 8003e6c:	608b      	str	r3, [r1, #8]
 8003e6e:	f000 f855 	bl	8003f1c <HAL_RCC_GetSysClockFreq>
 8003e72:	4601      	mov	r1, r0
 8003e74:	4b0b      	ldr	r3, [pc, #44]	; (8003ea4 <HAL_RCC_ClockConfig+0x1bc>)
 8003e76:	689b      	ldr	r3, [r3, #8]
 8003e78:	091b      	lsrs	r3, r3, #4
 8003e7a:	f003 030f 	and.w	r3, r3, #15
 8003e7e:	4a0a      	ldr	r2, [pc, #40]	; (8003ea8 <HAL_RCC_ClockConfig+0x1c0>)
 8003e80:	5cd3      	ldrb	r3, [r2, r3]
 8003e82:	fa21 f303 	lsr.w	r3, r1, r3
 8003e86:	4a09      	ldr	r2, [pc, #36]	; (8003eac <HAL_RCC_ClockConfig+0x1c4>)
 8003e88:	6013      	str	r3, [r2, #0]
 8003e8a:	4b09      	ldr	r3, [pc, #36]	; (8003eb0 <HAL_RCC_ClockConfig+0x1c8>)
 8003e8c:	681b      	ldr	r3, [r3, #0]
 8003e8e:	4618      	mov	r0, r3
 8003e90:	f7ff f866 	bl	8002f60 <HAL_InitTick>
 8003e94:	2300      	movs	r3, #0
 8003e96:	4618      	mov	r0, r3
 8003e98:	3710      	adds	r7, #16
 8003e9a:	46bd      	mov	sp, r7
 8003e9c:	bd80      	pop	{r7, pc}
 8003e9e:	bf00      	nop
 8003ea0:	40023c00 	.word	0x40023c00
 8003ea4:	40023800 	.word	0x40023800
 8003ea8:	08008ad8 	.word	0x08008ad8
 8003eac:	20000014 	.word	0x20000014
 8003eb0:	20000018 	.word	0x20000018

08003eb4 <HAL_RCC_GetHCLKFreq>:
 8003eb4:	b480      	push	{r7}
 8003eb6:	af00      	add	r7, sp, #0
 8003eb8:	4b03      	ldr	r3, [pc, #12]	; (8003ec8 <HAL_RCC_GetHCLKFreq+0x14>)
 8003eba:	681b      	ldr	r3, [r3, #0]
 8003ebc:	4618      	mov	r0, r3
 8003ebe:	46bd      	mov	sp, r7
 8003ec0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ec4:	4770      	bx	lr
 8003ec6:	bf00      	nop
 8003ec8:	20000014 	.word	0x20000014

08003ecc <HAL_RCC_GetPCLK1Freq>:
 8003ecc:	b580      	push	{r7, lr}
 8003ece:	af00      	add	r7, sp, #0
 8003ed0:	f7ff fff0 	bl	8003eb4 <HAL_RCC_GetHCLKFreq>
 8003ed4:	4601      	mov	r1, r0
 8003ed6:	4b05      	ldr	r3, [pc, #20]	; (8003eec <HAL_RCC_GetPCLK1Freq+0x20>)
 8003ed8:	689b      	ldr	r3, [r3, #8]
 8003eda:	0a9b      	lsrs	r3, r3, #10
 8003edc:	f003 0307 	and.w	r3, r3, #7
 8003ee0:	4a03      	ldr	r2, [pc, #12]	; (8003ef0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003ee2:	5cd3      	ldrb	r3, [r2, r3]
 8003ee4:	fa21 f303 	lsr.w	r3, r1, r3
 8003ee8:	4618      	mov	r0, r3
 8003eea:	bd80      	pop	{r7, pc}
 8003eec:	40023800 	.word	0x40023800
 8003ef0:	08008ae8 	.word	0x08008ae8

08003ef4 <HAL_RCC_GetPCLK2Freq>:
 8003ef4:	b580      	push	{r7, lr}
 8003ef6:	af00      	add	r7, sp, #0
 8003ef8:	f7ff ffdc 	bl	8003eb4 <HAL_RCC_GetHCLKFreq>
 8003efc:	4601      	mov	r1, r0
 8003efe:	4b05      	ldr	r3, [pc, #20]	; (8003f14 <HAL_RCC_GetPCLK2Freq+0x20>)
 8003f00:	689b      	ldr	r3, [r3, #8]
 8003f02:	0b5b      	lsrs	r3, r3, #13
 8003f04:	f003 0307 	and.w	r3, r3, #7
 8003f08:	4a03      	ldr	r2, [pc, #12]	; (8003f18 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003f0a:	5cd3      	ldrb	r3, [r2, r3]
 8003f0c:	fa21 f303 	lsr.w	r3, r1, r3
 8003f10:	4618      	mov	r0, r3
 8003f12:	bd80      	pop	{r7, pc}
 8003f14:	40023800 	.word	0x40023800
 8003f18:	08008ae8 	.word	0x08008ae8

08003f1c <HAL_RCC_GetSysClockFreq>:
 8003f1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003f1e:	b087      	sub	sp, #28
 8003f20:	af00      	add	r7, sp, #0
 8003f22:	2300      	movs	r3, #0
 8003f24:	60fb      	str	r3, [r7, #12]
 8003f26:	2300      	movs	r3, #0
 8003f28:	617b      	str	r3, [r7, #20]
 8003f2a:	2300      	movs	r3, #0
 8003f2c:	60bb      	str	r3, [r7, #8]
 8003f2e:	2300      	movs	r3, #0
 8003f30:	607b      	str	r3, [r7, #4]
 8003f32:	2300      	movs	r3, #0
 8003f34:	613b      	str	r3, [r7, #16]
 8003f36:	4bc6      	ldr	r3, [pc, #792]	; (8004250 <HAL_RCC_GetSysClockFreq+0x334>)
 8003f38:	689b      	ldr	r3, [r3, #8]
 8003f3a:	f003 030c 	and.w	r3, r3, #12
 8003f3e:	2b0c      	cmp	r3, #12
 8003f40:	f200 817e 	bhi.w	8004240 <HAL_RCC_GetSysClockFreq+0x324>
 8003f44:	a201      	add	r2, pc, #4	; (adr r2, 8003f4c <HAL_RCC_GetSysClockFreq+0x30>)
 8003f46:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f4a:	bf00      	nop
 8003f4c:	08003f81 	.word	0x08003f81
 8003f50:	08004241 	.word	0x08004241
 8003f54:	08004241 	.word	0x08004241
 8003f58:	08004241 	.word	0x08004241
 8003f5c:	08003f87 	.word	0x08003f87
 8003f60:	08004241 	.word	0x08004241
 8003f64:	08004241 	.word	0x08004241
 8003f68:	08004241 	.word	0x08004241
 8003f6c:	08003f8d 	.word	0x08003f8d
 8003f70:	08004241 	.word	0x08004241
 8003f74:	08004241 	.word	0x08004241
 8003f78:	08004241 	.word	0x08004241
 8003f7c:	080040e9 	.word	0x080040e9
 8003f80:	4bb4      	ldr	r3, [pc, #720]	; (8004254 <HAL_RCC_GetSysClockFreq+0x338>)
 8003f82:	613b      	str	r3, [r7, #16]
 8003f84:	e15f      	b.n	8004246 <HAL_RCC_GetSysClockFreq+0x32a>
 8003f86:	4bb4      	ldr	r3, [pc, #720]	; (8004258 <HAL_RCC_GetSysClockFreq+0x33c>)
 8003f88:	613b      	str	r3, [r7, #16]
 8003f8a:	e15c      	b.n	8004246 <HAL_RCC_GetSysClockFreq+0x32a>
 8003f8c:	4bb0      	ldr	r3, [pc, #704]	; (8004250 <HAL_RCC_GetSysClockFreq+0x334>)
 8003f8e:	685b      	ldr	r3, [r3, #4]
 8003f90:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003f94:	60fb      	str	r3, [r7, #12]
 8003f96:	4bae      	ldr	r3, [pc, #696]	; (8004250 <HAL_RCC_GetSysClockFreq+0x334>)
 8003f98:	685b      	ldr	r3, [r3, #4]
 8003f9a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003f9e:	2b00      	cmp	r3, #0
 8003fa0:	d04a      	beq.n	8004038 <HAL_RCC_GetSysClockFreq+0x11c>
 8003fa2:	4bab      	ldr	r3, [pc, #684]	; (8004250 <HAL_RCC_GetSysClockFreq+0x334>)
 8003fa4:	685b      	ldr	r3, [r3, #4]
 8003fa6:	099b      	lsrs	r3, r3, #6
 8003fa8:	f04f 0400 	mov.w	r4, #0
 8003fac:	f240 11ff 	movw	r1, #511	; 0x1ff
 8003fb0:	f04f 0200 	mov.w	r2, #0
 8003fb4:	ea03 0501 	and.w	r5, r3, r1
 8003fb8:	ea04 0602 	and.w	r6, r4, r2
 8003fbc:	4629      	mov	r1, r5
 8003fbe:	4632      	mov	r2, r6
 8003fc0:	f04f 0300 	mov.w	r3, #0
 8003fc4:	f04f 0400 	mov.w	r4, #0
 8003fc8:	0154      	lsls	r4, r2, #5
 8003fca:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8003fce:	014b      	lsls	r3, r1, #5
 8003fd0:	4619      	mov	r1, r3
 8003fd2:	4622      	mov	r2, r4
 8003fd4:	1b49      	subs	r1, r1, r5
 8003fd6:	eb62 0206 	sbc.w	r2, r2, r6
 8003fda:	f04f 0300 	mov.w	r3, #0
 8003fde:	f04f 0400 	mov.w	r4, #0
 8003fe2:	0194      	lsls	r4, r2, #6
 8003fe4:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8003fe8:	018b      	lsls	r3, r1, #6
 8003fea:	1a5b      	subs	r3, r3, r1
 8003fec:	eb64 0402 	sbc.w	r4, r4, r2
 8003ff0:	f04f 0100 	mov.w	r1, #0
 8003ff4:	f04f 0200 	mov.w	r2, #0
 8003ff8:	00e2      	lsls	r2, r4, #3
 8003ffa:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8003ffe:	00d9      	lsls	r1, r3, #3
 8004000:	460b      	mov	r3, r1
 8004002:	4614      	mov	r4, r2
 8004004:	195b      	adds	r3, r3, r5
 8004006:	eb44 0406 	adc.w	r4, r4, r6
 800400a:	f04f 0100 	mov.w	r1, #0
 800400e:	f04f 0200 	mov.w	r2, #0
 8004012:	0262      	lsls	r2, r4, #9
 8004014:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
 8004018:	0259      	lsls	r1, r3, #9
 800401a:	460b      	mov	r3, r1
 800401c:	4614      	mov	r4, r2
 800401e:	4618      	mov	r0, r3
 8004020:	4621      	mov	r1, r4
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	f04f 0400 	mov.w	r4, #0
 8004028:	461a      	mov	r2, r3
 800402a:	4623      	mov	r3, r4
 800402c:	f7fc fdd4 	bl	8000bd8 <__aeabi_uldivmod>
 8004030:	4603      	mov	r3, r0
 8004032:	460c      	mov	r4, r1
 8004034:	617b      	str	r3, [r7, #20]
 8004036:	e049      	b.n	80040cc <HAL_RCC_GetSysClockFreq+0x1b0>
 8004038:	4b85      	ldr	r3, [pc, #532]	; (8004250 <HAL_RCC_GetSysClockFreq+0x334>)
 800403a:	685b      	ldr	r3, [r3, #4]
 800403c:	099b      	lsrs	r3, r3, #6
 800403e:	f04f 0400 	mov.w	r4, #0
 8004042:	f240 11ff 	movw	r1, #511	; 0x1ff
 8004046:	f04f 0200 	mov.w	r2, #0
 800404a:	ea03 0501 	and.w	r5, r3, r1
 800404e:	ea04 0602 	and.w	r6, r4, r2
 8004052:	4629      	mov	r1, r5
 8004054:	4632      	mov	r2, r6
 8004056:	f04f 0300 	mov.w	r3, #0
 800405a:	f04f 0400 	mov.w	r4, #0
 800405e:	0154      	lsls	r4, r2, #5
 8004060:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8004064:	014b      	lsls	r3, r1, #5
 8004066:	4619      	mov	r1, r3
 8004068:	4622      	mov	r2, r4
 800406a:	1b49      	subs	r1, r1, r5
 800406c:	eb62 0206 	sbc.w	r2, r2, r6
 8004070:	f04f 0300 	mov.w	r3, #0
 8004074:	f04f 0400 	mov.w	r4, #0
 8004078:	0194      	lsls	r4, r2, #6
 800407a:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 800407e:	018b      	lsls	r3, r1, #6
 8004080:	1a5b      	subs	r3, r3, r1
 8004082:	eb64 0402 	sbc.w	r4, r4, r2
 8004086:	f04f 0100 	mov.w	r1, #0
 800408a:	f04f 0200 	mov.w	r2, #0
 800408e:	00e2      	lsls	r2, r4, #3
 8004090:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8004094:	00d9      	lsls	r1, r3, #3
 8004096:	460b      	mov	r3, r1
 8004098:	4614      	mov	r4, r2
 800409a:	195b      	adds	r3, r3, r5
 800409c:	eb44 0406 	adc.w	r4, r4, r6
 80040a0:	f04f 0100 	mov.w	r1, #0
 80040a4:	f04f 0200 	mov.w	r2, #0
 80040a8:	02a2      	lsls	r2, r4, #10
 80040aa:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 80040ae:	0299      	lsls	r1, r3, #10
 80040b0:	460b      	mov	r3, r1
 80040b2:	4614      	mov	r4, r2
 80040b4:	4618      	mov	r0, r3
 80040b6:	4621      	mov	r1, r4
 80040b8:	68fb      	ldr	r3, [r7, #12]
 80040ba:	f04f 0400 	mov.w	r4, #0
 80040be:	461a      	mov	r2, r3
 80040c0:	4623      	mov	r3, r4
 80040c2:	f7fc fd89 	bl	8000bd8 <__aeabi_uldivmod>
 80040c6:	4603      	mov	r3, r0
 80040c8:	460c      	mov	r4, r1
 80040ca:	617b      	str	r3, [r7, #20]
 80040cc:	4b60      	ldr	r3, [pc, #384]	; (8004250 <HAL_RCC_GetSysClockFreq+0x334>)
 80040ce:	685b      	ldr	r3, [r3, #4]
 80040d0:	0c1b      	lsrs	r3, r3, #16
 80040d2:	f003 0303 	and.w	r3, r3, #3
 80040d6:	3301      	adds	r3, #1
 80040d8:	005b      	lsls	r3, r3, #1
 80040da:	60bb      	str	r3, [r7, #8]
 80040dc:	697a      	ldr	r2, [r7, #20]
 80040de:	68bb      	ldr	r3, [r7, #8]
 80040e0:	fbb2 f3f3 	udiv	r3, r2, r3
 80040e4:	613b      	str	r3, [r7, #16]
 80040e6:	e0ae      	b.n	8004246 <HAL_RCC_GetSysClockFreq+0x32a>
 80040e8:	4b59      	ldr	r3, [pc, #356]	; (8004250 <HAL_RCC_GetSysClockFreq+0x334>)
 80040ea:	685b      	ldr	r3, [r3, #4]
 80040ec:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80040f0:	60fb      	str	r3, [r7, #12]
 80040f2:	4b57      	ldr	r3, [pc, #348]	; (8004250 <HAL_RCC_GetSysClockFreq+0x334>)
 80040f4:	685b      	ldr	r3, [r3, #4]
 80040f6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80040fa:	2b00      	cmp	r3, #0
 80040fc:	d04a      	beq.n	8004194 <HAL_RCC_GetSysClockFreq+0x278>
 80040fe:	4b54      	ldr	r3, [pc, #336]	; (8004250 <HAL_RCC_GetSysClockFreq+0x334>)
 8004100:	685b      	ldr	r3, [r3, #4]
 8004102:	099b      	lsrs	r3, r3, #6
 8004104:	f04f 0400 	mov.w	r4, #0
 8004108:	f240 11ff 	movw	r1, #511	; 0x1ff
 800410c:	f04f 0200 	mov.w	r2, #0
 8004110:	ea03 0501 	and.w	r5, r3, r1
 8004114:	ea04 0602 	and.w	r6, r4, r2
 8004118:	4629      	mov	r1, r5
 800411a:	4632      	mov	r2, r6
 800411c:	f04f 0300 	mov.w	r3, #0
 8004120:	f04f 0400 	mov.w	r4, #0
 8004124:	0154      	lsls	r4, r2, #5
 8004126:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 800412a:	014b      	lsls	r3, r1, #5
 800412c:	4619      	mov	r1, r3
 800412e:	4622      	mov	r2, r4
 8004130:	1b49      	subs	r1, r1, r5
 8004132:	eb62 0206 	sbc.w	r2, r2, r6
 8004136:	f04f 0300 	mov.w	r3, #0
 800413a:	f04f 0400 	mov.w	r4, #0
 800413e:	0194      	lsls	r4, r2, #6
 8004140:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8004144:	018b      	lsls	r3, r1, #6
 8004146:	1a5b      	subs	r3, r3, r1
 8004148:	eb64 0402 	sbc.w	r4, r4, r2
 800414c:	f04f 0100 	mov.w	r1, #0
 8004150:	f04f 0200 	mov.w	r2, #0
 8004154:	00e2      	lsls	r2, r4, #3
 8004156:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 800415a:	00d9      	lsls	r1, r3, #3
 800415c:	460b      	mov	r3, r1
 800415e:	4614      	mov	r4, r2
 8004160:	195b      	adds	r3, r3, r5
 8004162:	eb44 0406 	adc.w	r4, r4, r6
 8004166:	f04f 0100 	mov.w	r1, #0
 800416a:	f04f 0200 	mov.w	r2, #0
 800416e:	0262      	lsls	r2, r4, #9
 8004170:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
 8004174:	0259      	lsls	r1, r3, #9
 8004176:	460b      	mov	r3, r1
 8004178:	4614      	mov	r4, r2
 800417a:	4618      	mov	r0, r3
 800417c:	4621      	mov	r1, r4
 800417e:	68fb      	ldr	r3, [r7, #12]
 8004180:	f04f 0400 	mov.w	r4, #0
 8004184:	461a      	mov	r2, r3
 8004186:	4623      	mov	r3, r4
 8004188:	f7fc fd26 	bl	8000bd8 <__aeabi_uldivmod>
 800418c:	4603      	mov	r3, r0
 800418e:	460c      	mov	r4, r1
 8004190:	617b      	str	r3, [r7, #20]
 8004192:	e049      	b.n	8004228 <HAL_RCC_GetSysClockFreq+0x30c>
 8004194:	4b2e      	ldr	r3, [pc, #184]	; (8004250 <HAL_RCC_GetSysClockFreq+0x334>)
 8004196:	685b      	ldr	r3, [r3, #4]
 8004198:	099b      	lsrs	r3, r3, #6
 800419a:	f04f 0400 	mov.w	r4, #0
 800419e:	f240 11ff 	movw	r1, #511	; 0x1ff
 80041a2:	f04f 0200 	mov.w	r2, #0
 80041a6:	ea03 0501 	and.w	r5, r3, r1
 80041aa:	ea04 0602 	and.w	r6, r4, r2
 80041ae:	4629      	mov	r1, r5
 80041b0:	4632      	mov	r2, r6
 80041b2:	f04f 0300 	mov.w	r3, #0
 80041b6:	f04f 0400 	mov.w	r4, #0
 80041ba:	0154      	lsls	r4, r2, #5
 80041bc:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 80041c0:	014b      	lsls	r3, r1, #5
 80041c2:	4619      	mov	r1, r3
 80041c4:	4622      	mov	r2, r4
 80041c6:	1b49      	subs	r1, r1, r5
 80041c8:	eb62 0206 	sbc.w	r2, r2, r6
 80041cc:	f04f 0300 	mov.w	r3, #0
 80041d0:	f04f 0400 	mov.w	r4, #0
 80041d4:	0194      	lsls	r4, r2, #6
 80041d6:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 80041da:	018b      	lsls	r3, r1, #6
 80041dc:	1a5b      	subs	r3, r3, r1
 80041de:	eb64 0402 	sbc.w	r4, r4, r2
 80041e2:	f04f 0100 	mov.w	r1, #0
 80041e6:	f04f 0200 	mov.w	r2, #0
 80041ea:	00e2      	lsls	r2, r4, #3
 80041ec:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 80041f0:	00d9      	lsls	r1, r3, #3
 80041f2:	460b      	mov	r3, r1
 80041f4:	4614      	mov	r4, r2
 80041f6:	195b      	adds	r3, r3, r5
 80041f8:	eb44 0406 	adc.w	r4, r4, r6
 80041fc:	f04f 0100 	mov.w	r1, #0
 8004200:	f04f 0200 	mov.w	r2, #0
 8004204:	02a2      	lsls	r2, r4, #10
 8004206:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 800420a:	0299      	lsls	r1, r3, #10
 800420c:	460b      	mov	r3, r1
 800420e:	4614      	mov	r4, r2
 8004210:	4618      	mov	r0, r3
 8004212:	4621      	mov	r1, r4
 8004214:	68fb      	ldr	r3, [r7, #12]
 8004216:	f04f 0400 	mov.w	r4, #0
 800421a:	461a      	mov	r2, r3
 800421c:	4623      	mov	r3, r4
 800421e:	f7fc fcdb 	bl	8000bd8 <__aeabi_uldivmod>
 8004222:	4603      	mov	r3, r0
 8004224:	460c      	mov	r4, r1
 8004226:	617b      	str	r3, [r7, #20]
 8004228:	4b09      	ldr	r3, [pc, #36]	; (8004250 <HAL_RCC_GetSysClockFreq+0x334>)
 800422a:	685b      	ldr	r3, [r3, #4]
 800422c:	0f1b      	lsrs	r3, r3, #28
 800422e:	f003 0307 	and.w	r3, r3, #7
 8004232:	607b      	str	r3, [r7, #4]
 8004234:	697a      	ldr	r2, [r7, #20]
 8004236:	687b      	ldr	r3, [r7, #4]
 8004238:	fbb2 f3f3 	udiv	r3, r2, r3
 800423c:	613b      	str	r3, [r7, #16]
 800423e:	e002      	b.n	8004246 <HAL_RCC_GetSysClockFreq+0x32a>
 8004240:	4b04      	ldr	r3, [pc, #16]	; (8004254 <HAL_RCC_GetSysClockFreq+0x338>)
 8004242:	613b      	str	r3, [r7, #16]
 8004244:	bf00      	nop
 8004246:	693b      	ldr	r3, [r7, #16]
 8004248:	4618      	mov	r0, r3
 800424a:	371c      	adds	r7, #28
 800424c:	46bd      	mov	sp, r7
 800424e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004250:	40023800 	.word	0x40023800
 8004254:	00f42400 	.word	0x00f42400
 8004258:	007a1200 	.word	0x007a1200

0800425c <HAL_RCC_OscConfig>:
 800425c:	b580      	push	{r7, lr}
 800425e:	b086      	sub	sp, #24
 8004260:	af00      	add	r7, sp, #0
 8004262:	6078      	str	r0, [r7, #4]
 8004264:	2300      	movs	r3, #0
 8004266:	613b      	str	r3, [r7, #16]
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	681b      	ldr	r3, [r3, #0]
 800426c:	f003 0301 	and.w	r3, r3, #1
 8004270:	2b00      	cmp	r3, #0
 8004272:	f000 8083 	beq.w	800437c <HAL_RCC_OscConfig+0x120>
 8004276:	4b95      	ldr	r3, [pc, #596]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 8004278:	689b      	ldr	r3, [r3, #8]
 800427a:	f003 030c 	and.w	r3, r3, #12
 800427e:	2b04      	cmp	r3, #4
 8004280:	d019      	beq.n	80042b6 <HAL_RCC_OscConfig+0x5a>
 8004282:	4b92      	ldr	r3, [pc, #584]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 8004284:	689b      	ldr	r3, [r3, #8]
 8004286:	f003 030c 	and.w	r3, r3, #12
 800428a:	2b08      	cmp	r3, #8
 800428c:	d106      	bne.n	800429c <HAL_RCC_OscConfig+0x40>
 800428e:	4b8f      	ldr	r3, [pc, #572]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 8004290:	685b      	ldr	r3, [r3, #4]
 8004292:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004296:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800429a:	d00c      	beq.n	80042b6 <HAL_RCC_OscConfig+0x5a>
 800429c:	4b8b      	ldr	r3, [pc, #556]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 800429e:	689b      	ldr	r3, [r3, #8]
 80042a0:	f003 030c 	and.w	r3, r3, #12
 80042a4:	2b0c      	cmp	r3, #12
 80042a6:	d112      	bne.n	80042ce <HAL_RCC_OscConfig+0x72>
 80042a8:	4b88      	ldr	r3, [pc, #544]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 80042aa:	685b      	ldr	r3, [r3, #4]
 80042ac:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80042b0:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80042b4:	d10b      	bne.n	80042ce <HAL_RCC_OscConfig+0x72>
 80042b6:	4b85      	ldr	r3, [pc, #532]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 80042b8:	681b      	ldr	r3, [r3, #0]
 80042ba:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80042be:	2b00      	cmp	r3, #0
 80042c0:	d05b      	beq.n	800437a <HAL_RCC_OscConfig+0x11e>
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	685b      	ldr	r3, [r3, #4]
 80042c6:	2b00      	cmp	r3, #0
 80042c8:	d157      	bne.n	800437a <HAL_RCC_OscConfig+0x11e>
 80042ca:	2301      	movs	r3, #1
 80042cc:	e216      	b.n	80046fc <HAL_RCC_OscConfig+0x4a0>
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	685b      	ldr	r3, [r3, #4]
 80042d2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80042d6:	d106      	bne.n	80042e6 <HAL_RCC_OscConfig+0x8a>
 80042d8:	4b7c      	ldr	r3, [pc, #496]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 80042da:	681b      	ldr	r3, [r3, #0]
 80042dc:	4a7b      	ldr	r2, [pc, #492]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 80042de:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80042e2:	6013      	str	r3, [r2, #0]
 80042e4:	e01d      	b.n	8004322 <HAL_RCC_OscConfig+0xc6>
 80042e6:	687b      	ldr	r3, [r7, #4]
 80042e8:	685b      	ldr	r3, [r3, #4]
 80042ea:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80042ee:	d10c      	bne.n	800430a <HAL_RCC_OscConfig+0xae>
 80042f0:	4b76      	ldr	r3, [pc, #472]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 80042f2:	681b      	ldr	r3, [r3, #0]
 80042f4:	4a75      	ldr	r2, [pc, #468]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 80042f6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80042fa:	6013      	str	r3, [r2, #0]
 80042fc:	4b73      	ldr	r3, [pc, #460]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 80042fe:	681b      	ldr	r3, [r3, #0]
 8004300:	4a72      	ldr	r2, [pc, #456]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 8004302:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004306:	6013      	str	r3, [r2, #0]
 8004308:	e00b      	b.n	8004322 <HAL_RCC_OscConfig+0xc6>
 800430a:	4b70      	ldr	r3, [pc, #448]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 800430c:	681b      	ldr	r3, [r3, #0]
 800430e:	4a6f      	ldr	r2, [pc, #444]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 8004310:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004314:	6013      	str	r3, [r2, #0]
 8004316:	4b6d      	ldr	r3, [pc, #436]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 8004318:	681b      	ldr	r3, [r3, #0]
 800431a:	4a6c      	ldr	r2, [pc, #432]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 800431c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004320:	6013      	str	r3, [r2, #0]
 8004322:	687b      	ldr	r3, [r7, #4]
 8004324:	685b      	ldr	r3, [r3, #4]
 8004326:	2b00      	cmp	r3, #0
 8004328:	d013      	beq.n	8004352 <HAL_RCC_OscConfig+0xf6>
 800432a:	f7fe fe5d 	bl	8002fe8 <HAL_GetTick>
 800432e:	6138      	str	r0, [r7, #16]
 8004330:	e008      	b.n	8004344 <HAL_RCC_OscConfig+0xe8>
 8004332:	f7fe fe59 	bl	8002fe8 <HAL_GetTick>
 8004336:	4602      	mov	r2, r0
 8004338:	693b      	ldr	r3, [r7, #16]
 800433a:	1ad3      	subs	r3, r2, r3
 800433c:	2b64      	cmp	r3, #100	; 0x64
 800433e:	d901      	bls.n	8004344 <HAL_RCC_OscConfig+0xe8>
 8004340:	2303      	movs	r3, #3
 8004342:	e1db      	b.n	80046fc <HAL_RCC_OscConfig+0x4a0>
 8004344:	4b61      	ldr	r3, [pc, #388]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 8004346:	681b      	ldr	r3, [r3, #0]
 8004348:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800434c:	2b00      	cmp	r3, #0
 800434e:	d0f0      	beq.n	8004332 <HAL_RCC_OscConfig+0xd6>
 8004350:	e014      	b.n	800437c <HAL_RCC_OscConfig+0x120>
 8004352:	f7fe fe49 	bl	8002fe8 <HAL_GetTick>
 8004356:	6138      	str	r0, [r7, #16]
 8004358:	e008      	b.n	800436c <HAL_RCC_OscConfig+0x110>
 800435a:	f7fe fe45 	bl	8002fe8 <HAL_GetTick>
 800435e:	4602      	mov	r2, r0
 8004360:	693b      	ldr	r3, [r7, #16]
 8004362:	1ad3      	subs	r3, r2, r3
 8004364:	2b64      	cmp	r3, #100	; 0x64
 8004366:	d901      	bls.n	800436c <HAL_RCC_OscConfig+0x110>
 8004368:	2303      	movs	r3, #3
 800436a:	e1c7      	b.n	80046fc <HAL_RCC_OscConfig+0x4a0>
 800436c:	4b57      	ldr	r3, [pc, #348]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 800436e:	681b      	ldr	r3, [r3, #0]
 8004370:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004374:	2b00      	cmp	r3, #0
 8004376:	d1f0      	bne.n	800435a <HAL_RCC_OscConfig+0xfe>
 8004378:	e000      	b.n	800437c <HAL_RCC_OscConfig+0x120>
 800437a:	bf00      	nop
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	681b      	ldr	r3, [r3, #0]
 8004380:	f003 0302 	and.w	r3, r3, #2
 8004384:	2b00      	cmp	r3, #0
 8004386:	d06f      	beq.n	8004468 <HAL_RCC_OscConfig+0x20c>
 8004388:	4b50      	ldr	r3, [pc, #320]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 800438a:	689b      	ldr	r3, [r3, #8]
 800438c:	f003 030c 	and.w	r3, r3, #12
 8004390:	2b00      	cmp	r3, #0
 8004392:	d017      	beq.n	80043c4 <HAL_RCC_OscConfig+0x168>
 8004394:	4b4d      	ldr	r3, [pc, #308]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 8004396:	689b      	ldr	r3, [r3, #8]
 8004398:	f003 030c 	and.w	r3, r3, #12
 800439c:	2b08      	cmp	r3, #8
 800439e:	d105      	bne.n	80043ac <HAL_RCC_OscConfig+0x150>
 80043a0:	4b4a      	ldr	r3, [pc, #296]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 80043a2:	685b      	ldr	r3, [r3, #4]
 80043a4:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80043a8:	2b00      	cmp	r3, #0
 80043aa:	d00b      	beq.n	80043c4 <HAL_RCC_OscConfig+0x168>
 80043ac:	4b47      	ldr	r3, [pc, #284]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 80043ae:	689b      	ldr	r3, [r3, #8]
 80043b0:	f003 030c 	and.w	r3, r3, #12
 80043b4:	2b0c      	cmp	r3, #12
 80043b6:	d11c      	bne.n	80043f2 <HAL_RCC_OscConfig+0x196>
 80043b8:	4b44      	ldr	r3, [pc, #272]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 80043ba:	685b      	ldr	r3, [r3, #4]
 80043bc:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80043c0:	2b00      	cmp	r3, #0
 80043c2:	d116      	bne.n	80043f2 <HAL_RCC_OscConfig+0x196>
 80043c4:	4b41      	ldr	r3, [pc, #260]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 80043c6:	681b      	ldr	r3, [r3, #0]
 80043c8:	f003 0302 	and.w	r3, r3, #2
 80043cc:	2b00      	cmp	r3, #0
 80043ce:	d005      	beq.n	80043dc <HAL_RCC_OscConfig+0x180>
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	68db      	ldr	r3, [r3, #12]
 80043d4:	2b01      	cmp	r3, #1
 80043d6:	d001      	beq.n	80043dc <HAL_RCC_OscConfig+0x180>
 80043d8:	2301      	movs	r3, #1
 80043da:	e18f      	b.n	80046fc <HAL_RCC_OscConfig+0x4a0>
 80043dc:	4b3b      	ldr	r3, [pc, #236]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 80043de:	681b      	ldr	r3, [r3, #0]
 80043e0:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80043e4:	687b      	ldr	r3, [r7, #4]
 80043e6:	691b      	ldr	r3, [r3, #16]
 80043e8:	00db      	lsls	r3, r3, #3
 80043ea:	4938      	ldr	r1, [pc, #224]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 80043ec:	4313      	orrs	r3, r2
 80043ee:	600b      	str	r3, [r1, #0]
 80043f0:	e03a      	b.n	8004468 <HAL_RCC_OscConfig+0x20c>
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	68db      	ldr	r3, [r3, #12]
 80043f6:	2b00      	cmp	r3, #0
 80043f8:	d020      	beq.n	800443c <HAL_RCC_OscConfig+0x1e0>
 80043fa:	4b35      	ldr	r3, [pc, #212]	; (80044d0 <HAL_RCC_OscConfig+0x274>)
 80043fc:	2201      	movs	r2, #1
 80043fe:	601a      	str	r2, [r3, #0]
 8004400:	f7fe fdf2 	bl	8002fe8 <HAL_GetTick>
 8004404:	6138      	str	r0, [r7, #16]
 8004406:	e008      	b.n	800441a <HAL_RCC_OscConfig+0x1be>
 8004408:	f7fe fdee 	bl	8002fe8 <HAL_GetTick>
 800440c:	4602      	mov	r2, r0
 800440e:	693b      	ldr	r3, [r7, #16]
 8004410:	1ad3      	subs	r3, r2, r3
 8004412:	2b02      	cmp	r3, #2
 8004414:	d901      	bls.n	800441a <HAL_RCC_OscConfig+0x1be>
 8004416:	2303      	movs	r3, #3
 8004418:	e170      	b.n	80046fc <HAL_RCC_OscConfig+0x4a0>
 800441a:	4b2c      	ldr	r3, [pc, #176]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	f003 0302 	and.w	r3, r3, #2
 8004422:	2b00      	cmp	r3, #0
 8004424:	d0f0      	beq.n	8004408 <HAL_RCC_OscConfig+0x1ac>
 8004426:	4b29      	ldr	r3, [pc, #164]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 8004428:	681b      	ldr	r3, [r3, #0]
 800442a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800442e:	687b      	ldr	r3, [r7, #4]
 8004430:	691b      	ldr	r3, [r3, #16]
 8004432:	00db      	lsls	r3, r3, #3
 8004434:	4925      	ldr	r1, [pc, #148]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 8004436:	4313      	orrs	r3, r2
 8004438:	600b      	str	r3, [r1, #0]
 800443a:	e015      	b.n	8004468 <HAL_RCC_OscConfig+0x20c>
 800443c:	4b24      	ldr	r3, [pc, #144]	; (80044d0 <HAL_RCC_OscConfig+0x274>)
 800443e:	2200      	movs	r2, #0
 8004440:	601a      	str	r2, [r3, #0]
 8004442:	f7fe fdd1 	bl	8002fe8 <HAL_GetTick>
 8004446:	6138      	str	r0, [r7, #16]
 8004448:	e008      	b.n	800445c <HAL_RCC_OscConfig+0x200>
 800444a:	f7fe fdcd 	bl	8002fe8 <HAL_GetTick>
 800444e:	4602      	mov	r2, r0
 8004450:	693b      	ldr	r3, [r7, #16]
 8004452:	1ad3      	subs	r3, r2, r3
 8004454:	2b02      	cmp	r3, #2
 8004456:	d901      	bls.n	800445c <HAL_RCC_OscConfig+0x200>
 8004458:	2303      	movs	r3, #3
 800445a:	e14f      	b.n	80046fc <HAL_RCC_OscConfig+0x4a0>
 800445c:	4b1b      	ldr	r3, [pc, #108]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 800445e:	681b      	ldr	r3, [r3, #0]
 8004460:	f003 0302 	and.w	r3, r3, #2
 8004464:	2b00      	cmp	r3, #0
 8004466:	d1f0      	bne.n	800444a <HAL_RCC_OscConfig+0x1ee>
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	681b      	ldr	r3, [r3, #0]
 800446c:	f003 0308 	and.w	r3, r3, #8
 8004470:	2b00      	cmp	r3, #0
 8004472:	d037      	beq.n	80044e4 <HAL_RCC_OscConfig+0x288>
 8004474:	687b      	ldr	r3, [r7, #4]
 8004476:	695b      	ldr	r3, [r3, #20]
 8004478:	2b00      	cmp	r3, #0
 800447a:	d016      	beq.n	80044aa <HAL_RCC_OscConfig+0x24e>
 800447c:	4b15      	ldr	r3, [pc, #84]	; (80044d4 <HAL_RCC_OscConfig+0x278>)
 800447e:	2201      	movs	r2, #1
 8004480:	601a      	str	r2, [r3, #0]
 8004482:	f7fe fdb1 	bl	8002fe8 <HAL_GetTick>
 8004486:	6138      	str	r0, [r7, #16]
 8004488:	e008      	b.n	800449c <HAL_RCC_OscConfig+0x240>
 800448a:	f7fe fdad 	bl	8002fe8 <HAL_GetTick>
 800448e:	4602      	mov	r2, r0
 8004490:	693b      	ldr	r3, [r7, #16]
 8004492:	1ad3      	subs	r3, r2, r3
 8004494:	2b02      	cmp	r3, #2
 8004496:	d901      	bls.n	800449c <HAL_RCC_OscConfig+0x240>
 8004498:	2303      	movs	r3, #3
 800449a:	e12f      	b.n	80046fc <HAL_RCC_OscConfig+0x4a0>
 800449c:	4b0b      	ldr	r3, [pc, #44]	; (80044cc <HAL_RCC_OscConfig+0x270>)
 800449e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80044a0:	f003 0302 	and.w	r3, r3, #2
 80044a4:	2b00      	cmp	r3, #0
 80044a6:	d0f0      	beq.n	800448a <HAL_RCC_OscConfig+0x22e>
 80044a8:	e01c      	b.n	80044e4 <HAL_RCC_OscConfig+0x288>
 80044aa:	4b0a      	ldr	r3, [pc, #40]	; (80044d4 <HAL_RCC_OscConfig+0x278>)
 80044ac:	2200      	movs	r2, #0
 80044ae:	601a      	str	r2, [r3, #0]
 80044b0:	f7fe fd9a 	bl	8002fe8 <HAL_GetTick>
 80044b4:	6138      	str	r0, [r7, #16]
 80044b6:	e00f      	b.n	80044d8 <HAL_RCC_OscConfig+0x27c>
 80044b8:	f7fe fd96 	bl	8002fe8 <HAL_GetTick>
 80044bc:	4602      	mov	r2, r0
 80044be:	693b      	ldr	r3, [r7, #16]
 80044c0:	1ad3      	subs	r3, r2, r3
 80044c2:	2b02      	cmp	r3, #2
 80044c4:	d908      	bls.n	80044d8 <HAL_RCC_OscConfig+0x27c>
 80044c6:	2303      	movs	r3, #3
 80044c8:	e118      	b.n	80046fc <HAL_RCC_OscConfig+0x4a0>
 80044ca:	bf00      	nop
 80044cc:	40023800 	.word	0x40023800
 80044d0:	42470000 	.word	0x42470000
 80044d4:	42470e80 	.word	0x42470e80
 80044d8:	4b8a      	ldr	r3, [pc, #552]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 80044da:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80044dc:	f003 0302 	and.w	r3, r3, #2
 80044e0:	2b00      	cmp	r3, #0
 80044e2:	d1e9      	bne.n	80044b8 <HAL_RCC_OscConfig+0x25c>
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	f003 0304 	and.w	r3, r3, #4
 80044ec:	2b00      	cmp	r3, #0
 80044ee:	f000 8097 	beq.w	8004620 <HAL_RCC_OscConfig+0x3c4>
 80044f2:	2300      	movs	r3, #0
 80044f4:	75fb      	strb	r3, [r7, #23]
 80044f6:	4b83      	ldr	r3, [pc, #524]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 80044f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044fa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80044fe:	2b00      	cmp	r3, #0
 8004500:	d10f      	bne.n	8004522 <HAL_RCC_OscConfig+0x2c6>
 8004502:	2300      	movs	r3, #0
 8004504:	60fb      	str	r3, [r7, #12]
 8004506:	4b7f      	ldr	r3, [pc, #508]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 8004508:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800450a:	4a7e      	ldr	r2, [pc, #504]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 800450c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004510:	6413      	str	r3, [r2, #64]	; 0x40
 8004512:	4b7c      	ldr	r3, [pc, #496]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 8004514:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004516:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800451a:	60fb      	str	r3, [r7, #12]
 800451c:	68fb      	ldr	r3, [r7, #12]
 800451e:	2301      	movs	r3, #1
 8004520:	75fb      	strb	r3, [r7, #23]
 8004522:	4b79      	ldr	r3, [pc, #484]	; (8004708 <HAL_RCC_OscConfig+0x4ac>)
 8004524:	681b      	ldr	r3, [r3, #0]
 8004526:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800452a:	2b00      	cmp	r3, #0
 800452c:	d118      	bne.n	8004560 <HAL_RCC_OscConfig+0x304>
 800452e:	4b76      	ldr	r3, [pc, #472]	; (8004708 <HAL_RCC_OscConfig+0x4ac>)
 8004530:	681b      	ldr	r3, [r3, #0]
 8004532:	4a75      	ldr	r2, [pc, #468]	; (8004708 <HAL_RCC_OscConfig+0x4ac>)
 8004534:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004538:	6013      	str	r3, [r2, #0]
 800453a:	f7fe fd55 	bl	8002fe8 <HAL_GetTick>
 800453e:	6138      	str	r0, [r7, #16]
 8004540:	e008      	b.n	8004554 <HAL_RCC_OscConfig+0x2f8>
 8004542:	f7fe fd51 	bl	8002fe8 <HAL_GetTick>
 8004546:	4602      	mov	r2, r0
 8004548:	693b      	ldr	r3, [r7, #16]
 800454a:	1ad3      	subs	r3, r2, r3
 800454c:	2b02      	cmp	r3, #2
 800454e:	d901      	bls.n	8004554 <HAL_RCC_OscConfig+0x2f8>
 8004550:	2303      	movs	r3, #3
 8004552:	e0d3      	b.n	80046fc <HAL_RCC_OscConfig+0x4a0>
 8004554:	4b6c      	ldr	r3, [pc, #432]	; (8004708 <HAL_RCC_OscConfig+0x4ac>)
 8004556:	681b      	ldr	r3, [r3, #0]
 8004558:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800455c:	2b00      	cmp	r3, #0
 800455e:	d0f0      	beq.n	8004542 <HAL_RCC_OscConfig+0x2e6>
 8004560:	687b      	ldr	r3, [r7, #4]
 8004562:	689b      	ldr	r3, [r3, #8]
 8004564:	2b01      	cmp	r3, #1
 8004566:	d106      	bne.n	8004576 <HAL_RCC_OscConfig+0x31a>
 8004568:	4b66      	ldr	r3, [pc, #408]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 800456a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800456c:	4a65      	ldr	r2, [pc, #404]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 800456e:	f043 0301 	orr.w	r3, r3, #1
 8004572:	6713      	str	r3, [r2, #112]	; 0x70
 8004574:	e01c      	b.n	80045b0 <HAL_RCC_OscConfig+0x354>
 8004576:	687b      	ldr	r3, [r7, #4]
 8004578:	689b      	ldr	r3, [r3, #8]
 800457a:	2b05      	cmp	r3, #5
 800457c:	d10c      	bne.n	8004598 <HAL_RCC_OscConfig+0x33c>
 800457e:	4b61      	ldr	r3, [pc, #388]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 8004580:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004582:	4a60      	ldr	r2, [pc, #384]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 8004584:	f043 0304 	orr.w	r3, r3, #4
 8004588:	6713      	str	r3, [r2, #112]	; 0x70
 800458a:	4b5e      	ldr	r3, [pc, #376]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 800458c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800458e:	4a5d      	ldr	r2, [pc, #372]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 8004590:	f043 0301 	orr.w	r3, r3, #1
 8004594:	6713      	str	r3, [r2, #112]	; 0x70
 8004596:	e00b      	b.n	80045b0 <HAL_RCC_OscConfig+0x354>
 8004598:	4b5a      	ldr	r3, [pc, #360]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 800459a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800459c:	4a59      	ldr	r2, [pc, #356]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 800459e:	f023 0301 	bic.w	r3, r3, #1
 80045a2:	6713      	str	r3, [r2, #112]	; 0x70
 80045a4:	4b57      	ldr	r3, [pc, #348]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 80045a6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80045a8:	4a56      	ldr	r2, [pc, #344]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 80045aa:	f023 0304 	bic.w	r3, r3, #4
 80045ae:	6713      	str	r3, [r2, #112]	; 0x70
 80045b0:	687b      	ldr	r3, [r7, #4]
 80045b2:	689b      	ldr	r3, [r3, #8]
 80045b4:	2b00      	cmp	r3, #0
 80045b6:	d015      	beq.n	80045e4 <HAL_RCC_OscConfig+0x388>
 80045b8:	f7fe fd16 	bl	8002fe8 <HAL_GetTick>
 80045bc:	6138      	str	r0, [r7, #16]
 80045be:	e00a      	b.n	80045d6 <HAL_RCC_OscConfig+0x37a>
 80045c0:	f7fe fd12 	bl	8002fe8 <HAL_GetTick>
 80045c4:	4602      	mov	r2, r0
 80045c6:	693b      	ldr	r3, [r7, #16]
 80045c8:	1ad3      	subs	r3, r2, r3
 80045ca:	f241 3288 	movw	r2, #5000	; 0x1388
 80045ce:	4293      	cmp	r3, r2
 80045d0:	d901      	bls.n	80045d6 <HAL_RCC_OscConfig+0x37a>
 80045d2:	2303      	movs	r3, #3
 80045d4:	e092      	b.n	80046fc <HAL_RCC_OscConfig+0x4a0>
 80045d6:	4b4b      	ldr	r3, [pc, #300]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 80045d8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80045da:	f003 0302 	and.w	r3, r3, #2
 80045de:	2b00      	cmp	r3, #0
 80045e0:	d0ee      	beq.n	80045c0 <HAL_RCC_OscConfig+0x364>
 80045e2:	e014      	b.n	800460e <HAL_RCC_OscConfig+0x3b2>
 80045e4:	f7fe fd00 	bl	8002fe8 <HAL_GetTick>
 80045e8:	6138      	str	r0, [r7, #16]
 80045ea:	e00a      	b.n	8004602 <HAL_RCC_OscConfig+0x3a6>
 80045ec:	f7fe fcfc 	bl	8002fe8 <HAL_GetTick>
 80045f0:	4602      	mov	r2, r0
 80045f2:	693b      	ldr	r3, [r7, #16]
 80045f4:	1ad3      	subs	r3, r2, r3
 80045f6:	f241 3288 	movw	r2, #5000	; 0x1388
 80045fa:	4293      	cmp	r3, r2
 80045fc:	d901      	bls.n	8004602 <HAL_RCC_OscConfig+0x3a6>
 80045fe:	2303      	movs	r3, #3
 8004600:	e07c      	b.n	80046fc <HAL_RCC_OscConfig+0x4a0>
 8004602:	4b40      	ldr	r3, [pc, #256]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 8004604:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004606:	f003 0302 	and.w	r3, r3, #2
 800460a:	2b00      	cmp	r3, #0
 800460c:	d1ee      	bne.n	80045ec <HAL_RCC_OscConfig+0x390>
 800460e:	7dfb      	ldrb	r3, [r7, #23]
 8004610:	2b01      	cmp	r3, #1
 8004612:	d105      	bne.n	8004620 <HAL_RCC_OscConfig+0x3c4>
 8004614:	4b3b      	ldr	r3, [pc, #236]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 8004616:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004618:	4a3a      	ldr	r2, [pc, #232]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 800461a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800461e:	6413      	str	r3, [r2, #64]	; 0x40
 8004620:	687b      	ldr	r3, [r7, #4]
 8004622:	699b      	ldr	r3, [r3, #24]
 8004624:	2b00      	cmp	r3, #0
 8004626:	d068      	beq.n	80046fa <HAL_RCC_OscConfig+0x49e>
 8004628:	4b36      	ldr	r3, [pc, #216]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 800462a:	689b      	ldr	r3, [r3, #8]
 800462c:	f003 030c 	and.w	r3, r3, #12
 8004630:	2b08      	cmp	r3, #8
 8004632:	d060      	beq.n	80046f6 <HAL_RCC_OscConfig+0x49a>
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	699b      	ldr	r3, [r3, #24]
 8004638:	2b02      	cmp	r3, #2
 800463a:	d145      	bne.n	80046c8 <HAL_RCC_OscConfig+0x46c>
 800463c:	4b33      	ldr	r3, [pc, #204]	; (800470c <HAL_RCC_OscConfig+0x4b0>)
 800463e:	2200      	movs	r2, #0
 8004640:	601a      	str	r2, [r3, #0]
 8004642:	f7fe fcd1 	bl	8002fe8 <HAL_GetTick>
 8004646:	6138      	str	r0, [r7, #16]
 8004648:	e008      	b.n	800465c <HAL_RCC_OscConfig+0x400>
 800464a:	f7fe fccd 	bl	8002fe8 <HAL_GetTick>
 800464e:	4602      	mov	r2, r0
 8004650:	693b      	ldr	r3, [r7, #16]
 8004652:	1ad3      	subs	r3, r2, r3
 8004654:	2b02      	cmp	r3, #2
 8004656:	d901      	bls.n	800465c <HAL_RCC_OscConfig+0x400>
 8004658:	2303      	movs	r3, #3
 800465a:	e04f      	b.n	80046fc <HAL_RCC_OscConfig+0x4a0>
 800465c:	4b29      	ldr	r3, [pc, #164]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 800465e:	681b      	ldr	r3, [r3, #0]
 8004660:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004664:	2b00      	cmp	r3, #0
 8004666:	d1f0      	bne.n	800464a <HAL_RCC_OscConfig+0x3ee>
 8004668:	687b      	ldr	r3, [r7, #4]
 800466a:	69da      	ldr	r2, [r3, #28]
 800466c:	687b      	ldr	r3, [r7, #4]
 800466e:	6a1b      	ldr	r3, [r3, #32]
 8004670:	431a      	orrs	r2, r3
 8004672:	687b      	ldr	r3, [r7, #4]
 8004674:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004676:	019b      	lsls	r3, r3, #6
 8004678:	431a      	orrs	r2, r3
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800467e:	085b      	lsrs	r3, r3, #1
 8004680:	3b01      	subs	r3, #1
 8004682:	041b      	lsls	r3, r3, #16
 8004684:	431a      	orrs	r2, r3
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800468a:	061b      	lsls	r3, r3, #24
 800468c:	431a      	orrs	r2, r3
 800468e:	687b      	ldr	r3, [r7, #4]
 8004690:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004692:	071b      	lsls	r3, r3, #28
 8004694:	491b      	ldr	r1, [pc, #108]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 8004696:	4313      	orrs	r3, r2
 8004698:	604b      	str	r3, [r1, #4]
 800469a:	4b1c      	ldr	r3, [pc, #112]	; (800470c <HAL_RCC_OscConfig+0x4b0>)
 800469c:	2201      	movs	r2, #1
 800469e:	601a      	str	r2, [r3, #0]
 80046a0:	f7fe fca2 	bl	8002fe8 <HAL_GetTick>
 80046a4:	6138      	str	r0, [r7, #16]
 80046a6:	e008      	b.n	80046ba <HAL_RCC_OscConfig+0x45e>
 80046a8:	f7fe fc9e 	bl	8002fe8 <HAL_GetTick>
 80046ac:	4602      	mov	r2, r0
 80046ae:	693b      	ldr	r3, [r7, #16]
 80046b0:	1ad3      	subs	r3, r2, r3
 80046b2:	2b02      	cmp	r3, #2
 80046b4:	d901      	bls.n	80046ba <HAL_RCC_OscConfig+0x45e>
 80046b6:	2303      	movs	r3, #3
 80046b8:	e020      	b.n	80046fc <HAL_RCC_OscConfig+0x4a0>
 80046ba:	4b12      	ldr	r3, [pc, #72]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 80046bc:	681b      	ldr	r3, [r3, #0]
 80046be:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80046c2:	2b00      	cmp	r3, #0
 80046c4:	d0f0      	beq.n	80046a8 <HAL_RCC_OscConfig+0x44c>
 80046c6:	e018      	b.n	80046fa <HAL_RCC_OscConfig+0x49e>
 80046c8:	4b10      	ldr	r3, [pc, #64]	; (800470c <HAL_RCC_OscConfig+0x4b0>)
 80046ca:	2200      	movs	r2, #0
 80046cc:	601a      	str	r2, [r3, #0]
 80046ce:	f7fe fc8b 	bl	8002fe8 <HAL_GetTick>
 80046d2:	6138      	str	r0, [r7, #16]
 80046d4:	e008      	b.n	80046e8 <HAL_RCC_OscConfig+0x48c>
 80046d6:	f7fe fc87 	bl	8002fe8 <HAL_GetTick>
 80046da:	4602      	mov	r2, r0
 80046dc:	693b      	ldr	r3, [r7, #16]
 80046de:	1ad3      	subs	r3, r2, r3
 80046e0:	2b02      	cmp	r3, #2
 80046e2:	d901      	bls.n	80046e8 <HAL_RCC_OscConfig+0x48c>
 80046e4:	2303      	movs	r3, #3
 80046e6:	e009      	b.n	80046fc <HAL_RCC_OscConfig+0x4a0>
 80046e8:	4b06      	ldr	r3, [pc, #24]	; (8004704 <HAL_RCC_OscConfig+0x4a8>)
 80046ea:	681b      	ldr	r3, [r3, #0]
 80046ec:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80046f0:	2b00      	cmp	r3, #0
 80046f2:	d1f0      	bne.n	80046d6 <HAL_RCC_OscConfig+0x47a>
 80046f4:	e001      	b.n	80046fa <HAL_RCC_OscConfig+0x49e>
 80046f6:	2301      	movs	r3, #1
 80046f8:	e000      	b.n	80046fc <HAL_RCC_OscConfig+0x4a0>
 80046fa:	2300      	movs	r3, #0
 80046fc:	4618      	mov	r0, r3
 80046fe:	3718      	adds	r7, #24
 8004700:	46bd      	mov	sp, r7
 8004702:	bd80      	pop	{r7, pc}
 8004704:	40023800 	.word	0x40023800
 8004708:	40007000 	.word	0x40007000
 800470c:	42470060 	.word	0x42470060

08004710 <HAL_TIM_Base_Init>:
 8004710:	b580      	push	{r7, lr}
 8004712:	b082      	sub	sp, #8
 8004714:	af00      	add	r7, sp, #0
 8004716:	6078      	str	r0, [r7, #4]
 8004718:	687b      	ldr	r3, [r7, #4]
 800471a:	2b00      	cmp	r3, #0
 800471c:	d101      	bne.n	8004722 <HAL_TIM_Base_Init+0x12>
 800471e:	2301      	movs	r3, #1
 8004720:	e01d      	b.n	800475e <HAL_TIM_Base_Init+0x4e>
 8004722:	687b      	ldr	r3, [r7, #4]
 8004724:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004728:	b2db      	uxtb	r3, r3
 800472a:	2b00      	cmp	r3, #0
 800472c:	d106      	bne.n	800473c <HAL_TIM_Base_Init+0x2c>
 800472e:	687b      	ldr	r3, [r7, #4]
 8004730:	2200      	movs	r2, #0
 8004732:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004736:	6878      	ldr	r0, [r7, #4]
 8004738:	f7fe fa00 	bl	8002b3c <HAL_TIM_Base_MspInit>
 800473c:	687b      	ldr	r3, [r7, #4]
 800473e:	2202      	movs	r2, #2
 8004740:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004744:	687b      	ldr	r3, [r7, #4]
 8004746:	681a      	ldr	r2, [r3, #0]
 8004748:	687b      	ldr	r3, [r7, #4]
 800474a:	3304      	adds	r3, #4
 800474c:	4619      	mov	r1, r3
 800474e:	4610      	mov	r0, r2
 8004750:	f000 fd7e 	bl	8005250 <TIM_Base_SetConfig>
 8004754:	687b      	ldr	r3, [r7, #4]
 8004756:	2201      	movs	r2, #1
 8004758:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800475c:	2300      	movs	r3, #0
 800475e:	4618      	mov	r0, r3
 8004760:	3708      	adds	r7, #8
 8004762:	46bd      	mov	sp, r7
 8004764:	bd80      	pop	{r7, pc}

08004766 <HAL_TIM_OC_Init>:
 8004766:	b580      	push	{r7, lr}
 8004768:	b082      	sub	sp, #8
 800476a:	af00      	add	r7, sp, #0
 800476c:	6078      	str	r0, [r7, #4]
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	2b00      	cmp	r3, #0
 8004772:	d101      	bne.n	8004778 <HAL_TIM_OC_Init+0x12>
 8004774:	2301      	movs	r3, #1
 8004776:	e01d      	b.n	80047b4 <HAL_TIM_OC_Init+0x4e>
 8004778:	687b      	ldr	r3, [r7, #4]
 800477a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800477e:	b2db      	uxtb	r3, r3
 8004780:	2b00      	cmp	r3, #0
 8004782:	d106      	bne.n	8004792 <HAL_TIM_OC_Init+0x2c>
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	2200      	movs	r2, #0
 8004788:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800478c:	6878      	ldr	r0, [r7, #4]
 800478e:	f000 f815 	bl	80047bc <HAL_TIM_OC_MspInit>
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	2202      	movs	r2, #2
 8004796:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800479a:	687b      	ldr	r3, [r7, #4]
 800479c:	681a      	ldr	r2, [r3, #0]
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	3304      	adds	r3, #4
 80047a2:	4619      	mov	r1, r3
 80047a4:	4610      	mov	r0, r2
 80047a6:	f000 fd53 	bl	8005250 <TIM_Base_SetConfig>
 80047aa:	687b      	ldr	r3, [r7, #4]
 80047ac:	2201      	movs	r2, #1
 80047ae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80047b2:	2300      	movs	r3, #0
 80047b4:	4618      	mov	r0, r3
 80047b6:	3708      	adds	r7, #8
 80047b8:	46bd      	mov	sp, r7
 80047ba:	bd80      	pop	{r7, pc}

080047bc <HAL_TIM_OC_MspInit>:
 80047bc:	b480      	push	{r7}
 80047be:	b083      	sub	sp, #12
 80047c0:	af00      	add	r7, sp, #0
 80047c2:	6078      	str	r0, [r7, #4]
 80047c4:	bf00      	nop
 80047c6:	370c      	adds	r7, #12
 80047c8:	46bd      	mov	sp, r7
 80047ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047ce:	4770      	bx	lr

080047d0 <HAL_TIM_OC_Start_IT>:
 80047d0:	b580      	push	{r7, lr}
 80047d2:	b084      	sub	sp, #16
 80047d4:	af00      	add	r7, sp, #0
 80047d6:	6078      	str	r0, [r7, #4]
 80047d8:	6039      	str	r1, [r7, #0]
 80047da:	683b      	ldr	r3, [r7, #0]
 80047dc:	2b0c      	cmp	r3, #12
 80047de:	d841      	bhi.n	8004864 <HAL_TIM_OC_Start_IT+0x94>
 80047e0:	a201      	add	r2, pc, #4	; (adr r2, 80047e8 <HAL_TIM_OC_Start_IT+0x18>)
 80047e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80047e6:	bf00      	nop
 80047e8:	0800481d 	.word	0x0800481d
 80047ec:	08004865 	.word	0x08004865
 80047f0:	08004865 	.word	0x08004865
 80047f4:	08004865 	.word	0x08004865
 80047f8:	0800482f 	.word	0x0800482f
 80047fc:	08004865 	.word	0x08004865
 8004800:	08004865 	.word	0x08004865
 8004804:	08004865 	.word	0x08004865
 8004808:	08004841 	.word	0x08004841
 800480c:	08004865 	.word	0x08004865
 8004810:	08004865 	.word	0x08004865
 8004814:	08004865 	.word	0x08004865
 8004818:	08004853 	.word	0x08004853
 800481c:	687b      	ldr	r3, [r7, #4]
 800481e:	681b      	ldr	r3, [r3, #0]
 8004820:	68da      	ldr	r2, [r3, #12]
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	681b      	ldr	r3, [r3, #0]
 8004826:	f042 0202 	orr.w	r2, r2, #2
 800482a:	60da      	str	r2, [r3, #12]
 800482c:	e01b      	b.n	8004866 <HAL_TIM_OC_Start_IT+0x96>
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	681b      	ldr	r3, [r3, #0]
 8004832:	68da      	ldr	r2, [r3, #12]
 8004834:	687b      	ldr	r3, [r7, #4]
 8004836:	681b      	ldr	r3, [r3, #0]
 8004838:	f042 0204 	orr.w	r2, r2, #4
 800483c:	60da      	str	r2, [r3, #12]
 800483e:	e012      	b.n	8004866 <HAL_TIM_OC_Start_IT+0x96>
 8004840:	687b      	ldr	r3, [r7, #4]
 8004842:	681b      	ldr	r3, [r3, #0]
 8004844:	68da      	ldr	r2, [r3, #12]
 8004846:	687b      	ldr	r3, [r7, #4]
 8004848:	681b      	ldr	r3, [r3, #0]
 800484a:	f042 0208 	orr.w	r2, r2, #8
 800484e:	60da      	str	r2, [r3, #12]
 8004850:	e009      	b.n	8004866 <HAL_TIM_OC_Start_IT+0x96>
 8004852:	687b      	ldr	r3, [r7, #4]
 8004854:	681b      	ldr	r3, [r3, #0]
 8004856:	68da      	ldr	r2, [r3, #12]
 8004858:	687b      	ldr	r3, [r7, #4]
 800485a:	681b      	ldr	r3, [r3, #0]
 800485c:	f042 0210 	orr.w	r2, r2, #16
 8004860:	60da      	str	r2, [r3, #12]
 8004862:	e000      	b.n	8004866 <HAL_TIM_OC_Start_IT+0x96>
 8004864:	bf00      	nop
 8004866:	687b      	ldr	r3, [r7, #4]
 8004868:	681b      	ldr	r3, [r3, #0]
 800486a:	2201      	movs	r2, #1
 800486c:	6839      	ldr	r1, [r7, #0]
 800486e:	4618      	mov	r0, r3
 8004870:	f001 f902 	bl	8005a78 <TIM_CCxChannelCmd>
 8004874:	687b      	ldr	r3, [r7, #4]
 8004876:	681b      	ldr	r3, [r3, #0]
 8004878:	4a15      	ldr	r2, [pc, #84]	; (80048d0 <HAL_TIM_OC_Start_IT+0x100>)
 800487a:	4293      	cmp	r3, r2
 800487c:	d004      	beq.n	8004888 <HAL_TIM_OC_Start_IT+0xb8>
 800487e:	687b      	ldr	r3, [r7, #4]
 8004880:	681b      	ldr	r3, [r3, #0]
 8004882:	4a14      	ldr	r2, [pc, #80]	; (80048d4 <HAL_TIM_OC_Start_IT+0x104>)
 8004884:	4293      	cmp	r3, r2
 8004886:	d101      	bne.n	800488c <HAL_TIM_OC_Start_IT+0xbc>
 8004888:	2301      	movs	r3, #1
 800488a:	e000      	b.n	800488e <HAL_TIM_OC_Start_IT+0xbe>
 800488c:	2300      	movs	r3, #0
 800488e:	2b00      	cmp	r3, #0
 8004890:	d007      	beq.n	80048a2 <HAL_TIM_OC_Start_IT+0xd2>
 8004892:	687b      	ldr	r3, [r7, #4]
 8004894:	681b      	ldr	r3, [r3, #0]
 8004896:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	681b      	ldr	r3, [r3, #0]
 800489c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80048a0:	645a      	str	r2, [r3, #68]	; 0x44
 80048a2:	687b      	ldr	r3, [r7, #4]
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	689b      	ldr	r3, [r3, #8]
 80048a8:	f003 0307 	and.w	r3, r3, #7
 80048ac:	60fb      	str	r3, [r7, #12]
 80048ae:	68fb      	ldr	r3, [r7, #12]
 80048b0:	2b06      	cmp	r3, #6
 80048b2:	d007      	beq.n	80048c4 <HAL_TIM_OC_Start_IT+0xf4>
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	681b      	ldr	r3, [r3, #0]
 80048b8:	681a      	ldr	r2, [r3, #0]
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	681b      	ldr	r3, [r3, #0]
 80048be:	f042 0201 	orr.w	r2, r2, #1
 80048c2:	601a      	str	r2, [r3, #0]
 80048c4:	2300      	movs	r3, #0
 80048c6:	4618      	mov	r0, r3
 80048c8:	3710      	adds	r7, #16
 80048ca:	46bd      	mov	sp, r7
 80048cc:	bd80      	pop	{r7, pc}
 80048ce:	bf00      	nop
 80048d0:	40010000 	.word	0x40010000
 80048d4:	40010400 	.word	0x40010400

080048d8 <HAL_TIM_OC_Stop_IT>:
 80048d8:	b580      	push	{r7, lr}
 80048da:	b082      	sub	sp, #8
 80048dc:	af00      	add	r7, sp, #0
 80048de:	6078      	str	r0, [r7, #4]
 80048e0:	6039      	str	r1, [r7, #0]
 80048e2:	683b      	ldr	r3, [r7, #0]
 80048e4:	2b0c      	cmp	r3, #12
 80048e6:	d841      	bhi.n	800496c <HAL_TIM_OC_Stop_IT+0x94>
 80048e8:	a201      	add	r2, pc, #4	; (adr r2, 80048f0 <HAL_TIM_OC_Stop_IT+0x18>)
 80048ea:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80048ee:	bf00      	nop
 80048f0:	08004925 	.word	0x08004925
 80048f4:	0800496d 	.word	0x0800496d
 80048f8:	0800496d 	.word	0x0800496d
 80048fc:	0800496d 	.word	0x0800496d
 8004900:	08004937 	.word	0x08004937
 8004904:	0800496d 	.word	0x0800496d
 8004908:	0800496d 	.word	0x0800496d
 800490c:	0800496d 	.word	0x0800496d
 8004910:	08004949 	.word	0x08004949
 8004914:	0800496d 	.word	0x0800496d
 8004918:	0800496d 	.word	0x0800496d
 800491c:	0800496d 	.word	0x0800496d
 8004920:	0800495b 	.word	0x0800495b
 8004924:	687b      	ldr	r3, [r7, #4]
 8004926:	681b      	ldr	r3, [r3, #0]
 8004928:	68da      	ldr	r2, [r3, #12]
 800492a:	687b      	ldr	r3, [r7, #4]
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	f022 0202 	bic.w	r2, r2, #2
 8004932:	60da      	str	r2, [r3, #12]
 8004934:	e01b      	b.n	800496e <HAL_TIM_OC_Stop_IT+0x96>
 8004936:	687b      	ldr	r3, [r7, #4]
 8004938:	681b      	ldr	r3, [r3, #0]
 800493a:	68da      	ldr	r2, [r3, #12]
 800493c:	687b      	ldr	r3, [r7, #4]
 800493e:	681b      	ldr	r3, [r3, #0]
 8004940:	f022 0204 	bic.w	r2, r2, #4
 8004944:	60da      	str	r2, [r3, #12]
 8004946:	e012      	b.n	800496e <HAL_TIM_OC_Stop_IT+0x96>
 8004948:	687b      	ldr	r3, [r7, #4]
 800494a:	681b      	ldr	r3, [r3, #0]
 800494c:	68da      	ldr	r2, [r3, #12]
 800494e:	687b      	ldr	r3, [r7, #4]
 8004950:	681b      	ldr	r3, [r3, #0]
 8004952:	f022 0208 	bic.w	r2, r2, #8
 8004956:	60da      	str	r2, [r3, #12]
 8004958:	e009      	b.n	800496e <HAL_TIM_OC_Stop_IT+0x96>
 800495a:	687b      	ldr	r3, [r7, #4]
 800495c:	681b      	ldr	r3, [r3, #0]
 800495e:	68da      	ldr	r2, [r3, #12]
 8004960:	687b      	ldr	r3, [r7, #4]
 8004962:	681b      	ldr	r3, [r3, #0]
 8004964:	f022 0210 	bic.w	r2, r2, #16
 8004968:	60da      	str	r2, [r3, #12]
 800496a:	e000      	b.n	800496e <HAL_TIM_OC_Stop_IT+0x96>
 800496c:	bf00      	nop
 800496e:	687b      	ldr	r3, [r7, #4]
 8004970:	681b      	ldr	r3, [r3, #0]
 8004972:	2200      	movs	r2, #0
 8004974:	6839      	ldr	r1, [r7, #0]
 8004976:	4618      	mov	r0, r3
 8004978:	f001 f87e 	bl	8005a78 <TIM_CCxChannelCmd>
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	681b      	ldr	r3, [r3, #0]
 8004980:	4a20      	ldr	r2, [pc, #128]	; (8004a04 <HAL_TIM_OC_Stop_IT+0x12c>)
 8004982:	4293      	cmp	r3, r2
 8004984:	d004      	beq.n	8004990 <HAL_TIM_OC_Stop_IT+0xb8>
 8004986:	687b      	ldr	r3, [r7, #4]
 8004988:	681b      	ldr	r3, [r3, #0]
 800498a:	4a1f      	ldr	r2, [pc, #124]	; (8004a08 <HAL_TIM_OC_Stop_IT+0x130>)
 800498c:	4293      	cmp	r3, r2
 800498e:	d101      	bne.n	8004994 <HAL_TIM_OC_Stop_IT+0xbc>
 8004990:	2301      	movs	r3, #1
 8004992:	e000      	b.n	8004996 <HAL_TIM_OC_Stop_IT+0xbe>
 8004994:	2300      	movs	r3, #0
 8004996:	2b00      	cmp	r3, #0
 8004998:	d017      	beq.n	80049ca <HAL_TIM_OC_Stop_IT+0xf2>
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	681b      	ldr	r3, [r3, #0]
 800499e:	6a1a      	ldr	r2, [r3, #32]
 80049a0:	f241 1311 	movw	r3, #4369	; 0x1111
 80049a4:	4013      	ands	r3, r2
 80049a6:	2b00      	cmp	r3, #0
 80049a8:	d10f      	bne.n	80049ca <HAL_TIM_OC_Stop_IT+0xf2>
 80049aa:	687b      	ldr	r3, [r7, #4]
 80049ac:	681b      	ldr	r3, [r3, #0]
 80049ae:	6a1a      	ldr	r2, [r3, #32]
 80049b0:	f240 4344 	movw	r3, #1092	; 0x444
 80049b4:	4013      	ands	r3, r2
 80049b6:	2b00      	cmp	r3, #0
 80049b8:	d107      	bne.n	80049ca <HAL_TIM_OC_Stop_IT+0xf2>
 80049ba:	687b      	ldr	r3, [r7, #4]
 80049bc:	681b      	ldr	r3, [r3, #0]
 80049be:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80049c0:	687b      	ldr	r3, [r7, #4]
 80049c2:	681b      	ldr	r3, [r3, #0]
 80049c4:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80049c8:	645a      	str	r2, [r3, #68]	; 0x44
 80049ca:	687b      	ldr	r3, [r7, #4]
 80049cc:	681b      	ldr	r3, [r3, #0]
 80049ce:	6a1a      	ldr	r2, [r3, #32]
 80049d0:	f241 1311 	movw	r3, #4369	; 0x1111
 80049d4:	4013      	ands	r3, r2
 80049d6:	2b00      	cmp	r3, #0
 80049d8:	d10f      	bne.n	80049fa <HAL_TIM_OC_Stop_IT+0x122>
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	681b      	ldr	r3, [r3, #0]
 80049de:	6a1a      	ldr	r2, [r3, #32]
 80049e0:	f240 4344 	movw	r3, #1092	; 0x444
 80049e4:	4013      	ands	r3, r2
 80049e6:	2b00      	cmp	r3, #0
 80049e8:	d107      	bne.n	80049fa <HAL_TIM_OC_Stop_IT+0x122>
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	681b      	ldr	r3, [r3, #0]
 80049ee:	681a      	ldr	r2, [r3, #0]
 80049f0:	687b      	ldr	r3, [r7, #4]
 80049f2:	681b      	ldr	r3, [r3, #0]
 80049f4:	f022 0201 	bic.w	r2, r2, #1
 80049f8:	601a      	str	r2, [r3, #0]
 80049fa:	2300      	movs	r3, #0
 80049fc:	4618      	mov	r0, r3
 80049fe:	3708      	adds	r7, #8
 8004a00:	46bd      	mov	sp, r7
 8004a02:	bd80      	pop	{r7, pc}
 8004a04:	40010000 	.word	0x40010000
 8004a08:	40010400 	.word	0x40010400

08004a0c <HAL_TIM_IC_Init>:
 8004a0c:	b580      	push	{r7, lr}
 8004a0e:	b082      	sub	sp, #8
 8004a10:	af00      	add	r7, sp, #0
 8004a12:	6078      	str	r0, [r7, #4]
 8004a14:	687b      	ldr	r3, [r7, #4]
 8004a16:	2b00      	cmp	r3, #0
 8004a18:	d101      	bne.n	8004a1e <HAL_TIM_IC_Init+0x12>
 8004a1a:	2301      	movs	r3, #1
 8004a1c:	e01d      	b.n	8004a5a <HAL_TIM_IC_Init+0x4e>
 8004a1e:	687b      	ldr	r3, [r7, #4]
 8004a20:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004a24:	b2db      	uxtb	r3, r3
 8004a26:	2b00      	cmp	r3, #0
 8004a28:	d106      	bne.n	8004a38 <HAL_TIM_IC_Init+0x2c>
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	2200      	movs	r2, #0
 8004a2e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004a32:	6878      	ldr	r0, [r7, #4]
 8004a34:	f000 f815 	bl	8004a62 <HAL_TIM_IC_MspInit>
 8004a38:	687b      	ldr	r3, [r7, #4]
 8004a3a:	2202      	movs	r2, #2
 8004a3c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004a40:	687b      	ldr	r3, [r7, #4]
 8004a42:	681a      	ldr	r2, [r3, #0]
 8004a44:	687b      	ldr	r3, [r7, #4]
 8004a46:	3304      	adds	r3, #4
 8004a48:	4619      	mov	r1, r3
 8004a4a:	4610      	mov	r0, r2
 8004a4c:	f000 fc00 	bl	8005250 <TIM_Base_SetConfig>
 8004a50:	687b      	ldr	r3, [r7, #4]
 8004a52:	2201      	movs	r2, #1
 8004a54:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004a58:	2300      	movs	r3, #0
 8004a5a:	4618      	mov	r0, r3
 8004a5c:	3708      	adds	r7, #8
 8004a5e:	46bd      	mov	sp, r7
 8004a60:	bd80      	pop	{r7, pc}

08004a62 <HAL_TIM_IC_MspInit>:
 8004a62:	b480      	push	{r7}
 8004a64:	b083      	sub	sp, #12
 8004a66:	af00      	add	r7, sp, #0
 8004a68:	6078      	str	r0, [r7, #4]
 8004a6a:	bf00      	nop
 8004a6c:	370c      	adds	r7, #12
 8004a6e:	46bd      	mov	sp, r7
 8004a70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a74:	4770      	bx	lr
	...

08004a78 <HAL_TIM_IC_Start_IT>:
 8004a78:	b580      	push	{r7, lr}
 8004a7a:	b084      	sub	sp, #16
 8004a7c:	af00      	add	r7, sp, #0
 8004a7e:	6078      	str	r0, [r7, #4]
 8004a80:	6039      	str	r1, [r7, #0]
 8004a82:	683b      	ldr	r3, [r7, #0]
 8004a84:	2b0c      	cmp	r3, #12
 8004a86:	d841      	bhi.n	8004b0c <HAL_TIM_IC_Start_IT+0x94>
 8004a88:	a201      	add	r2, pc, #4	; (adr r2, 8004a90 <HAL_TIM_IC_Start_IT+0x18>)
 8004a8a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004a8e:	bf00      	nop
 8004a90:	08004ac5 	.word	0x08004ac5
 8004a94:	08004b0d 	.word	0x08004b0d
 8004a98:	08004b0d 	.word	0x08004b0d
 8004a9c:	08004b0d 	.word	0x08004b0d
 8004aa0:	08004ad7 	.word	0x08004ad7
 8004aa4:	08004b0d 	.word	0x08004b0d
 8004aa8:	08004b0d 	.word	0x08004b0d
 8004aac:	08004b0d 	.word	0x08004b0d
 8004ab0:	08004ae9 	.word	0x08004ae9
 8004ab4:	08004b0d 	.word	0x08004b0d
 8004ab8:	08004b0d 	.word	0x08004b0d
 8004abc:	08004b0d 	.word	0x08004b0d
 8004ac0:	08004afb 	.word	0x08004afb
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	68da      	ldr	r2, [r3, #12]
 8004aca:	687b      	ldr	r3, [r7, #4]
 8004acc:	681b      	ldr	r3, [r3, #0]
 8004ace:	f042 0202 	orr.w	r2, r2, #2
 8004ad2:	60da      	str	r2, [r3, #12]
 8004ad4:	e01b      	b.n	8004b0e <HAL_TIM_IC_Start_IT+0x96>
 8004ad6:	687b      	ldr	r3, [r7, #4]
 8004ad8:	681b      	ldr	r3, [r3, #0]
 8004ada:	68da      	ldr	r2, [r3, #12]
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	f042 0204 	orr.w	r2, r2, #4
 8004ae4:	60da      	str	r2, [r3, #12]
 8004ae6:	e012      	b.n	8004b0e <HAL_TIM_IC_Start_IT+0x96>
 8004ae8:	687b      	ldr	r3, [r7, #4]
 8004aea:	681b      	ldr	r3, [r3, #0]
 8004aec:	68da      	ldr	r2, [r3, #12]
 8004aee:	687b      	ldr	r3, [r7, #4]
 8004af0:	681b      	ldr	r3, [r3, #0]
 8004af2:	f042 0208 	orr.w	r2, r2, #8
 8004af6:	60da      	str	r2, [r3, #12]
 8004af8:	e009      	b.n	8004b0e <HAL_TIM_IC_Start_IT+0x96>
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	681b      	ldr	r3, [r3, #0]
 8004afe:	68da      	ldr	r2, [r3, #12]
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	681b      	ldr	r3, [r3, #0]
 8004b04:	f042 0210 	orr.w	r2, r2, #16
 8004b08:	60da      	str	r2, [r3, #12]
 8004b0a:	e000      	b.n	8004b0e <HAL_TIM_IC_Start_IT+0x96>
 8004b0c:	bf00      	nop
 8004b0e:	687b      	ldr	r3, [r7, #4]
 8004b10:	681b      	ldr	r3, [r3, #0]
 8004b12:	2201      	movs	r2, #1
 8004b14:	6839      	ldr	r1, [r7, #0]
 8004b16:	4618      	mov	r0, r3
 8004b18:	f000 ffae 	bl	8005a78 <TIM_CCxChannelCmd>
 8004b1c:	687b      	ldr	r3, [r7, #4]
 8004b1e:	681b      	ldr	r3, [r3, #0]
 8004b20:	689b      	ldr	r3, [r3, #8]
 8004b22:	f003 0307 	and.w	r3, r3, #7
 8004b26:	60fb      	str	r3, [r7, #12]
 8004b28:	68fb      	ldr	r3, [r7, #12]
 8004b2a:	2b06      	cmp	r3, #6
 8004b2c:	d007      	beq.n	8004b3e <HAL_TIM_IC_Start_IT+0xc6>
 8004b2e:	687b      	ldr	r3, [r7, #4]
 8004b30:	681b      	ldr	r3, [r3, #0]
 8004b32:	681a      	ldr	r2, [r3, #0]
 8004b34:	687b      	ldr	r3, [r7, #4]
 8004b36:	681b      	ldr	r3, [r3, #0]
 8004b38:	f042 0201 	orr.w	r2, r2, #1
 8004b3c:	601a      	str	r2, [r3, #0]
 8004b3e:	2300      	movs	r3, #0
 8004b40:	4618      	mov	r0, r3
 8004b42:	3710      	adds	r7, #16
 8004b44:	46bd      	mov	sp, r7
 8004b46:	bd80      	pop	{r7, pc}

08004b48 <HAL_TIM_IC_Stop_IT>:
 8004b48:	b580      	push	{r7, lr}
 8004b4a:	b082      	sub	sp, #8
 8004b4c:	af00      	add	r7, sp, #0
 8004b4e:	6078      	str	r0, [r7, #4]
 8004b50:	6039      	str	r1, [r7, #0]
 8004b52:	683b      	ldr	r3, [r7, #0]
 8004b54:	2b0c      	cmp	r3, #12
 8004b56:	d841      	bhi.n	8004bdc <HAL_TIM_IC_Stop_IT+0x94>
 8004b58:	a201      	add	r2, pc, #4	; (adr r2, 8004b60 <HAL_TIM_IC_Stop_IT+0x18>)
 8004b5a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004b5e:	bf00      	nop
 8004b60:	08004b95 	.word	0x08004b95
 8004b64:	08004bdd 	.word	0x08004bdd
 8004b68:	08004bdd 	.word	0x08004bdd
 8004b6c:	08004bdd 	.word	0x08004bdd
 8004b70:	08004ba7 	.word	0x08004ba7
 8004b74:	08004bdd 	.word	0x08004bdd
 8004b78:	08004bdd 	.word	0x08004bdd
 8004b7c:	08004bdd 	.word	0x08004bdd
 8004b80:	08004bb9 	.word	0x08004bb9
 8004b84:	08004bdd 	.word	0x08004bdd
 8004b88:	08004bdd 	.word	0x08004bdd
 8004b8c:	08004bdd 	.word	0x08004bdd
 8004b90:	08004bcb 	.word	0x08004bcb
 8004b94:	687b      	ldr	r3, [r7, #4]
 8004b96:	681b      	ldr	r3, [r3, #0]
 8004b98:	68da      	ldr	r2, [r3, #12]
 8004b9a:	687b      	ldr	r3, [r7, #4]
 8004b9c:	681b      	ldr	r3, [r3, #0]
 8004b9e:	f022 0202 	bic.w	r2, r2, #2
 8004ba2:	60da      	str	r2, [r3, #12]
 8004ba4:	e01b      	b.n	8004bde <HAL_TIM_IC_Stop_IT+0x96>
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	681b      	ldr	r3, [r3, #0]
 8004baa:	68da      	ldr	r2, [r3, #12]
 8004bac:	687b      	ldr	r3, [r7, #4]
 8004bae:	681b      	ldr	r3, [r3, #0]
 8004bb0:	f022 0204 	bic.w	r2, r2, #4
 8004bb4:	60da      	str	r2, [r3, #12]
 8004bb6:	e012      	b.n	8004bde <HAL_TIM_IC_Stop_IT+0x96>
 8004bb8:	687b      	ldr	r3, [r7, #4]
 8004bba:	681b      	ldr	r3, [r3, #0]
 8004bbc:	68da      	ldr	r2, [r3, #12]
 8004bbe:	687b      	ldr	r3, [r7, #4]
 8004bc0:	681b      	ldr	r3, [r3, #0]
 8004bc2:	f022 0208 	bic.w	r2, r2, #8
 8004bc6:	60da      	str	r2, [r3, #12]
 8004bc8:	e009      	b.n	8004bde <HAL_TIM_IC_Stop_IT+0x96>
 8004bca:	687b      	ldr	r3, [r7, #4]
 8004bcc:	681b      	ldr	r3, [r3, #0]
 8004bce:	68da      	ldr	r2, [r3, #12]
 8004bd0:	687b      	ldr	r3, [r7, #4]
 8004bd2:	681b      	ldr	r3, [r3, #0]
 8004bd4:	f022 0210 	bic.w	r2, r2, #16
 8004bd8:	60da      	str	r2, [r3, #12]
 8004bda:	e000      	b.n	8004bde <HAL_TIM_IC_Stop_IT+0x96>
 8004bdc:	bf00      	nop
 8004bde:	687b      	ldr	r3, [r7, #4]
 8004be0:	681b      	ldr	r3, [r3, #0]
 8004be2:	2200      	movs	r2, #0
 8004be4:	6839      	ldr	r1, [r7, #0]
 8004be6:	4618      	mov	r0, r3
 8004be8:	f000 ff46 	bl	8005a78 <TIM_CCxChannelCmd>
 8004bec:	687b      	ldr	r3, [r7, #4]
 8004bee:	681b      	ldr	r3, [r3, #0]
 8004bf0:	6a1a      	ldr	r2, [r3, #32]
 8004bf2:	f241 1311 	movw	r3, #4369	; 0x1111
 8004bf6:	4013      	ands	r3, r2
 8004bf8:	2b00      	cmp	r3, #0
 8004bfa:	d10f      	bne.n	8004c1c <HAL_TIM_IC_Stop_IT+0xd4>
 8004bfc:	687b      	ldr	r3, [r7, #4]
 8004bfe:	681b      	ldr	r3, [r3, #0]
 8004c00:	6a1a      	ldr	r2, [r3, #32]
 8004c02:	f240 4344 	movw	r3, #1092	; 0x444
 8004c06:	4013      	ands	r3, r2
 8004c08:	2b00      	cmp	r3, #0
 8004c0a:	d107      	bne.n	8004c1c <HAL_TIM_IC_Stop_IT+0xd4>
 8004c0c:	687b      	ldr	r3, [r7, #4]
 8004c0e:	681b      	ldr	r3, [r3, #0]
 8004c10:	681a      	ldr	r2, [r3, #0]
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	681b      	ldr	r3, [r3, #0]
 8004c16:	f022 0201 	bic.w	r2, r2, #1
 8004c1a:	601a      	str	r2, [r3, #0]
 8004c1c:	2300      	movs	r3, #0
 8004c1e:	4618      	mov	r0, r3
 8004c20:	3708      	adds	r7, #8
 8004c22:	46bd      	mov	sp, r7
 8004c24:	bd80      	pop	{r7, pc}
 8004c26:	bf00      	nop

08004c28 <HAL_TIM_IRQHandler>:
 8004c28:	b580      	push	{r7, lr}
 8004c2a:	b082      	sub	sp, #8
 8004c2c:	af00      	add	r7, sp, #0
 8004c2e:	6078      	str	r0, [r7, #4]
 8004c30:	687b      	ldr	r3, [r7, #4]
 8004c32:	681b      	ldr	r3, [r3, #0]
 8004c34:	691b      	ldr	r3, [r3, #16]
 8004c36:	f003 0302 	and.w	r3, r3, #2
 8004c3a:	2b02      	cmp	r3, #2
 8004c3c:	d122      	bne.n	8004c84 <HAL_TIM_IRQHandler+0x5c>
 8004c3e:	687b      	ldr	r3, [r7, #4]
 8004c40:	681b      	ldr	r3, [r3, #0]
 8004c42:	68db      	ldr	r3, [r3, #12]
 8004c44:	f003 0302 	and.w	r3, r3, #2
 8004c48:	2b02      	cmp	r3, #2
 8004c4a:	d11b      	bne.n	8004c84 <HAL_TIM_IRQHandler+0x5c>
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	681b      	ldr	r3, [r3, #0]
 8004c50:	f06f 0202 	mvn.w	r2, #2
 8004c54:	611a      	str	r2, [r3, #16]
 8004c56:	687b      	ldr	r3, [r7, #4]
 8004c58:	2201      	movs	r2, #1
 8004c5a:	771a      	strb	r2, [r3, #28]
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	681b      	ldr	r3, [r3, #0]
 8004c60:	699b      	ldr	r3, [r3, #24]
 8004c62:	f003 0303 	and.w	r3, r3, #3
 8004c66:	2b00      	cmp	r3, #0
 8004c68:	d003      	beq.n	8004c72 <HAL_TIM_IRQHandler+0x4a>
 8004c6a:	6878      	ldr	r0, [r7, #4]
 8004c6c:	f7fd fe66 	bl	800293c <HAL_TIM_IC_CaptureCallback>
 8004c70:	e005      	b.n	8004c7e <HAL_TIM_IRQHandler+0x56>
 8004c72:	6878      	ldr	r0, [r7, #4]
 8004c74:	f7fd fe34 	bl	80028e0 <HAL_TIM_OC_DelayElapsedCallback>
 8004c78:	6878      	ldr	r0, [r7, #4]
 8004c7a:	f000 fad5 	bl	8005228 <HAL_TIM_PWM_PulseFinishedCallback>
 8004c7e:	687b      	ldr	r3, [r7, #4]
 8004c80:	2200      	movs	r2, #0
 8004c82:	771a      	strb	r2, [r3, #28]
 8004c84:	687b      	ldr	r3, [r7, #4]
 8004c86:	681b      	ldr	r3, [r3, #0]
 8004c88:	691b      	ldr	r3, [r3, #16]
 8004c8a:	f003 0304 	and.w	r3, r3, #4
 8004c8e:	2b04      	cmp	r3, #4
 8004c90:	d122      	bne.n	8004cd8 <HAL_TIM_IRQHandler+0xb0>
 8004c92:	687b      	ldr	r3, [r7, #4]
 8004c94:	681b      	ldr	r3, [r3, #0]
 8004c96:	68db      	ldr	r3, [r3, #12]
 8004c98:	f003 0304 	and.w	r3, r3, #4
 8004c9c:	2b04      	cmp	r3, #4
 8004c9e:	d11b      	bne.n	8004cd8 <HAL_TIM_IRQHandler+0xb0>
 8004ca0:	687b      	ldr	r3, [r7, #4]
 8004ca2:	681b      	ldr	r3, [r3, #0]
 8004ca4:	f06f 0204 	mvn.w	r2, #4
 8004ca8:	611a      	str	r2, [r3, #16]
 8004caa:	687b      	ldr	r3, [r7, #4]
 8004cac:	2202      	movs	r2, #2
 8004cae:	771a      	strb	r2, [r3, #28]
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	699b      	ldr	r3, [r3, #24]
 8004cb6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004cba:	2b00      	cmp	r3, #0
 8004cbc:	d003      	beq.n	8004cc6 <HAL_TIM_IRQHandler+0x9e>
 8004cbe:	6878      	ldr	r0, [r7, #4]
 8004cc0:	f7fd fe3c 	bl	800293c <HAL_TIM_IC_CaptureCallback>
 8004cc4:	e005      	b.n	8004cd2 <HAL_TIM_IRQHandler+0xaa>
 8004cc6:	6878      	ldr	r0, [r7, #4]
 8004cc8:	f7fd fe0a 	bl	80028e0 <HAL_TIM_OC_DelayElapsedCallback>
 8004ccc:	6878      	ldr	r0, [r7, #4]
 8004cce:	f000 faab 	bl	8005228 <HAL_TIM_PWM_PulseFinishedCallback>
 8004cd2:	687b      	ldr	r3, [r7, #4]
 8004cd4:	2200      	movs	r2, #0
 8004cd6:	771a      	strb	r2, [r3, #28]
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	681b      	ldr	r3, [r3, #0]
 8004cdc:	691b      	ldr	r3, [r3, #16]
 8004cde:	f003 0308 	and.w	r3, r3, #8
 8004ce2:	2b08      	cmp	r3, #8
 8004ce4:	d122      	bne.n	8004d2c <HAL_TIM_IRQHandler+0x104>
 8004ce6:	687b      	ldr	r3, [r7, #4]
 8004ce8:	681b      	ldr	r3, [r3, #0]
 8004cea:	68db      	ldr	r3, [r3, #12]
 8004cec:	f003 0308 	and.w	r3, r3, #8
 8004cf0:	2b08      	cmp	r3, #8
 8004cf2:	d11b      	bne.n	8004d2c <HAL_TIM_IRQHandler+0x104>
 8004cf4:	687b      	ldr	r3, [r7, #4]
 8004cf6:	681b      	ldr	r3, [r3, #0]
 8004cf8:	f06f 0208 	mvn.w	r2, #8
 8004cfc:	611a      	str	r2, [r3, #16]
 8004cfe:	687b      	ldr	r3, [r7, #4]
 8004d00:	2204      	movs	r2, #4
 8004d02:	771a      	strb	r2, [r3, #28]
 8004d04:	687b      	ldr	r3, [r7, #4]
 8004d06:	681b      	ldr	r3, [r3, #0]
 8004d08:	69db      	ldr	r3, [r3, #28]
 8004d0a:	f003 0303 	and.w	r3, r3, #3
 8004d0e:	2b00      	cmp	r3, #0
 8004d10:	d003      	beq.n	8004d1a <HAL_TIM_IRQHandler+0xf2>
 8004d12:	6878      	ldr	r0, [r7, #4]
 8004d14:	f7fd fe12 	bl	800293c <HAL_TIM_IC_CaptureCallback>
 8004d18:	e005      	b.n	8004d26 <HAL_TIM_IRQHandler+0xfe>
 8004d1a:	6878      	ldr	r0, [r7, #4]
 8004d1c:	f7fd fde0 	bl	80028e0 <HAL_TIM_OC_DelayElapsedCallback>
 8004d20:	6878      	ldr	r0, [r7, #4]
 8004d22:	f000 fa81 	bl	8005228 <HAL_TIM_PWM_PulseFinishedCallback>
 8004d26:	687b      	ldr	r3, [r7, #4]
 8004d28:	2200      	movs	r2, #0
 8004d2a:	771a      	strb	r2, [r3, #28]
 8004d2c:	687b      	ldr	r3, [r7, #4]
 8004d2e:	681b      	ldr	r3, [r3, #0]
 8004d30:	691b      	ldr	r3, [r3, #16]
 8004d32:	f003 0310 	and.w	r3, r3, #16
 8004d36:	2b10      	cmp	r3, #16
 8004d38:	d122      	bne.n	8004d80 <HAL_TIM_IRQHandler+0x158>
 8004d3a:	687b      	ldr	r3, [r7, #4]
 8004d3c:	681b      	ldr	r3, [r3, #0]
 8004d3e:	68db      	ldr	r3, [r3, #12]
 8004d40:	f003 0310 	and.w	r3, r3, #16
 8004d44:	2b10      	cmp	r3, #16
 8004d46:	d11b      	bne.n	8004d80 <HAL_TIM_IRQHandler+0x158>
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	681b      	ldr	r3, [r3, #0]
 8004d4c:	f06f 0210 	mvn.w	r2, #16
 8004d50:	611a      	str	r2, [r3, #16]
 8004d52:	687b      	ldr	r3, [r7, #4]
 8004d54:	2208      	movs	r2, #8
 8004d56:	771a      	strb	r2, [r3, #28]
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	681b      	ldr	r3, [r3, #0]
 8004d5c:	69db      	ldr	r3, [r3, #28]
 8004d5e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004d62:	2b00      	cmp	r3, #0
 8004d64:	d003      	beq.n	8004d6e <HAL_TIM_IRQHandler+0x146>
 8004d66:	6878      	ldr	r0, [r7, #4]
 8004d68:	f7fd fde8 	bl	800293c <HAL_TIM_IC_CaptureCallback>
 8004d6c:	e005      	b.n	8004d7a <HAL_TIM_IRQHandler+0x152>
 8004d6e:	6878      	ldr	r0, [r7, #4]
 8004d70:	f7fd fdb6 	bl	80028e0 <HAL_TIM_OC_DelayElapsedCallback>
 8004d74:	6878      	ldr	r0, [r7, #4]
 8004d76:	f000 fa57 	bl	8005228 <HAL_TIM_PWM_PulseFinishedCallback>
 8004d7a:	687b      	ldr	r3, [r7, #4]
 8004d7c:	2200      	movs	r2, #0
 8004d7e:	771a      	strb	r2, [r3, #28]
 8004d80:	687b      	ldr	r3, [r7, #4]
 8004d82:	681b      	ldr	r3, [r3, #0]
 8004d84:	691b      	ldr	r3, [r3, #16]
 8004d86:	f003 0301 	and.w	r3, r3, #1
 8004d8a:	2b01      	cmp	r3, #1
 8004d8c:	d10e      	bne.n	8004dac <HAL_TIM_IRQHandler+0x184>
 8004d8e:	687b      	ldr	r3, [r7, #4]
 8004d90:	681b      	ldr	r3, [r3, #0]
 8004d92:	68db      	ldr	r3, [r3, #12]
 8004d94:	f003 0301 	and.w	r3, r3, #1
 8004d98:	2b01      	cmp	r3, #1
 8004d9a:	d107      	bne.n	8004dac <HAL_TIM_IRQHandler+0x184>
 8004d9c:	687b      	ldr	r3, [r7, #4]
 8004d9e:	681b      	ldr	r3, [r3, #0]
 8004da0:	f06f 0201 	mvn.w	r2, #1
 8004da4:	611a      	str	r2, [r3, #16]
 8004da6:	6878      	ldr	r0, [r7, #4]
 8004da8:	f7fd fdb6 	bl	8002918 <HAL_TIM_PeriodElapsedCallback>
 8004dac:	687b      	ldr	r3, [r7, #4]
 8004dae:	681b      	ldr	r3, [r3, #0]
 8004db0:	691b      	ldr	r3, [r3, #16]
 8004db2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004db6:	2b80      	cmp	r3, #128	; 0x80
 8004db8:	d10e      	bne.n	8004dd8 <HAL_TIM_IRQHandler+0x1b0>
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	681b      	ldr	r3, [r3, #0]
 8004dbe:	68db      	ldr	r3, [r3, #12]
 8004dc0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004dc4:	2b80      	cmp	r3, #128	; 0x80
 8004dc6:	d107      	bne.n	8004dd8 <HAL_TIM_IRQHandler+0x1b0>
 8004dc8:	687b      	ldr	r3, [r7, #4]
 8004dca:	681b      	ldr	r3, [r3, #0]
 8004dcc:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8004dd0:	611a      	str	r2, [r3, #16]
 8004dd2:	6878      	ldr	r0, [r7, #4]
 8004dd4:	f000 fefc 	bl	8005bd0 <HAL_TIMEx_BreakCallback>
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	681b      	ldr	r3, [r3, #0]
 8004ddc:	691b      	ldr	r3, [r3, #16]
 8004dde:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004de2:	2b40      	cmp	r3, #64	; 0x40
 8004de4:	d10e      	bne.n	8004e04 <HAL_TIM_IRQHandler+0x1dc>
 8004de6:	687b      	ldr	r3, [r7, #4]
 8004de8:	681b      	ldr	r3, [r3, #0]
 8004dea:	68db      	ldr	r3, [r3, #12]
 8004dec:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004df0:	2b40      	cmp	r3, #64	; 0x40
 8004df2:	d107      	bne.n	8004e04 <HAL_TIM_IRQHandler+0x1dc>
 8004df4:	687b      	ldr	r3, [r7, #4]
 8004df6:	681b      	ldr	r3, [r3, #0]
 8004df8:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8004dfc:	611a      	str	r2, [r3, #16]
 8004dfe:	6878      	ldr	r0, [r7, #4]
 8004e00:	f000 fa1c 	bl	800523c <HAL_TIM_TriggerCallback>
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	681b      	ldr	r3, [r3, #0]
 8004e08:	691b      	ldr	r3, [r3, #16]
 8004e0a:	f003 0320 	and.w	r3, r3, #32
 8004e0e:	2b20      	cmp	r3, #32
 8004e10:	d10e      	bne.n	8004e30 <HAL_TIM_IRQHandler+0x208>
 8004e12:	687b      	ldr	r3, [r7, #4]
 8004e14:	681b      	ldr	r3, [r3, #0]
 8004e16:	68db      	ldr	r3, [r3, #12]
 8004e18:	f003 0320 	and.w	r3, r3, #32
 8004e1c:	2b20      	cmp	r3, #32
 8004e1e:	d107      	bne.n	8004e30 <HAL_TIM_IRQHandler+0x208>
 8004e20:	687b      	ldr	r3, [r7, #4]
 8004e22:	681b      	ldr	r3, [r3, #0]
 8004e24:	f06f 0220 	mvn.w	r2, #32
 8004e28:	611a      	str	r2, [r3, #16]
 8004e2a:	6878      	ldr	r0, [r7, #4]
 8004e2c:	f000 fec6 	bl	8005bbc <HAL_TIMEx_CommutCallback>
 8004e30:	bf00      	nop
 8004e32:	3708      	adds	r7, #8
 8004e34:	46bd      	mov	sp, r7
 8004e36:	bd80      	pop	{r7, pc}

08004e38 <HAL_TIM_OC_ConfigChannel>:
 8004e38:	b580      	push	{r7, lr}
 8004e3a:	b084      	sub	sp, #16
 8004e3c:	af00      	add	r7, sp, #0
 8004e3e:	60f8      	str	r0, [r7, #12]
 8004e40:	60b9      	str	r1, [r7, #8]
 8004e42:	607a      	str	r2, [r7, #4]
 8004e44:	68fb      	ldr	r3, [r7, #12]
 8004e46:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004e4a:	2b01      	cmp	r3, #1
 8004e4c:	d101      	bne.n	8004e52 <HAL_TIM_OC_ConfigChannel+0x1a>
 8004e4e:	2302      	movs	r3, #2
 8004e50:	e04e      	b.n	8004ef0 <HAL_TIM_OC_ConfigChannel+0xb8>
 8004e52:	68fb      	ldr	r3, [r7, #12]
 8004e54:	2201      	movs	r2, #1
 8004e56:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004e5a:	68fb      	ldr	r3, [r7, #12]
 8004e5c:	2202      	movs	r2, #2
 8004e5e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004e62:	687b      	ldr	r3, [r7, #4]
 8004e64:	2b0c      	cmp	r3, #12
 8004e66:	d839      	bhi.n	8004edc <HAL_TIM_OC_ConfigChannel+0xa4>
 8004e68:	a201      	add	r2, pc, #4	; (adr r2, 8004e70 <HAL_TIM_OC_ConfigChannel+0x38>)
 8004e6a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004e6e:	bf00      	nop
 8004e70:	08004ea5 	.word	0x08004ea5
 8004e74:	08004edd 	.word	0x08004edd
 8004e78:	08004edd 	.word	0x08004edd
 8004e7c:	08004edd 	.word	0x08004edd
 8004e80:	08004eb3 	.word	0x08004eb3
 8004e84:	08004edd 	.word	0x08004edd
 8004e88:	08004edd 	.word	0x08004edd
 8004e8c:	08004edd 	.word	0x08004edd
 8004e90:	08004ec1 	.word	0x08004ec1
 8004e94:	08004edd 	.word	0x08004edd
 8004e98:	08004edd 	.word	0x08004edd
 8004e9c:	08004edd 	.word	0x08004edd
 8004ea0:	08004ecf 	.word	0x08004ecf
 8004ea4:	68fb      	ldr	r3, [r7, #12]
 8004ea6:	681b      	ldr	r3, [r3, #0]
 8004ea8:	68b9      	ldr	r1, [r7, #8]
 8004eaa:	4618      	mov	r0, r3
 8004eac:	f000 fa70 	bl	8005390 <TIM_OC1_SetConfig>
 8004eb0:	e015      	b.n	8004ede <HAL_TIM_OC_ConfigChannel+0xa6>
 8004eb2:	68fb      	ldr	r3, [r7, #12]
 8004eb4:	681b      	ldr	r3, [r3, #0]
 8004eb6:	68b9      	ldr	r1, [r7, #8]
 8004eb8:	4618      	mov	r0, r3
 8004eba:	f000 fad9 	bl	8005470 <TIM_OC2_SetConfig>
 8004ebe:	e00e      	b.n	8004ede <HAL_TIM_OC_ConfigChannel+0xa6>
 8004ec0:	68fb      	ldr	r3, [r7, #12]
 8004ec2:	681b      	ldr	r3, [r3, #0]
 8004ec4:	68b9      	ldr	r1, [r7, #8]
 8004ec6:	4618      	mov	r0, r3
 8004ec8:	f000 fb48 	bl	800555c <TIM_OC3_SetConfig>
 8004ecc:	e007      	b.n	8004ede <HAL_TIM_OC_ConfigChannel+0xa6>
 8004ece:	68fb      	ldr	r3, [r7, #12]
 8004ed0:	681b      	ldr	r3, [r3, #0]
 8004ed2:	68b9      	ldr	r1, [r7, #8]
 8004ed4:	4618      	mov	r0, r3
 8004ed6:	f000 fbb5 	bl	8005644 <TIM_OC4_SetConfig>
 8004eda:	e000      	b.n	8004ede <HAL_TIM_OC_ConfigChannel+0xa6>
 8004edc:	bf00      	nop
 8004ede:	68fb      	ldr	r3, [r7, #12]
 8004ee0:	2201      	movs	r2, #1
 8004ee2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004ee6:	68fb      	ldr	r3, [r7, #12]
 8004ee8:	2200      	movs	r2, #0
 8004eea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004eee:	2300      	movs	r3, #0
 8004ef0:	4618      	mov	r0, r3
 8004ef2:	3710      	adds	r7, #16
 8004ef4:	46bd      	mov	sp, r7
 8004ef6:	bd80      	pop	{r7, pc}

08004ef8 <HAL_TIM_IC_ConfigChannel>:
 8004ef8:	b580      	push	{r7, lr}
 8004efa:	b084      	sub	sp, #16
 8004efc:	af00      	add	r7, sp, #0
 8004efe:	60f8      	str	r0, [r7, #12]
 8004f00:	60b9      	str	r1, [r7, #8]
 8004f02:	607a      	str	r2, [r7, #4]
 8004f04:	68fb      	ldr	r3, [r7, #12]
 8004f06:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004f0a:	2b01      	cmp	r3, #1
 8004f0c:	d101      	bne.n	8004f12 <HAL_TIM_IC_ConfigChannel+0x1a>
 8004f0e:	2302      	movs	r3, #2
 8004f10:	e08a      	b.n	8005028 <HAL_TIM_IC_ConfigChannel+0x130>
 8004f12:	68fb      	ldr	r3, [r7, #12]
 8004f14:	2201      	movs	r2, #1
 8004f16:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004f1a:	68fb      	ldr	r3, [r7, #12]
 8004f1c:	2202      	movs	r2, #2
 8004f1e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004f22:	687b      	ldr	r3, [r7, #4]
 8004f24:	2b00      	cmp	r3, #0
 8004f26:	d11b      	bne.n	8004f60 <HAL_TIM_IC_ConfigChannel+0x68>
 8004f28:	68fb      	ldr	r3, [r7, #12]
 8004f2a:	6818      	ldr	r0, [r3, #0]
 8004f2c:	68bb      	ldr	r3, [r7, #8]
 8004f2e:	6819      	ldr	r1, [r3, #0]
 8004f30:	68bb      	ldr	r3, [r7, #8]
 8004f32:	685a      	ldr	r2, [r3, #4]
 8004f34:	68bb      	ldr	r3, [r7, #8]
 8004f36:	68db      	ldr	r3, [r3, #12]
 8004f38:	f000 fbda 	bl	80056f0 <TIM_TI1_SetConfig>
 8004f3c:	68fb      	ldr	r3, [r7, #12]
 8004f3e:	681b      	ldr	r3, [r3, #0]
 8004f40:	699a      	ldr	r2, [r3, #24]
 8004f42:	68fb      	ldr	r3, [r7, #12]
 8004f44:	681b      	ldr	r3, [r3, #0]
 8004f46:	f022 020c 	bic.w	r2, r2, #12
 8004f4a:	619a      	str	r2, [r3, #24]
 8004f4c:	68fb      	ldr	r3, [r7, #12]
 8004f4e:	681b      	ldr	r3, [r3, #0]
 8004f50:	6999      	ldr	r1, [r3, #24]
 8004f52:	68bb      	ldr	r3, [r7, #8]
 8004f54:	689a      	ldr	r2, [r3, #8]
 8004f56:	68fb      	ldr	r3, [r7, #12]
 8004f58:	681b      	ldr	r3, [r3, #0]
 8004f5a:	430a      	orrs	r2, r1
 8004f5c:	619a      	str	r2, [r3, #24]
 8004f5e:	e05a      	b.n	8005016 <HAL_TIM_IC_ConfigChannel+0x11e>
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	2b04      	cmp	r3, #4
 8004f64:	d11c      	bne.n	8004fa0 <HAL_TIM_IC_ConfigChannel+0xa8>
 8004f66:	68fb      	ldr	r3, [r7, #12]
 8004f68:	6818      	ldr	r0, [r3, #0]
 8004f6a:	68bb      	ldr	r3, [r7, #8]
 8004f6c:	6819      	ldr	r1, [r3, #0]
 8004f6e:	68bb      	ldr	r3, [r7, #8]
 8004f70:	685a      	ldr	r2, [r3, #4]
 8004f72:	68bb      	ldr	r3, [r7, #8]
 8004f74:	68db      	ldr	r3, [r3, #12]
 8004f76:	f000 fc5e 	bl	8005836 <TIM_TI2_SetConfig>
 8004f7a:	68fb      	ldr	r3, [r7, #12]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	699a      	ldr	r2, [r3, #24]
 8004f80:	68fb      	ldr	r3, [r7, #12]
 8004f82:	681b      	ldr	r3, [r3, #0]
 8004f84:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8004f88:	619a      	str	r2, [r3, #24]
 8004f8a:	68fb      	ldr	r3, [r7, #12]
 8004f8c:	681b      	ldr	r3, [r3, #0]
 8004f8e:	6999      	ldr	r1, [r3, #24]
 8004f90:	68bb      	ldr	r3, [r7, #8]
 8004f92:	689b      	ldr	r3, [r3, #8]
 8004f94:	021a      	lsls	r2, r3, #8
 8004f96:	68fb      	ldr	r3, [r7, #12]
 8004f98:	681b      	ldr	r3, [r3, #0]
 8004f9a:	430a      	orrs	r2, r1
 8004f9c:	619a      	str	r2, [r3, #24]
 8004f9e:	e03a      	b.n	8005016 <HAL_TIM_IC_ConfigChannel+0x11e>
 8004fa0:	687b      	ldr	r3, [r7, #4]
 8004fa2:	2b08      	cmp	r3, #8
 8004fa4:	d11b      	bne.n	8004fde <HAL_TIM_IC_ConfigChannel+0xe6>
 8004fa6:	68fb      	ldr	r3, [r7, #12]
 8004fa8:	6818      	ldr	r0, [r3, #0]
 8004faa:	68bb      	ldr	r3, [r7, #8]
 8004fac:	6819      	ldr	r1, [r3, #0]
 8004fae:	68bb      	ldr	r3, [r7, #8]
 8004fb0:	685a      	ldr	r2, [r3, #4]
 8004fb2:	68bb      	ldr	r3, [r7, #8]
 8004fb4:	68db      	ldr	r3, [r3, #12]
 8004fb6:	f000 fcab 	bl	8005910 <TIM_TI3_SetConfig>
 8004fba:	68fb      	ldr	r3, [r7, #12]
 8004fbc:	681b      	ldr	r3, [r3, #0]
 8004fbe:	69da      	ldr	r2, [r3, #28]
 8004fc0:	68fb      	ldr	r3, [r7, #12]
 8004fc2:	681b      	ldr	r3, [r3, #0]
 8004fc4:	f022 020c 	bic.w	r2, r2, #12
 8004fc8:	61da      	str	r2, [r3, #28]
 8004fca:	68fb      	ldr	r3, [r7, #12]
 8004fcc:	681b      	ldr	r3, [r3, #0]
 8004fce:	69d9      	ldr	r1, [r3, #28]
 8004fd0:	68bb      	ldr	r3, [r7, #8]
 8004fd2:	689a      	ldr	r2, [r3, #8]
 8004fd4:	68fb      	ldr	r3, [r7, #12]
 8004fd6:	681b      	ldr	r3, [r3, #0]
 8004fd8:	430a      	orrs	r2, r1
 8004fda:	61da      	str	r2, [r3, #28]
 8004fdc:	e01b      	b.n	8005016 <HAL_TIM_IC_ConfigChannel+0x11e>
 8004fde:	68fb      	ldr	r3, [r7, #12]
 8004fe0:	6818      	ldr	r0, [r3, #0]
 8004fe2:	68bb      	ldr	r3, [r7, #8]
 8004fe4:	6819      	ldr	r1, [r3, #0]
 8004fe6:	68bb      	ldr	r3, [r7, #8]
 8004fe8:	685a      	ldr	r2, [r3, #4]
 8004fea:	68bb      	ldr	r3, [r7, #8]
 8004fec:	68db      	ldr	r3, [r3, #12]
 8004fee:	f000 fccb 	bl	8005988 <TIM_TI4_SetConfig>
 8004ff2:	68fb      	ldr	r3, [r7, #12]
 8004ff4:	681b      	ldr	r3, [r3, #0]
 8004ff6:	69da      	ldr	r2, [r3, #28]
 8004ff8:	68fb      	ldr	r3, [r7, #12]
 8004ffa:	681b      	ldr	r3, [r3, #0]
 8004ffc:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8005000:	61da      	str	r2, [r3, #28]
 8005002:	68fb      	ldr	r3, [r7, #12]
 8005004:	681b      	ldr	r3, [r3, #0]
 8005006:	69d9      	ldr	r1, [r3, #28]
 8005008:	68bb      	ldr	r3, [r7, #8]
 800500a:	689b      	ldr	r3, [r3, #8]
 800500c:	021a      	lsls	r2, r3, #8
 800500e:	68fb      	ldr	r3, [r7, #12]
 8005010:	681b      	ldr	r3, [r3, #0]
 8005012:	430a      	orrs	r2, r1
 8005014:	61da      	str	r2, [r3, #28]
 8005016:	68fb      	ldr	r3, [r7, #12]
 8005018:	2201      	movs	r2, #1
 800501a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800501e:	68fb      	ldr	r3, [r7, #12]
 8005020:	2200      	movs	r2, #0
 8005022:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005026:	2300      	movs	r3, #0
 8005028:	4618      	mov	r0, r3
 800502a:	3710      	adds	r7, #16
 800502c:	46bd      	mov	sp, r7
 800502e:	bd80      	pop	{r7, pc}

08005030 <HAL_TIM_ConfigClockSource>:
 8005030:	b580      	push	{r7, lr}
 8005032:	b084      	sub	sp, #16
 8005034:	af00      	add	r7, sp, #0
 8005036:	6078      	str	r0, [r7, #4]
 8005038:	6039      	str	r1, [r7, #0]
 800503a:	687b      	ldr	r3, [r7, #4]
 800503c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005040:	2b01      	cmp	r3, #1
 8005042:	d101      	bne.n	8005048 <HAL_TIM_ConfigClockSource+0x18>
 8005044:	2302      	movs	r3, #2
 8005046:	e0a6      	b.n	8005196 <HAL_TIM_ConfigClockSource+0x166>
 8005048:	687b      	ldr	r3, [r7, #4]
 800504a:	2201      	movs	r2, #1
 800504c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005050:	687b      	ldr	r3, [r7, #4]
 8005052:	2202      	movs	r2, #2
 8005054:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	681b      	ldr	r3, [r3, #0]
 800505c:	689b      	ldr	r3, [r3, #8]
 800505e:	60fb      	str	r3, [r7, #12]
 8005060:	68fb      	ldr	r3, [r7, #12]
 8005062:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8005066:	60fb      	str	r3, [r7, #12]
 8005068:	68fb      	ldr	r3, [r7, #12]
 800506a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800506e:	60fb      	str	r3, [r7, #12]
 8005070:	687b      	ldr	r3, [r7, #4]
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	68fa      	ldr	r2, [r7, #12]
 8005076:	609a      	str	r2, [r3, #8]
 8005078:	683b      	ldr	r3, [r7, #0]
 800507a:	681b      	ldr	r3, [r3, #0]
 800507c:	2b40      	cmp	r3, #64	; 0x40
 800507e:	d067      	beq.n	8005150 <HAL_TIM_ConfigClockSource+0x120>
 8005080:	2b40      	cmp	r3, #64	; 0x40
 8005082:	d80b      	bhi.n	800509c <HAL_TIM_ConfigClockSource+0x6c>
 8005084:	2b10      	cmp	r3, #16
 8005086:	d073      	beq.n	8005170 <HAL_TIM_ConfigClockSource+0x140>
 8005088:	2b10      	cmp	r3, #16
 800508a:	d802      	bhi.n	8005092 <HAL_TIM_ConfigClockSource+0x62>
 800508c:	2b00      	cmp	r3, #0
 800508e:	d06f      	beq.n	8005170 <HAL_TIM_ConfigClockSource+0x140>
 8005090:	e078      	b.n	8005184 <HAL_TIM_ConfigClockSource+0x154>
 8005092:	2b20      	cmp	r3, #32
 8005094:	d06c      	beq.n	8005170 <HAL_TIM_ConfigClockSource+0x140>
 8005096:	2b30      	cmp	r3, #48	; 0x30
 8005098:	d06a      	beq.n	8005170 <HAL_TIM_ConfigClockSource+0x140>
 800509a:	e073      	b.n	8005184 <HAL_TIM_ConfigClockSource+0x154>
 800509c:	2b70      	cmp	r3, #112	; 0x70
 800509e:	d00d      	beq.n	80050bc <HAL_TIM_ConfigClockSource+0x8c>
 80050a0:	2b70      	cmp	r3, #112	; 0x70
 80050a2:	d804      	bhi.n	80050ae <HAL_TIM_ConfigClockSource+0x7e>
 80050a4:	2b50      	cmp	r3, #80	; 0x50
 80050a6:	d033      	beq.n	8005110 <HAL_TIM_ConfigClockSource+0xe0>
 80050a8:	2b60      	cmp	r3, #96	; 0x60
 80050aa:	d041      	beq.n	8005130 <HAL_TIM_ConfigClockSource+0x100>
 80050ac:	e06a      	b.n	8005184 <HAL_TIM_ConfigClockSource+0x154>
 80050ae:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80050b2:	d066      	beq.n	8005182 <HAL_TIM_ConfigClockSource+0x152>
 80050b4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80050b8:	d017      	beq.n	80050ea <HAL_TIM_ConfigClockSource+0xba>
 80050ba:	e063      	b.n	8005184 <HAL_TIM_ConfigClockSource+0x154>
 80050bc:	687b      	ldr	r3, [r7, #4]
 80050be:	6818      	ldr	r0, [r3, #0]
 80050c0:	683b      	ldr	r3, [r7, #0]
 80050c2:	6899      	ldr	r1, [r3, #8]
 80050c4:	683b      	ldr	r3, [r7, #0]
 80050c6:	685a      	ldr	r2, [r3, #4]
 80050c8:	683b      	ldr	r3, [r7, #0]
 80050ca:	68db      	ldr	r3, [r3, #12]
 80050cc:	f000 fcb4 	bl	8005a38 <TIM_ETR_SetConfig>
 80050d0:	687b      	ldr	r3, [r7, #4]
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	689b      	ldr	r3, [r3, #8]
 80050d6:	60fb      	str	r3, [r7, #12]
 80050d8:	68fb      	ldr	r3, [r7, #12]
 80050da:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80050de:	60fb      	str	r3, [r7, #12]
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	681b      	ldr	r3, [r3, #0]
 80050e4:	68fa      	ldr	r2, [r7, #12]
 80050e6:	609a      	str	r2, [r3, #8]
 80050e8:	e04c      	b.n	8005184 <HAL_TIM_ConfigClockSource+0x154>
 80050ea:	687b      	ldr	r3, [r7, #4]
 80050ec:	6818      	ldr	r0, [r3, #0]
 80050ee:	683b      	ldr	r3, [r7, #0]
 80050f0:	6899      	ldr	r1, [r3, #8]
 80050f2:	683b      	ldr	r3, [r7, #0]
 80050f4:	685a      	ldr	r2, [r3, #4]
 80050f6:	683b      	ldr	r3, [r7, #0]
 80050f8:	68db      	ldr	r3, [r3, #12]
 80050fa:	f000 fc9d 	bl	8005a38 <TIM_ETR_SetConfig>
 80050fe:	687b      	ldr	r3, [r7, #4]
 8005100:	681b      	ldr	r3, [r3, #0]
 8005102:	689a      	ldr	r2, [r3, #8]
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800510c:	609a      	str	r2, [r3, #8]
 800510e:	e039      	b.n	8005184 <HAL_TIM_ConfigClockSource+0x154>
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	6818      	ldr	r0, [r3, #0]
 8005114:	683b      	ldr	r3, [r7, #0]
 8005116:	6859      	ldr	r1, [r3, #4]
 8005118:	683b      	ldr	r3, [r7, #0]
 800511a:	68db      	ldr	r3, [r3, #12]
 800511c:	461a      	mov	r2, r3
 800511e:	f000 fb5b 	bl	80057d8 <TIM_TI1_ConfigInputStage>
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	681b      	ldr	r3, [r3, #0]
 8005126:	2150      	movs	r1, #80	; 0x50
 8005128:	4618      	mov	r0, r3
 800512a:	f000 fc6a 	bl	8005a02 <TIM_ITRx_SetConfig>
 800512e:	e029      	b.n	8005184 <HAL_TIM_ConfigClockSource+0x154>
 8005130:	687b      	ldr	r3, [r7, #4]
 8005132:	6818      	ldr	r0, [r3, #0]
 8005134:	683b      	ldr	r3, [r7, #0]
 8005136:	6859      	ldr	r1, [r3, #4]
 8005138:	683b      	ldr	r3, [r7, #0]
 800513a:	68db      	ldr	r3, [r3, #12]
 800513c:	461a      	mov	r2, r3
 800513e:	f000 fbb7 	bl	80058b0 <TIM_TI2_ConfigInputStage>
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	681b      	ldr	r3, [r3, #0]
 8005146:	2160      	movs	r1, #96	; 0x60
 8005148:	4618      	mov	r0, r3
 800514a:	f000 fc5a 	bl	8005a02 <TIM_ITRx_SetConfig>
 800514e:	e019      	b.n	8005184 <HAL_TIM_ConfigClockSource+0x154>
 8005150:	687b      	ldr	r3, [r7, #4]
 8005152:	6818      	ldr	r0, [r3, #0]
 8005154:	683b      	ldr	r3, [r7, #0]
 8005156:	6859      	ldr	r1, [r3, #4]
 8005158:	683b      	ldr	r3, [r7, #0]
 800515a:	68db      	ldr	r3, [r3, #12]
 800515c:	461a      	mov	r2, r3
 800515e:	f000 fb3b 	bl	80057d8 <TIM_TI1_ConfigInputStage>
 8005162:	687b      	ldr	r3, [r7, #4]
 8005164:	681b      	ldr	r3, [r3, #0]
 8005166:	2140      	movs	r1, #64	; 0x40
 8005168:	4618      	mov	r0, r3
 800516a:	f000 fc4a 	bl	8005a02 <TIM_ITRx_SetConfig>
 800516e:	e009      	b.n	8005184 <HAL_TIM_ConfigClockSource+0x154>
 8005170:	687b      	ldr	r3, [r7, #4]
 8005172:	681a      	ldr	r2, [r3, #0]
 8005174:	683b      	ldr	r3, [r7, #0]
 8005176:	681b      	ldr	r3, [r3, #0]
 8005178:	4619      	mov	r1, r3
 800517a:	4610      	mov	r0, r2
 800517c:	f000 fc41 	bl	8005a02 <TIM_ITRx_SetConfig>
 8005180:	e000      	b.n	8005184 <HAL_TIM_ConfigClockSource+0x154>
 8005182:	bf00      	nop
 8005184:	687b      	ldr	r3, [r7, #4]
 8005186:	2201      	movs	r2, #1
 8005188:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800518c:	687b      	ldr	r3, [r7, #4]
 800518e:	2200      	movs	r2, #0
 8005190:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005194:	2300      	movs	r3, #0
 8005196:	4618      	mov	r0, r3
 8005198:	3710      	adds	r7, #16
 800519a:	46bd      	mov	sp, r7
 800519c:	bd80      	pop	{r7, pc}
	...

080051a0 <HAL_TIM_ReadCapturedValue>:
 80051a0:	b480      	push	{r7}
 80051a2:	b085      	sub	sp, #20
 80051a4:	af00      	add	r7, sp, #0
 80051a6:	6078      	str	r0, [r7, #4]
 80051a8:	6039      	str	r1, [r7, #0]
 80051aa:	2300      	movs	r3, #0
 80051ac:	60fb      	str	r3, [r7, #12]
 80051ae:	683b      	ldr	r3, [r7, #0]
 80051b0:	2b0c      	cmp	r3, #12
 80051b2:	d831      	bhi.n	8005218 <HAL_TIM_ReadCapturedValue+0x78>
 80051b4:	a201      	add	r2, pc, #4	; (adr r2, 80051bc <HAL_TIM_ReadCapturedValue+0x1c>)
 80051b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80051ba:	bf00      	nop
 80051bc:	080051f1 	.word	0x080051f1
 80051c0:	08005219 	.word	0x08005219
 80051c4:	08005219 	.word	0x08005219
 80051c8:	08005219 	.word	0x08005219
 80051cc:	080051fb 	.word	0x080051fb
 80051d0:	08005219 	.word	0x08005219
 80051d4:	08005219 	.word	0x08005219
 80051d8:	08005219 	.word	0x08005219
 80051dc:	08005205 	.word	0x08005205
 80051e0:	08005219 	.word	0x08005219
 80051e4:	08005219 	.word	0x08005219
 80051e8:	08005219 	.word	0x08005219
 80051ec:	0800520f 	.word	0x0800520f
 80051f0:	687b      	ldr	r3, [r7, #4]
 80051f2:	681b      	ldr	r3, [r3, #0]
 80051f4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80051f6:	60fb      	str	r3, [r7, #12]
 80051f8:	e00f      	b.n	800521a <HAL_TIM_ReadCapturedValue+0x7a>
 80051fa:	687b      	ldr	r3, [r7, #4]
 80051fc:	681b      	ldr	r3, [r3, #0]
 80051fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005200:	60fb      	str	r3, [r7, #12]
 8005202:	e00a      	b.n	800521a <HAL_TIM_ReadCapturedValue+0x7a>
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	681b      	ldr	r3, [r3, #0]
 8005208:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800520a:	60fb      	str	r3, [r7, #12]
 800520c:	e005      	b.n	800521a <HAL_TIM_ReadCapturedValue+0x7a>
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	681b      	ldr	r3, [r3, #0]
 8005212:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005214:	60fb      	str	r3, [r7, #12]
 8005216:	e000      	b.n	800521a <HAL_TIM_ReadCapturedValue+0x7a>
 8005218:	bf00      	nop
 800521a:	68fb      	ldr	r3, [r7, #12]
 800521c:	4618      	mov	r0, r3
 800521e:	3714      	adds	r7, #20
 8005220:	46bd      	mov	sp, r7
 8005222:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005226:	4770      	bx	lr

08005228 <HAL_TIM_PWM_PulseFinishedCallback>:
 8005228:	b480      	push	{r7}
 800522a:	b083      	sub	sp, #12
 800522c:	af00      	add	r7, sp, #0
 800522e:	6078      	str	r0, [r7, #4]
 8005230:	bf00      	nop
 8005232:	370c      	adds	r7, #12
 8005234:	46bd      	mov	sp, r7
 8005236:	f85d 7b04 	ldr.w	r7, [sp], #4
 800523a:	4770      	bx	lr

0800523c <HAL_TIM_TriggerCallback>:
 800523c:	b480      	push	{r7}
 800523e:	b083      	sub	sp, #12
 8005240:	af00      	add	r7, sp, #0
 8005242:	6078      	str	r0, [r7, #4]
 8005244:	bf00      	nop
 8005246:	370c      	adds	r7, #12
 8005248:	46bd      	mov	sp, r7
 800524a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800524e:	4770      	bx	lr

08005250 <TIM_Base_SetConfig>:
 8005250:	b480      	push	{r7}
 8005252:	b085      	sub	sp, #20
 8005254:	af00      	add	r7, sp, #0
 8005256:	6078      	str	r0, [r7, #4]
 8005258:	6039      	str	r1, [r7, #0]
 800525a:	687b      	ldr	r3, [r7, #4]
 800525c:	681b      	ldr	r3, [r3, #0]
 800525e:	60fb      	str	r3, [r7, #12]
 8005260:	687b      	ldr	r3, [r7, #4]
 8005262:	4a40      	ldr	r2, [pc, #256]	; (8005364 <TIM_Base_SetConfig+0x114>)
 8005264:	4293      	cmp	r3, r2
 8005266:	d013      	beq.n	8005290 <TIM_Base_SetConfig+0x40>
 8005268:	687b      	ldr	r3, [r7, #4]
 800526a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800526e:	d00f      	beq.n	8005290 <TIM_Base_SetConfig+0x40>
 8005270:	687b      	ldr	r3, [r7, #4]
 8005272:	4a3d      	ldr	r2, [pc, #244]	; (8005368 <TIM_Base_SetConfig+0x118>)
 8005274:	4293      	cmp	r3, r2
 8005276:	d00b      	beq.n	8005290 <TIM_Base_SetConfig+0x40>
 8005278:	687b      	ldr	r3, [r7, #4]
 800527a:	4a3c      	ldr	r2, [pc, #240]	; (800536c <TIM_Base_SetConfig+0x11c>)
 800527c:	4293      	cmp	r3, r2
 800527e:	d007      	beq.n	8005290 <TIM_Base_SetConfig+0x40>
 8005280:	687b      	ldr	r3, [r7, #4]
 8005282:	4a3b      	ldr	r2, [pc, #236]	; (8005370 <TIM_Base_SetConfig+0x120>)
 8005284:	4293      	cmp	r3, r2
 8005286:	d003      	beq.n	8005290 <TIM_Base_SetConfig+0x40>
 8005288:	687b      	ldr	r3, [r7, #4]
 800528a:	4a3a      	ldr	r2, [pc, #232]	; (8005374 <TIM_Base_SetConfig+0x124>)
 800528c:	4293      	cmp	r3, r2
 800528e:	d108      	bne.n	80052a2 <TIM_Base_SetConfig+0x52>
 8005290:	68fb      	ldr	r3, [r7, #12]
 8005292:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005296:	60fb      	str	r3, [r7, #12]
 8005298:	683b      	ldr	r3, [r7, #0]
 800529a:	685b      	ldr	r3, [r3, #4]
 800529c:	68fa      	ldr	r2, [r7, #12]
 800529e:	4313      	orrs	r3, r2
 80052a0:	60fb      	str	r3, [r7, #12]
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	4a2f      	ldr	r2, [pc, #188]	; (8005364 <TIM_Base_SetConfig+0x114>)
 80052a6:	4293      	cmp	r3, r2
 80052a8:	d02b      	beq.n	8005302 <TIM_Base_SetConfig+0xb2>
 80052aa:	687b      	ldr	r3, [r7, #4]
 80052ac:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80052b0:	d027      	beq.n	8005302 <TIM_Base_SetConfig+0xb2>
 80052b2:	687b      	ldr	r3, [r7, #4]
 80052b4:	4a2c      	ldr	r2, [pc, #176]	; (8005368 <TIM_Base_SetConfig+0x118>)
 80052b6:	4293      	cmp	r3, r2
 80052b8:	d023      	beq.n	8005302 <TIM_Base_SetConfig+0xb2>
 80052ba:	687b      	ldr	r3, [r7, #4]
 80052bc:	4a2b      	ldr	r2, [pc, #172]	; (800536c <TIM_Base_SetConfig+0x11c>)
 80052be:	4293      	cmp	r3, r2
 80052c0:	d01f      	beq.n	8005302 <TIM_Base_SetConfig+0xb2>
 80052c2:	687b      	ldr	r3, [r7, #4]
 80052c4:	4a2a      	ldr	r2, [pc, #168]	; (8005370 <TIM_Base_SetConfig+0x120>)
 80052c6:	4293      	cmp	r3, r2
 80052c8:	d01b      	beq.n	8005302 <TIM_Base_SetConfig+0xb2>
 80052ca:	687b      	ldr	r3, [r7, #4]
 80052cc:	4a29      	ldr	r2, [pc, #164]	; (8005374 <TIM_Base_SetConfig+0x124>)
 80052ce:	4293      	cmp	r3, r2
 80052d0:	d017      	beq.n	8005302 <TIM_Base_SetConfig+0xb2>
 80052d2:	687b      	ldr	r3, [r7, #4]
 80052d4:	4a28      	ldr	r2, [pc, #160]	; (8005378 <TIM_Base_SetConfig+0x128>)
 80052d6:	4293      	cmp	r3, r2
 80052d8:	d013      	beq.n	8005302 <TIM_Base_SetConfig+0xb2>
 80052da:	687b      	ldr	r3, [r7, #4]
 80052dc:	4a27      	ldr	r2, [pc, #156]	; (800537c <TIM_Base_SetConfig+0x12c>)
 80052de:	4293      	cmp	r3, r2
 80052e0:	d00f      	beq.n	8005302 <TIM_Base_SetConfig+0xb2>
 80052e2:	687b      	ldr	r3, [r7, #4]
 80052e4:	4a26      	ldr	r2, [pc, #152]	; (8005380 <TIM_Base_SetConfig+0x130>)
 80052e6:	4293      	cmp	r3, r2
 80052e8:	d00b      	beq.n	8005302 <TIM_Base_SetConfig+0xb2>
 80052ea:	687b      	ldr	r3, [r7, #4]
 80052ec:	4a25      	ldr	r2, [pc, #148]	; (8005384 <TIM_Base_SetConfig+0x134>)
 80052ee:	4293      	cmp	r3, r2
 80052f0:	d007      	beq.n	8005302 <TIM_Base_SetConfig+0xb2>
 80052f2:	687b      	ldr	r3, [r7, #4]
 80052f4:	4a24      	ldr	r2, [pc, #144]	; (8005388 <TIM_Base_SetConfig+0x138>)
 80052f6:	4293      	cmp	r3, r2
 80052f8:	d003      	beq.n	8005302 <TIM_Base_SetConfig+0xb2>
 80052fa:	687b      	ldr	r3, [r7, #4]
 80052fc:	4a23      	ldr	r2, [pc, #140]	; (800538c <TIM_Base_SetConfig+0x13c>)
 80052fe:	4293      	cmp	r3, r2
 8005300:	d108      	bne.n	8005314 <TIM_Base_SetConfig+0xc4>
 8005302:	68fb      	ldr	r3, [r7, #12]
 8005304:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005308:	60fb      	str	r3, [r7, #12]
 800530a:	683b      	ldr	r3, [r7, #0]
 800530c:	68db      	ldr	r3, [r3, #12]
 800530e:	68fa      	ldr	r2, [r7, #12]
 8005310:	4313      	orrs	r3, r2
 8005312:	60fb      	str	r3, [r7, #12]
 8005314:	68fb      	ldr	r3, [r7, #12]
 8005316:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800531a:	683b      	ldr	r3, [r7, #0]
 800531c:	695b      	ldr	r3, [r3, #20]
 800531e:	4313      	orrs	r3, r2
 8005320:	60fb      	str	r3, [r7, #12]
 8005322:	687b      	ldr	r3, [r7, #4]
 8005324:	68fa      	ldr	r2, [r7, #12]
 8005326:	601a      	str	r2, [r3, #0]
 8005328:	683b      	ldr	r3, [r7, #0]
 800532a:	689a      	ldr	r2, [r3, #8]
 800532c:	687b      	ldr	r3, [r7, #4]
 800532e:	62da      	str	r2, [r3, #44]	; 0x2c
 8005330:	683b      	ldr	r3, [r7, #0]
 8005332:	681a      	ldr	r2, [r3, #0]
 8005334:	687b      	ldr	r3, [r7, #4]
 8005336:	629a      	str	r2, [r3, #40]	; 0x28
 8005338:	687b      	ldr	r3, [r7, #4]
 800533a:	4a0a      	ldr	r2, [pc, #40]	; (8005364 <TIM_Base_SetConfig+0x114>)
 800533c:	4293      	cmp	r3, r2
 800533e:	d003      	beq.n	8005348 <TIM_Base_SetConfig+0xf8>
 8005340:	687b      	ldr	r3, [r7, #4]
 8005342:	4a0c      	ldr	r2, [pc, #48]	; (8005374 <TIM_Base_SetConfig+0x124>)
 8005344:	4293      	cmp	r3, r2
 8005346:	d103      	bne.n	8005350 <TIM_Base_SetConfig+0x100>
 8005348:	683b      	ldr	r3, [r7, #0]
 800534a:	691a      	ldr	r2, [r3, #16]
 800534c:	687b      	ldr	r3, [r7, #4]
 800534e:	631a      	str	r2, [r3, #48]	; 0x30
 8005350:	687b      	ldr	r3, [r7, #4]
 8005352:	2201      	movs	r2, #1
 8005354:	615a      	str	r2, [r3, #20]
 8005356:	bf00      	nop
 8005358:	3714      	adds	r7, #20
 800535a:	46bd      	mov	sp, r7
 800535c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005360:	4770      	bx	lr
 8005362:	bf00      	nop
 8005364:	40010000 	.word	0x40010000
 8005368:	40000400 	.word	0x40000400
 800536c:	40000800 	.word	0x40000800
 8005370:	40000c00 	.word	0x40000c00
 8005374:	40010400 	.word	0x40010400
 8005378:	40014000 	.word	0x40014000
 800537c:	40014400 	.word	0x40014400
 8005380:	40014800 	.word	0x40014800
 8005384:	40001800 	.word	0x40001800
 8005388:	40001c00 	.word	0x40001c00
 800538c:	40002000 	.word	0x40002000

08005390 <TIM_OC1_SetConfig>:
 8005390:	b480      	push	{r7}
 8005392:	b087      	sub	sp, #28
 8005394:	af00      	add	r7, sp, #0
 8005396:	6078      	str	r0, [r7, #4]
 8005398:	6039      	str	r1, [r7, #0]
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	6a1b      	ldr	r3, [r3, #32]
 800539e:	f023 0201 	bic.w	r2, r3, #1
 80053a2:	687b      	ldr	r3, [r7, #4]
 80053a4:	621a      	str	r2, [r3, #32]
 80053a6:	687b      	ldr	r3, [r7, #4]
 80053a8:	6a1b      	ldr	r3, [r3, #32]
 80053aa:	617b      	str	r3, [r7, #20]
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	685b      	ldr	r3, [r3, #4]
 80053b0:	613b      	str	r3, [r7, #16]
 80053b2:	687b      	ldr	r3, [r7, #4]
 80053b4:	699b      	ldr	r3, [r3, #24]
 80053b6:	60fb      	str	r3, [r7, #12]
 80053b8:	68fb      	ldr	r3, [r7, #12]
 80053ba:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80053be:	60fb      	str	r3, [r7, #12]
 80053c0:	68fb      	ldr	r3, [r7, #12]
 80053c2:	f023 0303 	bic.w	r3, r3, #3
 80053c6:	60fb      	str	r3, [r7, #12]
 80053c8:	683b      	ldr	r3, [r7, #0]
 80053ca:	681b      	ldr	r3, [r3, #0]
 80053cc:	68fa      	ldr	r2, [r7, #12]
 80053ce:	4313      	orrs	r3, r2
 80053d0:	60fb      	str	r3, [r7, #12]
 80053d2:	697b      	ldr	r3, [r7, #20]
 80053d4:	f023 0302 	bic.w	r3, r3, #2
 80053d8:	617b      	str	r3, [r7, #20]
 80053da:	683b      	ldr	r3, [r7, #0]
 80053dc:	689b      	ldr	r3, [r3, #8]
 80053de:	697a      	ldr	r2, [r7, #20]
 80053e0:	4313      	orrs	r3, r2
 80053e2:	617b      	str	r3, [r7, #20]
 80053e4:	687b      	ldr	r3, [r7, #4]
 80053e6:	4a20      	ldr	r2, [pc, #128]	; (8005468 <TIM_OC1_SetConfig+0xd8>)
 80053e8:	4293      	cmp	r3, r2
 80053ea:	d003      	beq.n	80053f4 <TIM_OC1_SetConfig+0x64>
 80053ec:	687b      	ldr	r3, [r7, #4]
 80053ee:	4a1f      	ldr	r2, [pc, #124]	; (800546c <TIM_OC1_SetConfig+0xdc>)
 80053f0:	4293      	cmp	r3, r2
 80053f2:	d10c      	bne.n	800540e <TIM_OC1_SetConfig+0x7e>
 80053f4:	697b      	ldr	r3, [r7, #20]
 80053f6:	f023 0308 	bic.w	r3, r3, #8
 80053fa:	617b      	str	r3, [r7, #20]
 80053fc:	683b      	ldr	r3, [r7, #0]
 80053fe:	68db      	ldr	r3, [r3, #12]
 8005400:	697a      	ldr	r2, [r7, #20]
 8005402:	4313      	orrs	r3, r2
 8005404:	617b      	str	r3, [r7, #20]
 8005406:	697b      	ldr	r3, [r7, #20]
 8005408:	f023 0304 	bic.w	r3, r3, #4
 800540c:	617b      	str	r3, [r7, #20]
 800540e:	687b      	ldr	r3, [r7, #4]
 8005410:	4a15      	ldr	r2, [pc, #84]	; (8005468 <TIM_OC1_SetConfig+0xd8>)
 8005412:	4293      	cmp	r3, r2
 8005414:	d003      	beq.n	800541e <TIM_OC1_SetConfig+0x8e>
 8005416:	687b      	ldr	r3, [r7, #4]
 8005418:	4a14      	ldr	r2, [pc, #80]	; (800546c <TIM_OC1_SetConfig+0xdc>)
 800541a:	4293      	cmp	r3, r2
 800541c:	d111      	bne.n	8005442 <TIM_OC1_SetConfig+0xb2>
 800541e:	693b      	ldr	r3, [r7, #16]
 8005420:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005424:	613b      	str	r3, [r7, #16]
 8005426:	693b      	ldr	r3, [r7, #16]
 8005428:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800542c:	613b      	str	r3, [r7, #16]
 800542e:	683b      	ldr	r3, [r7, #0]
 8005430:	695b      	ldr	r3, [r3, #20]
 8005432:	693a      	ldr	r2, [r7, #16]
 8005434:	4313      	orrs	r3, r2
 8005436:	613b      	str	r3, [r7, #16]
 8005438:	683b      	ldr	r3, [r7, #0]
 800543a:	699b      	ldr	r3, [r3, #24]
 800543c:	693a      	ldr	r2, [r7, #16]
 800543e:	4313      	orrs	r3, r2
 8005440:	613b      	str	r3, [r7, #16]
 8005442:	687b      	ldr	r3, [r7, #4]
 8005444:	693a      	ldr	r2, [r7, #16]
 8005446:	605a      	str	r2, [r3, #4]
 8005448:	687b      	ldr	r3, [r7, #4]
 800544a:	68fa      	ldr	r2, [r7, #12]
 800544c:	619a      	str	r2, [r3, #24]
 800544e:	683b      	ldr	r3, [r7, #0]
 8005450:	685a      	ldr	r2, [r3, #4]
 8005452:	687b      	ldr	r3, [r7, #4]
 8005454:	635a      	str	r2, [r3, #52]	; 0x34
 8005456:	687b      	ldr	r3, [r7, #4]
 8005458:	697a      	ldr	r2, [r7, #20]
 800545a:	621a      	str	r2, [r3, #32]
 800545c:	bf00      	nop
 800545e:	371c      	adds	r7, #28
 8005460:	46bd      	mov	sp, r7
 8005462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005466:	4770      	bx	lr
 8005468:	40010000 	.word	0x40010000
 800546c:	40010400 	.word	0x40010400

08005470 <TIM_OC2_SetConfig>:
 8005470:	b480      	push	{r7}
 8005472:	b087      	sub	sp, #28
 8005474:	af00      	add	r7, sp, #0
 8005476:	6078      	str	r0, [r7, #4]
 8005478:	6039      	str	r1, [r7, #0]
 800547a:	687b      	ldr	r3, [r7, #4]
 800547c:	6a1b      	ldr	r3, [r3, #32]
 800547e:	f023 0210 	bic.w	r2, r3, #16
 8005482:	687b      	ldr	r3, [r7, #4]
 8005484:	621a      	str	r2, [r3, #32]
 8005486:	687b      	ldr	r3, [r7, #4]
 8005488:	6a1b      	ldr	r3, [r3, #32]
 800548a:	617b      	str	r3, [r7, #20]
 800548c:	687b      	ldr	r3, [r7, #4]
 800548e:	685b      	ldr	r3, [r3, #4]
 8005490:	613b      	str	r3, [r7, #16]
 8005492:	687b      	ldr	r3, [r7, #4]
 8005494:	699b      	ldr	r3, [r3, #24]
 8005496:	60fb      	str	r3, [r7, #12]
 8005498:	68fb      	ldr	r3, [r7, #12]
 800549a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800549e:	60fb      	str	r3, [r7, #12]
 80054a0:	68fb      	ldr	r3, [r7, #12]
 80054a2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80054a6:	60fb      	str	r3, [r7, #12]
 80054a8:	683b      	ldr	r3, [r7, #0]
 80054aa:	681b      	ldr	r3, [r3, #0]
 80054ac:	021b      	lsls	r3, r3, #8
 80054ae:	68fa      	ldr	r2, [r7, #12]
 80054b0:	4313      	orrs	r3, r2
 80054b2:	60fb      	str	r3, [r7, #12]
 80054b4:	697b      	ldr	r3, [r7, #20]
 80054b6:	f023 0320 	bic.w	r3, r3, #32
 80054ba:	617b      	str	r3, [r7, #20]
 80054bc:	683b      	ldr	r3, [r7, #0]
 80054be:	689b      	ldr	r3, [r3, #8]
 80054c0:	011b      	lsls	r3, r3, #4
 80054c2:	697a      	ldr	r2, [r7, #20]
 80054c4:	4313      	orrs	r3, r2
 80054c6:	617b      	str	r3, [r7, #20]
 80054c8:	687b      	ldr	r3, [r7, #4]
 80054ca:	4a22      	ldr	r2, [pc, #136]	; (8005554 <TIM_OC2_SetConfig+0xe4>)
 80054cc:	4293      	cmp	r3, r2
 80054ce:	d003      	beq.n	80054d8 <TIM_OC2_SetConfig+0x68>
 80054d0:	687b      	ldr	r3, [r7, #4]
 80054d2:	4a21      	ldr	r2, [pc, #132]	; (8005558 <TIM_OC2_SetConfig+0xe8>)
 80054d4:	4293      	cmp	r3, r2
 80054d6:	d10d      	bne.n	80054f4 <TIM_OC2_SetConfig+0x84>
 80054d8:	697b      	ldr	r3, [r7, #20]
 80054da:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80054de:	617b      	str	r3, [r7, #20]
 80054e0:	683b      	ldr	r3, [r7, #0]
 80054e2:	68db      	ldr	r3, [r3, #12]
 80054e4:	011b      	lsls	r3, r3, #4
 80054e6:	697a      	ldr	r2, [r7, #20]
 80054e8:	4313      	orrs	r3, r2
 80054ea:	617b      	str	r3, [r7, #20]
 80054ec:	697b      	ldr	r3, [r7, #20]
 80054ee:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80054f2:	617b      	str	r3, [r7, #20]
 80054f4:	687b      	ldr	r3, [r7, #4]
 80054f6:	4a17      	ldr	r2, [pc, #92]	; (8005554 <TIM_OC2_SetConfig+0xe4>)
 80054f8:	4293      	cmp	r3, r2
 80054fa:	d003      	beq.n	8005504 <TIM_OC2_SetConfig+0x94>
 80054fc:	687b      	ldr	r3, [r7, #4]
 80054fe:	4a16      	ldr	r2, [pc, #88]	; (8005558 <TIM_OC2_SetConfig+0xe8>)
 8005500:	4293      	cmp	r3, r2
 8005502:	d113      	bne.n	800552c <TIM_OC2_SetConfig+0xbc>
 8005504:	693b      	ldr	r3, [r7, #16]
 8005506:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800550a:	613b      	str	r3, [r7, #16]
 800550c:	693b      	ldr	r3, [r7, #16]
 800550e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005512:	613b      	str	r3, [r7, #16]
 8005514:	683b      	ldr	r3, [r7, #0]
 8005516:	695b      	ldr	r3, [r3, #20]
 8005518:	009b      	lsls	r3, r3, #2
 800551a:	693a      	ldr	r2, [r7, #16]
 800551c:	4313      	orrs	r3, r2
 800551e:	613b      	str	r3, [r7, #16]
 8005520:	683b      	ldr	r3, [r7, #0]
 8005522:	699b      	ldr	r3, [r3, #24]
 8005524:	009b      	lsls	r3, r3, #2
 8005526:	693a      	ldr	r2, [r7, #16]
 8005528:	4313      	orrs	r3, r2
 800552a:	613b      	str	r3, [r7, #16]
 800552c:	687b      	ldr	r3, [r7, #4]
 800552e:	693a      	ldr	r2, [r7, #16]
 8005530:	605a      	str	r2, [r3, #4]
 8005532:	687b      	ldr	r3, [r7, #4]
 8005534:	68fa      	ldr	r2, [r7, #12]
 8005536:	619a      	str	r2, [r3, #24]
 8005538:	683b      	ldr	r3, [r7, #0]
 800553a:	685a      	ldr	r2, [r3, #4]
 800553c:	687b      	ldr	r3, [r7, #4]
 800553e:	639a      	str	r2, [r3, #56]	; 0x38
 8005540:	687b      	ldr	r3, [r7, #4]
 8005542:	697a      	ldr	r2, [r7, #20]
 8005544:	621a      	str	r2, [r3, #32]
 8005546:	bf00      	nop
 8005548:	371c      	adds	r7, #28
 800554a:	46bd      	mov	sp, r7
 800554c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005550:	4770      	bx	lr
 8005552:	bf00      	nop
 8005554:	40010000 	.word	0x40010000
 8005558:	40010400 	.word	0x40010400

0800555c <TIM_OC3_SetConfig>:
 800555c:	b480      	push	{r7}
 800555e:	b087      	sub	sp, #28
 8005560:	af00      	add	r7, sp, #0
 8005562:	6078      	str	r0, [r7, #4]
 8005564:	6039      	str	r1, [r7, #0]
 8005566:	687b      	ldr	r3, [r7, #4]
 8005568:	6a1b      	ldr	r3, [r3, #32]
 800556a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	621a      	str	r2, [r3, #32]
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	6a1b      	ldr	r3, [r3, #32]
 8005576:	617b      	str	r3, [r7, #20]
 8005578:	687b      	ldr	r3, [r7, #4]
 800557a:	685b      	ldr	r3, [r3, #4]
 800557c:	613b      	str	r3, [r7, #16]
 800557e:	687b      	ldr	r3, [r7, #4]
 8005580:	69db      	ldr	r3, [r3, #28]
 8005582:	60fb      	str	r3, [r7, #12]
 8005584:	68fb      	ldr	r3, [r7, #12]
 8005586:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800558a:	60fb      	str	r3, [r7, #12]
 800558c:	68fb      	ldr	r3, [r7, #12]
 800558e:	f023 0303 	bic.w	r3, r3, #3
 8005592:	60fb      	str	r3, [r7, #12]
 8005594:	683b      	ldr	r3, [r7, #0]
 8005596:	681b      	ldr	r3, [r3, #0]
 8005598:	68fa      	ldr	r2, [r7, #12]
 800559a:	4313      	orrs	r3, r2
 800559c:	60fb      	str	r3, [r7, #12]
 800559e:	697b      	ldr	r3, [r7, #20]
 80055a0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80055a4:	617b      	str	r3, [r7, #20]
 80055a6:	683b      	ldr	r3, [r7, #0]
 80055a8:	689b      	ldr	r3, [r3, #8]
 80055aa:	021b      	lsls	r3, r3, #8
 80055ac:	697a      	ldr	r2, [r7, #20]
 80055ae:	4313      	orrs	r3, r2
 80055b0:	617b      	str	r3, [r7, #20]
 80055b2:	687b      	ldr	r3, [r7, #4]
 80055b4:	4a21      	ldr	r2, [pc, #132]	; (800563c <TIM_OC3_SetConfig+0xe0>)
 80055b6:	4293      	cmp	r3, r2
 80055b8:	d003      	beq.n	80055c2 <TIM_OC3_SetConfig+0x66>
 80055ba:	687b      	ldr	r3, [r7, #4]
 80055bc:	4a20      	ldr	r2, [pc, #128]	; (8005640 <TIM_OC3_SetConfig+0xe4>)
 80055be:	4293      	cmp	r3, r2
 80055c0:	d10d      	bne.n	80055de <TIM_OC3_SetConfig+0x82>
 80055c2:	697b      	ldr	r3, [r7, #20]
 80055c4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80055c8:	617b      	str	r3, [r7, #20]
 80055ca:	683b      	ldr	r3, [r7, #0]
 80055cc:	68db      	ldr	r3, [r3, #12]
 80055ce:	021b      	lsls	r3, r3, #8
 80055d0:	697a      	ldr	r2, [r7, #20]
 80055d2:	4313      	orrs	r3, r2
 80055d4:	617b      	str	r3, [r7, #20]
 80055d6:	697b      	ldr	r3, [r7, #20]
 80055d8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80055dc:	617b      	str	r3, [r7, #20]
 80055de:	687b      	ldr	r3, [r7, #4]
 80055e0:	4a16      	ldr	r2, [pc, #88]	; (800563c <TIM_OC3_SetConfig+0xe0>)
 80055e2:	4293      	cmp	r3, r2
 80055e4:	d003      	beq.n	80055ee <TIM_OC3_SetConfig+0x92>
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	4a15      	ldr	r2, [pc, #84]	; (8005640 <TIM_OC3_SetConfig+0xe4>)
 80055ea:	4293      	cmp	r3, r2
 80055ec:	d113      	bne.n	8005616 <TIM_OC3_SetConfig+0xba>
 80055ee:	693b      	ldr	r3, [r7, #16]
 80055f0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80055f4:	613b      	str	r3, [r7, #16]
 80055f6:	693b      	ldr	r3, [r7, #16]
 80055f8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80055fc:	613b      	str	r3, [r7, #16]
 80055fe:	683b      	ldr	r3, [r7, #0]
 8005600:	695b      	ldr	r3, [r3, #20]
 8005602:	011b      	lsls	r3, r3, #4
 8005604:	693a      	ldr	r2, [r7, #16]
 8005606:	4313      	orrs	r3, r2
 8005608:	613b      	str	r3, [r7, #16]
 800560a:	683b      	ldr	r3, [r7, #0]
 800560c:	699b      	ldr	r3, [r3, #24]
 800560e:	011b      	lsls	r3, r3, #4
 8005610:	693a      	ldr	r2, [r7, #16]
 8005612:	4313      	orrs	r3, r2
 8005614:	613b      	str	r3, [r7, #16]
 8005616:	687b      	ldr	r3, [r7, #4]
 8005618:	693a      	ldr	r2, [r7, #16]
 800561a:	605a      	str	r2, [r3, #4]
 800561c:	687b      	ldr	r3, [r7, #4]
 800561e:	68fa      	ldr	r2, [r7, #12]
 8005620:	61da      	str	r2, [r3, #28]
 8005622:	683b      	ldr	r3, [r7, #0]
 8005624:	685a      	ldr	r2, [r3, #4]
 8005626:	687b      	ldr	r3, [r7, #4]
 8005628:	63da      	str	r2, [r3, #60]	; 0x3c
 800562a:	687b      	ldr	r3, [r7, #4]
 800562c:	697a      	ldr	r2, [r7, #20]
 800562e:	621a      	str	r2, [r3, #32]
 8005630:	bf00      	nop
 8005632:	371c      	adds	r7, #28
 8005634:	46bd      	mov	sp, r7
 8005636:	f85d 7b04 	ldr.w	r7, [sp], #4
 800563a:	4770      	bx	lr
 800563c:	40010000 	.word	0x40010000
 8005640:	40010400 	.word	0x40010400

08005644 <TIM_OC4_SetConfig>:
 8005644:	b480      	push	{r7}
 8005646:	b087      	sub	sp, #28
 8005648:	af00      	add	r7, sp, #0
 800564a:	6078      	str	r0, [r7, #4]
 800564c:	6039      	str	r1, [r7, #0]
 800564e:	687b      	ldr	r3, [r7, #4]
 8005650:	6a1b      	ldr	r3, [r3, #32]
 8005652:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8005656:	687b      	ldr	r3, [r7, #4]
 8005658:	621a      	str	r2, [r3, #32]
 800565a:	687b      	ldr	r3, [r7, #4]
 800565c:	6a1b      	ldr	r3, [r3, #32]
 800565e:	613b      	str	r3, [r7, #16]
 8005660:	687b      	ldr	r3, [r7, #4]
 8005662:	685b      	ldr	r3, [r3, #4]
 8005664:	617b      	str	r3, [r7, #20]
 8005666:	687b      	ldr	r3, [r7, #4]
 8005668:	69db      	ldr	r3, [r3, #28]
 800566a:	60fb      	str	r3, [r7, #12]
 800566c:	68fb      	ldr	r3, [r7, #12]
 800566e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005672:	60fb      	str	r3, [r7, #12]
 8005674:	68fb      	ldr	r3, [r7, #12]
 8005676:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800567a:	60fb      	str	r3, [r7, #12]
 800567c:	683b      	ldr	r3, [r7, #0]
 800567e:	681b      	ldr	r3, [r3, #0]
 8005680:	021b      	lsls	r3, r3, #8
 8005682:	68fa      	ldr	r2, [r7, #12]
 8005684:	4313      	orrs	r3, r2
 8005686:	60fb      	str	r3, [r7, #12]
 8005688:	693b      	ldr	r3, [r7, #16]
 800568a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800568e:	613b      	str	r3, [r7, #16]
 8005690:	683b      	ldr	r3, [r7, #0]
 8005692:	689b      	ldr	r3, [r3, #8]
 8005694:	031b      	lsls	r3, r3, #12
 8005696:	693a      	ldr	r2, [r7, #16]
 8005698:	4313      	orrs	r3, r2
 800569a:	613b      	str	r3, [r7, #16]
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	4a12      	ldr	r2, [pc, #72]	; (80056e8 <TIM_OC4_SetConfig+0xa4>)
 80056a0:	4293      	cmp	r3, r2
 80056a2:	d003      	beq.n	80056ac <TIM_OC4_SetConfig+0x68>
 80056a4:	687b      	ldr	r3, [r7, #4]
 80056a6:	4a11      	ldr	r2, [pc, #68]	; (80056ec <TIM_OC4_SetConfig+0xa8>)
 80056a8:	4293      	cmp	r3, r2
 80056aa:	d109      	bne.n	80056c0 <TIM_OC4_SetConfig+0x7c>
 80056ac:	697b      	ldr	r3, [r7, #20]
 80056ae:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80056b2:	617b      	str	r3, [r7, #20]
 80056b4:	683b      	ldr	r3, [r7, #0]
 80056b6:	695b      	ldr	r3, [r3, #20]
 80056b8:	019b      	lsls	r3, r3, #6
 80056ba:	697a      	ldr	r2, [r7, #20]
 80056bc:	4313      	orrs	r3, r2
 80056be:	617b      	str	r3, [r7, #20]
 80056c0:	687b      	ldr	r3, [r7, #4]
 80056c2:	697a      	ldr	r2, [r7, #20]
 80056c4:	605a      	str	r2, [r3, #4]
 80056c6:	687b      	ldr	r3, [r7, #4]
 80056c8:	68fa      	ldr	r2, [r7, #12]
 80056ca:	61da      	str	r2, [r3, #28]
 80056cc:	683b      	ldr	r3, [r7, #0]
 80056ce:	685a      	ldr	r2, [r3, #4]
 80056d0:	687b      	ldr	r3, [r7, #4]
 80056d2:	641a      	str	r2, [r3, #64]	; 0x40
 80056d4:	687b      	ldr	r3, [r7, #4]
 80056d6:	693a      	ldr	r2, [r7, #16]
 80056d8:	621a      	str	r2, [r3, #32]
 80056da:	bf00      	nop
 80056dc:	371c      	adds	r7, #28
 80056de:	46bd      	mov	sp, r7
 80056e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056e4:	4770      	bx	lr
 80056e6:	bf00      	nop
 80056e8:	40010000 	.word	0x40010000
 80056ec:	40010400 	.word	0x40010400

080056f0 <TIM_TI1_SetConfig>:
 80056f0:	b480      	push	{r7}
 80056f2:	b087      	sub	sp, #28
 80056f4:	af00      	add	r7, sp, #0
 80056f6:	60f8      	str	r0, [r7, #12]
 80056f8:	60b9      	str	r1, [r7, #8]
 80056fa:	607a      	str	r2, [r7, #4]
 80056fc:	603b      	str	r3, [r7, #0]
 80056fe:	68fb      	ldr	r3, [r7, #12]
 8005700:	6a1b      	ldr	r3, [r3, #32]
 8005702:	f023 0201 	bic.w	r2, r3, #1
 8005706:	68fb      	ldr	r3, [r7, #12]
 8005708:	621a      	str	r2, [r3, #32]
 800570a:	68fb      	ldr	r3, [r7, #12]
 800570c:	699b      	ldr	r3, [r3, #24]
 800570e:	617b      	str	r3, [r7, #20]
 8005710:	68fb      	ldr	r3, [r7, #12]
 8005712:	6a1b      	ldr	r3, [r3, #32]
 8005714:	613b      	str	r3, [r7, #16]
 8005716:	68fb      	ldr	r3, [r7, #12]
 8005718:	4a28      	ldr	r2, [pc, #160]	; (80057bc <TIM_TI1_SetConfig+0xcc>)
 800571a:	4293      	cmp	r3, r2
 800571c:	d01b      	beq.n	8005756 <TIM_TI1_SetConfig+0x66>
 800571e:	68fb      	ldr	r3, [r7, #12]
 8005720:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005724:	d017      	beq.n	8005756 <TIM_TI1_SetConfig+0x66>
 8005726:	68fb      	ldr	r3, [r7, #12]
 8005728:	4a25      	ldr	r2, [pc, #148]	; (80057c0 <TIM_TI1_SetConfig+0xd0>)
 800572a:	4293      	cmp	r3, r2
 800572c:	d013      	beq.n	8005756 <TIM_TI1_SetConfig+0x66>
 800572e:	68fb      	ldr	r3, [r7, #12]
 8005730:	4a24      	ldr	r2, [pc, #144]	; (80057c4 <TIM_TI1_SetConfig+0xd4>)
 8005732:	4293      	cmp	r3, r2
 8005734:	d00f      	beq.n	8005756 <TIM_TI1_SetConfig+0x66>
 8005736:	68fb      	ldr	r3, [r7, #12]
 8005738:	4a23      	ldr	r2, [pc, #140]	; (80057c8 <TIM_TI1_SetConfig+0xd8>)
 800573a:	4293      	cmp	r3, r2
 800573c:	d00b      	beq.n	8005756 <TIM_TI1_SetConfig+0x66>
 800573e:	68fb      	ldr	r3, [r7, #12]
 8005740:	4a22      	ldr	r2, [pc, #136]	; (80057cc <TIM_TI1_SetConfig+0xdc>)
 8005742:	4293      	cmp	r3, r2
 8005744:	d007      	beq.n	8005756 <TIM_TI1_SetConfig+0x66>
 8005746:	68fb      	ldr	r3, [r7, #12]
 8005748:	4a21      	ldr	r2, [pc, #132]	; (80057d0 <TIM_TI1_SetConfig+0xe0>)
 800574a:	4293      	cmp	r3, r2
 800574c:	d003      	beq.n	8005756 <TIM_TI1_SetConfig+0x66>
 800574e:	68fb      	ldr	r3, [r7, #12]
 8005750:	4a20      	ldr	r2, [pc, #128]	; (80057d4 <TIM_TI1_SetConfig+0xe4>)
 8005752:	4293      	cmp	r3, r2
 8005754:	d101      	bne.n	800575a <TIM_TI1_SetConfig+0x6a>
 8005756:	2301      	movs	r3, #1
 8005758:	e000      	b.n	800575c <TIM_TI1_SetConfig+0x6c>
 800575a:	2300      	movs	r3, #0
 800575c:	2b00      	cmp	r3, #0
 800575e:	d008      	beq.n	8005772 <TIM_TI1_SetConfig+0x82>
 8005760:	697b      	ldr	r3, [r7, #20]
 8005762:	f023 0303 	bic.w	r3, r3, #3
 8005766:	617b      	str	r3, [r7, #20]
 8005768:	697a      	ldr	r2, [r7, #20]
 800576a:	687b      	ldr	r3, [r7, #4]
 800576c:	4313      	orrs	r3, r2
 800576e:	617b      	str	r3, [r7, #20]
 8005770:	e003      	b.n	800577a <TIM_TI1_SetConfig+0x8a>
 8005772:	697b      	ldr	r3, [r7, #20]
 8005774:	f043 0301 	orr.w	r3, r3, #1
 8005778:	617b      	str	r3, [r7, #20]
 800577a:	697b      	ldr	r3, [r7, #20]
 800577c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005780:	617b      	str	r3, [r7, #20]
 8005782:	683b      	ldr	r3, [r7, #0]
 8005784:	011b      	lsls	r3, r3, #4
 8005786:	b2db      	uxtb	r3, r3
 8005788:	697a      	ldr	r2, [r7, #20]
 800578a:	4313      	orrs	r3, r2
 800578c:	617b      	str	r3, [r7, #20]
 800578e:	693b      	ldr	r3, [r7, #16]
 8005790:	f023 030a 	bic.w	r3, r3, #10
 8005794:	613b      	str	r3, [r7, #16]
 8005796:	68bb      	ldr	r3, [r7, #8]
 8005798:	f003 030a 	and.w	r3, r3, #10
 800579c:	693a      	ldr	r2, [r7, #16]
 800579e:	4313      	orrs	r3, r2
 80057a0:	613b      	str	r3, [r7, #16]
 80057a2:	68fb      	ldr	r3, [r7, #12]
 80057a4:	697a      	ldr	r2, [r7, #20]
 80057a6:	619a      	str	r2, [r3, #24]
 80057a8:	68fb      	ldr	r3, [r7, #12]
 80057aa:	693a      	ldr	r2, [r7, #16]
 80057ac:	621a      	str	r2, [r3, #32]
 80057ae:	bf00      	nop
 80057b0:	371c      	adds	r7, #28
 80057b2:	46bd      	mov	sp, r7
 80057b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057b8:	4770      	bx	lr
 80057ba:	bf00      	nop
 80057bc:	40010000 	.word	0x40010000
 80057c0:	40000400 	.word	0x40000400
 80057c4:	40000800 	.word	0x40000800
 80057c8:	40000c00 	.word	0x40000c00
 80057cc:	40010400 	.word	0x40010400
 80057d0:	40014000 	.word	0x40014000
 80057d4:	40001800 	.word	0x40001800

080057d8 <TIM_TI1_ConfigInputStage>:
 80057d8:	b480      	push	{r7}
 80057da:	b087      	sub	sp, #28
 80057dc:	af00      	add	r7, sp, #0
 80057de:	60f8      	str	r0, [r7, #12]
 80057e0:	60b9      	str	r1, [r7, #8]
 80057e2:	607a      	str	r2, [r7, #4]
 80057e4:	68fb      	ldr	r3, [r7, #12]
 80057e6:	6a1b      	ldr	r3, [r3, #32]
 80057e8:	617b      	str	r3, [r7, #20]
 80057ea:	68fb      	ldr	r3, [r7, #12]
 80057ec:	6a1b      	ldr	r3, [r3, #32]
 80057ee:	f023 0201 	bic.w	r2, r3, #1
 80057f2:	68fb      	ldr	r3, [r7, #12]
 80057f4:	621a      	str	r2, [r3, #32]
 80057f6:	68fb      	ldr	r3, [r7, #12]
 80057f8:	699b      	ldr	r3, [r3, #24]
 80057fa:	613b      	str	r3, [r7, #16]
 80057fc:	693b      	ldr	r3, [r7, #16]
 80057fe:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005802:	613b      	str	r3, [r7, #16]
 8005804:	687b      	ldr	r3, [r7, #4]
 8005806:	011b      	lsls	r3, r3, #4
 8005808:	693a      	ldr	r2, [r7, #16]
 800580a:	4313      	orrs	r3, r2
 800580c:	613b      	str	r3, [r7, #16]
 800580e:	697b      	ldr	r3, [r7, #20]
 8005810:	f023 030a 	bic.w	r3, r3, #10
 8005814:	617b      	str	r3, [r7, #20]
 8005816:	697a      	ldr	r2, [r7, #20]
 8005818:	68bb      	ldr	r3, [r7, #8]
 800581a:	4313      	orrs	r3, r2
 800581c:	617b      	str	r3, [r7, #20]
 800581e:	68fb      	ldr	r3, [r7, #12]
 8005820:	693a      	ldr	r2, [r7, #16]
 8005822:	619a      	str	r2, [r3, #24]
 8005824:	68fb      	ldr	r3, [r7, #12]
 8005826:	697a      	ldr	r2, [r7, #20]
 8005828:	621a      	str	r2, [r3, #32]
 800582a:	bf00      	nop
 800582c:	371c      	adds	r7, #28
 800582e:	46bd      	mov	sp, r7
 8005830:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005834:	4770      	bx	lr

08005836 <TIM_TI2_SetConfig>:
 8005836:	b480      	push	{r7}
 8005838:	b087      	sub	sp, #28
 800583a:	af00      	add	r7, sp, #0
 800583c:	60f8      	str	r0, [r7, #12]
 800583e:	60b9      	str	r1, [r7, #8]
 8005840:	607a      	str	r2, [r7, #4]
 8005842:	603b      	str	r3, [r7, #0]
 8005844:	68fb      	ldr	r3, [r7, #12]
 8005846:	6a1b      	ldr	r3, [r3, #32]
 8005848:	f023 0210 	bic.w	r2, r3, #16
 800584c:	68fb      	ldr	r3, [r7, #12]
 800584e:	621a      	str	r2, [r3, #32]
 8005850:	68fb      	ldr	r3, [r7, #12]
 8005852:	699b      	ldr	r3, [r3, #24]
 8005854:	617b      	str	r3, [r7, #20]
 8005856:	68fb      	ldr	r3, [r7, #12]
 8005858:	6a1b      	ldr	r3, [r3, #32]
 800585a:	613b      	str	r3, [r7, #16]
 800585c:	697b      	ldr	r3, [r7, #20]
 800585e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005862:	617b      	str	r3, [r7, #20]
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	021b      	lsls	r3, r3, #8
 8005868:	697a      	ldr	r2, [r7, #20]
 800586a:	4313      	orrs	r3, r2
 800586c:	617b      	str	r3, [r7, #20]
 800586e:	697b      	ldr	r3, [r7, #20]
 8005870:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8005874:	617b      	str	r3, [r7, #20]
 8005876:	683b      	ldr	r3, [r7, #0]
 8005878:	031b      	lsls	r3, r3, #12
 800587a:	b29b      	uxth	r3, r3
 800587c:	697a      	ldr	r2, [r7, #20]
 800587e:	4313      	orrs	r3, r2
 8005880:	617b      	str	r3, [r7, #20]
 8005882:	693b      	ldr	r3, [r7, #16]
 8005884:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8005888:	613b      	str	r3, [r7, #16]
 800588a:	68bb      	ldr	r3, [r7, #8]
 800588c:	011b      	lsls	r3, r3, #4
 800588e:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 8005892:	693a      	ldr	r2, [r7, #16]
 8005894:	4313      	orrs	r3, r2
 8005896:	613b      	str	r3, [r7, #16]
 8005898:	68fb      	ldr	r3, [r7, #12]
 800589a:	697a      	ldr	r2, [r7, #20]
 800589c:	619a      	str	r2, [r3, #24]
 800589e:	68fb      	ldr	r3, [r7, #12]
 80058a0:	693a      	ldr	r2, [r7, #16]
 80058a2:	621a      	str	r2, [r3, #32]
 80058a4:	bf00      	nop
 80058a6:	371c      	adds	r7, #28
 80058a8:	46bd      	mov	sp, r7
 80058aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058ae:	4770      	bx	lr

080058b0 <TIM_TI2_ConfigInputStage>:
 80058b0:	b480      	push	{r7}
 80058b2:	b087      	sub	sp, #28
 80058b4:	af00      	add	r7, sp, #0
 80058b6:	60f8      	str	r0, [r7, #12]
 80058b8:	60b9      	str	r1, [r7, #8]
 80058ba:	607a      	str	r2, [r7, #4]
 80058bc:	68fb      	ldr	r3, [r7, #12]
 80058be:	6a1b      	ldr	r3, [r3, #32]
 80058c0:	f023 0210 	bic.w	r2, r3, #16
 80058c4:	68fb      	ldr	r3, [r7, #12]
 80058c6:	621a      	str	r2, [r3, #32]
 80058c8:	68fb      	ldr	r3, [r7, #12]
 80058ca:	699b      	ldr	r3, [r3, #24]
 80058cc:	617b      	str	r3, [r7, #20]
 80058ce:	68fb      	ldr	r3, [r7, #12]
 80058d0:	6a1b      	ldr	r3, [r3, #32]
 80058d2:	613b      	str	r3, [r7, #16]
 80058d4:	697b      	ldr	r3, [r7, #20]
 80058d6:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80058da:	617b      	str	r3, [r7, #20]
 80058dc:	687b      	ldr	r3, [r7, #4]
 80058de:	031b      	lsls	r3, r3, #12
 80058e0:	697a      	ldr	r2, [r7, #20]
 80058e2:	4313      	orrs	r3, r2
 80058e4:	617b      	str	r3, [r7, #20]
 80058e6:	693b      	ldr	r3, [r7, #16]
 80058e8:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80058ec:	613b      	str	r3, [r7, #16]
 80058ee:	68bb      	ldr	r3, [r7, #8]
 80058f0:	011b      	lsls	r3, r3, #4
 80058f2:	693a      	ldr	r2, [r7, #16]
 80058f4:	4313      	orrs	r3, r2
 80058f6:	613b      	str	r3, [r7, #16]
 80058f8:	68fb      	ldr	r3, [r7, #12]
 80058fa:	697a      	ldr	r2, [r7, #20]
 80058fc:	619a      	str	r2, [r3, #24]
 80058fe:	68fb      	ldr	r3, [r7, #12]
 8005900:	693a      	ldr	r2, [r7, #16]
 8005902:	621a      	str	r2, [r3, #32]
 8005904:	bf00      	nop
 8005906:	371c      	adds	r7, #28
 8005908:	46bd      	mov	sp, r7
 800590a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800590e:	4770      	bx	lr

08005910 <TIM_TI3_SetConfig>:
 8005910:	b480      	push	{r7}
 8005912:	b087      	sub	sp, #28
 8005914:	af00      	add	r7, sp, #0
 8005916:	60f8      	str	r0, [r7, #12]
 8005918:	60b9      	str	r1, [r7, #8]
 800591a:	607a      	str	r2, [r7, #4]
 800591c:	603b      	str	r3, [r7, #0]
 800591e:	68fb      	ldr	r3, [r7, #12]
 8005920:	6a1b      	ldr	r3, [r3, #32]
 8005922:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8005926:	68fb      	ldr	r3, [r7, #12]
 8005928:	621a      	str	r2, [r3, #32]
 800592a:	68fb      	ldr	r3, [r7, #12]
 800592c:	69db      	ldr	r3, [r3, #28]
 800592e:	617b      	str	r3, [r7, #20]
 8005930:	68fb      	ldr	r3, [r7, #12]
 8005932:	6a1b      	ldr	r3, [r3, #32]
 8005934:	613b      	str	r3, [r7, #16]
 8005936:	697b      	ldr	r3, [r7, #20]
 8005938:	f023 0303 	bic.w	r3, r3, #3
 800593c:	617b      	str	r3, [r7, #20]
 800593e:	697a      	ldr	r2, [r7, #20]
 8005940:	687b      	ldr	r3, [r7, #4]
 8005942:	4313      	orrs	r3, r2
 8005944:	617b      	str	r3, [r7, #20]
 8005946:	697b      	ldr	r3, [r7, #20]
 8005948:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800594c:	617b      	str	r3, [r7, #20]
 800594e:	683b      	ldr	r3, [r7, #0]
 8005950:	011b      	lsls	r3, r3, #4
 8005952:	b2db      	uxtb	r3, r3
 8005954:	697a      	ldr	r2, [r7, #20]
 8005956:	4313      	orrs	r3, r2
 8005958:	617b      	str	r3, [r7, #20]
 800595a:	693b      	ldr	r3, [r7, #16]
 800595c:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 8005960:	613b      	str	r3, [r7, #16]
 8005962:	68bb      	ldr	r3, [r7, #8]
 8005964:	021b      	lsls	r3, r3, #8
 8005966:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 800596a:	693a      	ldr	r2, [r7, #16]
 800596c:	4313      	orrs	r3, r2
 800596e:	613b      	str	r3, [r7, #16]
 8005970:	68fb      	ldr	r3, [r7, #12]
 8005972:	697a      	ldr	r2, [r7, #20]
 8005974:	61da      	str	r2, [r3, #28]
 8005976:	68fb      	ldr	r3, [r7, #12]
 8005978:	693a      	ldr	r2, [r7, #16]
 800597a:	621a      	str	r2, [r3, #32]
 800597c:	bf00      	nop
 800597e:	371c      	adds	r7, #28
 8005980:	46bd      	mov	sp, r7
 8005982:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005986:	4770      	bx	lr

08005988 <TIM_TI4_SetConfig>:
 8005988:	b480      	push	{r7}
 800598a:	b087      	sub	sp, #28
 800598c:	af00      	add	r7, sp, #0
 800598e:	60f8      	str	r0, [r7, #12]
 8005990:	60b9      	str	r1, [r7, #8]
 8005992:	607a      	str	r2, [r7, #4]
 8005994:	603b      	str	r3, [r7, #0]
 8005996:	68fb      	ldr	r3, [r7, #12]
 8005998:	6a1b      	ldr	r3, [r3, #32]
 800599a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800599e:	68fb      	ldr	r3, [r7, #12]
 80059a0:	621a      	str	r2, [r3, #32]
 80059a2:	68fb      	ldr	r3, [r7, #12]
 80059a4:	69db      	ldr	r3, [r3, #28]
 80059a6:	617b      	str	r3, [r7, #20]
 80059a8:	68fb      	ldr	r3, [r7, #12]
 80059aa:	6a1b      	ldr	r3, [r3, #32]
 80059ac:	613b      	str	r3, [r7, #16]
 80059ae:	697b      	ldr	r3, [r7, #20]
 80059b0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80059b4:	617b      	str	r3, [r7, #20]
 80059b6:	687b      	ldr	r3, [r7, #4]
 80059b8:	021b      	lsls	r3, r3, #8
 80059ba:	697a      	ldr	r2, [r7, #20]
 80059bc:	4313      	orrs	r3, r2
 80059be:	617b      	str	r3, [r7, #20]
 80059c0:	697b      	ldr	r3, [r7, #20]
 80059c2:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80059c6:	617b      	str	r3, [r7, #20]
 80059c8:	683b      	ldr	r3, [r7, #0]
 80059ca:	031b      	lsls	r3, r3, #12
 80059cc:	b29b      	uxth	r3, r3
 80059ce:	697a      	ldr	r2, [r7, #20]
 80059d0:	4313      	orrs	r3, r2
 80059d2:	617b      	str	r3, [r7, #20]
 80059d4:	693b      	ldr	r3, [r7, #16]
 80059d6:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 80059da:	613b      	str	r3, [r7, #16]
 80059dc:	68bb      	ldr	r3, [r7, #8]
 80059de:	031b      	lsls	r3, r3, #12
 80059e0:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 80059e4:	693a      	ldr	r2, [r7, #16]
 80059e6:	4313      	orrs	r3, r2
 80059e8:	613b      	str	r3, [r7, #16]
 80059ea:	68fb      	ldr	r3, [r7, #12]
 80059ec:	697a      	ldr	r2, [r7, #20]
 80059ee:	61da      	str	r2, [r3, #28]
 80059f0:	68fb      	ldr	r3, [r7, #12]
 80059f2:	693a      	ldr	r2, [r7, #16]
 80059f4:	621a      	str	r2, [r3, #32]
 80059f6:	bf00      	nop
 80059f8:	371c      	adds	r7, #28
 80059fa:	46bd      	mov	sp, r7
 80059fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a00:	4770      	bx	lr

08005a02 <TIM_ITRx_SetConfig>:
 8005a02:	b480      	push	{r7}
 8005a04:	b085      	sub	sp, #20
 8005a06:	af00      	add	r7, sp, #0
 8005a08:	6078      	str	r0, [r7, #4]
 8005a0a:	6039      	str	r1, [r7, #0]
 8005a0c:	687b      	ldr	r3, [r7, #4]
 8005a0e:	689b      	ldr	r3, [r3, #8]
 8005a10:	60fb      	str	r3, [r7, #12]
 8005a12:	68fb      	ldr	r3, [r7, #12]
 8005a14:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005a18:	60fb      	str	r3, [r7, #12]
 8005a1a:	683a      	ldr	r2, [r7, #0]
 8005a1c:	68fb      	ldr	r3, [r7, #12]
 8005a1e:	4313      	orrs	r3, r2
 8005a20:	f043 0307 	orr.w	r3, r3, #7
 8005a24:	60fb      	str	r3, [r7, #12]
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	68fa      	ldr	r2, [r7, #12]
 8005a2a:	609a      	str	r2, [r3, #8]
 8005a2c:	bf00      	nop
 8005a2e:	3714      	adds	r7, #20
 8005a30:	46bd      	mov	sp, r7
 8005a32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a36:	4770      	bx	lr

08005a38 <TIM_ETR_SetConfig>:
 8005a38:	b480      	push	{r7}
 8005a3a:	b087      	sub	sp, #28
 8005a3c:	af00      	add	r7, sp, #0
 8005a3e:	60f8      	str	r0, [r7, #12]
 8005a40:	60b9      	str	r1, [r7, #8]
 8005a42:	607a      	str	r2, [r7, #4]
 8005a44:	603b      	str	r3, [r7, #0]
 8005a46:	68fb      	ldr	r3, [r7, #12]
 8005a48:	689b      	ldr	r3, [r3, #8]
 8005a4a:	617b      	str	r3, [r7, #20]
 8005a4c:	697b      	ldr	r3, [r7, #20]
 8005a4e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8005a52:	617b      	str	r3, [r7, #20]
 8005a54:	683b      	ldr	r3, [r7, #0]
 8005a56:	021a      	lsls	r2, r3, #8
 8005a58:	687b      	ldr	r3, [r7, #4]
 8005a5a:	431a      	orrs	r2, r3
 8005a5c:	68bb      	ldr	r3, [r7, #8]
 8005a5e:	4313      	orrs	r3, r2
 8005a60:	697a      	ldr	r2, [r7, #20]
 8005a62:	4313      	orrs	r3, r2
 8005a64:	617b      	str	r3, [r7, #20]
 8005a66:	68fb      	ldr	r3, [r7, #12]
 8005a68:	697a      	ldr	r2, [r7, #20]
 8005a6a:	609a      	str	r2, [r3, #8]
 8005a6c:	bf00      	nop
 8005a6e:	371c      	adds	r7, #28
 8005a70:	46bd      	mov	sp, r7
 8005a72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a76:	4770      	bx	lr

08005a78 <TIM_CCxChannelCmd>:
 8005a78:	b480      	push	{r7}
 8005a7a:	b087      	sub	sp, #28
 8005a7c:	af00      	add	r7, sp, #0
 8005a7e:	60f8      	str	r0, [r7, #12]
 8005a80:	60b9      	str	r1, [r7, #8]
 8005a82:	607a      	str	r2, [r7, #4]
 8005a84:	68bb      	ldr	r3, [r7, #8]
 8005a86:	f003 031f 	and.w	r3, r3, #31
 8005a8a:	2201      	movs	r2, #1
 8005a8c:	fa02 f303 	lsl.w	r3, r2, r3
 8005a90:	617b      	str	r3, [r7, #20]
 8005a92:	68fb      	ldr	r3, [r7, #12]
 8005a94:	6a1a      	ldr	r2, [r3, #32]
 8005a96:	697b      	ldr	r3, [r7, #20]
 8005a98:	43db      	mvns	r3, r3
 8005a9a:	401a      	ands	r2, r3
 8005a9c:	68fb      	ldr	r3, [r7, #12]
 8005a9e:	621a      	str	r2, [r3, #32]
 8005aa0:	68fb      	ldr	r3, [r7, #12]
 8005aa2:	6a1a      	ldr	r2, [r3, #32]
 8005aa4:	68bb      	ldr	r3, [r7, #8]
 8005aa6:	f003 031f 	and.w	r3, r3, #31
 8005aaa:	6879      	ldr	r1, [r7, #4]
 8005aac:	fa01 f303 	lsl.w	r3, r1, r3
 8005ab0:	431a      	orrs	r2, r3
 8005ab2:	68fb      	ldr	r3, [r7, #12]
 8005ab4:	621a      	str	r2, [r3, #32]
 8005ab6:	bf00      	nop
 8005ab8:	371c      	adds	r7, #28
 8005aba:	46bd      	mov	sp, r7
 8005abc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ac0:	4770      	bx	lr
	...

08005ac4 <HAL_TIMEx_MasterConfigSynchronization>:
 8005ac4:	b480      	push	{r7}
 8005ac6:	b085      	sub	sp, #20
 8005ac8:	af00      	add	r7, sp, #0
 8005aca:	6078      	str	r0, [r7, #4]
 8005acc:	6039      	str	r1, [r7, #0]
 8005ace:	687b      	ldr	r3, [r7, #4]
 8005ad0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005ad4:	2b01      	cmp	r3, #1
 8005ad6:	d101      	bne.n	8005adc <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005ad8:	2302      	movs	r3, #2
 8005ada:	e05a      	b.n	8005b92 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8005adc:	687b      	ldr	r3, [r7, #4]
 8005ade:	2201      	movs	r2, #1
 8005ae0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005ae4:	687b      	ldr	r3, [r7, #4]
 8005ae6:	2202      	movs	r2, #2
 8005ae8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005aec:	687b      	ldr	r3, [r7, #4]
 8005aee:	681b      	ldr	r3, [r3, #0]
 8005af0:	685b      	ldr	r3, [r3, #4]
 8005af2:	60fb      	str	r3, [r7, #12]
 8005af4:	687b      	ldr	r3, [r7, #4]
 8005af6:	681b      	ldr	r3, [r3, #0]
 8005af8:	689b      	ldr	r3, [r3, #8]
 8005afa:	60bb      	str	r3, [r7, #8]
 8005afc:	68fb      	ldr	r3, [r7, #12]
 8005afe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005b02:	60fb      	str	r3, [r7, #12]
 8005b04:	683b      	ldr	r3, [r7, #0]
 8005b06:	681b      	ldr	r3, [r3, #0]
 8005b08:	68fa      	ldr	r2, [r7, #12]
 8005b0a:	4313      	orrs	r3, r2
 8005b0c:	60fb      	str	r3, [r7, #12]
 8005b0e:	687b      	ldr	r3, [r7, #4]
 8005b10:	681b      	ldr	r3, [r3, #0]
 8005b12:	68fa      	ldr	r2, [r7, #12]
 8005b14:	605a      	str	r2, [r3, #4]
 8005b16:	687b      	ldr	r3, [r7, #4]
 8005b18:	681b      	ldr	r3, [r3, #0]
 8005b1a:	4a21      	ldr	r2, [pc, #132]	; (8005ba0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8005b1c:	4293      	cmp	r3, r2
 8005b1e:	d022      	beq.n	8005b66 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005b20:	687b      	ldr	r3, [r7, #4]
 8005b22:	681b      	ldr	r3, [r3, #0]
 8005b24:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005b28:	d01d      	beq.n	8005b66 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005b2a:	687b      	ldr	r3, [r7, #4]
 8005b2c:	681b      	ldr	r3, [r3, #0]
 8005b2e:	4a1d      	ldr	r2, [pc, #116]	; (8005ba4 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8005b30:	4293      	cmp	r3, r2
 8005b32:	d018      	beq.n	8005b66 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005b34:	687b      	ldr	r3, [r7, #4]
 8005b36:	681b      	ldr	r3, [r3, #0]
 8005b38:	4a1b      	ldr	r2, [pc, #108]	; (8005ba8 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8005b3a:	4293      	cmp	r3, r2
 8005b3c:	d013      	beq.n	8005b66 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005b3e:	687b      	ldr	r3, [r7, #4]
 8005b40:	681b      	ldr	r3, [r3, #0]
 8005b42:	4a1a      	ldr	r2, [pc, #104]	; (8005bac <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8005b44:	4293      	cmp	r3, r2
 8005b46:	d00e      	beq.n	8005b66 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005b48:	687b      	ldr	r3, [r7, #4]
 8005b4a:	681b      	ldr	r3, [r3, #0]
 8005b4c:	4a18      	ldr	r2, [pc, #96]	; (8005bb0 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8005b4e:	4293      	cmp	r3, r2
 8005b50:	d009      	beq.n	8005b66 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	681b      	ldr	r3, [r3, #0]
 8005b56:	4a17      	ldr	r2, [pc, #92]	; (8005bb4 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8005b58:	4293      	cmp	r3, r2
 8005b5a:	d004      	beq.n	8005b66 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005b5c:	687b      	ldr	r3, [r7, #4]
 8005b5e:	681b      	ldr	r3, [r3, #0]
 8005b60:	4a15      	ldr	r2, [pc, #84]	; (8005bb8 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8005b62:	4293      	cmp	r3, r2
 8005b64:	d10c      	bne.n	8005b80 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8005b66:	68bb      	ldr	r3, [r7, #8]
 8005b68:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005b6c:	60bb      	str	r3, [r7, #8]
 8005b6e:	683b      	ldr	r3, [r7, #0]
 8005b70:	685b      	ldr	r3, [r3, #4]
 8005b72:	68ba      	ldr	r2, [r7, #8]
 8005b74:	4313      	orrs	r3, r2
 8005b76:	60bb      	str	r3, [r7, #8]
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	681b      	ldr	r3, [r3, #0]
 8005b7c:	68ba      	ldr	r2, [r7, #8]
 8005b7e:	609a      	str	r2, [r3, #8]
 8005b80:	687b      	ldr	r3, [r7, #4]
 8005b82:	2201      	movs	r2, #1
 8005b84:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	2200      	movs	r2, #0
 8005b8c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005b90:	2300      	movs	r3, #0
 8005b92:	4618      	mov	r0, r3
 8005b94:	3714      	adds	r7, #20
 8005b96:	46bd      	mov	sp, r7
 8005b98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b9c:	4770      	bx	lr
 8005b9e:	bf00      	nop
 8005ba0:	40010000 	.word	0x40010000
 8005ba4:	40000400 	.word	0x40000400
 8005ba8:	40000800 	.word	0x40000800
 8005bac:	40000c00 	.word	0x40000c00
 8005bb0:	40010400 	.word	0x40010400
 8005bb4:	40014000 	.word	0x40014000
 8005bb8:	40001800 	.word	0x40001800

08005bbc <HAL_TIMEx_CommutCallback>:
 8005bbc:	b480      	push	{r7}
 8005bbe:	b083      	sub	sp, #12
 8005bc0:	af00      	add	r7, sp, #0
 8005bc2:	6078      	str	r0, [r7, #4]
 8005bc4:	bf00      	nop
 8005bc6:	370c      	adds	r7, #12
 8005bc8:	46bd      	mov	sp, r7
 8005bca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bce:	4770      	bx	lr

08005bd0 <HAL_TIMEx_BreakCallback>:
 8005bd0:	b480      	push	{r7}
 8005bd2:	b083      	sub	sp, #12
 8005bd4:	af00      	add	r7, sp, #0
 8005bd6:	6078      	str	r0, [r7, #4]
 8005bd8:	bf00      	nop
 8005bda:	370c      	adds	r7, #12
 8005bdc:	46bd      	mov	sp, r7
 8005bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005be2:	4770      	bx	lr

08005be4 <HAL_UART_Init>:
 8005be4:	b580      	push	{r7, lr}
 8005be6:	b082      	sub	sp, #8
 8005be8:	af00      	add	r7, sp, #0
 8005bea:	6078      	str	r0, [r7, #4]
 8005bec:	687b      	ldr	r3, [r7, #4]
 8005bee:	2b00      	cmp	r3, #0
 8005bf0:	d101      	bne.n	8005bf6 <HAL_UART_Init+0x12>
 8005bf2:	2301      	movs	r3, #1
 8005bf4:	e03f      	b.n	8005c76 <HAL_UART_Init+0x92>
 8005bf6:	687b      	ldr	r3, [r7, #4]
 8005bf8:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8005bfc:	b2db      	uxtb	r3, r3
 8005bfe:	2b00      	cmp	r3, #0
 8005c00:	d106      	bne.n	8005c10 <HAL_UART_Init+0x2c>
 8005c02:	687b      	ldr	r3, [r7, #4]
 8005c04:	2200      	movs	r2, #0
 8005c06:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8005c0a:	6878      	ldr	r0, [r7, #4]
 8005c0c:	f7fd f858 	bl	8002cc0 <HAL_UART_MspInit>
 8005c10:	687b      	ldr	r3, [r7, #4]
 8005c12:	2224      	movs	r2, #36	; 0x24
 8005c14:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	681b      	ldr	r3, [r3, #0]
 8005c1c:	68da      	ldr	r2, [r3, #12]
 8005c1e:	687b      	ldr	r3, [r7, #4]
 8005c20:	681b      	ldr	r3, [r3, #0]
 8005c22:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005c26:	60da      	str	r2, [r3, #12]
 8005c28:	6878      	ldr	r0, [r7, #4]
 8005c2a:	f000 fb97 	bl	800635c <UART_SetConfig>
 8005c2e:	687b      	ldr	r3, [r7, #4]
 8005c30:	681b      	ldr	r3, [r3, #0]
 8005c32:	691a      	ldr	r2, [r3, #16]
 8005c34:	687b      	ldr	r3, [r7, #4]
 8005c36:	681b      	ldr	r3, [r3, #0]
 8005c38:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8005c3c:	611a      	str	r2, [r3, #16]
 8005c3e:	687b      	ldr	r3, [r7, #4]
 8005c40:	681b      	ldr	r3, [r3, #0]
 8005c42:	695a      	ldr	r2, [r3, #20]
 8005c44:	687b      	ldr	r3, [r7, #4]
 8005c46:	681b      	ldr	r3, [r3, #0]
 8005c48:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8005c4c:	615a      	str	r2, [r3, #20]
 8005c4e:	687b      	ldr	r3, [r7, #4]
 8005c50:	681b      	ldr	r3, [r3, #0]
 8005c52:	68da      	ldr	r2, [r3, #12]
 8005c54:	687b      	ldr	r3, [r7, #4]
 8005c56:	681b      	ldr	r3, [r3, #0]
 8005c58:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8005c5c:	60da      	str	r2, [r3, #12]
 8005c5e:	687b      	ldr	r3, [r7, #4]
 8005c60:	2200      	movs	r2, #0
 8005c62:	63da      	str	r2, [r3, #60]	; 0x3c
 8005c64:	687b      	ldr	r3, [r7, #4]
 8005c66:	2220      	movs	r2, #32
 8005c68:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	2220      	movs	r2, #32
 8005c70:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8005c74:	2300      	movs	r3, #0
 8005c76:	4618      	mov	r0, r3
 8005c78:	3708      	adds	r7, #8
 8005c7a:	46bd      	mov	sp, r7
 8005c7c:	bd80      	pop	{r7, pc}

08005c7e <HAL_UART_Transmit>:
 8005c7e:	b580      	push	{r7, lr}
 8005c80:	b088      	sub	sp, #32
 8005c82:	af02      	add	r7, sp, #8
 8005c84:	60f8      	str	r0, [r7, #12]
 8005c86:	60b9      	str	r1, [r7, #8]
 8005c88:	603b      	str	r3, [r7, #0]
 8005c8a:	4613      	mov	r3, r2
 8005c8c:	80fb      	strh	r3, [r7, #6]
 8005c8e:	2300      	movs	r3, #0
 8005c90:	617b      	str	r3, [r7, #20]
 8005c92:	68fb      	ldr	r3, [r7, #12]
 8005c94:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8005c98:	b2db      	uxtb	r3, r3
 8005c9a:	2b20      	cmp	r3, #32
 8005c9c:	f040 8083 	bne.w	8005da6 <HAL_UART_Transmit+0x128>
 8005ca0:	68bb      	ldr	r3, [r7, #8]
 8005ca2:	2b00      	cmp	r3, #0
 8005ca4:	d002      	beq.n	8005cac <HAL_UART_Transmit+0x2e>
 8005ca6:	88fb      	ldrh	r3, [r7, #6]
 8005ca8:	2b00      	cmp	r3, #0
 8005caa:	d101      	bne.n	8005cb0 <HAL_UART_Transmit+0x32>
 8005cac:	2301      	movs	r3, #1
 8005cae:	e07b      	b.n	8005da8 <HAL_UART_Transmit+0x12a>
 8005cb0:	68fb      	ldr	r3, [r7, #12]
 8005cb2:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8005cb6:	2b01      	cmp	r3, #1
 8005cb8:	d101      	bne.n	8005cbe <HAL_UART_Transmit+0x40>
 8005cba:	2302      	movs	r3, #2
 8005cbc:	e074      	b.n	8005da8 <HAL_UART_Transmit+0x12a>
 8005cbe:	68fb      	ldr	r3, [r7, #12]
 8005cc0:	2201      	movs	r2, #1
 8005cc2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8005cc6:	68fb      	ldr	r3, [r7, #12]
 8005cc8:	2200      	movs	r2, #0
 8005cca:	63da      	str	r2, [r3, #60]	; 0x3c
 8005ccc:	68fb      	ldr	r3, [r7, #12]
 8005cce:	2221      	movs	r2, #33	; 0x21
 8005cd0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005cd4:	f7fd f988 	bl	8002fe8 <HAL_GetTick>
 8005cd8:	6178      	str	r0, [r7, #20]
 8005cda:	68fb      	ldr	r3, [r7, #12]
 8005cdc:	88fa      	ldrh	r2, [r7, #6]
 8005cde:	849a      	strh	r2, [r3, #36]	; 0x24
 8005ce0:	68fb      	ldr	r3, [r7, #12]
 8005ce2:	88fa      	ldrh	r2, [r7, #6]
 8005ce4:	84da      	strh	r2, [r3, #38]	; 0x26
 8005ce6:	68fb      	ldr	r3, [r7, #12]
 8005ce8:	2200      	movs	r2, #0
 8005cea:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8005cee:	e042      	b.n	8005d76 <HAL_UART_Transmit+0xf8>
 8005cf0:	68fb      	ldr	r3, [r7, #12]
 8005cf2:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8005cf4:	b29b      	uxth	r3, r3
 8005cf6:	3b01      	subs	r3, #1
 8005cf8:	b29a      	uxth	r2, r3
 8005cfa:	68fb      	ldr	r3, [r7, #12]
 8005cfc:	84da      	strh	r2, [r3, #38]	; 0x26
 8005cfe:	68fb      	ldr	r3, [r7, #12]
 8005d00:	689b      	ldr	r3, [r3, #8]
 8005d02:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005d06:	d122      	bne.n	8005d4e <HAL_UART_Transmit+0xd0>
 8005d08:	683b      	ldr	r3, [r7, #0]
 8005d0a:	9300      	str	r3, [sp, #0]
 8005d0c:	697b      	ldr	r3, [r7, #20]
 8005d0e:	2200      	movs	r2, #0
 8005d10:	2180      	movs	r1, #128	; 0x80
 8005d12:	68f8      	ldr	r0, [r7, #12]
 8005d14:	f000 f9b6 	bl	8006084 <UART_WaitOnFlagUntilTimeout>
 8005d18:	4603      	mov	r3, r0
 8005d1a:	2b00      	cmp	r3, #0
 8005d1c:	d001      	beq.n	8005d22 <HAL_UART_Transmit+0xa4>
 8005d1e:	2303      	movs	r3, #3
 8005d20:	e042      	b.n	8005da8 <HAL_UART_Transmit+0x12a>
 8005d22:	68bb      	ldr	r3, [r7, #8]
 8005d24:	613b      	str	r3, [r7, #16]
 8005d26:	693b      	ldr	r3, [r7, #16]
 8005d28:	881b      	ldrh	r3, [r3, #0]
 8005d2a:	461a      	mov	r2, r3
 8005d2c:	68fb      	ldr	r3, [r7, #12]
 8005d2e:	681b      	ldr	r3, [r3, #0]
 8005d30:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005d34:	605a      	str	r2, [r3, #4]
 8005d36:	68fb      	ldr	r3, [r7, #12]
 8005d38:	691b      	ldr	r3, [r3, #16]
 8005d3a:	2b00      	cmp	r3, #0
 8005d3c:	d103      	bne.n	8005d46 <HAL_UART_Transmit+0xc8>
 8005d3e:	68bb      	ldr	r3, [r7, #8]
 8005d40:	3302      	adds	r3, #2
 8005d42:	60bb      	str	r3, [r7, #8]
 8005d44:	e017      	b.n	8005d76 <HAL_UART_Transmit+0xf8>
 8005d46:	68bb      	ldr	r3, [r7, #8]
 8005d48:	3301      	adds	r3, #1
 8005d4a:	60bb      	str	r3, [r7, #8]
 8005d4c:	e013      	b.n	8005d76 <HAL_UART_Transmit+0xf8>
 8005d4e:	683b      	ldr	r3, [r7, #0]
 8005d50:	9300      	str	r3, [sp, #0]
 8005d52:	697b      	ldr	r3, [r7, #20]
 8005d54:	2200      	movs	r2, #0
 8005d56:	2180      	movs	r1, #128	; 0x80
 8005d58:	68f8      	ldr	r0, [r7, #12]
 8005d5a:	f000 f993 	bl	8006084 <UART_WaitOnFlagUntilTimeout>
 8005d5e:	4603      	mov	r3, r0
 8005d60:	2b00      	cmp	r3, #0
 8005d62:	d001      	beq.n	8005d68 <HAL_UART_Transmit+0xea>
 8005d64:	2303      	movs	r3, #3
 8005d66:	e01f      	b.n	8005da8 <HAL_UART_Transmit+0x12a>
 8005d68:	68bb      	ldr	r3, [r7, #8]
 8005d6a:	1c5a      	adds	r2, r3, #1
 8005d6c:	60ba      	str	r2, [r7, #8]
 8005d6e:	781a      	ldrb	r2, [r3, #0]
 8005d70:	68fb      	ldr	r3, [r7, #12]
 8005d72:	681b      	ldr	r3, [r3, #0]
 8005d74:	605a      	str	r2, [r3, #4]
 8005d76:	68fb      	ldr	r3, [r7, #12]
 8005d78:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8005d7a:	b29b      	uxth	r3, r3
 8005d7c:	2b00      	cmp	r3, #0
 8005d7e:	d1b7      	bne.n	8005cf0 <HAL_UART_Transmit+0x72>
 8005d80:	683b      	ldr	r3, [r7, #0]
 8005d82:	9300      	str	r3, [sp, #0]
 8005d84:	697b      	ldr	r3, [r7, #20]
 8005d86:	2200      	movs	r2, #0
 8005d88:	2140      	movs	r1, #64	; 0x40
 8005d8a:	68f8      	ldr	r0, [r7, #12]
 8005d8c:	f000 f97a 	bl	8006084 <UART_WaitOnFlagUntilTimeout>
 8005d90:	4603      	mov	r3, r0
 8005d92:	2b00      	cmp	r3, #0
 8005d94:	d001      	beq.n	8005d9a <HAL_UART_Transmit+0x11c>
 8005d96:	2303      	movs	r3, #3
 8005d98:	e006      	b.n	8005da8 <HAL_UART_Transmit+0x12a>
 8005d9a:	68fb      	ldr	r3, [r7, #12]
 8005d9c:	2220      	movs	r2, #32
 8005d9e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005da2:	2300      	movs	r3, #0
 8005da4:	e000      	b.n	8005da8 <HAL_UART_Transmit+0x12a>
 8005da6:	2302      	movs	r3, #2
 8005da8:	4618      	mov	r0, r3
 8005daa:	3718      	adds	r7, #24
 8005dac:	46bd      	mov	sp, r7
 8005dae:	bd80      	pop	{r7, pc}

08005db0 <HAL_UART_Receive_IT>:
 8005db0:	b480      	push	{r7}
 8005db2:	b085      	sub	sp, #20
 8005db4:	af00      	add	r7, sp, #0
 8005db6:	60f8      	str	r0, [r7, #12]
 8005db8:	60b9      	str	r1, [r7, #8]
 8005dba:	4613      	mov	r3, r2
 8005dbc:	80fb      	strh	r3, [r7, #6]
 8005dbe:	68fb      	ldr	r3, [r7, #12]
 8005dc0:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8005dc4:	b2db      	uxtb	r3, r3
 8005dc6:	2b20      	cmp	r3, #32
 8005dc8:	d140      	bne.n	8005e4c <HAL_UART_Receive_IT+0x9c>
 8005dca:	68bb      	ldr	r3, [r7, #8]
 8005dcc:	2b00      	cmp	r3, #0
 8005dce:	d002      	beq.n	8005dd6 <HAL_UART_Receive_IT+0x26>
 8005dd0:	88fb      	ldrh	r3, [r7, #6]
 8005dd2:	2b00      	cmp	r3, #0
 8005dd4:	d101      	bne.n	8005dda <HAL_UART_Receive_IT+0x2a>
 8005dd6:	2301      	movs	r3, #1
 8005dd8:	e039      	b.n	8005e4e <HAL_UART_Receive_IT+0x9e>
 8005dda:	68fb      	ldr	r3, [r7, #12]
 8005ddc:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8005de0:	2b01      	cmp	r3, #1
 8005de2:	d101      	bne.n	8005de8 <HAL_UART_Receive_IT+0x38>
 8005de4:	2302      	movs	r3, #2
 8005de6:	e032      	b.n	8005e4e <HAL_UART_Receive_IT+0x9e>
 8005de8:	68fb      	ldr	r3, [r7, #12]
 8005dea:	2201      	movs	r2, #1
 8005dec:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8005df0:	68fb      	ldr	r3, [r7, #12]
 8005df2:	68ba      	ldr	r2, [r7, #8]
 8005df4:	629a      	str	r2, [r3, #40]	; 0x28
 8005df6:	68fb      	ldr	r3, [r7, #12]
 8005df8:	88fa      	ldrh	r2, [r7, #6]
 8005dfa:	859a      	strh	r2, [r3, #44]	; 0x2c
 8005dfc:	68fb      	ldr	r3, [r7, #12]
 8005dfe:	88fa      	ldrh	r2, [r7, #6]
 8005e00:	85da      	strh	r2, [r3, #46]	; 0x2e
 8005e02:	68fb      	ldr	r3, [r7, #12]
 8005e04:	2200      	movs	r2, #0
 8005e06:	63da      	str	r2, [r3, #60]	; 0x3c
 8005e08:	68fb      	ldr	r3, [r7, #12]
 8005e0a:	2222      	movs	r2, #34	; 0x22
 8005e0c:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8005e10:	68fb      	ldr	r3, [r7, #12]
 8005e12:	2200      	movs	r2, #0
 8005e14:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8005e18:	68fb      	ldr	r3, [r7, #12]
 8005e1a:	681b      	ldr	r3, [r3, #0]
 8005e1c:	68da      	ldr	r2, [r3, #12]
 8005e1e:	68fb      	ldr	r3, [r7, #12]
 8005e20:	681b      	ldr	r3, [r3, #0]
 8005e22:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005e26:	60da      	str	r2, [r3, #12]
 8005e28:	68fb      	ldr	r3, [r7, #12]
 8005e2a:	681b      	ldr	r3, [r3, #0]
 8005e2c:	695a      	ldr	r2, [r3, #20]
 8005e2e:	68fb      	ldr	r3, [r7, #12]
 8005e30:	681b      	ldr	r3, [r3, #0]
 8005e32:	f042 0201 	orr.w	r2, r2, #1
 8005e36:	615a      	str	r2, [r3, #20]
 8005e38:	68fb      	ldr	r3, [r7, #12]
 8005e3a:	681b      	ldr	r3, [r3, #0]
 8005e3c:	68da      	ldr	r2, [r3, #12]
 8005e3e:	68fb      	ldr	r3, [r7, #12]
 8005e40:	681b      	ldr	r3, [r3, #0]
 8005e42:	f042 0220 	orr.w	r2, r2, #32
 8005e46:	60da      	str	r2, [r3, #12]
 8005e48:	2300      	movs	r3, #0
 8005e4a:	e000      	b.n	8005e4e <HAL_UART_Receive_IT+0x9e>
 8005e4c:	2302      	movs	r3, #2
 8005e4e:	4618      	mov	r0, r3
 8005e50:	3714      	adds	r7, #20
 8005e52:	46bd      	mov	sp, r7
 8005e54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e58:	4770      	bx	lr
	...

08005e5c <HAL_UART_IRQHandler>:
 8005e5c:	b580      	push	{r7, lr}
 8005e5e:	b088      	sub	sp, #32
 8005e60:	af00      	add	r7, sp, #0
 8005e62:	6078      	str	r0, [r7, #4]
 8005e64:	687b      	ldr	r3, [r7, #4]
 8005e66:	681b      	ldr	r3, [r3, #0]
 8005e68:	681b      	ldr	r3, [r3, #0]
 8005e6a:	61fb      	str	r3, [r7, #28]
 8005e6c:	687b      	ldr	r3, [r7, #4]
 8005e6e:	681b      	ldr	r3, [r3, #0]
 8005e70:	68db      	ldr	r3, [r3, #12]
 8005e72:	61bb      	str	r3, [r7, #24]
 8005e74:	687b      	ldr	r3, [r7, #4]
 8005e76:	681b      	ldr	r3, [r3, #0]
 8005e78:	695b      	ldr	r3, [r3, #20]
 8005e7a:	617b      	str	r3, [r7, #20]
 8005e7c:	2300      	movs	r3, #0
 8005e7e:	613b      	str	r3, [r7, #16]
 8005e80:	2300      	movs	r3, #0
 8005e82:	60fb      	str	r3, [r7, #12]
 8005e84:	69fb      	ldr	r3, [r7, #28]
 8005e86:	f003 030f 	and.w	r3, r3, #15
 8005e8a:	613b      	str	r3, [r7, #16]
 8005e8c:	693b      	ldr	r3, [r7, #16]
 8005e8e:	2b00      	cmp	r3, #0
 8005e90:	d10d      	bne.n	8005eae <HAL_UART_IRQHandler+0x52>
 8005e92:	69fb      	ldr	r3, [r7, #28]
 8005e94:	f003 0320 	and.w	r3, r3, #32
 8005e98:	2b00      	cmp	r3, #0
 8005e9a:	d008      	beq.n	8005eae <HAL_UART_IRQHandler+0x52>
 8005e9c:	69bb      	ldr	r3, [r7, #24]
 8005e9e:	f003 0320 	and.w	r3, r3, #32
 8005ea2:	2b00      	cmp	r3, #0
 8005ea4:	d003      	beq.n	8005eae <HAL_UART_IRQHandler+0x52>
 8005ea6:	6878      	ldr	r0, [r7, #4]
 8005ea8:	f000 f9d6 	bl	8006258 <UART_Receive_IT>
 8005eac:	e0d1      	b.n	8006052 <HAL_UART_IRQHandler+0x1f6>
 8005eae:	693b      	ldr	r3, [r7, #16]
 8005eb0:	2b00      	cmp	r3, #0
 8005eb2:	f000 80b0 	beq.w	8006016 <HAL_UART_IRQHandler+0x1ba>
 8005eb6:	697b      	ldr	r3, [r7, #20]
 8005eb8:	f003 0301 	and.w	r3, r3, #1
 8005ebc:	2b00      	cmp	r3, #0
 8005ebe:	d105      	bne.n	8005ecc <HAL_UART_IRQHandler+0x70>
 8005ec0:	69bb      	ldr	r3, [r7, #24]
 8005ec2:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8005ec6:	2b00      	cmp	r3, #0
 8005ec8:	f000 80a5 	beq.w	8006016 <HAL_UART_IRQHandler+0x1ba>
 8005ecc:	69fb      	ldr	r3, [r7, #28]
 8005ece:	f003 0301 	and.w	r3, r3, #1
 8005ed2:	2b00      	cmp	r3, #0
 8005ed4:	d00a      	beq.n	8005eec <HAL_UART_IRQHandler+0x90>
 8005ed6:	69bb      	ldr	r3, [r7, #24]
 8005ed8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005edc:	2b00      	cmp	r3, #0
 8005ede:	d005      	beq.n	8005eec <HAL_UART_IRQHandler+0x90>
 8005ee0:	687b      	ldr	r3, [r7, #4]
 8005ee2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005ee4:	f043 0201 	orr.w	r2, r3, #1
 8005ee8:	687b      	ldr	r3, [r7, #4]
 8005eea:	63da      	str	r2, [r3, #60]	; 0x3c
 8005eec:	69fb      	ldr	r3, [r7, #28]
 8005eee:	f003 0304 	and.w	r3, r3, #4
 8005ef2:	2b00      	cmp	r3, #0
 8005ef4:	d00a      	beq.n	8005f0c <HAL_UART_IRQHandler+0xb0>
 8005ef6:	697b      	ldr	r3, [r7, #20]
 8005ef8:	f003 0301 	and.w	r3, r3, #1
 8005efc:	2b00      	cmp	r3, #0
 8005efe:	d005      	beq.n	8005f0c <HAL_UART_IRQHandler+0xb0>
 8005f00:	687b      	ldr	r3, [r7, #4]
 8005f02:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005f04:	f043 0202 	orr.w	r2, r3, #2
 8005f08:	687b      	ldr	r3, [r7, #4]
 8005f0a:	63da      	str	r2, [r3, #60]	; 0x3c
 8005f0c:	69fb      	ldr	r3, [r7, #28]
 8005f0e:	f003 0302 	and.w	r3, r3, #2
 8005f12:	2b00      	cmp	r3, #0
 8005f14:	d00a      	beq.n	8005f2c <HAL_UART_IRQHandler+0xd0>
 8005f16:	697b      	ldr	r3, [r7, #20]
 8005f18:	f003 0301 	and.w	r3, r3, #1
 8005f1c:	2b00      	cmp	r3, #0
 8005f1e:	d005      	beq.n	8005f2c <HAL_UART_IRQHandler+0xd0>
 8005f20:	687b      	ldr	r3, [r7, #4]
 8005f22:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005f24:	f043 0204 	orr.w	r2, r3, #4
 8005f28:	687b      	ldr	r3, [r7, #4]
 8005f2a:	63da      	str	r2, [r3, #60]	; 0x3c
 8005f2c:	69fb      	ldr	r3, [r7, #28]
 8005f2e:	f003 0308 	and.w	r3, r3, #8
 8005f32:	2b00      	cmp	r3, #0
 8005f34:	d00f      	beq.n	8005f56 <HAL_UART_IRQHandler+0xfa>
 8005f36:	69bb      	ldr	r3, [r7, #24]
 8005f38:	f003 0320 	and.w	r3, r3, #32
 8005f3c:	2b00      	cmp	r3, #0
 8005f3e:	d104      	bne.n	8005f4a <HAL_UART_IRQHandler+0xee>
 8005f40:	697b      	ldr	r3, [r7, #20]
 8005f42:	f003 0301 	and.w	r3, r3, #1
 8005f46:	2b00      	cmp	r3, #0
 8005f48:	d005      	beq.n	8005f56 <HAL_UART_IRQHandler+0xfa>
 8005f4a:	687b      	ldr	r3, [r7, #4]
 8005f4c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005f4e:	f043 0208 	orr.w	r2, r3, #8
 8005f52:	687b      	ldr	r3, [r7, #4]
 8005f54:	63da      	str	r2, [r3, #60]	; 0x3c
 8005f56:	687b      	ldr	r3, [r7, #4]
 8005f58:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005f5a:	2b00      	cmp	r3, #0
 8005f5c:	d078      	beq.n	8006050 <HAL_UART_IRQHandler+0x1f4>
 8005f5e:	69fb      	ldr	r3, [r7, #28]
 8005f60:	f003 0320 	and.w	r3, r3, #32
 8005f64:	2b00      	cmp	r3, #0
 8005f66:	d007      	beq.n	8005f78 <HAL_UART_IRQHandler+0x11c>
 8005f68:	69bb      	ldr	r3, [r7, #24]
 8005f6a:	f003 0320 	and.w	r3, r3, #32
 8005f6e:	2b00      	cmp	r3, #0
 8005f70:	d002      	beq.n	8005f78 <HAL_UART_IRQHandler+0x11c>
 8005f72:	6878      	ldr	r0, [r7, #4]
 8005f74:	f000 f970 	bl	8006258 <UART_Receive_IT>
 8005f78:	687b      	ldr	r3, [r7, #4]
 8005f7a:	681b      	ldr	r3, [r3, #0]
 8005f7c:	695b      	ldr	r3, [r3, #20]
 8005f7e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005f82:	2b40      	cmp	r3, #64	; 0x40
 8005f84:	bf0c      	ite	eq
 8005f86:	2301      	moveq	r3, #1
 8005f88:	2300      	movne	r3, #0
 8005f8a:	b2db      	uxtb	r3, r3
 8005f8c:	60fb      	str	r3, [r7, #12]
 8005f8e:	687b      	ldr	r3, [r7, #4]
 8005f90:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005f92:	f003 0308 	and.w	r3, r3, #8
 8005f96:	2b00      	cmp	r3, #0
 8005f98:	d102      	bne.n	8005fa0 <HAL_UART_IRQHandler+0x144>
 8005f9a:	68fb      	ldr	r3, [r7, #12]
 8005f9c:	2b00      	cmp	r3, #0
 8005f9e:	d031      	beq.n	8006004 <HAL_UART_IRQHandler+0x1a8>
 8005fa0:	6878      	ldr	r0, [r7, #4]
 8005fa2:	f000 f8b9 	bl	8006118 <UART_EndRxTransfer>
 8005fa6:	687b      	ldr	r3, [r7, #4]
 8005fa8:	681b      	ldr	r3, [r3, #0]
 8005faa:	695b      	ldr	r3, [r3, #20]
 8005fac:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005fb0:	2b40      	cmp	r3, #64	; 0x40
 8005fb2:	d123      	bne.n	8005ffc <HAL_UART_IRQHandler+0x1a0>
 8005fb4:	687b      	ldr	r3, [r7, #4]
 8005fb6:	681b      	ldr	r3, [r3, #0]
 8005fb8:	695a      	ldr	r2, [r3, #20]
 8005fba:	687b      	ldr	r3, [r7, #4]
 8005fbc:	681b      	ldr	r3, [r3, #0]
 8005fbe:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005fc2:	615a      	str	r2, [r3, #20]
 8005fc4:	687b      	ldr	r3, [r7, #4]
 8005fc6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005fc8:	2b00      	cmp	r3, #0
 8005fca:	d013      	beq.n	8005ff4 <HAL_UART_IRQHandler+0x198>
 8005fcc:	687b      	ldr	r3, [r7, #4]
 8005fce:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005fd0:	4a21      	ldr	r2, [pc, #132]	; (8006058 <HAL_UART_IRQHandler+0x1fc>)
 8005fd2:	651a      	str	r2, [r3, #80]	; 0x50
 8005fd4:	687b      	ldr	r3, [r7, #4]
 8005fd6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005fd8:	4618      	mov	r0, r3
 8005fda:	f7fd fa3f 	bl	800345c <HAL_DMA_Abort_IT>
 8005fde:	4603      	mov	r3, r0
 8005fe0:	2b00      	cmp	r3, #0
 8005fe2:	d016      	beq.n	8006012 <HAL_UART_IRQHandler+0x1b6>
 8005fe4:	687b      	ldr	r3, [r7, #4]
 8005fe6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005fe8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005fea:	687a      	ldr	r2, [r7, #4]
 8005fec:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8005fee:	4610      	mov	r0, r2
 8005ff0:	4798      	blx	r3
 8005ff2:	e00e      	b.n	8006012 <HAL_UART_IRQHandler+0x1b6>
 8005ff4:	6878      	ldr	r0, [r7, #4]
 8005ff6:	f000 f83b 	bl	8006070 <HAL_UART_ErrorCallback>
 8005ffa:	e00a      	b.n	8006012 <HAL_UART_IRQHandler+0x1b6>
 8005ffc:	6878      	ldr	r0, [r7, #4]
 8005ffe:	f000 f837 	bl	8006070 <HAL_UART_ErrorCallback>
 8006002:	e006      	b.n	8006012 <HAL_UART_IRQHandler+0x1b6>
 8006004:	6878      	ldr	r0, [r7, #4]
 8006006:	f000 f833 	bl	8006070 <HAL_UART_ErrorCallback>
 800600a:	687b      	ldr	r3, [r7, #4]
 800600c:	2200      	movs	r2, #0
 800600e:	63da      	str	r2, [r3, #60]	; 0x3c
 8006010:	e01e      	b.n	8006050 <HAL_UART_IRQHandler+0x1f4>
 8006012:	bf00      	nop
 8006014:	e01c      	b.n	8006050 <HAL_UART_IRQHandler+0x1f4>
 8006016:	69fb      	ldr	r3, [r7, #28]
 8006018:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800601c:	2b00      	cmp	r3, #0
 800601e:	d008      	beq.n	8006032 <HAL_UART_IRQHandler+0x1d6>
 8006020:	69bb      	ldr	r3, [r7, #24]
 8006022:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006026:	2b00      	cmp	r3, #0
 8006028:	d003      	beq.n	8006032 <HAL_UART_IRQHandler+0x1d6>
 800602a:	6878      	ldr	r0, [r7, #4]
 800602c:	f000 f8a6 	bl	800617c <UART_Transmit_IT>
 8006030:	e00f      	b.n	8006052 <HAL_UART_IRQHandler+0x1f6>
 8006032:	69fb      	ldr	r3, [r7, #28]
 8006034:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006038:	2b00      	cmp	r3, #0
 800603a:	d00a      	beq.n	8006052 <HAL_UART_IRQHandler+0x1f6>
 800603c:	69bb      	ldr	r3, [r7, #24]
 800603e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006042:	2b00      	cmp	r3, #0
 8006044:	d005      	beq.n	8006052 <HAL_UART_IRQHandler+0x1f6>
 8006046:	6878      	ldr	r0, [r7, #4]
 8006048:	f000 f8ee 	bl	8006228 <UART_EndTransmit_IT>
 800604c:	bf00      	nop
 800604e:	e000      	b.n	8006052 <HAL_UART_IRQHandler+0x1f6>
 8006050:	bf00      	nop
 8006052:	3720      	adds	r7, #32
 8006054:	46bd      	mov	sp, r7
 8006056:	bd80      	pop	{r7, pc}
 8006058:	08006155 	.word	0x08006155

0800605c <HAL_UART_TxCpltCallback>:
 800605c:	b480      	push	{r7}
 800605e:	b083      	sub	sp, #12
 8006060:	af00      	add	r7, sp, #0
 8006062:	6078      	str	r0, [r7, #4]
 8006064:	bf00      	nop
 8006066:	370c      	adds	r7, #12
 8006068:	46bd      	mov	sp, r7
 800606a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800606e:	4770      	bx	lr

08006070 <HAL_UART_ErrorCallback>:
 8006070:	b480      	push	{r7}
 8006072:	b083      	sub	sp, #12
 8006074:	af00      	add	r7, sp, #0
 8006076:	6078      	str	r0, [r7, #4]
 8006078:	bf00      	nop
 800607a:	370c      	adds	r7, #12
 800607c:	46bd      	mov	sp, r7
 800607e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006082:	4770      	bx	lr

08006084 <UART_WaitOnFlagUntilTimeout>:
 8006084:	b580      	push	{r7, lr}
 8006086:	b084      	sub	sp, #16
 8006088:	af00      	add	r7, sp, #0
 800608a:	60f8      	str	r0, [r7, #12]
 800608c:	60b9      	str	r1, [r7, #8]
 800608e:	603b      	str	r3, [r7, #0]
 8006090:	4613      	mov	r3, r2
 8006092:	71fb      	strb	r3, [r7, #7]
 8006094:	e02c      	b.n	80060f0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8006096:	69bb      	ldr	r3, [r7, #24]
 8006098:	f1b3 3fff 	cmp.w	r3, #4294967295
 800609c:	d028      	beq.n	80060f0 <UART_WaitOnFlagUntilTimeout+0x6c>
 800609e:	69bb      	ldr	r3, [r7, #24]
 80060a0:	2b00      	cmp	r3, #0
 80060a2:	d007      	beq.n	80060b4 <UART_WaitOnFlagUntilTimeout+0x30>
 80060a4:	f7fc ffa0 	bl	8002fe8 <HAL_GetTick>
 80060a8:	4602      	mov	r2, r0
 80060aa:	683b      	ldr	r3, [r7, #0]
 80060ac:	1ad3      	subs	r3, r2, r3
 80060ae:	69ba      	ldr	r2, [r7, #24]
 80060b0:	429a      	cmp	r2, r3
 80060b2:	d21d      	bcs.n	80060f0 <UART_WaitOnFlagUntilTimeout+0x6c>
 80060b4:	68fb      	ldr	r3, [r7, #12]
 80060b6:	681b      	ldr	r3, [r3, #0]
 80060b8:	68da      	ldr	r2, [r3, #12]
 80060ba:	68fb      	ldr	r3, [r7, #12]
 80060bc:	681b      	ldr	r3, [r3, #0]
 80060be:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80060c2:	60da      	str	r2, [r3, #12]
 80060c4:	68fb      	ldr	r3, [r7, #12]
 80060c6:	681b      	ldr	r3, [r3, #0]
 80060c8:	695a      	ldr	r2, [r3, #20]
 80060ca:	68fb      	ldr	r3, [r7, #12]
 80060cc:	681b      	ldr	r3, [r3, #0]
 80060ce:	f022 0201 	bic.w	r2, r2, #1
 80060d2:	615a      	str	r2, [r3, #20]
 80060d4:	68fb      	ldr	r3, [r7, #12]
 80060d6:	2220      	movs	r2, #32
 80060d8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80060dc:	68fb      	ldr	r3, [r7, #12]
 80060de:	2220      	movs	r2, #32
 80060e0:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80060e4:	68fb      	ldr	r3, [r7, #12]
 80060e6:	2200      	movs	r2, #0
 80060e8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80060ec:	2303      	movs	r3, #3
 80060ee:	e00f      	b.n	8006110 <UART_WaitOnFlagUntilTimeout+0x8c>
 80060f0:	68fb      	ldr	r3, [r7, #12]
 80060f2:	681b      	ldr	r3, [r3, #0]
 80060f4:	681a      	ldr	r2, [r3, #0]
 80060f6:	68bb      	ldr	r3, [r7, #8]
 80060f8:	4013      	ands	r3, r2
 80060fa:	68ba      	ldr	r2, [r7, #8]
 80060fc:	429a      	cmp	r2, r3
 80060fe:	bf0c      	ite	eq
 8006100:	2301      	moveq	r3, #1
 8006102:	2300      	movne	r3, #0
 8006104:	b2db      	uxtb	r3, r3
 8006106:	461a      	mov	r2, r3
 8006108:	79fb      	ldrb	r3, [r7, #7]
 800610a:	429a      	cmp	r2, r3
 800610c:	d0c3      	beq.n	8006096 <UART_WaitOnFlagUntilTimeout+0x12>
 800610e:	2300      	movs	r3, #0
 8006110:	4618      	mov	r0, r3
 8006112:	3710      	adds	r7, #16
 8006114:	46bd      	mov	sp, r7
 8006116:	bd80      	pop	{r7, pc}

08006118 <UART_EndRxTransfer>:
 8006118:	b480      	push	{r7}
 800611a:	b083      	sub	sp, #12
 800611c:	af00      	add	r7, sp, #0
 800611e:	6078      	str	r0, [r7, #4]
 8006120:	687b      	ldr	r3, [r7, #4]
 8006122:	681b      	ldr	r3, [r3, #0]
 8006124:	68da      	ldr	r2, [r3, #12]
 8006126:	687b      	ldr	r3, [r7, #4]
 8006128:	681b      	ldr	r3, [r3, #0]
 800612a:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800612e:	60da      	str	r2, [r3, #12]
 8006130:	687b      	ldr	r3, [r7, #4]
 8006132:	681b      	ldr	r3, [r3, #0]
 8006134:	695a      	ldr	r2, [r3, #20]
 8006136:	687b      	ldr	r3, [r7, #4]
 8006138:	681b      	ldr	r3, [r3, #0]
 800613a:	f022 0201 	bic.w	r2, r2, #1
 800613e:	615a      	str	r2, [r3, #20]
 8006140:	687b      	ldr	r3, [r7, #4]
 8006142:	2220      	movs	r2, #32
 8006144:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8006148:	bf00      	nop
 800614a:	370c      	adds	r7, #12
 800614c:	46bd      	mov	sp, r7
 800614e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006152:	4770      	bx	lr

08006154 <UART_DMAAbortOnError>:
 8006154:	b580      	push	{r7, lr}
 8006156:	b084      	sub	sp, #16
 8006158:	af00      	add	r7, sp, #0
 800615a:	6078      	str	r0, [r7, #4]
 800615c:	687b      	ldr	r3, [r7, #4]
 800615e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006160:	60fb      	str	r3, [r7, #12]
 8006162:	68fb      	ldr	r3, [r7, #12]
 8006164:	2200      	movs	r2, #0
 8006166:	85da      	strh	r2, [r3, #46]	; 0x2e
 8006168:	68fb      	ldr	r3, [r7, #12]
 800616a:	2200      	movs	r2, #0
 800616c:	84da      	strh	r2, [r3, #38]	; 0x26
 800616e:	68f8      	ldr	r0, [r7, #12]
 8006170:	f7ff ff7e 	bl	8006070 <HAL_UART_ErrorCallback>
 8006174:	bf00      	nop
 8006176:	3710      	adds	r7, #16
 8006178:	46bd      	mov	sp, r7
 800617a:	bd80      	pop	{r7, pc}

0800617c <UART_Transmit_IT>:
 800617c:	b480      	push	{r7}
 800617e:	b085      	sub	sp, #20
 8006180:	af00      	add	r7, sp, #0
 8006182:	6078      	str	r0, [r7, #4]
 8006184:	687b      	ldr	r3, [r7, #4]
 8006186:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800618a:	b2db      	uxtb	r3, r3
 800618c:	2b21      	cmp	r3, #33	; 0x21
 800618e:	d144      	bne.n	800621a <UART_Transmit_IT+0x9e>
 8006190:	687b      	ldr	r3, [r7, #4]
 8006192:	689b      	ldr	r3, [r3, #8]
 8006194:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006198:	d11a      	bne.n	80061d0 <UART_Transmit_IT+0x54>
 800619a:	687b      	ldr	r3, [r7, #4]
 800619c:	6a1b      	ldr	r3, [r3, #32]
 800619e:	60fb      	str	r3, [r7, #12]
 80061a0:	68fb      	ldr	r3, [r7, #12]
 80061a2:	881b      	ldrh	r3, [r3, #0]
 80061a4:	461a      	mov	r2, r3
 80061a6:	687b      	ldr	r3, [r7, #4]
 80061a8:	681b      	ldr	r3, [r3, #0]
 80061aa:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80061ae:	605a      	str	r2, [r3, #4]
 80061b0:	687b      	ldr	r3, [r7, #4]
 80061b2:	691b      	ldr	r3, [r3, #16]
 80061b4:	2b00      	cmp	r3, #0
 80061b6:	d105      	bne.n	80061c4 <UART_Transmit_IT+0x48>
 80061b8:	687b      	ldr	r3, [r7, #4]
 80061ba:	6a1b      	ldr	r3, [r3, #32]
 80061bc:	1c9a      	adds	r2, r3, #2
 80061be:	687b      	ldr	r3, [r7, #4]
 80061c0:	621a      	str	r2, [r3, #32]
 80061c2:	e00e      	b.n	80061e2 <UART_Transmit_IT+0x66>
 80061c4:	687b      	ldr	r3, [r7, #4]
 80061c6:	6a1b      	ldr	r3, [r3, #32]
 80061c8:	1c5a      	adds	r2, r3, #1
 80061ca:	687b      	ldr	r3, [r7, #4]
 80061cc:	621a      	str	r2, [r3, #32]
 80061ce:	e008      	b.n	80061e2 <UART_Transmit_IT+0x66>
 80061d0:	687b      	ldr	r3, [r7, #4]
 80061d2:	6a1b      	ldr	r3, [r3, #32]
 80061d4:	1c59      	adds	r1, r3, #1
 80061d6:	687a      	ldr	r2, [r7, #4]
 80061d8:	6211      	str	r1, [r2, #32]
 80061da:	781a      	ldrb	r2, [r3, #0]
 80061dc:	687b      	ldr	r3, [r7, #4]
 80061de:	681b      	ldr	r3, [r3, #0]
 80061e0:	605a      	str	r2, [r3, #4]
 80061e2:	687b      	ldr	r3, [r7, #4]
 80061e4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80061e6:	b29b      	uxth	r3, r3
 80061e8:	3b01      	subs	r3, #1
 80061ea:	b29b      	uxth	r3, r3
 80061ec:	687a      	ldr	r2, [r7, #4]
 80061ee:	4619      	mov	r1, r3
 80061f0:	84d1      	strh	r1, [r2, #38]	; 0x26
 80061f2:	2b00      	cmp	r3, #0
 80061f4:	d10f      	bne.n	8006216 <UART_Transmit_IT+0x9a>
 80061f6:	687b      	ldr	r3, [r7, #4]
 80061f8:	681b      	ldr	r3, [r3, #0]
 80061fa:	68da      	ldr	r2, [r3, #12]
 80061fc:	687b      	ldr	r3, [r7, #4]
 80061fe:	681b      	ldr	r3, [r3, #0]
 8006200:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8006204:	60da      	str	r2, [r3, #12]
 8006206:	687b      	ldr	r3, [r7, #4]
 8006208:	681b      	ldr	r3, [r3, #0]
 800620a:	68da      	ldr	r2, [r3, #12]
 800620c:	687b      	ldr	r3, [r7, #4]
 800620e:	681b      	ldr	r3, [r3, #0]
 8006210:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006214:	60da      	str	r2, [r3, #12]
 8006216:	2300      	movs	r3, #0
 8006218:	e000      	b.n	800621c <UART_Transmit_IT+0xa0>
 800621a:	2302      	movs	r3, #2
 800621c:	4618      	mov	r0, r3
 800621e:	3714      	adds	r7, #20
 8006220:	46bd      	mov	sp, r7
 8006222:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006226:	4770      	bx	lr

08006228 <UART_EndTransmit_IT>:
 8006228:	b580      	push	{r7, lr}
 800622a:	b082      	sub	sp, #8
 800622c:	af00      	add	r7, sp, #0
 800622e:	6078      	str	r0, [r7, #4]
 8006230:	687b      	ldr	r3, [r7, #4]
 8006232:	681b      	ldr	r3, [r3, #0]
 8006234:	68da      	ldr	r2, [r3, #12]
 8006236:	687b      	ldr	r3, [r7, #4]
 8006238:	681b      	ldr	r3, [r3, #0]
 800623a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800623e:	60da      	str	r2, [r3, #12]
 8006240:	687b      	ldr	r3, [r7, #4]
 8006242:	2220      	movs	r2, #32
 8006244:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8006248:	6878      	ldr	r0, [r7, #4]
 800624a:	f7ff ff07 	bl	800605c <HAL_UART_TxCpltCallback>
 800624e:	2300      	movs	r3, #0
 8006250:	4618      	mov	r0, r3
 8006252:	3708      	adds	r7, #8
 8006254:	46bd      	mov	sp, r7
 8006256:	bd80      	pop	{r7, pc}

08006258 <UART_Receive_IT>:
 8006258:	b580      	push	{r7, lr}
 800625a:	b084      	sub	sp, #16
 800625c:	af00      	add	r7, sp, #0
 800625e:	6078      	str	r0, [r7, #4]
 8006260:	687b      	ldr	r3, [r7, #4]
 8006262:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8006266:	b2db      	uxtb	r3, r3
 8006268:	2b22      	cmp	r3, #34	; 0x22
 800626a:	d171      	bne.n	8006350 <UART_Receive_IT+0xf8>
 800626c:	687b      	ldr	r3, [r7, #4]
 800626e:	689b      	ldr	r3, [r3, #8]
 8006270:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006274:	d123      	bne.n	80062be <UART_Receive_IT+0x66>
 8006276:	687b      	ldr	r3, [r7, #4]
 8006278:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800627a:	60fb      	str	r3, [r7, #12]
 800627c:	687b      	ldr	r3, [r7, #4]
 800627e:	691b      	ldr	r3, [r3, #16]
 8006280:	2b00      	cmp	r3, #0
 8006282:	d10e      	bne.n	80062a2 <UART_Receive_IT+0x4a>
 8006284:	687b      	ldr	r3, [r7, #4]
 8006286:	681b      	ldr	r3, [r3, #0]
 8006288:	685b      	ldr	r3, [r3, #4]
 800628a:	b29b      	uxth	r3, r3
 800628c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006290:	b29a      	uxth	r2, r3
 8006292:	68fb      	ldr	r3, [r7, #12]
 8006294:	801a      	strh	r2, [r3, #0]
 8006296:	687b      	ldr	r3, [r7, #4]
 8006298:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800629a:	1c9a      	adds	r2, r3, #2
 800629c:	687b      	ldr	r3, [r7, #4]
 800629e:	629a      	str	r2, [r3, #40]	; 0x28
 80062a0:	e029      	b.n	80062f6 <UART_Receive_IT+0x9e>
 80062a2:	687b      	ldr	r3, [r7, #4]
 80062a4:	681b      	ldr	r3, [r3, #0]
 80062a6:	685b      	ldr	r3, [r3, #4]
 80062a8:	b29b      	uxth	r3, r3
 80062aa:	b2db      	uxtb	r3, r3
 80062ac:	b29a      	uxth	r2, r3
 80062ae:	68fb      	ldr	r3, [r7, #12]
 80062b0:	801a      	strh	r2, [r3, #0]
 80062b2:	687b      	ldr	r3, [r7, #4]
 80062b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80062b6:	1c5a      	adds	r2, r3, #1
 80062b8:	687b      	ldr	r3, [r7, #4]
 80062ba:	629a      	str	r2, [r3, #40]	; 0x28
 80062bc:	e01b      	b.n	80062f6 <UART_Receive_IT+0x9e>
 80062be:	687b      	ldr	r3, [r7, #4]
 80062c0:	691b      	ldr	r3, [r3, #16]
 80062c2:	2b00      	cmp	r3, #0
 80062c4:	d10a      	bne.n	80062dc <UART_Receive_IT+0x84>
 80062c6:	687b      	ldr	r3, [r7, #4]
 80062c8:	681b      	ldr	r3, [r3, #0]
 80062ca:	6858      	ldr	r0, [r3, #4]
 80062cc:	687b      	ldr	r3, [r7, #4]
 80062ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80062d0:	1c59      	adds	r1, r3, #1
 80062d2:	687a      	ldr	r2, [r7, #4]
 80062d4:	6291      	str	r1, [r2, #40]	; 0x28
 80062d6:	b2c2      	uxtb	r2, r0
 80062d8:	701a      	strb	r2, [r3, #0]
 80062da:	e00c      	b.n	80062f6 <UART_Receive_IT+0x9e>
 80062dc:	687b      	ldr	r3, [r7, #4]
 80062de:	681b      	ldr	r3, [r3, #0]
 80062e0:	685b      	ldr	r3, [r3, #4]
 80062e2:	b2da      	uxtb	r2, r3
 80062e4:	687b      	ldr	r3, [r7, #4]
 80062e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80062e8:	1c58      	adds	r0, r3, #1
 80062ea:	6879      	ldr	r1, [r7, #4]
 80062ec:	6288      	str	r0, [r1, #40]	; 0x28
 80062ee:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 80062f2:	b2d2      	uxtb	r2, r2
 80062f4:	701a      	strb	r2, [r3, #0]
 80062f6:	687b      	ldr	r3, [r7, #4]
 80062f8:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80062fa:	b29b      	uxth	r3, r3
 80062fc:	3b01      	subs	r3, #1
 80062fe:	b29b      	uxth	r3, r3
 8006300:	687a      	ldr	r2, [r7, #4]
 8006302:	4619      	mov	r1, r3
 8006304:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8006306:	2b00      	cmp	r3, #0
 8006308:	d120      	bne.n	800634c <UART_Receive_IT+0xf4>
 800630a:	687b      	ldr	r3, [r7, #4]
 800630c:	681b      	ldr	r3, [r3, #0]
 800630e:	68da      	ldr	r2, [r3, #12]
 8006310:	687b      	ldr	r3, [r7, #4]
 8006312:	681b      	ldr	r3, [r3, #0]
 8006314:	f022 0220 	bic.w	r2, r2, #32
 8006318:	60da      	str	r2, [r3, #12]
 800631a:	687b      	ldr	r3, [r7, #4]
 800631c:	681b      	ldr	r3, [r3, #0]
 800631e:	68da      	ldr	r2, [r3, #12]
 8006320:	687b      	ldr	r3, [r7, #4]
 8006322:	681b      	ldr	r3, [r3, #0]
 8006324:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006328:	60da      	str	r2, [r3, #12]
 800632a:	687b      	ldr	r3, [r7, #4]
 800632c:	681b      	ldr	r3, [r3, #0]
 800632e:	695a      	ldr	r2, [r3, #20]
 8006330:	687b      	ldr	r3, [r7, #4]
 8006332:	681b      	ldr	r3, [r3, #0]
 8006334:	f022 0201 	bic.w	r2, r2, #1
 8006338:	615a      	str	r2, [r3, #20]
 800633a:	687b      	ldr	r3, [r7, #4]
 800633c:	2220      	movs	r2, #32
 800633e:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8006342:	6878      	ldr	r0, [r7, #4]
 8006344:	f7fc fb18 	bl	8002978 <HAL_UART_RxCpltCallback>
 8006348:	2300      	movs	r3, #0
 800634a:	e002      	b.n	8006352 <UART_Receive_IT+0xfa>
 800634c:	2300      	movs	r3, #0
 800634e:	e000      	b.n	8006352 <UART_Receive_IT+0xfa>
 8006350:	2302      	movs	r3, #2
 8006352:	4618      	mov	r0, r3
 8006354:	3710      	adds	r7, #16
 8006356:	46bd      	mov	sp, r7
 8006358:	bd80      	pop	{r7, pc}
	...

0800635c <UART_SetConfig>:
 800635c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006360:	b085      	sub	sp, #20
 8006362:	af00      	add	r7, sp, #0
 8006364:	6078      	str	r0, [r7, #4]
 8006366:	687b      	ldr	r3, [r7, #4]
 8006368:	681b      	ldr	r3, [r3, #0]
 800636a:	691b      	ldr	r3, [r3, #16]
 800636c:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8006370:	687b      	ldr	r3, [r7, #4]
 8006372:	68da      	ldr	r2, [r3, #12]
 8006374:	687b      	ldr	r3, [r7, #4]
 8006376:	681b      	ldr	r3, [r3, #0]
 8006378:	430a      	orrs	r2, r1
 800637a:	611a      	str	r2, [r3, #16]
 800637c:	687b      	ldr	r3, [r7, #4]
 800637e:	689a      	ldr	r2, [r3, #8]
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	691b      	ldr	r3, [r3, #16]
 8006384:	431a      	orrs	r2, r3
 8006386:	687b      	ldr	r3, [r7, #4]
 8006388:	695b      	ldr	r3, [r3, #20]
 800638a:	431a      	orrs	r2, r3
 800638c:	687b      	ldr	r3, [r7, #4]
 800638e:	69db      	ldr	r3, [r3, #28]
 8006390:	4313      	orrs	r3, r2
 8006392:	60fb      	str	r3, [r7, #12]
 8006394:	687b      	ldr	r3, [r7, #4]
 8006396:	681b      	ldr	r3, [r3, #0]
 8006398:	68db      	ldr	r3, [r3, #12]
 800639a:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 800639e:	f023 030c 	bic.w	r3, r3, #12
 80063a2:	687a      	ldr	r2, [r7, #4]
 80063a4:	6812      	ldr	r2, [r2, #0]
 80063a6:	68f9      	ldr	r1, [r7, #12]
 80063a8:	430b      	orrs	r3, r1
 80063aa:	60d3      	str	r3, [r2, #12]
 80063ac:	687b      	ldr	r3, [r7, #4]
 80063ae:	681b      	ldr	r3, [r3, #0]
 80063b0:	695b      	ldr	r3, [r3, #20]
 80063b2:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 80063b6:	687b      	ldr	r3, [r7, #4]
 80063b8:	699a      	ldr	r2, [r3, #24]
 80063ba:	687b      	ldr	r3, [r7, #4]
 80063bc:	681b      	ldr	r3, [r3, #0]
 80063be:	430a      	orrs	r2, r1
 80063c0:	615a      	str	r2, [r3, #20]
 80063c2:	687b      	ldr	r3, [r7, #4]
 80063c4:	69db      	ldr	r3, [r3, #28]
 80063c6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80063ca:	f040 818b 	bne.w	80066e4 <UART_SetConfig+0x388>
 80063ce:	687b      	ldr	r3, [r7, #4]
 80063d0:	681b      	ldr	r3, [r3, #0]
 80063d2:	4ac1      	ldr	r2, [pc, #772]	; (80066d8 <UART_SetConfig+0x37c>)
 80063d4:	4293      	cmp	r3, r2
 80063d6:	d005      	beq.n	80063e4 <UART_SetConfig+0x88>
 80063d8:	687b      	ldr	r3, [r7, #4]
 80063da:	681b      	ldr	r3, [r3, #0]
 80063dc:	4abf      	ldr	r2, [pc, #764]	; (80066dc <UART_SetConfig+0x380>)
 80063de:	4293      	cmp	r3, r2
 80063e0:	f040 80bd 	bne.w	800655e <UART_SetConfig+0x202>
 80063e4:	f7fd fd86 	bl	8003ef4 <HAL_RCC_GetPCLK2Freq>
 80063e8:	60b8      	str	r0, [r7, #8]
 80063ea:	68bb      	ldr	r3, [r7, #8]
 80063ec:	461d      	mov	r5, r3
 80063ee:	f04f 0600 	mov.w	r6, #0
 80063f2:	46a8      	mov	r8, r5
 80063f4:	46b1      	mov	r9, r6
 80063f6:	eb18 0308 	adds.w	r3, r8, r8
 80063fa:	eb49 0409 	adc.w	r4, r9, r9
 80063fe:	4698      	mov	r8, r3
 8006400:	46a1      	mov	r9, r4
 8006402:	eb18 0805 	adds.w	r8, r8, r5
 8006406:	eb49 0906 	adc.w	r9, r9, r6
 800640a:	f04f 0100 	mov.w	r1, #0
 800640e:	f04f 0200 	mov.w	r2, #0
 8006412:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8006416:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 800641a:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 800641e:	4688      	mov	r8, r1
 8006420:	4691      	mov	r9, r2
 8006422:	eb18 0005 	adds.w	r0, r8, r5
 8006426:	eb49 0106 	adc.w	r1, r9, r6
 800642a:	687b      	ldr	r3, [r7, #4]
 800642c:	685b      	ldr	r3, [r3, #4]
 800642e:	461d      	mov	r5, r3
 8006430:	f04f 0600 	mov.w	r6, #0
 8006434:	196b      	adds	r3, r5, r5
 8006436:	eb46 0406 	adc.w	r4, r6, r6
 800643a:	461a      	mov	r2, r3
 800643c:	4623      	mov	r3, r4
 800643e:	f7fa fbcb 	bl	8000bd8 <__aeabi_uldivmod>
 8006442:	4603      	mov	r3, r0
 8006444:	460c      	mov	r4, r1
 8006446:	461a      	mov	r2, r3
 8006448:	4ba5      	ldr	r3, [pc, #660]	; (80066e0 <UART_SetConfig+0x384>)
 800644a:	fba3 2302 	umull	r2, r3, r3, r2
 800644e:	095b      	lsrs	r3, r3, #5
 8006450:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8006454:	68bb      	ldr	r3, [r7, #8]
 8006456:	461d      	mov	r5, r3
 8006458:	f04f 0600 	mov.w	r6, #0
 800645c:	46a9      	mov	r9, r5
 800645e:	46b2      	mov	sl, r6
 8006460:	eb19 0309 	adds.w	r3, r9, r9
 8006464:	eb4a 040a 	adc.w	r4, sl, sl
 8006468:	4699      	mov	r9, r3
 800646a:	46a2      	mov	sl, r4
 800646c:	eb19 0905 	adds.w	r9, r9, r5
 8006470:	eb4a 0a06 	adc.w	sl, sl, r6
 8006474:	f04f 0100 	mov.w	r1, #0
 8006478:	f04f 0200 	mov.w	r2, #0
 800647c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006480:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8006484:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8006488:	4689      	mov	r9, r1
 800648a:	4692      	mov	sl, r2
 800648c:	eb19 0005 	adds.w	r0, r9, r5
 8006490:	eb4a 0106 	adc.w	r1, sl, r6
 8006494:	687b      	ldr	r3, [r7, #4]
 8006496:	685b      	ldr	r3, [r3, #4]
 8006498:	461d      	mov	r5, r3
 800649a:	f04f 0600 	mov.w	r6, #0
 800649e:	196b      	adds	r3, r5, r5
 80064a0:	eb46 0406 	adc.w	r4, r6, r6
 80064a4:	461a      	mov	r2, r3
 80064a6:	4623      	mov	r3, r4
 80064a8:	f7fa fb96 	bl	8000bd8 <__aeabi_uldivmod>
 80064ac:	4603      	mov	r3, r0
 80064ae:	460c      	mov	r4, r1
 80064b0:	461a      	mov	r2, r3
 80064b2:	4b8b      	ldr	r3, [pc, #556]	; (80066e0 <UART_SetConfig+0x384>)
 80064b4:	fba3 1302 	umull	r1, r3, r3, r2
 80064b8:	095b      	lsrs	r3, r3, #5
 80064ba:	2164      	movs	r1, #100	; 0x64
 80064bc:	fb01 f303 	mul.w	r3, r1, r3
 80064c0:	1ad3      	subs	r3, r2, r3
 80064c2:	00db      	lsls	r3, r3, #3
 80064c4:	3332      	adds	r3, #50	; 0x32
 80064c6:	4a86      	ldr	r2, [pc, #536]	; (80066e0 <UART_SetConfig+0x384>)
 80064c8:	fba2 2303 	umull	r2, r3, r2, r3
 80064cc:	095b      	lsrs	r3, r3, #5
 80064ce:	005b      	lsls	r3, r3, #1
 80064d0:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 80064d4:	4498      	add	r8, r3
 80064d6:	68bb      	ldr	r3, [r7, #8]
 80064d8:	461d      	mov	r5, r3
 80064da:	f04f 0600 	mov.w	r6, #0
 80064de:	46a9      	mov	r9, r5
 80064e0:	46b2      	mov	sl, r6
 80064e2:	eb19 0309 	adds.w	r3, r9, r9
 80064e6:	eb4a 040a 	adc.w	r4, sl, sl
 80064ea:	4699      	mov	r9, r3
 80064ec:	46a2      	mov	sl, r4
 80064ee:	eb19 0905 	adds.w	r9, r9, r5
 80064f2:	eb4a 0a06 	adc.w	sl, sl, r6
 80064f6:	f04f 0100 	mov.w	r1, #0
 80064fa:	f04f 0200 	mov.w	r2, #0
 80064fe:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006502:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8006506:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800650a:	4689      	mov	r9, r1
 800650c:	4692      	mov	sl, r2
 800650e:	eb19 0005 	adds.w	r0, r9, r5
 8006512:	eb4a 0106 	adc.w	r1, sl, r6
 8006516:	687b      	ldr	r3, [r7, #4]
 8006518:	685b      	ldr	r3, [r3, #4]
 800651a:	461d      	mov	r5, r3
 800651c:	f04f 0600 	mov.w	r6, #0
 8006520:	196b      	adds	r3, r5, r5
 8006522:	eb46 0406 	adc.w	r4, r6, r6
 8006526:	461a      	mov	r2, r3
 8006528:	4623      	mov	r3, r4
 800652a:	f7fa fb55 	bl	8000bd8 <__aeabi_uldivmod>
 800652e:	4603      	mov	r3, r0
 8006530:	460c      	mov	r4, r1
 8006532:	461a      	mov	r2, r3
 8006534:	4b6a      	ldr	r3, [pc, #424]	; (80066e0 <UART_SetConfig+0x384>)
 8006536:	fba3 1302 	umull	r1, r3, r3, r2
 800653a:	095b      	lsrs	r3, r3, #5
 800653c:	2164      	movs	r1, #100	; 0x64
 800653e:	fb01 f303 	mul.w	r3, r1, r3
 8006542:	1ad3      	subs	r3, r2, r3
 8006544:	00db      	lsls	r3, r3, #3
 8006546:	3332      	adds	r3, #50	; 0x32
 8006548:	4a65      	ldr	r2, [pc, #404]	; (80066e0 <UART_SetConfig+0x384>)
 800654a:	fba2 2303 	umull	r2, r3, r2, r3
 800654e:	095b      	lsrs	r3, r3, #5
 8006550:	f003 0207 	and.w	r2, r3, #7
 8006554:	687b      	ldr	r3, [r7, #4]
 8006556:	681b      	ldr	r3, [r3, #0]
 8006558:	4442      	add	r2, r8
 800655a:	609a      	str	r2, [r3, #8]
 800655c:	e26f      	b.n	8006a3e <UART_SetConfig+0x6e2>
 800655e:	f7fd fcb5 	bl	8003ecc <HAL_RCC_GetPCLK1Freq>
 8006562:	60b8      	str	r0, [r7, #8]
 8006564:	68bb      	ldr	r3, [r7, #8]
 8006566:	461d      	mov	r5, r3
 8006568:	f04f 0600 	mov.w	r6, #0
 800656c:	46a8      	mov	r8, r5
 800656e:	46b1      	mov	r9, r6
 8006570:	eb18 0308 	adds.w	r3, r8, r8
 8006574:	eb49 0409 	adc.w	r4, r9, r9
 8006578:	4698      	mov	r8, r3
 800657a:	46a1      	mov	r9, r4
 800657c:	eb18 0805 	adds.w	r8, r8, r5
 8006580:	eb49 0906 	adc.w	r9, r9, r6
 8006584:	f04f 0100 	mov.w	r1, #0
 8006588:	f04f 0200 	mov.w	r2, #0
 800658c:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8006590:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8006594:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8006598:	4688      	mov	r8, r1
 800659a:	4691      	mov	r9, r2
 800659c:	eb18 0005 	adds.w	r0, r8, r5
 80065a0:	eb49 0106 	adc.w	r1, r9, r6
 80065a4:	687b      	ldr	r3, [r7, #4]
 80065a6:	685b      	ldr	r3, [r3, #4]
 80065a8:	461d      	mov	r5, r3
 80065aa:	f04f 0600 	mov.w	r6, #0
 80065ae:	196b      	adds	r3, r5, r5
 80065b0:	eb46 0406 	adc.w	r4, r6, r6
 80065b4:	461a      	mov	r2, r3
 80065b6:	4623      	mov	r3, r4
 80065b8:	f7fa fb0e 	bl	8000bd8 <__aeabi_uldivmod>
 80065bc:	4603      	mov	r3, r0
 80065be:	460c      	mov	r4, r1
 80065c0:	461a      	mov	r2, r3
 80065c2:	4b47      	ldr	r3, [pc, #284]	; (80066e0 <UART_SetConfig+0x384>)
 80065c4:	fba3 2302 	umull	r2, r3, r3, r2
 80065c8:	095b      	lsrs	r3, r3, #5
 80065ca:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80065ce:	68bb      	ldr	r3, [r7, #8]
 80065d0:	461d      	mov	r5, r3
 80065d2:	f04f 0600 	mov.w	r6, #0
 80065d6:	46a9      	mov	r9, r5
 80065d8:	46b2      	mov	sl, r6
 80065da:	eb19 0309 	adds.w	r3, r9, r9
 80065de:	eb4a 040a 	adc.w	r4, sl, sl
 80065e2:	4699      	mov	r9, r3
 80065e4:	46a2      	mov	sl, r4
 80065e6:	eb19 0905 	adds.w	r9, r9, r5
 80065ea:	eb4a 0a06 	adc.w	sl, sl, r6
 80065ee:	f04f 0100 	mov.w	r1, #0
 80065f2:	f04f 0200 	mov.w	r2, #0
 80065f6:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80065fa:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80065fe:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8006602:	4689      	mov	r9, r1
 8006604:	4692      	mov	sl, r2
 8006606:	eb19 0005 	adds.w	r0, r9, r5
 800660a:	eb4a 0106 	adc.w	r1, sl, r6
 800660e:	687b      	ldr	r3, [r7, #4]
 8006610:	685b      	ldr	r3, [r3, #4]
 8006612:	461d      	mov	r5, r3
 8006614:	f04f 0600 	mov.w	r6, #0
 8006618:	196b      	adds	r3, r5, r5
 800661a:	eb46 0406 	adc.w	r4, r6, r6
 800661e:	461a      	mov	r2, r3
 8006620:	4623      	mov	r3, r4
 8006622:	f7fa fad9 	bl	8000bd8 <__aeabi_uldivmod>
 8006626:	4603      	mov	r3, r0
 8006628:	460c      	mov	r4, r1
 800662a:	461a      	mov	r2, r3
 800662c:	4b2c      	ldr	r3, [pc, #176]	; (80066e0 <UART_SetConfig+0x384>)
 800662e:	fba3 1302 	umull	r1, r3, r3, r2
 8006632:	095b      	lsrs	r3, r3, #5
 8006634:	2164      	movs	r1, #100	; 0x64
 8006636:	fb01 f303 	mul.w	r3, r1, r3
 800663a:	1ad3      	subs	r3, r2, r3
 800663c:	00db      	lsls	r3, r3, #3
 800663e:	3332      	adds	r3, #50	; 0x32
 8006640:	4a27      	ldr	r2, [pc, #156]	; (80066e0 <UART_SetConfig+0x384>)
 8006642:	fba2 2303 	umull	r2, r3, r2, r3
 8006646:	095b      	lsrs	r3, r3, #5
 8006648:	005b      	lsls	r3, r3, #1
 800664a:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800664e:	4498      	add	r8, r3
 8006650:	68bb      	ldr	r3, [r7, #8]
 8006652:	461d      	mov	r5, r3
 8006654:	f04f 0600 	mov.w	r6, #0
 8006658:	46a9      	mov	r9, r5
 800665a:	46b2      	mov	sl, r6
 800665c:	eb19 0309 	adds.w	r3, r9, r9
 8006660:	eb4a 040a 	adc.w	r4, sl, sl
 8006664:	4699      	mov	r9, r3
 8006666:	46a2      	mov	sl, r4
 8006668:	eb19 0905 	adds.w	r9, r9, r5
 800666c:	eb4a 0a06 	adc.w	sl, sl, r6
 8006670:	f04f 0100 	mov.w	r1, #0
 8006674:	f04f 0200 	mov.w	r2, #0
 8006678:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800667c:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8006680:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8006684:	4689      	mov	r9, r1
 8006686:	4692      	mov	sl, r2
 8006688:	eb19 0005 	adds.w	r0, r9, r5
 800668c:	eb4a 0106 	adc.w	r1, sl, r6
 8006690:	687b      	ldr	r3, [r7, #4]
 8006692:	685b      	ldr	r3, [r3, #4]
 8006694:	461d      	mov	r5, r3
 8006696:	f04f 0600 	mov.w	r6, #0
 800669a:	196b      	adds	r3, r5, r5
 800669c:	eb46 0406 	adc.w	r4, r6, r6
 80066a0:	461a      	mov	r2, r3
 80066a2:	4623      	mov	r3, r4
 80066a4:	f7fa fa98 	bl	8000bd8 <__aeabi_uldivmod>
 80066a8:	4603      	mov	r3, r0
 80066aa:	460c      	mov	r4, r1
 80066ac:	461a      	mov	r2, r3
 80066ae:	4b0c      	ldr	r3, [pc, #48]	; (80066e0 <UART_SetConfig+0x384>)
 80066b0:	fba3 1302 	umull	r1, r3, r3, r2
 80066b4:	095b      	lsrs	r3, r3, #5
 80066b6:	2164      	movs	r1, #100	; 0x64
 80066b8:	fb01 f303 	mul.w	r3, r1, r3
 80066bc:	1ad3      	subs	r3, r2, r3
 80066be:	00db      	lsls	r3, r3, #3
 80066c0:	3332      	adds	r3, #50	; 0x32
 80066c2:	4a07      	ldr	r2, [pc, #28]	; (80066e0 <UART_SetConfig+0x384>)
 80066c4:	fba2 2303 	umull	r2, r3, r2, r3
 80066c8:	095b      	lsrs	r3, r3, #5
 80066ca:	f003 0207 	and.w	r2, r3, #7
 80066ce:	687b      	ldr	r3, [r7, #4]
 80066d0:	681b      	ldr	r3, [r3, #0]
 80066d2:	4442      	add	r2, r8
 80066d4:	609a      	str	r2, [r3, #8]
 80066d6:	e1b2      	b.n	8006a3e <UART_SetConfig+0x6e2>
 80066d8:	40011000 	.word	0x40011000
 80066dc:	40011400 	.word	0x40011400
 80066e0:	51eb851f 	.word	0x51eb851f
 80066e4:	687b      	ldr	r3, [r7, #4]
 80066e6:	681b      	ldr	r3, [r3, #0]
 80066e8:	4ad7      	ldr	r2, [pc, #860]	; (8006a48 <UART_SetConfig+0x6ec>)
 80066ea:	4293      	cmp	r3, r2
 80066ec:	d005      	beq.n	80066fa <UART_SetConfig+0x39e>
 80066ee:	687b      	ldr	r3, [r7, #4]
 80066f0:	681b      	ldr	r3, [r3, #0]
 80066f2:	4ad6      	ldr	r2, [pc, #856]	; (8006a4c <UART_SetConfig+0x6f0>)
 80066f4:	4293      	cmp	r3, r2
 80066f6:	f040 80d1 	bne.w	800689c <UART_SetConfig+0x540>
 80066fa:	f7fd fbfb 	bl	8003ef4 <HAL_RCC_GetPCLK2Freq>
 80066fe:	60b8      	str	r0, [r7, #8]
 8006700:	68bb      	ldr	r3, [r7, #8]
 8006702:	469a      	mov	sl, r3
 8006704:	f04f 0b00 	mov.w	fp, #0
 8006708:	46d0      	mov	r8, sl
 800670a:	46d9      	mov	r9, fp
 800670c:	eb18 0308 	adds.w	r3, r8, r8
 8006710:	eb49 0409 	adc.w	r4, r9, r9
 8006714:	4698      	mov	r8, r3
 8006716:	46a1      	mov	r9, r4
 8006718:	eb18 080a 	adds.w	r8, r8, sl
 800671c:	eb49 090b 	adc.w	r9, r9, fp
 8006720:	f04f 0100 	mov.w	r1, #0
 8006724:	f04f 0200 	mov.w	r2, #0
 8006728:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 800672c:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8006730:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8006734:	4688      	mov	r8, r1
 8006736:	4691      	mov	r9, r2
 8006738:	eb1a 0508 	adds.w	r5, sl, r8
 800673c:	eb4b 0609 	adc.w	r6, fp, r9
 8006740:	687b      	ldr	r3, [r7, #4]
 8006742:	685b      	ldr	r3, [r3, #4]
 8006744:	4619      	mov	r1, r3
 8006746:	f04f 0200 	mov.w	r2, #0
 800674a:	f04f 0300 	mov.w	r3, #0
 800674e:	f04f 0400 	mov.w	r4, #0
 8006752:	0094      	lsls	r4, r2, #2
 8006754:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8006758:	008b      	lsls	r3, r1, #2
 800675a:	461a      	mov	r2, r3
 800675c:	4623      	mov	r3, r4
 800675e:	4628      	mov	r0, r5
 8006760:	4631      	mov	r1, r6
 8006762:	f7fa fa39 	bl	8000bd8 <__aeabi_uldivmod>
 8006766:	4603      	mov	r3, r0
 8006768:	460c      	mov	r4, r1
 800676a:	461a      	mov	r2, r3
 800676c:	4bb8      	ldr	r3, [pc, #736]	; (8006a50 <UART_SetConfig+0x6f4>)
 800676e:	fba3 2302 	umull	r2, r3, r3, r2
 8006772:	095b      	lsrs	r3, r3, #5
 8006774:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8006778:	68bb      	ldr	r3, [r7, #8]
 800677a:	469b      	mov	fp, r3
 800677c:	f04f 0c00 	mov.w	ip, #0
 8006780:	46d9      	mov	r9, fp
 8006782:	46e2      	mov	sl, ip
 8006784:	eb19 0309 	adds.w	r3, r9, r9
 8006788:	eb4a 040a 	adc.w	r4, sl, sl
 800678c:	4699      	mov	r9, r3
 800678e:	46a2      	mov	sl, r4
 8006790:	eb19 090b 	adds.w	r9, r9, fp
 8006794:	eb4a 0a0c 	adc.w	sl, sl, ip
 8006798:	f04f 0100 	mov.w	r1, #0
 800679c:	f04f 0200 	mov.w	r2, #0
 80067a0:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80067a4:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80067a8:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80067ac:	4689      	mov	r9, r1
 80067ae:	4692      	mov	sl, r2
 80067b0:	eb1b 0509 	adds.w	r5, fp, r9
 80067b4:	eb4c 060a 	adc.w	r6, ip, sl
 80067b8:	687b      	ldr	r3, [r7, #4]
 80067ba:	685b      	ldr	r3, [r3, #4]
 80067bc:	4619      	mov	r1, r3
 80067be:	f04f 0200 	mov.w	r2, #0
 80067c2:	f04f 0300 	mov.w	r3, #0
 80067c6:	f04f 0400 	mov.w	r4, #0
 80067ca:	0094      	lsls	r4, r2, #2
 80067cc:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 80067d0:	008b      	lsls	r3, r1, #2
 80067d2:	461a      	mov	r2, r3
 80067d4:	4623      	mov	r3, r4
 80067d6:	4628      	mov	r0, r5
 80067d8:	4631      	mov	r1, r6
 80067da:	f7fa f9fd 	bl	8000bd8 <__aeabi_uldivmod>
 80067de:	4603      	mov	r3, r0
 80067e0:	460c      	mov	r4, r1
 80067e2:	461a      	mov	r2, r3
 80067e4:	4b9a      	ldr	r3, [pc, #616]	; (8006a50 <UART_SetConfig+0x6f4>)
 80067e6:	fba3 1302 	umull	r1, r3, r3, r2
 80067ea:	095b      	lsrs	r3, r3, #5
 80067ec:	2164      	movs	r1, #100	; 0x64
 80067ee:	fb01 f303 	mul.w	r3, r1, r3
 80067f2:	1ad3      	subs	r3, r2, r3
 80067f4:	011b      	lsls	r3, r3, #4
 80067f6:	3332      	adds	r3, #50	; 0x32
 80067f8:	4a95      	ldr	r2, [pc, #596]	; (8006a50 <UART_SetConfig+0x6f4>)
 80067fa:	fba2 2303 	umull	r2, r3, r2, r3
 80067fe:	095b      	lsrs	r3, r3, #5
 8006800:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8006804:	4498      	add	r8, r3
 8006806:	68bb      	ldr	r3, [r7, #8]
 8006808:	469b      	mov	fp, r3
 800680a:	f04f 0c00 	mov.w	ip, #0
 800680e:	46d9      	mov	r9, fp
 8006810:	46e2      	mov	sl, ip
 8006812:	eb19 0309 	adds.w	r3, r9, r9
 8006816:	eb4a 040a 	adc.w	r4, sl, sl
 800681a:	4699      	mov	r9, r3
 800681c:	46a2      	mov	sl, r4
 800681e:	eb19 090b 	adds.w	r9, r9, fp
 8006822:	eb4a 0a0c 	adc.w	sl, sl, ip
 8006826:	f04f 0100 	mov.w	r1, #0
 800682a:	f04f 0200 	mov.w	r2, #0
 800682e:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006832:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8006836:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800683a:	4689      	mov	r9, r1
 800683c:	4692      	mov	sl, r2
 800683e:	eb1b 0509 	adds.w	r5, fp, r9
 8006842:	eb4c 060a 	adc.w	r6, ip, sl
 8006846:	687b      	ldr	r3, [r7, #4]
 8006848:	685b      	ldr	r3, [r3, #4]
 800684a:	4619      	mov	r1, r3
 800684c:	f04f 0200 	mov.w	r2, #0
 8006850:	f04f 0300 	mov.w	r3, #0
 8006854:	f04f 0400 	mov.w	r4, #0
 8006858:	0094      	lsls	r4, r2, #2
 800685a:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800685e:	008b      	lsls	r3, r1, #2
 8006860:	461a      	mov	r2, r3
 8006862:	4623      	mov	r3, r4
 8006864:	4628      	mov	r0, r5
 8006866:	4631      	mov	r1, r6
 8006868:	f7fa f9b6 	bl	8000bd8 <__aeabi_uldivmod>
 800686c:	4603      	mov	r3, r0
 800686e:	460c      	mov	r4, r1
 8006870:	461a      	mov	r2, r3
 8006872:	4b77      	ldr	r3, [pc, #476]	; (8006a50 <UART_SetConfig+0x6f4>)
 8006874:	fba3 1302 	umull	r1, r3, r3, r2
 8006878:	095b      	lsrs	r3, r3, #5
 800687a:	2164      	movs	r1, #100	; 0x64
 800687c:	fb01 f303 	mul.w	r3, r1, r3
 8006880:	1ad3      	subs	r3, r2, r3
 8006882:	011b      	lsls	r3, r3, #4
 8006884:	3332      	adds	r3, #50	; 0x32
 8006886:	4a72      	ldr	r2, [pc, #456]	; (8006a50 <UART_SetConfig+0x6f4>)
 8006888:	fba2 2303 	umull	r2, r3, r2, r3
 800688c:	095b      	lsrs	r3, r3, #5
 800688e:	f003 020f 	and.w	r2, r3, #15
 8006892:	687b      	ldr	r3, [r7, #4]
 8006894:	681b      	ldr	r3, [r3, #0]
 8006896:	4442      	add	r2, r8
 8006898:	609a      	str	r2, [r3, #8]
 800689a:	e0d0      	b.n	8006a3e <UART_SetConfig+0x6e2>
 800689c:	f7fd fb16 	bl	8003ecc <HAL_RCC_GetPCLK1Freq>
 80068a0:	60b8      	str	r0, [r7, #8]
 80068a2:	68bb      	ldr	r3, [r7, #8]
 80068a4:	469a      	mov	sl, r3
 80068a6:	f04f 0b00 	mov.w	fp, #0
 80068aa:	46d0      	mov	r8, sl
 80068ac:	46d9      	mov	r9, fp
 80068ae:	eb18 0308 	adds.w	r3, r8, r8
 80068b2:	eb49 0409 	adc.w	r4, r9, r9
 80068b6:	4698      	mov	r8, r3
 80068b8:	46a1      	mov	r9, r4
 80068ba:	eb18 080a 	adds.w	r8, r8, sl
 80068be:	eb49 090b 	adc.w	r9, r9, fp
 80068c2:	f04f 0100 	mov.w	r1, #0
 80068c6:	f04f 0200 	mov.w	r2, #0
 80068ca:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 80068ce:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 80068d2:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80068d6:	4688      	mov	r8, r1
 80068d8:	4691      	mov	r9, r2
 80068da:	eb1a 0508 	adds.w	r5, sl, r8
 80068de:	eb4b 0609 	adc.w	r6, fp, r9
 80068e2:	687b      	ldr	r3, [r7, #4]
 80068e4:	685b      	ldr	r3, [r3, #4]
 80068e6:	4619      	mov	r1, r3
 80068e8:	f04f 0200 	mov.w	r2, #0
 80068ec:	f04f 0300 	mov.w	r3, #0
 80068f0:	f04f 0400 	mov.w	r4, #0
 80068f4:	0094      	lsls	r4, r2, #2
 80068f6:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 80068fa:	008b      	lsls	r3, r1, #2
 80068fc:	461a      	mov	r2, r3
 80068fe:	4623      	mov	r3, r4
 8006900:	4628      	mov	r0, r5
 8006902:	4631      	mov	r1, r6
 8006904:	f7fa f968 	bl	8000bd8 <__aeabi_uldivmod>
 8006908:	4603      	mov	r3, r0
 800690a:	460c      	mov	r4, r1
 800690c:	461a      	mov	r2, r3
 800690e:	4b50      	ldr	r3, [pc, #320]	; (8006a50 <UART_SetConfig+0x6f4>)
 8006910:	fba3 2302 	umull	r2, r3, r3, r2
 8006914:	095b      	lsrs	r3, r3, #5
 8006916:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800691a:	68bb      	ldr	r3, [r7, #8]
 800691c:	469b      	mov	fp, r3
 800691e:	f04f 0c00 	mov.w	ip, #0
 8006922:	46d9      	mov	r9, fp
 8006924:	46e2      	mov	sl, ip
 8006926:	eb19 0309 	adds.w	r3, r9, r9
 800692a:	eb4a 040a 	adc.w	r4, sl, sl
 800692e:	4699      	mov	r9, r3
 8006930:	46a2      	mov	sl, r4
 8006932:	eb19 090b 	adds.w	r9, r9, fp
 8006936:	eb4a 0a0c 	adc.w	sl, sl, ip
 800693a:	f04f 0100 	mov.w	r1, #0
 800693e:	f04f 0200 	mov.w	r2, #0
 8006942:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006946:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800694a:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800694e:	4689      	mov	r9, r1
 8006950:	4692      	mov	sl, r2
 8006952:	eb1b 0509 	adds.w	r5, fp, r9
 8006956:	eb4c 060a 	adc.w	r6, ip, sl
 800695a:	687b      	ldr	r3, [r7, #4]
 800695c:	685b      	ldr	r3, [r3, #4]
 800695e:	4619      	mov	r1, r3
 8006960:	f04f 0200 	mov.w	r2, #0
 8006964:	f04f 0300 	mov.w	r3, #0
 8006968:	f04f 0400 	mov.w	r4, #0
 800696c:	0094      	lsls	r4, r2, #2
 800696e:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8006972:	008b      	lsls	r3, r1, #2
 8006974:	461a      	mov	r2, r3
 8006976:	4623      	mov	r3, r4
 8006978:	4628      	mov	r0, r5
 800697a:	4631      	mov	r1, r6
 800697c:	f7fa f92c 	bl	8000bd8 <__aeabi_uldivmod>
 8006980:	4603      	mov	r3, r0
 8006982:	460c      	mov	r4, r1
 8006984:	461a      	mov	r2, r3
 8006986:	4b32      	ldr	r3, [pc, #200]	; (8006a50 <UART_SetConfig+0x6f4>)
 8006988:	fba3 1302 	umull	r1, r3, r3, r2
 800698c:	095b      	lsrs	r3, r3, #5
 800698e:	2164      	movs	r1, #100	; 0x64
 8006990:	fb01 f303 	mul.w	r3, r1, r3
 8006994:	1ad3      	subs	r3, r2, r3
 8006996:	011b      	lsls	r3, r3, #4
 8006998:	3332      	adds	r3, #50	; 0x32
 800699a:	4a2d      	ldr	r2, [pc, #180]	; (8006a50 <UART_SetConfig+0x6f4>)
 800699c:	fba2 2303 	umull	r2, r3, r2, r3
 80069a0:	095b      	lsrs	r3, r3, #5
 80069a2:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80069a6:	4498      	add	r8, r3
 80069a8:	68bb      	ldr	r3, [r7, #8]
 80069aa:	469b      	mov	fp, r3
 80069ac:	f04f 0c00 	mov.w	ip, #0
 80069b0:	46d9      	mov	r9, fp
 80069b2:	46e2      	mov	sl, ip
 80069b4:	eb19 0309 	adds.w	r3, r9, r9
 80069b8:	eb4a 040a 	adc.w	r4, sl, sl
 80069bc:	4699      	mov	r9, r3
 80069be:	46a2      	mov	sl, r4
 80069c0:	eb19 090b 	adds.w	r9, r9, fp
 80069c4:	eb4a 0a0c 	adc.w	sl, sl, ip
 80069c8:	f04f 0100 	mov.w	r1, #0
 80069cc:	f04f 0200 	mov.w	r2, #0
 80069d0:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80069d4:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80069d8:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80069dc:	4689      	mov	r9, r1
 80069de:	4692      	mov	sl, r2
 80069e0:	eb1b 0509 	adds.w	r5, fp, r9
 80069e4:	eb4c 060a 	adc.w	r6, ip, sl
 80069e8:	687b      	ldr	r3, [r7, #4]
 80069ea:	685b      	ldr	r3, [r3, #4]
 80069ec:	4619      	mov	r1, r3
 80069ee:	f04f 0200 	mov.w	r2, #0
 80069f2:	f04f 0300 	mov.w	r3, #0
 80069f6:	f04f 0400 	mov.w	r4, #0
 80069fa:	0094      	lsls	r4, r2, #2
 80069fc:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8006a00:	008b      	lsls	r3, r1, #2
 8006a02:	461a      	mov	r2, r3
 8006a04:	4623      	mov	r3, r4
 8006a06:	4628      	mov	r0, r5
 8006a08:	4631      	mov	r1, r6
 8006a0a:	f7fa f8e5 	bl	8000bd8 <__aeabi_uldivmod>
 8006a0e:	4603      	mov	r3, r0
 8006a10:	460c      	mov	r4, r1
 8006a12:	461a      	mov	r2, r3
 8006a14:	4b0e      	ldr	r3, [pc, #56]	; (8006a50 <UART_SetConfig+0x6f4>)
 8006a16:	fba3 1302 	umull	r1, r3, r3, r2
 8006a1a:	095b      	lsrs	r3, r3, #5
 8006a1c:	2164      	movs	r1, #100	; 0x64
 8006a1e:	fb01 f303 	mul.w	r3, r1, r3
 8006a22:	1ad3      	subs	r3, r2, r3
 8006a24:	011b      	lsls	r3, r3, #4
 8006a26:	3332      	adds	r3, #50	; 0x32
 8006a28:	4a09      	ldr	r2, [pc, #36]	; (8006a50 <UART_SetConfig+0x6f4>)
 8006a2a:	fba2 2303 	umull	r2, r3, r2, r3
 8006a2e:	095b      	lsrs	r3, r3, #5
 8006a30:	f003 020f 	and.w	r2, r3, #15
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	681b      	ldr	r3, [r3, #0]
 8006a38:	4442      	add	r2, r8
 8006a3a:	609a      	str	r2, [r3, #8]
 8006a3c:	e7ff      	b.n	8006a3e <UART_SetConfig+0x6e2>
 8006a3e:	bf00      	nop
 8006a40:	3714      	adds	r7, #20
 8006a42:	46bd      	mov	sp, r7
 8006a44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a48:	40011000 	.word	0x40011000
 8006a4c:	40011400 	.word	0x40011400
 8006a50:	51eb851f 	.word	0x51eb851f

08006a54 <__errno>:
 8006a54:	4b01      	ldr	r3, [pc, #4]	; (8006a5c <__errno+0x8>)
 8006a56:	6818      	ldr	r0, [r3, #0]
 8006a58:	4770      	bx	lr
 8006a5a:	bf00      	nop
 8006a5c:	20000020 	.word	0x20000020

08006a60 <__libc_init_array>:
 8006a60:	b570      	push	{r4, r5, r6, lr}
 8006a62:	4e0d      	ldr	r6, [pc, #52]	; (8006a98 <__libc_init_array+0x38>)
 8006a64:	4c0d      	ldr	r4, [pc, #52]	; (8006a9c <__libc_init_array+0x3c>)
 8006a66:	1ba4      	subs	r4, r4, r6
 8006a68:	10a4      	asrs	r4, r4, #2
 8006a6a:	2500      	movs	r5, #0
 8006a6c:	42a5      	cmp	r5, r4
 8006a6e:	d109      	bne.n	8006a84 <__libc_init_array+0x24>
 8006a70:	4e0b      	ldr	r6, [pc, #44]	; (8006aa0 <__libc_init_array+0x40>)
 8006a72:	4c0c      	ldr	r4, [pc, #48]	; (8006aa4 <__libc_init_array+0x44>)
 8006a74:	f001 fc7e 	bl	8008374 <_init>
 8006a78:	1ba4      	subs	r4, r4, r6
 8006a7a:	10a4      	asrs	r4, r4, #2
 8006a7c:	2500      	movs	r5, #0
 8006a7e:	42a5      	cmp	r5, r4
 8006a80:	d105      	bne.n	8006a8e <__libc_init_array+0x2e>
 8006a82:	bd70      	pop	{r4, r5, r6, pc}
 8006a84:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006a88:	4798      	blx	r3
 8006a8a:	3501      	adds	r5, #1
 8006a8c:	e7ee      	b.n	8006a6c <__libc_init_array+0xc>
 8006a8e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006a92:	4798      	blx	r3
 8006a94:	3501      	adds	r5, #1
 8006a96:	e7f2      	b.n	8006a7e <__libc_init_array+0x1e>
 8006a98:	08008b78 	.word	0x08008b78
 8006a9c:	08008b78 	.word	0x08008b78
 8006aa0:	08008b78 	.word	0x08008b78
 8006aa4:	08008b7c 	.word	0x08008b7c

08006aa8 <memcpy>:
 8006aa8:	b510      	push	{r4, lr}
 8006aaa:	1e43      	subs	r3, r0, #1
 8006aac:	440a      	add	r2, r1
 8006aae:	4291      	cmp	r1, r2
 8006ab0:	d100      	bne.n	8006ab4 <memcpy+0xc>
 8006ab2:	bd10      	pop	{r4, pc}
 8006ab4:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006ab8:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006abc:	e7f7      	b.n	8006aae <memcpy+0x6>

08006abe <memmove>:
 8006abe:	4288      	cmp	r0, r1
 8006ac0:	b510      	push	{r4, lr}
 8006ac2:	eb01 0302 	add.w	r3, r1, r2
 8006ac6:	d807      	bhi.n	8006ad8 <memmove+0x1a>
 8006ac8:	1e42      	subs	r2, r0, #1
 8006aca:	4299      	cmp	r1, r3
 8006acc:	d00a      	beq.n	8006ae4 <memmove+0x26>
 8006ace:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006ad2:	f802 4f01 	strb.w	r4, [r2, #1]!
 8006ad6:	e7f8      	b.n	8006aca <memmove+0xc>
 8006ad8:	4283      	cmp	r3, r0
 8006ada:	d9f5      	bls.n	8006ac8 <memmove+0xa>
 8006adc:	1881      	adds	r1, r0, r2
 8006ade:	1ad2      	subs	r2, r2, r3
 8006ae0:	42d3      	cmn	r3, r2
 8006ae2:	d100      	bne.n	8006ae6 <memmove+0x28>
 8006ae4:	bd10      	pop	{r4, pc}
 8006ae6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8006aea:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8006aee:	e7f7      	b.n	8006ae0 <memmove+0x22>

08006af0 <memset>:
 8006af0:	4402      	add	r2, r0
 8006af2:	4603      	mov	r3, r0
 8006af4:	4293      	cmp	r3, r2
 8006af6:	d100      	bne.n	8006afa <memset+0xa>
 8006af8:	4770      	bx	lr
 8006afa:	f803 1b01 	strb.w	r1, [r3], #1
 8006afe:	e7f9      	b.n	8006af4 <memset+0x4>

08006b00 <siprintf>:
 8006b00:	b40e      	push	{r1, r2, r3}
 8006b02:	b500      	push	{lr}
 8006b04:	b09c      	sub	sp, #112	; 0x70
 8006b06:	ab1d      	add	r3, sp, #116	; 0x74
 8006b08:	9002      	str	r0, [sp, #8]
 8006b0a:	9006      	str	r0, [sp, #24]
 8006b0c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8006b10:	4809      	ldr	r0, [pc, #36]	; (8006b38 <siprintf+0x38>)
 8006b12:	9107      	str	r1, [sp, #28]
 8006b14:	9104      	str	r1, [sp, #16]
 8006b16:	4909      	ldr	r1, [pc, #36]	; (8006b3c <siprintf+0x3c>)
 8006b18:	f853 2b04 	ldr.w	r2, [r3], #4
 8006b1c:	9105      	str	r1, [sp, #20]
 8006b1e:	6800      	ldr	r0, [r0, #0]
 8006b20:	9301      	str	r3, [sp, #4]
 8006b22:	a902      	add	r1, sp, #8
 8006b24:	f000 f866 	bl	8006bf4 <_svfiprintf_r>
 8006b28:	9b02      	ldr	r3, [sp, #8]
 8006b2a:	2200      	movs	r2, #0
 8006b2c:	701a      	strb	r2, [r3, #0]
 8006b2e:	b01c      	add	sp, #112	; 0x70
 8006b30:	f85d eb04 	ldr.w	lr, [sp], #4
 8006b34:	b003      	add	sp, #12
 8006b36:	4770      	bx	lr
 8006b38:	20000020 	.word	0x20000020
 8006b3c:	ffff0208 	.word	0xffff0208

08006b40 <__ssputs_r>:
 8006b40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006b44:	688e      	ldr	r6, [r1, #8]
 8006b46:	429e      	cmp	r6, r3
 8006b48:	4682      	mov	sl, r0
 8006b4a:	460c      	mov	r4, r1
 8006b4c:	4690      	mov	r8, r2
 8006b4e:	4699      	mov	r9, r3
 8006b50:	d837      	bhi.n	8006bc2 <__ssputs_r+0x82>
 8006b52:	898a      	ldrh	r2, [r1, #12]
 8006b54:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8006b58:	d031      	beq.n	8006bbe <__ssputs_r+0x7e>
 8006b5a:	6825      	ldr	r5, [r4, #0]
 8006b5c:	6909      	ldr	r1, [r1, #16]
 8006b5e:	1a6f      	subs	r7, r5, r1
 8006b60:	6965      	ldr	r5, [r4, #20]
 8006b62:	2302      	movs	r3, #2
 8006b64:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006b68:	fb95 f5f3 	sdiv	r5, r5, r3
 8006b6c:	f109 0301 	add.w	r3, r9, #1
 8006b70:	443b      	add	r3, r7
 8006b72:	429d      	cmp	r5, r3
 8006b74:	bf38      	it	cc
 8006b76:	461d      	movcc	r5, r3
 8006b78:	0553      	lsls	r3, r2, #21
 8006b7a:	d530      	bpl.n	8006bde <__ssputs_r+0x9e>
 8006b7c:	4629      	mov	r1, r5
 8006b7e:	f000 fb07 	bl	8007190 <_malloc_r>
 8006b82:	4606      	mov	r6, r0
 8006b84:	b950      	cbnz	r0, 8006b9c <__ssputs_r+0x5c>
 8006b86:	230c      	movs	r3, #12
 8006b88:	f8ca 3000 	str.w	r3, [sl]
 8006b8c:	89a3      	ldrh	r3, [r4, #12]
 8006b8e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006b92:	81a3      	strh	r3, [r4, #12]
 8006b94:	f04f 30ff 	mov.w	r0, #4294967295
 8006b98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006b9c:	463a      	mov	r2, r7
 8006b9e:	6921      	ldr	r1, [r4, #16]
 8006ba0:	f7ff ff82 	bl	8006aa8 <memcpy>
 8006ba4:	89a3      	ldrh	r3, [r4, #12]
 8006ba6:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8006baa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006bae:	81a3      	strh	r3, [r4, #12]
 8006bb0:	6126      	str	r6, [r4, #16]
 8006bb2:	6165      	str	r5, [r4, #20]
 8006bb4:	443e      	add	r6, r7
 8006bb6:	1bed      	subs	r5, r5, r7
 8006bb8:	6026      	str	r6, [r4, #0]
 8006bba:	60a5      	str	r5, [r4, #8]
 8006bbc:	464e      	mov	r6, r9
 8006bbe:	454e      	cmp	r6, r9
 8006bc0:	d900      	bls.n	8006bc4 <__ssputs_r+0x84>
 8006bc2:	464e      	mov	r6, r9
 8006bc4:	4632      	mov	r2, r6
 8006bc6:	4641      	mov	r1, r8
 8006bc8:	6820      	ldr	r0, [r4, #0]
 8006bca:	f7ff ff78 	bl	8006abe <memmove>
 8006bce:	68a3      	ldr	r3, [r4, #8]
 8006bd0:	1b9b      	subs	r3, r3, r6
 8006bd2:	60a3      	str	r3, [r4, #8]
 8006bd4:	6823      	ldr	r3, [r4, #0]
 8006bd6:	441e      	add	r6, r3
 8006bd8:	6026      	str	r6, [r4, #0]
 8006bda:	2000      	movs	r0, #0
 8006bdc:	e7dc      	b.n	8006b98 <__ssputs_r+0x58>
 8006bde:	462a      	mov	r2, r5
 8006be0:	f000 fb30 	bl	8007244 <_realloc_r>
 8006be4:	4606      	mov	r6, r0
 8006be6:	2800      	cmp	r0, #0
 8006be8:	d1e2      	bne.n	8006bb0 <__ssputs_r+0x70>
 8006bea:	6921      	ldr	r1, [r4, #16]
 8006bec:	4650      	mov	r0, sl
 8006bee:	f000 fa81 	bl	80070f4 <_free_r>
 8006bf2:	e7c8      	b.n	8006b86 <__ssputs_r+0x46>

08006bf4 <_svfiprintf_r>:
 8006bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006bf8:	461d      	mov	r5, r3
 8006bfa:	898b      	ldrh	r3, [r1, #12]
 8006bfc:	061f      	lsls	r7, r3, #24
 8006bfe:	b09d      	sub	sp, #116	; 0x74
 8006c00:	4680      	mov	r8, r0
 8006c02:	460c      	mov	r4, r1
 8006c04:	4616      	mov	r6, r2
 8006c06:	d50f      	bpl.n	8006c28 <_svfiprintf_r+0x34>
 8006c08:	690b      	ldr	r3, [r1, #16]
 8006c0a:	b96b      	cbnz	r3, 8006c28 <_svfiprintf_r+0x34>
 8006c0c:	2140      	movs	r1, #64	; 0x40
 8006c0e:	f000 fabf 	bl	8007190 <_malloc_r>
 8006c12:	6020      	str	r0, [r4, #0]
 8006c14:	6120      	str	r0, [r4, #16]
 8006c16:	b928      	cbnz	r0, 8006c24 <_svfiprintf_r+0x30>
 8006c18:	230c      	movs	r3, #12
 8006c1a:	f8c8 3000 	str.w	r3, [r8]
 8006c1e:	f04f 30ff 	mov.w	r0, #4294967295
 8006c22:	e0c8      	b.n	8006db6 <_svfiprintf_r+0x1c2>
 8006c24:	2340      	movs	r3, #64	; 0x40
 8006c26:	6163      	str	r3, [r4, #20]
 8006c28:	2300      	movs	r3, #0
 8006c2a:	9309      	str	r3, [sp, #36]	; 0x24
 8006c2c:	2320      	movs	r3, #32
 8006c2e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006c32:	2330      	movs	r3, #48	; 0x30
 8006c34:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006c38:	9503      	str	r5, [sp, #12]
 8006c3a:	f04f 0b01 	mov.w	fp, #1
 8006c3e:	4637      	mov	r7, r6
 8006c40:	463d      	mov	r5, r7
 8006c42:	f815 3b01 	ldrb.w	r3, [r5], #1
 8006c46:	b10b      	cbz	r3, 8006c4c <_svfiprintf_r+0x58>
 8006c48:	2b25      	cmp	r3, #37	; 0x25
 8006c4a:	d13e      	bne.n	8006cca <_svfiprintf_r+0xd6>
 8006c4c:	ebb7 0a06 	subs.w	sl, r7, r6
 8006c50:	d00b      	beq.n	8006c6a <_svfiprintf_r+0x76>
 8006c52:	4653      	mov	r3, sl
 8006c54:	4632      	mov	r2, r6
 8006c56:	4621      	mov	r1, r4
 8006c58:	4640      	mov	r0, r8
 8006c5a:	f7ff ff71 	bl	8006b40 <__ssputs_r>
 8006c5e:	3001      	adds	r0, #1
 8006c60:	f000 80a4 	beq.w	8006dac <_svfiprintf_r+0x1b8>
 8006c64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006c66:	4453      	add	r3, sl
 8006c68:	9309      	str	r3, [sp, #36]	; 0x24
 8006c6a:	783b      	ldrb	r3, [r7, #0]
 8006c6c:	2b00      	cmp	r3, #0
 8006c6e:	f000 809d 	beq.w	8006dac <_svfiprintf_r+0x1b8>
 8006c72:	2300      	movs	r3, #0
 8006c74:	f04f 32ff 	mov.w	r2, #4294967295
 8006c78:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006c7c:	9304      	str	r3, [sp, #16]
 8006c7e:	9307      	str	r3, [sp, #28]
 8006c80:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006c84:	931a      	str	r3, [sp, #104]	; 0x68
 8006c86:	462f      	mov	r7, r5
 8006c88:	2205      	movs	r2, #5
 8006c8a:	f817 1b01 	ldrb.w	r1, [r7], #1
 8006c8e:	4850      	ldr	r0, [pc, #320]	; (8006dd0 <_svfiprintf_r+0x1dc>)
 8006c90:	f7f9 fac6 	bl	8000220 <memchr>
 8006c94:	9b04      	ldr	r3, [sp, #16]
 8006c96:	b9d0      	cbnz	r0, 8006cce <_svfiprintf_r+0xda>
 8006c98:	06d9      	lsls	r1, r3, #27
 8006c9a:	bf44      	itt	mi
 8006c9c:	2220      	movmi	r2, #32
 8006c9e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006ca2:	071a      	lsls	r2, r3, #28
 8006ca4:	bf44      	itt	mi
 8006ca6:	222b      	movmi	r2, #43	; 0x2b
 8006ca8:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006cac:	782a      	ldrb	r2, [r5, #0]
 8006cae:	2a2a      	cmp	r2, #42	; 0x2a
 8006cb0:	d015      	beq.n	8006cde <_svfiprintf_r+0xea>
 8006cb2:	9a07      	ldr	r2, [sp, #28]
 8006cb4:	462f      	mov	r7, r5
 8006cb6:	2000      	movs	r0, #0
 8006cb8:	250a      	movs	r5, #10
 8006cba:	4639      	mov	r1, r7
 8006cbc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006cc0:	3b30      	subs	r3, #48	; 0x30
 8006cc2:	2b09      	cmp	r3, #9
 8006cc4:	d94d      	bls.n	8006d62 <_svfiprintf_r+0x16e>
 8006cc6:	b1b8      	cbz	r0, 8006cf8 <_svfiprintf_r+0x104>
 8006cc8:	e00f      	b.n	8006cea <_svfiprintf_r+0xf6>
 8006cca:	462f      	mov	r7, r5
 8006ccc:	e7b8      	b.n	8006c40 <_svfiprintf_r+0x4c>
 8006cce:	4a40      	ldr	r2, [pc, #256]	; (8006dd0 <_svfiprintf_r+0x1dc>)
 8006cd0:	1a80      	subs	r0, r0, r2
 8006cd2:	fa0b f000 	lsl.w	r0, fp, r0
 8006cd6:	4318      	orrs	r0, r3
 8006cd8:	9004      	str	r0, [sp, #16]
 8006cda:	463d      	mov	r5, r7
 8006cdc:	e7d3      	b.n	8006c86 <_svfiprintf_r+0x92>
 8006cde:	9a03      	ldr	r2, [sp, #12]
 8006ce0:	1d11      	adds	r1, r2, #4
 8006ce2:	6812      	ldr	r2, [r2, #0]
 8006ce4:	9103      	str	r1, [sp, #12]
 8006ce6:	2a00      	cmp	r2, #0
 8006ce8:	db01      	blt.n	8006cee <_svfiprintf_r+0xfa>
 8006cea:	9207      	str	r2, [sp, #28]
 8006cec:	e004      	b.n	8006cf8 <_svfiprintf_r+0x104>
 8006cee:	4252      	negs	r2, r2
 8006cf0:	f043 0302 	orr.w	r3, r3, #2
 8006cf4:	9207      	str	r2, [sp, #28]
 8006cf6:	9304      	str	r3, [sp, #16]
 8006cf8:	783b      	ldrb	r3, [r7, #0]
 8006cfa:	2b2e      	cmp	r3, #46	; 0x2e
 8006cfc:	d10c      	bne.n	8006d18 <_svfiprintf_r+0x124>
 8006cfe:	787b      	ldrb	r3, [r7, #1]
 8006d00:	2b2a      	cmp	r3, #42	; 0x2a
 8006d02:	d133      	bne.n	8006d6c <_svfiprintf_r+0x178>
 8006d04:	9b03      	ldr	r3, [sp, #12]
 8006d06:	1d1a      	adds	r2, r3, #4
 8006d08:	681b      	ldr	r3, [r3, #0]
 8006d0a:	9203      	str	r2, [sp, #12]
 8006d0c:	2b00      	cmp	r3, #0
 8006d0e:	bfb8      	it	lt
 8006d10:	f04f 33ff 	movlt.w	r3, #4294967295
 8006d14:	3702      	adds	r7, #2
 8006d16:	9305      	str	r3, [sp, #20]
 8006d18:	4d2e      	ldr	r5, [pc, #184]	; (8006dd4 <_svfiprintf_r+0x1e0>)
 8006d1a:	7839      	ldrb	r1, [r7, #0]
 8006d1c:	2203      	movs	r2, #3
 8006d1e:	4628      	mov	r0, r5
 8006d20:	f7f9 fa7e 	bl	8000220 <memchr>
 8006d24:	b138      	cbz	r0, 8006d36 <_svfiprintf_r+0x142>
 8006d26:	2340      	movs	r3, #64	; 0x40
 8006d28:	1b40      	subs	r0, r0, r5
 8006d2a:	fa03 f000 	lsl.w	r0, r3, r0
 8006d2e:	9b04      	ldr	r3, [sp, #16]
 8006d30:	4303      	orrs	r3, r0
 8006d32:	3701      	adds	r7, #1
 8006d34:	9304      	str	r3, [sp, #16]
 8006d36:	7839      	ldrb	r1, [r7, #0]
 8006d38:	4827      	ldr	r0, [pc, #156]	; (8006dd8 <_svfiprintf_r+0x1e4>)
 8006d3a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006d3e:	2206      	movs	r2, #6
 8006d40:	1c7e      	adds	r6, r7, #1
 8006d42:	f7f9 fa6d 	bl	8000220 <memchr>
 8006d46:	2800      	cmp	r0, #0
 8006d48:	d038      	beq.n	8006dbc <_svfiprintf_r+0x1c8>
 8006d4a:	4b24      	ldr	r3, [pc, #144]	; (8006ddc <_svfiprintf_r+0x1e8>)
 8006d4c:	bb13      	cbnz	r3, 8006d94 <_svfiprintf_r+0x1a0>
 8006d4e:	9b03      	ldr	r3, [sp, #12]
 8006d50:	3307      	adds	r3, #7
 8006d52:	f023 0307 	bic.w	r3, r3, #7
 8006d56:	3308      	adds	r3, #8
 8006d58:	9303      	str	r3, [sp, #12]
 8006d5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006d5c:	444b      	add	r3, r9
 8006d5e:	9309      	str	r3, [sp, #36]	; 0x24
 8006d60:	e76d      	b.n	8006c3e <_svfiprintf_r+0x4a>
 8006d62:	fb05 3202 	mla	r2, r5, r2, r3
 8006d66:	2001      	movs	r0, #1
 8006d68:	460f      	mov	r7, r1
 8006d6a:	e7a6      	b.n	8006cba <_svfiprintf_r+0xc6>
 8006d6c:	2300      	movs	r3, #0
 8006d6e:	3701      	adds	r7, #1
 8006d70:	9305      	str	r3, [sp, #20]
 8006d72:	4619      	mov	r1, r3
 8006d74:	250a      	movs	r5, #10
 8006d76:	4638      	mov	r0, r7
 8006d78:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006d7c:	3a30      	subs	r2, #48	; 0x30
 8006d7e:	2a09      	cmp	r2, #9
 8006d80:	d903      	bls.n	8006d8a <_svfiprintf_r+0x196>
 8006d82:	2b00      	cmp	r3, #0
 8006d84:	d0c8      	beq.n	8006d18 <_svfiprintf_r+0x124>
 8006d86:	9105      	str	r1, [sp, #20]
 8006d88:	e7c6      	b.n	8006d18 <_svfiprintf_r+0x124>
 8006d8a:	fb05 2101 	mla	r1, r5, r1, r2
 8006d8e:	2301      	movs	r3, #1
 8006d90:	4607      	mov	r7, r0
 8006d92:	e7f0      	b.n	8006d76 <_svfiprintf_r+0x182>
 8006d94:	ab03      	add	r3, sp, #12
 8006d96:	9300      	str	r3, [sp, #0]
 8006d98:	4622      	mov	r2, r4
 8006d9a:	4b11      	ldr	r3, [pc, #68]	; (8006de0 <_svfiprintf_r+0x1ec>)
 8006d9c:	a904      	add	r1, sp, #16
 8006d9e:	4640      	mov	r0, r8
 8006da0:	f3af 8000 	nop.w
 8006da4:	f1b0 3fff 	cmp.w	r0, #4294967295
 8006da8:	4681      	mov	r9, r0
 8006daa:	d1d6      	bne.n	8006d5a <_svfiprintf_r+0x166>
 8006dac:	89a3      	ldrh	r3, [r4, #12]
 8006dae:	065b      	lsls	r3, r3, #25
 8006db0:	f53f af35 	bmi.w	8006c1e <_svfiprintf_r+0x2a>
 8006db4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006db6:	b01d      	add	sp, #116	; 0x74
 8006db8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006dbc:	ab03      	add	r3, sp, #12
 8006dbe:	9300      	str	r3, [sp, #0]
 8006dc0:	4622      	mov	r2, r4
 8006dc2:	4b07      	ldr	r3, [pc, #28]	; (8006de0 <_svfiprintf_r+0x1ec>)
 8006dc4:	a904      	add	r1, sp, #16
 8006dc6:	4640      	mov	r0, r8
 8006dc8:	f000 f882 	bl	8006ed0 <_printf_i>
 8006dcc:	e7ea      	b.n	8006da4 <_svfiprintf_r+0x1b0>
 8006dce:	bf00      	nop
 8006dd0:	08008af8 	.word	0x08008af8
 8006dd4:	08008afe 	.word	0x08008afe
 8006dd8:	08008b02 	.word	0x08008b02
 8006ddc:	00000000 	.word	0x00000000
 8006de0:	08006b41 	.word	0x08006b41

08006de4 <_printf_common>:
 8006de4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006de8:	4691      	mov	r9, r2
 8006dea:	461f      	mov	r7, r3
 8006dec:	688a      	ldr	r2, [r1, #8]
 8006dee:	690b      	ldr	r3, [r1, #16]
 8006df0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8006df4:	4293      	cmp	r3, r2
 8006df6:	bfb8      	it	lt
 8006df8:	4613      	movlt	r3, r2
 8006dfa:	f8c9 3000 	str.w	r3, [r9]
 8006dfe:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8006e02:	4606      	mov	r6, r0
 8006e04:	460c      	mov	r4, r1
 8006e06:	b112      	cbz	r2, 8006e0e <_printf_common+0x2a>
 8006e08:	3301      	adds	r3, #1
 8006e0a:	f8c9 3000 	str.w	r3, [r9]
 8006e0e:	6823      	ldr	r3, [r4, #0]
 8006e10:	0699      	lsls	r1, r3, #26
 8006e12:	bf42      	ittt	mi
 8006e14:	f8d9 3000 	ldrmi.w	r3, [r9]
 8006e18:	3302      	addmi	r3, #2
 8006e1a:	f8c9 3000 	strmi.w	r3, [r9]
 8006e1e:	6825      	ldr	r5, [r4, #0]
 8006e20:	f015 0506 	ands.w	r5, r5, #6
 8006e24:	d107      	bne.n	8006e36 <_printf_common+0x52>
 8006e26:	f104 0a19 	add.w	sl, r4, #25
 8006e2a:	68e3      	ldr	r3, [r4, #12]
 8006e2c:	f8d9 2000 	ldr.w	r2, [r9]
 8006e30:	1a9b      	subs	r3, r3, r2
 8006e32:	42ab      	cmp	r3, r5
 8006e34:	dc28      	bgt.n	8006e88 <_printf_common+0xa4>
 8006e36:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8006e3a:	6822      	ldr	r2, [r4, #0]
 8006e3c:	3300      	adds	r3, #0
 8006e3e:	bf18      	it	ne
 8006e40:	2301      	movne	r3, #1
 8006e42:	0692      	lsls	r2, r2, #26
 8006e44:	d42d      	bmi.n	8006ea2 <_printf_common+0xbe>
 8006e46:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8006e4a:	4639      	mov	r1, r7
 8006e4c:	4630      	mov	r0, r6
 8006e4e:	47c0      	blx	r8
 8006e50:	3001      	adds	r0, #1
 8006e52:	d020      	beq.n	8006e96 <_printf_common+0xb2>
 8006e54:	6823      	ldr	r3, [r4, #0]
 8006e56:	68e5      	ldr	r5, [r4, #12]
 8006e58:	f8d9 2000 	ldr.w	r2, [r9]
 8006e5c:	f003 0306 	and.w	r3, r3, #6
 8006e60:	2b04      	cmp	r3, #4
 8006e62:	bf08      	it	eq
 8006e64:	1aad      	subeq	r5, r5, r2
 8006e66:	68a3      	ldr	r3, [r4, #8]
 8006e68:	6922      	ldr	r2, [r4, #16]
 8006e6a:	bf0c      	ite	eq
 8006e6c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8006e70:	2500      	movne	r5, #0
 8006e72:	4293      	cmp	r3, r2
 8006e74:	bfc4      	itt	gt
 8006e76:	1a9b      	subgt	r3, r3, r2
 8006e78:	18ed      	addgt	r5, r5, r3
 8006e7a:	f04f 0900 	mov.w	r9, #0
 8006e7e:	341a      	adds	r4, #26
 8006e80:	454d      	cmp	r5, r9
 8006e82:	d11a      	bne.n	8006eba <_printf_common+0xd6>
 8006e84:	2000      	movs	r0, #0
 8006e86:	e008      	b.n	8006e9a <_printf_common+0xb6>
 8006e88:	2301      	movs	r3, #1
 8006e8a:	4652      	mov	r2, sl
 8006e8c:	4639      	mov	r1, r7
 8006e8e:	4630      	mov	r0, r6
 8006e90:	47c0      	blx	r8
 8006e92:	3001      	adds	r0, #1
 8006e94:	d103      	bne.n	8006e9e <_printf_common+0xba>
 8006e96:	f04f 30ff 	mov.w	r0, #4294967295
 8006e9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006e9e:	3501      	adds	r5, #1
 8006ea0:	e7c3      	b.n	8006e2a <_printf_common+0x46>
 8006ea2:	18e1      	adds	r1, r4, r3
 8006ea4:	1c5a      	adds	r2, r3, #1
 8006ea6:	2030      	movs	r0, #48	; 0x30
 8006ea8:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8006eac:	4422      	add	r2, r4
 8006eae:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8006eb2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8006eb6:	3302      	adds	r3, #2
 8006eb8:	e7c5      	b.n	8006e46 <_printf_common+0x62>
 8006eba:	2301      	movs	r3, #1
 8006ebc:	4622      	mov	r2, r4
 8006ebe:	4639      	mov	r1, r7
 8006ec0:	4630      	mov	r0, r6
 8006ec2:	47c0      	blx	r8
 8006ec4:	3001      	adds	r0, #1
 8006ec6:	d0e6      	beq.n	8006e96 <_printf_common+0xb2>
 8006ec8:	f109 0901 	add.w	r9, r9, #1
 8006ecc:	e7d8      	b.n	8006e80 <_printf_common+0x9c>
	...

08006ed0 <_printf_i>:
 8006ed0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006ed4:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8006ed8:	460c      	mov	r4, r1
 8006eda:	7e09      	ldrb	r1, [r1, #24]
 8006edc:	b085      	sub	sp, #20
 8006ede:	296e      	cmp	r1, #110	; 0x6e
 8006ee0:	4617      	mov	r7, r2
 8006ee2:	4606      	mov	r6, r0
 8006ee4:	4698      	mov	r8, r3
 8006ee6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006ee8:	f000 80b3 	beq.w	8007052 <_printf_i+0x182>
 8006eec:	d822      	bhi.n	8006f34 <_printf_i+0x64>
 8006eee:	2963      	cmp	r1, #99	; 0x63
 8006ef0:	d036      	beq.n	8006f60 <_printf_i+0x90>
 8006ef2:	d80a      	bhi.n	8006f0a <_printf_i+0x3a>
 8006ef4:	2900      	cmp	r1, #0
 8006ef6:	f000 80b9 	beq.w	800706c <_printf_i+0x19c>
 8006efa:	2958      	cmp	r1, #88	; 0x58
 8006efc:	f000 8083 	beq.w	8007006 <_printf_i+0x136>
 8006f00:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006f04:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8006f08:	e032      	b.n	8006f70 <_printf_i+0xa0>
 8006f0a:	2964      	cmp	r1, #100	; 0x64
 8006f0c:	d001      	beq.n	8006f12 <_printf_i+0x42>
 8006f0e:	2969      	cmp	r1, #105	; 0x69
 8006f10:	d1f6      	bne.n	8006f00 <_printf_i+0x30>
 8006f12:	6820      	ldr	r0, [r4, #0]
 8006f14:	6813      	ldr	r3, [r2, #0]
 8006f16:	0605      	lsls	r5, r0, #24
 8006f18:	f103 0104 	add.w	r1, r3, #4
 8006f1c:	d52a      	bpl.n	8006f74 <_printf_i+0xa4>
 8006f1e:	681b      	ldr	r3, [r3, #0]
 8006f20:	6011      	str	r1, [r2, #0]
 8006f22:	2b00      	cmp	r3, #0
 8006f24:	da03      	bge.n	8006f2e <_printf_i+0x5e>
 8006f26:	222d      	movs	r2, #45	; 0x2d
 8006f28:	425b      	negs	r3, r3
 8006f2a:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8006f2e:	486f      	ldr	r0, [pc, #444]	; (80070ec <_printf_i+0x21c>)
 8006f30:	220a      	movs	r2, #10
 8006f32:	e039      	b.n	8006fa8 <_printf_i+0xd8>
 8006f34:	2973      	cmp	r1, #115	; 0x73
 8006f36:	f000 809d 	beq.w	8007074 <_printf_i+0x1a4>
 8006f3a:	d808      	bhi.n	8006f4e <_printf_i+0x7e>
 8006f3c:	296f      	cmp	r1, #111	; 0x6f
 8006f3e:	d020      	beq.n	8006f82 <_printf_i+0xb2>
 8006f40:	2970      	cmp	r1, #112	; 0x70
 8006f42:	d1dd      	bne.n	8006f00 <_printf_i+0x30>
 8006f44:	6823      	ldr	r3, [r4, #0]
 8006f46:	f043 0320 	orr.w	r3, r3, #32
 8006f4a:	6023      	str	r3, [r4, #0]
 8006f4c:	e003      	b.n	8006f56 <_printf_i+0x86>
 8006f4e:	2975      	cmp	r1, #117	; 0x75
 8006f50:	d017      	beq.n	8006f82 <_printf_i+0xb2>
 8006f52:	2978      	cmp	r1, #120	; 0x78
 8006f54:	d1d4      	bne.n	8006f00 <_printf_i+0x30>
 8006f56:	2378      	movs	r3, #120	; 0x78
 8006f58:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8006f5c:	4864      	ldr	r0, [pc, #400]	; (80070f0 <_printf_i+0x220>)
 8006f5e:	e055      	b.n	800700c <_printf_i+0x13c>
 8006f60:	6813      	ldr	r3, [r2, #0]
 8006f62:	1d19      	adds	r1, r3, #4
 8006f64:	681b      	ldr	r3, [r3, #0]
 8006f66:	6011      	str	r1, [r2, #0]
 8006f68:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006f6c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006f70:	2301      	movs	r3, #1
 8006f72:	e08c      	b.n	800708e <_printf_i+0x1be>
 8006f74:	681b      	ldr	r3, [r3, #0]
 8006f76:	6011      	str	r1, [r2, #0]
 8006f78:	f010 0f40 	tst.w	r0, #64	; 0x40
 8006f7c:	bf18      	it	ne
 8006f7e:	b21b      	sxthne	r3, r3
 8006f80:	e7cf      	b.n	8006f22 <_printf_i+0x52>
 8006f82:	6813      	ldr	r3, [r2, #0]
 8006f84:	6825      	ldr	r5, [r4, #0]
 8006f86:	1d18      	adds	r0, r3, #4
 8006f88:	6010      	str	r0, [r2, #0]
 8006f8a:	0628      	lsls	r0, r5, #24
 8006f8c:	d501      	bpl.n	8006f92 <_printf_i+0xc2>
 8006f8e:	681b      	ldr	r3, [r3, #0]
 8006f90:	e002      	b.n	8006f98 <_printf_i+0xc8>
 8006f92:	0668      	lsls	r0, r5, #25
 8006f94:	d5fb      	bpl.n	8006f8e <_printf_i+0xbe>
 8006f96:	881b      	ldrh	r3, [r3, #0]
 8006f98:	4854      	ldr	r0, [pc, #336]	; (80070ec <_printf_i+0x21c>)
 8006f9a:	296f      	cmp	r1, #111	; 0x6f
 8006f9c:	bf14      	ite	ne
 8006f9e:	220a      	movne	r2, #10
 8006fa0:	2208      	moveq	r2, #8
 8006fa2:	2100      	movs	r1, #0
 8006fa4:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8006fa8:	6865      	ldr	r5, [r4, #4]
 8006faa:	60a5      	str	r5, [r4, #8]
 8006fac:	2d00      	cmp	r5, #0
 8006fae:	f2c0 8095 	blt.w	80070dc <_printf_i+0x20c>
 8006fb2:	6821      	ldr	r1, [r4, #0]
 8006fb4:	f021 0104 	bic.w	r1, r1, #4
 8006fb8:	6021      	str	r1, [r4, #0]
 8006fba:	2b00      	cmp	r3, #0
 8006fbc:	d13d      	bne.n	800703a <_printf_i+0x16a>
 8006fbe:	2d00      	cmp	r5, #0
 8006fc0:	f040 808e 	bne.w	80070e0 <_printf_i+0x210>
 8006fc4:	4665      	mov	r5, ip
 8006fc6:	2a08      	cmp	r2, #8
 8006fc8:	d10b      	bne.n	8006fe2 <_printf_i+0x112>
 8006fca:	6823      	ldr	r3, [r4, #0]
 8006fcc:	07db      	lsls	r3, r3, #31
 8006fce:	d508      	bpl.n	8006fe2 <_printf_i+0x112>
 8006fd0:	6923      	ldr	r3, [r4, #16]
 8006fd2:	6862      	ldr	r2, [r4, #4]
 8006fd4:	429a      	cmp	r2, r3
 8006fd6:	bfde      	ittt	le
 8006fd8:	2330      	movle	r3, #48	; 0x30
 8006fda:	f805 3c01 	strble.w	r3, [r5, #-1]
 8006fde:	f105 35ff 	addle.w	r5, r5, #4294967295
 8006fe2:	ebac 0305 	sub.w	r3, ip, r5
 8006fe6:	6123      	str	r3, [r4, #16]
 8006fe8:	f8cd 8000 	str.w	r8, [sp]
 8006fec:	463b      	mov	r3, r7
 8006fee:	aa03      	add	r2, sp, #12
 8006ff0:	4621      	mov	r1, r4
 8006ff2:	4630      	mov	r0, r6
 8006ff4:	f7ff fef6 	bl	8006de4 <_printf_common>
 8006ff8:	3001      	adds	r0, #1
 8006ffa:	d14d      	bne.n	8007098 <_printf_i+0x1c8>
 8006ffc:	f04f 30ff 	mov.w	r0, #4294967295
 8007000:	b005      	add	sp, #20
 8007002:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007006:	4839      	ldr	r0, [pc, #228]	; (80070ec <_printf_i+0x21c>)
 8007008:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 800700c:	6813      	ldr	r3, [r2, #0]
 800700e:	6821      	ldr	r1, [r4, #0]
 8007010:	1d1d      	adds	r5, r3, #4
 8007012:	681b      	ldr	r3, [r3, #0]
 8007014:	6015      	str	r5, [r2, #0]
 8007016:	060a      	lsls	r2, r1, #24
 8007018:	d50b      	bpl.n	8007032 <_printf_i+0x162>
 800701a:	07ca      	lsls	r2, r1, #31
 800701c:	bf44      	itt	mi
 800701e:	f041 0120 	orrmi.w	r1, r1, #32
 8007022:	6021      	strmi	r1, [r4, #0]
 8007024:	b91b      	cbnz	r3, 800702e <_printf_i+0x15e>
 8007026:	6822      	ldr	r2, [r4, #0]
 8007028:	f022 0220 	bic.w	r2, r2, #32
 800702c:	6022      	str	r2, [r4, #0]
 800702e:	2210      	movs	r2, #16
 8007030:	e7b7      	b.n	8006fa2 <_printf_i+0xd2>
 8007032:	064d      	lsls	r5, r1, #25
 8007034:	bf48      	it	mi
 8007036:	b29b      	uxthmi	r3, r3
 8007038:	e7ef      	b.n	800701a <_printf_i+0x14a>
 800703a:	4665      	mov	r5, ip
 800703c:	fbb3 f1f2 	udiv	r1, r3, r2
 8007040:	fb02 3311 	mls	r3, r2, r1, r3
 8007044:	5cc3      	ldrb	r3, [r0, r3]
 8007046:	f805 3d01 	strb.w	r3, [r5, #-1]!
 800704a:	460b      	mov	r3, r1
 800704c:	2900      	cmp	r1, #0
 800704e:	d1f5      	bne.n	800703c <_printf_i+0x16c>
 8007050:	e7b9      	b.n	8006fc6 <_printf_i+0xf6>
 8007052:	6813      	ldr	r3, [r2, #0]
 8007054:	6825      	ldr	r5, [r4, #0]
 8007056:	6961      	ldr	r1, [r4, #20]
 8007058:	1d18      	adds	r0, r3, #4
 800705a:	6010      	str	r0, [r2, #0]
 800705c:	0628      	lsls	r0, r5, #24
 800705e:	681b      	ldr	r3, [r3, #0]
 8007060:	d501      	bpl.n	8007066 <_printf_i+0x196>
 8007062:	6019      	str	r1, [r3, #0]
 8007064:	e002      	b.n	800706c <_printf_i+0x19c>
 8007066:	066a      	lsls	r2, r5, #25
 8007068:	d5fb      	bpl.n	8007062 <_printf_i+0x192>
 800706a:	8019      	strh	r1, [r3, #0]
 800706c:	2300      	movs	r3, #0
 800706e:	6123      	str	r3, [r4, #16]
 8007070:	4665      	mov	r5, ip
 8007072:	e7b9      	b.n	8006fe8 <_printf_i+0x118>
 8007074:	6813      	ldr	r3, [r2, #0]
 8007076:	1d19      	adds	r1, r3, #4
 8007078:	6011      	str	r1, [r2, #0]
 800707a:	681d      	ldr	r5, [r3, #0]
 800707c:	6862      	ldr	r2, [r4, #4]
 800707e:	2100      	movs	r1, #0
 8007080:	4628      	mov	r0, r5
 8007082:	f7f9 f8cd 	bl	8000220 <memchr>
 8007086:	b108      	cbz	r0, 800708c <_printf_i+0x1bc>
 8007088:	1b40      	subs	r0, r0, r5
 800708a:	6060      	str	r0, [r4, #4]
 800708c:	6863      	ldr	r3, [r4, #4]
 800708e:	6123      	str	r3, [r4, #16]
 8007090:	2300      	movs	r3, #0
 8007092:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007096:	e7a7      	b.n	8006fe8 <_printf_i+0x118>
 8007098:	6923      	ldr	r3, [r4, #16]
 800709a:	462a      	mov	r2, r5
 800709c:	4639      	mov	r1, r7
 800709e:	4630      	mov	r0, r6
 80070a0:	47c0      	blx	r8
 80070a2:	3001      	adds	r0, #1
 80070a4:	d0aa      	beq.n	8006ffc <_printf_i+0x12c>
 80070a6:	6823      	ldr	r3, [r4, #0]
 80070a8:	079b      	lsls	r3, r3, #30
 80070aa:	d413      	bmi.n	80070d4 <_printf_i+0x204>
 80070ac:	68e0      	ldr	r0, [r4, #12]
 80070ae:	9b03      	ldr	r3, [sp, #12]
 80070b0:	4298      	cmp	r0, r3
 80070b2:	bfb8      	it	lt
 80070b4:	4618      	movlt	r0, r3
 80070b6:	e7a3      	b.n	8007000 <_printf_i+0x130>
 80070b8:	2301      	movs	r3, #1
 80070ba:	464a      	mov	r2, r9
 80070bc:	4639      	mov	r1, r7
 80070be:	4630      	mov	r0, r6
 80070c0:	47c0      	blx	r8
 80070c2:	3001      	adds	r0, #1
 80070c4:	d09a      	beq.n	8006ffc <_printf_i+0x12c>
 80070c6:	3501      	adds	r5, #1
 80070c8:	68e3      	ldr	r3, [r4, #12]
 80070ca:	9a03      	ldr	r2, [sp, #12]
 80070cc:	1a9b      	subs	r3, r3, r2
 80070ce:	42ab      	cmp	r3, r5
 80070d0:	dcf2      	bgt.n	80070b8 <_printf_i+0x1e8>
 80070d2:	e7eb      	b.n	80070ac <_printf_i+0x1dc>
 80070d4:	2500      	movs	r5, #0
 80070d6:	f104 0919 	add.w	r9, r4, #25
 80070da:	e7f5      	b.n	80070c8 <_printf_i+0x1f8>
 80070dc:	2b00      	cmp	r3, #0
 80070de:	d1ac      	bne.n	800703a <_printf_i+0x16a>
 80070e0:	7803      	ldrb	r3, [r0, #0]
 80070e2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80070e6:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80070ea:	e76c      	b.n	8006fc6 <_printf_i+0xf6>
 80070ec:	08008b09 	.word	0x08008b09
 80070f0:	08008b1a 	.word	0x08008b1a

080070f4 <_free_r>:
 80070f4:	b538      	push	{r3, r4, r5, lr}
 80070f6:	4605      	mov	r5, r0
 80070f8:	2900      	cmp	r1, #0
 80070fa:	d045      	beq.n	8007188 <_free_r+0x94>
 80070fc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007100:	1f0c      	subs	r4, r1, #4
 8007102:	2b00      	cmp	r3, #0
 8007104:	bfb8      	it	lt
 8007106:	18e4      	addlt	r4, r4, r3
 8007108:	f000 f8d2 	bl	80072b0 <__malloc_lock>
 800710c:	4a1f      	ldr	r2, [pc, #124]	; (800718c <_free_r+0x98>)
 800710e:	6813      	ldr	r3, [r2, #0]
 8007110:	4610      	mov	r0, r2
 8007112:	b933      	cbnz	r3, 8007122 <_free_r+0x2e>
 8007114:	6063      	str	r3, [r4, #4]
 8007116:	6014      	str	r4, [r2, #0]
 8007118:	4628      	mov	r0, r5
 800711a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800711e:	f000 b8c8 	b.w	80072b2 <__malloc_unlock>
 8007122:	42a3      	cmp	r3, r4
 8007124:	d90c      	bls.n	8007140 <_free_r+0x4c>
 8007126:	6821      	ldr	r1, [r4, #0]
 8007128:	1862      	adds	r2, r4, r1
 800712a:	4293      	cmp	r3, r2
 800712c:	bf04      	itt	eq
 800712e:	681a      	ldreq	r2, [r3, #0]
 8007130:	685b      	ldreq	r3, [r3, #4]
 8007132:	6063      	str	r3, [r4, #4]
 8007134:	bf04      	itt	eq
 8007136:	1852      	addeq	r2, r2, r1
 8007138:	6022      	streq	r2, [r4, #0]
 800713a:	6004      	str	r4, [r0, #0]
 800713c:	e7ec      	b.n	8007118 <_free_r+0x24>
 800713e:	4613      	mov	r3, r2
 8007140:	685a      	ldr	r2, [r3, #4]
 8007142:	b10a      	cbz	r2, 8007148 <_free_r+0x54>
 8007144:	42a2      	cmp	r2, r4
 8007146:	d9fa      	bls.n	800713e <_free_r+0x4a>
 8007148:	6819      	ldr	r1, [r3, #0]
 800714a:	1858      	adds	r0, r3, r1
 800714c:	42a0      	cmp	r0, r4
 800714e:	d10b      	bne.n	8007168 <_free_r+0x74>
 8007150:	6820      	ldr	r0, [r4, #0]
 8007152:	4401      	add	r1, r0
 8007154:	1858      	adds	r0, r3, r1
 8007156:	4282      	cmp	r2, r0
 8007158:	6019      	str	r1, [r3, #0]
 800715a:	d1dd      	bne.n	8007118 <_free_r+0x24>
 800715c:	6810      	ldr	r0, [r2, #0]
 800715e:	6852      	ldr	r2, [r2, #4]
 8007160:	605a      	str	r2, [r3, #4]
 8007162:	4401      	add	r1, r0
 8007164:	6019      	str	r1, [r3, #0]
 8007166:	e7d7      	b.n	8007118 <_free_r+0x24>
 8007168:	d902      	bls.n	8007170 <_free_r+0x7c>
 800716a:	230c      	movs	r3, #12
 800716c:	602b      	str	r3, [r5, #0]
 800716e:	e7d3      	b.n	8007118 <_free_r+0x24>
 8007170:	6820      	ldr	r0, [r4, #0]
 8007172:	1821      	adds	r1, r4, r0
 8007174:	428a      	cmp	r2, r1
 8007176:	bf04      	itt	eq
 8007178:	6811      	ldreq	r1, [r2, #0]
 800717a:	6852      	ldreq	r2, [r2, #4]
 800717c:	6062      	str	r2, [r4, #4]
 800717e:	bf04      	itt	eq
 8007180:	1809      	addeq	r1, r1, r0
 8007182:	6021      	streq	r1, [r4, #0]
 8007184:	605c      	str	r4, [r3, #4]
 8007186:	e7c7      	b.n	8007118 <_free_r+0x24>
 8007188:	bd38      	pop	{r3, r4, r5, pc}
 800718a:	bf00      	nop
 800718c:	200000dc 	.word	0x200000dc

08007190 <_malloc_r>:
 8007190:	b570      	push	{r4, r5, r6, lr}
 8007192:	1ccd      	adds	r5, r1, #3
 8007194:	f025 0503 	bic.w	r5, r5, #3
 8007198:	3508      	adds	r5, #8
 800719a:	2d0c      	cmp	r5, #12
 800719c:	bf38      	it	cc
 800719e:	250c      	movcc	r5, #12
 80071a0:	2d00      	cmp	r5, #0
 80071a2:	4606      	mov	r6, r0
 80071a4:	db01      	blt.n	80071aa <_malloc_r+0x1a>
 80071a6:	42a9      	cmp	r1, r5
 80071a8:	d903      	bls.n	80071b2 <_malloc_r+0x22>
 80071aa:	230c      	movs	r3, #12
 80071ac:	6033      	str	r3, [r6, #0]
 80071ae:	2000      	movs	r0, #0
 80071b0:	bd70      	pop	{r4, r5, r6, pc}
 80071b2:	f000 f87d 	bl	80072b0 <__malloc_lock>
 80071b6:	4a21      	ldr	r2, [pc, #132]	; (800723c <_malloc_r+0xac>)
 80071b8:	6814      	ldr	r4, [r2, #0]
 80071ba:	4621      	mov	r1, r4
 80071bc:	b991      	cbnz	r1, 80071e4 <_malloc_r+0x54>
 80071be:	4c20      	ldr	r4, [pc, #128]	; (8007240 <_malloc_r+0xb0>)
 80071c0:	6823      	ldr	r3, [r4, #0]
 80071c2:	b91b      	cbnz	r3, 80071cc <_malloc_r+0x3c>
 80071c4:	4630      	mov	r0, r6
 80071c6:	f000 f863 	bl	8007290 <_sbrk_r>
 80071ca:	6020      	str	r0, [r4, #0]
 80071cc:	4629      	mov	r1, r5
 80071ce:	4630      	mov	r0, r6
 80071d0:	f000 f85e 	bl	8007290 <_sbrk_r>
 80071d4:	1c43      	adds	r3, r0, #1
 80071d6:	d124      	bne.n	8007222 <_malloc_r+0x92>
 80071d8:	230c      	movs	r3, #12
 80071da:	6033      	str	r3, [r6, #0]
 80071dc:	4630      	mov	r0, r6
 80071de:	f000 f868 	bl	80072b2 <__malloc_unlock>
 80071e2:	e7e4      	b.n	80071ae <_malloc_r+0x1e>
 80071e4:	680b      	ldr	r3, [r1, #0]
 80071e6:	1b5b      	subs	r3, r3, r5
 80071e8:	d418      	bmi.n	800721c <_malloc_r+0x8c>
 80071ea:	2b0b      	cmp	r3, #11
 80071ec:	d90f      	bls.n	800720e <_malloc_r+0x7e>
 80071ee:	600b      	str	r3, [r1, #0]
 80071f0:	50cd      	str	r5, [r1, r3]
 80071f2:	18cc      	adds	r4, r1, r3
 80071f4:	4630      	mov	r0, r6
 80071f6:	f000 f85c 	bl	80072b2 <__malloc_unlock>
 80071fa:	f104 000b 	add.w	r0, r4, #11
 80071fe:	1d23      	adds	r3, r4, #4
 8007200:	f020 0007 	bic.w	r0, r0, #7
 8007204:	1ac3      	subs	r3, r0, r3
 8007206:	d0d3      	beq.n	80071b0 <_malloc_r+0x20>
 8007208:	425a      	negs	r2, r3
 800720a:	50e2      	str	r2, [r4, r3]
 800720c:	e7d0      	b.n	80071b0 <_malloc_r+0x20>
 800720e:	428c      	cmp	r4, r1
 8007210:	684b      	ldr	r3, [r1, #4]
 8007212:	bf16      	itet	ne
 8007214:	6063      	strne	r3, [r4, #4]
 8007216:	6013      	streq	r3, [r2, #0]
 8007218:	460c      	movne	r4, r1
 800721a:	e7eb      	b.n	80071f4 <_malloc_r+0x64>
 800721c:	460c      	mov	r4, r1
 800721e:	6849      	ldr	r1, [r1, #4]
 8007220:	e7cc      	b.n	80071bc <_malloc_r+0x2c>
 8007222:	1cc4      	adds	r4, r0, #3
 8007224:	f024 0403 	bic.w	r4, r4, #3
 8007228:	42a0      	cmp	r0, r4
 800722a:	d005      	beq.n	8007238 <_malloc_r+0xa8>
 800722c:	1a21      	subs	r1, r4, r0
 800722e:	4630      	mov	r0, r6
 8007230:	f000 f82e 	bl	8007290 <_sbrk_r>
 8007234:	3001      	adds	r0, #1
 8007236:	d0cf      	beq.n	80071d8 <_malloc_r+0x48>
 8007238:	6025      	str	r5, [r4, #0]
 800723a:	e7db      	b.n	80071f4 <_malloc_r+0x64>
 800723c:	200000dc 	.word	0x200000dc
 8007240:	200000e0 	.word	0x200000e0

08007244 <_realloc_r>:
 8007244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007246:	4607      	mov	r7, r0
 8007248:	4614      	mov	r4, r2
 800724a:	460e      	mov	r6, r1
 800724c:	b921      	cbnz	r1, 8007258 <_realloc_r+0x14>
 800724e:	4611      	mov	r1, r2
 8007250:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8007254:	f7ff bf9c 	b.w	8007190 <_malloc_r>
 8007258:	b922      	cbnz	r2, 8007264 <_realloc_r+0x20>
 800725a:	f7ff ff4b 	bl	80070f4 <_free_r>
 800725e:	4625      	mov	r5, r4
 8007260:	4628      	mov	r0, r5
 8007262:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007264:	f000 f826 	bl	80072b4 <_malloc_usable_size_r>
 8007268:	42a0      	cmp	r0, r4
 800726a:	d20f      	bcs.n	800728c <_realloc_r+0x48>
 800726c:	4621      	mov	r1, r4
 800726e:	4638      	mov	r0, r7
 8007270:	f7ff ff8e 	bl	8007190 <_malloc_r>
 8007274:	4605      	mov	r5, r0
 8007276:	2800      	cmp	r0, #0
 8007278:	d0f2      	beq.n	8007260 <_realloc_r+0x1c>
 800727a:	4631      	mov	r1, r6
 800727c:	4622      	mov	r2, r4
 800727e:	f7ff fc13 	bl	8006aa8 <memcpy>
 8007282:	4631      	mov	r1, r6
 8007284:	4638      	mov	r0, r7
 8007286:	f7ff ff35 	bl	80070f4 <_free_r>
 800728a:	e7e9      	b.n	8007260 <_realloc_r+0x1c>
 800728c:	4635      	mov	r5, r6
 800728e:	e7e7      	b.n	8007260 <_realloc_r+0x1c>

08007290 <_sbrk_r>:
 8007290:	b538      	push	{r3, r4, r5, lr}
 8007292:	4c06      	ldr	r4, [pc, #24]	; (80072ac <_sbrk_r+0x1c>)
 8007294:	2300      	movs	r3, #0
 8007296:	4605      	mov	r5, r0
 8007298:	4608      	mov	r0, r1
 800729a:	6023      	str	r3, [r4, #0]
 800729c:	f7fb fdc8 	bl	8002e30 <_sbrk>
 80072a0:	1c43      	adds	r3, r0, #1
 80072a2:	d102      	bne.n	80072aa <_sbrk_r+0x1a>
 80072a4:	6823      	ldr	r3, [r4, #0]
 80072a6:	b103      	cbz	r3, 80072aa <_sbrk_r+0x1a>
 80072a8:	602b      	str	r3, [r5, #0]
 80072aa:	bd38      	pop	{r3, r4, r5, pc}
 80072ac:	200034b4 	.word	0x200034b4

080072b0 <__malloc_lock>:
 80072b0:	4770      	bx	lr

080072b2 <__malloc_unlock>:
 80072b2:	4770      	bx	lr

080072b4 <_malloc_usable_size_r>:
 80072b4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80072b8:	1f18      	subs	r0, r3, #4
 80072ba:	2b00      	cmp	r3, #0
 80072bc:	bfbc      	itt	lt
 80072be:	580b      	ldrlt	r3, [r1, r0]
 80072c0:	18c0      	addlt	r0, r0, r3
 80072c2:	4770      	bx	lr

080072c4 <pow>:
 80072c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80072c8:	ed2d 8b04 	vpush	{d8-d9}
 80072cc:	f8df 92d0 	ldr.w	r9, [pc, #720]	; 80075a0 <pow+0x2dc>
 80072d0:	b08d      	sub	sp, #52	; 0x34
 80072d2:	ec57 6b10 	vmov	r6, r7, d0
 80072d6:	ec55 4b11 	vmov	r4, r5, d1
 80072da:	f000 f965 	bl	80075a8 <__ieee754_pow>
 80072de:	f999 3000 	ldrsb.w	r3, [r9]
 80072e2:	9300      	str	r3, [sp, #0]
 80072e4:	3301      	adds	r3, #1
 80072e6:	eeb0 8a40 	vmov.f32	s16, s0
 80072ea:	eef0 8a60 	vmov.f32	s17, s1
 80072ee:	46c8      	mov	r8, r9
 80072f0:	d05f      	beq.n	80073b2 <pow+0xee>
 80072f2:	4622      	mov	r2, r4
 80072f4:	462b      	mov	r3, r5
 80072f6:	4620      	mov	r0, r4
 80072f8:	4629      	mov	r1, r5
 80072fa:	f7f9 fc37 	bl	8000b6c <__aeabi_dcmpun>
 80072fe:	4683      	mov	fp, r0
 8007300:	2800      	cmp	r0, #0
 8007302:	d156      	bne.n	80073b2 <pow+0xee>
 8007304:	4632      	mov	r2, r6
 8007306:	463b      	mov	r3, r7
 8007308:	4630      	mov	r0, r6
 800730a:	4639      	mov	r1, r7
 800730c:	f7f9 fc2e 	bl	8000b6c <__aeabi_dcmpun>
 8007310:	9001      	str	r0, [sp, #4]
 8007312:	b1e8      	cbz	r0, 8007350 <pow+0x8c>
 8007314:	2200      	movs	r2, #0
 8007316:	2300      	movs	r3, #0
 8007318:	4620      	mov	r0, r4
 800731a:	4629      	mov	r1, r5
 800731c:	f7f9 fbf4 	bl	8000b08 <__aeabi_dcmpeq>
 8007320:	2800      	cmp	r0, #0
 8007322:	d046      	beq.n	80073b2 <pow+0xee>
 8007324:	2301      	movs	r3, #1
 8007326:	9302      	str	r3, [sp, #8]
 8007328:	4b96      	ldr	r3, [pc, #600]	; (8007584 <pow+0x2c0>)
 800732a:	9303      	str	r3, [sp, #12]
 800732c:	4b96      	ldr	r3, [pc, #600]	; (8007588 <pow+0x2c4>)
 800732e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007332:	2200      	movs	r2, #0
 8007334:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8007338:	9b00      	ldr	r3, [sp, #0]
 800733a:	2b02      	cmp	r3, #2
 800733c:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8007340:	e9cd 4506 	strd	r4, r5, [sp, #24]
 8007344:	d033      	beq.n	80073ae <pow+0xea>
 8007346:	a802      	add	r0, sp, #8
 8007348:	f000 fefd 	bl	8008146 <matherr>
 800734c:	bb48      	cbnz	r0, 80073a2 <pow+0xde>
 800734e:	e05d      	b.n	800740c <pow+0x148>
 8007350:	f04f 0a00 	mov.w	sl, #0
 8007354:	f04f 0b00 	mov.w	fp, #0
 8007358:	4652      	mov	r2, sl
 800735a:	465b      	mov	r3, fp
 800735c:	4630      	mov	r0, r6
 800735e:	4639      	mov	r1, r7
 8007360:	f7f9 fbd2 	bl	8000b08 <__aeabi_dcmpeq>
 8007364:	ec4b ab19 	vmov	d9, sl, fp
 8007368:	2800      	cmp	r0, #0
 800736a:	d054      	beq.n	8007416 <pow+0x152>
 800736c:	4652      	mov	r2, sl
 800736e:	465b      	mov	r3, fp
 8007370:	4620      	mov	r0, r4
 8007372:	4629      	mov	r1, r5
 8007374:	f7f9 fbc8 	bl	8000b08 <__aeabi_dcmpeq>
 8007378:	4680      	mov	r8, r0
 800737a:	b318      	cbz	r0, 80073c4 <pow+0x100>
 800737c:	2301      	movs	r3, #1
 800737e:	9302      	str	r3, [sp, #8]
 8007380:	4b80      	ldr	r3, [pc, #512]	; (8007584 <pow+0x2c0>)
 8007382:	9303      	str	r3, [sp, #12]
 8007384:	9b01      	ldr	r3, [sp, #4]
 8007386:	930a      	str	r3, [sp, #40]	; 0x28
 8007388:	9b00      	ldr	r3, [sp, #0]
 800738a:	e9cd 6704 	strd	r6, r7, [sp, #16]
 800738e:	e9cd 4506 	strd	r4, r5, [sp, #24]
 8007392:	e9cd ab08 	strd	sl, fp, [sp, #32]
 8007396:	2b00      	cmp	r3, #0
 8007398:	d0d5      	beq.n	8007346 <pow+0x82>
 800739a:	4b7b      	ldr	r3, [pc, #492]	; (8007588 <pow+0x2c4>)
 800739c:	2200      	movs	r2, #0
 800739e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80073a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80073a4:	b11b      	cbz	r3, 80073ae <pow+0xea>
 80073a6:	f7ff fb55 	bl	8006a54 <__errno>
 80073aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80073ac:	6003      	str	r3, [r0, #0]
 80073ae:	ed9d 8b08 	vldr	d8, [sp, #32]
 80073b2:	eeb0 0a48 	vmov.f32	s0, s16
 80073b6:	eef0 0a68 	vmov.f32	s1, s17
 80073ba:	b00d      	add	sp, #52	; 0x34
 80073bc:	ecbd 8b04 	vpop	{d8-d9}
 80073c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80073c4:	ec45 4b10 	vmov	d0, r4, r5
 80073c8:	f000 feb5 	bl	8008136 <finite>
 80073cc:	2800      	cmp	r0, #0
 80073ce:	d0f0      	beq.n	80073b2 <pow+0xee>
 80073d0:	4652      	mov	r2, sl
 80073d2:	465b      	mov	r3, fp
 80073d4:	4620      	mov	r0, r4
 80073d6:	4629      	mov	r1, r5
 80073d8:	f7f9 fba0 	bl	8000b1c <__aeabi_dcmplt>
 80073dc:	2800      	cmp	r0, #0
 80073de:	d0e8      	beq.n	80073b2 <pow+0xee>
 80073e0:	2301      	movs	r3, #1
 80073e2:	9302      	str	r3, [sp, #8]
 80073e4:	4b67      	ldr	r3, [pc, #412]	; (8007584 <pow+0x2c0>)
 80073e6:	9303      	str	r3, [sp, #12]
 80073e8:	f999 3000 	ldrsb.w	r3, [r9]
 80073ec:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80073f0:	e9cd 6704 	strd	r6, r7, [sp, #16]
 80073f4:	e9cd 4506 	strd	r4, r5, [sp, #24]
 80073f8:	b913      	cbnz	r3, 8007400 <pow+0x13c>
 80073fa:	e9cd ab08 	strd	sl, fp, [sp, #32]
 80073fe:	e7a2      	b.n	8007346 <pow+0x82>
 8007400:	4962      	ldr	r1, [pc, #392]	; (800758c <pow+0x2c8>)
 8007402:	2000      	movs	r0, #0
 8007404:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8007408:	2b02      	cmp	r3, #2
 800740a:	d19c      	bne.n	8007346 <pow+0x82>
 800740c:	f7ff fb22 	bl	8006a54 <__errno>
 8007410:	2321      	movs	r3, #33	; 0x21
 8007412:	6003      	str	r3, [r0, #0]
 8007414:	e7c5      	b.n	80073a2 <pow+0xde>
 8007416:	eeb0 0a48 	vmov.f32	s0, s16
 800741a:	eef0 0a68 	vmov.f32	s1, s17
 800741e:	f000 fe8a 	bl	8008136 <finite>
 8007422:	9000      	str	r0, [sp, #0]
 8007424:	2800      	cmp	r0, #0
 8007426:	f040 8081 	bne.w	800752c <pow+0x268>
 800742a:	ec47 6b10 	vmov	d0, r6, r7
 800742e:	f000 fe82 	bl	8008136 <finite>
 8007432:	2800      	cmp	r0, #0
 8007434:	d07a      	beq.n	800752c <pow+0x268>
 8007436:	ec45 4b10 	vmov	d0, r4, r5
 800743a:	f000 fe7c 	bl	8008136 <finite>
 800743e:	2800      	cmp	r0, #0
 8007440:	d074      	beq.n	800752c <pow+0x268>
 8007442:	ec53 2b18 	vmov	r2, r3, d8
 8007446:	ee18 0a10 	vmov	r0, s16
 800744a:	4619      	mov	r1, r3
 800744c:	f7f9 fb8e 	bl	8000b6c <__aeabi_dcmpun>
 8007450:	f999 9000 	ldrsb.w	r9, [r9]
 8007454:	4b4b      	ldr	r3, [pc, #300]	; (8007584 <pow+0x2c0>)
 8007456:	b1b0      	cbz	r0, 8007486 <pow+0x1c2>
 8007458:	2201      	movs	r2, #1
 800745a:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800745e:	9b00      	ldr	r3, [sp, #0]
 8007460:	930a      	str	r3, [sp, #40]	; 0x28
 8007462:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8007466:	e9cd 4506 	strd	r4, r5, [sp, #24]
 800746a:	f1b9 0f00 	cmp.w	r9, #0
 800746e:	d0c4      	beq.n	80073fa <pow+0x136>
 8007470:	4652      	mov	r2, sl
 8007472:	465b      	mov	r3, fp
 8007474:	4650      	mov	r0, sl
 8007476:	4659      	mov	r1, fp
 8007478:	f7f9 fa08 	bl	800088c <__aeabi_ddiv>
 800747c:	f1b9 0f02 	cmp.w	r9, #2
 8007480:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8007484:	e7c1      	b.n	800740a <pow+0x146>
 8007486:	2203      	movs	r2, #3
 8007488:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800748c:	900a      	str	r0, [sp, #40]	; 0x28
 800748e:	4629      	mov	r1, r5
 8007490:	4620      	mov	r0, r4
 8007492:	2200      	movs	r2, #0
 8007494:	4b3e      	ldr	r3, [pc, #248]	; (8007590 <pow+0x2cc>)
 8007496:	e9cd 4506 	strd	r4, r5, [sp, #24]
 800749a:	e9cd 6704 	strd	r6, r7, [sp, #16]
 800749e:	f7f9 f8cb 	bl	8000638 <__aeabi_dmul>
 80074a2:	4604      	mov	r4, r0
 80074a4:	460d      	mov	r5, r1
 80074a6:	f1b9 0f00 	cmp.w	r9, #0
 80074aa:	d124      	bne.n	80074f6 <pow+0x232>
 80074ac:	4b39      	ldr	r3, [pc, #228]	; (8007594 <pow+0x2d0>)
 80074ae:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80074b2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80074b6:	4630      	mov	r0, r6
 80074b8:	4652      	mov	r2, sl
 80074ba:	465b      	mov	r3, fp
 80074bc:	4639      	mov	r1, r7
 80074be:	f7f9 fb2d 	bl	8000b1c <__aeabi_dcmplt>
 80074c2:	2800      	cmp	r0, #0
 80074c4:	d056      	beq.n	8007574 <pow+0x2b0>
 80074c6:	ec45 4b10 	vmov	d0, r4, r5
 80074ca:	f000 fe49 	bl	8008160 <rint>
 80074ce:	4622      	mov	r2, r4
 80074d0:	462b      	mov	r3, r5
 80074d2:	ec51 0b10 	vmov	r0, r1, d0
 80074d6:	f7f9 fb17 	bl	8000b08 <__aeabi_dcmpeq>
 80074da:	b920      	cbnz	r0, 80074e6 <pow+0x222>
 80074dc:	4b2e      	ldr	r3, [pc, #184]	; (8007598 <pow+0x2d4>)
 80074de:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80074e2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80074e6:	f998 3000 	ldrsb.w	r3, [r8]
 80074ea:	2b02      	cmp	r3, #2
 80074ec:	d142      	bne.n	8007574 <pow+0x2b0>
 80074ee:	f7ff fab1 	bl	8006a54 <__errno>
 80074f2:	2322      	movs	r3, #34	; 0x22
 80074f4:	e78d      	b.n	8007412 <pow+0x14e>
 80074f6:	4b29      	ldr	r3, [pc, #164]	; (800759c <pow+0x2d8>)
 80074f8:	2200      	movs	r2, #0
 80074fa:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80074fe:	4630      	mov	r0, r6
 8007500:	4652      	mov	r2, sl
 8007502:	465b      	mov	r3, fp
 8007504:	4639      	mov	r1, r7
 8007506:	f7f9 fb09 	bl	8000b1c <__aeabi_dcmplt>
 800750a:	2800      	cmp	r0, #0
 800750c:	d0eb      	beq.n	80074e6 <pow+0x222>
 800750e:	ec45 4b10 	vmov	d0, r4, r5
 8007512:	f000 fe25 	bl	8008160 <rint>
 8007516:	4622      	mov	r2, r4
 8007518:	462b      	mov	r3, r5
 800751a:	ec51 0b10 	vmov	r0, r1, d0
 800751e:	f7f9 faf3 	bl	8000b08 <__aeabi_dcmpeq>
 8007522:	2800      	cmp	r0, #0
 8007524:	d1df      	bne.n	80074e6 <pow+0x222>
 8007526:	2200      	movs	r2, #0
 8007528:	4b18      	ldr	r3, [pc, #96]	; (800758c <pow+0x2c8>)
 800752a:	e7da      	b.n	80074e2 <pow+0x21e>
 800752c:	2200      	movs	r2, #0
 800752e:	2300      	movs	r3, #0
 8007530:	ec51 0b18 	vmov	r0, r1, d8
 8007534:	f7f9 fae8 	bl	8000b08 <__aeabi_dcmpeq>
 8007538:	2800      	cmp	r0, #0
 800753a:	f43f af3a 	beq.w	80073b2 <pow+0xee>
 800753e:	ec47 6b10 	vmov	d0, r6, r7
 8007542:	f000 fdf8 	bl	8008136 <finite>
 8007546:	2800      	cmp	r0, #0
 8007548:	f43f af33 	beq.w	80073b2 <pow+0xee>
 800754c:	ec45 4b10 	vmov	d0, r4, r5
 8007550:	f000 fdf1 	bl	8008136 <finite>
 8007554:	2800      	cmp	r0, #0
 8007556:	f43f af2c 	beq.w	80073b2 <pow+0xee>
 800755a:	2304      	movs	r3, #4
 800755c:	9302      	str	r3, [sp, #8]
 800755e:	4b09      	ldr	r3, [pc, #36]	; (8007584 <pow+0x2c0>)
 8007560:	9303      	str	r3, [sp, #12]
 8007562:	2300      	movs	r3, #0
 8007564:	930a      	str	r3, [sp, #40]	; 0x28
 8007566:	e9cd 6704 	strd	r6, r7, [sp, #16]
 800756a:	e9cd 4506 	strd	r4, r5, [sp, #24]
 800756e:	ed8d 9b08 	vstr	d9, [sp, #32]
 8007572:	e7b8      	b.n	80074e6 <pow+0x222>
 8007574:	a802      	add	r0, sp, #8
 8007576:	f000 fde6 	bl	8008146 <matherr>
 800757a:	2800      	cmp	r0, #0
 800757c:	f47f af11 	bne.w	80073a2 <pow+0xde>
 8007580:	e7b5      	b.n	80074ee <pow+0x22a>
 8007582:	bf00      	nop
 8007584:	08008b2b 	.word	0x08008b2b
 8007588:	3ff00000 	.word	0x3ff00000
 800758c:	fff00000 	.word	0xfff00000
 8007590:	3fe00000 	.word	0x3fe00000
 8007594:	47efffff 	.word	0x47efffff
 8007598:	c7efffff 	.word	0xc7efffff
 800759c:	7ff00000 	.word	0x7ff00000
 80075a0:	20000084 	.word	0x20000084
 80075a4:	00000000 	.word	0x00000000

080075a8 <__ieee754_pow>:
 80075a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80075ac:	b091      	sub	sp, #68	; 0x44
 80075ae:	ed8d 1b00 	vstr	d1, [sp]
 80075b2:	e9dd 2900 	ldrd	r2, r9, [sp]
 80075b6:	f029 4800 	bic.w	r8, r9, #2147483648	; 0x80000000
 80075ba:	ea58 0302 	orrs.w	r3, r8, r2
 80075be:	ec57 6b10 	vmov	r6, r7, d0
 80075c2:	f000 84be 	beq.w	8007f42 <__ieee754_pow+0x99a>
 80075c6:	4b7a      	ldr	r3, [pc, #488]	; (80077b0 <__ieee754_pow+0x208>)
 80075c8:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
 80075cc:	429c      	cmp	r4, r3
 80075ce:	463d      	mov	r5, r7
 80075d0:	ee10 aa10 	vmov	sl, s0
 80075d4:	dc09      	bgt.n	80075ea <__ieee754_pow+0x42>
 80075d6:	d103      	bne.n	80075e0 <__ieee754_pow+0x38>
 80075d8:	b93e      	cbnz	r6, 80075ea <__ieee754_pow+0x42>
 80075da:	45a0      	cmp	r8, r4
 80075dc:	dc0d      	bgt.n	80075fa <__ieee754_pow+0x52>
 80075de:	e001      	b.n	80075e4 <__ieee754_pow+0x3c>
 80075e0:	4598      	cmp	r8, r3
 80075e2:	dc02      	bgt.n	80075ea <__ieee754_pow+0x42>
 80075e4:	4598      	cmp	r8, r3
 80075e6:	d10e      	bne.n	8007606 <__ieee754_pow+0x5e>
 80075e8:	b16a      	cbz	r2, 8007606 <__ieee754_pow+0x5e>
 80075ea:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 80075ee:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 80075f2:	ea54 030a 	orrs.w	r3, r4, sl
 80075f6:	f000 84a4 	beq.w	8007f42 <__ieee754_pow+0x99a>
 80075fa:	486e      	ldr	r0, [pc, #440]	; (80077b4 <__ieee754_pow+0x20c>)
 80075fc:	b011      	add	sp, #68	; 0x44
 80075fe:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007602:	f000 bda5 	b.w	8008150 <nan>
 8007606:	2d00      	cmp	r5, #0
 8007608:	da53      	bge.n	80076b2 <__ieee754_pow+0x10a>
 800760a:	4b6b      	ldr	r3, [pc, #428]	; (80077b8 <__ieee754_pow+0x210>)
 800760c:	4598      	cmp	r8, r3
 800760e:	dc4d      	bgt.n	80076ac <__ieee754_pow+0x104>
 8007610:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 8007614:	4598      	cmp	r8, r3
 8007616:	dd4c      	ble.n	80076b2 <__ieee754_pow+0x10a>
 8007618:	ea4f 5328 	mov.w	r3, r8, asr #20
 800761c:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8007620:	2b14      	cmp	r3, #20
 8007622:	dd26      	ble.n	8007672 <__ieee754_pow+0xca>
 8007624:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 8007628:	fa22 f103 	lsr.w	r1, r2, r3
 800762c:	fa01 f303 	lsl.w	r3, r1, r3
 8007630:	4293      	cmp	r3, r2
 8007632:	d13e      	bne.n	80076b2 <__ieee754_pow+0x10a>
 8007634:	f001 0101 	and.w	r1, r1, #1
 8007638:	f1c1 0b02 	rsb	fp, r1, #2
 800763c:	2a00      	cmp	r2, #0
 800763e:	d15b      	bne.n	80076f8 <__ieee754_pow+0x150>
 8007640:	4b5b      	ldr	r3, [pc, #364]	; (80077b0 <__ieee754_pow+0x208>)
 8007642:	4598      	cmp	r8, r3
 8007644:	d124      	bne.n	8007690 <__ieee754_pow+0xe8>
 8007646:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 800764a:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 800764e:	ea53 030a 	orrs.w	r3, r3, sl
 8007652:	f000 8476 	beq.w	8007f42 <__ieee754_pow+0x99a>
 8007656:	4b59      	ldr	r3, [pc, #356]	; (80077bc <__ieee754_pow+0x214>)
 8007658:	429c      	cmp	r4, r3
 800765a:	dd2d      	ble.n	80076b8 <__ieee754_pow+0x110>
 800765c:	f1b9 0f00 	cmp.w	r9, #0
 8007660:	f280 8473 	bge.w	8007f4a <__ieee754_pow+0x9a2>
 8007664:	2000      	movs	r0, #0
 8007666:	2100      	movs	r1, #0
 8007668:	ec41 0b10 	vmov	d0, r0, r1
 800766c:	b011      	add	sp, #68	; 0x44
 800766e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007672:	2a00      	cmp	r2, #0
 8007674:	d13e      	bne.n	80076f4 <__ieee754_pow+0x14c>
 8007676:	f1c3 0314 	rsb	r3, r3, #20
 800767a:	fa48 f103 	asr.w	r1, r8, r3
 800767e:	fa01 f303 	lsl.w	r3, r1, r3
 8007682:	4543      	cmp	r3, r8
 8007684:	f040 8469 	bne.w	8007f5a <__ieee754_pow+0x9b2>
 8007688:	f001 0101 	and.w	r1, r1, #1
 800768c:	f1c1 0b02 	rsb	fp, r1, #2
 8007690:	4b4b      	ldr	r3, [pc, #300]	; (80077c0 <__ieee754_pow+0x218>)
 8007692:	4598      	cmp	r8, r3
 8007694:	d118      	bne.n	80076c8 <__ieee754_pow+0x120>
 8007696:	f1b9 0f00 	cmp.w	r9, #0
 800769a:	f280 845a 	bge.w	8007f52 <__ieee754_pow+0x9aa>
 800769e:	4948      	ldr	r1, [pc, #288]	; (80077c0 <__ieee754_pow+0x218>)
 80076a0:	4632      	mov	r2, r6
 80076a2:	463b      	mov	r3, r7
 80076a4:	2000      	movs	r0, #0
 80076a6:	f7f9 f8f1 	bl	800088c <__aeabi_ddiv>
 80076aa:	e7dd      	b.n	8007668 <__ieee754_pow+0xc0>
 80076ac:	f04f 0b02 	mov.w	fp, #2
 80076b0:	e7c4      	b.n	800763c <__ieee754_pow+0x94>
 80076b2:	f04f 0b00 	mov.w	fp, #0
 80076b6:	e7c1      	b.n	800763c <__ieee754_pow+0x94>
 80076b8:	f1b9 0f00 	cmp.w	r9, #0
 80076bc:	dad2      	bge.n	8007664 <__ieee754_pow+0xbc>
 80076be:	e9dd 0300 	ldrd	r0, r3, [sp]
 80076c2:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 80076c6:	e7cf      	b.n	8007668 <__ieee754_pow+0xc0>
 80076c8:	f1b9 4f80 	cmp.w	r9, #1073741824	; 0x40000000
 80076cc:	d106      	bne.n	80076dc <__ieee754_pow+0x134>
 80076ce:	4632      	mov	r2, r6
 80076d0:	463b      	mov	r3, r7
 80076d2:	4610      	mov	r0, r2
 80076d4:	4619      	mov	r1, r3
 80076d6:	f7f8 ffaf 	bl	8000638 <__aeabi_dmul>
 80076da:	e7c5      	b.n	8007668 <__ieee754_pow+0xc0>
 80076dc:	4b39      	ldr	r3, [pc, #228]	; (80077c4 <__ieee754_pow+0x21c>)
 80076de:	4599      	cmp	r9, r3
 80076e0:	d10a      	bne.n	80076f8 <__ieee754_pow+0x150>
 80076e2:	2d00      	cmp	r5, #0
 80076e4:	db08      	blt.n	80076f8 <__ieee754_pow+0x150>
 80076e6:	ec47 6b10 	vmov	d0, r6, r7
 80076ea:	b011      	add	sp, #68	; 0x44
 80076ec:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80076f0:	f000 bc68 	b.w	8007fc4 <__ieee754_sqrt>
 80076f4:	f04f 0b00 	mov.w	fp, #0
 80076f8:	ec47 6b10 	vmov	d0, r6, r7
 80076fc:	f000 fd12 	bl	8008124 <fabs>
 8007700:	ec51 0b10 	vmov	r0, r1, d0
 8007704:	f1ba 0f00 	cmp.w	sl, #0
 8007708:	d127      	bne.n	800775a <__ieee754_pow+0x1b2>
 800770a:	b124      	cbz	r4, 8007716 <__ieee754_pow+0x16e>
 800770c:	4b2c      	ldr	r3, [pc, #176]	; (80077c0 <__ieee754_pow+0x218>)
 800770e:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 8007712:	429a      	cmp	r2, r3
 8007714:	d121      	bne.n	800775a <__ieee754_pow+0x1b2>
 8007716:	f1b9 0f00 	cmp.w	r9, #0
 800771a:	da05      	bge.n	8007728 <__ieee754_pow+0x180>
 800771c:	4602      	mov	r2, r0
 800771e:	460b      	mov	r3, r1
 8007720:	2000      	movs	r0, #0
 8007722:	4927      	ldr	r1, [pc, #156]	; (80077c0 <__ieee754_pow+0x218>)
 8007724:	f7f9 f8b2 	bl	800088c <__aeabi_ddiv>
 8007728:	2d00      	cmp	r5, #0
 800772a:	da9d      	bge.n	8007668 <__ieee754_pow+0xc0>
 800772c:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8007730:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8007734:	ea54 030b 	orrs.w	r3, r4, fp
 8007738:	d108      	bne.n	800774c <__ieee754_pow+0x1a4>
 800773a:	4602      	mov	r2, r0
 800773c:	460b      	mov	r3, r1
 800773e:	4610      	mov	r0, r2
 8007740:	4619      	mov	r1, r3
 8007742:	f7f8 fdc1 	bl	80002c8 <__aeabi_dsub>
 8007746:	4602      	mov	r2, r0
 8007748:	460b      	mov	r3, r1
 800774a:	e7ac      	b.n	80076a6 <__ieee754_pow+0xfe>
 800774c:	f1bb 0f01 	cmp.w	fp, #1
 8007750:	d18a      	bne.n	8007668 <__ieee754_pow+0xc0>
 8007752:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8007756:	4619      	mov	r1, r3
 8007758:	e786      	b.n	8007668 <__ieee754_pow+0xc0>
 800775a:	0fed      	lsrs	r5, r5, #31
 800775c:	1e6b      	subs	r3, r5, #1
 800775e:	930d      	str	r3, [sp, #52]	; 0x34
 8007760:	ea5b 0303 	orrs.w	r3, fp, r3
 8007764:	d102      	bne.n	800776c <__ieee754_pow+0x1c4>
 8007766:	4632      	mov	r2, r6
 8007768:	463b      	mov	r3, r7
 800776a:	e7e8      	b.n	800773e <__ieee754_pow+0x196>
 800776c:	4b16      	ldr	r3, [pc, #88]	; (80077c8 <__ieee754_pow+0x220>)
 800776e:	4598      	cmp	r8, r3
 8007770:	f340 80fe 	ble.w	8007970 <__ieee754_pow+0x3c8>
 8007774:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 8007778:	4598      	cmp	r8, r3
 800777a:	dd0a      	ble.n	8007792 <__ieee754_pow+0x1ea>
 800777c:	4b0f      	ldr	r3, [pc, #60]	; (80077bc <__ieee754_pow+0x214>)
 800777e:	429c      	cmp	r4, r3
 8007780:	dc0d      	bgt.n	800779e <__ieee754_pow+0x1f6>
 8007782:	f1b9 0f00 	cmp.w	r9, #0
 8007786:	f6bf af6d 	bge.w	8007664 <__ieee754_pow+0xbc>
 800778a:	a307      	add	r3, pc, #28	; (adr r3, 80077a8 <__ieee754_pow+0x200>)
 800778c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007790:	e79f      	b.n	80076d2 <__ieee754_pow+0x12a>
 8007792:	4b0e      	ldr	r3, [pc, #56]	; (80077cc <__ieee754_pow+0x224>)
 8007794:	429c      	cmp	r4, r3
 8007796:	ddf4      	ble.n	8007782 <__ieee754_pow+0x1da>
 8007798:	4b09      	ldr	r3, [pc, #36]	; (80077c0 <__ieee754_pow+0x218>)
 800779a:	429c      	cmp	r4, r3
 800779c:	dd18      	ble.n	80077d0 <__ieee754_pow+0x228>
 800779e:	f1b9 0f00 	cmp.w	r9, #0
 80077a2:	dcf2      	bgt.n	800778a <__ieee754_pow+0x1e2>
 80077a4:	e75e      	b.n	8007664 <__ieee754_pow+0xbc>
 80077a6:	bf00      	nop
 80077a8:	8800759c 	.word	0x8800759c
 80077ac:	7e37e43c 	.word	0x7e37e43c
 80077b0:	7ff00000 	.word	0x7ff00000
 80077b4:	08008afd 	.word	0x08008afd
 80077b8:	433fffff 	.word	0x433fffff
 80077bc:	3fefffff 	.word	0x3fefffff
 80077c0:	3ff00000 	.word	0x3ff00000
 80077c4:	3fe00000 	.word	0x3fe00000
 80077c8:	41e00000 	.word	0x41e00000
 80077cc:	3feffffe 	.word	0x3feffffe
 80077d0:	2200      	movs	r2, #0
 80077d2:	4b63      	ldr	r3, [pc, #396]	; (8007960 <__ieee754_pow+0x3b8>)
 80077d4:	f7f8 fd78 	bl	80002c8 <__aeabi_dsub>
 80077d8:	a355      	add	r3, pc, #340	; (adr r3, 8007930 <__ieee754_pow+0x388>)
 80077da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80077de:	4604      	mov	r4, r0
 80077e0:	460d      	mov	r5, r1
 80077e2:	f7f8 ff29 	bl	8000638 <__aeabi_dmul>
 80077e6:	a354      	add	r3, pc, #336	; (adr r3, 8007938 <__ieee754_pow+0x390>)
 80077e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80077ec:	4606      	mov	r6, r0
 80077ee:	460f      	mov	r7, r1
 80077f0:	4620      	mov	r0, r4
 80077f2:	4629      	mov	r1, r5
 80077f4:	f7f8 ff20 	bl	8000638 <__aeabi_dmul>
 80077f8:	2200      	movs	r2, #0
 80077fa:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80077fe:	4b59      	ldr	r3, [pc, #356]	; (8007964 <__ieee754_pow+0x3bc>)
 8007800:	4620      	mov	r0, r4
 8007802:	4629      	mov	r1, r5
 8007804:	f7f8 ff18 	bl	8000638 <__aeabi_dmul>
 8007808:	4602      	mov	r2, r0
 800780a:	460b      	mov	r3, r1
 800780c:	a14c      	add	r1, pc, #304	; (adr r1, 8007940 <__ieee754_pow+0x398>)
 800780e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007812:	f7f8 fd59 	bl	80002c8 <__aeabi_dsub>
 8007816:	4622      	mov	r2, r4
 8007818:	462b      	mov	r3, r5
 800781a:	f7f8 ff0d 	bl	8000638 <__aeabi_dmul>
 800781e:	4602      	mov	r2, r0
 8007820:	460b      	mov	r3, r1
 8007822:	2000      	movs	r0, #0
 8007824:	4950      	ldr	r1, [pc, #320]	; (8007968 <__ieee754_pow+0x3c0>)
 8007826:	f7f8 fd4f 	bl	80002c8 <__aeabi_dsub>
 800782a:	4622      	mov	r2, r4
 800782c:	462b      	mov	r3, r5
 800782e:	4680      	mov	r8, r0
 8007830:	4689      	mov	r9, r1
 8007832:	4620      	mov	r0, r4
 8007834:	4629      	mov	r1, r5
 8007836:	f7f8 feff 	bl	8000638 <__aeabi_dmul>
 800783a:	4602      	mov	r2, r0
 800783c:	460b      	mov	r3, r1
 800783e:	4640      	mov	r0, r8
 8007840:	4649      	mov	r1, r9
 8007842:	f7f8 fef9 	bl	8000638 <__aeabi_dmul>
 8007846:	a340      	add	r3, pc, #256	; (adr r3, 8007948 <__ieee754_pow+0x3a0>)
 8007848:	e9d3 2300 	ldrd	r2, r3, [r3]
 800784c:	f7f8 fef4 	bl	8000638 <__aeabi_dmul>
 8007850:	4602      	mov	r2, r0
 8007852:	460b      	mov	r3, r1
 8007854:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007858:	f7f8 fd36 	bl	80002c8 <__aeabi_dsub>
 800785c:	4602      	mov	r2, r0
 800785e:	460b      	mov	r3, r1
 8007860:	4604      	mov	r4, r0
 8007862:	460d      	mov	r5, r1
 8007864:	4630      	mov	r0, r6
 8007866:	4639      	mov	r1, r7
 8007868:	f7f8 fd30 	bl	80002cc <__adddf3>
 800786c:	2000      	movs	r0, #0
 800786e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8007872:	4632      	mov	r2, r6
 8007874:	463b      	mov	r3, r7
 8007876:	f7f8 fd27 	bl	80002c8 <__aeabi_dsub>
 800787a:	4602      	mov	r2, r0
 800787c:	460b      	mov	r3, r1
 800787e:	4620      	mov	r0, r4
 8007880:	4629      	mov	r1, r5
 8007882:	f7f8 fd21 	bl	80002c8 <__aeabi_dsub>
 8007886:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8007888:	f10b 33ff 	add.w	r3, fp, #4294967295
 800788c:	4313      	orrs	r3, r2
 800788e:	4606      	mov	r6, r0
 8007890:	460f      	mov	r7, r1
 8007892:	f040 81eb 	bne.w	8007c6c <__ieee754_pow+0x6c4>
 8007896:	ed9f 7b2e 	vldr	d7, [pc, #184]	; 8007950 <__ieee754_pow+0x3a8>
 800789a:	e9dd 4500 	ldrd	r4, r5, [sp]
 800789e:	2400      	movs	r4, #0
 80078a0:	4622      	mov	r2, r4
 80078a2:	462b      	mov	r3, r5
 80078a4:	e9dd 0100 	ldrd	r0, r1, [sp]
 80078a8:	ed8d 7b02 	vstr	d7, [sp, #8]
 80078ac:	f7f8 fd0c 	bl	80002c8 <__aeabi_dsub>
 80078b0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80078b4:	f7f8 fec0 	bl	8000638 <__aeabi_dmul>
 80078b8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80078bc:	4680      	mov	r8, r0
 80078be:	4689      	mov	r9, r1
 80078c0:	4630      	mov	r0, r6
 80078c2:	4639      	mov	r1, r7
 80078c4:	f7f8 feb8 	bl	8000638 <__aeabi_dmul>
 80078c8:	4602      	mov	r2, r0
 80078ca:	460b      	mov	r3, r1
 80078cc:	4640      	mov	r0, r8
 80078ce:	4649      	mov	r1, r9
 80078d0:	f7f8 fcfc 	bl	80002cc <__adddf3>
 80078d4:	4622      	mov	r2, r4
 80078d6:	462b      	mov	r3, r5
 80078d8:	4680      	mov	r8, r0
 80078da:	4689      	mov	r9, r1
 80078dc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80078e0:	f7f8 feaa 	bl	8000638 <__aeabi_dmul>
 80078e4:	460b      	mov	r3, r1
 80078e6:	4604      	mov	r4, r0
 80078e8:	460d      	mov	r5, r1
 80078ea:	4602      	mov	r2, r0
 80078ec:	4649      	mov	r1, r9
 80078ee:	4640      	mov	r0, r8
 80078f0:	e9cd 4500 	strd	r4, r5, [sp]
 80078f4:	f7f8 fcea 	bl	80002cc <__adddf3>
 80078f8:	4b1c      	ldr	r3, [pc, #112]	; (800796c <__ieee754_pow+0x3c4>)
 80078fa:	4299      	cmp	r1, r3
 80078fc:	4606      	mov	r6, r0
 80078fe:	460f      	mov	r7, r1
 8007900:	468b      	mov	fp, r1
 8007902:	f340 82f7 	ble.w	8007ef4 <__ieee754_pow+0x94c>
 8007906:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 800790a:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 800790e:	4303      	orrs	r3, r0
 8007910:	f000 81ea 	beq.w	8007ce8 <__ieee754_pow+0x740>
 8007914:	a310      	add	r3, pc, #64	; (adr r3, 8007958 <__ieee754_pow+0x3b0>)
 8007916:	e9d3 2300 	ldrd	r2, r3, [r3]
 800791a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800791e:	f7f8 fe8b 	bl	8000638 <__aeabi_dmul>
 8007922:	a30d      	add	r3, pc, #52	; (adr r3, 8007958 <__ieee754_pow+0x3b0>)
 8007924:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007928:	e6d5      	b.n	80076d6 <__ieee754_pow+0x12e>
 800792a:	bf00      	nop
 800792c:	f3af 8000 	nop.w
 8007930:	60000000 	.word	0x60000000
 8007934:	3ff71547 	.word	0x3ff71547
 8007938:	f85ddf44 	.word	0xf85ddf44
 800793c:	3e54ae0b 	.word	0x3e54ae0b
 8007940:	55555555 	.word	0x55555555
 8007944:	3fd55555 	.word	0x3fd55555
 8007948:	652b82fe 	.word	0x652b82fe
 800794c:	3ff71547 	.word	0x3ff71547
 8007950:	00000000 	.word	0x00000000
 8007954:	bff00000 	.word	0xbff00000
 8007958:	8800759c 	.word	0x8800759c
 800795c:	7e37e43c 	.word	0x7e37e43c
 8007960:	3ff00000 	.word	0x3ff00000
 8007964:	3fd00000 	.word	0x3fd00000
 8007968:	3fe00000 	.word	0x3fe00000
 800796c:	408fffff 	.word	0x408fffff
 8007970:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 8007974:	f04f 0200 	mov.w	r2, #0
 8007978:	da05      	bge.n	8007986 <__ieee754_pow+0x3de>
 800797a:	4bd3      	ldr	r3, [pc, #844]	; (8007cc8 <__ieee754_pow+0x720>)
 800797c:	f7f8 fe5c 	bl	8000638 <__aeabi_dmul>
 8007980:	f06f 0234 	mvn.w	r2, #52	; 0x34
 8007984:	460c      	mov	r4, r1
 8007986:	1523      	asrs	r3, r4, #20
 8007988:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 800798c:	4413      	add	r3, r2
 800798e:	9309      	str	r3, [sp, #36]	; 0x24
 8007990:	4bce      	ldr	r3, [pc, #824]	; (8007ccc <__ieee754_pow+0x724>)
 8007992:	f3c4 0413 	ubfx	r4, r4, #0, #20
 8007996:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 800799a:	429c      	cmp	r4, r3
 800799c:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 80079a0:	dd08      	ble.n	80079b4 <__ieee754_pow+0x40c>
 80079a2:	4bcb      	ldr	r3, [pc, #812]	; (8007cd0 <__ieee754_pow+0x728>)
 80079a4:	429c      	cmp	r4, r3
 80079a6:	f340 815e 	ble.w	8007c66 <__ieee754_pow+0x6be>
 80079aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80079ac:	3301      	adds	r3, #1
 80079ae:	9309      	str	r3, [sp, #36]	; 0x24
 80079b0:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 80079b4:	f04f 0a00 	mov.w	sl, #0
 80079b8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80079bc:	930c      	str	r3, [sp, #48]	; 0x30
 80079be:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80079c0:	4bc4      	ldr	r3, [pc, #784]	; (8007cd4 <__ieee754_pow+0x72c>)
 80079c2:	4413      	add	r3, r2
 80079c4:	ed93 7b00 	vldr	d7, [r3]
 80079c8:	4629      	mov	r1, r5
 80079ca:	ec53 2b17 	vmov	r2, r3, d7
 80079ce:	ed8d 7b06 	vstr	d7, [sp, #24]
 80079d2:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80079d6:	f7f8 fc77 	bl	80002c8 <__aeabi_dsub>
 80079da:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80079de:	4606      	mov	r6, r0
 80079e0:	460f      	mov	r7, r1
 80079e2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80079e6:	f7f8 fc71 	bl	80002cc <__adddf3>
 80079ea:	4602      	mov	r2, r0
 80079ec:	460b      	mov	r3, r1
 80079ee:	2000      	movs	r0, #0
 80079f0:	49b9      	ldr	r1, [pc, #740]	; (8007cd8 <__ieee754_pow+0x730>)
 80079f2:	f7f8 ff4b 	bl	800088c <__aeabi_ddiv>
 80079f6:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 80079fa:	4602      	mov	r2, r0
 80079fc:	460b      	mov	r3, r1
 80079fe:	4630      	mov	r0, r6
 8007a00:	4639      	mov	r1, r7
 8007a02:	f7f8 fe19 	bl	8000638 <__aeabi_dmul>
 8007a06:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8007a0a:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8007a0e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8007a12:	2300      	movs	r3, #0
 8007a14:	9302      	str	r3, [sp, #8]
 8007a16:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8007a1a:	106d      	asrs	r5, r5, #1
 8007a1c:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 8007a20:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 8007a24:	2200      	movs	r2, #0
 8007a26:	eb05 438a 	add.w	r3, r5, sl, lsl #18
 8007a2a:	4640      	mov	r0, r8
 8007a2c:	4649      	mov	r1, r9
 8007a2e:	4614      	mov	r4, r2
 8007a30:	461d      	mov	r5, r3
 8007a32:	f7f8 fe01 	bl	8000638 <__aeabi_dmul>
 8007a36:	4602      	mov	r2, r0
 8007a38:	460b      	mov	r3, r1
 8007a3a:	4630      	mov	r0, r6
 8007a3c:	4639      	mov	r1, r7
 8007a3e:	f7f8 fc43 	bl	80002c8 <__aeabi_dsub>
 8007a42:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8007a46:	4606      	mov	r6, r0
 8007a48:	460f      	mov	r7, r1
 8007a4a:	4620      	mov	r0, r4
 8007a4c:	4629      	mov	r1, r5
 8007a4e:	f7f8 fc3b 	bl	80002c8 <__aeabi_dsub>
 8007a52:	4602      	mov	r2, r0
 8007a54:	460b      	mov	r3, r1
 8007a56:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8007a5a:	f7f8 fc35 	bl	80002c8 <__aeabi_dsub>
 8007a5e:	4642      	mov	r2, r8
 8007a60:	464b      	mov	r3, r9
 8007a62:	f7f8 fde9 	bl	8000638 <__aeabi_dmul>
 8007a66:	4602      	mov	r2, r0
 8007a68:	460b      	mov	r3, r1
 8007a6a:	4630      	mov	r0, r6
 8007a6c:	4639      	mov	r1, r7
 8007a6e:	f7f8 fc2b 	bl	80002c8 <__aeabi_dsub>
 8007a72:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8007a76:	f7f8 fddf 	bl	8000638 <__aeabi_dmul>
 8007a7a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007a7e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8007a82:	4610      	mov	r0, r2
 8007a84:	4619      	mov	r1, r3
 8007a86:	f7f8 fdd7 	bl	8000638 <__aeabi_dmul>
 8007a8a:	a37b      	add	r3, pc, #492	; (adr r3, 8007c78 <__ieee754_pow+0x6d0>)
 8007a8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a90:	4604      	mov	r4, r0
 8007a92:	460d      	mov	r5, r1
 8007a94:	f7f8 fdd0 	bl	8000638 <__aeabi_dmul>
 8007a98:	a379      	add	r3, pc, #484	; (adr r3, 8007c80 <__ieee754_pow+0x6d8>)
 8007a9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a9e:	f7f8 fc15 	bl	80002cc <__adddf3>
 8007aa2:	4622      	mov	r2, r4
 8007aa4:	462b      	mov	r3, r5
 8007aa6:	f7f8 fdc7 	bl	8000638 <__aeabi_dmul>
 8007aaa:	a377      	add	r3, pc, #476	; (adr r3, 8007c88 <__ieee754_pow+0x6e0>)
 8007aac:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ab0:	f7f8 fc0c 	bl	80002cc <__adddf3>
 8007ab4:	4622      	mov	r2, r4
 8007ab6:	462b      	mov	r3, r5
 8007ab8:	f7f8 fdbe 	bl	8000638 <__aeabi_dmul>
 8007abc:	a374      	add	r3, pc, #464	; (adr r3, 8007c90 <__ieee754_pow+0x6e8>)
 8007abe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ac2:	f7f8 fc03 	bl	80002cc <__adddf3>
 8007ac6:	4622      	mov	r2, r4
 8007ac8:	462b      	mov	r3, r5
 8007aca:	f7f8 fdb5 	bl	8000638 <__aeabi_dmul>
 8007ace:	a372      	add	r3, pc, #456	; (adr r3, 8007c98 <__ieee754_pow+0x6f0>)
 8007ad0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ad4:	f7f8 fbfa 	bl	80002cc <__adddf3>
 8007ad8:	4622      	mov	r2, r4
 8007ada:	462b      	mov	r3, r5
 8007adc:	f7f8 fdac 	bl	8000638 <__aeabi_dmul>
 8007ae0:	a36f      	add	r3, pc, #444	; (adr r3, 8007ca0 <__ieee754_pow+0x6f8>)
 8007ae2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ae6:	f7f8 fbf1 	bl	80002cc <__adddf3>
 8007aea:	4622      	mov	r2, r4
 8007aec:	4606      	mov	r6, r0
 8007aee:	460f      	mov	r7, r1
 8007af0:	462b      	mov	r3, r5
 8007af2:	4620      	mov	r0, r4
 8007af4:	4629      	mov	r1, r5
 8007af6:	f7f8 fd9f 	bl	8000638 <__aeabi_dmul>
 8007afa:	4602      	mov	r2, r0
 8007afc:	460b      	mov	r3, r1
 8007afe:	4630      	mov	r0, r6
 8007b00:	4639      	mov	r1, r7
 8007b02:	f7f8 fd99 	bl	8000638 <__aeabi_dmul>
 8007b06:	4642      	mov	r2, r8
 8007b08:	4604      	mov	r4, r0
 8007b0a:	460d      	mov	r5, r1
 8007b0c:	464b      	mov	r3, r9
 8007b0e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8007b12:	f7f8 fbdb 	bl	80002cc <__adddf3>
 8007b16:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8007b1a:	f7f8 fd8d 	bl	8000638 <__aeabi_dmul>
 8007b1e:	4622      	mov	r2, r4
 8007b20:	462b      	mov	r3, r5
 8007b22:	f7f8 fbd3 	bl	80002cc <__adddf3>
 8007b26:	4642      	mov	r2, r8
 8007b28:	4606      	mov	r6, r0
 8007b2a:	460f      	mov	r7, r1
 8007b2c:	464b      	mov	r3, r9
 8007b2e:	4640      	mov	r0, r8
 8007b30:	4649      	mov	r1, r9
 8007b32:	f7f8 fd81 	bl	8000638 <__aeabi_dmul>
 8007b36:	2200      	movs	r2, #0
 8007b38:	4b68      	ldr	r3, [pc, #416]	; (8007cdc <__ieee754_pow+0x734>)
 8007b3a:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8007b3e:	f7f8 fbc5 	bl	80002cc <__adddf3>
 8007b42:	4632      	mov	r2, r6
 8007b44:	463b      	mov	r3, r7
 8007b46:	f7f8 fbc1 	bl	80002cc <__adddf3>
 8007b4a:	9802      	ldr	r0, [sp, #8]
 8007b4c:	460d      	mov	r5, r1
 8007b4e:	4604      	mov	r4, r0
 8007b50:	4602      	mov	r2, r0
 8007b52:	460b      	mov	r3, r1
 8007b54:	4640      	mov	r0, r8
 8007b56:	4649      	mov	r1, r9
 8007b58:	f7f8 fd6e 	bl	8000638 <__aeabi_dmul>
 8007b5c:	2200      	movs	r2, #0
 8007b5e:	4680      	mov	r8, r0
 8007b60:	4689      	mov	r9, r1
 8007b62:	4b5e      	ldr	r3, [pc, #376]	; (8007cdc <__ieee754_pow+0x734>)
 8007b64:	4620      	mov	r0, r4
 8007b66:	4629      	mov	r1, r5
 8007b68:	f7f8 fbae 	bl	80002c8 <__aeabi_dsub>
 8007b6c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8007b70:	f7f8 fbaa 	bl	80002c8 <__aeabi_dsub>
 8007b74:	4602      	mov	r2, r0
 8007b76:	460b      	mov	r3, r1
 8007b78:	4630      	mov	r0, r6
 8007b7a:	4639      	mov	r1, r7
 8007b7c:	f7f8 fba4 	bl	80002c8 <__aeabi_dsub>
 8007b80:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007b84:	f7f8 fd58 	bl	8000638 <__aeabi_dmul>
 8007b88:	4622      	mov	r2, r4
 8007b8a:	4606      	mov	r6, r0
 8007b8c:	460f      	mov	r7, r1
 8007b8e:	462b      	mov	r3, r5
 8007b90:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007b94:	f7f8 fd50 	bl	8000638 <__aeabi_dmul>
 8007b98:	4602      	mov	r2, r0
 8007b9a:	460b      	mov	r3, r1
 8007b9c:	4630      	mov	r0, r6
 8007b9e:	4639      	mov	r1, r7
 8007ba0:	f7f8 fb94 	bl	80002cc <__adddf3>
 8007ba4:	4606      	mov	r6, r0
 8007ba6:	460f      	mov	r7, r1
 8007ba8:	4602      	mov	r2, r0
 8007baa:	460b      	mov	r3, r1
 8007bac:	4640      	mov	r0, r8
 8007bae:	4649      	mov	r1, r9
 8007bb0:	f7f8 fb8c 	bl	80002cc <__adddf3>
 8007bb4:	9802      	ldr	r0, [sp, #8]
 8007bb6:	a33c      	add	r3, pc, #240	; (adr r3, 8007ca8 <__ieee754_pow+0x700>)
 8007bb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bbc:	4604      	mov	r4, r0
 8007bbe:	460d      	mov	r5, r1
 8007bc0:	f7f8 fd3a 	bl	8000638 <__aeabi_dmul>
 8007bc4:	4642      	mov	r2, r8
 8007bc6:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8007bca:	464b      	mov	r3, r9
 8007bcc:	4620      	mov	r0, r4
 8007bce:	4629      	mov	r1, r5
 8007bd0:	f7f8 fb7a 	bl	80002c8 <__aeabi_dsub>
 8007bd4:	4602      	mov	r2, r0
 8007bd6:	460b      	mov	r3, r1
 8007bd8:	4630      	mov	r0, r6
 8007bda:	4639      	mov	r1, r7
 8007bdc:	f7f8 fb74 	bl	80002c8 <__aeabi_dsub>
 8007be0:	a333      	add	r3, pc, #204	; (adr r3, 8007cb0 <__ieee754_pow+0x708>)
 8007be2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007be6:	f7f8 fd27 	bl	8000638 <__aeabi_dmul>
 8007bea:	a333      	add	r3, pc, #204	; (adr r3, 8007cb8 <__ieee754_pow+0x710>)
 8007bec:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bf0:	4606      	mov	r6, r0
 8007bf2:	460f      	mov	r7, r1
 8007bf4:	4620      	mov	r0, r4
 8007bf6:	4629      	mov	r1, r5
 8007bf8:	f7f8 fd1e 	bl	8000638 <__aeabi_dmul>
 8007bfc:	4602      	mov	r2, r0
 8007bfe:	460b      	mov	r3, r1
 8007c00:	4630      	mov	r0, r6
 8007c02:	4639      	mov	r1, r7
 8007c04:	f7f8 fb62 	bl	80002cc <__adddf3>
 8007c08:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007c0a:	4b35      	ldr	r3, [pc, #212]	; (8007ce0 <__ieee754_pow+0x738>)
 8007c0c:	4413      	add	r3, r2
 8007c0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c12:	f7f8 fb5b 	bl	80002cc <__adddf3>
 8007c16:	4604      	mov	r4, r0
 8007c18:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007c1a:	460d      	mov	r5, r1
 8007c1c:	f7f8 fca2 	bl	8000564 <__aeabi_i2d>
 8007c20:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007c22:	4b30      	ldr	r3, [pc, #192]	; (8007ce4 <__ieee754_pow+0x73c>)
 8007c24:	4413      	add	r3, r2
 8007c26:	e9d3 8900 	ldrd	r8, r9, [r3]
 8007c2a:	4606      	mov	r6, r0
 8007c2c:	460f      	mov	r7, r1
 8007c2e:	4622      	mov	r2, r4
 8007c30:	462b      	mov	r3, r5
 8007c32:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007c36:	f7f8 fb49 	bl	80002cc <__adddf3>
 8007c3a:	4642      	mov	r2, r8
 8007c3c:	464b      	mov	r3, r9
 8007c3e:	f7f8 fb45 	bl	80002cc <__adddf3>
 8007c42:	4632      	mov	r2, r6
 8007c44:	463b      	mov	r3, r7
 8007c46:	f7f8 fb41 	bl	80002cc <__adddf3>
 8007c4a:	9802      	ldr	r0, [sp, #8]
 8007c4c:	4632      	mov	r2, r6
 8007c4e:	463b      	mov	r3, r7
 8007c50:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8007c54:	f7f8 fb38 	bl	80002c8 <__aeabi_dsub>
 8007c58:	4642      	mov	r2, r8
 8007c5a:	464b      	mov	r3, r9
 8007c5c:	f7f8 fb34 	bl	80002c8 <__aeabi_dsub>
 8007c60:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8007c64:	e607      	b.n	8007876 <__ieee754_pow+0x2ce>
 8007c66:	f04f 0a01 	mov.w	sl, #1
 8007c6a:	e6a5      	b.n	80079b8 <__ieee754_pow+0x410>
 8007c6c:	ed9f 7b14 	vldr	d7, [pc, #80]	; 8007cc0 <__ieee754_pow+0x718>
 8007c70:	e613      	b.n	800789a <__ieee754_pow+0x2f2>
 8007c72:	bf00      	nop
 8007c74:	f3af 8000 	nop.w
 8007c78:	4a454eef 	.word	0x4a454eef
 8007c7c:	3fca7e28 	.word	0x3fca7e28
 8007c80:	93c9db65 	.word	0x93c9db65
 8007c84:	3fcd864a 	.word	0x3fcd864a
 8007c88:	a91d4101 	.word	0xa91d4101
 8007c8c:	3fd17460 	.word	0x3fd17460
 8007c90:	518f264d 	.word	0x518f264d
 8007c94:	3fd55555 	.word	0x3fd55555
 8007c98:	db6fabff 	.word	0xdb6fabff
 8007c9c:	3fdb6db6 	.word	0x3fdb6db6
 8007ca0:	33333303 	.word	0x33333303
 8007ca4:	3fe33333 	.word	0x3fe33333
 8007ca8:	e0000000 	.word	0xe0000000
 8007cac:	3feec709 	.word	0x3feec709
 8007cb0:	dc3a03fd 	.word	0xdc3a03fd
 8007cb4:	3feec709 	.word	0x3feec709
 8007cb8:	145b01f5 	.word	0x145b01f5
 8007cbc:	be3e2fe0 	.word	0xbe3e2fe0
 8007cc0:	00000000 	.word	0x00000000
 8007cc4:	3ff00000 	.word	0x3ff00000
 8007cc8:	43400000 	.word	0x43400000
 8007ccc:	0003988e 	.word	0x0003988e
 8007cd0:	000bb679 	.word	0x000bb679
 8007cd4:	08008b30 	.word	0x08008b30
 8007cd8:	3ff00000 	.word	0x3ff00000
 8007cdc:	40080000 	.word	0x40080000
 8007ce0:	08008b50 	.word	0x08008b50
 8007ce4:	08008b40 	.word	0x08008b40
 8007ce8:	a3b4      	add	r3, pc, #720	; (adr r3, 8007fbc <__ieee754_pow+0xa14>)
 8007cea:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007cee:	4640      	mov	r0, r8
 8007cf0:	4649      	mov	r1, r9
 8007cf2:	f7f8 faeb 	bl	80002cc <__adddf3>
 8007cf6:	4622      	mov	r2, r4
 8007cf8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8007cfc:	462b      	mov	r3, r5
 8007cfe:	4630      	mov	r0, r6
 8007d00:	4639      	mov	r1, r7
 8007d02:	f7f8 fae1 	bl	80002c8 <__aeabi_dsub>
 8007d06:	4602      	mov	r2, r0
 8007d08:	460b      	mov	r3, r1
 8007d0a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8007d0e:	f7f8 ff23 	bl	8000b58 <__aeabi_dcmpgt>
 8007d12:	2800      	cmp	r0, #0
 8007d14:	f47f adfe 	bne.w	8007914 <__ieee754_pow+0x36c>
 8007d18:	4aa3      	ldr	r2, [pc, #652]	; (8007fa8 <__ieee754_pow+0xa00>)
 8007d1a:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8007d1e:	4293      	cmp	r3, r2
 8007d20:	f340 810a 	ble.w	8007f38 <__ieee754_pow+0x990>
 8007d24:	151b      	asrs	r3, r3, #20
 8007d26:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 8007d2a:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 8007d2e:	fa4a f303 	asr.w	r3, sl, r3
 8007d32:	445b      	add	r3, fp
 8007d34:	f3c3 520a 	ubfx	r2, r3, #20, #11
 8007d38:	4e9c      	ldr	r6, [pc, #624]	; (8007fac <__ieee754_pow+0xa04>)
 8007d3a:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 8007d3e:	4116      	asrs	r6, r2
 8007d40:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 8007d44:	2000      	movs	r0, #0
 8007d46:	ea23 0106 	bic.w	r1, r3, r6
 8007d4a:	f1c2 0214 	rsb	r2, r2, #20
 8007d4e:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 8007d52:	fa4a fa02 	asr.w	sl, sl, r2
 8007d56:	f1bb 0f00 	cmp.w	fp, #0
 8007d5a:	4602      	mov	r2, r0
 8007d5c:	460b      	mov	r3, r1
 8007d5e:	4620      	mov	r0, r4
 8007d60:	4629      	mov	r1, r5
 8007d62:	bfb8      	it	lt
 8007d64:	f1ca 0a00 	rsblt	sl, sl, #0
 8007d68:	f7f8 faae 	bl	80002c8 <__aeabi_dsub>
 8007d6c:	e9cd 0100 	strd	r0, r1, [sp]
 8007d70:	4642      	mov	r2, r8
 8007d72:	464b      	mov	r3, r9
 8007d74:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007d78:	f7f8 faa8 	bl	80002cc <__adddf3>
 8007d7c:	2000      	movs	r0, #0
 8007d7e:	a378      	add	r3, pc, #480	; (adr r3, 8007f60 <__ieee754_pow+0x9b8>)
 8007d80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d84:	4604      	mov	r4, r0
 8007d86:	460d      	mov	r5, r1
 8007d88:	f7f8 fc56 	bl	8000638 <__aeabi_dmul>
 8007d8c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007d90:	4606      	mov	r6, r0
 8007d92:	460f      	mov	r7, r1
 8007d94:	4620      	mov	r0, r4
 8007d96:	4629      	mov	r1, r5
 8007d98:	f7f8 fa96 	bl	80002c8 <__aeabi_dsub>
 8007d9c:	4602      	mov	r2, r0
 8007d9e:	460b      	mov	r3, r1
 8007da0:	4640      	mov	r0, r8
 8007da2:	4649      	mov	r1, r9
 8007da4:	f7f8 fa90 	bl	80002c8 <__aeabi_dsub>
 8007da8:	a36f      	add	r3, pc, #444	; (adr r3, 8007f68 <__ieee754_pow+0x9c0>)
 8007daa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007dae:	f7f8 fc43 	bl	8000638 <__aeabi_dmul>
 8007db2:	a36f      	add	r3, pc, #444	; (adr r3, 8007f70 <__ieee754_pow+0x9c8>)
 8007db4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007db8:	4680      	mov	r8, r0
 8007dba:	4689      	mov	r9, r1
 8007dbc:	4620      	mov	r0, r4
 8007dbe:	4629      	mov	r1, r5
 8007dc0:	f7f8 fc3a 	bl	8000638 <__aeabi_dmul>
 8007dc4:	4602      	mov	r2, r0
 8007dc6:	460b      	mov	r3, r1
 8007dc8:	4640      	mov	r0, r8
 8007dca:	4649      	mov	r1, r9
 8007dcc:	f7f8 fa7e 	bl	80002cc <__adddf3>
 8007dd0:	4604      	mov	r4, r0
 8007dd2:	460d      	mov	r5, r1
 8007dd4:	4602      	mov	r2, r0
 8007dd6:	460b      	mov	r3, r1
 8007dd8:	4630      	mov	r0, r6
 8007dda:	4639      	mov	r1, r7
 8007ddc:	f7f8 fa76 	bl	80002cc <__adddf3>
 8007de0:	4632      	mov	r2, r6
 8007de2:	463b      	mov	r3, r7
 8007de4:	4680      	mov	r8, r0
 8007de6:	4689      	mov	r9, r1
 8007de8:	f7f8 fa6e 	bl	80002c8 <__aeabi_dsub>
 8007dec:	4602      	mov	r2, r0
 8007dee:	460b      	mov	r3, r1
 8007df0:	4620      	mov	r0, r4
 8007df2:	4629      	mov	r1, r5
 8007df4:	f7f8 fa68 	bl	80002c8 <__aeabi_dsub>
 8007df8:	4642      	mov	r2, r8
 8007dfa:	4606      	mov	r6, r0
 8007dfc:	460f      	mov	r7, r1
 8007dfe:	464b      	mov	r3, r9
 8007e00:	4640      	mov	r0, r8
 8007e02:	4649      	mov	r1, r9
 8007e04:	f7f8 fc18 	bl	8000638 <__aeabi_dmul>
 8007e08:	a35b      	add	r3, pc, #364	; (adr r3, 8007f78 <__ieee754_pow+0x9d0>)
 8007e0a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e0e:	4604      	mov	r4, r0
 8007e10:	460d      	mov	r5, r1
 8007e12:	f7f8 fc11 	bl	8000638 <__aeabi_dmul>
 8007e16:	a35a      	add	r3, pc, #360	; (adr r3, 8007f80 <__ieee754_pow+0x9d8>)
 8007e18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e1c:	f7f8 fa54 	bl	80002c8 <__aeabi_dsub>
 8007e20:	4622      	mov	r2, r4
 8007e22:	462b      	mov	r3, r5
 8007e24:	f7f8 fc08 	bl	8000638 <__aeabi_dmul>
 8007e28:	a357      	add	r3, pc, #348	; (adr r3, 8007f88 <__ieee754_pow+0x9e0>)
 8007e2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e2e:	f7f8 fa4d 	bl	80002cc <__adddf3>
 8007e32:	4622      	mov	r2, r4
 8007e34:	462b      	mov	r3, r5
 8007e36:	f7f8 fbff 	bl	8000638 <__aeabi_dmul>
 8007e3a:	a355      	add	r3, pc, #340	; (adr r3, 8007f90 <__ieee754_pow+0x9e8>)
 8007e3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e40:	f7f8 fa42 	bl	80002c8 <__aeabi_dsub>
 8007e44:	4622      	mov	r2, r4
 8007e46:	462b      	mov	r3, r5
 8007e48:	f7f8 fbf6 	bl	8000638 <__aeabi_dmul>
 8007e4c:	a352      	add	r3, pc, #328	; (adr r3, 8007f98 <__ieee754_pow+0x9f0>)
 8007e4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e52:	f7f8 fa3b 	bl	80002cc <__adddf3>
 8007e56:	4622      	mov	r2, r4
 8007e58:	462b      	mov	r3, r5
 8007e5a:	f7f8 fbed 	bl	8000638 <__aeabi_dmul>
 8007e5e:	4602      	mov	r2, r0
 8007e60:	460b      	mov	r3, r1
 8007e62:	4640      	mov	r0, r8
 8007e64:	4649      	mov	r1, r9
 8007e66:	f7f8 fa2f 	bl	80002c8 <__aeabi_dsub>
 8007e6a:	4604      	mov	r4, r0
 8007e6c:	460d      	mov	r5, r1
 8007e6e:	4602      	mov	r2, r0
 8007e70:	460b      	mov	r3, r1
 8007e72:	4640      	mov	r0, r8
 8007e74:	4649      	mov	r1, r9
 8007e76:	f7f8 fbdf 	bl	8000638 <__aeabi_dmul>
 8007e7a:	2200      	movs	r2, #0
 8007e7c:	e9cd 0100 	strd	r0, r1, [sp]
 8007e80:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8007e84:	4620      	mov	r0, r4
 8007e86:	4629      	mov	r1, r5
 8007e88:	f7f8 fa1e 	bl	80002c8 <__aeabi_dsub>
 8007e8c:	4602      	mov	r2, r0
 8007e8e:	460b      	mov	r3, r1
 8007e90:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007e94:	f7f8 fcfa 	bl	800088c <__aeabi_ddiv>
 8007e98:	4632      	mov	r2, r6
 8007e9a:	4604      	mov	r4, r0
 8007e9c:	460d      	mov	r5, r1
 8007e9e:	463b      	mov	r3, r7
 8007ea0:	4640      	mov	r0, r8
 8007ea2:	4649      	mov	r1, r9
 8007ea4:	f7f8 fbc8 	bl	8000638 <__aeabi_dmul>
 8007ea8:	4632      	mov	r2, r6
 8007eaa:	463b      	mov	r3, r7
 8007eac:	f7f8 fa0e 	bl	80002cc <__adddf3>
 8007eb0:	4602      	mov	r2, r0
 8007eb2:	460b      	mov	r3, r1
 8007eb4:	4620      	mov	r0, r4
 8007eb6:	4629      	mov	r1, r5
 8007eb8:	f7f8 fa06 	bl	80002c8 <__aeabi_dsub>
 8007ebc:	4642      	mov	r2, r8
 8007ebe:	464b      	mov	r3, r9
 8007ec0:	f7f8 fa02 	bl	80002c8 <__aeabi_dsub>
 8007ec4:	4602      	mov	r2, r0
 8007ec6:	460b      	mov	r3, r1
 8007ec8:	2000      	movs	r0, #0
 8007eca:	4939      	ldr	r1, [pc, #228]	; (8007fb0 <__ieee754_pow+0xa08>)
 8007ecc:	f7f8 f9fc 	bl	80002c8 <__aeabi_dsub>
 8007ed0:	eb01 540a 	add.w	r4, r1, sl, lsl #20
 8007ed4:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 8007ed8:	4602      	mov	r2, r0
 8007eda:	460b      	mov	r3, r1
 8007edc:	da2f      	bge.n	8007f3e <__ieee754_pow+0x996>
 8007ede:	4650      	mov	r0, sl
 8007ee0:	ec43 2b10 	vmov	d0, r2, r3
 8007ee4:	f000 f9c0 	bl	8008268 <scalbn>
 8007ee8:	ec51 0b10 	vmov	r0, r1, d0
 8007eec:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007ef0:	f7ff bbf1 	b.w	80076d6 <__ieee754_pow+0x12e>
 8007ef4:	4b2f      	ldr	r3, [pc, #188]	; (8007fb4 <__ieee754_pow+0xa0c>)
 8007ef6:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8007efa:	429e      	cmp	r6, r3
 8007efc:	f77f af0c 	ble.w	8007d18 <__ieee754_pow+0x770>
 8007f00:	4b2d      	ldr	r3, [pc, #180]	; (8007fb8 <__ieee754_pow+0xa10>)
 8007f02:	440b      	add	r3, r1
 8007f04:	4303      	orrs	r3, r0
 8007f06:	d00b      	beq.n	8007f20 <__ieee754_pow+0x978>
 8007f08:	a325      	add	r3, pc, #148	; (adr r3, 8007fa0 <__ieee754_pow+0x9f8>)
 8007f0a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f0e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007f12:	f7f8 fb91 	bl	8000638 <__aeabi_dmul>
 8007f16:	a322      	add	r3, pc, #136	; (adr r3, 8007fa0 <__ieee754_pow+0x9f8>)
 8007f18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f1c:	f7ff bbdb 	b.w	80076d6 <__ieee754_pow+0x12e>
 8007f20:	4622      	mov	r2, r4
 8007f22:	462b      	mov	r3, r5
 8007f24:	f7f8 f9d0 	bl	80002c8 <__aeabi_dsub>
 8007f28:	4642      	mov	r2, r8
 8007f2a:	464b      	mov	r3, r9
 8007f2c:	f7f8 fe0a 	bl	8000b44 <__aeabi_dcmpge>
 8007f30:	2800      	cmp	r0, #0
 8007f32:	f43f aef1 	beq.w	8007d18 <__ieee754_pow+0x770>
 8007f36:	e7e7      	b.n	8007f08 <__ieee754_pow+0x960>
 8007f38:	f04f 0a00 	mov.w	sl, #0
 8007f3c:	e718      	b.n	8007d70 <__ieee754_pow+0x7c8>
 8007f3e:	4621      	mov	r1, r4
 8007f40:	e7d4      	b.n	8007eec <__ieee754_pow+0x944>
 8007f42:	2000      	movs	r0, #0
 8007f44:	491a      	ldr	r1, [pc, #104]	; (8007fb0 <__ieee754_pow+0xa08>)
 8007f46:	f7ff bb8f 	b.w	8007668 <__ieee754_pow+0xc0>
 8007f4a:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007f4e:	f7ff bb8b 	b.w	8007668 <__ieee754_pow+0xc0>
 8007f52:	4630      	mov	r0, r6
 8007f54:	4639      	mov	r1, r7
 8007f56:	f7ff bb87 	b.w	8007668 <__ieee754_pow+0xc0>
 8007f5a:	4693      	mov	fp, r2
 8007f5c:	f7ff bb98 	b.w	8007690 <__ieee754_pow+0xe8>
 8007f60:	00000000 	.word	0x00000000
 8007f64:	3fe62e43 	.word	0x3fe62e43
 8007f68:	fefa39ef 	.word	0xfefa39ef
 8007f6c:	3fe62e42 	.word	0x3fe62e42
 8007f70:	0ca86c39 	.word	0x0ca86c39
 8007f74:	be205c61 	.word	0xbe205c61
 8007f78:	72bea4d0 	.word	0x72bea4d0
 8007f7c:	3e663769 	.word	0x3e663769
 8007f80:	c5d26bf1 	.word	0xc5d26bf1
 8007f84:	3ebbbd41 	.word	0x3ebbbd41
 8007f88:	af25de2c 	.word	0xaf25de2c
 8007f8c:	3f11566a 	.word	0x3f11566a
 8007f90:	16bebd93 	.word	0x16bebd93
 8007f94:	3f66c16c 	.word	0x3f66c16c
 8007f98:	5555553e 	.word	0x5555553e
 8007f9c:	3fc55555 	.word	0x3fc55555
 8007fa0:	c2f8f359 	.word	0xc2f8f359
 8007fa4:	01a56e1f 	.word	0x01a56e1f
 8007fa8:	3fe00000 	.word	0x3fe00000
 8007fac:	000fffff 	.word	0x000fffff
 8007fb0:	3ff00000 	.word	0x3ff00000
 8007fb4:	4090cbff 	.word	0x4090cbff
 8007fb8:	3f6f3400 	.word	0x3f6f3400
 8007fbc:	652b82fe 	.word	0x652b82fe
 8007fc0:	3c971547 	.word	0x3c971547

08007fc4 <__ieee754_sqrt>:
 8007fc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007fc8:	4955      	ldr	r1, [pc, #340]	; (8008120 <__ieee754_sqrt+0x15c>)
 8007fca:	ec55 4b10 	vmov	r4, r5, d0
 8007fce:	43a9      	bics	r1, r5
 8007fd0:	462b      	mov	r3, r5
 8007fd2:	462a      	mov	r2, r5
 8007fd4:	d112      	bne.n	8007ffc <__ieee754_sqrt+0x38>
 8007fd6:	ee10 2a10 	vmov	r2, s0
 8007fda:	ee10 0a10 	vmov	r0, s0
 8007fde:	4629      	mov	r1, r5
 8007fe0:	f7f8 fb2a 	bl	8000638 <__aeabi_dmul>
 8007fe4:	4602      	mov	r2, r0
 8007fe6:	460b      	mov	r3, r1
 8007fe8:	4620      	mov	r0, r4
 8007fea:	4629      	mov	r1, r5
 8007fec:	f7f8 f96e 	bl	80002cc <__adddf3>
 8007ff0:	4604      	mov	r4, r0
 8007ff2:	460d      	mov	r5, r1
 8007ff4:	ec45 4b10 	vmov	d0, r4, r5
 8007ff8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007ffc:	2d00      	cmp	r5, #0
 8007ffe:	ee10 0a10 	vmov	r0, s0
 8008002:	4621      	mov	r1, r4
 8008004:	dc0f      	bgt.n	8008026 <__ieee754_sqrt+0x62>
 8008006:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800800a:	4330      	orrs	r0, r6
 800800c:	d0f2      	beq.n	8007ff4 <__ieee754_sqrt+0x30>
 800800e:	b155      	cbz	r5, 8008026 <__ieee754_sqrt+0x62>
 8008010:	ee10 2a10 	vmov	r2, s0
 8008014:	4620      	mov	r0, r4
 8008016:	4629      	mov	r1, r5
 8008018:	f7f8 f956 	bl	80002c8 <__aeabi_dsub>
 800801c:	4602      	mov	r2, r0
 800801e:	460b      	mov	r3, r1
 8008020:	f7f8 fc34 	bl	800088c <__aeabi_ddiv>
 8008024:	e7e4      	b.n	8007ff0 <__ieee754_sqrt+0x2c>
 8008026:	151b      	asrs	r3, r3, #20
 8008028:	d073      	beq.n	8008112 <__ieee754_sqrt+0x14e>
 800802a:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 800802e:	07dd      	lsls	r5, r3, #31
 8008030:	f3c2 0213 	ubfx	r2, r2, #0, #20
 8008034:	bf48      	it	mi
 8008036:	0fc8      	lsrmi	r0, r1, #31
 8008038:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800803c:	bf44      	itt	mi
 800803e:	0049      	lslmi	r1, r1, #1
 8008040:	eb00 0242 	addmi.w	r2, r0, r2, lsl #1
 8008044:	2500      	movs	r5, #0
 8008046:	1058      	asrs	r0, r3, #1
 8008048:	0fcb      	lsrs	r3, r1, #31
 800804a:	eb03 0242 	add.w	r2, r3, r2, lsl #1
 800804e:	0049      	lsls	r1, r1, #1
 8008050:	2316      	movs	r3, #22
 8008052:	462c      	mov	r4, r5
 8008054:	f44f 1600 	mov.w	r6, #2097152	; 0x200000
 8008058:	19a7      	adds	r7, r4, r6
 800805a:	4297      	cmp	r7, r2
 800805c:	bfde      	ittt	le
 800805e:	19bc      	addle	r4, r7, r6
 8008060:	1bd2      	suble	r2, r2, r7
 8008062:	19ad      	addle	r5, r5, r6
 8008064:	0fcf      	lsrs	r7, r1, #31
 8008066:	3b01      	subs	r3, #1
 8008068:	eb07 0242 	add.w	r2, r7, r2, lsl #1
 800806c:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8008070:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8008074:	d1f0      	bne.n	8008058 <__ieee754_sqrt+0x94>
 8008076:	f04f 0c20 	mov.w	ip, #32
 800807a:	469e      	mov	lr, r3
 800807c:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8008080:	42a2      	cmp	r2, r4
 8008082:	eb06 070e 	add.w	r7, r6, lr
 8008086:	dc02      	bgt.n	800808e <__ieee754_sqrt+0xca>
 8008088:	d112      	bne.n	80080b0 <__ieee754_sqrt+0xec>
 800808a:	428f      	cmp	r7, r1
 800808c:	d810      	bhi.n	80080b0 <__ieee754_sqrt+0xec>
 800808e:	2f00      	cmp	r7, #0
 8008090:	eb07 0e06 	add.w	lr, r7, r6
 8008094:	da42      	bge.n	800811c <__ieee754_sqrt+0x158>
 8008096:	f1be 0f00 	cmp.w	lr, #0
 800809a:	db3f      	blt.n	800811c <__ieee754_sqrt+0x158>
 800809c:	f104 0801 	add.w	r8, r4, #1
 80080a0:	1b12      	subs	r2, r2, r4
 80080a2:	428f      	cmp	r7, r1
 80080a4:	bf88      	it	hi
 80080a6:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80080aa:	1bc9      	subs	r1, r1, r7
 80080ac:	4433      	add	r3, r6
 80080ae:	4644      	mov	r4, r8
 80080b0:	0052      	lsls	r2, r2, #1
 80080b2:	f1bc 0c01 	subs.w	ip, ip, #1
 80080b6:	eb02 72d1 	add.w	r2, r2, r1, lsr #31
 80080ba:	ea4f 0656 	mov.w	r6, r6, lsr #1
 80080be:	ea4f 0141 	mov.w	r1, r1, lsl #1
 80080c2:	d1dd      	bne.n	8008080 <__ieee754_sqrt+0xbc>
 80080c4:	430a      	orrs	r2, r1
 80080c6:	d006      	beq.n	80080d6 <__ieee754_sqrt+0x112>
 80080c8:	1c5c      	adds	r4, r3, #1
 80080ca:	bf13      	iteet	ne
 80080cc:	3301      	addne	r3, #1
 80080ce:	3501      	addeq	r5, #1
 80080d0:	4663      	moveq	r3, ip
 80080d2:	f023 0301 	bicne.w	r3, r3, #1
 80080d6:	106a      	asrs	r2, r5, #1
 80080d8:	085b      	lsrs	r3, r3, #1
 80080da:	07e9      	lsls	r1, r5, #31
 80080dc:	f102 527f 	add.w	r2, r2, #1069547520	; 0x3fc00000
 80080e0:	f502 1200 	add.w	r2, r2, #2097152	; 0x200000
 80080e4:	bf48      	it	mi
 80080e6:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 80080ea:	eb02 5500 	add.w	r5, r2, r0, lsl #20
 80080ee:	461c      	mov	r4, r3
 80080f0:	e780      	b.n	8007ff4 <__ieee754_sqrt+0x30>
 80080f2:	0aca      	lsrs	r2, r1, #11
 80080f4:	3815      	subs	r0, #21
 80080f6:	0549      	lsls	r1, r1, #21
 80080f8:	2a00      	cmp	r2, #0
 80080fa:	d0fa      	beq.n	80080f2 <__ieee754_sqrt+0x12e>
 80080fc:	02d6      	lsls	r6, r2, #11
 80080fe:	d50a      	bpl.n	8008116 <__ieee754_sqrt+0x152>
 8008100:	f1c3 0420 	rsb	r4, r3, #32
 8008104:	fa21 f404 	lsr.w	r4, r1, r4
 8008108:	1e5d      	subs	r5, r3, #1
 800810a:	4099      	lsls	r1, r3
 800810c:	4322      	orrs	r2, r4
 800810e:	1b43      	subs	r3, r0, r5
 8008110:	e78b      	b.n	800802a <__ieee754_sqrt+0x66>
 8008112:	4618      	mov	r0, r3
 8008114:	e7f0      	b.n	80080f8 <__ieee754_sqrt+0x134>
 8008116:	0052      	lsls	r2, r2, #1
 8008118:	3301      	adds	r3, #1
 800811a:	e7ef      	b.n	80080fc <__ieee754_sqrt+0x138>
 800811c:	46a0      	mov	r8, r4
 800811e:	e7bf      	b.n	80080a0 <__ieee754_sqrt+0xdc>
 8008120:	7ff00000 	.word	0x7ff00000

08008124 <fabs>:
 8008124:	ec51 0b10 	vmov	r0, r1, d0
 8008128:	ee10 2a10 	vmov	r2, s0
 800812c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8008130:	ec43 2b10 	vmov	d0, r2, r3
 8008134:	4770      	bx	lr

08008136 <finite>:
 8008136:	ee10 3a90 	vmov	r3, s1
 800813a:	f043 4000 	orr.w	r0, r3, #2147483648	; 0x80000000
 800813e:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8008142:	0fc0      	lsrs	r0, r0, #31
 8008144:	4770      	bx	lr

08008146 <matherr>:
 8008146:	2000      	movs	r0, #0
 8008148:	4770      	bx	lr
 800814a:	0000      	movs	r0, r0
 800814c:	0000      	movs	r0, r0
	...

08008150 <nan>:
 8008150:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8008158 <nan+0x8>
 8008154:	4770      	bx	lr
 8008156:	bf00      	nop
 8008158:	00000000 	.word	0x00000000
 800815c:	7ff80000 	.word	0x7ff80000

08008160 <rint>:
 8008160:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008162:	ec51 0b10 	vmov	r0, r1, d0
 8008166:	f3c1 520a 	ubfx	r2, r1, #20, #11
 800816a:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 800816e:	2e13      	cmp	r6, #19
 8008170:	460b      	mov	r3, r1
 8008172:	ee10 4a10 	vmov	r4, s0
 8008176:	ea4f 75d1 	mov.w	r5, r1, lsr #31
 800817a:	dc56      	bgt.n	800822a <rint+0xca>
 800817c:	2e00      	cmp	r6, #0
 800817e:	da2b      	bge.n	80081d8 <rint+0x78>
 8008180:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 8008184:	4302      	orrs	r2, r0
 8008186:	d023      	beq.n	80081d0 <rint+0x70>
 8008188:	f3c1 0213 	ubfx	r2, r1, #0, #20
 800818c:	4302      	orrs	r2, r0
 800818e:	4254      	negs	r4, r2
 8008190:	4314      	orrs	r4, r2
 8008192:	0c4b      	lsrs	r3, r1, #17
 8008194:	0b24      	lsrs	r4, r4, #12
 8008196:	045b      	lsls	r3, r3, #17
 8008198:	f404 2400 	and.w	r4, r4, #524288	; 0x80000
 800819c:	ea44 0103 	orr.w	r1, r4, r3
 80081a0:	460b      	mov	r3, r1
 80081a2:	492f      	ldr	r1, [pc, #188]	; (8008260 <rint+0x100>)
 80081a4:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
 80081a8:	e9d1 6700 	ldrd	r6, r7, [r1]
 80081ac:	4602      	mov	r2, r0
 80081ae:	4639      	mov	r1, r7
 80081b0:	4630      	mov	r0, r6
 80081b2:	f7f8 f88b 	bl	80002cc <__adddf3>
 80081b6:	e9cd 0100 	strd	r0, r1, [sp]
 80081ba:	463b      	mov	r3, r7
 80081bc:	4632      	mov	r2, r6
 80081be:	e9dd 0100 	ldrd	r0, r1, [sp]
 80081c2:	f7f8 f881 	bl	80002c8 <__aeabi_dsub>
 80081c6:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80081ca:	ea43 77c5 	orr.w	r7, r3, r5, lsl #31
 80081ce:	4639      	mov	r1, r7
 80081d0:	ec41 0b10 	vmov	d0, r0, r1
 80081d4:	b003      	add	sp, #12
 80081d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80081d8:	4a22      	ldr	r2, [pc, #136]	; (8008264 <rint+0x104>)
 80081da:	4132      	asrs	r2, r6
 80081dc:	ea01 0702 	and.w	r7, r1, r2
 80081e0:	4307      	orrs	r7, r0
 80081e2:	d0f5      	beq.n	80081d0 <rint+0x70>
 80081e4:	0852      	lsrs	r2, r2, #1
 80081e6:	4011      	ands	r1, r2
 80081e8:	430c      	orrs	r4, r1
 80081ea:	d00b      	beq.n	8008204 <rint+0xa4>
 80081ec:	ea23 0202 	bic.w	r2, r3, r2
 80081f0:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 80081f4:	2e13      	cmp	r6, #19
 80081f6:	fa43 f306 	asr.w	r3, r3, r6
 80081fa:	bf0c      	ite	eq
 80081fc:	f04f 4400 	moveq.w	r4, #2147483648	; 0x80000000
 8008200:	2400      	movne	r4, #0
 8008202:	4313      	orrs	r3, r2
 8008204:	4916      	ldr	r1, [pc, #88]	; (8008260 <rint+0x100>)
 8008206:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
 800820a:	4622      	mov	r2, r4
 800820c:	e9d5 4500 	ldrd	r4, r5, [r5]
 8008210:	4620      	mov	r0, r4
 8008212:	4629      	mov	r1, r5
 8008214:	f7f8 f85a 	bl	80002cc <__adddf3>
 8008218:	e9cd 0100 	strd	r0, r1, [sp]
 800821c:	4622      	mov	r2, r4
 800821e:	462b      	mov	r3, r5
 8008220:	e9dd 0100 	ldrd	r0, r1, [sp]
 8008224:	f7f8 f850 	bl	80002c8 <__aeabi_dsub>
 8008228:	e7d2      	b.n	80081d0 <rint+0x70>
 800822a:	2e33      	cmp	r6, #51	; 0x33
 800822c:	dd07      	ble.n	800823e <rint+0xde>
 800822e:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8008232:	d1cd      	bne.n	80081d0 <rint+0x70>
 8008234:	ee10 2a10 	vmov	r2, s0
 8008238:	f7f8 f848 	bl	80002cc <__adddf3>
 800823c:	e7c8      	b.n	80081d0 <rint+0x70>
 800823e:	f2a2 4613 	subw	r6, r2, #1043	; 0x413
 8008242:	f04f 32ff 	mov.w	r2, #4294967295
 8008246:	40f2      	lsrs	r2, r6
 8008248:	4210      	tst	r0, r2
 800824a:	d0c1      	beq.n	80081d0 <rint+0x70>
 800824c:	0852      	lsrs	r2, r2, #1
 800824e:	4210      	tst	r0, r2
 8008250:	bf1f      	itttt	ne
 8008252:	f04f 4480 	movne.w	r4, #1073741824	; 0x40000000
 8008256:	ea20 0202 	bicne.w	r2, r0, r2
 800825a:	4134      	asrne	r4, r6
 800825c:	4314      	orrne	r4, r2
 800825e:	e7d1      	b.n	8008204 <rint+0xa4>
 8008260:	08008b60 	.word	0x08008b60
 8008264:	000fffff 	.word	0x000fffff

08008268 <scalbn>:
 8008268:	b570      	push	{r4, r5, r6, lr}
 800826a:	ec55 4b10 	vmov	r4, r5, d0
 800826e:	f3c5 520a 	ubfx	r2, r5, #20, #11
 8008272:	4606      	mov	r6, r0
 8008274:	462b      	mov	r3, r5
 8008276:	b9aa      	cbnz	r2, 80082a4 <scalbn+0x3c>
 8008278:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800827c:	4323      	orrs	r3, r4
 800827e:	d03b      	beq.n	80082f8 <scalbn+0x90>
 8008280:	4b31      	ldr	r3, [pc, #196]	; (8008348 <scalbn+0xe0>)
 8008282:	4629      	mov	r1, r5
 8008284:	2200      	movs	r2, #0
 8008286:	ee10 0a10 	vmov	r0, s0
 800828a:	f7f8 f9d5 	bl	8000638 <__aeabi_dmul>
 800828e:	4b2f      	ldr	r3, [pc, #188]	; (800834c <scalbn+0xe4>)
 8008290:	429e      	cmp	r6, r3
 8008292:	4604      	mov	r4, r0
 8008294:	460d      	mov	r5, r1
 8008296:	da12      	bge.n	80082be <scalbn+0x56>
 8008298:	a327      	add	r3, pc, #156	; (adr r3, 8008338 <scalbn+0xd0>)
 800829a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800829e:	f7f8 f9cb 	bl	8000638 <__aeabi_dmul>
 80082a2:	e009      	b.n	80082b8 <scalbn+0x50>
 80082a4:	f240 71ff 	movw	r1, #2047	; 0x7ff
 80082a8:	428a      	cmp	r2, r1
 80082aa:	d10c      	bne.n	80082c6 <scalbn+0x5e>
 80082ac:	ee10 2a10 	vmov	r2, s0
 80082b0:	4620      	mov	r0, r4
 80082b2:	4629      	mov	r1, r5
 80082b4:	f7f8 f80a 	bl	80002cc <__adddf3>
 80082b8:	4604      	mov	r4, r0
 80082ba:	460d      	mov	r5, r1
 80082bc:	e01c      	b.n	80082f8 <scalbn+0x90>
 80082be:	f3c1 520a 	ubfx	r2, r1, #20, #11
 80082c2:	460b      	mov	r3, r1
 80082c4:	3a36      	subs	r2, #54	; 0x36
 80082c6:	4432      	add	r2, r6
 80082c8:	f240 71fe 	movw	r1, #2046	; 0x7fe
 80082cc:	428a      	cmp	r2, r1
 80082ce:	dd0b      	ble.n	80082e8 <scalbn+0x80>
 80082d0:	ec45 4b11 	vmov	d1, r4, r5
 80082d4:	ed9f 0b1a 	vldr	d0, [pc, #104]	; 8008340 <scalbn+0xd8>
 80082d8:	f000 f83c 	bl	8008354 <copysign>
 80082dc:	a318      	add	r3, pc, #96	; (adr r3, 8008340 <scalbn+0xd8>)
 80082de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80082e2:	ec51 0b10 	vmov	r0, r1, d0
 80082e6:	e7da      	b.n	800829e <scalbn+0x36>
 80082e8:	2a00      	cmp	r2, #0
 80082ea:	dd08      	ble.n	80082fe <scalbn+0x96>
 80082ec:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80082f0:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80082f4:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 80082f8:	ec45 4b10 	vmov	d0, r4, r5
 80082fc:	bd70      	pop	{r4, r5, r6, pc}
 80082fe:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8008302:	da0d      	bge.n	8008320 <scalbn+0xb8>
 8008304:	f24c 3350 	movw	r3, #50000	; 0xc350
 8008308:	429e      	cmp	r6, r3
 800830a:	ec45 4b11 	vmov	d1, r4, r5
 800830e:	dce1      	bgt.n	80082d4 <scalbn+0x6c>
 8008310:	ed9f 0b09 	vldr	d0, [pc, #36]	; 8008338 <scalbn+0xd0>
 8008314:	f000 f81e 	bl	8008354 <copysign>
 8008318:	a307      	add	r3, pc, #28	; (adr r3, 8008338 <scalbn+0xd0>)
 800831a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800831e:	e7e0      	b.n	80082e2 <scalbn+0x7a>
 8008320:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8008324:	3236      	adds	r2, #54	; 0x36
 8008326:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800832a:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 800832e:	4620      	mov	r0, r4
 8008330:	4629      	mov	r1, r5
 8008332:	2200      	movs	r2, #0
 8008334:	4b06      	ldr	r3, [pc, #24]	; (8008350 <scalbn+0xe8>)
 8008336:	e7b2      	b.n	800829e <scalbn+0x36>
 8008338:	c2f8f359 	.word	0xc2f8f359
 800833c:	01a56e1f 	.word	0x01a56e1f
 8008340:	8800759c 	.word	0x8800759c
 8008344:	7e37e43c 	.word	0x7e37e43c
 8008348:	43500000 	.word	0x43500000
 800834c:	ffff3cb0 	.word	0xffff3cb0
 8008350:	3c900000 	.word	0x3c900000

08008354 <copysign>:
 8008354:	ec51 0b10 	vmov	r0, r1, d0
 8008358:	ee11 0a90 	vmov	r0, s3
 800835c:	ee10 2a10 	vmov	r2, s0
 8008360:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8008364:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8008368:	ea41 0300 	orr.w	r3, r1, r0
 800836c:	ec43 2b10 	vmov	d0, r2, r3
 8008370:	4770      	bx	lr
	...

08008374 <_init>:
 8008374:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008376:	bf00      	nop
 8008378:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800837a:	bc08      	pop	{r3}
 800837c:	469e      	mov	lr, r3
 800837e:	4770      	bx	lr

08008380 <_fini>:
 8008380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008382:	bf00      	nop
 8008384:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008386:	bc08      	pop	{r3}
 8008388:	469e      	mov	lr, r3
 800838a:	4770      	bx	lr
